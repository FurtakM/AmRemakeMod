// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29679 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2785 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30104 0 0
// PreparePatrol ;
 103: CALL 889 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 5103 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 5166 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 0
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defcon_wave := 0 ;
 556: LD_ADDR_EXP 19
 560: PUSH
 561: LD_INT 0
 563: ST_TO_ADDR
// defenders := [ ] ;
 564: LD_ADDR_EXP 17
 568: PUSH
 569: EMPTY
 570: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 571: LD_INT 5
 573: PPUSH
 574: LD_STRING alpha
 576: PPUSH
 577: CALL_OW 500
// uc_side := 1 ;
 581: LD_ADDR_OWVAR 20
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// uc_nation := 1 ;
 589: LD_ADDR_OWVAR 21
 593: PUSH
 594: LD_INT 1
 596: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 597: LD_ADDR_EXP 13
 601: PUSH
 602: LD_STRING Powell
 604: PPUSH
 605: CALL_OW 25
 609: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 610: LD_EXP 13
 614: PPUSH
 615: LD_INT 110
 617: PPUSH
 618: LD_INT 26
 620: PPUSH
 621: LD_INT 0
 623: PPUSH
 624: CALL_OW 48
// ComHold ( Powell ) ;
 628: LD_EXP 13
 632: PPUSH
 633: CALL_OW 140
// for i = 1 to 5 do
 637: LD_ADDR_VAR 0 2
 641: PUSH
 642: DOUBLE
 643: LD_INT 1
 645: DEC
 646: ST_TO_ADDR
 647: LD_INT 5
 649: PUSH
 650: FOR_TO
 651: IFFALSE 707
// begin PrepareHuman ( false , 1 , 10 ) ;
 653: LD_INT 0
 655: PPUSH
 656: LD_INT 1
 658: PPUSH
 659: LD_INT 10
 661: PPUSH
 662: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 666: LD_ADDR_EXP 16
 670: PUSH
 671: LD_EXP 16
 675: PPUSH
 676: LD_INT 1
 678: PPUSH
 679: CALL_OW 44
 683: PPUSH
 684: CALL_OW 2
 688: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 689: LD_EXP 16
 693: PUSH
 694: LD_INT 1
 696: ARRAY
 697: PPUSH
 698: LD_INT 18
 700: PPUSH
 701: CALL_OW 52
// end ;
 705: GO 650
 707: POP
 708: POP
// if Difficulty > 2 then
 709: LD_OWVAR 67
 713: PUSH
 714: LD_INT 2
 716: GREATER
 717: IFFALSE 766
// begin bc_type := b_turret ;
 719: LD_ADDR_OWVAR 42
 723: PUSH
 724: LD_INT 33
 726: ST_TO_ADDR
// bc_level := 7 ;
 727: LD_ADDR_OWVAR 43
 731: PUSH
 732: LD_INT 7
 734: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 735: LD_ADDR_VAR 0 4
 739: PUSH
 740: LD_INT 107
 742: PPUSH
 743: LD_INT 55
 745: PPUSH
 746: LD_INT 5
 748: PPUSH
 749: CALL_OW 47
 753: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 754: LD_VAR 0 4
 758: PPUSH
 759: LD_INT 7
 761: PPUSH
 762: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 766: LD_ADDR_VAR 0 2
 770: PUSH
 771: LD_INT 22
 773: PUSH
 774: LD_INT 1
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: PUSH
 781: LD_INT 30
 783: PUSH
 784: LD_INT 3
 786: PUSH
 787: EMPTY
 788: LIST
 789: LIST
 790: PUSH
 791: EMPTY
 792: LIST
 793: LIST
 794: PPUSH
 795: CALL_OW 69
 799: PUSH
 800: LD_INT 22
 802: PUSH
 803: LD_INT 1
 805: PUSH
 806: EMPTY
 807: LIST
 808: LIST
 809: PUSH
 810: LD_INT 30
 812: PUSH
 813: LD_INT 36
 815: PUSH
 816: EMPTY
 817: LIST
 818: LIST
 819: PUSH
 820: EMPTY
 821: LIST
 822: LIST
 823: PPUSH
 824: CALL_OW 69
 828: ADD
 829: PUSH
 830: FOR_IN
 831: IFFALSE 882
// for j = 1 to 3 do
 833: LD_ADDR_VAR 0 3
 837: PUSH
 838: DOUBLE
 839: LD_INT 1
 841: DEC
 842: ST_TO_ADDR
 843: LD_INT 3
 845: PUSH
 846: FOR_TO
 847: IFFALSE 878
// begin PrepareHuman ( false , 3 , 6 ) ;
 849: LD_INT 0
 851: PPUSH
 852: LD_INT 3
 854: PPUSH
 855: LD_INT 6
 857: PPUSH
 858: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 862: CALL_OW 44
 866: PPUSH
 867: LD_VAR 0 2
 871: PPUSH
 872: CALL_OW 52
// end ;
 876: GO 846
 878: POP
 879: POP
 880: GO 830
 882: POP
 883: POP
// end ;
 884: LD_VAR 0 1
 888: RET
// export function PreparePatrol ; var i , un ; begin
 889: LD_INT 0
 891: PPUSH
 892: PPUSH
 893: PPUSH
// uc_side := 1 ;
 894: LD_ADDR_OWVAR 20
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// uc_nation := 1 ;
 902: LD_ADDR_OWVAR 21
 906: PUSH
 907: LD_INT 1
 909: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 910: LD_ADDR_EXP 15
 914: PUSH
 915: LD_INT 99
 917: PUSH
 918: LD_INT 55
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PUSH
 925: LD_INT 113
 927: PUSH
 928: LD_INT 67
 930: PUSH
 931: EMPTY
 932: LIST
 933: LIST
 934: PUSH
 935: LD_INT 129
 937: PUSH
 938: LD_INT 68
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PUSH
 945: LD_INT 135
 947: PUSH
 948: LD_INT 62
 950: PUSH
 951: EMPTY
 952: LIST
 953: LIST
 954: PUSH
 955: LD_INT 103
 957: PUSH
 958: LD_INT 41
 960: PUSH
 961: EMPTY
 962: LIST
 963: LIST
 964: PUSH
 965: EMPTY
 966: LIST
 967: LIST
 968: LIST
 969: LIST
 970: LIST
 971: PUSH
 972: LD_INT 27
 974: PUSH
 975: LD_INT 49
 977: PUSH
 978: EMPTY
 979: LIST
 980: LIST
 981: PUSH
 982: LD_INT 46
 984: PUSH
 985: LD_INT 49
 987: PUSH
 988: EMPTY
 989: LIST
 990: LIST
 991: PUSH
 992: LD_INT 87
 994: PUSH
 995: LD_INT 70
 997: PUSH
 998: EMPTY
 999: LIST
1000: LIST
1001: PUSH
1002: LD_INT 99
1004: PUSH
1005: LD_INT 79
1007: PUSH
1008: EMPTY
1009: LIST
1010: LIST
1011: PUSH
1012: LD_INT 118
1014: PUSH
1015: LD_INT 111
1017: PUSH
1018: EMPTY
1019: LIST
1020: LIST
1021: PUSH
1022: LD_INT 99
1024: PUSH
1025: LD_INT 79
1027: PUSH
1028: EMPTY
1029: LIST
1030: LIST
1031: PUSH
1032: LD_INT 87
1034: PUSH
1035: LD_INT 70
1037: PUSH
1038: EMPTY
1039: LIST
1040: LIST
1041: PUSH
1042: LD_INT 46
1044: PUSH
1045: LD_INT 49
1047: PUSH
1048: EMPTY
1049: LIST
1050: LIST
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: LIST
1056: LIST
1057: LIST
1058: LIST
1059: LIST
1060: LIST
1061: PUSH
1062: LD_INT 200
1064: PUSH
1065: LD_INT 88
1067: PUSH
1068: EMPTY
1069: LIST
1070: LIST
1071: PUSH
1072: LD_INT 175
1074: PUSH
1075: LD_INT 80
1077: PUSH
1078: EMPTY
1079: LIST
1080: LIST
1081: PUSH
1082: LD_INT 135
1084: PUSH
1085: LD_INT 62
1087: PUSH
1088: EMPTY
1089: LIST
1090: LIST
1091: PUSH
1092: LD_INT 117
1094: PUSH
1095: LD_INT 53
1097: PUSH
1098: EMPTY
1099: LIST
1100: LIST
1101: PUSH
1102: LD_INT 103
1104: PUSH
1105: LD_INT 41
1107: PUSH
1108: EMPTY
1109: LIST
1110: LIST
1111: PUSH
1112: LD_INT 99
1114: PUSH
1115: LD_INT 24
1117: PUSH
1118: EMPTY
1119: LIST
1120: LIST
1121: PUSH
1122: LD_INT 85
1124: PUSH
1125: LD_INT 3
1127: PUSH
1128: EMPTY
1129: LIST
1130: LIST
1131: PUSH
1132: LD_INT 99
1134: PUSH
1135: LD_INT 24
1137: PUSH
1138: EMPTY
1139: LIST
1140: LIST
1141: PUSH
1142: LD_INT 103
1144: PUSH
1145: LD_INT 41
1147: PUSH
1148: EMPTY
1149: LIST
1150: LIST
1151: PUSH
1152: LD_INT 98
1154: PUSH
1155: LD_INT 47
1157: PUSH
1158: EMPTY
1159: LIST
1160: LIST
1161: PUSH
1162: LD_INT 99
1164: PUSH
1165: LD_INT 56
1167: PUSH
1168: EMPTY
1169: LIST
1170: LIST
1171: PUSH
1172: LD_INT 96
1174: PUSH
1175: LD_INT 66
1177: PUSH
1178: EMPTY
1179: LIST
1180: LIST
1181: PUSH
1182: LD_INT 99
1184: PUSH
1185: LD_INT 56
1187: PUSH
1188: EMPTY
1189: LIST
1190: LIST
1191: PUSH
1192: LD_INT 112
1194: PUSH
1195: LD_INT 66
1197: PUSH
1198: EMPTY
1199: LIST
1200: LIST
1201: PUSH
1202: LD_INT 129
1204: PUSH
1205: LD_INT 68
1207: PUSH
1208: EMPTY
1209: LIST
1210: LIST
1211: PUSH
1212: LD_INT 135
1214: PUSH
1215: LD_INT 62
1217: PUSH
1218: EMPTY
1219: LIST
1220: LIST
1221: PUSH
1222: LD_INT 156
1224: PUSH
1225: LD_INT 71
1227: PUSH
1228: EMPTY
1229: LIST
1230: LIST
1231: PUSH
1232: LD_INT 168
1234: PUSH
1235: LD_INT 76
1237: PUSH
1238: EMPTY
1239: LIST
1240: LIST
1241: PUSH
1242: LD_INT 168
1244: PUSH
1245: LD_INT 61
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: PUSH
1252: LD_INT 168
1254: PUSH
1255: LD_INT 75
1257: PUSH
1258: EMPTY
1259: LIST
1260: LIST
1261: PUSH
1262: LD_INT 185
1264: PUSH
1265: LD_INT 85
1267: PUSH
1268: EMPTY
1269: LIST
1270: LIST
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: LIST
1287: LIST
1288: LIST
1289: LIST
1290: LIST
1291: LIST
1292: LIST
1293: LIST
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: ST_TO_ADDR
// mobile_patrol := [ ] ;
1300: LD_ADDR_EXP 14
1304: PUSH
1305: EMPTY
1306: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1307: LD_INT 3
1309: PPUSH
1310: LD_INT 1
1312: PPUSH
1313: LD_INT 3
1315: PPUSH
1316: LD_INT 4
1318: PPUSH
1319: LD_INT 100
1321: PPUSH
1322: CALL 5166 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1326: LD_ADDR_EXP 14
1330: PUSH
1331: LD_EXP 14
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: CALL_OW 45
1343: PPUSH
1344: CALL_OW 2
1348: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1349: LD_EXP 14
1353: PUSH
1354: LD_INT 1
1356: ARRAY
1357: PPUSH
1358: LD_INT 99
1360: PPUSH
1361: LD_INT 55
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1371: LD_INT 2
1373: PPUSH
1374: LD_INT 1
1376: PPUSH
1377: LD_INT 3
1379: PPUSH
1380: LD_INT 4
1382: PPUSH
1383: LD_INT 100
1385: PPUSH
1386: CALL 5166 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1390: LD_ADDR_EXP 14
1394: PUSH
1395: LD_EXP 14
1399: PPUSH
1400: LD_INT 2
1402: PPUSH
1403: CALL_OW 45
1407: PPUSH
1408: CALL_OW 2
1412: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1413: LD_EXP 14
1417: PUSH
1418: LD_INT 2
1420: ARRAY
1421: PPUSH
1422: LD_INT 27
1424: PPUSH
1425: LD_INT 49
1427: PPUSH
1428: LD_INT 0
1430: PPUSH
1431: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1435: LD_INT 3
1437: PPUSH
1438: LD_INT 1
1440: PPUSH
1441: LD_INT 3
1443: PPUSH
1444: LD_INT 7
1446: PPUSH
1447: LD_INT 100
1449: PPUSH
1450: CALL 5166 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1454: LD_ADDR_EXP 14
1458: PUSH
1459: LD_EXP 14
1463: PPUSH
1464: LD_INT 3
1466: PPUSH
1467: CALL_OW 45
1471: PPUSH
1472: CALL_OW 2
1476: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1477: LD_EXP 14
1481: PUSH
1482: LD_INT 3
1484: ARRAY
1485: PPUSH
1486: LD_INT 200
1488: PPUSH
1489: LD_INT 88
1491: PPUSH
1492: LD_INT 0
1494: PPUSH
1495: CALL_OW 48
// for i = mobile_patrol downto 1 do
1499: LD_ADDR_VAR 0 2
1503: PUSH
1504: DOUBLE
1505: LD_EXP 14
1509: INC
1510: ST_TO_ADDR
1511: LD_INT 1
1513: PUSH
1514: FOR_DOWNTO
1515: IFFALSE 1526
// RaiseSailEvent ( 1 ) ;
1517: LD_INT 1
1519: PPUSH
1520: CALL_OW 427
1524: GO 1514
1526: POP
1527: POP
// end ;
1528: LD_VAR 0 1
1532: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1533: LD_INT 0
1535: PPUSH
1536: PPUSH
1537: PPUSH
1538: PPUSH
1539: PPUSH
1540: PPUSH
1541: PPUSH
1542: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1543: LD_ADDR_VAR 0 5
1547: PUSH
1548: LD_INT 20
1550: PUSH
1551: LD_INT 4
1553: PUSH
1554: EMPTY
1555: LIST
1556: LIST
1557: PUSH
1558: LD_INT 21
1560: PUSH
1561: LD_INT 5
1563: PUSH
1564: EMPTY
1565: LIST
1566: LIST
1567: PUSH
1568: LD_INT 22
1570: PUSH
1571: LD_INT 1
1573: PUSH
1574: EMPTY
1575: LIST
1576: LIST
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: LIST
1582: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1583: LD_ADDR_VAR 0 6
1587: PUSH
1588: LD_INT 176
1590: PUSH
1591: LD_INT 81
1593: PUSH
1594: LD_INT 135
1596: PUSH
1597: LD_INT 62
1599: PUSH
1600: LD_INT 114
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 93
1608: PUSH
1609: LD_INT 71
1611: PUSH
1612: LD_INT 76
1614: PUSH
1615: LD_INT 67
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: LIST
1622: LIST
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: PUSH
1630: LD_INT 107
1632: PUSH
1633: LD_INT 92
1635: PUSH
1636: LD_INT 92
1638: PUSH
1639: LD_INT 72
1641: PUSH
1642: LD_INT 77
1644: PUSH
1645: LD_INT 68
1647: PUSH
1648: EMPTY
1649: LIST
1650: LIST
1651: LIST
1652: LIST
1653: LIST
1654: LIST
1655: PUSH
1656: LD_INT 45
1658: PUSH
1659: LD_INT 49
1661: PUSH
1662: LD_INT 67
1664: PUSH
1665: LD_INT 59
1667: PUSH
1668: LD_INT 77
1670: PUSH
1671: LD_INT 68
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: LIST
1679: LIST
1680: LIST
1681: PUSH
1682: EMPTY
1683: LIST
1684: LIST
1685: LIST
1686: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1687: LD_ADDR_VAR 0 4
1691: PUSH
1692: LD_INT 1
1694: PPUSH
1695: LD_VAR 0 5
1699: PPUSH
1700: CALL_OW 12
1704: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1705: LD_ADDR_VAR 0 3
1709: PUSH
1710: LD_INT 1
1712: PPUSH
1713: LD_INT 2
1715: PPUSH
1716: CALL_OW 12
1720: ST_TO_ADDR
// uc_side := 1 ;
1721: LD_ADDR_OWVAR 20
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// uc_nation := 1 ;
1729: LD_ADDR_OWVAR 21
1733: PUSH
1734: LD_INT 1
1736: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1737: LD_INT 2
1739: PPUSH
1740: LD_INT 3
1742: PPUSH
1743: LD_INT 3
1745: PPUSH
1746: LD_INT 12
1748: PPUSH
1749: LD_INT 100
1751: PPUSH
1752: CALL 5166 0 5
// veh := CreateVehicle ;
1756: LD_ADDR_VAR 0 8
1760: PUSH
1761: CALL_OW 45
1765: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1766: LD_VAR 0 8
1770: PPUSH
1771: LD_VAR 0 5
1775: PUSH
1776: LD_VAR 0 4
1780: ARRAY
1781: PUSH
1782: LD_INT 2
1784: ARRAY
1785: PPUSH
1786: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1790: LD_VAR 0 8
1794: PPUSH
1795: LD_VAR 0 5
1799: PUSH
1800: LD_VAR 0 4
1804: ARRAY
1805: PUSH
1806: LD_INT 1
1808: ARRAY
1809: PPUSH
1810: LD_INT 0
1812: PPUSH
1813: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1817: LD_VAR 0 8
1821: PPUSH
1822: LD_INT 1
1824: PUSH
1825: LD_INT 3
1827: PUSH
1828: EMPTY
1829: LIST
1830: LIST
1831: PUSH
1832: LD_VAR 0 3
1836: ARRAY
1837: PPUSH
1838: LD_INT 100
1840: PPUSH
1841: CALL_OW 290
// tmp := road [ k ] ;
1845: LD_ADDR_VAR 0 7
1849: PUSH
1850: LD_VAR 0 6
1854: PUSH
1855: LD_VAR 0 4
1859: ARRAY
1860: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1861: LD_ADDR_VAR 0 2
1865: PUSH
1866: DOUBLE
1867: LD_INT 1
1869: DEC
1870: ST_TO_ADDR
1871: LD_VAR 0 7
1875: PUSH
1876: LD_INT 2
1878: DIV
1879: PUSH
1880: FOR_TO
1881: IFFALSE 1928
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_VAR 0 7
1892: PUSH
1893: LD_VAR 0 2
1897: PUSH
1898: LD_INT 2
1900: MUL
1901: PUSH
1902: LD_INT 1
1904: MINUS
1905: ARRAY
1906: PPUSH
1907: LD_VAR 0 7
1911: PUSH
1912: LD_VAR 0 2
1916: PUSH
1917: LD_INT 2
1919: MUL
1920: ARRAY
1921: PPUSH
1922: CALL_OW 171
1926: GO 1880
1928: POP
1929: POP
// AddComGive ( veh , alfa ) ;
1930: LD_VAR 0 8
1934: PPUSH
1935: LD_INT 5
1937: PPUSH
1938: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1942: LD_VAR 0 8
1946: PPUSH
1947: LD_INT 70
1949: PPUSH
1950: CALL_OW 202
// for i = tmp div 2 downto 1 do
1954: LD_ADDR_VAR 0 2
1958: PUSH
1959: DOUBLE
1960: LD_VAR 0 7
1964: PUSH
1965: LD_INT 2
1967: DIV
1968: INC
1969: ST_TO_ADDR
1970: LD_INT 1
1972: PUSH
1973: FOR_DOWNTO
1974: IFFALSE 2021
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1976: LD_VAR 0 8
1980: PPUSH
1981: LD_VAR 0 7
1985: PUSH
1986: LD_VAR 0 2
1990: PUSH
1991: LD_INT 2
1993: MUL
1994: PUSH
1995: LD_INT 1
1997: MINUS
1998: ARRAY
1999: PPUSH
2000: LD_VAR 0 7
2004: PUSH
2005: LD_VAR 0 2
2009: PUSH
2010: LD_INT 2
2012: MUL
2013: ARRAY
2014: PPUSH
2015: CALL_OW 171
2019: GO 1973
2021: POP
2022: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2023: LD_VAR 0 8
2027: PPUSH
2028: LD_VAR 0 5
2032: PUSH
2033: LD_VAR 0 4
2037: ARRAY
2038: PUSH
2039: LD_INT 1
2041: ARRAY
2042: PPUSH
2043: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2047: LD_INT 35
2049: PPUSH
2050: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2054: LD_VAR 0 8
2058: PPUSH
2059: LD_VAR 0 5
2063: PUSH
2064: LD_VAR 0 4
2068: ARRAY
2069: PUSH
2070: LD_INT 1
2072: ARRAY
2073: PPUSH
2074: CALL_OW 308
2078: PUSH
2079: LD_VAR 0 8
2083: PPUSH
2084: LD_VAR 0 3
2088: PPUSH
2089: CALL_OW 289
2093: PUSH
2094: LD_INT 0
2096: EQUAL
2097: AND
2098: IFFALSE 2047
// RemoveUnit ( veh ) ;
2100: LD_VAR 0 8
2104: PPUSH
2105: CALL_OW 64
// end ;
2109: LD_VAR 0 1
2113: RET
// every 3 3$00 do
2114: GO 2116
2116: DISABLE
// begin enable ;
2117: ENABLE
// SpawnCargo ;
2118: CALL 1533 0 0
// end ;
2122: END
// export function PrepareDefenders ; var i , tmp ; begin
2123: LD_INT 0
2125: PPUSH
2126: PPUSH
2127: PPUSH
// if defenders then
2128: LD_EXP 17
2132: IFFALSE 2136
// exit ;
2134: GO 2400
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2136: LD_ADDR_VAR 0 2
2140: PUSH
2141: DOUBLE
2142: LD_INT 1
2144: DEC
2145: ST_TO_ADDR
2146: LD_INT 4
2148: PUSH
2149: LD_INT 5
2151: PUSH
2152: LD_INT 6
2154: PUSH
2155: EMPTY
2156: LIST
2157: LIST
2158: LIST
2159: PUSH
2160: LD_OWVAR 67
2164: ARRAY
2165: PUSH
2166: FOR_TO
2167: IFFALSE 2306
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2169: LD_ADDR_VAR 0 3
2173: PUSH
2174: LD_INT 6
2176: PPUSH
2177: LD_INT 2
2179: PUSH
2180: LD_INT 3
2182: PUSH
2183: EMPTY
2184: LIST
2185: LIST
2186: PUSH
2187: LD_INT 1
2189: PPUSH
2190: LD_INT 2
2192: PPUSH
2193: CALL_OW 12
2197: ARRAY
2198: PPUSH
2199: LD_INT 1
2201: PUSH
2202: LD_INT 3
2204: PUSH
2205: EMPTY
2206: LIST
2207: LIST
2208: PUSH
2209: LD_INT 1
2211: PPUSH
2212: LD_INT 2
2214: PPUSH
2215: CALL_OW 12
2219: ARRAY
2220: PPUSH
2221: LD_INT 2
2223: PPUSH
2224: LD_INT 4
2226: PUSH
2227: LD_INT 5
2229: PUSH
2230: LD_INT 9
2232: PUSH
2233: EMPTY
2234: LIST
2235: LIST
2236: LIST
2237: PUSH
2238: LD_INT 1
2240: PPUSH
2241: LD_INT 3
2243: PPUSH
2244: CALL_OW 12
2248: ARRAY
2249: PPUSH
2250: CALL 27861 0 5
2254: ST_TO_ADDR
// if tmp then
2255: LD_VAR 0 3
2259: IFFALSE 2304
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2261: LD_INT 6
2263: PPUSH
2264: LD_VAR 0 3
2268: PUSH
2269: LD_INT 1
2271: ARRAY
2272: PPUSH
2273: LD_VAR 0 3
2277: PUSH
2278: LD_INT 2
2280: ARRAY
2281: PPUSH
2282: LD_VAR 0 3
2286: PUSH
2287: LD_INT 3
2289: ARRAY
2290: PPUSH
2291: LD_VAR 0 3
2295: PUSH
2296: LD_INT 4
2298: ARRAY
2299: PPUSH
2300: CALL_OW 185
// end ;
2304: GO 2166
2306: POP
2307: POP
// repeat wait ( 0 0$1 ) ;
2308: LD_INT 35
2310: PPUSH
2311: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2315: LD_INT 22
2317: PUSH
2318: LD_INT 1
2320: PUSH
2321: EMPTY
2322: LIST
2323: LIST
2324: PUSH
2325: LD_INT 33
2327: PUSH
2328: LD_INT 2
2330: PUSH
2331: EMPTY
2332: LIST
2333: LIST
2334: PUSH
2335: EMPTY
2336: LIST
2337: LIST
2338: PPUSH
2339: CALL_OW 69
2343: PUSH
2344: LD_INT 4
2346: PUSH
2347: LD_INT 5
2349: PUSH
2350: LD_INT 6
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: LIST
2357: PUSH
2358: LD_OWVAR 67
2362: ARRAY
2363: GREATEREQUAL
2364: IFFALSE 2308
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2366: LD_ADDR_EXP 17
2370: PUSH
2371: LD_INT 22
2373: PUSH
2374: LD_INT 1
2376: PUSH
2377: EMPTY
2378: LIST
2379: LIST
2380: PUSH
2381: LD_INT 33
2383: PUSH
2384: LD_INT 2
2386: PUSH
2387: EMPTY
2388: LIST
2389: LIST
2390: PUSH
2391: EMPTY
2392: LIST
2393: LIST
2394: PPUSH
2395: CALL_OW 69
2399: ST_TO_ADDR
// end ;
2400: LD_VAR 0 1
2404: RET
// export function Defend ; var i , un , veh , tmp ; begin
2405: LD_INT 0
2407: PPUSH
2408: PPUSH
2409: PPUSH
2410: PPUSH
2411: PPUSH
// defcon_wave := defcon_wave + 1 ;
2412: LD_ADDR_EXP 19
2416: PUSH
2417: LD_EXP 19
2421: PUSH
2422: LD_INT 1
2424: PLUS
2425: ST_TO_ADDR
// if not defenders then
2426: LD_EXP 17
2430: NOT
2431: IFFALSE 2437
// PrepareDefenders ;
2433: CALL 2123 0 0
// if defcon_wave > 1 then
2437: LD_EXP 19
2441: PUSH
2442: LD_INT 1
2444: GREATER
2445: IFFALSE 2671
// begin for i = 1 to defcon_wave + 2 do
2447: LD_ADDR_VAR 0 2
2451: PUSH
2452: DOUBLE
2453: LD_INT 1
2455: DEC
2456: ST_TO_ADDR
2457: LD_EXP 19
2461: PUSH
2462: LD_INT 2
2464: PLUS
2465: PUSH
2466: FOR_TO
2467: IFFALSE 2593
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2469: LD_INT 4
2471: PPUSH
2472: LD_INT 3
2474: PPUSH
2475: LD_INT 1
2477: PPUSH
2478: LD_INT 4
2480: PUSH
2481: LD_INT 6
2483: PUSH
2484: LD_INT 7
2486: PUSH
2487: EMPTY
2488: LIST
2489: LIST
2490: LIST
2491: PUSH
2492: LD_INT 1
2494: PPUSH
2495: LD_INT 3
2497: PPUSH
2498: CALL_OW 12
2502: ARRAY
2503: PPUSH
2504: LD_INT 100
2506: PPUSH
2507: CALL 5166 0 5
// veh := CreateVehicle ;
2511: LD_ADDR_VAR 0 4
2515: PUSH
2516: CALL_OW 45
2520: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2521: LD_VAR 0 4
2525: PPUSH
2526: LD_INT 1
2528: PPUSH
2529: CALL_OW 233
// defenders := defenders ^ veh ;
2533: LD_ADDR_EXP 17
2537: PUSH
2538: LD_EXP 17
2542: PUSH
2543: LD_VAR 0 4
2547: ADD
2548: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2549: LD_INT 0
2551: PPUSH
2552: LD_INT 3
2554: PPUSH
2555: LD_INT 9
2557: PPUSH
2558: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2562: CALL_OW 44
2566: PPUSH
2567: LD_VAR 0 4
2571: PPUSH
2572: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2576: LD_VAR 0 4
2580: PPUSH
2581: LD_INT 25
2583: PPUSH
2584: LD_INT 0
2586: PPUSH
2587: CALL_OW 49
// end ;
2591: GO 2466
2593: POP
2594: POP
// for i = 1 to defcon_wave do
2595: LD_ADDR_VAR 0 2
2599: PUSH
2600: DOUBLE
2601: LD_INT 1
2603: DEC
2604: ST_TO_ADDR
2605: LD_EXP 19
2609: PUSH
2610: FOR_TO
2611: IFFALSE 2669
// begin PrepareHuman ( false , 5 , 9 ) ;
2613: LD_INT 0
2615: PPUSH
2616: LD_INT 5
2618: PPUSH
2619: LD_INT 9
2621: PPUSH
2622: CALL_OW 380
// un := CreateHuman ;
2626: LD_ADDR_VAR 0 3
2630: PUSH
2631: CALL_OW 44
2635: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2636: LD_VAR 0 3
2640: PPUSH
2641: LD_INT 25
2643: PPUSH
2644: LD_INT 0
2646: PPUSH
2647: CALL_OW 49
// defenders := defenders ^ un ;
2651: LD_ADDR_EXP 17
2655: PUSH
2656: LD_EXP 17
2660: PUSH
2661: LD_VAR 0 3
2665: ADD
2666: ST_TO_ADDR
// end ;
2667: GO 2610
2669: POP
2670: POP
// end ; repeat wait ( 0 0$1 ) ;
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 67
// for i in defenders do
2678: LD_ADDR_VAR 0 2
2682: PUSH
2683: LD_EXP 17
2687: PUSH
2688: FOR_IN
2689: IFFALSE 2771
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2691: LD_EXP 18
2695: PUSH
2696: LD_VAR 0 2
2700: PPUSH
2701: LD_EXP 18
2705: PUSH
2706: LD_INT 1
2708: ARRAY
2709: PPUSH
2710: LD_EXP 18
2714: PUSH
2715: LD_INT 2
2717: ARRAY
2718: PPUSH
2719: CALL_OW 297
2723: PUSH
2724: LD_INT 10
2726: GREATER
2727: AND
2728: PUSH
2729: LD_VAR 0 2
2733: PPUSH
2734: CALL_OW 314
2738: NOT
2739: AND
2740: IFFALSE 2769
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2742: LD_VAR 0 2
2746: PPUSH
2747: LD_EXP 18
2751: PUSH
2752: LD_INT 1
2754: ARRAY
2755: PPUSH
2756: LD_EXP 18
2760: PUSH
2761: LD_INT 2
2763: ARRAY
2764: PPUSH
2765: CALL_OW 114
// end ;
2769: GO 2688
2771: POP
2772: POP
// until not defenders ;
2773: LD_EXP 17
2777: NOT
2778: IFFALSE 2671
// end ; end_of_file
2780: LD_VAR 0 1
2784: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2785: LD_INT 0
2787: PPUSH
2788: PPUSH
2789: PPUSH
2790: PPUSH
2791: PPUSH
2792: PPUSH
2793: PPUSH
// uc_side := 4 ;
2794: LD_ADDR_OWVAR 20
2798: PUSH
2799: LD_INT 4
2801: ST_TO_ADDR
// uc_nation := 1 ;
2802: LD_ADDR_OWVAR 21
2806: PUSH
2807: LD_INT 1
2809: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2810: LD_ADDR_EXP 34
2814: PUSH
2815: LD_STRING DeltaDoctor
2817: PPUSH
2818: LD_EXP 1
2822: NOT
2823: PPUSH
2824: LD_STRING 10c_
2826: PPUSH
2827: CALL 5103 0 3
2831: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2832: LD_ADDR_EXP 33
2836: PUSH
2837: LD_STRING Joan
2839: PPUSH
2840: LD_EXP 1
2844: NOT
2845: PPUSH
2846: LD_STRING 10c_
2848: PPUSH
2849: CALL 5103 0 3
2853: ST_TO_ADDR
// if Joan then
2854: LD_EXP 33
2858: IFFALSE 2889
// friends := Insert ( friends , friends + 1 , Joan ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_EXP 4
2869: PPUSH
2870: LD_EXP 4
2874: PUSH
2875: LD_INT 1
2877: PLUS
2878: PPUSH
2879: LD_EXP 33
2883: PPUSH
2884: CALL_OW 2
2888: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2889: LD_ADDR_EXP 32
2893: PUSH
2894: LD_STRING Simms
2896: PPUSH
2897: LD_EXP 1
2901: NOT
2902: PPUSH
2903: LD_STRING 10c_
2905: PPUSH
2906: CALL 5103 0 3
2910: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2911: LD_ADDR_EXP 31
2915: PUSH
2916: LD_STRING Kikuchi
2918: PPUSH
2919: LD_EXP 1
2923: NOT
2924: PPUSH
2925: LD_STRING 11_
2927: PPUSH
2928: CALL 5103 0 3
2932: ST_TO_ADDR
// if Kikuchi then
2933: LD_EXP 31
2937: IFFALSE 2968
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2939: LD_ADDR_EXP 4
2943: PUSH
2944: LD_EXP 4
2948: PPUSH
2949: LD_EXP 4
2953: PUSH
2954: LD_INT 1
2956: PLUS
2957: PPUSH
2958: LD_EXP 31
2962: PPUSH
2963: CALL_OW 2
2967: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2968: LD_ADDR_EXP 30
2972: PUSH
2973: LD_STRING Frank
2975: PPUSH
2976: LD_EXP 1
2980: NOT
2981: PPUSH
2982: LD_STRING 11_
2984: PPUSH
2985: CALL 5103 0 3
2989: ST_TO_ADDR
// if Frank then
2990: LD_EXP 30
2994: IFFALSE 3025
// friends := Insert ( friends , friends + 1 , Frank ) ;
2996: LD_ADDR_EXP 4
3000: PUSH
3001: LD_EXP 4
3005: PPUSH
3006: LD_EXP 4
3010: PUSH
3011: LD_INT 1
3013: PLUS
3014: PPUSH
3015: LD_EXP 30
3019: PPUSH
3020: CALL_OW 2
3024: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3025: LD_ADDR_EXP 29
3029: PUSH
3030: LD_STRING Gary
3032: PPUSH
3033: LD_EXP 1
3037: NOT
3038: PPUSH
3039: LD_STRING 11_
3041: PPUSH
3042: CALL 5103 0 3
3046: ST_TO_ADDR
// if Gary then
3047: LD_EXP 29
3051: IFFALSE 3082
// friends := Insert ( friends , friends + 1 , Gary ) ;
3053: LD_ADDR_EXP 4
3057: PUSH
3058: LD_EXP 4
3062: PPUSH
3063: LD_EXP 4
3067: PUSH
3068: LD_INT 1
3070: PLUS
3071: PPUSH
3072: LD_EXP 29
3076: PPUSH
3077: CALL_OW 2
3081: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3082: LD_ADDR_EXP 28
3086: PUSH
3087: LD_STRING Cornell
3089: PPUSH
3090: LD_EXP 1
3094: NOT
3095: PPUSH
3096: LD_STRING 11_
3098: PPUSH
3099: CALL 5103 0 3
3103: ST_TO_ADDR
// if Cornel then
3104: LD_EXP 28
3108: IFFALSE 3139
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3110: LD_ADDR_EXP 4
3114: PUSH
3115: LD_EXP 4
3119: PPUSH
3120: LD_EXP 4
3124: PUSH
3125: LD_INT 1
3127: PLUS
3128: PPUSH
3129: LD_EXP 28
3133: PPUSH
3134: CALL_OW 2
3138: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3139: LD_ADDR_EXP 27
3143: PUSH
3144: LD_STRING Houten
3146: PPUSH
3147: LD_EXP 1
3151: NOT
3152: PPUSH
3153: LD_STRING 11_
3155: PPUSH
3156: CALL 5103 0 3
3160: ST_TO_ADDR
// if Houten then
3161: LD_EXP 27
3165: IFFALSE 3196
// friends := Insert ( friends , friends + 1 , Houten ) ;
3167: LD_ADDR_EXP 4
3171: PUSH
3172: LD_EXP 4
3176: PPUSH
3177: LD_EXP 4
3181: PUSH
3182: LD_INT 1
3184: PLUS
3185: PPUSH
3186: LD_EXP 27
3190: PPUSH
3191: CALL_OW 2
3195: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3196: LD_ADDR_EXP 26
3200: PUSH
3201: LD_STRING Gladstone
3203: PPUSH
3204: LD_EXP 1
3208: NOT
3209: PPUSH
3210: LD_STRING 11_
3212: PPUSH
3213: CALL 5103 0 3
3217: ST_TO_ADDR
// if Gladstone then
3218: LD_EXP 26
3222: IFFALSE 3253
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3224: LD_ADDR_EXP 4
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: LD_EXP 4
3238: PUSH
3239: LD_INT 1
3241: PLUS
3242: PPUSH
3243: LD_EXP 26
3247: PPUSH
3248: CALL_OW 2
3252: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3253: LD_ADDR_EXP 20
3257: PUSH
3258: LD_STRING Lisa
3260: PPUSH
3261: LD_EXP 1
3265: NOT
3266: PPUSH
3267: LD_STRING 11_
3269: PPUSH
3270: CALL 5103 0 3
3274: ST_TO_ADDR
// if Lisa then
3275: LD_EXP 20
3279: IFFALSE 3304
// friends := Insert ( friends , 1 , Lisa ) ;
3281: LD_ADDR_EXP 4
3285: PUSH
3286: LD_EXP 4
3290: PPUSH
3291: LD_INT 1
3293: PPUSH
3294: LD_EXP 20
3298: PPUSH
3299: CALL_OW 2
3303: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3304: LD_ADDR_EXP 21
3308: PUSH
3309: LD_STRING Donaldson
3311: PPUSH
3312: LD_EXP 1
3316: NOT
3317: PPUSH
3318: LD_STRING 11_
3320: PPUSH
3321: CALL 5103 0 3
3325: ST_TO_ADDR
// if Donaldson then
3326: LD_EXP 21
3330: IFFALSE 3361
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: LD_EXP 21
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3361: LD_ADDR_EXP 22
3365: PUSH
3366: LD_STRING Bobby
3368: PPUSH
3369: LD_EXP 1
3373: NOT
3374: PPUSH
3375: LD_STRING 11_
3377: PPUSH
3378: CALL 5103 0 3
3382: ST_TO_ADDR
// if Bobby then
3383: LD_EXP 22
3387: IFFALSE 3418
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3389: LD_ADDR_EXP 4
3393: PUSH
3394: LD_EXP 4
3398: PPUSH
3399: LD_EXP 4
3403: PUSH
3404: LD_INT 1
3406: PLUS
3407: PPUSH
3408: LD_EXP 22
3412: PPUSH
3413: CALL_OW 2
3417: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3418: LD_ADDR_EXP 23
3422: PUSH
3423: LD_STRING Cyrus
3425: PPUSH
3426: LD_EXP 1
3430: NOT
3431: PPUSH
3432: LD_STRING 11_
3434: PPUSH
3435: CALL 5103 0 3
3439: ST_TO_ADDR
// if Cyrus then
3440: LD_EXP 23
3444: IFFALSE 3475
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3446: LD_ADDR_EXP 4
3450: PUSH
3451: LD_EXP 4
3455: PPUSH
3456: LD_EXP 4
3460: PUSH
3461: LD_INT 1
3463: PLUS
3464: PPUSH
3465: LD_EXP 23
3469: PPUSH
3470: CALL_OW 2
3474: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3475: LD_ADDR_EXP 24
3479: PUSH
3480: LD_STRING Denis
3482: PPUSH
3483: LD_EXP 1
3487: NOT
3488: PPUSH
3489: LD_STRING 11_
3491: PPUSH
3492: CALL 5103 0 3
3496: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3497: LD_ADDR_EXP 25
3501: PUSH
3502: LD_STRING Brown
3504: PPUSH
3505: LD_EXP 1
3509: NOT
3510: PPUSH
3511: LD_STRING 11_
3513: PPUSH
3514: CALL 5103 0 3
3518: ST_TO_ADDR
// if Brown then
3519: LD_EXP 25
3523: IFFALSE 3554
// friends := Insert ( friends , friends + 1 , Brown ) ;
3525: LD_ADDR_EXP 4
3529: PUSH
3530: LD_EXP 4
3534: PPUSH
3535: LD_EXP 4
3539: PUSH
3540: LD_INT 1
3542: PLUS
3543: PPUSH
3544: LD_EXP 25
3548: PPUSH
3549: CALL_OW 2
3553: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
3554: LD_ADDR_EXP 4
3558: PUSH
3559: LD_EXP 4
3563: PUSH
3564: LD_STRING 11c_others
3566: PPUSH
3567: CALL_OW 31
3571: ADD
3572: PUSH
3573: LD_STRING 11_others
3575: PPUSH
3576: CALL_OW 31
3580: ADD
3581: ST_TO_ADDR
// if friends < 18 then
3582: LD_EXP 4
3586: PUSH
3587: LD_INT 18
3589: LESS
3590: IFFALSE 3662
// for i = 1 to 18 do
3592: LD_ADDR_VAR 0 2
3596: PUSH
3597: DOUBLE
3598: LD_INT 1
3600: DEC
3601: ST_TO_ADDR
3602: LD_INT 18
3604: PUSH
3605: FOR_TO
3606: IFFALSE 3660
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3608: LD_INT 0
3610: PPUSH
3611: LD_INT 1
3613: PPUSH
3614: LD_INT 4
3616: PPUSH
3617: CALL_OW 12
3621: PPUSH
3622: LD_INT 7
3624: PPUSH
3625: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3629: LD_ADDR_EXP 4
3633: PUSH
3634: LD_EXP 4
3638: PPUSH
3639: LD_EXP 4
3643: PUSH
3644: LD_INT 1
3646: PLUS
3647: PPUSH
3648: CALL_OW 44
3652: PPUSH
3653: CALL_OW 2
3657: ST_TO_ADDR
// end ;
3658: GO 3605
3660: POP
3661: POP
// for i in friends do
3662: LD_ADDR_VAR 0 2
3666: PUSH
3667: LD_EXP 4
3671: PUSH
3672: FOR_IN
3673: IFFALSE 3731
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3675: LD_VAR 0 2
3679: PPUSH
3680: LD_INT 1
3682: PPUSH
3683: CALL_OW 259
3687: PUSH
3688: LD_VAR 0 2
3692: PPUSH
3693: LD_INT 4
3695: PPUSH
3696: CALL_OW 259
3700: GREATEREQUAL
3701: IFFALSE 3717
// SetClass ( i , class_soldier ) else
3703: LD_VAR 0 2
3707: PPUSH
3708: LD_INT 1
3710: PPUSH
3711: CALL_OW 336
3715: GO 3729
// SetClass ( i , class_scientistic ) ;
3717: LD_VAR 0 2
3721: PPUSH
3722: LD_INT 4
3724: PPUSH
3725: CALL_OW 336
3729: GO 3672
3731: POP
3732: POP
// if Frank then
3733: LD_EXP 30
3737: IFFALSE 3751
// SetClass ( Frank , class_sniper ) ;
3739: LD_EXP 30
3743: PPUSH
3744: LD_INT 5
3746: PPUSH
3747: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3751: LD_EXP 33
3755: PUSH
3756: LD_EXP 24
3760: PUSH
3761: LD_EXP 34
3765: PUSH
3766: LD_EXP 32
3770: PUSH
3771: EMPTY
3772: LIST
3773: LIST
3774: LIST
3775: LIST
3776: PPUSH
3777: LD_INT 4
3779: PPUSH
3780: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
3784: LD_ADDR_EXP 3
3788: PUSH
3789: LD_STRING 
3791: PPUSH
3792: LD_INT 7
3794: PPUSH
3795: LD_INT 7
3797: PPUSH
3798: LD_INT -6
3800: PUSH
3801: LD_EXP 11
3805: PUSH
3806: LD_EXP 12
3810: PUSH
3811: LD_EXP 32
3815: PUSH
3816: LD_EXP 24
3820: PUSH
3821: LD_EXP 34
3825: PUSH
3826: LD_INT -2
3828: PUSH
3829: LD_INT -3
3831: PUSH
3832: LD_INT -5
3834: PUSH
3835: EMPTY
3836: LIST
3837: LIST
3838: LIST
3839: LIST
3840: LIST
3841: LIST
3842: LIST
3843: LIST
3844: LIST
3845: PUSH
3846: LD_EXP 4
3850: ADD
3851: PPUSH
3852: LD_INT 1
3854: PUSH
3855: LD_INT 4
3857: PUSH
3858: LD_INT 2
3860: PUSH
3861: EMPTY
3862: LIST
3863: LIST
3864: PUSH
3865: LD_INT 5
3867: PUSH
3868: LD_INT 0
3870: PUSH
3871: LD_INT 3
3873: PUSH
3874: EMPTY
3875: LIST
3876: LIST
3877: LIST
3878: PUSH
3879: EMPTY
3880: LIST
3881: LIST
3882: LIST
3883: PPUSH
3884: CALL_OW 42
3888: ST_TO_ADDR
// selected := selected union [ DeltaDoctor , Denis , Simms ] ;
3889: LD_ADDR_EXP 3
3893: PUSH
3894: LD_EXP 3
3898: PUSH
3899: LD_EXP 34
3903: PUSH
3904: LD_EXP 24
3908: PUSH
3909: LD_EXP 32
3913: PUSH
3914: EMPTY
3915: LIST
3916: LIST
3917: LIST
3918: UNION
3919: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3920: LD_ADDR_EXP 5
3924: PUSH
3925: LD_EXP 4
3929: PUSH
3930: LD_EXP 11
3934: PUSH
3935: LD_EXP 12
3939: PUSH
3940: LD_EXP 20
3944: PUSH
3945: LD_EXP 21
3949: PUSH
3950: LD_EXP 22
3954: PUSH
3955: LD_EXP 23
3959: PUSH
3960: LD_EXP 24
3964: PUSH
3965: LD_EXP 25
3969: PUSH
3970: LD_EXP 26
3974: PUSH
3975: LD_EXP 27
3979: PUSH
3980: LD_EXP 28
3984: PUSH
3985: LD_EXP 29
3989: PUSH
3990: LD_EXP 30
3994: PUSH
3995: LD_EXP 31
3999: PUSH
4000: LD_EXP 32
4004: PUSH
4005: LD_EXP 33
4009: PUSH
4010: LD_EXP 34
4014: PUSH
4015: EMPTY
4016: LIST
4017: LIST
4018: LIST
4019: LIST
4020: LIST
4021: LIST
4022: LIST
4023: LIST
4024: LIST
4025: LIST
4026: LIST
4027: LIST
4028: LIST
4029: LIST
4030: LIST
4031: LIST
4032: LIST
4033: PUSH
4034: LD_EXP 3
4038: ADD
4039: DIFF
4040: ST_TO_ADDR
// friends := friends diff others ;
4041: LD_ADDR_EXP 4
4045: PUSH
4046: LD_EXP 4
4050: PUSH
4051: LD_EXP 5
4055: DIFF
4056: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4057: LD_ADDR_VAR 0 4
4061: PUSH
4062: LD_INT 111
4064: PUSH
4065: LD_INT 137
4067: PUSH
4068: LD_INT 51
4070: PUSH
4071: EMPTY
4072: LIST
4073: LIST
4074: LIST
4075: PUSH
4076: LD_INT 147
4078: PUSH
4079: LD_INT 129
4081: PUSH
4082: LD_INT 25
4084: PUSH
4085: EMPTY
4086: LIST
4087: LIST
4088: LIST
4089: PUSH
4090: EMPTY
4091: LIST
4092: LIST
4093: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4094: LD_ADDR_VAR 0 5
4098: PUSH
4099: LD_INT 5
4101: PUSH
4102: LD_INT 6
4104: PUSH
4105: LD_INT 7
4107: PUSH
4108: LD_INT 8
4110: PUSH
4111: LD_INT 17
4113: PUSH
4114: LD_INT 18
4116: PUSH
4117: EMPTY
4118: LIST
4119: LIST
4120: LIST
4121: LIST
4122: LIST
4123: LIST
4124: ST_TO_ADDR
// for i in buildings do
4125: LD_ADDR_VAR 0 2
4129: PUSH
4130: LD_VAR 0 4
4134: PUSH
4135: FOR_IN
4136: IFFALSE 4152
// SetSide ( i , 4 ) ;
4138: LD_VAR 0 2
4142: PPUSH
4143: LD_INT 4
4145: PPUSH
4146: CALL_OW 235
4150: GO 4135
4152: POP
4153: POP
// for i in selected do
4154: LD_ADDR_VAR 0 2
4158: PUSH
4159: LD_EXP 3
4163: PUSH
4164: FOR_IN
4165: IFFALSE 4427
// begin if GetClass ( i ) in [ 1 , 5 ] then
4167: LD_VAR 0 2
4171: PPUSH
4172: CALL_OW 257
4176: PUSH
4177: LD_INT 1
4179: PUSH
4180: LD_INT 5
4182: PUSH
4183: EMPTY
4184: LIST
4185: LIST
4186: IN
4187: IFFALSE 4308
// begin if buildings [ 1 ] then
4189: LD_VAR 0 4
4193: PUSH
4194: LD_INT 1
4196: ARRAY
4197: IFFALSE 4258
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4199: LD_VAR 0 2
4203: PPUSH
4204: LD_VAR 0 4
4208: PUSH
4209: LD_INT 1
4211: ARRAY
4212: PUSH
4213: LD_INT 1
4215: ARRAY
4216: PPUSH
4217: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4221: LD_ADDR_VAR 0 4
4225: PUSH
4226: LD_VAR 0 4
4230: PPUSH
4231: LD_INT 1
4233: PPUSH
4234: LD_VAR 0 4
4238: PUSH
4239: LD_INT 1
4241: ARRAY
4242: PPUSH
4243: LD_INT 1
4245: PPUSH
4246: CALL_OW 3
4250: PPUSH
4251: CALL_OW 1
4255: ST_TO_ADDR
// end else
4256: GO 4306
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4258: LD_VAR 0 2
4262: PPUSH
4263: LD_VAR 0 5
4267: PUSH
4268: LD_INT 1
4270: ARRAY
4271: PPUSH
4272: LD_INT 0
4274: PPUSH
4275: CALL_OW 49
// ComHold ( i ) ;
4279: LD_VAR 0 2
4283: PPUSH
4284: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4288: LD_ADDR_VAR 0 5
4292: PUSH
4293: LD_VAR 0 5
4297: PPUSH
4298: LD_INT 1
4300: PPUSH
4301: CALL_OW 3
4305: ST_TO_ADDR
// end ; end else
4306: GO 4425
// begin if buildings [ 2 ] then
4308: LD_VAR 0 4
4312: PUSH
4313: LD_INT 2
4315: ARRAY
4316: IFFALSE 4377
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4318: LD_VAR 0 2
4322: PPUSH
4323: LD_VAR 0 4
4327: PUSH
4328: LD_INT 2
4330: ARRAY
4331: PUSH
4332: LD_INT 1
4334: ARRAY
4335: PPUSH
4336: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4340: LD_ADDR_VAR 0 4
4344: PUSH
4345: LD_VAR 0 4
4349: PPUSH
4350: LD_INT 2
4352: PPUSH
4353: LD_VAR 0 4
4357: PUSH
4358: LD_INT 2
4360: ARRAY
4361: PPUSH
4362: LD_INT 1
4364: PPUSH
4365: CALL_OW 3
4369: PPUSH
4370: CALL_OW 1
4374: ST_TO_ADDR
// end else
4375: GO 4425
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4377: LD_VAR 0 2
4381: PPUSH
4382: LD_VAR 0 5
4386: PUSH
4387: LD_INT 1
4389: ARRAY
4390: PPUSH
4391: LD_INT 0
4393: PPUSH
4394: CALL_OW 49
// ComHold ( i ) ;
4398: LD_VAR 0 2
4402: PPUSH
4403: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4407: LD_ADDR_VAR 0 5
4411: PUSH
4412: LD_VAR 0 5
4416: PPUSH
4417: LD_INT 1
4419: PPUSH
4420: CALL_OW 3
4424: ST_TO_ADDR
// end ; end ; end ;
4425: GO 4164
4427: POP
4428: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4429: LD_ADDR_VAR 0 6
4433: PUSH
4434: LD_INT 22
4436: PUSH
4437: LD_INT 1
4439: PUSH
4440: EMPTY
4441: LIST
4442: LIST
4443: PUSH
4444: LD_INT 30
4446: PUSH
4447: LD_INT 32
4449: PUSH
4450: EMPTY
4451: LIST
4452: LIST
4453: PUSH
4454: EMPTY
4455: LIST
4456: LIST
4457: PPUSH
4458: CALL_OW 69
4462: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4463: LD_ADDR_VAR 0 2
4467: PUSH
4468: DOUBLE
4469: LD_VAR 0 6
4473: PUSH
4474: LD_EXP 5
4478: MINUS
4479: INC
4480: ST_TO_ADDR
4481: LD_INT 1
4483: PUSH
4484: FOR_DOWNTO
4485: IFFALSE 4548
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4487: LD_INT 0
4489: PPUSH
4490: LD_INT 1
4492: PPUSH
4493: LD_INT 7
4495: PUSH
4496: LD_INT 8
4498: PUSH
4499: LD_INT 9
4501: PUSH
4502: EMPTY
4503: LIST
4504: LIST
4505: LIST
4506: PUSH
4507: LD_OWVAR 67
4511: ARRAY
4512: PPUSH
4513: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4517: LD_ADDR_EXP 5
4521: PUSH
4522: LD_EXP 5
4526: PPUSH
4527: LD_EXP 5
4531: PUSH
4532: LD_INT 1
4534: PLUS
4535: PPUSH
4536: CALL_OW 44
4540: PPUSH
4541: CALL_OW 2
4545: ST_TO_ADDR
// end ;
4546: GO 4484
4548: POP
4549: POP
// if others then
4550: LD_EXP 5
4554: IFFALSE 4660
// for i = 1 to bunkers do
4556: LD_ADDR_VAR 0 2
4560: PUSH
4561: DOUBLE
4562: LD_INT 1
4564: DEC
4565: ST_TO_ADDR
4566: LD_VAR 0 6
4570: PUSH
4571: FOR_TO
4572: IFFALSE 4658
// begin SetSide ( others [ others ] , 1 ) ;
4574: LD_EXP 5
4578: PUSH
4579: LD_EXP 5
4583: ARRAY
4584: PPUSH
4585: LD_INT 1
4587: PPUSH
4588: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4592: LD_EXP 5
4596: PUSH
4597: LD_EXP 5
4601: ARRAY
4602: PPUSH
4603: LD_INT 1
4605: PPUSH
4606: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4610: LD_EXP 5
4614: PUSH
4615: LD_EXP 5
4619: ARRAY
4620: PPUSH
4621: LD_VAR 0 6
4625: PUSH
4626: LD_VAR 0 2
4630: ARRAY
4631: PPUSH
4632: CALL_OW 52
// others := Delete ( others , others ) ;
4636: LD_ADDR_EXP 5
4640: PUSH
4641: LD_EXP 5
4645: PPUSH
4646: LD_EXP 5
4650: PPUSH
4651: CALL_OW 3
4655: ST_TO_ADDR
// end ;
4656: GO 4571
4658: POP
4659: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 ] ;
4660: LD_ADDR_VAR 0 5
4664: PUSH
4665: LD_VAR 0 5
4669: PUSH
4670: LD_INT 9
4672: PUSH
4673: LD_INT 10
4675: PUSH
4676: LD_INT 11
4678: PUSH
4679: LD_INT 12
4681: PUSH
4682: LD_INT 13
4684: PUSH
4685: LD_INT 14
4687: PUSH
4688: LD_INT 15
4690: PUSH
4691: LD_INT 16
4693: PUSH
4694: LD_INT 26
4696: PUSH
4697: LD_INT 27
4699: PUSH
4700: LD_INT 28
4702: PUSH
4703: LD_INT 29
4705: PUSH
4706: EMPTY
4707: LIST
4708: LIST
4709: LIST
4710: LIST
4711: LIST
4712: LIST
4713: LIST
4714: LIST
4715: LIST
4716: LIST
4717: LIST
4718: LIST
4719: UNION
4720: ST_TO_ADDR
// for i in friends ^ others do
4721: LD_ADDR_VAR 0 2
4725: PUSH
4726: LD_EXP 4
4730: PUSH
4731: LD_EXP 5
4735: ADD
4736: PUSH
4737: FOR_IN
4738: IFFALSE 5078
// begin SetTag ( i , 2 ) ;
4740: LD_VAR 0 2
4744: PPUSH
4745: LD_INT 2
4747: PPUSH
4748: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4752: LD_VAR 0 2
4756: PUSH
4757: LD_EXP 4
4761: IN
4762: PUSH
4763: LD_VAR 0 2
4767: PPUSH
4768: CALL_OW 257
4772: PUSH
4773: LD_INT 1
4775: EQUAL
4776: AND
4777: PUSH
4778: LD_VAR 0 2
4782: PUSH
4783: LD_EXP 5
4787: IN
4788: OR
4789: PUSH
4790: LD_VAR 0 4
4794: PUSH
4795: LD_INT 1
4797: ARRAY
4798: AND
4799: IFFALSE 4872
// begin SetClass ( i , 1 ) ;
4801: LD_VAR 0 2
4805: PPUSH
4806: LD_INT 1
4808: PPUSH
4809: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4813: LD_VAR 0 2
4817: PPUSH
4818: LD_VAR 0 4
4822: PUSH
4823: LD_INT 1
4825: ARRAY
4826: PUSH
4827: LD_INT 1
4829: ARRAY
4830: PPUSH
4831: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4835: LD_ADDR_VAR 0 4
4839: PUSH
4840: LD_VAR 0 4
4844: PPUSH
4845: LD_INT 1
4847: PPUSH
4848: LD_VAR 0 4
4852: PUSH
4853: LD_INT 1
4855: ARRAY
4856: PPUSH
4857: LD_INT 1
4859: PPUSH
4860: CALL_OW 3
4864: PPUSH
4865: CALL_OW 1
4869: ST_TO_ADDR
// continue ;
4870: GO 4737
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4872: LD_VAR 0 2
4876: PUSH
4877: LD_EXP 4
4881: IN
4882: PUSH
4883: LD_VAR 0 2
4887: PPUSH
4888: CALL_OW 257
4892: PUSH
4893: LD_INT 4
4895: EQUAL
4896: AND
4897: PUSH
4898: LD_VAR 0 2
4902: PUSH
4903: LD_EXP 5
4907: IN
4908: OR
4909: PUSH
4910: LD_VAR 0 4
4914: PUSH
4915: LD_INT 2
4917: ARRAY
4918: AND
4919: IFFALSE 4992
// begin SetClass ( i , 4 ) ;
4921: LD_VAR 0 2
4925: PPUSH
4926: LD_INT 4
4928: PPUSH
4929: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4933: LD_VAR 0 2
4937: PPUSH
4938: LD_VAR 0 4
4942: PUSH
4943: LD_INT 2
4945: ARRAY
4946: PUSH
4947: LD_INT 1
4949: ARRAY
4950: PPUSH
4951: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4955: LD_ADDR_VAR 0 4
4959: PUSH
4960: LD_VAR 0 4
4964: PPUSH
4965: LD_INT 2
4967: PPUSH
4968: LD_VAR 0 4
4972: PUSH
4973: LD_INT 2
4975: ARRAY
4976: PPUSH
4977: LD_INT 1
4979: PPUSH
4980: CALL_OW 3
4984: PPUSH
4985: CALL_OW 1
4989: ST_TO_ADDR
// continue ;
4990: GO 4737
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4992: LD_VAR 0 2
4996: PPUSH
4997: LD_VAR 0 5
5001: PUSH
5002: LD_INT 1
5004: ARRAY
5005: PPUSH
5006: LD_INT 0
5008: PPUSH
5009: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5013: LD_ADDR_VAR 0 5
5017: PUSH
5018: LD_VAR 0 5
5022: PPUSH
5023: LD_INT 1
5025: PPUSH
5026: CALL_OW 3
5030: ST_TO_ADDR
// if GetClass ( i ) <> 4 then
5031: LD_VAR 0 2
5035: PPUSH
5036: CALL_OW 257
5040: PUSH
5041: LD_INT 4
5043: NONEQUAL
5044: IFFALSE 5058
// SetClass ( i , 1 ) ;
5046: LD_VAR 0 2
5050: PPUSH
5051: LD_INT 1
5053: PPUSH
5054: CALL_OW 336
// ComHold ( i ) ;
5058: LD_VAR 0 2
5062: PPUSH
5063: CALL_OW 140
// if not areas then
5067: LD_VAR 0 5
5071: NOT
5072: IFFALSE 5076
// break ;
5074: GO 5078
// end ;
5076: GO 4737
5078: POP
5079: POP
// if Frank then
5080: LD_EXP 30
5084: IFFALSE 5098
// SetClass ( Frank , class_sniper ) ;
5086: LD_EXP 30
5090: PPUSH
5091: LD_INT 5
5093: PPUSH
5094: CALL_OW 336
// end ; end_of_file
5098: LD_VAR 0 1
5102: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5103: LD_INT 0
5105: PPUSH
5106: PPUSH
// if exist_mode then
5107: LD_VAR 0 2
5111: IFFALSE 5136
// unit := CreateCharacter ( prefix & ident ) else
5113: LD_ADDR_VAR 0 5
5117: PUSH
5118: LD_VAR 0 3
5122: PUSH
5123: LD_VAR 0 1
5127: STR
5128: PPUSH
5129: CALL_OW 34
5133: ST_TO_ADDR
5134: GO 5151
// unit := NewCharacter ( ident ) ;
5136: LD_ADDR_VAR 0 5
5140: PUSH
5141: LD_VAR 0 1
5145: PPUSH
5146: CALL_OW 25
5150: ST_TO_ADDR
// result := unit ;
5151: LD_ADDR_VAR 0 4
5155: PUSH
5156: LD_VAR 0 5
5160: ST_TO_ADDR
// end ;
5161: LD_VAR 0 4
5165: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5166: LD_INT 0
5168: PPUSH
// vc_chassis := chassis ;
5169: LD_ADDR_OWVAR 37
5173: PUSH
5174: LD_VAR 0 1
5178: ST_TO_ADDR
// vc_engine := engine ;
5179: LD_ADDR_OWVAR 39
5183: PUSH
5184: LD_VAR 0 2
5188: ST_TO_ADDR
// vc_control := control ;
5189: LD_ADDR_OWVAR 38
5193: PUSH
5194: LD_VAR 0 3
5198: ST_TO_ADDR
// vc_weapon := weapon ;
5199: LD_ADDR_OWVAR 40
5203: PUSH
5204: LD_VAR 0 4
5208: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5209: LD_ADDR_OWVAR 41
5213: PUSH
5214: LD_VAR 0 5
5218: ST_TO_ADDR
// end ;
5219: LD_VAR 0 6
5223: RET
// export function CanSayRand ( side ) ; begin
5224: LD_INT 0
5226: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5227: LD_ADDR_VAR 0 2
5231: PUSH
5232: LD_INT 52
5234: PUSH
5235: EMPTY
5236: LIST
5237: PUSH
5238: LD_INT 22
5240: PUSH
5241: LD_VAR 0 1
5245: PUSH
5246: EMPTY
5247: LIST
5248: LIST
5249: PUSH
5250: LD_INT 2
5252: PUSH
5253: LD_INT 25
5255: PUSH
5256: LD_INT 1
5258: PUSH
5259: EMPTY
5260: LIST
5261: LIST
5262: PUSH
5263: LD_INT 25
5265: PUSH
5266: LD_INT 2
5268: PUSH
5269: EMPTY
5270: LIST
5271: LIST
5272: PUSH
5273: LD_INT 25
5275: PUSH
5276: LD_INT 3
5278: PUSH
5279: EMPTY
5280: LIST
5281: LIST
5282: PUSH
5283: LD_INT 25
5285: PUSH
5286: LD_INT 4
5288: PUSH
5289: EMPTY
5290: LIST
5291: LIST
5292: PUSH
5293: EMPTY
5294: LIST
5295: LIST
5296: LIST
5297: LIST
5298: LIST
5299: PUSH
5300: EMPTY
5301: LIST
5302: LIST
5303: LIST
5304: PPUSH
5305: CALL_OW 69
5309: PUSH
5310: LD_EXP 11
5314: PUSH
5315: LD_EXP 30
5319: PUSH
5320: LD_EXP 20
5324: PUSH
5325: LD_EXP 21
5329: PUSH
5330: LD_EXP 22
5334: PUSH
5335: LD_EXP 23
5339: PUSH
5340: LD_EXP 24
5344: PUSH
5345: LD_EXP 25
5349: PUSH
5350: LD_EXP 26
5354: PUSH
5355: LD_EXP 27
5359: PUSH
5360: LD_EXP 13
5364: PUSH
5365: LD_EXP 28
5369: PUSH
5370: LD_EXP 29
5374: PUSH
5375: LD_EXP 31
5379: PUSH
5380: EMPTY
5381: LIST
5382: LIST
5383: LIST
5384: LIST
5385: LIST
5386: LIST
5387: LIST
5388: LIST
5389: LIST
5390: LIST
5391: LIST
5392: LIST
5393: LIST
5394: LIST
5395: DIFF
5396: ST_TO_ADDR
// end ;
5397: LD_VAR 0 2
5401: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5402: LD_INT 0
5404: PPUSH
5405: PPUSH
5406: PPUSH
5407: PPUSH
5408: PPUSH
5409: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5410: LD_VAR 0 1
5414: NOT
5415: PUSH
5416: LD_VAR 0 1
5420: PPUSH
5421: CALL_OW 263
5425: PUSH
5426: LD_INT 2
5428: EQUAL
5429: NOT
5430: OR
5431: IFFALSE 5435
// exit ;
5433: GO 5751
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5435: LD_ADDR_VAR 0 6
5439: PUSH
5440: LD_INT 22
5442: PUSH
5443: LD_VAR 0 1
5447: PPUSH
5448: CALL_OW 255
5452: PUSH
5453: EMPTY
5454: LIST
5455: LIST
5456: PUSH
5457: LD_INT 2
5459: PUSH
5460: LD_INT 30
5462: PUSH
5463: LD_INT 36
5465: PUSH
5466: EMPTY
5467: LIST
5468: LIST
5469: PUSH
5470: LD_INT 34
5472: PUSH
5473: LD_INT 31
5475: PUSH
5476: EMPTY
5477: LIST
5478: LIST
5479: PUSH
5480: EMPTY
5481: LIST
5482: LIST
5483: LIST
5484: PUSH
5485: EMPTY
5486: LIST
5487: LIST
5488: PPUSH
5489: CALL_OW 69
5493: ST_TO_ADDR
// if not tmp then
5494: LD_VAR 0 6
5498: NOT
5499: IFFALSE 5503
// exit ;
5501: GO 5751
// result := [ ] ;
5503: LD_ADDR_VAR 0 2
5507: PUSH
5508: EMPTY
5509: ST_TO_ADDR
// for i in tmp do
5510: LD_ADDR_VAR 0 3
5514: PUSH
5515: LD_VAR 0 6
5519: PUSH
5520: FOR_IN
5521: IFFALSE 5592
// begin t := UnitsInside ( i ) ;
5523: LD_ADDR_VAR 0 4
5527: PUSH
5528: LD_VAR 0 3
5532: PPUSH
5533: CALL_OW 313
5537: ST_TO_ADDR
// if t then
5538: LD_VAR 0 4
5542: IFFALSE 5590
// for j in t do
5544: LD_ADDR_VAR 0 7
5548: PUSH
5549: LD_VAR 0 4
5553: PUSH
5554: FOR_IN
5555: IFFALSE 5588
// result := Insert ( result , result + 1 , j ) ;
5557: LD_ADDR_VAR 0 2
5561: PUSH
5562: LD_VAR 0 2
5566: PPUSH
5567: LD_VAR 0 2
5571: PUSH
5572: LD_INT 1
5574: PLUS
5575: PPUSH
5576: LD_VAR 0 7
5580: PPUSH
5581: CALL_OW 2
5585: ST_TO_ADDR
5586: GO 5554
5588: POP
5589: POP
// end ;
5590: GO 5520
5592: POP
5593: POP
// if not result then
5594: LD_VAR 0 2
5598: NOT
5599: IFFALSE 5603
// exit ;
5601: GO 5751
// mech := result [ 1 ] ;
5603: LD_ADDR_VAR 0 5
5607: PUSH
5608: LD_VAR 0 2
5612: PUSH
5613: LD_INT 1
5615: ARRAY
5616: ST_TO_ADDR
// if result > 1 then
5617: LD_VAR 0 2
5621: PUSH
5622: LD_INT 1
5624: GREATER
5625: IFFALSE 5737
// for i = 2 to result do
5627: LD_ADDR_VAR 0 3
5631: PUSH
5632: DOUBLE
5633: LD_INT 2
5635: DEC
5636: ST_TO_ADDR
5637: LD_VAR 0 2
5641: PUSH
5642: FOR_TO
5643: IFFALSE 5735
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5645: LD_ADDR_VAR 0 4
5649: PUSH
5650: LD_VAR 0 2
5654: PUSH
5655: LD_VAR 0 3
5659: ARRAY
5660: PPUSH
5661: LD_INT 3
5663: PPUSH
5664: CALL_OW 259
5668: PUSH
5669: LD_VAR 0 2
5673: PUSH
5674: LD_VAR 0 3
5678: ARRAY
5679: PPUSH
5680: CALL_OW 432
5684: MINUS
5685: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5686: LD_VAR 0 4
5690: PUSH
5691: LD_VAR 0 5
5695: PPUSH
5696: LD_INT 3
5698: PPUSH
5699: CALL_OW 259
5703: PUSH
5704: LD_VAR 0 5
5708: PPUSH
5709: CALL_OW 432
5713: MINUS
5714: GREATEREQUAL
5715: IFFALSE 5733
// mech := result [ i ] ;
5717: LD_ADDR_VAR 0 5
5721: PUSH
5722: LD_VAR 0 2
5726: PUSH
5727: LD_VAR 0 3
5731: ARRAY
5732: ST_TO_ADDR
// end ;
5733: GO 5642
5735: POP
5736: POP
// ComLinkTo ( vehicle , mech ) ;
5737: LD_VAR 0 1
5741: PPUSH
5742: LD_VAR 0 5
5746: PPUSH
5747: CALL_OW 135
// end ;
5751: LD_VAR 0 2
5755: RET
// export function SayRand ( sex , dial ) ; begin
5756: LD_INT 0
5758: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5759: LD_ADDR_VAR 0 3
5763: PUSH
5764: LD_INT 52
5766: PUSH
5767: EMPTY
5768: LIST
5769: PUSH
5770: LD_INT 22
5772: PUSH
5773: LD_INT 1
5775: PUSH
5776: EMPTY
5777: LIST
5778: LIST
5779: PUSH
5780: LD_INT 26
5782: PUSH
5783: LD_VAR 0 1
5787: PUSH
5788: EMPTY
5789: LIST
5790: LIST
5791: PUSH
5792: LD_INT 2
5794: PUSH
5795: LD_INT 25
5797: PUSH
5798: LD_INT 1
5800: PUSH
5801: EMPTY
5802: LIST
5803: LIST
5804: PUSH
5805: LD_INT 25
5807: PUSH
5808: LD_INT 2
5810: PUSH
5811: EMPTY
5812: LIST
5813: LIST
5814: PUSH
5815: LD_INT 25
5817: PUSH
5818: LD_INT 3
5820: PUSH
5821: EMPTY
5822: LIST
5823: LIST
5824: PUSH
5825: LD_INT 25
5827: PUSH
5828: LD_INT 4
5830: PUSH
5831: EMPTY
5832: LIST
5833: LIST
5834: PUSH
5835: EMPTY
5836: LIST
5837: LIST
5838: LIST
5839: LIST
5840: LIST
5841: PUSH
5842: EMPTY
5843: LIST
5844: LIST
5845: LIST
5846: LIST
5847: PPUSH
5848: CALL_OW 69
5852: PUSH
5853: LD_EXP 11
5857: PUSH
5858: LD_EXP 30
5862: PUSH
5863: LD_EXP 20
5867: PUSH
5868: LD_EXP 21
5872: PUSH
5873: LD_EXP 22
5877: PUSH
5878: LD_EXP 23
5882: PUSH
5883: LD_EXP 24
5887: PUSH
5888: LD_EXP 25
5892: PUSH
5893: LD_EXP 26
5897: PUSH
5898: LD_EXP 27
5902: PUSH
5903: LD_EXP 13
5907: PUSH
5908: LD_EXP 28
5912: PUSH
5913: LD_EXP 29
5917: PUSH
5918: LD_EXP 31
5922: PUSH
5923: EMPTY
5924: LIST
5925: LIST
5926: LIST
5927: LIST
5928: LIST
5929: LIST
5930: LIST
5931: LIST
5932: LIST
5933: LIST
5934: LIST
5935: LIST
5936: LIST
5937: LIST
5938: DIFF
5939: ST_TO_ADDR
// if not result then
5940: LD_VAR 0 3
5944: NOT
5945: IFFALSE 5949
// exit ;
5947: GO 5977
// result := result [ 1 ] ;
5949: LD_ADDR_VAR 0 3
5953: PUSH
5954: LD_VAR 0 3
5958: PUSH
5959: LD_INT 1
5961: ARRAY
5962: ST_TO_ADDR
// Say ( result , dial ) ;
5963: LD_VAR 0 3
5967: PPUSH
5968: LD_VAR 0 2
5972: PPUSH
5973: CALL_OW 88
// end ;
5977: LD_VAR 0 3
5981: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5982: LD_INT 0
5984: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5985: LD_ADDR_VAR 0 4
5989: PUSH
5990: LD_INT 22
5992: PUSH
5993: LD_INT 1
5995: PUSH
5996: EMPTY
5997: LIST
5998: LIST
5999: PUSH
6000: LD_INT 26
6002: PUSH
6003: LD_VAR 0 1
6007: PUSH
6008: EMPTY
6009: LIST
6010: LIST
6011: PUSH
6012: LD_INT 2
6014: PUSH
6015: LD_INT 25
6017: PUSH
6018: LD_INT 1
6020: PUSH
6021: EMPTY
6022: LIST
6023: LIST
6024: PUSH
6025: LD_INT 25
6027: PUSH
6028: LD_INT 2
6030: PUSH
6031: EMPTY
6032: LIST
6033: LIST
6034: PUSH
6035: LD_INT 25
6037: PUSH
6038: LD_INT 3
6040: PUSH
6041: EMPTY
6042: LIST
6043: LIST
6044: PUSH
6045: LD_INT 25
6047: PUSH
6048: LD_INT 4
6050: PUSH
6051: EMPTY
6052: LIST
6053: LIST
6054: PUSH
6055: EMPTY
6056: LIST
6057: LIST
6058: LIST
6059: LIST
6060: LIST
6061: PUSH
6062: EMPTY
6063: LIST
6064: LIST
6065: LIST
6066: PPUSH
6067: CALL_OW 69
6071: PUSH
6072: LD_EXP 11
6076: PUSH
6077: LD_EXP 30
6081: PUSH
6082: LD_EXP 20
6086: PUSH
6087: LD_EXP 21
6091: PUSH
6092: LD_EXP 22
6096: PUSH
6097: LD_EXP 23
6101: PUSH
6102: LD_EXP 24
6106: PUSH
6107: LD_EXP 25
6111: PUSH
6112: LD_EXP 26
6116: PUSH
6117: LD_EXP 27
6121: PUSH
6122: LD_EXP 13
6126: PUSH
6127: LD_EXP 28
6131: PUSH
6132: LD_EXP 29
6136: PUSH
6137: LD_EXP 31
6141: PUSH
6142: EMPTY
6143: LIST
6144: LIST
6145: LIST
6146: LIST
6147: LIST
6148: LIST
6149: LIST
6150: LIST
6151: LIST
6152: LIST
6153: LIST
6154: LIST
6155: LIST
6156: LIST
6157: PUSH
6158: LD_VAR 0 3
6162: ADD
6163: DIFF
6164: ST_TO_ADDR
// if not result then
6165: LD_VAR 0 4
6169: NOT
6170: IFFALSE 6174
// exit ;
6172: GO 6202
// result := result [ 1 ] ;
6174: LD_ADDR_VAR 0 4
6178: PUSH
6179: LD_VAR 0 4
6183: PUSH
6184: LD_INT 1
6186: ARRAY
6187: ST_TO_ADDR
// Say ( result , dial ) ;
6188: LD_VAR 0 4
6192: PPUSH
6193: LD_VAR 0 2
6197: PPUSH
6198: CALL_OW 88
// end ;
6202: LD_VAR 0 4
6206: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6207: LD_INT 0
6209: PPUSH
6210: PPUSH
6211: PPUSH
6212: PPUSH
6213: PPUSH
6214: PPUSH
6215: PPUSH
6216: PPUSH
6217: PPUSH
6218: PPUSH
6219: PPUSH
6220: PPUSH
6221: PPUSH
6222: PPUSH
6223: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6224: LD_VAR 0 1
6228: NOT
6229: PUSH
6230: LD_VAR 0 2
6234: NOT
6235: OR
6236: PUSH
6237: LD_VAR 0 1
6241: PPUSH
6242: CALL_OW 247
6246: PUSH
6247: LD_INT 3
6249: EQUAL
6250: OR
6251: IFFALSE 6255
// exit ;
6253: GO 7794
// for i = path downto 1 do
6255: LD_ADDR_VAR 0 5
6259: PUSH
6260: DOUBLE
6261: LD_VAR 0 2
6265: INC
6266: ST_TO_ADDR
6267: LD_INT 1
6269: PUSH
6270: FOR_DOWNTO
6271: IFFALSE 6332
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6273: LD_VAR 0 2
6277: PUSH
6278: LD_VAR 0 5
6282: ARRAY
6283: PUSH
6284: LD_INT 1
6286: ARRAY
6287: PPUSH
6288: LD_VAR 0 2
6292: PUSH
6293: LD_VAR 0 5
6297: ARRAY
6298: PUSH
6299: LD_INT 2
6301: ARRAY
6302: PPUSH
6303: CALL_OW 488
6307: NOT
6308: IFFALSE 6330
// path = Delete ( path , i ) ;
6310: LD_ADDR_VAR 0 2
6314: PUSH
6315: LD_VAR 0 2
6319: PPUSH
6320: LD_VAR 0 5
6324: PPUSH
6325: CALL_OW 3
6329: ST_TO_ADDR
// end ;
6330: GO 6270
6332: POP
6333: POP
// if not path then
6334: LD_VAR 0 2
6338: NOT
6339: IFFALSE 6343
// exit ;
6341: GO 7794
// tmp_path := [ ] ;
6343: LD_ADDR_VAR 0 11
6347: PUSH
6348: EMPTY
6349: ST_TO_ADDR
// if flags then
6350: LD_VAR 0 3
6354: IFFALSE 6428
// begin if flags [ 1 ] then
6356: LD_VAR 0 3
6360: PUSH
6361: LD_INT 1
6363: ARRAY
6364: IFFALSE 6380
// safe_place = flags [ 1 ] ;
6366: LD_ADDR_VAR 0 16
6370: PUSH
6371: LD_VAR 0 3
6375: PUSH
6376: LD_INT 1
6378: ARRAY
6379: ST_TO_ADDR
// if flags [ 2 ] then
6380: LD_VAR 0 3
6384: PUSH
6385: LD_INT 2
6387: ARRAY
6388: IFFALSE 6404
// spot_dist = flags [ 2 ] ;
6390: LD_ADDR_VAR 0 15
6394: PUSH
6395: LD_VAR 0 3
6399: PUSH
6400: LD_INT 2
6402: ARRAY
6403: ST_TO_ADDR
// if flags [ 3 ] then
6404: LD_VAR 0 3
6408: PUSH
6409: LD_INT 3
6411: ARRAY
6412: IFFALSE 6428
// chase_range = flags [ 3 ] ;
6414: LD_ADDR_VAR 0 17
6418: PUSH
6419: LD_VAR 0 3
6423: PUSH
6424: LD_INT 3
6426: ARRAY
6427: ST_TO_ADDR
// end ; if not chase_range then
6428: LD_VAR 0 17
6432: NOT
6433: IFFALSE 6443
// chase_range = 8 ;
6435: LD_ADDR_VAR 0 17
6439: PUSH
6440: LD_INT 8
6442: ST_TO_ADDR
// if not spot_dist then
6443: LD_VAR 0 15
6447: NOT
6448: IFFALSE 6458
// spot_dist := 8 ;
6450: LD_ADDR_VAR 0 15
6454: PUSH
6455: LD_INT 8
6457: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6458: LD_ADDR_VAR 0 18
6462: PUSH
6463: LD_VAR 0 1
6467: PPUSH
6468: CALL_OW 247
6472: PUSH
6473: LD_INT 2
6475: EQUAL
6476: PUSH
6477: LD_VAR 0 1
6481: PPUSH
6482: CALL_OW 262
6486: PUSH
6487: LD_INT 3
6489: NONEQUAL
6490: AND
6491: ST_TO_ADDR
// status = 1 ;
6492: LD_ADDR_VAR 0 12
6496: PUSH
6497: LD_INT 1
6499: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6500: LD_ADDR_VAR 0 11
6504: PUSH
6505: LD_INT 1
6507: PUSH
6508: LD_VAR 0 2
6512: PUSH
6513: LD_INT 1
6515: ARRAY
6516: PUSH
6517: EMPTY
6518: LIST
6519: LIST
6520: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6521: LD_INT 35
6523: PPUSH
6524: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6528: LD_VAR 0 18
6532: PUSH
6533: LD_VAR 0 1
6537: PPUSH
6538: CALL_OW 261
6542: PUSH
6543: LD_INT 20
6545: LESS
6546: AND
6547: IFFALSE 6740
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6549: LD_ADDR_VAR 0 10
6553: PUSH
6554: LD_INT 22
6556: PUSH
6557: LD_VAR 0 1
6561: PPUSH
6562: CALL_OW 255
6566: PUSH
6567: EMPTY
6568: LIST
6569: LIST
6570: PUSH
6571: LD_INT 2
6573: PUSH
6574: LD_INT 30
6576: PUSH
6577: LD_INT 0
6579: PUSH
6580: EMPTY
6581: LIST
6582: LIST
6583: PUSH
6584: LD_INT 30
6586: PUSH
6587: LD_INT 1
6589: PUSH
6590: EMPTY
6591: LIST
6592: LIST
6593: PUSH
6594: LD_INT 30
6596: PUSH
6597: LD_INT 29
6599: PUSH
6600: EMPTY
6601: LIST
6602: LIST
6603: PUSH
6604: LD_INT 30
6606: PUSH
6607: LD_INT 3
6609: PUSH
6610: EMPTY
6611: LIST
6612: LIST
6613: PUSH
6614: EMPTY
6615: LIST
6616: LIST
6617: LIST
6618: LIST
6619: LIST
6620: PUSH
6621: EMPTY
6622: LIST
6623: LIST
6624: PPUSH
6625: CALL_OW 69
6629: ST_TO_ADDR
// if not station then
6630: LD_VAR 0 10
6634: NOT
6635: IFFALSE 6651
// begin SetFuel ( unit , 40 ) ;
6637: LD_VAR 0 1
6641: PPUSH
6642: LD_INT 40
6644: PPUSH
6645: CALL_OW 240
// continue ;
6649: GO 6521
// end ; status := 6 ;
6651: LD_ADDR_VAR 0 12
6655: PUSH
6656: LD_INT 6
6658: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6659: LD_ADDR_VAR 0 10
6663: PUSH
6664: LD_VAR 0 10
6668: PPUSH
6669: LD_VAR 0 1
6673: PPUSH
6674: CALL_OW 74
6678: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6679: LD_INT 35
6681: PPUSH
6682: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6686: LD_VAR 0 1
6690: PPUSH
6691: LD_VAR 0 10
6695: PPUSH
6696: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6700: LD_VAR 0 1
6704: PPUSH
6705: LD_VAR 0 10
6709: PPUSH
6710: CALL_OW 296
6714: PUSH
6715: LD_INT 6
6717: LESS
6718: IFFALSE 6679
// SetFuel ( unit , 100 ) ;
6720: LD_VAR 0 1
6724: PPUSH
6725: LD_INT 100
6727: PPUSH
6728: CALL_OW 240
// status := 5 ;
6732: LD_ADDR_VAR 0 12
6736: PUSH
6737: LD_INT 5
6739: ST_TO_ADDR
// end ; if status = 1 then
6740: LD_VAR 0 12
6744: PUSH
6745: LD_INT 1
6747: EQUAL
6748: IFFALSE 7124
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6750: LD_ADDR_VAR 0 13
6754: PUSH
6755: LD_INT 81
6757: PUSH
6758: LD_VAR 0 1
6762: PPUSH
6763: CALL_OW 255
6767: PUSH
6768: EMPTY
6769: LIST
6770: LIST
6771: PUSH
6772: LD_INT 3
6774: PUSH
6775: LD_INT 21
6777: PUSH
6778: LD_INT 3
6780: PUSH
6781: EMPTY
6782: LIST
6783: LIST
6784: PUSH
6785: EMPTY
6786: LIST
6787: LIST
6788: PUSH
6789: LD_INT 91
6791: PUSH
6792: LD_VAR 0 1
6796: PUSH
6797: LD_VAR 0 15
6801: PUSH
6802: EMPTY
6803: LIST
6804: LIST
6805: LIST
6806: PUSH
6807: LD_INT 101
6809: PUSH
6810: LD_INT 1
6812: PUSH
6813: EMPTY
6814: LIST
6815: LIST
6816: PUSH
6817: EMPTY
6818: LIST
6819: LIST
6820: LIST
6821: LIST
6822: PPUSH
6823: CALL_OW 69
6827: ST_TO_ADDR
// for i in enemy do
6828: LD_ADDR_VAR 0 5
6832: PUSH
6833: LD_VAR 0 13
6837: PUSH
6838: FOR_IN
6839: IFFALSE 6870
// if IsInvisible ( i ) then
6841: LD_VAR 0 5
6845: PPUSH
6846: CALL_OW 571
6850: IFFALSE 6868
// enemy := enemy diff i ;
6852: LD_ADDR_VAR 0 13
6856: PUSH
6857: LD_VAR 0 13
6861: PUSH
6862: LD_VAR 0 5
6866: DIFF
6867: ST_TO_ADDR
6868: GO 6838
6870: POP
6871: POP
// if enemy then
6872: LD_VAR 0 13
6876: IFFALSE 6926
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6878: LD_VAR 0 1
6882: PPUSH
6883: LD_VAR 0 1
6887: PPUSH
6888: CALL_OW 250
6892: PPUSH
6893: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6897: LD_VAR 0 1
6901: PPUSH
6902: LD_VAR 0 1
6906: PPUSH
6907: CALL_OW 251
6911: PPUSH
6912: CALL_OW 232
// status = 2 ;
6916: LD_ADDR_VAR 0 12
6920: PUSH
6921: LD_INT 2
6923: ST_TO_ADDR
// end else
6924: GO 7124
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6926: LD_VAR 0 1
6930: PPUSH
6931: LD_VAR 0 11
6935: PUSH
6936: LD_INT 2
6938: ARRAY
6939: PUSH
6940: LD_INT 1
6942: ARRAY
6943: PPUSH
6944: LD_VAR 0 11
6948: PUSH
6949: LD_INT 2
6951: ARRAY
6952: PUSH
6953: LD_INT 2
6955: ARRAY
6956: PPUSH
6957: CALL_OW 307
6961: PUSH
6962: LD_VAR 0 1
6966: PPUSH
6967: CALL_OW 314
6971: NOT
6972: OR
6973: IFFALSE 7124
// begin wait ( 0 0$2 ) ;
6975: LD_INT 70
6977: PPUSH
6978: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6982: LD_VAR 0 11
6986: PUSH
6987: LD_INT 1
6989: ARRAY
6990: PUSH
6991: LD_INT 1
6993: PLUS
6994: PUSH
6995: LD_VAR 0 2
6999: GREATER
7000: IFFALSE 7025
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7002: LD_ADDR_VAR 0 11
7006: PUSH
7007: LD_VAR 0 11
7011: PPUSH
7012: LD_INT 1
7014: PPUSH
7015: LD_INT 1
7017: PPUSH
7018: CALL_OW 1
7022: ST_TO_ADDR
7023: GO 7056
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7025: LD_ADDR_VAR 0 11
7029: PUSH
7030: LD_VAR 0 11
7034: PPUSH
7035: LD_INT 1
7037: PPUSH
7038: LD_VAR 0 11
7042: PUSH
7043: LD_INT 1
7045: ARRAY
7046: PUSH
7047: LD_INT 1
7049: PLUS
7050: PPUSH
7051: CALL_OW 1
7055: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7056: LD_ADDR_VAR 0 11
7060: PUSH
7061: LD_VAR 0 11
7065: PPUSH
7066: LD_INT 2
7068: PPUSH
7069: LD_VAR 0 2
7073: PUSH
7074: LD_VAR 0 11
7078: PUSH
7079: LD_INT 1
7081: ARRAY
7082: ARRAY
7083: PPUSH
7084: CALL_OW 1
7088: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7089: LD_VAR 0 1
7093: PPUSH
7094: LD_VAR 0 11
7098: PUSH
7099: LD_INT 2
7101: ARRAY
7102: PUSH
7103: LD_INT 1
7105: ARRAY
7106: PPUSH
7107: LD_VAR 0 11
7111: PUSH
7112: LD_INT 2
7114: ARRAY
7115: PUSH
7116: LD_INT 2
7118: ARRAY
7119: PPUSH
7120: CALL_OW 114
// end ; end ; end ; if status = 2 then
7124: LD_VAR 0 12
7128: PUSH
7129: LD_INT 2
7131: EQUAL
7132: IFFALSE 7353
// begin if GetLives ( unit ) < 650 and safe_place then
7134: LD_VAR 0 1
7138: PPUSH
7139: CALL_OW 256
7143: PUSH
7144: LD_INT 650
7146: LESS
7147: PUSH
7148: LD_VAR 0 16
7152: AND
7153: IFFALSE 7165
// begin status = 3 ;
7155: LD_ADDR_VAR 0 12
7159: PUSH
7160: LD_INT 3
7162: ST_TO_ADDR
// continue ;
7163: GO 6521
// end ; x := GetRememberedX ( unit ) ;
7165: LD_ADDR_VAR 0 6
7169: PUSH
7170: LD_VAR 0 1
7174: PPUSH
7175: CALL_OW 252
7179: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7180: LD_ADDR_VAR 0 7
7184: PUSH
7185: LD_VAR 0 1
7189: PPUSH
7190: CALL_OW 253
7194: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7195: LD_ADDR_VAR 0 13
7199: PUSH
7200: LD_INT 81
7202: PUSH
7203: LD_VAR 0 1
7207: PPUSH
7208: CALL_OW 255
7212: PUSH
7213: EMPTY
7214: LIST
7215: LIST
7216: PUSH
7217: LD_INT 92
7219: PUSH
7220: LD_VAR 0 6
7224: PUSH
7225: LD_VAR 0 7
7229: PUSH
7230: LD_VAR 0 15
7234: PUSH
7235: EMPTY
7236: LIST
7237: LIST
7238: LIST
7239: LIST
7240: PUSH
7241: LD_INT 101
7243: PUSH
7244: LD_INT 1
7246: PUSH
7247: EMPTY
7248: LIST
7249: LIST
7250: PUSH
7251: EMPTY
7252: LIST
7253: LIST
7254: LIST
7255: PPUSH
7256: CALL_OW 69
7260: ST_TO_ADDR
// if enemy then
7261: LD_VAR 0 13
7265: IFFALSE 7336
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7267: LD_ADDR_VAR 0 14
7271: PUSH
7272: LD_VAR 0 13
7276: PPUSH
7277: LD_VAR 0 1
7281: PPUSH
7282: CALL_OW 74
7286: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7287: LD_VAR 0 14
7291: PPUSH
7292: LD_VAR 0 6
7296: PPUSH
7297: LD_VAR 0 7
7301: PPUSH
7302: CALL_OW 297
7306: PUSH
7307: LD_VAR 0 15
7311: PUSH
7312: LD_VAR 0 17
7316: PLUS
7317: LESS
7318: IFFALSE 7334
// ComAttackUnit ( unit , e ) ;
7320: LD_VAR 0 1
7324: PPUSH
7325: LD_VAR 0 14
7329: PPUSH
7330: CALL_OW 115
// end else
7334: GO 7353
// begin ComStop ( unit ) ;
7336: LD_VAR 0 1
7340: PPUSH
7341: CALL_OW 141
// status = 5 ;
7345: LD_ADDR_VAR 0 12
7349: PUSH
7350: LD_INT 5
7352: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7353: LD_VAR 0 12
7357: PUSH
7358: LD_INT 3
7360: EQUAL
7361: PUSH
7362: LD_VAR 0 16
7366: AND
7367: IFFALSE 7453
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7369: LD_VAR 0 1
7373: PPUSH
7374: LD_VAR 0 16
7378: PUSH
7379: LD_INT 1
7381: ARRAY
7382: PPUSH
7383: LD_VAR 0 16
7387: PUSH
7388: LD_INT 2
7390: ARRAY
7391: PPUSH
7392: CALL_OW 111
// wait ( 0 0$1 ) ;
7396: LD_INT 35
7398: PPUSH
7399: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7403: LD_VAR 0 1
7407: PPUSH
7408: LD_VAR 0 16
7412: PUSH
7413: LD_INT 1
7415: ARRAY
7416: PPUSH
7417: LD_VAR 0 16
7421: PUSH
7422: LD_INT 2
7424: ARRAY
7425: PPUSH
7426: CALL_OW 297
7430: PUSH
7431: LD_INT 4
7433: LESS
7434: IFFALSE 7369
// ComStop ( unit ) ;
7436: LD_VAR 0 1
7440: PPUSH
7441: CALL_OW 141
// status = 4 ;
7445: LD_ADDR_VAR 0 12
7449: PUSH
7450: LD_INT 4
7452: ST_TO_ADDR
// end ; if status = 4 then
7453: LD_VAR 0 12
7457: PUSH
7458: LD_INT 4
7460: EQUAL
7461: IFFALSE 7493
// begin repeat wait ( 0 0$1 ) ;
7463: LD_INT 35
7465: PPUSH
7466: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7470: LD_VAR 0 1
7474: PPUSH
7475: CALL_OW 256
7479: PUSH
7480: LD_INT 1000
7482: EQUAL
7483: IFFALSE 7463
// status = 5 ;
7485: LD_ADDR_VAR 0 12
7489: PUSH
7490: LD_INT 5
7492: ST_TO_ADDR
// end ; if status = 5 then
7493: LD_VAR 0 12
7497: PUSH
7498: LD_INT 5
7500: EQUAL
7501: IFFALSE 7783
// begin p := 999 ;
7503: LD_ADDR_VAR 0 9
7507: PUSH
7508: LD_INT 999
7510: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7511: LD_ADDR_VAR 0 14
7515: PUSH
7516: LD_VAR 0 11
7520: PUSH
7521: LD_INT 2
7523: ARRAY
7524: PUSH
7525: LD_INT 1
7527: ARRAY
7528: PUSH
7529: LD_VAR 0 11
7533: PUSH
7534: LD_INT 2
7536: ARRAY
7537: PUSH
7538: LD_INT 2
7540: ARRAY
7541: PUSH
7542: EMPTY
7543: LIST
7544: LIST
7545: ST_TO_ADDR
// c := 1 ;
7546: LD_ADDR_VAR 0 8
7550: PUSH
7551: LD_INT 1
7553: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7554: LD_ADDR_VAR 0 5
7558: PUSH
7559: DOUBLE
7560: LD_INT 1
7562: DEC
7563: ST_TO_ADDR
7564: LD_VAR 0 11
7568: PUSH
7569: LD_INT 2
7571: ARRAY
7572: PUSH
7573: LD_INT 2
7575: DIV
7576: PUSH
7577: FOR_TO
7578: IFFALSE 7710
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7580: LD_ADDR_VAR 0 6
7584: PUSH
7585: LD_VAR 0 1
7589: PPUSH
7590: LD_VAR 0 11
7594: PUSH
7595: LD_INT 2
7597: ARRAY
7598: PUSH
7599: LD_VAR 0 8
7603: ARRAY
7604: PPUSH
7605: LD_VAR 0 11
7609: PUSH
7610: LD_INT 2
7612: ARRAY
7613: PUSH
7614: LD_VAR 0 8
7618: PUSH
7619: LD_INT 1
7621: PLUS
7622: ARRAY
7623: PPUSH
7624: CALL_OW 297
7628: ST_TO_ADDR
// if x < p then
7629: LD_VAR 0 6
7633: PUSH
7634: LD_VAR 0 9
7638: LESS
7639: IFFALSE 7694
// begin p := x ;
7641: LD_ADDR_VAR 0 9
7645: PUSH
7646: LD_VAR 0 6
7650: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7651: LD_ADDR_VAR 0 14
7655: PUSH
7656: LD_VAR 0 11
7660: PUSH
7661: LD_INT 2
7663: ARRAY
7664: PUSH
7665: LD_VAR 0 8
7669: ARRAY
7670: PUSH
7671: LD_VAR 0 11
7675: PUSH
7676: LD_INT 2
7678: ARRAY
7679: PUSH
7680: LD_VAR 0 8
7684: PUSH
7685: LD_INT 1
7687: PLUS
7688: ARRAY
7689: PUSH
7690: EMPTY
7691: LIST
7692: LIST
7693: ST_TO_ADDR
// end ; c = c + 2 ;
7694: LD_ADDR_VAR 0 8
7698: PUSH
7699: LD_VAR 0 8
7703: PUSH
7704: LD_INT 2
7706: PLUS
7707: ST_TO_ADDR
// end ;
7708: GO 7577
7710: POP
7711: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7712: LD_VAR 0 1
7716: PPUSH
7717: LD_VAR 0 14
7721: PUSH
7722: LD_INT 1
7724: ARRAY
7725: PPUSH
7726: LD_VAR 0 14
7730: PUSH
7731: LD_INT 2
7733: ARRAY
7734: PPUSH
7735: CALL_OW 111
// wait ( 0 0$1 ) ;
7739: LD_INT 35
7741: PPUSH
7742: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7746: LD_VAR 0 1
7750: PPUSH
7751: LD_VAR 0 14
7755: PUSH
7756: LD_INT 1
7758: ARRAY
7759: PPUSH
7760: LD_VAR 0 14
7764: PUSH
7765: LD_INT 2
7767: ARRAY
7768: PPUSH
7769: CALL_OW 307
7773: IFFALSE 7712
// status = 1 ;
7775: LD_ADDR_VAR 0 12
7779: PUSH
7780: LD_INT 1
7782: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7783: LD_VAR 0 1
7787: PPUSH
7788: CALL_OW 301
7792: IFFALSE 6521
// end ;
7794: LD_VAR 0 4
7798: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7799: LD_INT 0
7801: PPUSH
7802: PPUSH
7803: PPUSH
7804: PPUSH
7805: PPUSH
7806: PPUSH
7807: PPUSH
7808: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7809: LD_VAR 0 1
7813: NOT
7814: PUSH
7815: LD_VAR 0 3
7819: NOT
7820: OR
7821: PUSH
7822: LD_VAR 0 4
7826: PUSH
7827: LD_INT 1
7829: PUSH
7830: LD_INT 2
7832: PUSH
7833: LD_INT 0
7835: PUSH
7836: EMPTY
7837: LIST
7838: LIST
7839: LIST
7840: IN
7841: NOT
7842: OR
7843: PUSH
7844: LD_VAR 0 6
7848: NOT
7849: OR
7850: PUSH
7851: LD_VAR 0 7
7855: NOT
7856: OR
7857: IFFALSE 7861
// exit ;
7859: GO 8252
// sex_id :=  ;
7861: LD_ADDR_VAR 0 14
7865: PUSH
7866: LD_STRING 
7868: ST_TO_ADDR
// case class of 1 :
7869: LD_VAR 0 5
7873: PUSH
7874: LD_INT 1
7876: DOUBLE
7877: EQUAL
7878: IFTRUE 7882
7880: GO 7893
7882: POP
// class_id := Sol ; 2 :
7883: LD_ADDR_VAR 0 15
7887: PUSH
7888: LD_STRING Sol
7890: ST_TO_ADDR
7891: GO 7951
7893: LD_INT 2
7895: DOUBLE
7896: EQUAL
7897: IFTRUE 7901
7899: GO 7912
7901: POP
// class_id := Eng ; 3 :
7902: LD_ADDR_VAR 0 15
7906: PUSH
7907: LD_STRING Eng
7909: ST_TO_ADDR
7910: GO 7951
7912: LD_INT 3
7914: DOUBLE
7915: EQUAL
7916: IFTRUE 7920
7918: GO 7931
7920: POP
// class_id := Mech ; 4 :
7921: LD_ADDR_VAR 0 15
7925: PUSH
7926: LD_STRING Mech
7928: ST_TO_ADDR
7929: GO 7951
7931: LD_INT 4
7933: DOUBLE
7934: EQUAL
7935: IFTRUE 7939
7937: GO 7950
7939: POP
// class_id := Sci ; end ;
7940: LD_ADDR_VAR 0 15
7944: PUSH
7945: LD_STRING Sci
7947: ST_TO_ADDR
7948: GO 7951
7950: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7951: LD_ADDR_VAR 0 11
7955: PUSH
7956: LD_VAR 0 1
7960: PPUSH
7961: LD_INT 25
7963: PUSH
7964: LD_VAR 0 5
7968: PUSH
7969: EMPTY
7970: LIST
7971: LIST
7972: PPUSH
7973: CALL_OW 72
7977: ST_TO_ADDR
// if tmp then
7978: LD_VAR 0 11
7982: IFFALSE 7994
// units := tmp ;
7984: LD_ADDR_VAR 0 1
7988: PUSH
7989: LD_VAR 0 11
7993: ST_TO_ADDR
// if sex then
7994: LD_VAR 0 4
7998: IFFALSE 8054
// begin if sex = sex_female then
8000: LD_VAR 0 4
8004: PUSH
8005: LD_INT 2
8007: EQUAL
8008: IFFALSE 8018
// sex_id := F ;
8010: LD_ADDR_VAR 0 14
8014: PUSH
8015: LD_STRING F
8017: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8018: LD_ADDR_VAR 0 1
8022: PUSH
8023: LD_VAR 0 1
8027: PPUSH
8028: LD_INT 26
8030: PUSH
8031: LD_VAR 0 4
8035: PUSH
8036: EMPTY
8037: LIST
8038: LIST
8039: PPUSH
8040: CALL_OW 72
8044: ST_TO_ADDR
// if not units then
8045: LD_VAR 0 1
8049: NOT
8050: IFFALSE 8054
// exit ;
8052: GO 8252
// end ; unit_id := id ;
8054: LD_ADDR_VAR 0 12
8058: PUSH
8059: LD_VAR 0 6
8063: ST_TO_ADDR
// if unit_id > units then
8064: LD_VAR 0 12
8068: PUSH
8069: LD_VAR 0 1
8073: GREATER
8074: IFFALSE 8084
// unit_id := 1 ;
8076: LD_ADDR_VAR 0 12
8080: PUSH
8081: LD_INT 1
8083: ST_TO_ADDR
// if not units [ unit_id ] then
8084: LD_VAR 0 1
8088: PUSH
8089: LD_VAR 0 12
8093: ARRAY
8094: NOT
8095: IFFALSE 8099
// exit ;
8097: GO 8252
// unit := units [ unit_id ] ;
8099: LD_ADDR_VAR 0 10
8103: PUSH
8104: LD_VAR 0 1
8108: PUSH
8109: LD_VAR 0 12
8113: ARRAY
8114: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8115: LD_ADDR_VAR 0 13
8119: PUSH
8120: LD_STRING D
8122: PUSH
8123: LD_VAR 0 3
8127: STR
8128: PUSH
8129: LD_STRING -
8131: STR
8132: PUSH
8133: LD_VAR 0 14
8137: STR
8138: PUSH
8139: LD_VAR 0 15
8143: STR
8144: PUSH
8145: LD_VAR 0 6
8149: STR
8150: PUSH
8151: LD_STRING -
8153: STR
8154: PUSH
8155: LD_VAR 0 7
8159: STR
8160: ST_TO_ADDR
// case type of 0 :
8161: LD_VAR 0 2
8165: PUSH
8166: LD_INT 0
8168: DOUBLE
8169: EQUAL
8170: IFTRUE 8174
8172: GO 8191
8174: POP
// Say ( unit , dialog_id ) ; 1 :
8175: LD_VAR 0 10
8179: PPUSH
8180: LD_VAR 0 13
8184: PPUSH
8185: CALL_OW 88
8189: GO 8242
8191: LD_INT 1
8193: DOUBLE
8194: EQUAL
8195: IFTRUE 8199
8197: GO 8216
8199: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8200: LD_VAR 0 10
8204: PPUSH
8205: LD_VAR 0 13
8209: PPUSH
8210: CALL_OW 94
8214: GO 8242
8216: LD_INT 2
8218: DOUBLE
8219: EQUAL
8220: IFTRUE 8224
8222: GO 8241
8224: POP
// ForceSay ( unit , dialog_id ) ; end ;
8225: LD_VAR 0 10
8229: PPUSH
8230: LD_VAR 0 13
8234: PPUSH
8235: CALL_OW 91
8239: GO 8242
8241: POP
// result := unit ;
8242: LD_ADDR_VAR 0 8
8246: PUSH
8247: LD_VAR 0 10
8251: ST_TO_ADDR
// end ;
8252: LD_VAR 0 8
8256: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8257: LD_INT 0
8259: PPUSH
8260: PPUSH
8261: PPUSH
8262: PPUSH
8263: PPUSH
8264: PPUSH
8265: PPUSH
// result := array ;
8266: LD_ADDR_VAR 0 5
8270: PUSH
8271: LD_VAR 0 1
8275: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8276: LD_VAR 0 1
8280: NOT
8281: PUSH
8282: LD_VAR 0 2
8286: NOT
8287: OR
8288: PUSH
8289: LD_VAR 0 3
8293: NOT
8294: OR
8295: PUSH
8296: LD_VAR 0 2
8300: PUSH
8301: LD_VAR 0 1
8305: GREATER
8306: OR
8307: PUSH
8308: LD_VAR 0 3
8312: PUSH
8313: LD_VAR 0 1
8317: GREATER
8318: OR
8319: IFFALSE 8323
// exit ;
8321: GO 8619
// if direction then
8323: LD_VAR 0 4
8327: IFFALSE 8391
// begin d := 1 ;
8329: LD_ADDR_VAR 0 9
8333: PUSH
8334: LD_INT 1
8336: ST_TO_ADDR
// if i_from > i_to then
8337: LD_VAR 0 2
8341: PUSH
8342: LD_VAR 0 3
8346: GREATER
8347: IFFALSE 8373
// length := ( array - i_from ) + i_to else
8349: LD_ADDR_VAR 0 11
8353: PUSH
8354: LD_VAR 0 1
8358: PUSH
8359: LD_VAR 0 2
8363: MINUS
8364: PUSH
8365: LD_VAR 0 3
8369: PLUS
8370: ST_TO_ADDR
8371: GO 8389
// length := i_to - i_from ;
8373: LD_ADDR_VAR 0 11
8377: PUSH
8378: LD_VAR 0 3
8382: PUSH
8383: LD_VAR 0 2
8387: MINUS
8388: ST_TO_ADDR
// end else
8389: GO 8452
// begin d := - 1 ;
8391: LD_ADDR_VAR 0 9
8395: PUSH
8396: LD_INT 1
8398: NEG
8399: ST_TO_ADDR
// if i_from > i_to then
8400: LD_VAR 0 2
8404: PUSH
8405: LD_VAR 0 3
8409: GREATER
8410: IFFALSE 8430
// length := i_from - i_to else
8412: LD_ADDR_VAR 0 11
8416: PUSH
8417: LD_VAR 0 2
8421: PUSH
8422: LD_VAR 0 3
8426: MINUS
8427: ST_TO_ADDR
8428: GO 8452
// length := ( array - i_to ) + i_from ;
8430: LD_ADDR_VAR 0 11
8434: PUSH
8435: LD_VAR 0 1
8439: PUSH
8440: LD_VAR 0 3
8444: MINUS
8445: PUSH
8446: LD_VAR 0 2
8450: PLUS
8451: ST_TO_ADDR
// end ; if not length then
8452: LD_VAR 0 11
8456: NOT
8457: IFFALSE 8461
// exit ;
8459: GO 8619
// tmp := array ;
8461: LD_ADDR_VAR 0 10
8465: PUSH
8466: LD_VAR 0 1
8470: ST_TO_ADDR
// for i = 1 to length do
8471: LD_ADDR_VAR 0 6
8475: PUSH
8476: DOUBLE
8477: LD_INT 1
8479: DEC
8480: ST_TO_ADDR
8481: LD_VAR 0 11
8485: PUSH
8486: FOR_TO
8487: IFFALSE 8607
// begin for j = 1 to array do
8489: LD_ADDR_VAR 0 7
8493: PUSH
8494: DOUBLE
8495: LD_INT 1
8497: DEC
8498: ST_TO_ADDR
8499: LD_VAR 0 1
8503: PUSH
8504: FOR_TO
8505: IFFALSE 8593
// begin k := j + d ;
8507: LD_ADDR_VAR 0 8
8511: PUSH
8512: LD_VAR 0 7
8516: PUSH
8517: LD_VAR 0 9
8521: PLUS
8522: ST_TO_ADDR
// if k > array then
8523: LD_VAR 0 8
8527: PUSH
8528: LD_VAR 0 1
8532: GREATER
8533: IFFALSE 8543
// k := 1 ;
8535: LD_ADDR_VAR 0 8
8539: PUSH
8540: LD_INT 1
8542: ST_TO_ADDR
// if not k then
8543: LD_VAR 0 8
8547: NOT
8548: IFFALSE 8560
// k := array ;
8550: LD_ADDR_VAR 0 8
8554: PUSH
8555: LD_VAR 0 1
8559: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8560: LD_ADDR_VAR 0 10
8564: PUSH
8565: LD_VAR 0 10
8569: PPUSH
8570: LD_VAR 0 8
8574: PPUSH
8575: LD_VAR 0 1
8579: PUSH
8580: LD_VAR 0 7
8584: ARRAY
8585: PPUSH
8586: CALL_OW 1
8590: ST_TO_ADDR
// end ;
8591: GO 8504
8593: POP
8594: POP
// array := tmp ;
8595: LD_ADDR_VAR 0 1
8599: PUSH
8600: LD_VAR 0 10
8604: ST_TO_ADDR
// end ;
8605: GO 8486
8607: POP
8608: POP
// result := array ;
8609: LD_ADDR_VAR 0 5
8613: PUSH
8614: LD_VAR 0 1
8618: ST_TO_ADDR
// end ;
8619: LD_VAR 0 5
8623: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8624: LD_INT 0
8626: PPUSH
8627: PPUSH
8628: PPUSH
8629: PPUSH
8630: PPUSH
8631: PPUSH
8632: PPUSH
8633: PPUSH
8634: PPUSH
8635: PPUSH
8636: PPUSH
8637: PPUSH
8638: PPUSH
8639: PPUSH
8640: PPUSH
8641: PPUSH
8642: PPUSH
8643: PPUSH
8644: PPUSH
8645: PPUSH
8646: PPUSH
8647: PPUSH
8648: PPUSH
8649: PPUSH
8650: PPUSH
8651: PPUSH
8652: PPUSH
8653: PPUSH
8654: PPUSH
8655: PPUSH
8656: PPUSH
8657: PPUSH
8658: PPUSH
8659: PPUSH
8660: PPUSH
8661: PPUSH
8662: PPUSH
8663: PPUSH
8664: PPUSH
8665: PPUSH
8666: PPUSH
8667: PPUSH
8668: PPUSH
8669: PPUSH
8670: PPUSH
8671: PPUSH
8672: PPUSH
8673: PPUSH
8674: PPUSH
8675: PPUSH
8676: PPUSH
8677: PPUSH
8678: PPUSH
8679: PPUSH
8680: PPUSH
8681: PPUSH
8682: PPUSH
8683: PPUSH
// result = [ ] ;
8684: LD_ADDR_VAR 0 7
8688: PUSH
8689: EMPTY
8690: ST_TO_ADDR
// temp_list = [ ] ;
8691: LD_ADDR_VAR 0 9
8695: PUSH
8696: EMPTY
8697: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8698: LD_VAR 0 4
8702: PUSH
8703: LD_INT 0
8705: PUSH
8706: LD_INT 1
8708: PUSH
8709: LD_INT 2
8711: PUSH
8712: LD_INT 3
8714: PUSH
8715: LD_INT 4
8717: PUSH
8718: LD_INT 5
8720: PUSH
8721: EMPTY
8722: LIST
8723: LIST
8724: LIST
8725: LIST
8726: LIST
8727: LIST
8728: IN
8729: NOT
8730: PUSH
8731: LD_VAR 0 1
8735: PUSH
8736: LD_INT 0
8738: PUSH
8739: LD_INT 1
8741: PUSH
8742: EMPTY
8743: LIST
8744: LIST
8745: IN
8746: PUSH
8747: LD_VAR 0 5
8751: PUSH
8752: LD_INT 1
8754: PUSH
8755: LD_INT 2
8757: PUSH
8758: LD_INT 3
8760: PUSH
8761: EMPTY
8762: LIST
8763: LIST
8764: LIST
8765: IN
8766: NOT
8767: AND
8768: OR
8769: IFFALSE 8773
// exit ;
8771: GO 27158
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8773: LD_VAR 0 1
8777: PUSH
8778: LD_INT 6
8780: PUSH
8781: LD_INT 7
8783: PUSH
8784: LD_INT 8
8786: PUSH
8787: LD_INT 13
8789: PUSH
8790: LD_INT 12
8792: PUSH
8793: LD_INT 15
8795: PUSH
8796: LD_INT 11
8798: PUSH
8799: LD_INT 14
8801: PUSH
8802: LD_INT 10
8804: PUSH
8805: EMPTY
8806: LIST
8807: LIST
8808: LIST
8809: LIST
8810: LIST
8811: LIST
8812: LIST
8813: LIST
8814: LIST
8815: IN
8816: IFFALSE 8826
// btype = b_lab ;
8818: LD_ADDR_VAR 0 1
8822: PUSH
8823: LD_INT 6
8825: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8826: LD_VAR 0 6
8830: PUSH
8831: LD_INT 0
8833: PUSH
8834: LD_INT 1
8836: PUSH
8837: LD_INT 2
8839: PUSH
8840: EMPTY
8841: LIST
8842: LIST
8843: LIST
8844: IN
8845: NOT
8846: PUSH
8847: LD_VAR 0 1
8851: PUSH
8852: LD_INT 0
8854: PUSH
8855: LD_INT 1
8857: PUSH
8858: LD_INT 2
8860: PUSH
8861: LD_INT 3
8863: PUSH
8864: LD_INT 6
8866: PUSH
8867: LD_INT 36
8869: PUSH
8870: LD_INT 4
8872: PUSH
8873: LD_INT 5
8875: PUSH
8876: LD_INT 31
8878: PUSH
8879: LD_INT 32
8881: PUSH
8882: LD_INT 33
8884: PUSH
8885: EMPTY
8886: LIST
8887: LIST
8888: LIST
8889: LIST
8890: LIST
8891: LIST
8892: LIST
8893: LIST
8894: LIST
8895: LIST
8896: LIST
8897: IN
8898: NOT
8899: PUSH
8900: LD_VAR 0 6
8904: PUSH
8905: LD_INT 1
8907: EQUAL
8908: AND
8909: OR
8910: PUSH
8911: LD_VAR 0 1
8915: PUSH
8916: LD_INT 2
8918: PUSH
8919: LD_INT 3
8921: PUSH
8922: EMPTY
8923: LIST
8924: LIST
8925: IN
8926: NOT
8927: PUSH
8928: LD_VAR 0 6
8932: PUSH
8933: LD_INT 2
8935: EQUAL
8936: AND
8937: OR
8938: IFFALSE 8948
// mode = 0 ;
8940: LD_ADDR_VAR 0 6
8944: PUSH
8945: LD_INT 0
8947: ST_TO_ADDR
// case mode of 0 :
8948: LD_VAR 0 6
8952: PUSH
8953: LD_INT 0
8955: DOUBLE
8956: EQUAL
8957: IFTRUE 8961
8959: GO 20414
8961: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8962: LD_ADDR_VAR 0 11
8966: PUSH
8967: LD_INT 0
8969: PUSH
8970: LD_INT 0
8972: PUSH
8973: EMPTY
8974: LIST
8975: LIST
8976: PUSH
8977: LD_INT 0
8979: PUSH
8980: LD_INT 1
8982: NEG
8983: PUSH
8984: EMPTY
8985: LIST
8986: LIST
8987: PUSH
8988: LD_INT 1
8990: PUSH
8991: LD_INT 0
8993: PUSH
8994: EMPTY
8995: LIST
8996: LIST
8997: PUSH
8998: LD_INT 1
9000: PUSH
9001: LD_INT 1
9003: PUSH
9004: EMPTY
9005: LIST
9006: LIST
9007: PUSH
9008: LD_INT 0
9010: PUSH
9011: LD_INT 1
9013: PUSH
9014: EMPTY
9015: LIST
9016: LIST
9017: PUSH
9018: LD_INT 1
9020: NEG
9021: PUSH
9022: LD_INT 0
9024: PUSH
9025: EMPTY
9026: LIST
9027: LIST
9028: PUSH
9029: LD_INT 1
9031: NEG
9032: PUSH
9033: LD_INT 1
9035: NEG
9036: PUSH
9037: EMPTY
9038: LIST
9039: LIST
9040: PUSH
9041: LD_INT 1
9043: NEG
9044: PUSH
9045: LD_INT 2
9047: NEG
9048: PUSH
9049: EMPTY
9050: LIST
9051: LIST
9052: PUSH
9053: LD_INT 0
9055: PUSH
9056: LD_INT 2
9058: NEG
9059: PUSH
9060: EMPTY
9061: LIST
9062: LIST
9063: PUSH
9064: LD_INT 1
9066: PUSH
9067: LD_INT 1
9069: NEG
9070: PUSH
9071: EMPTY
9072: LIST
9073: LIST
9074: PUSH
9075: LD_INT 1
9077: PUSH
9078: LD_INT 2
9080: PUSH
9081: EMPTY
9082: LIST
9083: LIST
9084: PUSH
9085: LD_INT 0
9087: PUSH
9088: LD_INT 2
9090: PUSH
9091: EMPTY
9092: LIST
9093: LIST
9094: PUSH
9095: LD_INT 1
9097: NEG
9098: PUSH
9099: LD_INT 1
9101: PUSH
9102: EMPTY
9103: LIST
9104: LIST
9105: PUSH
9106: LD_INT 1
9108: PUSH
9109: LD_INT 3
9111: PUSH
9112: EMPTY
9113: LIST
9114: LIST
9115: PUSH
9116: LD_INT 0
9118: PUSH
9119: LD_INT 3
9121: PUSH
9122: EMPTY
9123: LIST
9124: LIST
9125: PUSH
9126: LD_INT 1
9128: NEG
9129: PUSH
9130: LD_INT 2
9132: PUSH
9133: EMPTY
9134: LIST
9135: LIST
9136: PUSH
9137: EMPTY
9138: LIST
9139: LIST
9140: LIST
9141: LIST
9142: LIST
9143: LIST
9144: LIST
9145: LIST
9146: LIST
9147: LIST
9148: LIST
9149: LIST
9150: LIST
9151: LIST
9152: LIST
9153: LIST
9154: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9155: LD_ADDR_VAR 0 12
9159: PUSH
9160: LD_INT 0
9162: PUSH
9163: LD_INT 0
9165: PUSH
9166: EMPTY
9167: LIST
9168: LIST
9169: PUSH
9170: LD_INT 0
9172: PUSH
9173: LD_INT 1
9175: NEG
9176: PUSH
9177: EMPTY
9178: LIST
9179: LIST
9180: PUSH
9181: LD_INT 1
9183: PUSH
9184: LD_INT 0
9186: PUSH
9187: EMPTY
9188: LIST
9189: LIST
9190: PUSH
9191: LD_INT 1
9193: PUSH
9194: LD_INT 1
9196: PUSH
9197: EMPTY
9198: LIST
9199: LIST
9200: PUSH
9201: LD_INT 0
9203: PUSH
9204: LD_INT 1
9206: PUSH
9207: EMPTY
9208: LIST
9209: LIST
9210: PUSH
9211: LD_INT 1
9213: NEG
9214: PUSH
9215: LD_INT 0
9217: PUSH
9218: EMPTY
9219: LIST
9220: LIST
9221: PUSH
9222: LD_INT 1
9224: NEG
9225: PUSH
9226: LD_INT 1
9228: NEG
9229: PUSH
9230: EMPTY
9231: LIST
9232: LIST
9233: PUSH
9234: LD_INT 1
9236: PUSH
9237: LD_INT 1
9239: NEG
9240: PUSH
9241: EMPTY
9242: LIST
9243: LIST
9244: PUSH
9245: LD_INT 2
9247: PUSH
9248: LD_INT 0
9250: PUSH
9251: EMPTY
9252: LIST
9253: LIST
9254: PUSH
9255: LD_INT 2
9257: PUSH
9258: LD_INT 1
9260: PUSH
9261: EMPTY
9262: LIST
9263: LIST
9264: PUSH
9265: LD_INT 1
9267: NEG
9268: PUSH
9269: LD_INT 1
9271: PUSH
9272: EMPTY
9273: LIST
9274: LIST
9275: PUSH
9276: LD_INT 2
9278: NEG
9279: PUSH
9280: LD_INT 0
9282: PUSH
9283: EMPTY
9284: LIST
9285: LIST
9286: PUSH
9287: LD_INT 2
9289: NEG
9290: PUSH
9291: LD_INT 1
9293: NEG
9294: PUSH
9295: EMPTY
9296: LIST
9297: LIST
9298: PUSH
9299: LD_INT 2
9301: NEG
9302: PUSH
9303: LD_INT 1
9305: PUSH
9306: EMPTY
9307: LIST
9308: LIST
9309: PUSH
9310: LD_INT 3
9312: NEG
9313: PUSH
9314: LD_INT 0
9316: PUSH
9317: EMPTY
9318: LIST
9319: LIST
9320: PUSH
9321: LD_INT 3
9323: NEG
9324: PUSH
9325: LD_INT 1
9327: NEG
9328: PUSH
9329: EMPTY
9330: LIST
9331: LIST
9332: PUSH
9333: EMPTY
9334: LIST
9335: LIST
9336: LIST
9337: LIST
9338: LIST
9339: LIST
9340: LIST
9341: LIST
9342: LIST
9343: LIST
9344: LIST
9345: LIST
9346: LIST
9347: LIST
9348: LIST
9349: LIST
9350: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9351: LD_ADDR_VAR 0 13
9355: PUSH
9356: LD_INT 0
9358: PUSH
9359: LD_INT 0
9361: PUSH
9362: EMPTY
9363: LIST
9364: LIST
9365: PUSH
9366: LD_INT 0
9368: PUSH
9369: LD_INT 1
9371: NEG
9372: PUSH
9373: EMPTY
9374: LIST
9375: LIST
9376: PUSH
9377: LD_INT 1
9379: PUSH
9380: LD_INT 0
9382: PUSH
9383: EMPTY
9384: LIST
9385: LIST
9386: PUSH
9387: LD_INT 1
9389: PUSH
9390: LD_INT 1
9392: PUSH
9393: EMPTY
9394: LIST
9395: LIST
9396: PUSH
9397: LD_INT 0
9399: PUSH
9400: LD_INT 1
9402: PUSH
9403: EMPTY
9404: LIST
9405: LIST
9406: PUSH
9407: LD_INT 1
9409: NEG
9410: PUSH
9411: LD_INT 0
9413: PUSH
9414: EMPTY
9415: LIST
9416: LIST
9417: PUSH
9418: LD_INT 1
9420: NEG
9421: PUSH
9422: LD_INT 1
9424: NEG
9425: PUSH
9426: EMPTY
9427: LIST
9428: LIST
9429: PUSH
9430: LD_INT 1
9432: NEG
9433: PUSH
9434: LD_INT 2
9436: NEG
9437: PUSH
9438: EMPTY
9439: LIST
9440: LIST
9441: PUSH
9442: LD_INT 2
9444: PUSH
9445: LD_INT 1
9447: PUSH
9448: EMPTY
9449: LIST
9450: LIST
9451: PUSH
9452: LD_INT 2
9454: PUSH
9455: LD_INT 2
9457: PUSH
9458: EMPTY
9459: LIST
9460: LIST
9461: PUSH
9462: LD_INT 1
9464: PUSH
9465: LD_INT 2
9467: PUSH
9468: EMPTY
9469: LIST
9470: LIST
9471: PUSH
9472: LD_INT 2
9474: NEG
9475: PUSH
9476: LD_INT 1
9478: NEG
9479: PUSH
9480: EMPTY
9481: LIST
9482: LIST
9483: PUSH
9484: LD_INT 2
9486: NEG
9487: PUSH
9488: LD_INT 2
9490: NEG
9491: PUSH
9492: EMPTY
9493: LIST
9494: LIST
9495: PUSH
9496: LD_INT 2
9498: NEG
9499: PUSH
9500: LD_INT 3
9502: NEG
9503: PUSH
9504: EMPTY
9505: LIST
9506: LIST
9507: PUSH
9508: LD_INT 3
9510: NEG
9511: PUSH
9512: LD_INT 2
9514: NEG
9515: PUSH
9516: EMPTY
9517: LIST
9518: LIST
9519: PUSH
9520: LD_INT 3
9522: NEG
9523: PUSH
9524: LD_INT 3
9526: NEG
9527: PUSH
9528: EMPTY
9529: LIST
9530: LIST
9531: PUSH
9532: EMPTY
9533: LIST
9534: LIST
9535: LIST
9536: LIST
9537: LIST
9538: LIST
9539: LIST
9540: LIST
9541: LIST
9542: LIST
9543: LIST
9544: LIST
9545: LIST
9546: LIST
9547: LIST
9548: LIST
9549: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9550: LD_ADDR_VAR 0 14
9554: PUSH
9555: LD_INT 0
9557: PUSH
9558: LD_INT 0
9560: PUSH
9561: EMPTY
9562: LIST
9563: LIST
9564: PUSH
9565: LD_INT 0
9567: PUSH
9568: LD_INT 1
9570: NEG
9571: PUSH
9572: EMPTY
9573: LIST
9574: LIST
9575: PUSH
9576: LD_INT 1
9578: PUSH
9579: LD_INT 0
9581: PUSH
9582: EMPTY
9583: LIST
9584: LIST
9585: PUSH
9586: LD_INT 1
9588: PUSH
9589: LD_INT 1
9591: PUSH
9592: EMPTY
9593: LIST
9594: LIST
9595: PUSH
9596: LD_INT 0
9598: PUSH
9599: LD_INT 1
9601: PUSH
9602: EMPTY
9603: LIST
9604: LIST
9605: PUSH
9606: LD_INT 1
9608: NEG
9609: PUSH
9610: LD_INT 0
9612: PUSH
9613: EMPTY
9614: LIST
9615: LIST
9616: PUSH
9617: LD_INT 1
9619: NEG
9620: PUSH
9621: LD_INT 1
9623: NEG
9624: PUSH
9625: EMPTY
9626: LIST
9627: LIST
9628: PUSH
9629: LD_INT 1
9631: NEG
9632: PUSH
9633: LD_INT 2
9635: NEG
9636: PUSH
9637: EMPTY
9638: LIST
9639: LIST
9640: PUSH
9641: LD_INT 0
9643: PUSH
9644: LD_INT 2
9646: NEG
9647: PUSH
9648: EMPTY
9649: LIST
9650: LIST
9651: PUSH
9652: LD_INT 1
9654: PUSH
9655: LD_INT 1
9657: NEG
9658: PUSH
9659: EMPTY
9660: LIST
9661: LIST
9662: PUSH
9663: LD_INT 1
9665: PUSH
9666: LD_INT 2
9668: PUSH
9669: EMPTY
9670: LIST
9671: LIST
9672: PUSH
9673: LD_INT 0
9675: PUSH
9676: LD_INT 2
9678: PUSH
9679: EMPTY
9680: LIST
9681: LIST
9682: PUSH
9683: LD_INT 1
9685: NEG
9686: PUSH
9687: LD_INT 1
9689: PUSH
9690: EMPTY
9691: LIST
9692: LIST
9693: PUSH
9694: LD_INT 1
9696: NEG
9697: PUSH
9698: LD_INT 3
9700: NEG
9701: PUSH
9702: EMPTY
9703: LIST
9704: LIST
9705: PUSH
9706: LD_INT 0
9708: PUSH
9709: LD_INT 3
9711: NEG
9712: PUSH
9713: EMPTY
9714: LIST
9715: LIST
9716: PUSH
9717: LD_INT 1
9719: PUSH
9720: LD_INT 2
9722: NEG
9723: PUSH
9724: EMPTY
9725: LIST
9726: LIST
9727: PUSH
9728: EMPTY
9729: LIST
9730: LIST
9731: LIST
9732: LIST
9733: LIST
9734: LIST
9735: LIST
9736: LIST
9737: LIST
9738: LIST
9739: LIST
9740: LIST
9741: LIST
9742: LIST
9743: LIST
9744: LIST
9745: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9746: LD_ADDR_VAR 0 15
9750: PUSH
9751: LD_INT 0
9753: PUSH
9754: LD_INT 0
9756: PUSH
9757: EMPTY
9758: LIST
9759: LIST
9760: PUSH
9761: LD_INT 0
9763: PUSH
9764: LD_INT 1
9766: NEG
9767: PUSH
9768: EMPTY
9769: LIST
9770: LIST
9771: PUSH
9772: LD_INT 1
9774: PUSH
9775: LD_INT 0
9777: PUSH
9778: EMPTY
9779: LIST
9780: LIST
9781: PUSH
9782: LD_INT 1
9784: PUSH
9785: LD_INT 1
9787: PUSH
9788: EMPTY
9789: LIST
9790: LIST
9791: PUSH
9792: LD_INT 0
9794: PUSH
9795: LD_INT 1
9797: PUSH
9798: EMPTY
9799: LIST
9800: LIST
9801: PUSH
9802: LD_INT 1
9804: NEG
9805: PUSH
9806: LD_INT 0
9808: PUSH
9809: EMPTY
9810: LIST
9811: LIST
9812: PUSH
9813: LD_INT 1
9815: NEG
9816: PUSH
9817: LD_INT 1
9819: NEG
9820: PUSH
9821: EMPTY
9822: LIST
9823: LIST
9824: PUSH
9825: LD_INT 1
9827: PUSH
9828: LD_INT 1
9830: NEG
9831: PUSH
9832: EMPTY
9833: LIST
9834: LIST
9835: PUSH
9836: LD_INT 2
9838: PUSH
9839: LD_INT 0
9841: PUSH
9842: EMPTY
9843: LIST
9844: LIST
9845: PUSH
9846: LD_INT 2
9848: PUSH
9849: LD_INT 1
9851: PUSH
9852: EMPTY
9853: LIST
9854: LIST
9855: PUSH
9856: LD_INT 1
9858: NEG
9859: PUSH
9860: LD_INT 1
9862: PUSH
9863: EMPTY
9864: LIST
9865: LIST
9866: PUSH
9867: LD_INT 2
9869: NEG
9870: PUSH
9871: LD_INT 0
9873: PUSH
9874: EMPTY
9875: LIST
9876: LIST
9877: PUSH
9878: LD_INT 2
9880: NEG
9881: PUSH
9882: LD_INT 1
9884: NEG
9885: PUSH
9886: EMPTY
9887: LIST
9888: LIST
9889: PUSH
9890: LD_INT 2
9892: PUSH
9893: LD_INT 1
9895: NEG
9896: PUSH
9897: EMPTY
9898: LIST
9899: LIST
9900: PUSH
9901: LD_INT 3
9903: PUSH
9904: LD_INT 0
9906: PUSH
9907: EMPTY
9908: LIST
9909: LIST
9910: PUSH
9911: LD_INT 3
9913: PUSH
9914: LD_INT 1
9916: PUSH
9917: EMPTY
9918: LIST
9919: LIST
9920: PUSH
9921: EMPTY
9922: LIST
9923: LIST
9924: LIST
9925: LIST
9926: LIST
9927: LIST
9928: LIST
9929: LIST
9930: LIST
9931: LIST
9932: LIST
9933: LIST
9934: LIST
9935: LIST
9936: LIST
9937: LIST
9938: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9939: LD_ADDR_VAR 0 16
9943: PUSH
9944: LD_INT 0
9946: PUSH
9947: LD_INT 0
9949: PUSH
9950: EMPTY
9951: LIST
9952: LIST
9953: PUSH
9954: LD_INT 0
9956: PUSH
9957: LD_INT 1
9959: NEG
9960: PUSH
9961: EMPTY
9962: LIST
9963: LIST
9964: PUSH
9965: LD_INT 1
9967: PUSH
9968: LD_INT 0
9970: PUSH
9971: EMPTY
9972: LIST
9973: LIST
9974: PUSH
9975: LD_INT 1
9977: PUSH
9978: LD_INT 1
9980: PUSH
9981: EMPTY
9982: LIST
9983: LIST
9984: PUSH
9985: LD_INT 0
9987: PUSH
9988: LD_INT 1
9990: PUSH
9991: EMPTY
9992: LIST
9993: LIST
9994: PUSH
9995: LD_INT 1
9997: NEG
9998: PUSH
9999: LD_INT 0
10001: PUSH
10002: EMPTY
10003: LIST
10004: LIST
10005: PUSH
10006: LD_INT 1
10008: NEG
10009: PUSH
10010: LD_INT 1
10012: NEG
10013: PUSH
10014: EMPTY
10015: LIST
10016: LIST
10017: PUSH
10018: LD_INT 1
10020: NEG
10021: PUSH
10022: LD_INT 2
10024: NEG
10025: PUSH
10026: EMPTY
10027: LIST
10028: LIST
10029: PUSH
10030: LD_INT 2
10032: PUSH
10033: LD_INT 1
10035: PUSH
10036: EMPTY
10037: LIST
10038: LIST
10039: PUSH
10040: LD_INT 2
10042: PUSH
10043: LD_INT 2
10045: PUSH
10046: EMPTY
10047: LIST
10048: LIST
10049: PUSH
10050: LD_INT 1
10052: PUSH
10053: LD_INT 2
10055: PUSH
10056: EMPTY
10057: LIST
10058: LIST
10059: PUSH
10060: LD_INT 2
10062: NEG
10063: PUSH
10064: LD_INT 1
10066: NEG
10067: PUSH
10068: EMPTY
10069: LIST
10070: LIST
10071: PUSH
10072: LD_INT 2
10074: NEG
10075: PUSH
10076: LD_INT 2
10078: NEG
10079: PUSH
10080: EMPTY
10081: LIST
10082: LIST
10083: PUSH
10084: LD_INT 3
10086: PUSH
10087: LD_INT 2
10089: PUSH
10090: EMPTY
10091: LIST
10092: LIST
10093: PUSH
10094: LD_INT 3
10096: PUSH
10097: LD_INT 3
10099: PUSH
10100: EMPTY
10101: LIST
10102: LIST
10103: PUSH
10104: LD_INT 2
10106: PUSH
10107: LD_INT 3
10109: PUSH
10110: EMPTY
10111: LIST
10112: LIST
10113: PUSH
10114: EMPTY
10115: LIST
10116: LIST
10117: LIST
10118: LIST
10119: LIST
10120: LIST
10121: LIST
10122: LIST
10123: LIST
10124: LIST
10125: LIST
10126: LIST
10127: LIST
10128: LIST
10129: LIST
10130: LIST
10131: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10132: LD_ADDR_VAR 0 17
10136: PUSH
10137: LD_INT 0
10139: PUSH
10140: LD_INT 0
10142: PUSH
10143: EMPTY
10144: LIST
10145: LIST
10146: PUSH
10147: LD_INT 0
10149: PUSH
10150: LD_INT 1
10152: NEG
10153: PUSH
10154: EMPTY
10155: LIST
10156: LIST
10157: PUSH
10158: LD_INT 1
10160: PUSH
10161: LD_INT 0
10163: PUSH
10164: EMPTY
10165: LIST
10166: LIST
10167: PUSH
10168: LD_INT 1
10170: PUSH
10171: LD_INT 1
10173: PUSH
10174: EMPTY
10175: LIST
10176: LIST
10177: PUSH
10178: LD_INT 0
10180: PUSH
10181: LD_INT 1
10183: PUSH
10184: EMPTY
10185: LIST
10186: LIST
10187: PUSH
10188: LD_INT 1
10190: NEG
10191: PUSH
10192: LD_INT 0
10194: PUSH
10195: EMPTY
10196: LIST
10197: LIST
10198: PUSH
10199: LD_INT 1
10201: NEG
10202: PUSH
10203: LD_INT 1
10205: NEG
10206: PUSH
10207: EMPTY
10208: LIST
10209: LIST
10210: PUSH
10211: LD_INT 1
10213: NEG
10214: PUSH
10215: LD_INT 2
10217: NEG
10218: PUSH
10219: EMPTY
10220: LIST
10221: LIST
10222: PUSH
10223: LD_INT 0
10225: PUSH
10226: LD_INT 2
10228: NEG
10229: PUSH
10230: EMPTY
10231: LIST
10232: LIST
10233: PUSH
10234: LD_INT 1
10236: PUSH
10237: LD_INT 1
10239: NEG
10240: PUSH
10241: EMPTY
10242: LIST
10243: LIST
10244: PUSH
10245: LD_INT 2
10247: PUSH
10248: LD_INT 0
10250: PUSH
10251: EMPTY
10252: LIST
10253: LIST
10254: PUSH
10255: LD_INT 2
10257: PUSH
10258: LD_INT 1
10260: PUSH
10261: EMPTY
10262: LIST
10263: LIST
10264: PUSH
10265: LD_INT 2
10267: PUSH
10268: LD_INT 2
10270: PUSH
10271: EMPTY
10272: LIST
10273: LIST
10274: PUSH
10275: LD_INT 1
10277: PUSH
10278: LD_INT 2
10280: PUSH
10281: EMPTY
10282: LIST
10283: LIST
10284: PUSH
10285: LD_INT 0
10287: PUSH
10288: LD_INT 2
10290: PUSH
10291: EMPTY
10292: LIST
10293: LIST
10294: PUSH
10295: LD_INT 1
10297: NEG
10298: PUSH
10299: LD_INT 1
10301: PUSH
10302: EMPTY
10303: LIST
10304: LIST
10305: PUSH
10306: LD_INT 2
10308: NEG
10309: PUSH
10310: LD_INT 0
10312: PUSH
10313: EMPTY
10314: LIST
10315: LIST
10316: PUSH
10317: LD_INT 2
10319: NEG
10320: PUSH
10321: LD_INT 1
10323: NEG
10324: PUSH
10325: EMPTY
10326: LIST
10327: LIST
10328: PUSH
10329: LD_INT 2
10331: NEG
10332: PUSH
10333: LD_INT 2
10335: NEG
10336: PUSH
10337: EMPTY
10338: LIST
10339: LIST
10340: PUSH
10341: EMPTY
10342: LIST
10343: LIST
10344: LIST
10345: LIST
10346: LIST
10347: LIST
10348: LIST
10349: LIST
10350: LIST
10351: LIST
10352: LIST
10353: LIST
10354: LIST
10355: LIST
10356: LIST
10357: LIST
10358: LIST
10359: LIST
10360: LIST
10361: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10362: LD_ADDR_VAR 0 18
10366: PUSH
10367: LD_INT 0
10369: PUSH
10370: LD_INT 0
10372: PUSH
10373: EMPTY
10374: LIST
10375: LIST
10376: PUSH
10377: LD_INT 0
10379: PUSH
10380: LD_INT 1
10382: NEG
10383: PUSH
10384: EMPTY
10385: LIST
10386: LIST
10387: PUSH
10388: LD_INT 1
10390: PUSH
10391: LD_INT 0
10393: PUSH
10394: EMPTY
10395: LIST
10396: LIST
10397: PUSH
10398: LD_INT 1
10400: PUSH
10401: LD_INT 1
10403: PUSH
10404: EMPTY
10405: LIST
10406: LIST
10407: PUSH
10408: LD_INT 0
10410: PUSH
10411: LD_INT 1
10413: PUSH
10414: EMPTY
10415: LIST
10416: LIST
10417: PUSH
10418: LD_INT 1
10420: NEG
10421: PUSH
10422: LD_INT 0
10424: PUSH
10425: EMPTY
10426: LIST
10427: LIST
10428: PUSH
10429: LD_INT 1
10431: NEG
10432: PUSH
10433: LD_INT 1
10435: NEG
10436: PUSH
10437: EMPTY
10438: LIST
10439: LIST
10440: PUSH
10441: LD_INT 1
10443: NEG
10444: PUSH
10445: LD_INT 2
10447: NEG
10448: PUSH
10449: EMPTY
10450: LIST
10451: LIST
10452: PUSH
10453: LD_INT 0
10455: PUSH
10456: LD_INT 2
10458: NEG
10459: PUSH
10460: EMPTY
10461: LIST
10462: LIST
10463: PUSH
10464: LD_INT 1
10466: PUSH
10467: LD_INT 1
10469: NEG
10470: PUSH
10471: EMPTY
10472: LIST
10473: LIST
10474: PUSH
10475: LD_INT 2
10477: PUSH
10478: LD_INT 0
10480: PUSH
10481: EMPTY
10482: LIST
10483: LIST
10484: PUSH
10485: LD_INT 2
10487: PUSH
10488: LD_INT 1
10490: PUSH
10491: EMPTY
10492: LIST
10493: LIST
10494: PUSH
10495: LD_INT 2
10497: PUSH
10498: LD_INT 2
10500: PUSH
10501: EMPTY
10502: LIST
10503: LIST
10504: PUSH
10505: LD_INT 1
10507: PUSH
10508: LD_INT 2
10510: PUSH
10511: EMPTY
10512: LIST
10513: LIST
10514: PUSH
10515: LD_INT 0
10517: PUSH
10518: LD_INT 2
10520: PUSH
10521: EMPTY
10522: LIST
10523: LIST
10524: PUSH
10525: LD_INT 1
10527: NEG
10528: PUSH
10529: LD_INT 1
10531: PUSH
10532: EMPTY
10533: LIST
10534: LIST
10535: PUSH
10536: LD_INT 2
10538: NEG
10539: PUSH
10540: LD_INT 0
10542: PUSH
10543: EMPTY
10544: LIST
10545: LIST
10546: PUSH
10547: LD_INT 2
10549: NEG
10550: PUSH
10551: LD_INT 1
10553: NEG
10554: PUSH
10555: EMPTY
10556: LIST
10557: LIST
10558: PUSH
10559: LD_INT 2
10561: NEG
10562: PUSH
10563: LD_INT 2
10565: NEG
10566: PUSH
10567: EMPTY
10568: LIST
10569: LIST
10570: PUSH
10571: EMPTY
10572: LIST
10573: LIST
10574: LIST
10575: LIST
10576: LIST
10577: LIST
10578: LIST
10579: LIST
10580: LIST
10581: LIST
10582: LIST
10583: LIST
10584: LIST
10585: LIST
10586: LIST
10587: LIST
10588: LIST
10589: LIST
10590: LIST
10591: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10592: LD_ADDR_VAR 0 19
10596: PUSH
10597: LD_INT 0
10599: PUSH
10600: LD_INT 0
10602: PUSH
10603: EMPTY
10604: LIST
10605: LIST
10606: PUSH
10607: LD_INT 0
10609: PUSH
10610: LD_INT 1
10612: NEG
10613: PUSH
10614: EMPTY
10615: LIST
10616: LIST
10617: PUSH
10618: LD_INT 1
10620: PUSH
10621: LD_INT 0
10623: PUSH
10624: EMPTY
10625: LIST
10626: LIST
10627: PUSH
10628: LD_INT 1
10630: PUSH
10631: LD_INT 1
10633: PUSH
10634: EMPTY
10635: LIST
10636: LIST
10637: PUSH
10638: LD_INT 0
10640: PUSH
10641: LD_INT 1
10643: PUSH
10644: EMPTY
10645: LIST
10646: LIST
10647: PUSH
10648: LD_INT 1
10650: NEG
10651: PUSH
10652: LD_INT 0
10654: PUSH
10655: EMPTY
10656: LIST
10657: LIST
10658: PUSH
10659: LD_INT 1
10661: NEG
10662: PUSH
10663: LD_INT 1
10665: NEG
10666: PUSH
10667: EMPTY
10668: LIST
10669: LIST
10670: PUSH
10671: LD_INT 1
10673: NEG
10674: PUSH
10675: LD_INT 2
10677: NEG
10678: PUSH
10679: EMPTY
10680: LIST
10681: LIST
10682: PUSH
10683: LD_INT 0
10685: PUSH
10686: LD_INT 2
10688: NEG
10689: PUSH
10690: EMPTY
10691: LIST
10692: LIST
10693: PUSH
10694: LD_INT 1
10696: PUSH
10697: LD_INT 1
10699: NEG
10700: PUSH
10701: EMPTY
10702: LIST
10703: LIST
10704: PUSH
10705: LD_INT 2
10707: PUSH
10708: LD_INT 0
10710: PUSH
10711: EMPTY
10712: LIST
10713: LIST
10714: PUSH
10715: LD_INT 2
10717: PUSH
10718: LD_INT 1
10720: PUSH
10721: EMPTY
10722: LIST
10723: LIST
10724: PUSH
10725: LD_INT 2
10727: PUSH
10728: LD_INT 2
10730: PUSH
10731: EMPTY
10732: LIST
10733: LIST
10734: PUSH
10735: LD_INT 1
10737: PUSH
10738: LD_INT 2
10740: PUSH
10741: EMPTY
10742: LIST
10743: LIST
10744: PUSH
10745: LD_INT 0
10747: PUSH
10748: LD_INT 2
10750: PUSH
10751: EMPTY
10752: LIST
10753: LIST
10754: PUSH
10755: LD_INT 1
10757: NEG
10758: PUSH
10759: LD_INT 1
10761: PUSH
10762: EMPTY
10763: LIST
10764: LIST
10765: PUSH
10766: LD_INT 2
10768: NEG
10769: PUSH
10770: LD_INT 0
10772: PUSH
10773: EMPTY
10774: LIST
10775: LIST
10776: PUSH
10777: LD_INT 2
10779: NEG
10780: PUSH
10781: LD_INT 1
10783: NEG
10784: PUSH
10785: EMPTY
10786: LIST
10787: LIST
10788: PUSH
10789: LD_INT 2
10791: NEG
10792: PUSH
10793: LD_INT 2
10795: NEG
10796: PUSH
10797: EMPTY
10798: LIST
10799: LIST
10800: PUSH
10801: EMPTY
10802: LIST
10803: LIST
10804: LIST
10805: LIST
10806: LIST
10807: LIST
10808: LIST
10809: LIST
10810: LIST
10811: LIST
10812: LIST
10813: LIST
10814: LIST
10815: LIST
10816: LIST
10817: LIST
10818: LIST
10819: LIST
10820: LIST
10821: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10822: LD_ADDR_VAR 0 20
10826: PUSH
10827: LD_INT 0
10829: PUSH
10830: LD_INT 0
10832: PUSH
10833: EMPTY
10834: LIST
10835: LIST
10836: PUSH
10837: LD_INT 0
10839: PUSH
10840: LD_INT 1
10842: NEG
10843: PUSH
10844: EMPTY
10845: LIST
10846: LIST
10847: PUSH
10848: LD_INT 1
10850: PUSH
10851: LD_INT 0
10853: PUSH
10854: EMPTY
10855: LIST
10856: LIST
10857: PUSH
10858: LD_INT 1
10860: PUSH
10861: LD_INT 1
10863: PUSH
10864: EMPTY
10865: LIST
10866: LIST
10867: PUSH
10868: LD_INT 0
10870: PUSH
10871: LD_INT 1
10873: PUSH
10874: EMPTY
10875: LIST
10876: LIST
10877: PUSH
10878: LD_INT 1
10880: NEG
10881: PUSH
10882: LD_INT 0
10884: PUSH
10885: EMPTY
10886: LIST
10887: LIST
10888: PUSH
10889: LD_INT 1
10891: NEG
10892: PUSH
10893: LD_INT 1
10895: NEG
10896: PUSH
10897: EMPTY
10898: LIST
10899: LIST
10900: PUSH
10901: LD_INT 1
10903: NEG
10904: PUSH
10905: LD_INT 2
10907: NEG
10908: PUSH
10909: EMPTY
10910: LIST
10911: LIST
10912: PUSH
10913: LD_INT 0
10915: PUSH
10916: LD_INT 2
10918: NEG
10919: PUSH
10920: EMPTY
10921: LIST
10922: LIST
10923: PUSH
10924: LD_INT 1
10926: PUSH
10927: LD_INT 1
10929: NEG
10930: PUSH
10931: EMPTY
10932: LIST
10933: LIST
10934: PUSH
10935: LD_INT 2
10937: PUSH
10938: LD_INT 0
10940: PUSH
10941: EMPTY
10942: LIST
10943: LIST
10944: PUSH
10945: LD_INT 2
10947: PUSH
10948: LD_INT 1
10950: PUSH
10951: EMPTY
10952: LIST
10953: LIST
10954: PUSH
10955: LD_INT 2
10957: PUSH
10958: LD_INT 2
10960: PUSH
10961: EMPTY
10962: LIST
10963: LIST
10964: PUSH
10965: LD_INT 1
10967: PUSH
10968: LD_INT 2
10970: PUSH
10971: EMPTY
10972: LIST
10973: LIST
10974: PUSH
10975: LD_INT 0
10977: PUSH
10978: LD_INT 2
10980: PUSH
10981: EMPTY
10982: LIST
10983: LIST
10984: PUSH
10985: LD_INT 1
10987: NEG
10988: PUSH
10989: LD_INT 1
10991: PUSH
10992: EMPTY
10993: LIST
10994: LIST
10995: PUSH
10996: LD_INT 2
10998: NEG
10999: PUSH
11000: LD_INT 0
11002: PUSH
11003: EMPTY
11004: LIST
11005: LIST
11006: PUSH
11007: LD_INT 2
11009: NEG
11010: PUSH
11011: LD_INT 1
11013: NEG
11014: PUSH
11015: EMPTY
11016: LIST
11017: LIST
11018: PUSH
11019: LD_INT 2
11021: NEG
11022: PUSH
11023: LD_INT 2
11025: NEG
11026: PUSH
11027: EMPTY
11028: LIST
11029: LIST
11030: PUSH
11031: EMPTY
11032: LIST
11033: LIST
11034: LIST
11035: LIST
11036: LIST
11037: LIST
11038: LIST
11039: LIST
11040: LIST
11041: LIST
11042: LIST
11043: LIST
11044: LIST
11045: LIST
11046: LIST
11047: LIST
11048: LIST
11049: LIST
11050: LIST
11051: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11052: LD_ADDR_VAR 0 21
11056: PUSH
11057: LD_INT 0
11059: PUSH
11060: LD_INT 0
11062: PUSH
11063: EMPTY
11064: LIST
11065: LIST
11066: PUSH
11067: LD_INT 0
11069: PUSH
11070: LD_INT 1
11072: NEG
11073: PUSH
11074: EMPTY
11075: LIST
11076: LIST
11077: PUSH
11078: LD_INT 1
11080: PUSH
11081: LD_INT 0
11083: PUSH
11084: EMPTY
11085: LIST
11086: LIST
11087: PUSH
11088: LD_INT 1
11090: PUSH
11091: LD_INT 1
11093: PUSH
11094: EMPTY
11095: LIST
11096: LIST
11097: PUSH
11098: LD_INT 0
11100: PUSH
11101: LD_INT 1
11103: PUSH
11104: EMPTY
11105: LIST
11106: LIST
11107: PUSH
11108: LD_INT 1
11110: NEG
11111: PUSH
11112: LD_INT 0
11114: PUSH
11115: EMPTY
11116: LIST
11117: LIST
11118: PUSH
11119: LD_INT 1
11121: NEG
11122: PUSH
11123: LD_INT 1
11125: NEG
11126: PUSH
11127: EMPTY
11128: LIST
11129: LIST
11130: PUSH
11131: LD_INT 1
11133: NEG
11134: PUSH
11135: LD_INT 2
11137: NEG
11138: PUSH
11139: EMPTY
11140: LIST
11141: LIST
11142: PUSH
11143: LD_INT 0
11145: PUSH
11146: LD_INT 2
11148: NEG
11149: PUSH
11150: EMPTY
11151: LIST
11152: LIST
11153: PUSH
11154: LD_INT 1
11156: PUSH
11157: LD_INT 1
11159: NEG
11160: PUSH
11161: EMPTY
11162: LIST
11163: LIST
11164: PUSH
11165: LD_INT 2
11167: PUSH
11168: LD_INT 0
11170: PUSH
11171: EMPTY
11172: LIST
11173: LIST
11174: PUSH
11175: LD_INT 2
11177: PUSH
11178: LD_INT 1
11180: PUSH
11181: EMPTY
11182: LIST
11183: LIST
11184: PUSH
11185: LD_INT 2
11187: PUSH
11188: LD_INT 2
11190: PUSH
11191: EMPTY
11192: LIST
11193: LIST
11194: PUSH
11195: LD_INT 1
11197: PUSH
11198: LD_INT 2
11200: PUSH
11201: EMPTY
11202: LIST
11203: LIST
11204: PUSH
11205: LD_INT 0
11207: PUSH
11208: LD_INT 2
11210: PUSH
11211: EMPTY
11212: LIST
11213: LIST
11214: PUSH
11215: LD_INT 1
11217: NEG
11218: PUSH
11219: LD_INT 1
11221: PUSH
11222: EMPTY
11223: LIST
11224: LIST
11225: PUSH
11226: LD_INT 2
11228: NEG
11229: PUSH
11230: LD_INT 0
11232: PUSH
11233: EMPTY
11234: LIST
11235: LIST
11236: PUSH
11237: LD_INT 2
11239: NEG
11240: PUSH
11241: LD_INT 1
11243: NEG
11244: PUSH
11245: EMPTY
11246: LIST
11247: LIST
11248: PUSH
11249: LD_INT 2
11251: NEG
11252: PUSH
11253: LD_INT 2
11255: NEG
11256: PUSH
11257: EMPTY
11258: LIST
11259: LIST
11260: PUSH
11261: EMPTY
11262: LIST
11263: LIST
11264: LIST
11265: LIST
11266: LIST
11267: LIST
11268: LIST
11269: LIST
11270: LIST
11271: LIST
11272: LIST
11273: LIST
11274: LIST
11275: LIST
11276: LIST
11277: LIST
11278: LIST
11279: LIST
11280: LIST
11281: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11282: LD_ADDR_VAR 0 22
11286: PUSH
11287: LD_INT 0
11289: PUSH
11290: LD_INT 0
11292: PUSH
11293: EMPTY
11294: LIST
11295: LIST
11296: PUSH
11297: LD_INT 0
11299: PUSH
11300: LD_INT 1
11302: NEG
11303: PUSH
11304: EMPTY
11305: LIST
11306: LIST
11307: PUSH
11308: LD_INT 1
11310: PUSH
11311: LD_INT 0
11313: PUSH
11314: EMPTY
11315: LIST
11316: LIST
11317: PUSH
11318: LD_INT 1
11320: PUSH
11321: LD_INT 1
11323: PUSH
11324: EMPTY
11325: LIST
11326: LIST
11327: PUSH
11328: LD_INT 0
11330: PUSH
11331: LD_INT 1
11333: PUSH
11334: EMPTY
11335: LIST
11336: LIST
11337: PUSH
11338: LD_INT 1
11340: NEG
11341: PUSH
11342: LD_INT 0
11344: PUSH
11345: EMPTY
11346: LIST
11347: LIST
11348: PUSH
11349: LD_INT 1
11351: NEG
11352: PUSH
11353: LD_INT 1
11355: NEG
11356: PUSH
11357: EMPTY
11358: LIST
11359: LIST
11360: PUSH
11361: LD_INT 1
11363: NEG
11364: PUSH
11365: LD_INT 2
11367: NEG
11368: PUSH
11369: EMPTY
11370: LIST
11371: LIST
11372: PUSH
11373: LD_INT 0
11375: PUSH
11376: LD_INT 2
11378: NEG
11379: PUSH
11380: EMPTY
11381: LIST
11382: LIST
11383: PUSH
11384: LD_INT 1
11386: PUSH
11387: LD_INT 1
11389: NEG
11390: PUSH
11391: EMPTY
11392: LIST
11393: LIST
11394: PUSH
11395: LD_INT 2
11397: PUSH
11398: LD_INT 0
11400: PUSH
11401: EMPTY
11402: LIST
11403: LIST
11404: PUSH
11405: LD_INT 2
11407: PUSH
11408: LD_INT 1
11410: PUSH
11411: EMPTY
11412: LIST
11413: LIST
11414: PUSH
11415: LD_INT 2
11417: PUSH
11418: LD_INT 2
11420: PUSH
11421: EMPTY
11422: LIST
11423: LIST
11424: PUSH
11425: LD_INT 1
11427: PUSH
11428: LD_INT 2
11430: PUSH
11431: EMPTY
11432: LIST
11433: LIST
11434: PUSH
11435: LD_INT 0
11437: PUSH
11438: LD_INT 2
11440: PUSH
11441: EMPTY
11442: LIST
11443: LIST
11444: PUSH
11445: LD_INT 1
11447: NEG
11448: PUSH
11449: LD_INT 1
11451: PUSH
11452: EMPTY
11453: LIST
11454: LIST
11455: PUSH
11456: LD_INT 2
11458: NEG
11459: PUSH
11460: LD_INT 0
11462: PUSH
11463: EMPTY
11464: LIST
11465: LIST
11466: PUSH
11467: LD_INT 2
11469: NEG
11470: PUSH
11471: LD_INT 1
11473: NEG
11474: PUSH
11475: EMPTY
11476: LIST
11477: LIST
11478: PUSH
11479: LD_INT 2
11481: NEG
11482: PUSH
11483: LD_INT 2
11485: NEG
11486: PUSH
11487: EMPTY
11488: LIST
11489: LIST
11490: PUSH
11491: EMPTY
11492: LIST
11493: LIST
11494: LIST
11495: LIST
11496: LIST
11497: LIST
11498: LIST
11499: LIST
11500: LIST
11501: LIST
11502: LIST
11503: LIST
11504: LIST
11505: LIST
11506: LIST
11507: LIST
11508: LIST
11509: LIST
11510: LIST
11511: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11512: LD_ADDR_VAR 0 23
11516: PUSH
11517: LD_INT 0
11519: PUSH
11520: LD_INT 0
11522: PUSH
11523: EMPTY
11524: LIST
11525: LIST
11526: PUSH
11527: LD_INT 0
11529: PUSH
11530: LD_INT 1
11532: NEG
11533: PUSH
11534: EMPTY
11535: LIST
11536: LIST
11537: PUSH
11538: LD_INT 1
11540: PUSH
11541: LD_INT 0
11543: PUSH
11544: EMPTY
11545: LIST
11546: LIST
11547: PUSH
11548: LD_INT 1
11550: PUSH
11551: LD_INT 1
11553: PUSH
11554: EMPTY
11555: LIST
11556: LIST
11557: PUSH
11558: LD_INT 0
11560: PUSH
11561: LD_INT 1
11563: PUSH
11564: EMPTY
11565: LIST
11566: LIST
11567: PUSH
11568: LD_INT 1
11570: NEG
11571: PUSH
11572: LD_INT 0
11574: PUSH
11575: EMPTY
11576: LIST
11577: LIST
11578: PUSH
11579: LD_INT 1
11581: NEG
11582: PUSH
11583: LD_INT 1
11585: NEG
11586: PUSH
11587: EMPTY
11588: LIST
11589: LIST
11590: PUSH
11591: LD_INT 1
11593: NEG
11594: PUSH
11595: LD_INT 2
11597: NEG
11598: PUSH
11599: EMPTY
11600: LIST
11601: LIST
11602: PUSH
11603: LD_INT 0
11605: PUSH
11606: LD_INT 2
11608: NEG
11609: PUSH
11610: EMPTY
11611: LIST
11612: LIST
11613: PUSH
11614: LD_INT 1
11616: PUSH
11617: LD_INT 1
11619: NEG
11620: PUSH
11621: EMPTY
11622: LIST
11623: LIST
11624: PUSH
11625: LD_INT 2
11627: PUSH
11628: LD_INT 0
11630: PUSH
11631: EMPTY
11632: LIST
11633: LIST
11634: PUSH
11635: LD_INT 2
11637: PUSH
11638: LD_INT 1
11640: PUSH
11641: EMPTY
11642: LIST
11643: LIST
11644: PUSH
11645: LD_INT 2
11647: PUSH
11648: LD_INT 2
11650: PUSH
11651: EMPTY
11652: LIST
11653: LIST
11654: PUSH
11655: LD_INT 1
11657: PUSH
11658: LD_INT 2
11660: PUSH
11661: EMPTY
11662: LIST
11663: LIST
11664: PUSH
11665: LD_INT 0
11667: PUSH
11668: LD_INT 2
11670: PUSH
11671: EMPTY
11672: LIST
11673: LIST
11674: PUSH
11675: LD_INT 1
11677: NEG
11678: PUSH
11679: LD_INT 1
11681: PUSH
11682: EMPTY
11683: LIST
11684: LIST
11685: PUSH
11686: LD_INT 2
11688: NEG
11689: PUSH
11690: LD_INT 0
11692: PUSH
11693: EMPTY
11694: LIST
11695: LIST
11696: PUSH
11697: LD_INT 2
11699: NEG
11700: PUSH
11701: LD_INT 1
11703: NEG
11704: PUSH
11705: EMPTY
11706: LIST
11707: LIST
11708: PUSH
11709: LD_INT 2
11711: NEG
11712: PUSH
11713: LD_INT 2
11715: NEG
11716: PUSH
11717: EMPTY
11718: LIST
11719: LIST
11720: PUSH
11721: LD_INT 2
11723: NEG
11724: PUSH
11725: LD_INT 3
11727: NEG
11728: PUSH
11729: EMPTY
11730: LIST
11731: LIST
11732: PUSH
11733: LD_INT 1
11735: NEG
11736: PUSH
11737: LD_INT 3
11739: NEG
11740: PUSH
11741: EMPTY
11742: LIST
11743: LIST
11744: PUSH
11745: LD_INT 1
11747: PUSH
11748: LD_INT 2
11750: NEG
11751: PUSH
11752: EMPTY
11753: LIST
11754: LIST
11755: PUSH
11756: LD_INT 2
11758: PUSH
11759: LD_INT 1
11761: NEG
11762: PUSH
11763: EMPTY
11764: LIST
11765: LIST
11766: PUSH
11767: EMPTY
11768: LIST
11769: LIST
11770: LIST
11771: LIST
11772: LIST
11773: LIST
11774: LIST
11775: LIST
11776: LIST
11777: LIST
11778: LIST
11779: LIST
11780: LIST
11781: LIST
11782: LIST
11783: LIST
11784: LIST
11785: LIST
11786: LIST
11787: LIST
11788: LIST
11789: LIST
11790: LIST
11791: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11792: LD_ADDR_VAR 0 24
11796: PUSH
11797: LD_INT 0
11799: PUSH
11800: LD_INT 0
11802: PUSH
11803: EMPTY
11804: LIST
11805: LIST
11806: PUSH
11807: LD_INT 0
11809: PUSH
11810: LD_INT 1
11812: NEG
11813: PUSH
11814: EMPTY
11815: LIST
11816: LIST
11817: PUSH
11818: LD_INT 1
11820: PUSH
11821: LD_INT 0
11823: PUSH
11824: EMPTY
11825: LIST
11826: LIST
11827: PUSH
11828: LD_INT 1
11830: PUSH
11831: LD_INT 1
11833: PUSH
11834: EMPTY
11835: LIST
11836: LIST
11837: PUSH
11838: LD_INT 0
11840: PUSH
11841: LD_INT 1
11843: PUSH
11844: EMPTY
11845: LIST
11846: LIST
11847: PUSH
11848: LD_INT 1
11850: NEG
11851: PUSH
11852: LD_INT 0
11854: PUSH
11855: EMPTY
11856: LIST
11857: LIST
11858: PUSH
11859: LD_INT 1
11861: NEG
11862: PUSH
11863: LD_INT 1
11865: NEG
11866: PUSH
11867: EMPTY
11868: LIST
11869: LIST
11870: PUSH
11871: LD_INT 1
11873: NEG
11874: PUSH
11875: LD_INT 2
11877: NEG
11878: PUSH
11879: EMPTY
11880: LIST
11881: LIST
11882: PUSH
11883: LD_INT 0
11885: PUSH
11886: LD_INT 2
11888: NEG
11889: PUSH
11890: EMPTY
11891: LIST
11892: LIST
11893: PUSH
11894: LD_INT 1
11896: PUSH
11897: LD_INT 1
11899: NEG
11900: PUSH
11901: EMPTY
11902: LIST
11903: LIST
11904: PUSH
11905: LD_INT 2
11907: PUSH
11908: LD_INT 0
11910: PUSH
11911: EMPTY
11912: LIST
11913: LIST
11914: PUSH
11915: LD_INT 2
11917: PUSH
11918: LD_INT 1
11920: PUSH
11921: EMPTY
11922: LIST
11923: LIST
11924: PUSH
11925: LD_INT 2
11927: PUSH
11928: LD_INT 2
11930: PUSH
11931: EMPTY
11932: LIST
11933: LIST
11934: PUSH
11935: LD_INT 1
11937: PUSH
11938: LD_INT 2
11940: PUSH
11941: EMPTY
11942: LIST
11943: LIST
11944: PUSH
11945: LD_INT 0
11947: PUSH
11948: LD_INT 2
11950: PUSH
11951: EMPTY
11952: LIST
11953: LIST
11954: PUSH
11955: LD_INT 1
11957: NEG
11958: PUSH
11959: LD_INT 1
11961: PUSH
11962: EMPTY
11963: LIST
11964: LIST
11965: PUSH
11966: LD_INT 2
11968: NEG
11969: PUSH
11970: LD_INT 0
11972: PUSH
11973: EMPTY
11974: LIST
11975: LIST
11976: PUSH
11977: LD_INT 2
11979: NEG
11980: PUSH
11981: LD_INT 1
11983: NEG
11984: PUSH
11985: EMPTY
11986: LIST
11987: LIST
11988: PUSH
11989: LD_INT 2
11991: NEG
11992: PUSH
11993: LD_INT 2
11995: NEG
11996: PUSH
11997: EMPTY
11998: LIST
11999: LIST
12000: PUSH
12001: LD_INT 1
12003: PUSH
12004: LD_INT 2
12006: NEG
12007: PUSH
12008: EMPTY
12009: LIST
12010: LIST
12011: PUSH
12012: LD_INT 2
12014: PUSH
12015: LD_INT 1
12017: NEG
12018: PUSH
12019: EMPTY
12020: LIST
12021: LIST
12022: PUSH
12023: LD_INT 3
12025: PUSH
12026: LD_INT 1
12028: PUSH
12029: EMPTY
12030: LIST
12031: LIST
12032: PUSH
12033: LD_INT 3
12035: PUSH
12036: LD_INT 2
12038: PUSH
12039: EMPTY
12040: LIST
12041: LIST
12042: PUSH
12043: EMPTY
12044: LIST
12045: LIST
12046: LIST
12047: LIST
12048: LIST
12049: LIST
12050: LIST
12051: LIST
12052: LIST
12053: LIST
12054: LIST
12055: LIST
12056: LIST
12057: LIST
12058: LIST
12059: LIST
12060: LIST
12061: LIST
12062: LIST
12063: LIST
12064: LIST
12065: LIST
12066: LIST
12067: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12068: LD_ADDR_VAR 0 25
12072: PUSH
12073: LD_INT 0
12075: PUSH
12076: LD_INT 0
12078: PUSH
12079: EMPTY
12080: LIST
12081: LIST
12082: PUSH
12083: LD_INT 0
12085: PUSH
12086: LD_INT 1
12088: NEG
12089: PUSH
12090: EMPTY
12091: LIST
12092: LIST
12093: PUSH
12094: LD_INT 1
12096: PUSH
12097: LD_INT 0
12099: PUSH
12100: EMPTY
12101: LIST
12102: LIST
12103: PUSH
12104: LD_INT 1
12106: PUSH
12107: LD_INT 1
12109: PUSH
12110: EMPTY
12111: LIST
12112: LIST
12113: PUSH
12114: LD_INT 0
12116: PUSH
12117: LD_INT 1
12119: PUSH
12120: EMPTY
12121: LIST
12122: LIST
12123: PUSH
12124: LD_INT 1
12126: NEG
12127: PUSH
12128: LD_INT 0
12130: PUSH
12131: EMPTY
12132: LIST
12133: LIST
12134: PUSH
12135: LD_INT 1
12137: NEG
12138: PUSH
12139: LD_INT 1
12141: NEG
12142: PUSH
12143: EMPTY
12144: LIST
12145: LIST
12146: PUSH
12147: LD_INT 1
12149: NEG
12150: PUSH
12151: LD_INT 2
12153: NEG
12154: PUSH
12155: EMPTY
12156: LIST
12157: LIST
12158: PUSH
12159: LD_INT 0
12161: PUSH
12162: LD_INT 2
12164: NEG
12165: PUSH
12166: EMPTY
12167: LIST
12168: LIST
12169: PUSH
12170: LD_INT 1
12172: PUSH
12173: LD_INT 1
12175: NEG
12176: PUSH
12177: EMPTY
12178: LIST
12179: LIST
12180: PUSH
12181: LD_INT 2
12183: PUSH
12184: LD_INT 0
12186: PUSH
12187: EMPTY
12188: LIST
12189: LIST
12190: PUSH
12191: LD_INT 2
12193: PUSH
12194: LD_INT 1
12196: PUSH
12197: EMPTY
12198: LIST
12199: LIST
12200: PUSH
12201: LD_INT 2
12203: PUSH
12204: LD_INT 2
12206: PUSH
12207: EMPTY
12208: LIST
12209: LIST
12210: PUSH
12211: LD_INT 1
12213: PUSH
12214: LD_INT 2
12216: PUSH
12217: EMPTY
12218: LIST
12219: LIST
12220: PUSH
12221: LD_INT 0
12223: PUSH
12224: LD_INT 2
12226: PUSH
12227: EMPTY
12228: LIST
12229: LIST
12230: PUSH
12231: LD_INT 1
12233: NEG
12234: PUSH
12235: LD_INT 1
12237: PUSH
12238: EMPTY
12239: LIST
12240: LIST
12241: PUSH
12242: LD_INT 2
12244: NEG
12245: PUSH
12246: LD_INT 0
12248: PUSH
12249: EMPTY
12250: LIST
12251: LIST
12252: PUSH
12253: LD_INT 2
12255: NEG
12256: PUSH
12257: LD_INT 1
12259: NEG
12260: PUSH
12261: EMPTY
12262: LIST
12263: LIST
12264: PUSH
12265: LD_INT 2
12267: NEG
12268: PUSH
12269: LD_INT 2
12271: NEG
12272: PUSH
12273: EMPTY
12274: LIST
12275: LIST
12276: PUSH
12277: LD_INT 3
12279: PUSH
12280: LD_INT 1
12282: PUSH
12283: EMPTY
12284: LIST
12285: LIST
12286: PUSH
12287: LD_INT 3
12289: PUSH
12290: LD_INT 2
12292: PUSH
12293: EMPTY
12294: LIST
12295: LIST
12296: PUSH
12297: LD_INT 2
12299: PUSH
12300: LD_INT 3
12302: PUSH
12303: EMPTY
12304: LIST
12305: LIST
12306: PUSH
12307: LD_INT 1
12309: PUSH
12310: LD_INT 3
12312: PUSH
12313: EMPTY
12314: LIST
12315: LIST
12316: PUSH
12317: EMPTY
12318: LIST
12319: LIST
12320: LIST
12321: LIST
12322: LIST
12323: LIST
12324: LIST
12325: LIST
12326: LIST
12327: LIST
12328: LIST
12329: LIST
12330: LIST
12331: LIST
12332: LIST
12333: LIST
12334: LIST
12335: LIST
12336: LIST
12337: LIST
12338: LIST
12339: LIST
12340: LIST
12341: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12342: LD_ADDR_VAR 0 26
12346: PUSH
12347: LD_INT 0
12349: PUSH
12350: LD_INT 0
12352: PUSH
12353: EMPTY
12354: LIST
12355: LIST
12356: PUSH
12357: LD_INT 0
12359: PUSH
12360: LD_INT 1
12362: NEG
12363: PUSH
12364: EMPTY
12365: LIST
12366: LIST
12367: PUSH
12368: LD_INT 1
12370: PUSH
12371: LD_INT 0
12373: PUSH
12374: EMPTY
12375: LIST
12376: LIST
12377: PUSH
12378: LD_INT 1
12380: PUSH
12381: LD_INT 1
12383: PUSH
12384: EMPTY
12385: LIST
12386: LIST
12387: PUSH
12388: LD_INT 0
12390: PUSH
12391: LD_INT 1
12393: PUSH
12394: EMPTY
12395: LIST
12396: LIST
12397: PUSH
12398: LD_INT 1
12400: NEG
12401: PUSH
12402: LD_INT 0
12404: PUSH
12405: EMPTY
12406: LIST
12407: LIST
12408: PUSH
12409: LD_INT 1
12411: NEG
12412: PUSH
12413: LD_INT 1
12415: NEG
12416: PUSH
12417: EMPTY
12418: LIST
12419: LIST
12420: PUSH
12421: LD_INT 1
12423: NEG
12424: PUSH
12425: LD_INT 2
12427: NEG
12428: PUSH
12429: EMPTY
12430: LIST
12431: LIST
12432: PUSH
12433: LD_INT 0
12435: PUSH
12436: LD_INT 2
12438: NEG
12439: PUSH
12440: EMPTY
12441: LIST
12442: LIST
12443: PUSH
12444: LD_INT 1
12446: PUSH
12447: LD_INT 1
12449: NEG
12450: PUSH
12451: EMPTY
12452: LIST
12453: LIST
12454: PUSH
12455: LD_INT 2
12457: PUSH
12458: LD_INT 0
12460: PUSH
12461: EMPTY
12462: LIST
12463: LIST
12464: PUSH
12465: LD_INT 2
12467: PUSH
12468: LD_INT 1
12470: PUSH
12471: EMPTY
12472: LIST
12473: LIST
12474: PUSH
12475: LD_INT 2
12477: PUSH
12478: LD_INT 2
12480: PUSH
12481: EMPTY
12482: LIST
12483: LIST
12484: PUSH
12485: LD_INT 1
12487: PUSH
12488: LD_INT 2
12490: PUSH
12491: EMPTY
12492: LIST
12493: LIST
12494: PUSH
12495: LD_INT 0
12497: PUSH
12498: LD_INT 2
12500: PUSH
12501: EMPTY
12502: LIST
12503: LIST
12504: PUSH
12505: LD_INT 1
12507: NEG
12508: PUSH
12509: LD_INT 1
12511: PUSH
12512: EMPTY
12513: LIST
12514: LIST
12515: PUSH
12516: LD_INT 2
12518: NEG
12519: PUSH
12520: LD_INT 0
12522: PUSH
12523: EMPTY
12524: LIST
12525: LIST
12526: PUSH
12527: LD_INT 2
12529: NEG
12530: PUSH
12531: LD_INT 1
12533: NEG
12534: PUSH
12535: EMPTY
12536: LIST
12537: LIST
12538: PUSH
12539: LD_INT 2
12541: NEG
12542: PUSH
12543: LD_INT 2
12545: NEG
12546: PUSH
12547: EMPTY
12548: LIST
12549: LIST
12550: PUSH
12551: LD_INT 2
12553: PUSH
12554: LD_INT 3
12556: PUSH
12557: EMPTY
12558: LIST
12559: LIST
12560: PUSH
12561: LD_INT 1
12563: PUSH
12564: LD_INT 3
12566: PUSH
12567: EMPTY
12568: LIST
12569: LIST
12570: PUSH
12571: LD_INT 1
12573: NEG
12574: PUSH
12575: LD_INT 2
12577: PUSH
12578: EMPTY
12579: LIST
12580: LIST
12581: PUSH
12582: LD_INT 2
12584: NEG
12585: PUSH
12586: LD_INT 1
12588: PUSH
12589: EMPTY
12590: LIST
12591: LIST
12592: PUSH
12593: EMPTY
12594: LIST
12595: LIST
12596: LIST
12597: LIST
12598: LIST
12599: LIST
12600: LIST
12601: LIST
12602: LIST
12603: LIST
12604: LIST
12605: LIST
12606: LIST
12607: LIST
12608: LIST
12609: LIST
12610: LIST
12611: LIST
12612: LIST
12613: LIST
12614: LIST
12615: LIST
12616: LIST
12617: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12618: LD_ADDR_VAR 0 27
12622: PUSH
12623: LD_INT 0
12625: PUSH
12626: LD_INT 0
12628: PUSH
12629: EMPTY
12630: LIST
12631: LIST
12632: PUSH
12633: LD_INT 0
12635: PUSH
12636: LD_INT 1
12638: NEG
12639: PUSH
12640: EMPTY
12641: LIST
12642: LIST
12643: PUSH
12644: LD_INT 1
12646: PUSH
12647: LD_INT 0
12649: PUSH
12650: EMPTY
12651: LIST
12652: LIST
12653: PUSH
12654: LD_INT 1
12656: PUSH
12657: LD_INT 1
12659: PUSH
12660: EMPTY
12661: LIST
12662: LIST
12663: PUSH
12664: LD_INT 0
12666: PUSH
12667: LD_INT 1
12669: PUSH
12670: EMPTY
12671: LIST
12672: LIST
12673: PUSH
12674: LD_INT 1
12676: NEG
12677: PUSH
12678: LD_INT 0
12680: PUSH
12681: EMPTY
12682: LIST
12683: LIST
12684: PUSH
12685: LD_INT 1
12687: NEG
12688: PUSH
12689: LD_INT 1
12691: NEG
12692: PUSH
12693: EMPTY
12694: LIST
12695: LIST
12696: PUSH
12697: LD_INT 1
12699: NEG
12700: PUSH
12701: LD_INT 2
12703: NEG
12704: PUSH
12705: EMPTY
12706: LIST
12707: LIST
12708: PUSH
12709: LD_INT 0
12711: PUSH
12712: LD_INT 2
12714: NEG
12715: PUSH
12716: EMPTY
12717: LIST
12718: LIST
12719: PUSH
12720: LD_INT 1
12722: PUSH
12723: LD_INT 1
12725: NEG
12726: PUSH
12727: EMPTY
12728: LIST
12729: LIST
12730: PUSH
12731: LD_INT 2
12733: PUSH
12734: LD_INT 0
12736: PUSH
12737: EMPTY
12738: LIST
12739: LIST
12740: PUSH
12741: LD_INT 2
12743: PUSH
12744: LD_INT 1
12746: PUSH
12747: EMPTY
12748: LIST
12749: LIST
12750: PUSH
12751: LD_INT 2
12753: PUSH
12754: LD_INT 2
12756: PUSH
12757: EMPTY
12758: LIST
12759: LIST
12760: PUSH
12761: LD_INT 1
12763: PUSH
12764: LD_INT 2
12766: PUSH
12767: EMPTY
12768: LIST
12769: LIST
12770: PUSH
12771: LD_INT 0
12773: PUSH
12774: LD_INT 2
12776: PUSH
12777: EMPTY
12778: LIST
12779: LIST
12780: PUSH
12781: LD_INT 1
12783: NEG
12784: PUSH
12785: LD_INT 1
12787: PUSH
12788: EMPTY
12789: LIST
12790: LIST
12791: PUSH
12792: LD_INT 2
12794: NEG
12795: PUSH
12796: LD_INT 0
12798: PUSH
12799: EMPTY
12800: LIST
12801: LIST
12802: PUSH
12803: LD_INT 2
12805: NEG
12806: PUSH
12807: LD_INT 1
12809: NEG
12810: PUSH
12811: EMPTY
12812: LIST
12813: LIST
12814: PUSH
12815: LD_INT 2
12817: NEG
12818: PUSH
12819: LD_INT 2
12821: NEG
12822: PUSH
12823: EMPTY
12824: LIST
12825: LIST
12826: PUSH
12827: LD_INT 1
12829: NEG
12830: PUSH
12831: LD_INT 2
12833: PUSH
12834: EMPTY
12835: LIST
12836: LIST
12837: PUSH
12838: LD_INT 2
12840: NEG
12841: PUSH
12842: LD_INT 1
12844: PUSH
12845: EMPTY
12846: LIST
12847: LIST
12848: PUSH
12849: LD_INT 3
12851: NEG
12852: PUSH
12853: LD_INT 1
12855: NEG
12856: PUSH
12857: EMPTY
12858: LIST
12859: LIST
12860: PUSH
12861: LD_INT 3
12863: NEG
12864: PUSH
12865: LD_INT 2
12867: NEG
12868: PUSH
12869: EMPTY
12870: LIST
12871: LIST
12872: PUSH
12873: EMPTY
12874: LIST
12875: LIST
12876: LIST
12877: LIST
12878: LIST
12879: LIST
12880: LIST
12881: LIST
12882: LIST
12883: LIST
12884: LIST
12885: LIST
12886: LIST
12887: LIST
12888: LIST
12889: LIST
12890: LIST
12891: LIST
12892: LIST
12893: LIST
12894: LIST
12895: LIST
12896: LIST
12897: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12898: LD_ADDR_VAR 0 28
12902: PUSH
12903: LD_INT 0
12905: PUSH
12906: LD_INT 0
12908: PUSH
12909: EMPTY
12910: LIST
12911: LIST
12912: PUSH
12913: LD_INT 0
12915: PUSH
12916: LD_INT 1
12918: NEG
12919: PUSH
12920: EMPTY
12921: LIST
12922: LIST
12923: PUSH
12924: LD_INT 1
12926: PUSH
12927: LD_INT 0
12929: PUSH
12930: EMPTY
12931: LIST
12932: LIST
12933: PUSH
12934: LD_INT 1
12936: PUSH
12937: LD_INT 1
12939: PUSH
12940: EMPTY
12941: LIST
12942: LIST
12943: PUSH
12944: LD_INT 0
12946: PUSH
12947: LD_INT 1
12949: PUSH
12950: EMPTY
12951: LIST
12952: LIST
12953: PUSH
12954: LD_INT 1
12956: NEG
12957: PUSH
12958: LD_INT 0
12960: PUSH
12961: EMPTY
12962: LIST
12963: LIST
12964: PUSH
12965: LD_INT 1
12967: NEG
12968: PUSH
12969: LD_INT 1
12971: NEG
12972: PUSH
12973: EMPTY
12974: LIST
12975: LIST
12976: PUSH
12977: LD_INT 1
12979: NEG
12980: PUSH
12981: LD_INT 2
12983: NEG
12984: PUSH
12985: EMPTY
12986: LIST
12987: LIST
12988: PUSH
12989: LD_INT 0
12991: PUSH
12992: LD_INT 2
12994: NEG
12995: PUSH
12996: EMPTY
12997: LIST
12998: LIST
12999: PUSH
13000: LD_INT 1
13002: PUSH
13003: LD_INT 1
13005: NEG
13006: PUSH
13007: EMPTY
13008: LIST
13009: LIST
13010: PUSH
13011: LD_INT 2
13013: PUSH
13014: LD_INT 0
13016: PUSH
13017: EMPTY
13018: LIST
13019: LIST
13020: PUSH
13021: LD_INT 2
13023: PUSH
13024: LD_INT 1
13026: PUSH
13027: EMPTY
13028: LIST
13029: LIST
13030: PUSH
13031: LD_INT 2
13033: PUSH
13034: LD_INT 2
13036: PUSH
13037: EMPTY
13038: LIST
13039: LIST
13040: PUSH
13041: LD_INT 1
13043: PUSH
13044: LD_INT 2
13046: PUSH
13047: EMPTY
13048: LIST
13049: LIST
13050: PUSH
13051: LD_INT 0
13053: PUSH
13054: LD_INT 2
13056: PUSH
13057: EMPTY
13058: LIST
13059: LIST
13060: PUSH
13061: LD_INT 1
13063: NEG
13064: PUSH
13065: LD_INT 1
13067: PUSH
13068: EMPTY
13069: LIST
13070: LIST
13071: PUSH
13072: LD_INT 2
13074: NEG
13075: PUSH
13076: LD_INT 0
13078: PUSH
13079: EMPTY
13080: LIST
13081: LIST
13082: PUSH
13083: LD_INT 2
13085: NEG
13086: PUSH
13087: LD_INT 1
13089: NEG
13090: PUSH
13091: EMPTY
13092: LIST
13093: LIST
13094: PUSH
13095: LD_INT 2
13097: NEG
13098: PUSH
13099: LD_INT 2
13101: NEG
13102: PUSH
13103: EMPTY
13104: LIST
13105: LIST
13106: PUSH
13107: LD_INT 2
13109: NEG
13110: PUSH
13111: LD_INT 3
13113: NEG
13114: PUSH
13115: EMPTY
13116: LIST
13117: LIST
13118: PUSH
13119: LD_INT 1
13121: NEG
13122: PUSH
13123: LD_INT 3
13125: NEG
13126: PUSH
13127: EMPTY
13128: LIST
13129: LIST
13130: PUSH
13131: LD_INT 3
13133: NEG
13134: PUSH
13135: LD_INT 1
13137: NEG
13138: PUSH
13139: EMPTY
13140: LIST
13141: LIST
13142: PUSH
13143: LD_INT 3
13145: NEG
13146: PUSH
13147: LD_INT 2
13149: NEG
13150: PUSH
13151: EMPTY
13152: LIST
13153: LIST
13154: PUSH
13155: EMPTY
13156: LIST
13157: LIST
13158: LIST
13159: LIST
13160: LIST
13161: LIST
13162: LIST
13163: LIST
13164: LIST
13165: LIST
13166: LIST
13167: LIST
13168: LIST
13169: LIST
13170: LIST
13171: LIST
13172: LIST
13173: LIST
13174: LIST
13175: LIST
13176: LIST
13177: LIST
13178: LIST
13179: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13180: LD_ADDR_VAR 0 29
13184: PUSH
13185: LD_INT 0
13187: PUSH
13188: LD_INT 0
13190: PUSH
13191: EMPTY
13192: LIST
13193: LIST
13194: PUSH
13195: LD_INT 0
13197: PUSH
13198: LD_INT 1
13200: NEG
13201: PUSH
13202: EMPTY
13203: LIST
13204: LIST
13205: PUSH
13206: LD_INT 1
13208: PUSH
13209: LD_INT 0
13211: PUSH
13212: EMPTY
13213: LIST
13214: LIST
13215: PUSH
13216: LD_INT 1
13218: PUSH
13219: LD_INT 1
13221: PUSH
13222: EMPTY
13223: LIST
13224: LIST
13225: PUSH
13226: LD_INT 0
13228: PUSH
13229: LD_INT 1
13231: PUSH
13232: EMPTY
13233: LIST
13234: LIST
13235: PUSH
13236: LD_INT 1
13238: NEG
13239: PUSH
13240: LD_INT 0
13242: PUSH
13243: EMPTY
13244: LIST
13245: LIST
13246: PUSH
13247: LD_INT 1
13249: NEG
13250: PUSH
13251: LD_INT 1
13253: NEG
13254: PUSH
13255: EMPTY
13256: LIST
13257: LIST
13258: PUSH
13259: LD_INT 1
13261: NEG
13262: PUSH
13263: LD_INT 2
13265: NEG
13266: PUSH
13267: EMPTY
13268: LIST
13269: LIST
13270: PUSH
13271: LD_INT 0
13273: PUSH
13274: LD_INT 2
13276: NEG
13277: PUSH
13278: EMPTY
13279: LIST
13280: LIST
13281: PUSH
13282: LD_INT 1
13284: PUSH
13285: LD_INT 1
13287: NEG
13288: PUSH
13289: EMPTY
13290: LIST
13291: LIST
13292: PUSH
13293: LD_INT 2
13295: PUSH
13296: LD_INT 0
13298: PUSH
13299: EMPTY
13300: LIST
13301: LIST
13302: PUSH
13303: LD_INT 2
13305: PUSH
13306: LD_INT 1
13308: PUSH
13309: EMPTY
13310: LIST
13311: LIST
13312: PUSH
13313: LD_INT 1
13315: PUSH
13316: LD_INT 2
13318: PUSH
13319: EMPTY
13320: LIST
13321: LIST
13322: PUSH
13323: LD_INT 0
13325: PUSH
13326: LD_INT 2
13328: PUSH
13329: EMPTY
13330: LIST
13331: LIST
13332: PUSH
13333: LD_INT 1
13335: NEG
13336: PUSH
13337: LD_INT 1
13339: PUSH
13340: EMPTY
13341: LIST
13342: LIST
13343: PUSH
13344: LD_INT 2
13346: NEG
13347: PUSH
13348: LD_INT 1
13350: NEG
13351: PUSH
13352: EMPTY
13353: LIST
13354: LIST
13355: PUSH
13356: LD_INT 2
13358: NEG
13359: PUSH
13360: LD_INT 2
13362: NEG
13363: PUSH
13364: EMPTY
13365: LIST
13366: LIST
13367: PUSH
13368: LD_INT 2
13370: NEG
13371: PUSH
13372: LD_INT 3
13374: NEG
13375: PUSH
13376: EMPTY
13377: LIST
13378: LIST
13379: PUSH
13380: LD_INT 2
13382: PUSH
13383: LD_INT 1
13385: NEG
13386: PUSH
13387: EMPTY
13388: LIST
13389: LIST
13390: PUSH
13391: LD_INT 3
13393: PUSH
13394: LD_INT 1
13396: PUSH
13397: EMPTY
13398: LIST
13399: LIST
13400: PUSH
13401: LD_INT 1
13403: PUSH
13404: LD_INT 3
13406: PUSH
13407: EMPTY
13408: LIST
13409: LIST
13410: PUSH
13411: LD_INT 1
13413: NEG
13414: PUSH
13415: LD_INT 2
13417: PUSH
13418: EMPTY
13419: LIST
13420: LIST
13421: PUSH
13422: LD_INT 3
13424: NEG
13425: PUSH
13426: LD_INT 2
13428: NEG
13429: PUSH
13430: EMPTY
13431: LIST
13432: LIST
13433: PUSH
13434: EMPTY
13435: LIST
13436: LIST
13437: LIST
13438: LIST
13439: LIST
13440: LIST
13441: LIST
13442: LIST
13443: LIST
13444: LIST
13445: LIST
13446: LIST
13447: LIST
13448: LIST
13449: LIST
13450: LIST
13451: LIST
13452: LIST
13453: LIST
13454: LIST
13455: LIST
13456: LIST
13457: LIST
13458: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13459: LD_ADDR_VAR 0 30
13463: PUSH
13464: LD_INT 0
13466: PUSH
13467: LD_INT 0
13469: PUSH
13470: EMPTY
13471: LIST
13472: LIST
13473: PUSH
13474: LD_INT 0
13476: PUSH
13477: LD_INT 1
13479: NEG
13480: PUSH
13481: EMPTY
13482: LIST
13483: LIST
13484: PUSH
13485: LD_INT 1
13487: PUSH
13488: LD_INT 0
13490: PUSH
13491: EMPTY
13492: LIST
13493: LIST
13494: PUSH
13495: LD_INT 1
13497: PUSH
13498: LD_INT 1
13500: PUSH
13501: EMPTY
13502: LIST
13503: LIST
13504: PUSH
13505: LD_INT 0
13507: PUSH
13508: LD_INT 1
13510: PUSH
13511: EMPTY
13512: LIST
13513: LIST
13514: PUSH
13515: LD_INT 1
13517: NEG
13518: PUSH
13519: LD_INT 0
13521: PUSH
13522: EMPTY
13523: LIST
13524: LIST
13525: PUSH
13526: LD_INT 1
13528: NEG
13529: PUSH
13530: LD_INT 1
13532: NEG
13533: PUSH
13534: EMPTY
13535: LIST
13536: LIST
13537: PUSH
13538: LD_INT 1
13540: NEG
13541: PUSH
13542: LD_INT 2
13544: NEG
13545: PUSH
13546: EMPTY
13547: LIST
13548: LIST
13549: PUSH
13550: LD_INT 0
13552: PUSH
13553: LD_INT 2
13555: NEG
13556: PUSH
13557: EMPTY
13558: LIST
13559: LIST
13560: PUSH
13561: LD_INT 1
13563: PUSH
13564: LD_INT 1
13566: NEG
13567: PUSH
13568: EMPTY
13569: LIST
13570: LIST
13571: PUSH
13572: LD_INT 2
13574: PUSH
13575: LD_INT 0
13577: PUSH
13578: EMPTY
13579: LIST
13580: LIST
13581: PUSH
13582: LD_INT 2
13584: PUSH
13585: LD_INT 1
13587: PUSH
13588: EMPTY
13589: LIST
13590: LIST
13591: PUSH
13592: LD_INT 2
13594: PUSH
13595: LD_INT 2
13597: PUSH
13598: EMPTY
13599: LIST
13600: LIST
13601: PUSH
13602: LD_INT 1
13604: PUSH
13605: LD_INT 2
13607: PUSH
13608: EMPTY
13609: LIST
13610: LIST
13611: PUSH
13612: LD_INT 1
13614: NEG
13615: PUSH
13616: LD_INT 1
13618: PUSH
13619: EMPTY
13620: LIST
13621: LIST
13622: PUSH
13623: LD_INT 2
13625: NEG
13626: PUSH
13627: LD_INT 0
13629: PUSH
13630: EMPTY
13631: LIST
13632: LIST
13633: PUSH
13634: LD_INT 2
13636: NEG
13637: PUSH
13638: LD_INT 1
13640: NEG
13641: PUSH
13642: EMPTY
13643: LIST
13644: LIST
13645: PUSH
13646: LD_INT 1
13648: NEG
13649: PUSH
13650: LD_INT 3
13652: NEG
13653: PUSH
13654: EMPTY
13655: LIST
13656: LIST
13657: PUSH
13658: LD_INT 1
13660: PUSH
13661: LD_INT 2
13663: NEG
13664: PUSH
13665: EMPTY
13666: LIST
13667: LIST
13668: PUSH
13669: LD_INT 3
13671: PUSH
13672: LD_INT 2
13674: PUSH
13675: EMPTY
13676: LIST
13677: LIST
13678: PUSH
13679: LD_INT 2
13681: PUSH
13682: LD_INT 3
13684: PUSH
13685: EMPTY
13686: LIST
13687: LIST
13688: PUSH
13689: LD_INT 2
13691: NEG
13692: PUSH
13693: LD_INT 1
13695: PUSH
13696: EMPTY
13697: LIST
13698: LIST
13699: PUSH
13700: LD_INT 3
13702: NEG
13703: PUSH
13704: LD_INT 1
13706: NEG
13707: PUSH
13708: EMPTY
13709: LIST
13710: LIST
13711: PUSH
13712: EMPTY
13713: LIST
13714: LIST
13715: LIST
13716: LIST
13717: LIST
13718: LIST
13719: LIST
13720: LIST
13721: LIST
13722: LIST
13723: LIST
13724: LIST
13725: LIST
13726: LIST
13727: LIST
13728: LIST
13729: LIST
13730: LIST
13731: LIST
13732: LIST
13733: LIST
13734: LIST
13735: LIST
13736: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13737: LD_ADDR_VAR 0 31
13741: PUSH
13742: LD_INT 0
13744: PUSH
13745: LD_INT 0
13747: PUSH
13748: EMPTY
13749: LIST
13750: LIST
13751: PUSH
13752: LD_INT 0
13754: PUSH
13755: LD_INT 1
13757: NEG
13758: PUSH
13759: EMPTY
13760: LIST
13761: LIST
13762: PUSH
13763: LD_INT 1
13765: PUSH
13766: LD_INT 0
13768: PUSH
13769: EMPTY
13770: LIST
13771: LIST
13772: PUSH
13773: LD_INT 1
13775: PUSH
13776: LD_INT 1
13778: PUSH
13779: EMPTY
13780: LIST
13781: LIST
13782: PUSH
13783: LD_INT 0
13785: PUSH
13786: LD_INT 1
13788: PUSH
13789: EMPTY
13790: LIST
13791: LIST
13792: PUSH
13793: LD_INT 1
13795: NEG
13796: PUSH
13797: LD_INT 0
13799: PUSH
13800: EMPTY
13801: LIST
13802: LIST
13803: PUSH
13804: LD_INT 1
13806: NEG
13807: PUSH
13808: LD_INT 1
13810: NEG
13811: PUSH
13812: EMPTY
13813: LIST
13814: LIST
13815: PUSH
13816: LD_INT 1
13818: NEG
13819: PUSH
13820: LD_INT 2
13822: NEG
13823: PUSH
13824: EMPTY
13825: LIST
13826: LIST
13827: PUSH
13828: LD_INT 1
13830: PUSH
13831: LD_INT 1
13833: NEG
13834: PUSH
13835: EMPTY
13836: LIST
13837: LIST
13838: PUSH
13839: LD_INT 2
13841: PUSH
13842: LD_INT 0
13844: PUSH
13845: EMPTY
13846: LIST
13847: LIST
13848: PUSH
13849: LD_INT 2
13851: PUSH
13852: LD_INT 1
13854: PUSH
13855: EMPTY
13856: LIST
13857: LIST
13858: PUSH
13859: LD_INT 2
13861: PUSH
13862: LD_INT 2
13864: PUSH
13865: EMPTY
13866: LIST
13867: LIST
13868: PUSH
13869: LD_INT 1
13871: PUSH
13872: LD_INT 2
13874: PUSH
13875: EMPTY
13876: LIST
13877: LIST
13878: PUSH
13879: LD_INT 0
13881: PUSH
13882: LD_INT 2
13884: PUSH
13885: EMPTY
13886: LIST
13887: LIST
13888: PUSH
13889: LD_INT 1
13891: NEG
13892: PUSH
13893: LD_INT 1
13895: PUSH
13896: EMPTY
13897: LIST
13898: LIST
13899: PUSH
13900: LD_INT 2
13902: NEG
13903: PUSH
13904: LD_INT 1
13906: NEG
13907: PUSH
13908: EMPTY
13909: LIST
13910: LIST
13911: PUSH
13912: LD_INT 2
13914: NEG
13915: PUSH
13916: LD_INT 2
13918: NEG
13919: PUSH
13920: EMPTY
13921: LIST
13922: LIST
13923: PUSH
13924: LD_INT 2
13926: NEG
13927: PUSH
13928: LD_INT 3
13930: NEG
13931: PUSH
13932: EMPTY
13933: LIST
13934: LIST
13935: PUSH
13936: LD_INT 2
13938: PUSH
13939: LD_INT 1
13941: NEG
13942: PUSH
13943: EMPTY
13944: LIST
13945: LIST
13946: PUSH
13947: LD_INT 3
13949: PUSH
13950: LD_INT 1
13952: PUSH
13953: EMPTY
13954: LIST
13955: LIST
13956: PUSH
13957: LD_INT 1
13959: PUSH
13960: LD_INT 3
13962: PUSH
13963: EMPTY
13964: LIST
13965: LIST
13966: PUSH
13967: LD_INT 1
13969: NEG
13970: PUSH
13971: LD_INT 2
13973: PUSH
13974: EMPTY
13975: LIST
13976: LIST
13977: PUSH
13978: LD_INT 3
13980: NEG
13981: PUSH
13982: LD_INT 2
13984: NEG
13985: PUSH
13986: EMPTY
13987: LIST
13988: LIST
13989: PUSH
13990: EMPTY
13991: LIST
13992: LIST
13993: LIST
13994: LIST
13995: LIST
13996: LIST
13997: LIST
13998: LIST
13999: LIST
14000: LIST
14001: LIST
14002: LIST
14003: LIST
14004: LIST
14005: LIST
14006: LIST
14007: LIST
14008: LIST
14009: LIST
14010: LIST
14011: LIST
14012: LIST
14013: LIST
14014: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14015: LD_ADDR_VAR 0 32
14019: PUSH
14020: LD_INT 0
14022: PUSH
14023: LD_INT 0
14025: PUSH
14026: EMPTY
14027: LIST
14028: LIST
14029: PUSH
14030: LD_INT 0
14032: PUSH
14033: LD_INT 1
14035: NEG
14036: PUSH
14037: EMPTY
14038: LIST
14039: LIST
14040: PUSH
14041: LD_INT 1
14043: PUSH
14044: LD_INT 0
14046: PUSH
14047: EMPTY
14048: LIST
14049: LIST
14050: PUSH
14051: LD_INT 1
14053: PUSH
14054: LD_INT 1
14056: PUSH
14057: EMPTY
14058: LIST
14059: LIST
14060: PUSH
14061: LD_INT 0
14063: PUSH
14064: LD_INT 1
14066: PUSH
14067: EMPTY
14068: LIST
14069: LIST
14070: PUSH
14071: LD_INT 1
14073: NEG
14074: PUSH
14075: LD_INT 0
14077: PUSH
14078: EMPTY
14079: LIST
14080: LIST
14081: PUSH
14082: LD_INT 1
14084: NEG
14085: PUSH
14086: LD_INT 1
14088: NEG
14089: PUSH
14090: EMPTY
14091: LIST
14092: LIST
14093: PUSH
14094: LD_INT 1
14096: NEG
14097: PUSH
14098: LD_INT 2
14100: NEG
14101: PUSH
14102: EMPTY
14103: LIST
14104: LIST
14105: PUSH
14106: LD_INT 0
14108: PUSH
14109: LD_INT 2
14111: NEG
14112: PUSH
14113: EMPTY
14114: LIST
14115: LIST
14116: PUSH
14117: LD_INT 1
14119: PUSH
14120: LD_INT 1
14122: NEG
14123: PUSH
14124: EMPTY
14125: LIST
14126: LIST
14127: PUSH
14128: LD_INT 2
14130: PUSH
14131: LD_INT 1
14133: PUSH
14134: EMPTY
14135: LIST
14136: LIST
14137: PUSH
14138: LD_INT 2
14140: PUSH
14141: LD_INT 2
14143: PUSH
14144: EMPTY
14145: LIST
14146: LIST
14147: PUSH
14148: LD_INT 1
14150: PUSH
14151: LD_INT 2
14153: PUSH
14154: EMPTY
14155: LIST
14156: LIST
14157: PUSH
14158: LD_INT 0
14160: PUSH
14161: LD_INT 2
14163: PUSH
14164: EMPTY
14165: LIST
14166: LIST
14167: PUSH
14168: LD_INT 1
14170: NEG
14171: PUSH
14172: LD_INT 1
14174: PUSH
14175: EMPTY
14176: LIST
14177: LIST
14178: PUSH
14179: LD_INT 2
14181: NEG
14182: PUSH
14183: LD_INT 0
14185: PUSH
14186: EMPTY
14187: LIST
14188: LIST
14189: PUSH
14190: LD_INT 2
14192: NEG
14193: PUSH
14194: LD_INT 1
14196: NEG
14197: PUSH
14198: EMPTY
14199: LIST
14200: LIST
14201: PUSH
14202: LD_INT 1
14204: NEG
14205: PUSH
14206: LD_INT 3
14208: NEG
14209: PUSH
14210: EMPTY
14211: LIST
14212: LIST
14213: PUSH
14214: LD_INT 1
14216: PUSH
14217: LD_INT 2
14219: NEG
14220: PUSH
14221: EMPTY
14222: LIST
14223: LIST
14224: PUSH
14225: LD_INT 3
14227: PUSH
14228: LD_INT 2
14230: PUSH
14231: EMPTY
14232: LIST
14233: LIST
14234: PUSH
14235: LD_INT 2
14237: PUSH
14238: LD_INT 3
14240: PUSH
14241: EMPTY
14242: LIST
14243: LIST
14244: PUSH
14245: LD_INT 2
14247: NEG
14248: PUSH
14249: LD_INT 1
14251: PUSH
14252: EMPTY
14253: LIST
14254: LIST
14255: PUSH
14256: LD_INT 3
14258: NEG
14259: PUSH
14260: LD_INT 1
14262: NEG
14263: PUSH
14264: EMPTY
14265: LIST
14266: LIST
14267: PUSH
14268: EMPTY
14269: LIST
14270: LIST
14271: LIST
14272: LIST
14273: LIST
14274: LIST
14275: LIST
14276: LIST
14277: LIST
14278: LIST
14279: LIST
14280: LIST
14281: LIST
14282: LIST
14283: LIST
14284: LIST
14285: LIST
14286: LIST
14287: LIST
14288: LIST
14289: LIST
14290: LIST
14291: LIST
14292: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14293: LD_ADDR_VAR 0 33
14297: PUSH
14298: LD_INT 0
14300: PUSH
14301: LD_INT 0
14303: PUSH
14304: EMPTY
14305: LIST
14306: LIST
14307: PUSH
14308: LD_INT 0
14310: PUSH
14311: LD_INT 1
14313: NEG
14314: PUSH
14315: EMPTY
14316: LIST
14317: LIST
14318: PUSH
14319: LD_INT 1
14321: PUSH
14322: LD_INT 0
14324: PUSH
14325: EMPTY
14326: LIST
14327: LIST
14328: PUSH
14329: LD_INT 1
14331: PUSH
14332: LD_INT 1
14334: PUSH
14335: EMPTY
14336: LIST
14337: LIST
14338: PUSH
14339: LD_INT 0
14341: PUSH
14342: LD_INT 1
14344: PUSH
14345: EMPTY
14346: LIST
14347: LIST
14348: PUSH
14349: LD_INT 1
14351: NEG
14352: PUSH
14353: LD_INT 0
14355: PUSH
14356: EMPTY
14357: LIST
14358: LIST
14359: PUSH
14360: LD_INT 1
14362: NEG
14363: PUSH
14364: LD_INT 1
14366: NEG
14367: PUSH
14368: EMPTY
14369: LIST
14370: LIST
14371: PUSH
14372: LD_INT 1
14374: NEG
14375: PUSH
14376: LD_INT 2
14378: NEG
14379: PUSH
14380: EMPTY
14381: LIST
14382: LIST
14383: PUSH
14384: LD_INT 1
14386: PUSH
14387: LD_INT 1
14389: NEG
14390: PUSH
14391: EMPTY
14392: LIST
14393: LIST
14394: PUSH
14395: LD_INT 2
14397: PUSH
14398: LD_INT 0
14400: PUSH
14401: EMPTY
14402: LIST
14403: LIST
14404: PUSH
14405: LD_INT 2
14407: PUSH
14408: LD_INT 1
14410: PUSH
14411: EMPTY
14412: LIST
14413: LIST
14414: PUSH
14415: LD_INT 1
14417: PUSH
14418: LD_INT 2
14420: PUSH
14421: EMPTY
14422: LIST
14423: LIST
14424: PUSH
14425: LD_INT 0
14427: PUSH
14428: LD_INT 2
14430: PUSH
14431: EMPTY
14432: LIST
14433: LIST
14434: PUSH
14435: LD_INT 1
14437: NEG
14438: PUSH
14439: LD_INT 1
14441: PUSH
14442: EMPTY
14443: LIST
14444: LIST
14445: PUSH
14446: LD_INT 2
14448: NEG
14449: PUSH
14450: LD_INT 0
14452: PUSH
14453: EMPTY
14454: LIST
14455: LIST
14456: PUSH
14457: LD_INT 2
14459: NEG
14460: PUSH
14461: LD_INT 1
14463: NEG
14464: PUSH
14465: EMPTY
14466: LIST
14467: LIST
14468: PUSH
14469: LD_INT 2
14471: NEG
14472: PUSH
14473: LD_INT 2
14475: NEG
14476: PUSH
14477: EMPTY
14478: LIST
14479: LIST
14480: PUSH
14481: LD_INT 2
14483: NEG
14484: PUSH
14485: LD_INT 3
14487: NEG
14488: PUSH
14489: EMPTY
14490: LIST
14491: LIST
14492: PUSH
14493: LD_INT 2
14495: PUSH
14496: LD_INT 1
14498: NEG
14499: PUSH
14500: EMPTY
14501: LIST
14502: LIST
14503: PUSH
14504: LD_INT 3
14506: PUSH
14507: LD_INT 1
14509: PUSH
14510: EMPTY
14511: LIST
14512: LIST
14513: PUSH
14514: LD_INT 1
14516: PUSH
14517: LD_INT 3
14519: PUSH
14520: EMPTY
14521: LIST
14522: LIST
14523: PUSH
14524: LD_INT 1
14526: NEG
14527: PUSH
14528: LD_INT 2
14530: PUSH
14531: EMPTY
14532: LIST
14533: LIST
14534: PUSH
14535: LD_INT 3
14537: NEG
14538: PUSH
14539: LD_INT 2
14541: NEG
14542: PUSH
14543: EMPTY
14544: LIST
14545: LIST
14546: PUSH
14547: EMPTY
14548: LIST
14549: LIST
14550: LIST
14551: LIST
14552: LIST
14553: LIST
14554: LIST
14555: LIST
14556: LIST
14557: LIST
14558: LIST
14559: LIST
14560: LIST
14561: LIST
14562: LIST
14563: LIST
14564: LIST
14565: LIST
14566: LIST
14567: LIST
14568: LIST
14569: LIST
14570: LIST
14571: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14572: LD_ADDR_VAR 0 34
14576: PUSH
14577: LD_INT 0
14579: PUSH
14580: LD_INT 0
14582: PUSH
14583: EMPTY
14584: LIST
14585: LIST
14586: PUSH
14587: LD_INT 0
14589: PUSH
14590: LD_INT 1
14592: NEG
14593: PUSH
14594: EMPTY
14595: LIST
14596: LIST
14597: PUSH
14598: LD_INT 1
14600: PUSH
14601: LD_INT 0
14603: PUSH
14604: EMPTY
14605: LIST
14606: LIST
14607: PUSH
14608: LD_INT 1
14610: PUSH
14611: LD_INT 1
14613: PUSH
14614: EMPTY
14615: LIST
14616: LIST
14617: PUSH
14618: LD_INT 0
14620: PUSH
14621: LD_INT 1
14623: PUSH
14624: EMPTY
14625: LIST
14626: LIST
14627: PUSH
14628: LD_INT 1
14630: NEG
14631: PUSH
14632: LD_INT 0
14634: PUSH
14635: EMPTY
14636: LIST
14637: LIST
14638: PUSH
14639: LD_INT 1
14641: NEG
14642: PUSH
14643: LD_INT 1
14645: NEG
14646: PUSH
14647: EMPTY
14648: LIST
14649: LIST
14650: PUSH
14651: LD_INT 1
14653: NEG
14654: PUSH
14655: LD_INT 2
14657: NEG
14658: PUSH
14659: EMPTY
14660: LIST
14661: LIST
14662: PUSH
14663: LD_INT 0
14665: PUSH
14666: LD_INT 2
14668: NEG
14669: PUSH
14670: EMPTY
14671: LIST
14672: LIST
14673: PUSH
14674: LD_INT 1
14676: PUSH
14677: LD_INT 1
14679: NEG
14680: PUSH
14681: EMPTY
14682: LIST
14683: LIST
14684: PUSH
14685: LD_INT 2
14687: PUSH
14688: LD_INT 1
14690: PUSH
14691: EMPTY
14692: LIST
14693: LIST
14694: PUSH
14695: LD_INT 2
14697: PUSH
14698: LD_INT 2
14700: PUSH
14701: EMPTY
14702: LIST
14703: LIST
14704: PUSH
14705: LD_INT 1
14707: PUSH
14708: LD_INT 2
14710: PUSH
14711: EMPTY
14712: LIST
14713: LIST
14714: PUSH
14715: LD_INT 1
14717: NEG
14718: PUSH
14719: LD_INT 1
14721: PUSH
14722: EMPTY
14723: LIST
14724: LIST
14725: PUSH
14726: LD_INT 2
14728: NEG
14729: PUSH
14730: LD_INT 0
14732: PUSH
14733: EMPTY
14734: LIST
14735: LIST
14736: PUSH
14737: LD_INT 2
14739: NEG
14740: PUSH
14741: LD_INT 1
14743: NEG
14744: PUSH
14745: EMPTY
14746: LIST
14747: LIST
14748: PUSH
14749: LD_INT 2
14751: NEG
14752: PUSH
14753: LD_INT 2
14755: NEG
14756: PUSH
14757: EMPTY
14758: LIST
14759: LIST
14760: PUSH
14761: LD_INT 1
14763: NEG
14764: PUSH
14765: LD_INT 3
14767: NEG
14768: PUSH
14769: EMPTY
14770: LIST
14771: LIST
14772: PUSH
14773: LD_INT 1
14775: PUSH
14776: LD_INT 2
14778: NEG
14779: PUSH
14780: EMPTY
14781: LIST
14782: LIST
14783: PUSH
14784: LD_INT 3
14786: PUSH
14787: LD_INT 2
14789: PUSH
14790: EMPTY
14791: LIST
14792: LIST
14793: PUSH
14794: LD_INT 2
14796: PUSH
14797: LD_INT 3
14799: PUSH
14800: EMPTY
14801: LIST
14802: LIST
14803: PUSH
14804: LD_INT 2
14806: NEG
14807: PUSH
14808: LD_INT 1
14810: PUSH
14811: EMPTY
14812: LIST
14813: LIST
14814: PUSH
14815: LD_INT 3
14817: NEG
14818: PUSH
14819: LD_INT 1
14821: NEG
14822: PUSH
14823: EMPTY
14824: LIST
14825: LIST
14826: PUSH
14827: EMPTY
14828: LIST
14829: LIST
14830: LIST
14831: LIST
14832: LIST
14833: LIST
14834: LIST
14835: LIST
14836: LIST
14837: LIST
14838: LIST
14839: LIST
14840: LIST
14841: LIST
14842: LIST
14843: LIST
14844: LIST
14845: LIST
14846: LIST
14847: LIST
14848: LIST
14849: LIST
14850: LIST
14851: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14852: LD_ADDR_VAR 0 35
14856: PUSH
14857: LD_INT 0
14859: PUSH
14860: LD_INT 0
14862: PUSH
14863: EMPTY
14864: LIST
14865: LIST
14866: PUSH
14867: LD_INT 0
14869: PUSH
14870: LD_INT 1
14872: NEG
14873: PUSH
14874: EMPTY
14875: LIST
14876: LIST
14877: PUSH
14878: LD_INT 1
14880: PUSH
14881: LD_INT 0
14883: PUSH
14884: EMPTY
14885: LIST
14886: LIST
14887: PUSH
14888: LD_INT 1
14890: PUSH
14891: LD_INT 1
14893: PUSH
14894: EMPTY
14895: LIST
14896: LIST
14897: PUSH
14898: LD_INT 0
14900: PUSH
14901: LD_INT 1
14903: PUSH
14904: EMPTY
14905: LIST
14906: LIST
14907: PUSH
14908: LD_INT 1
14910: NEG
14911: PUSH
14912: LD_INT 0
14914: PUSH
14915: EMPTY
14916: LIST
14917: LIST
14918: PUSH
14919: LD_INT 1
14921: NEG
14922: PUSH
14923: LD_INT 1
14925: NEG
14926: PUSH
14927: EMPTY
14928: LIST
14929: LIST
14930: PUSH
14931: LD_INT 2
14933: PUSH
14934: LD_INT 1
14936: PUSH
14937: EMPTY
14938: LIST
14939: LIST
14940: PUSH
14941: LD_INT 2
14943: NEG
14944: PUSH
14945: LD_INT 1
14947: NEG
14948: PUSH
14949: EMPTY
14950: LIST
14951: LIST
14952: PUSH
14953: EMPTY
14954: LIST
14955: LIST
14956: LIST
14957: LIST
14958: LIST
14959: LIST
14960: LIST
14961: LIST
14962: LIST
14963: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14964: LD_ADDR_VAR 0 36
14968: PUSH
14969: LD_INT 0
14971: PUSH
14972: LD_INT 0
14974: PUSH
14975: EMPTY
14976: LIST
14977: LIST
14978: PUSH
14979: LD_INT 0
14981: PUSH
14982: LD_INT 1
14984: NEG
14985: PUSH
14986: EMPTY
14987: LIST
14988: LIST
14989: PUSH
14990: LD_INT 1
14992: PUSH
14993: LD_INT 0
14995: PUSH
14996: EMPTY
14997: LIST
14998: LIST
14999: PUSH
15000: LD_INT 1
15002: PUSH
15003: LD_INT 1
15005: PUSH
15006: EMPTY
15007: LIST
15008: LIST
15009: PUSH
15010: LD_INT 0
15012: PUSH
15013: LD_INT 1
15015: PUSH
15016: EMPTY
15017: LIST
15018: LIST
15019: PUSH
15020: LD_INT 1
15022: NEG
15023: PUSH
15024: LD_INT 0
15026: PUSH
15027: EMPTY
15028: LIST
15029: LIST
15030: PUSH
15031: LD_INT 1
15033: NEG
15034: PUSH
15035: LD_INT 1
15037: NEG
15038: PUSH
15039: EMPTY
15040: LIST
15041: LIST
15042: PUSH
15043: LD_INT 1
15045: NEG
15046: PUSH
15047: LD_INT 2
15049: NEG
15050: PUSH
15051: EMPTY
15052: LIST
15053: LIST
15054: PUSH
15055: LD_INT 1
15057: PUSH
15058: LD_INT 2
15060: PUSH
15061: EMPTY
15062: LIST
15063: LIST
15064: PUSH
15065: EMPTY
15066: LIST
15067: LIST
15068: LIST
15069: LIST
15070: LIST
15071: LIST
15072: LIST
15073: LIST
15074: LIST
15075: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15076: LD_ADDR_VAR 0 37
15080: PUSH
15081: LD_INT 0
15083: PUSH
15084: LD_INT 0
15086: PUSH
15087: EMPTY
15088: LIST
15089: LIST
15090: PUSH
15091: LD_INT 0
15093: PUSH
15094: LD_INT 1
15096: NEG
15097: PUSH
15098: EMPTY
15099: LIST
15100: LIST
15101: PUSH
15102: LD_INT 1
15104: PUSH
15105: LD_INT 0
15107: PUSH
15108: EMPTY
15109: LIST
15110: LIST
15111: PUSH
15112: LD_INT 1
15114: PUSH
15115: LD_INT 1
15117: PUSH
15118: EMPTY
15119: LIST
15120: LIST
15121: PUSH
15122: LD_INT 0
15124: PUSH
15125: LD_INT 1
15127: PUSH
15128: EMPTY
15129: LIST
15130: LIST
15131: PUSH
15132: LD_INT 1
15134: NEG
15135: PUSH
15136: LD_INT 0
15138: PUSH
15139: EMPTY
15140: LIST
15141: LIST
15142: PUSH
15143: LD_INT 1
15145: NEG
15146: PUSH
15147: LD_INT 1
15149: NEG
15150: PUSH
15151: EMPTY
15152: LIST
15153: LIST
15154: PUSH
15155: LD_INT 1
15157: PUSH
15158: LD_INT 1
15160: NEG
15161: PUSH
15162: EMPTY
15163: LIST
15164: LIST
15165: PUSH
15166: LD_INT 1
15168: NEG
15169: PUSH
15170: LD_INT 1
15172: PUSH
15173: EMPTY
15174: LIST
15175: LIST
15176: PUSH
15177: EMPTY
15178: LIST
15179: LIST
15180: LIST
15181: LIST
15182: LIST
15183: LIST
15184: LIST
15185: LIST
15186: LIST
15187: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15188: LD_ADDR_VAR 0 38
15192: PUSH
15193: LD_INT 0
15195: PUSH
15196: LD_INT 0
15198: PUSH
15199: EMPTY
15200: LIST
15201: LIST
15202: PUSH
15203: LD_INT 0
15205: PUSH
15206: LD_INT 1
15208: NEG
15209: PUSH
15210: EMPTY
15211: LIST
15212: LIST
15213: PUSH
15214: LD_INT 1
15216: PUSH
15217: LD_INT 0
15219: PUSH
15220: EMPTY
15221: LIST
15222: LIST
15223: PUSH
15224: LD_INT 1
15226: PUSH
15227: LD_INT 1
15229: PUSH
15230: EMPTY
15231: LIST
15232: LIST
15233: PUSH
15234: LD_INT 0
15236: PUSH
15237: LD_INT 1
15239: PUSH
15240: EMPTY
15241: LIST
15242: LIST
15243: PUSH
15244: LD_INT 1
15246: NEG
15247: PUSH
15248: LD_INT 0
15250: PUSH
15251: EMPTY
15252: LIST
15253: LIST
15254: PUSH
15255: LD_INT 1
15257: NEG
15258: PUSH
15259: LD_INT 1
15261: NEG
15262: PUSH
15263: EMPTY
15264: LIST
15265: LIST
15266: PUSH
15267: LD_INT 2
15269: PUSH
15270: LD_INT 1
15272: PUSH
15273: EMPTY
15274: LIST
15275: LIST
15276: PUSH
15277: LD_INT 2
15279: NEG
15280: PUSH
15281: LD_INT 1
15283: NEG
15284: PUSH
15285: EMPTY
15286: LIST
15287: LIST
15288: PUSH
15289: EMPTY
15290: LIST
15291: LIST
15292: LIST
15293: LIST
15294: LIST
15295: LIST
15296: LIST
15297: LIST
15298: LIST
15299: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15300: LD_ADDR_VAR 0 39
15304: PUSH
15305: LD_INT 0
15307: PUSH
15308: LD_INT 0
15310: PUSH
15311: EMPTY
15312: LIST
15313: LIST
15314: PUSH
15315: LD_INT 0
15317: PUSH
15318: LD_INT 1
15320: NEG
15321: PUSH
15322: EMPTY
15323: LIST
15324: LIST
15325: PUSH
15326: LD_INT 1
15328: PUSH
15329: LD_INT 0
15331: PUSH
15332: EMPTY
15333: LIST
15334: LIST
15335: PUSH
15336: LD_INT 1
15338: PUSH
15339: LD_INT 1
15341: PUSH
15342: EMPTY
15343: LIST
15344: LIST
15345: PUSH
15346: LD_INT 0
15348: PUSH
15349: LD_INT 1
15351: PUSH
15352: EMPTY
15353: LIST
15354: LIST
15355: PUSH
15356: LD_INT 1
15358: NEG
15359: PUSH
15360: LD_INT 0
15362: PUSH
15363: EMPTY
15364: LIST
15365: LIST
15366: PUSH
15367: LD_INT 1
15369: NEG
15370: PUSH
15371: LD_INT 1
15373: NEG
15374: PUSH
15375: EMPTY
15376: LIST
15377: LIST
15378: PUSH
15379: LD_INT 1
15381: NEG
15382: PUSH
15383: LD_INT 2
15385: NEG
15386: PUSH
15387: EMPTY
15388: LIST
15389: LIST
15390: PUSH
15391: LD_INT 1
15393: PUSH
15394: LD_INT 2
15396: PUSH
15397: EMPTY
15398: LIST
15399: LIST
15400: PUSH
15401: EMPTY
15402: LIST
15403: LIST
15404: LIST
15405: LIST
15406: LIST
15407: LIST
15408: LIST
15409: LIST
15410: LIST
15411: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15412: LD_ADDR_VAR 0 40
15416: PUSH
15417: LD_INT 0
15419: PUSH
15420: LD_INT 0
15422: PUSH
15423: EMPTY
15424: LIST
15425: LIST
15426: PUSH
15427: LD_INT 0
15429: PUSH
15430: LD_INT 1
15432: NEG
15433: PUSH
15434: EMPTY
15435: LIST
15436: LIST
15437: PUSH
15438: LD_INT 1
15440: PUSH
15441: LD_INT 0
15443: PUSH
15444: EMPTY
15445: LIST
15446: LIST
15447: PUSH
15448: LD_INT 1
15450: PUSH
15451: LD_INT 1
15453: PUSH
15454: EMPTY
15455: LIST
15456: LIST
15457: PUSH
15458: LD_INT 0
15460: PUSH
15461: LD_INT 1
15463: PUSH
15464: EMPTY
15465: LIST
15466: LIST
15467: PUSH
15468: LD_INT 1
15470: NEG
15471: PUSH
15472: LD_INT 0
15474: PUSH
15475: EMPTY
15476: LIST
15477: LIST
15478: PUSH
15479: LD_INT 1
15481: NEG
15482: PUSH
15483: LD_INT 1
15485: NEG
15486: PUSH
15487: EMPTY
15488: LIST
15489: LIST
15490: PUSH
15491: LD_INT 1
15493: PUSH
15494: LD_INT 1
15496: NEG
15497: PUSH
15498: EMPTY
15499: LIST
15500: LIST
15501: PUSH
15502: LD_INT 1
15504: NEG
15505: PUSH
15506: LD_INT 1
15508: PUSH
15509: EMPTY
15510: LIST
15511: LIST
15512: PUSH
15513: EMPTY
15514: LIST
15515: LIST
15516: LIST
15517: LIST
15518: LIST
15519: LIST
15520: LIST
15521: LIST
15522: LIST
15523: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15524: LD_ADDR_VAR 0 41
15528: PUSH
15529: LD_INT 0
15531: PUSH
15532: LD_INT 0
15534: PUSH
15535: EMPTY
15536: LIST
15537: LIST
15538: PUSH
15539: LD_INT 0
15541: PUSH
15542: LD_INT 1
15544: NEG
15545: PUSH
15546: EMPTY
15547: LIST
15548: LIST
15549: PUSH
15550: LD_INT 1
15552: PUSH
15553: LD_INT 0
15555: PUSH
15556: EMPTY
15557: LIST
15558: LIST
15559: PUSH
15560: LD_INT 1
15562: PUSH
15563: LD_INT 1
15565: PUSH
15566: EMPTY
15567: LIST
15568: LIST
15569: PUSH
15570: LD_INT 0
15572: PUSH
15573: LD_INT 1
15575: PUSH
15576: EMPTY
15577: LIST
15578: LIST
15579: PUSH
15580: LD_INT 1
15582: NEG
15583: PUSH
15584: LD_INT 0
15586: PUSH
15587: EMPTY
15588: LIST
15589: LIST
15590: PUSH
15591: LD_INT 1
15593: NEG
15594: PUSH
15595: LD_INT 1
15597: NEG
15598: PUSH
15599: EMPTY
15600: LIST
15601: LIST
15602: PUSH
15603: LD_INT 1
15605: NEG
15606: PUSH
15607: LD_INT 2
15609: NEG
15610: PUSH
15611: EMPTY
15612: LIST
15613: LIST
15614: PUSH
15615: LD_INT 1
15617: PUSH
15618: LD_INT 1
15620: NEG
15621: PUSH
15622: EMPTY
15623: LIST
15624: LIST
15625: PUSH
15626: LD_INT 2
15628: PUSH
15629: LD_INT 0
15631: PUSH
15632: EMPTY
15633: LIST
15634: LIST
15635: PUSH
15636: LD_INT 2
15638: PUSH
15639: LD_INT 1
15641: PUSH
15642: EMPTY
15643: LIST
15644: LIST
15645: PUSH
15646: LD_INT 2
15648: PUSH
15649: LD_INT 2
15651: PUSH
15652: EMPTY
15653: LIST
15654: LIST
15655: PUSH
15656: LD_INT 1
15658: PUSH
15659: LD_INT 2
15661: PUSH
15662: EMPTY
15663: LIST
15664: LIST
15665: PUSH
15666: LD_INT 1
15668: NEG
15669: PUSH
15670: LD_INT 1
15672: PUSH
15673: EMPTY
15674: LIST
15675: LIST
15676: PUSH
15677: LD_INT 2
15679: NEG
15680: PUSH
15681: LD_INT 0
15683: PUSH
15684: EMPTY
15685: LIST
15686: LIST
15687: PUSH
15688: LD_INT 2
15690: NEG
15691: PUSH
15692: LD_INT 1
15694: NEG
15695: PUSH
15696: EMPTY
15697: LIST
15698: LIST
15699: PUSH
15700: LD_INT 2
15702: NEG
15703: PUSH
15704: LD_INT 2
15706: NEG
15707: PUSH
15708: EMPTY
15709: LIST
15710: LIST
15711: PUSH
15712: LD_INT 2
15714: NEG
15715: PUSH
15716: LD_INT 3
15718: NEG
15719: PUSH
15720: EMPTY
15721: LIST
15722: LIST
15723: PUSH
15724: LD_INT 2
15726: PUSH
15727: LD_INT 1
15729: NEG
15730: PUSH
15731: EMPTY
15732: LIST
15733: LIST
15734: PUSH
15735: LD_INT 3
15737: PUSH
15738: LD_INT 0
15740: PUSH
15741: EMPTY
15742: LIST
15743: LIST
15744: PUSH
15745: LD_INT 3
15747: PUSH
15748: LD_INT 1
15750: PUSH
15751: EMPTY
15752: LIST
15753: LIST
15754: PUSH
15755: LD_INT 3
15757: PUSH
15758: LD_INT 2
15760: PUSH
15761: EMPTY
15762: LIST
15763: LIST
15764: PUSH
15765: LD_INT 3
15767: PUSH
15768: LD_INT 3
15770: PUSH
15771: EMPTY
15772: LIST
15773: LIST
15774: PUSH
15775: LD_INT 2
15777: PUSH
15778: LD_INT 3
15780: PUSH
15781: EMPTY
15782: LIST
15783: LIST
15784: PUSH
15785: LD_INT 2
15787: NEG
15788: PUSH
15789: LD_INT 1
15791: PUSH
15792: EMPTY
15793: LIST
15794: LIST
15795: PUSH
15796: LD_INT 3
15798: NEG
15799: PUSH
15800: LD_INT 0
15802: PUSH
15803: EMPTY
15804: LIST
15805: LIST
15806: PUSH
15807: LD_INT 3
15809: NEG
15810: PUSH
15811: LD_INT 1
15813: NEG
15814: PUSH
15815: EMPTY
15816: LIST
15817: LIST
15818: PUSH
15819: LD_INT 3
15821: NEG
15822: PUSH
15823: LD_INT 2
15825: NEG
15826: PUSH
15827: EMPTY
15828: LIST
15829: LIST
15830: PUSH
15831: LD_INT 3
15833: NEG
15834: PUSH
15835: LD_INT 3
15837: NEG
15838: PUSH
15839: EMPTY
15840: LIST
15841: LIST
15842: PUSH
15843: EMPTY
15844: LIST
15845: LIST
15846: LIST
15847: LIST
15848: LIST
15849: LIST
15850: LIST
15851: LIST
15852: LIST
15853: LIST
15854: LIST
15855: LIST
15856: LIST
15857: LIST
15858: LIST
15859: LIST
15860: LIST
15861: LIST
15862: LIST
15863: LIST
15864: LIST
15865: LIST
15866: LIST
15867: LIST
15868: LIST
15869: LIST
15870: LIST
15871: LIST
15872: LIST
15873: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15874: LD_ADDR_VAR 0 42
15878: PUSH
15879: LD_INT 0
15881: PUSH
15882: LD_INT 0
15884: PUSH
15885: EMPTY
15886: LIST
15887: LIST
15888: PUSH
15889: LD_INT 0
15891: PUSH
15892: LD_INT 1
15894: NEG
15895: PUSH
15896: EMPTY
15897: LIST
15898: LIST
15899: PUSH
15900: LD_INT 1
15902: PUSH
15903: LD_INT 0
15905: PUSH
15906: EMPTY
15907: LIST
15908: LIST
15909: PUSH
15910: LD_INT 1
15912: PUSH
15913: LD_INT 1
15915: PUSH
15916: EMPTY
15917: LIST
15918: LIST
15919: PUSH
15920: LD_INT 0
15922: PUSH
15923: LD_INT 1
15925: PUSH
15926: EMPTY
15927: LIST
15928: LIST
15929: PUSH
15930: LD_INT 1
15932: NEG
15933: PUSH
15934: LD_INT 0
15936: PUSH
15937: EMPTY
15938: LIST
15939: LIST
15940: PUSH
15941: LD_INT 1
15943: NEG
15944: PUSH
15945: LD_INT 1
15947: NEG
15948: PUSH
15949: EMPTY
15950: LIST
15951: LIST
15952: PUSH
15953: LD_INT 1
15955: NEG
15956: PUSH
15957: LD_INT 2
15959: NEG
15960: PUSH
15961: EMPTY
15962: LIST
15963: LIST
15964: PUSH
15965: LD_INT 0
15967: PUSH
15968: LD_INT 2
15970: NEG
15971: PUSH
15972: EMPTY
15973: LIST
15974: LIST
15975: PUSH
15976: LD_INT 1
15978: PUSH
15979: LD_INT 1
15981: NEG
15982: PUSH
15983: EMPTY
15984: LIST
15985: LIST
15986: PUSH
15987: LD_INT 2
15989: PUSH
15990: LD_INT 1
15992: PUSH
15993: EMPTY
15994: LIST
15995: LIST
15996: PUSH
15997: LD_INT 2
15999: PUSH
16000: LD_INT 2
16002: PUSH
16003: EMPTY
16004: LIST
16005: LIST
16006: PUSH
16007: LD_INT 1
16009: PUSH
16010: LD_INT 2
16012: PUSH
16013: EMPTY
16014: LIST
16015: LIST
16016: PUSH
16017: LD_INT 0
16019: PUSH
16020: LD_INT 2
16022: PUSH
16023: EMPTY
16024: LIST
16025: LIST
16026: PUSH
16027: LD_INT 1
16029: NEG
16030: PUSH
16031: LD_INT 1
16033: PUSH
16034: EMPTY
16035: LIST
16036: LIST
16037: PUSH
16038: LD_INT 2
16040: NEG
16041: PUSH
16042: LD_INT 1
16044: NEG
16045: PUSH
16046: EMPTY
16047: LIST
16048: LIST
16049: PUSH
16050: LD_INT 2
16052: NEG
16053: PUSH
16054: LD_INT 2
16056: NEG
16057: PUSH
16058: EMPTY
16059: LIST
16060: LIST
16061: PUSH
16062: LD_INT 2
16064: NEG
16065: PUSH
16066: LD_INT 3
16068: NEG
16069: PUSH
16070: EMPTY
16071: LIST
16072: LIST
16073: PUSH
16074: LD_INT 1
16076: NEG
16077: PUSH
16078: LD_INT 3
16080: NEG
16081: PUSH
16082: EMPTY
16083: LIST
16084: LIST
16085: PUSH
16086: LD_INT 0
16088: PUSH
16089: LD_INT 3
16091: NEG
16092: PUSH
16093: EMPTY
16094: LIST
16095: LIST
16096: PUSH
16097: LD_INT 1
16099: PUSH
16100: LD_INT 2
16102: NEG
16103: PUSH
16104: EMPTY
16105: LIST
16106: LIST
16107: PUSH
16108: LD_INT 3
16110: PUSH
16111: LD_INT 2
16113: PUSH
16114: EMPTY
16115: LIST
16116: LIST
16117: PUSH
16118: LD_INT 3
16120: PUSH
16121: LD_INT 3
16123: PUSH
16124: EMPTY
16125: LIST
16126: LIST
16127: PUSH
16128: LD_INT 2
16130: PUSH
16131: LD_INT 3
16133: PUSH
16134: EMPTY
16135: LIST
16136: LIST
16137: PUSH
16138: LD_INT 1
16140: PUSH
16141: LD_INT 3
16143: PUSH
16144: EMPTY
16145: LIST
16146: LIST
16147: PUSH
16148: LD_INT 0
16150: PUSH
16151: LD_INT 3
16153: PUSH
16154: EMPTY
16155: LIST
16156: LIST
16157: PUSH
16158: LD_INT 1
16160: NEG
16161: PUSH
16162: LD_INT 2
16164: PUSH
16165: EMPTY
16166: LIST
16167: LIST
16168: PUSH
16169: LD_INT 3
16171: NEG
16172: PUSH
16173: LD_INT 2
16175: NEG
16176: PUSH
16177: EMPTY
16178: LIST
16179: LIST
16180: PUSH
16181: LD_INT 3
16183: NEG
16184: PUSH
16185: LD_INT 3
16187: NEG
16188: PUSH
16189: EMPTY
16190: LIST
16191: LIST
16192: PUSH
16193: EMPTY
16194: LIST
16195: LIST
16196: LIST
16197: LIST
16198: LIST
16199: LIST
16200: LIST
16201: LIST
16202: LIST
16203: LIST
16204: LIST
16205: LIST
16206: LIST
16207: LIST
16208: LIST
16209: LIST
16210: LIST
16211: LIST
16212: LIST
16213: LIST
16214: LIST
16215: LIST
16216: LIST
16217: LIST
16218: LIST
16219: LIST
16220: LIST
16221: LIST
16222: LIST
16223: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16224: LD_ADDR_VAR 0 43
16228: PUSH
16229: LD_INT 0
16231: PUSH
16232: LD_INT 0
16234: PUSH
16235: EMPTY
16236: LIST
16237: LIST
16238: PUSH
16239: LD_INT 0
16241: PUSH
16242: LD_INT 1
16244: NEG
16245: PUSH
16246: EMPTY
16247: LIST
16248: LIST
16249: PUSH
16250: LD_INT 1
16252: PUSH
16253: LD_INT 0
16255: PUSH
16256: EMPTY
16257: LIST
16258: LIST
16259: PUSH
16260: LD_INT 1
16262: PUSH
16263: LD_INT 1
16265: PUSH
16266: EMPTY
16267: LIST
16268: LIST
16269: PUSH
16270: LD_INT 0
16272: PUSH
16273: LD_INT 1
16275: PUSH
16276: EMPTY
16277: LIST
16278: LIST
16279: PUSH
16280: LD_INT 1
16282: NEG
16283: PUSH
16284: LD_INT 0
16286: PUSH
16287: EMPTY
16288: LIST
16289: LIST
16290: PUSH
16291: LD_INT 1
16293: NEG
16294: PUSH
16295: LD_INT 1
16297: NEG
16298: PUSH
16299: EMPTY
16300: LIST
16301: LIST
16302: PUSH
16303: LD_INT 1
16305: NEG
16306: PUSH
16307: LD_INT 2
16309: NEG
16310: PUSH
16311: EMPTY
16312: LIST
16313: LIST
16314: PUSH
16315: LD_INT 0
16317: PUSH
16318: LD_INT 2
16320: NEG
16321: PUSH
16322: EMPTY
16323: LIST
16324: LIST
16325: PUSH
16326: LD_INT 1
16328: PUSH
16329: LD_INT 1
16331: NEG
16332: PUSH
16333: EMPTY
16334: LIST
16335: LIST
16336: PUSH
16337: LD_INT 2
16339: PUSH
16340: LD_INT 0
16342: PUSH
16343: EMPTY
16344: LIST
16345: LIST
16346: PUSH
16347: LD_INT 2
16349: PUSH
16350: LD_INT 1
16352: PUSH
16353: EMPTY
16354: LIST
16355: LIST
16356: PUSH
16357: LD_INT 1
16359: PUSH
16360: LD_INT 2
16362: PUSH
16363: EMPTY
16364: LIST
16365: LIST
16366: PUSH
16367: LD_INT 0
16369: PUSH
16370: LD_INT 2
16372: PUSH
16373: EMPTY
16374: LIST
16375: LIST
16376: PUSH
16377: LD_INT 1
16379: NEG
16380: PUSH
16381: LD_INT 1
16383: PUSH
16384: EMPTY
16385: LIST
16386: LIST
16387: PUSH
16388: LD_INT 2
16390: NEG
16391: PUSH
16392: LD_INT 0
16394: PUSH
16395: EMPTY
16396: LIST
16397: LIST
16398: PUSH
16399: LD_INT 2
16401: NEG
16402: PUSH
16403: LD_INT 1
16405: NEG
16406: PUSH
16407: EMPTY
16408: LIST
16409: LIST
16410: PUSH
16411: LD_INT 1
16413: NEG
16414: PUSH
16415: LD_INT 3
16417: NEG
16418: PUSH
16419: EMPTY
16420: LIST
16421: LIST
16422: PUSH
16423: LD_INT 0
16425: PUSH
16426: LD_INT 3
16428: NEG
16429: PUSH
16430: EMPTY
16431: LIST
16432: LIST
16433: PUSH
16434: LD_INT 1
16436: PUSH
16437: LD_INT 2
16439: NEG
16440: PUSH
16441: EMPTY
16442: LIST
16443: LIST
16444: PUSH
16445: LD_INT 2
16447: PUSH
16448: LD_INT 1
16450: NEG
16451: PUSH
16452: EMPTY
16453: LIST
16454: LIST
16455: PUSH
16456: LD_INT 3
16458: PUSH
16459: LD_INT 0
16461: PUSH
16462: EMPTY
16463: LIST
16464: LIST
16465: PUSH
16466: LD_INT 3
16468: PUSH
16469: LD_INT 1
16471: PUSH
16472: EMPTY
16473: LIST
16474: LIST
16475: PUSH
16476: LD_INT 1
16478: PUSH
16479: LD_INT 3
16481: PUSH
16482: EMPTY
16483: LIST
16484: LIST
16485: PUSH
16486: LD_INT 0
16488: PUSH
16489: LD_INT 3
16491: PUSH
16492: EMPTY
16493: LIST
16494: LIST
16495: PUSH
16496: LD_INT 1
16498: NEG
16499: PUSH
16500: LD_INT 2
16502: PUSH
16503: EMPTY
16504: LIST
16505: LIST
16506: PUSH
16507: LD_INT 2
16509: NEG
16510: PUSH
16511: LD_INT 1
16513: PUSH
16514: EMPTY
16515: LIST
16516: LIST
16517: PUSH
16518: LD_INT 3
16520: NEG
16521: PUSH
16522: LD_INT 0
16524: PUSH
16525: EMPTY
16526: LIST
16527: LIST
16528: PUSH
16529: LD_INT 3
16531: NEG
16532: PUSH
16533: LD_INT 1
16535: NEG
16536: PUSH
16537: EMPTY
16538: LIST
16539: LIST
16540: PUSH
16541: EMPTY
16542: LIST
16543: LIST
16544: LIST
16545: LIST
16546: LIST
16547: LIST
16548: LIST
16549: LIST
16550: LIST
16551: LIST
16552: LIST
16553: LIST
16554: LIST
16555: LIST
16556: LIST
16557: LIST
16558: LIST
16559: LIST
16560: LIST
16561: LIST
16562: LIST
16563: LIST
16564: LIST
16565: LIST
16566: LIST
16567: LIST
16568: LIST
16569: LIST
16570: LIST
16571: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16572: LD_ADDR_VAR 0 44
16576: PUSH
16577: LD_INT 0
16579: PUSH
16580: LD_INT 0
16582: PUSH
16583: EMPTY
16584: LIST
16585: LIST
16586: PUSH
16587: LD_INT 0
16589: PUSH
16590: LD_INT 1
16592: NEG
16593: PUSH
16594: EMPTY
16595: LIST
16596: LIST
16597: PUSH
16598: LD_INT 1
16600: PUSH
16601: LD_INT 0
16603: PUSH
16604: EMPTY
16605: LIST
16606: LIST
16607: PUSH
16608: LD_INT 1
16610: PUSH
16611: LD_INT 1
16613: PUSH
16614: EMPTY
16615: LIST
16616: LIST
16617: PUSH
16618: LD_INT 0
16620: PUSH
16621: LD_INT 1
16623: PUSH
16624: EMPTY
16625: LIST
16626: LIST
16627: PUSH
16628: LD_INT 1
16630: NEG
16631: PUSH
16632: LD_INT 0
16634: PUSH
16635: EMPTY
16636: LIST
16637: LIST
16638: PUSH
16639: LD_INT 1
16641: NEG
16642: PUSH
16643: LD_INT 1
16645: NEG
16646: PUSH
16647: EMPTY
16648: LIST
16649: LIST
16650: PUSH
16651: LD_INT 1
16653: NEG
16654: PUSH
16655: LD_INT 2
16657: NEG
16658: PUSH
16659: EMPTY
16660: LIST
16661: LIST
16662: PUSH
16663: LD_INT 1
16665: PUSH
16666: LD_INT 1
16668: NEG
16669: PUSH
16670: EMPTY
16671: LIST
16672: LIST
16673: PUSH
16674: LD_INT 2
16676: PUSH
16677: LD_INT 0
16679: PUSH
16680: EMPTY
16681: LIST
16682: LIST
16683: PUSH
16684: LD_INT 2
16686: PUSH
16687: LD_INT 1
16689: PUSH
16690: EMPTY
16691: LIST
16692: LIST
16693: PUSH
16694: LD_INT 2
16696: PUSH
16697: LD_INT 2
16699: PUSH
16700: EMPTY
16701: LIST
16702: LIST
16703: PUSH
16704: LD_INT 1
16706: PUSH
16707: LD_INT 2
16709: PUSH
16710: EMPTY
16711: LIST
16712: LIST
16713: PUSH
16714: LD_INT 1
16716: NEG
16717: PUSH
16718: LD_INT 1
16720: PUSH
16721: EMPTY
16722: LIST
16723: LIST
16724: PUSH
16725: LD_INT 2
16727: NEG
16728: PUSH
16729: LD_INT 0
16731: PUSH
16732: EMPTY
16733: LIST
16734: LIST
16735: PUSH
16736: LD_INT 2
16738: NEG
16739: PUSH
16740: LD_INT 1
16742: NEG
16743: PUSH
16744: EMPTY
16745: LIST
16746: LIST
16747: PUSH
16748: LD_INT 2
16750: NEG
16751: PUSH
16752: LD_INT 2
16754: NEG
16755: PUSH
16756: EMPTY
16757: LIST
16758: LIST
16759: PUSH
16760: LD_INT 2
16762: NEG
16763: PUSH
16764: LD_INT 3
16766: NEG
16767: PUSH
16768: EMPTY
16769: LIST
16770: LIST
16771: PUSH
16772: LD_INT 2
16774: PUSH
16775: LD_INT 1
16777: NEG
16778: PUSH
16779: EMPTY
16780: LIST
16781: LIST
16782: PUSH
16783: LD_INT 3
16785: PUSH
16786: LD_INT 0
16788: PUSH
16789: EMPTY
16790: LIST
16791: LIST
16792: PUSH
16793: LD_INT 3
16795: PUSH
16796: LD_INT 1
16798: PUSH
16799: EMPTY
16800: LIST
16801: LIST
16802: PUSH
16803: LD_INT 3
16805: PUSH
16806: LD_INT 2
16808: PUSH
16809: EMPTY
16810: LIST
16811: LIST
16812: PUSH
16813: LD_INT 3
16815: PUSH
16816: LD_INT 3
16818: PUSH
16819: EMPTY
16820: LIST
16821: LIST
16822: PUSH
16823: LD_INT 2
16825: PUSH
16826: LD_INT 3
16828: PUSH
16829: EMPTY
16830: LIST
16831: LIST
16832: PUSH
16833: LD_INT 2
16835: NEG
16836: PUSH
16837: LD_INT 1
16839: PUSH
16840: EMPTY
16841: LIST
16842: LIST
16843: PUSH
16844: LD_INT 3
16846: NEG
16847: PUSH
16848: LD_INT 0
16850: PUSH
16851: EMPTY
16852: LIST
16853: LIST
16854: PUSH
16855: LD_INT 3
16857: NEG
16858: PUSH
16859: LD_INT 1
16861: NEG
16862: PUSH
16863: EMPTY
16864: LIST
16865: LIST
16866: PUSH
16867: LD_INT 3
16869: NEG
16870: PUSH
16871: LD_INT 2
16873: NEG
16874: PUSH
16875: EMPTY
16876: LIST
16877: LIST
16878: PUSH
16879: LD_INT 3
16881: NEG
16882: PUSH
16883: LD_INT 3
16885: NEG
16886: PUSH
16887: EMPTY
16888: LIST
16889: LIST
16890: PUSH
16891: EMPTY
16892: LIST
16893: LIST
16894: LIST
16895: LIST
16896: LIST
16897: LIST
16898: LIST
16899: LIST
16900: LIST
16901: LIST
16902: LIST
16903: LIST
16904: LIST
16905: LIST
16906: LIST
16907: LIST
16908: LIST
16909: LIST
16910: LIST
16911: LIST
16912: LIST
16913: LIST
16914: LIST
16915: LIST
16916: LIST
16917: LIST
16918: LIST
16919: LIST
16920: LIST
16921: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16922: LD_ADDR_VAR 0 45
16926: PUSH
16927: LD_INT 0
16929: PUSH
16930: LD_INT 0
16932: PUSH
16933: EMPTY
16934: LIST
16935: LIST
16936: PUSH
16937: LD_INT 0
16939: PUSH
16940: LD_INT 1
16942: NEG
16943: PUSH
16944: EMPTY
16945: LIST
16946: LIST
16947: PUSH
16948: LD_INT 1
16950: PUSH
16951: LD_INT 0
16953: PUSH
16954: EMPTY
16955: LIST
16956: LIST
16957: PUSH
16958: LD_INT 1
16960: PUSH
16961: LD_INT 1
16963: PUSH
16964: EMPTY
16965: LIST
16966: LIST
16967: PUSH
16968: LD_INT 0
16970: PUSH
16971: LD_INT 1
16973: PUSH
16974: EMPTY
16975: LIST
16976: LIST
16977: PUSH
16978: LD_INT 1
16980: NEG
16981: PUSH
16982: LD_INT 0
16984: PUSH
16985: EMPTY
16986: LIST
16987: LIST
16988: PUSH
16989: LD_INT 1
16991: NEG
16992: PUSH
16993: LD_INT 1
16995: NEG
16996: PUSH
16997: EMPTY
16998: LIST
16999: LIST
17000: PUSH
17001: LD_INT 1
17003: NEG
17004: PUSH
17005: LD_INT 2
17007: NEG
17008: PUSH
17009: EMPTY
17010: LIST
17011: LIST
17012: PUSH
17013: LD_INT 0
17015: PUSH
17016: LD_INT 2
17018: NEG
17019: PUSH
17020: EMPTY
17021: LIST
17022: LIST
17023: PUSH
17024: LD_INT 1
17026: PUSH
17027: LD_INT 1
17029: NEG
17030: PUSH
17031: EMPTY
17032: LIST
17033: LIST
17034: PUSH
17035: LD_INT 2
17037: PUSH
17038: LD_INT 1
17040: PUSH
17041: EMPTY
17042: LIST
17043: LIST
17044: PUSH
17045: LD_INT 2
17047: PUSH
17048: LD_INT 2
17050: PUSH
17051: EMPTY
17052: LIST
17053: LIST
17054: PUSH
17055: LD_INT 1
17057: PUSH
17058: LD_INT 2
17060: PUSH
17061: EMPTY
17062: LIST
17063: LIST
17064: PUSH
17065: LD_INT 0
17067: PUSH
17068: LD_INT 2
17070: PUSH
17071: EMPTY
17072: LIST
17073: LIST
17074: PUSH
17075: LD_INT 1
17077: NEG
17078: PUSH
17079: LD_INT 1
17081: PUSH
17082: EMPTY
17083: LIST
17084: LIST
17085: PUSH
17086: LD_INT 2
17088: NEG
17089: PUSH
17090: LD_INT 1
17092: NEG
17093: PUSH
17094: EMPTY
17095: LIST
17096: LIST
17097: PUSH
17098: LD_INT 2
17100: NEG
17101: PUSH
17102: LD_INT 2
17104: NEG
17105: PUSH
17106: EMPTY
17107: LIST
17108: LIST
17109: PUSH
17110: LD_INT 2
17112: NEG
17113: PUSH
17114: LD_INT 3
17116: NEG
17117: PUSH
17118: EMPTY
17119: LIST
17120: LIST
17121: PUSH
17122: LD_INT 1
17124: NEG
17125: PUSH
17126: LD_INT 3
17128: NEG
17129: PUSH
17130: EMPTY
17131: LIST
17132: LIST
17133: PUSH
17134: LD_INT 0
17136: PUSH
17137: LD_INT 3
17139: NEG
17140: PUSH
17141: EMPTY
17142: LIST
17143: LIST
17144: PUSH
17145: LD_INT 1
17147: PUSH
17148: LD_INT 2
17150: NEG
17151: PUSH
17152: EMPTY
17153: LIST
17154: LIST
17155: PUSH
17156: LD_INT 3
17158: PUSH
17159: LD_INT 2
17161: PUSH
17162: EMPTY
17163: LIST
17164: LIST
17165: PUSH
17166: LD_INT 3
17168: PUSH
17169: LD_INT 3
17171: PUSH
17172: EMPTY
17173: LIST
17174: LIST
17175: PUSH
17176: LD_INT 2
17178: PUSH
17179: LD_INT 3
17181: PUSH
17182: EMPTY
17183: LIST
17184: LIST
17185: PUSH
17186: LD_INT 1
17188: PUSH
17189: LD_INT 3
17191: PUSH
17192: EMPTY
17193: LIST
17194: LIST
17195: PUSH
17196: LD_INT 0
17198: PUSH
17199: LD_INT 3
17201: PUSH
17202: EMPTY
17203: LIST
17204: LIST
17205: PUSH
17206: LD_INT 1
17208: NEG
17209: PUSH
17210: LD_INT 2
17212: PUSH
17213: EMPTY
17214: LIST
17215: LIST
17216: PUSH
17217: LD_INT 3
17219: NEG
17220: PUSH
17221: LD_INT 2
17223: NEG
17224: PUSH
17225: EMPTY
17226: LIST
17227: LIST
17228: PUSH
17229: LD_INT 3
17231: NEG
17232: PUSH
17233: LD_INT 3
17235: NEG
17236: PUSH
17237: EMPTY
17238: LIST
17239: LIST
17240: PUSH
17241: EMPTY
17242: LIST
17243: LIST
17244: LIST
17245: LIST
17246: LIST
17247: LIST
17248: LIST
17249: LIST
17250: LIST
17251: LIST
17252: LIST
17253: LIST
17254: LIST
17255: LIST
17256: LIST
17257: LIST
17258: LIST
17259: LIST
17260: LIST
17261: LIST
17262: LIST
17263: LIST
17264: LIST
17265: LIST
17266: LIST
17267: LIST
17268: LIST
17269: LIST
17270: LIST
17271: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17272: LD_ADDR_VAR 0 46
17276: PUSH
17277: LD_INT 0
17279: PUSH
17280: LD_INT 0
17282: PUSH
17283: EMPTY
17284: LIST
17285: LIST
17286: PUSH
17287: LD_INT 0
17289: PUSH
17290: LD_INT 1
17292: NEG
17293: PUSH
17294: EMPTY
17295: LIST
17296: LIST
17297: PUSH
17298: LD_INT 1
17300: PUSH
17301: LD_INT 0
17303: PUSH
17304: EMPTY
17305: LIST
17306: LIST
17307: PUSH
17308: LD_INT 1
17310: PUSH
17311: LD_INT 1
17313: PUSH
17314: EMPTY
17315: LIST
17316: LIST
17317: PUSH
17318: LD_INT 0
17320: PUSH
17321: LD_INT 1
17323: PUSH
17324: EMPTY
17325: LIST
17326: LIST
17327: PUSH
17328: LD_INT 1
17330: NEG
17331: PUSH
17332: LD_INT 0
17334: PUSH
17335: EMPTY
17336: LIST
17337: LIST
17338: PUSH
17339: LD_INT 1
17341: NEG
17342: PUSH
17343: LD_INT 1
17345: NEG
17346: PUSH
17347: EMPTY
17348: LIST
17349: LIST
17350: PUSH
17351: LD_INT 1
17353: NEG
17354: PUSH
17355: LD_INT 2
17357: NEG
17358: PUSH
17359: EMPTY
17360: LIST
17361: LIST
17362: PUSH
17363: LD_INT 0
17365: PUSH
17366: LD_INT 2
17368: NEG
17369: PUSH
17370: EMPTY
17371: LIST
17372: LIST
17373: PUSH
17374: LD_INT 1
17376: PUSH
17377: LD_INT 1
17379: NEG
17380: PUSH
17381: EMPTY
17382: LIST
17383: LIST
17384: PUSH
17385: LD_INT 2
17387: PUSH
17388: LD_INT 0
17390: PUSH
17391: EMPTY
17392: LIST
17393: LIST
17394: PUSH
17395: LD_INT 2
17397: PUSH
17398: LD_INT 1
17400: PUSH
17401: EMPTY
17402: LIST
17403: LIST
17404: PUSH
17405: LD_INT 1
17407: PUSH
17408: LD_INT 2
17410: PUSH
17411: EMPTY
17412: LIST
17413: LIST
17414: PUSH
17415: LD_INT 0
17417: PUSH
17418: LD_INT 2
17420: PUSH
17421: EMPTY
17422: LIST
17423: LIST
17424: PUSH
17425: LD_INT 1
17427: NEG
17428: PUSH
17429: LD_INT 1
17431: PUSH
17432: EMPTY
17433: LIST
17434: LIST
17435: PUSH
17436: LD_INT 2
17438: NEG
17439: PUSH
17440: LD_INT 0
17442: PUSH
17443: EMPTY
17444: LIST
17445: LIST
17446: PUSH
17447: LD_INT 2
17449: NEG
17450: PUSH
17451: LD_INT 1
17453: NEG
17454: PUSH
17455: EMPTY
17456: LIST
17457: LIST
17458: PUSH
17459: LD_INT 1
17461: NEG
17462: PUSH
17463: LD_INT 3
17465: NEG
17466: PUSH
17467: EMPTY
17468: LIST
17469: LIST
17470: PUSH
17471: LD_INT 0
17473: PUSH
17474: LD_INT 3
17476: NEG
17477: PUSH
17478: EMPTY
17479: LIST
17480: LIST
17481: PUSH
17482: LD_INT 1
17484: PUSH
17485: LD_INT 2
17487: NEG
17488: PUSH
17489: EMPTY
17490: LIST
17491: LIST
17492: PUSH
17493: LD_INT 2
17495: PUSH
17496: LD_INT 1
17498: NEG
17499: PUSH
17500: EMPTY
17501: LIST
17502: LIST
17503: PUSH
17504: LD_INT 3
17506: PUSH
17507: LD_INT 0
17509: PUSH
17510: EMPTY
17511: LIST
17512: LIST
17513: PUSH
17514: LD_INT 3
17516: PUSH
17517: LD_INT 1
17519: PUSH
17520: EMPTY
17521: LIST
17522: LIST
17523: PUSH
17524: LD_INT 1
17526: PUSH
17527: LD_INT 3
17529: PUSH
17530: EMPTY
17531: LIST
17532: LIST
17533: PUSH
17534: LD_INT 0
17536: PUSH
17537: LD_INT 3
17539: PUSH
17540: EMPTY
17541: LIST
17542: LIST
17543: PUSH
17544: LD_INT 1
17546: NEG
17547: PUSH
17548: LD_INT 2
17550: PUSH
17551: EMPTY
17552: LIST
17553: LIST
17554: PUSH
17555: LD_INT 2
17557: NEG
17558: PUSH
17559: LD_INT 1
17561: PUSH
17562: EMPTY
17563: LIST
17564: LIST
17565: PUSH
17566: LD_INT 3
17568: NEG
17569: PUSH
17570: LD_INT 0
17572: PUSH
17573: EMPTY
17574: LIST
17575: LIST
17576: PUSH
17577: LD_INT 3
17579: NEG
17580: PUSH
17581: LD_INT 1
17583: NEG
17584: PUSH
17585: EMPTY
17586: LIST
17587: LIST
17588: PUSH
17589: EMPTY
17590: LIST
17591: LIST
17592: LIST
17593: LIST
17594: LIST
17595: LIST
17596: LIST
17597: LIST
17598: LIST
17599: LIST
17600: LIST
17601: LIST
17602: LIST
17603: LIST
17604: LIST
17605: LIST
17606: LIST
17607: LIST
17608: LIST
17609: LIST
17610: LIST
17611: LIST
17612: LIST
17613: LIST
17614: LIST
17615: LIST
17616: LIST
17617: LIST
17618: LIST
17619: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17620: LD_ADDR_VAR 0 47
17624: PUSH
17625: LD_INT 0
17627: PUSH
17628: LD_INT 0
17630: PUSH
17631: EMPTY
17632: LIST
17633: LIST
17634: PUSH
17635: LD_INT 0
17637: PUSH
17638: LD_INT 1
17640: NEG
17641: PUSH
17642: EMPTY
17643: LIST
17644: LIST
17645: PUSH
17646: LD_INT 1
17648: PUSH
17649: LD_INT 0
17651: PUSH
17652: EMPTY
17653: LIST
17654: LIST
17655: PUSH
17656: LD_INT 1
17658: PUSH
17659: LD_INT 1
17661: PUSH
17662: EMPTY
17663: LIST
17664: LIST
17665: PUSH
17666: LD_INT 0
17668: PUSH
17669: LD_INT 1
17671: PUSH
17672: EMPTY
17673: LIST
17674: LIST
17675: PUSH
17676: LD_INT 1
17678: NEG
17679: PUSH
17680: LD_INT 0
17682: PUSH
17683: EMPTY
17684: LIST
17685: LIST
17686: PUSH
17687: LD_INT 1
17689: NEG
17690: PUSH
17691: LD_INT 1
17693: NEG
17694: PUSH
17695: EMPTY
17696: LIST
17697: LIST
17698: PUSH
17699: LD_INT 1
17701: NEG
17702: PUSH
17703: LD_INT 2
17705: NEG
17706: PUSH
17707: EMPTY
17708: LIST
17709: LIST
17710: PUSH
17711: LD_INT 0
17713: PUSH
17714: LD_INT 2
17716: NEG
17717: PUSH
17718: EMPTY
17719: LIST
17720: LIST
17721: PUSH
17722: LD_INT 1
17724: PUSH
17725: LD_INT 1
17727: NEG
17728: PUSH
17729: EMPTY
17730: LIST
17731: LIST
17732: PUSH
17733: LD_INT 2
17735: NEG
17736: PUSH
17737: LD_INT 1
17739: NEG
17740: PUSH
17741: EMPTY
17742: LIST
17743: LIST
17744: PUSH
17745: LD_INT 2
17747: NEG
17748: PUSH
17749: LD_INT 2
17751: NEG
17752: PUSH
17753: EMPTY
17754: LIST
17755: LIST
17756: PUSH
17757: EMPTY
17758: LIST
17759: LIST
17760: LIST
17761: LIST
17762: LIST
17763: LIST
17764: LIST
17765: LIST
17766: LIST
17767: LIST
17768: LIST
17769: LIST
17770: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17771: LD_ADDR_VAR 0 48
17775: PUSH
17776: LD_INT 0
17778: PUSH
17779: LD_INT 0
17781: PUSH
17782: EMPTY
17783: LIST
17784: LIST
17785: PUSH
17786: LD_INT 0
17788: PUSH
17789: LD_INT 1
17791: NEG
17792: PUSH
17793: EMPTY
17794: LIST
17795: LIST
17796: PUSH
17797: LD_INT 1
17799: PUSH
17800: LD_INT 0
17802: PUSH
17803: EMPTY
17804: LIST
17805: LIST
17806: PUSH
17807: LD_INT 1
17809: PUSH
17810: LD_INT 1
17812: PUSH
17813: EMPTY
17814: LIST
17815: LIST
17816: PUSH
17817: LD_INT 0
17819: PUSH
17820: LD_INT 1
17822: PUSH
17823: EMPTY
17824: LIST
17825: LIST
17826: PUSH
17827: LD_INT 1
17829: NEG
17830: PUSH
17831: LD_INT 0
17833: PUSH
17834: EMPTY
17835: LIST
17836: LIST
17837: PUSH
17838: LD_INT 1
17840: NEG
17841: PUSH
17842: LD_INT 1
17844: NEG
17845: PUSH
17846: EMPTY
17847: LIST
17848: LIST
17849: PUSH
17850: LD_INT 1
17852: NEG
17853: PUSH
17854: LD_INT 2
17856: NEG
17857: PUSH
17858: EMPTY
17859: LIST
17860: LIST
17861: PUSH
17862: LD_INT 0
17864: PUSH
17865: LD_INT 2
17867: NEG
17868: PUSH
17869: EMPTY
17870: LIST
17871: LIST
17872: PUSH
17873: LD_INT 1
17875: PUSH
17876: LD_INT 1
17878: NEG
17879: PUSH
17880: EMPTY
17881: LIST
17882: LIST
17883: PUSH
17884: LD_INT 2
17886: PUSH
17887: LD_INT 0
17889: PUSH
17890: EMPTY
17891: LIST
17892: LIST
17893: PUSH
17894: LD_INT 2
17896: PUSH
17897: LD_INT 1
17899: PUSH
17900: EMPTY
17901: LIST
17902: LIST
17903: PUSH
17904: EMPTY
17905: LIST
17906: LIST
17907: LIST
17908: LIST
17909: LIST
17910: LIST
17911: LIST
17912: LIST
17913: LIST
17914: LIST
17915: LIST
17916: LIST
17917: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17918: LD_ADDR_VAR 0 49
17922: PUSH
17923: LD_INT 0
17925: PUSH
17926: LD_INT 0
17928: PUSH
17929: EMPTY
17930: LIST
17931: LIST
17932: PUSH
17933: LD_INT 0
17935: PUSH
17936: LD_INT 1
17938: NEG
17939: PUSH
17940: EMPTY
17941: LIST
17942: LIST
17943: PUSH
17944: LD_INT 1
17946: PUSH
17947: LD_INT 0
17949: PUSH
17950: EMPTY
17951: LIST
17952: LIST
17953: PUSH
17954: LD_INT 1
17956: PUSH
17957: LD_INT 1
17959: PUSH
17960: EMPTY
17961: LIST
17962: LIST
17963: PUSH
17964: LD_INT 0
17966: PUSH
17967: LD_INT 1
17969: PUSH
17970: EMPTY
17971: LIST
17972: LIST
17973: PUSH
17974: LD_INT 1
17976: NEG
17977: PUSH
17978: LD_INT 0
17980: PUSH
17981: EMPTY
17982: LIST
17983: LIST
17984: PUSH
17985: LD_INT 1
17987: NEG
17988: PUSH
17989: LD_INT 1
17991: NEG
17992: PUSH
17993: EMPTY
17994: LIST
17995: LIST
17996: PUSH
17997: LD_INT 1
17999: PUSH
18000: LD_INT 1
18002: NEG
18003: PUSH
18004: EMPTY
18005: LIST
18006: LIST
18007: PUSH
18008: LD_INT 2
18010: PUSH
18011: LD_INT 0
18013: PUSH
18014: EMPTY
18015: LIST
18016: LIST
18017: PUSH
18018: LD_INT 2
18020: PUSH
18021: LD_INT 1
18023: PUSH
18024: EMPTY
18025: LIST
18026: LIST
18027: PUSH
18028: LD_INT 2
18030: PUSH
18031: LD_INT 2
18033: PUSH
18034: EMPTY
18035: LIST
18036: LIST
18037: PUSH
18038: LD_INT 1
18040: PUSH
18041: LD_INT 2
18043: PUSH
18044: EMPTY
18045: LIST
18046: LIST
18047: PUSH
18048: EMPTY
18049: LIST
18050: LIST
18051: LIST
18052: LIST
18053: LIST
18054: LIST
18055: LIST
18056: LIST
18057: LIST
18058: LIST
18059: LIST
18060: LIST
18061: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18062: LD_ADDR_VAR 0 50
18066: PUSH
18067: LD_INT 0
18069: PUSH
18070: LD_INT 0
18072: PUSH
18073: EMPTY
18074: LIST
18075: LIST
18076: PUSH
18077: LD_INT 0
18079: PUSH
18080: LD_INT 1
18082: NEG
18083: PUSH
18084: EMPTY
18085: LIST
18086: LIST
18087: PUSH
18088: LD_INT 1
18090: PUSH
18091: LD_INT 0
18093: PUSH
18094: EMPTY
18095: LIST
18096: LIST
18097: PUSH
18098: LD_INT 1
18100: PUSH
18101: LD_INT 1
18103: PUSH
18104: EMPTY
18105: LIST
18106: LIST
18107: PUSH
18108: LD_INT 0
18110: PUSH
18111: LD_INT 1
18113: PUSH
18114: EMPTY
18115: LIST
18116: LIST
18117: PUSH
18118: LD_INT 1
18120: NEG
18121: PUSH
18122: LD_INT 0
18124: PUSH
18125: EMPTY
18126: LIST
18127: LIST
18128: PUSH
18129: LD_INT 1
18131: NEG
18132: PUSH
18133: LD_INT 1
18135: NEG
18136: PUSH
18137: EMPTY
18138: LIST
18139: LIST
18140: PUSH
18141: LD_INT 2
18143: PUSH
18144: LD_INT 1
18146: PUSH
18147: EMPTY
18148: LIST
18149: LIST
18150: PUSH
18151: LD_INT 2
18153: PUSH
18154: LD_INT 2
18156: PUSH
18157: EMPTY
18158: LIST
18159: LIST
18160: PUSH
18161: LD_INT 1
18163: PUSH
18164: LD_INT 2
18166: PUSH
18167: EMPTY
18168: LIST
18169: LIST
18170: PUSH
18171: LD_INT 0
18173: PUSH
18174: LD_INT 2
18176: PUSH
18177: EMPTY
18178: LIST
18179: LIST
18180: PUSH
18181: LD_INT 1
18183: NEG
18184: PUSH
18185: LD_INT 1
18187: PUSH
18188: EMPTY
18189: LIST
18190: LIST
18191: PUSH
18192: EMPTY
18193: LIST
18194: LIST
18195: LIST
18196: LIST
18197: LIST
18198: LIST
18199: LIST
18200: LIST
18201: LIST
18202: LIST
18203: LIST
18204: LIST
18205: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18206: LD_ADDR_VAR 0 51
18210: PUSH
18211: LD_INT 0
18213: PUSH
18214: LD_INT 0
18216: PUSH
18217: EMPTY
18218: LIST
18219: LIST
18220: PUSH
18221: LD_INT 0
18223: PUSH
18224: LD_INT 1
18226: NEG
18227: PUSH
18228: EMPTY
18229: LIST
18230: LIST
18231: PUSH
18232: LD_INT 1
18234: PUSH
18235: LD_INT 0
18237: PUSH
18238: EMPTY
18239: LIST
18240: LIST
18241: PUSH
18242: LD_INT 1
18244: PUSH
18245: LD_INT 1
18247: PUSH
18248: EMPTY
18249: LIST
18250: LIST
18251: PUSH
18252: LD_INT 0
18254: PUSH
18255: LD_INT 1
18257: PUSH
18258: EMPTY
18259: LIST
18260: LIST
18261: PUSH
18262: LD_INT 1
18264: NEG
18265: PUSH
18266: LD_INT 0
18268: PUSH
18269: EMPTY
18270: LIST
18271: LIST
18272: PUSH
18273: LD_INT 1
18275: NEG
18276: PUSH
18277: LD_INT 1
18279: NEG
18280: PUSH
18281: EMPTY
18282: LIST
18283: LIST
18284: PUSH
18285: LD_INT 1
18287: PUSH
18288: LD_INT 2
18290: PUSH
18291: EMPTY
18292: LIST
18293: LIST
18294: PUSH
18295: LD_INT 0
18297: PUSH
18298: LD_INT 2
18300: PUSH
18301: EMPTY
18302: LIST
18303: LIST
18304: PUSH
18305: LD_INT 1
18307: NEG
18308: PUSH
18309: LD_INT 1
18311: PUSH
18312: EMPTY
18313: LIST
18314: LIST
18315: PUSH
18316: LD_INT 2
18318: NEG
18319: PUSH
18320: LD_INT 0
18322: PUSH
18323: EMPTY
18324: LIST
18325: LIST
18326: PUSH
18327: LD_INT 2
18329: NEG
18330: PUSH
18331: LD_INT 1
18333: NEG
18334: PUSH
18335: EMPTY
18336: LIST
18337: LIST
18338: PUSH
18339: EMPTY
18340: LIST
18341: LIST
18342: LIST
18343: LIST
18344: LIST
18345: LIST
18346: LIST
18347: LIST
18348: LIST
18349: LIST
18350: LIST
18351: LIST
18352: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18353: LD_ADDR_VAR 0 52
18357: PUSH
18358: LD_INT 0
18360: PUSH
18361: LD_INT 0
18363: PUSH
18364: EMPTY
18365: LIST
18366: LIST
18367: PUSH
18368: LD_INT 0
18370: PUSH
18371: LD_INT 1
18373: NEG
18374: PUSH
18375: EMPTY
18376: LIST
18377: LIST
18378: PUSH
18379: LD_INT 1
18381: PUSH
18382: LD_INT 0
18384: PUSH
18385: EMPTY
18386: LIST
18387: LIST
18388: PUSH
18389: LD_INT 1
18391: PUSH
18392: LD_INT 1
18394: PUSH
18395: EMPTY
18396: LIST
18397: LIST
18398: PUSH
18399: LD_INT 0
18401: PUSH
18402: LD_INT 1
18404: PUSH
18405: EMPTY
18406: LIST
18407: LIST
18408: PUSH
18409: LD_INT 1
18411: NEG
18412: PUSH
18413: LD_INT 0
18415: PUSH
18416: EMPTY
18417: LIST
18418: LIST
18419: PUSH
18420: LD_INT 1
18422: NEG
18423: PUSH
18424: LD_INT 1
18426: NEG
18427: PUSH
18428: EMPTY
18429: LIST
18430: LIST
18431: PUSH
18432: LD_INT 1
18434: NEG
18435: PUSH
18436: LD_INT 2
18438: NEG
18439: PUSH
18440: EMPTY
18441: LIST
18442: LIST
18443: PUSH
18444: LD_INT 1
18446: NEG
18447: PUSH
18448: LD_INT 1
18450: PUSH
18451: EMPTY
18452: LIST
18453: LIST
18454: PUSH
18455: LD_INT 2
18457: NEG
18458: PUSH
18459: LD_INT 0
18461: PUSH
18462: EMPTY
18463: LIST
18464: LIST
18465: PUSH
18466: LD_INT 2
18468: NEG
18469: PUSH
18470: LD_INT 1
18472: NEG
18473: PUSH
18474: EMPTY
18475: LIST
18476: LIST
18477: PUSH
18478: LD_INT 2
18480: NEG
18481: PUSH
18482: LD_INT 2
18484: NEG
18485: PUSH
18486: EMPTY
18487: LIST
18488: LIST
18489: PUSH
18490: EMPTY
18491: LIST
18492: LIST
18493: LIST
18494: LIST
18495: LIST
18496: LIST
18497: LIST
18498: LIST
18499: LIST
18500: LIST
18501: LIST
18502: LIST
18503: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18504: LD_ADDR_VAR 0 53
18508: PUSH
18509: LD_INT 0
18511: PUSH
18512: LD_INT 0
18514: PUSH
18515: EMPTY
18516: LIST
18517: LIST
18518: PUSH
18519: LD_INT 0
18521: PUSH
18522: LD_INT 1
18524: NEG
18525: PUSH
18526: EMPTY
18527: LIST
18528: LIST
18529: PUSH
18530: LD_INT 1
18532: PUSH
18533: LD_INT 0
18535: PUSH
18536: EMPTY
18537: LIST
18538: LIST
18539: PUSH
18540: LD_INT 1
18542: PUSH
18543: LD_INT 1
18545: PUSH
18546: EMPTY
18547: LIST
18548: LIST
18549: PUSH
18550: LD_INT 0
18552: PUSH
18553: LD_INT 1
18555: PUSH
18556: EMPTY
18557: LIST
18558: LIST
18559: PUSH
18560: LD_INT 1
18562: NEG
18563: PUSH
18564: LD_INT 0
18566: PUSH
18567: EMPTY
18568: LIST
18569: LIST
18570: PUSH
18571: LD_INT 1
18573: NEG
18574: PUSH
18575: LD_INT 1
18577: NEG
18578: PUSH
18579: EMPTY
18580: LIST
18581: LIST
18582: PUSH
18583: LD_INT 1
18585: NEG
18586: PUSH
18587: LD_INT 2
18589: NEG
18590: PUSH
18591: EMPTY
18592: LIST
18593: LIST
18594: PUSH
18595: LD_INT 0
18597: PUSH
18598: LD_INT 2
18600: NEG
18601: PUSH
18602: EMPTY
18603: LIST
18604: LIST
18605: PUSH
18606: LD_INT 1
18608: PUSH
18609: LD_INT 1
18611: NEG
18612: PUSH
18613: EMPTY
18614: LIST
18615: LIST
18616: PUSH
18617: LD_INT 2
18619: PUSH
18620: LD_INT 0
18622: PUSH
18623: EMPTY
18624: LIST
18625: LIST
18626: PUSH
18627: LD_INT 2
18629: PUSH
18630: LD_INT 1
18632: PUSH
18633: EMPTY
18634: LIST
18635: LIST
18636: PUSH
18637: LD_INT 2
18639: PUSH
18640: LD_INT 2
18642: PUSH
18643: EMPTY
18644: LIST
18645: LIST
18646: PUSH
18647: LD_INT 1
18649: PUSH
18650: LD_INT 2
18652: PUSH
18653: EMPTY
18654: LIST
18655: LIST
18656: PUSH
18657: LD_INT 0
18659: PUSH
18660: LD_INT 2
18662: PUSH
18663: EMPTY
18664: LIST
18665: LIST
18666: PUSH
18667: LD_INT 1
18669: NEG
18670: PUSH
18671: LD_INT 1
18673: PUSH
18674: EMPTY
18675: LIST
18676: LIST
18677: PUSH
18678: LD_INT 2
18680: NEG
18681: PUSH
18682: LD_INT 0
18684: PUSH
18685: EMPTY
18686: LIST
18687: LIST
18688: PUSH
18689: LD_INT 2
18691: NEG
18692: PUSH
18693: LD_INT 1
18695: NEG
18696: PUSH
18697: EMPTY
18698: LIST
18699: LIST
18700: PUSH
18701: LD_INT 2
18703: NEG
18704: PUSH
18705: LD_INT 2
18707: NEG
18708: PUSH
18709: EMPTY
18710: LIST
18711: LIST
18712: PUSH
18713: EMPTY
18714: LIST
18715: LIST
18716: LIST
18717: LIST
18718: LIST
18719: LIST
18720: LIST
18721: LIST
18722: LIST
18723: LIST
18724: LIST
18725: LIST
18726: LIST
18727: LIST
18728: LIST
18729: LIST
18730: LIST
18731: LIST
18732: LIST
18733: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18734: LD_ADDR_VAR 0 54
18738: PUSH
18739: LD_INT 0
18741: PUSH
18742: LD_INT 0
18744: PUSH
18745: EMPTY
18746: LIST
18747: LIST
18748: PUSH
18749: LD_INT 0
18751: PUSH
18752: LD_INT 1
18754: NEG
18755: PUSH
18756: EMPTY
18757: LIST
18758: LIST
18759: PUSH
18760: LD_INT 1
18762: PUSH
18763: LD_INT 0
18765: PUSH
18766: EMPTY
18767: LIST
18768: LIST
18769: PUSH
18770: LD_INT 1
18772: PUSH
18773: LD_INT 1
18775: PUSH
18776: EMPTY
18777: LIST
18778: LIST
18779: PUSH
18780: LD_INT 0
18782: PUSH
18783: LD_INT 1
18785: PUSH
18786: EMPTY
18787: LIST
18788: LIST
18789: PUSH
18790: LD_INT 1
18792: NEG
18793: PUSH
18794: LD_INT 0
18796: PUSH
18797: EMPTY
18798: LIST
18799: LIST
18800: PUSH
18801: LD_INT 1
18803: NEG
18804: PUSH
18805: LD_INT 1
18807: NEG
18808: PUSH
18809: EMPTY
18810: LIST
18811: LIST
18812: PUSH
18813: LD_INT 1
18815: NEG
18816: PUSH
18817: LD_INT 2
18819: NEG
18820: PUSH
18821: EMPTY
18822: LIST
18823: LIST
18824: PUSH
18825: LD_INT 0
18827: PUSH
18828: LD_INT 2
18830: NEG
18831: PUSH
18832: EMPTY
18833: LIST
18834: LIST
18835: PUSH
18836: LD_INT 1
18838: PUSH
18839: LD_INT 1
18841: NEG
18842: PUSH
18843: EMPTY
18844: LIST
18845: LIST
18846: PUSH
18847: LD_INT 2
18849: PUSH
18850: LD_INT 0
18852: PUSH
18853: EMPTY
18854: LIST
18855: LIST
18856: PUSH
18857: LD_INT 2
18859: PUSH
18860: LD_INT 1
18862: PUSH
18863: EMPTY
18864: LIST
18865: LIST
18866: PUSH
18867: LD_INT 2
18869: PUSH
18870: LD_INT 2
18872: PUSH
18873: EMPTY
18874: LIST
18875: LIST
18876: PUSH
18877: LD_INT 1
18879: PUSH
18880: LD_INT 2
18882: PUSH
18883: EMPTY
18884: LIST
18885: LIST
18886: PUSH
18887: LD_INT 0
18889: PUSH
18890: LD_INT 2
18892: PUSH
18893: EMPTY
18894: LIST
18895: LIST
18896: PUSH
18897: LD_INT 1
18899: NEG
18900: PUSH
18901: LD_INT 1
18903: PUSH
18904: EMPTY
18905: LIST
18906: LIST
18907: PUSH
18908: LD_INT 2
18910: NEG
18911: PUSH
18912: LD_INT 0
18914: PUSH
18915: EMPTY
18916: LIST
18917: LIST
18918: PUSH
18919: LD_INT 2
18921: NEG
18922: PUSH
18923: LD_INT 1
18925: NEG
18926: PUSH
18927: EMPTY
18928: LIST
18929: LIST
18930: PUSH
18931: LD_INT 2
18933: NEG
18934: PUSH
18935: LD_INT 2
18937: NEG
18938: PUSH
18939: EMPTY
18940: LIST
18941: LIST
18942: PUSH
18943: EMPTY
18944: LIST
18945: LIST
18946: LIST
18947: LIST
18948: LIST
18949: LIST
18950: LIST
18951: LIST
18952: LIST
18953: LIST
18954: LIST
18955: LIST
18956: LIST
18957: LIST
18958: LIST
18959: LIST
18960: LIST
18961: LIST
18962: LIST
18963: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18964: LD_ADDR_VAR 0 55
18968: PUSH
18969: LD_INT 0
18971: PUSH
18972: LD_INT 0
18974: PUSH
18975: EMPTY
18976: LIST
18977: LIST
18978: PUSH
18979: LD_INT 0
18981: PUSH
18982: LD_INT 1
18984: NEG
18985: PUSH
18986: EMPTY
18987: LIST
18988: LIST
18989: PUSH
18990: LD_INT 1
18992: PUSH
18993: LD_INT 0
18995: PUSH
18996: EMPTY
18997: LIST
18998: LIST
18999: PUSH
19000: LD_INT 1
19002: PUSH
19003: LD_INT 1
19005: PUSH
19006: EMPTY
19007: LIST
19008: LIST
19009: PUSH
19010: LD_INT 0
19012: PUSH
19013: LD_INT 1
19015: PUSH
19016: EMPTY
19017: LIST
19018: LIST
19019: PUSH
19020: LD_INT 1
19022: NEG
19023: PUSH
19024: LD_INT 0
19026: PUSH
19027: EMPTY
19028: LIST
19029: LIST
19030: PUSH
19031: LD_INT 1
19033: NEG
19034: PUSH
19035: LD_INT 1
19037: NEG
19038: PUSH
19039: EMPTY
19040: LIST
19041: LIST
19042: PUSH
19043: LD_INT 1
19045: NEG
19046: PUSH
19047: LD_INT 2
19049: NEG
19050: PUSH
19051: EMPTY
19052: LIST
19053: LIST
19054: PUSH
19055: LD_INT 0
19057: PUSH
19058: LD_INT 2
19060: NEG
19061: PUSH
19062: EMPTY
19063: LIST
19064: LIST
19065: PUSH
19066: LD_INT 1
19068: PUSH
19069: LD_INT 1
19071: NEG
19072: PUSH
19073: EMPTY
19074: LIST
19075: LIST
19076: PUSH
19077: LD_INT 2
19079: PUSH
19080: LD_INT 0
19082: PUSH
19083: EMPTY
19084: LIST
19085: LIST
19086: PUSH
19087: LD_INT 2
19089: PUSH
19090: LD_INT 1
19092: PUSH
19093: EMPTY
19094: LIST
19095: LIST
19096: PUSH
19097: LD_INT 2
19099: PUSH
19100: LD_INT 2
19102: PUSH
19103: EMPTY
19104: LIST
19105: LIST
19106: PUSH
19107: LD_INT 1
19109: PUSH
19110: LD_INT 2
19112: PUSH
19113: EMPTY
19114: LIST
19115: LIST
19116: PUSH
19117: LD_INT 0
19119: PUSH
19120: LD_INT 2
19122: PUSH
19123: EMPTY
19124: LIST
19125: LIST
19126: PUSH
19127: LD_INT 1
19129: NEG
19130: PUSH
19131: LD_INT 1
19133: PUSH
19134: EMPTY
19135: LIST
19136: LIST
19137: PUSH
19138: LD_INT 2
19140: NEG
19141: PUSH
19142: LD_INT 0
19144: PUSH
19145: EMPTY
19146: LIST
19147: LIST
19148: PUSH
19149: LD_INT 2
19151: NEG
19152: PUSH
19153: LD_INT 1
19155: NEG
19156: PUSH
19157: EMPTY
19158: LIST
19159: LIST
19160: PUSH
19161: LD_INT 2
19163: NEG
19164: PUSH
19165: LD_INT 2
19167: NEG
19168: PUSH
19169: EMPTY
19170: LIST
19171: LIST
19172: PUSH
19173: EMPTY
19174: LIST
19175: LIST
19176: LIST
19177: LIST
19178: LIST
19179: LIST
19180: LIST
19181: LIST
19182: LIST
19183: LIST
19184: LIST
19185: LIST
19186: LIST
19187: LIST
19188: LIST
19189: LIST
19190: LIST
19191: LIST
19192: LIST
19193: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19194: LD_ADDR_VAR 0 56
19198: PUSH
19199: LD_INT 0
19201: PUSH
19202: LD_INT 0
19204: PUSH
19205: EMPTY
19206: LIST
19207: LIST
19208: PUSH
19209: LD_INT 0
19211: PUSH
19212: LD_INT 1
19214: NEG
19215: PUSH
19216: EMPTY
19217: LIST
19218: LIST
19219: PUSH
19220: LD_INT 1
19222: PUSH
19223: LD_INT 0
19225: PUSH
19226: EMPTY
19227: LIST
19228: LIST
19229: PUSH
19230: LD_INT 1
19232: PUSH
19233: LD_INT 1
19235: PUSH
19236: EMPTY
19237: LIST
19238: LIST
19239: PUSH
19240: LD_INT 0
19242: PUSH
19243: LD_INT 1
19245: PUSH
19246: EMPTY
19247: LIST
19248: LIST
19249: PUSH
19250: LD_INT 1
19252: NEG
19253: PUSH
19254: LD_INT 0
19256: PUSH
19257: EMPTY
19258: LIST
19259: LIST
19260: PUSH
19261: LD_INT 1
19263: NEG
19264: PUSH
19265: LD_INT 1
19267: NEG
19268: PUSH
19269: EMPTY
19270: LIST
19271: LIST
19272: PUSH
19273: LD_INT 1
19275: NEG
19276: PUSH
19277: LD_INT 2
19279: NEG
19280: PUSH
19281: EMPTY
19282: LIST
19283: LIST
19284: PUSH
19285: LD_INT 0
19287: PUSH
19288: LD_INT 2
19290: NEG
19291: PUSH
19292: EMPTY
19293: LIST
19294: LIST
19295: PUSH
19296: LD_INT 1
19298: PUSH
19299: LD_INT 1
19301: NEG
19302: PUSH
19303: EMPTY
19304: LIST
19305: LIST
19306: PUSH
19307: LD_INT 2
19309: PUSH
19310: LD_INT 0
19312: PUSH
19313: EMPTY
19314: LIST
19315: LIST
19316: PUSH
19317: LD_INT 2
19319: PUSH
19320: LD_INT 1
19322: PUSH
19323: EMPTY
19324: LIST
19325: LIST
19326: PUSH
19327: LD_INT 2
19329: PUSH
19330: LD_INT 2
19332: PUSH
19333: EMPTY
19334: LIST
19335: LIST
19336: PUSH
19337: LD_INT 1
19339: PUSH
19340: LD_INT 2
19342: PUSH
19343: EMPTY
19344: LIST
19345: LIST
19346: PUSH
19347: LD_INT 0
19349: PUSH
19350: LD_INT 2
19352: PUSH
19353: EMPTY
19354: LIST
19355: LIST
19356: PUSH
19357: LD_INT 1
19359: NEG
19360: PUSH
19361: LD_INT 1
19363: PUSH
19364: EMPTY
19365: LIST
19366: LIST
19367: PUSH
19368: LD_INT 2
19370: NEG
19371: PUSH
19372: LD_INT 0
19374: PUSH
19375: EMPTY
19376: LIST
19377: LIST
19378: PUSH
19379: LD_INT 2
19381: NEG
19382: PUSH
19383: LD_INT 1
19385: NEG
19386: PUSH
19387: EMPTY
19388: LIST
19389: LIST
19390: PUSH
19391: LD_INT 2
19393: NEG
19394: PUSH
19395: LD_INT 2
19397: NEG
19398: PUSH
19399: EMPTY
19400: LIST
19401: LIST
19402: PUSH
19403: EMPTY
19404: LIST
19405: LIST
19406: LIST
19407: LIST
19408: LIST
19409: LIST
19410: LIST
19411: LIST
19412: LIST
19413: LIST
19414: LIST
19415: LIST
19416: LIST
19417: LIST
19418: LIST
19419: LIST
19420: LIST
19421: LIST
19422: LIST
19423: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19424: LD_ADDR_VAR 0 57
19428: PUSH
19429: LD_INT 0
19431: PUSH
19432: LD_INT 0
19434: PUSH
19435: EMPTY
19436: LIST
19437: LIST
19438: PUSH
19439: LD_INT 0
19441: PUSH
19442: LD_INT 1
19444: NEG
19445: PUSH
19446: EMPTY
19447: LIST
19448: LIST
19449: PUSH
19450: LD_INT 1
19452: PUSH
19453: LD_INT 0
19455: PUSH
19456: EMPTY
19457: LIST
19458: LIST
19459: PUSH
19460: LD_INT 1
19462: PUSH
19463: LD_INT 1
19465: PUSH
19466: EMPTY
19467: LIST
19468: LIST
19469: PUSH
19470: LD_INT 0
19472: PUSH
19473: LD_INT 1
19475: PUSH
19476: EMPTY
19477: LIST
19478: LIST
19479: PUSH
19480: LD_INT 1
19482: NEG
19483: PUSH
19484: LD_INT 0
19486: PUSH
19487: EMPTY
19488: LIST
19489: LIST
19490: PUSH
19491: LD_INT 1
19493: NEG
19494: PUSH
19495: LD_INT 1
19497: NEG
19498: PUSH
19499: EMPTY
19500: LIST
19501: LIST
19502: PUSH
19503: LD_INT 1
19505: NEG
19506: PUSH
19507: LD_INT 2
19509: NEG
19510: PUSH
19511: EMPTY
19512: LIST
19513: LIST
19514: PUSH
19515: LD_INT 0
19517: PUSH
19518: LD_INT 2
19520: NEG
19521: PUSH
19522: EMPTY
19523: LIST
19524: LIST
19525: PUSH
19526: LD_INT 1
19528: PUSH
19529: LD_INT 1
19531: NEG
19532: PUSH
19533: EMPTY
19534: LIST
19535: LIST
19536: PUSH
19537: LD_INT 2
19539: PUSH
19540: LD_INT 0
19542: PUSH
19543: EMPTY
19544: LIST
19545: LIST
19546: PUSH
19547: LD_INT 2
19549: PUSH
19550: LD_INT 1
19552: PUSH
19553: EMPTY
19554: LIST
19555: LIST
19556: PUSH
19557: LD_INT 2
19559: PUSH
19560: LD_INT 2
19562: PUSH
19563: EMPTY
19564: LIST
19565: LIST
19566: PUSH
19567: LD_INT 1
19569: PUSH
19570: LD_INT 2
19572: PUSH
19573: EMPTY
19574: LIST
19575: LIST
19576: PUSH
19577: LD_INT 0
19579: PUSH
19580: LD_INT 2
19582: PUSH
19583: EMPTY
19584: LIST
19585: LIST
19586: PUSH
19587: LD_INT 1
19589: NEG
19590: PUSH
19591: LD_INT 1
19593: PUSH
19594: EMPTY
19595: LIST
19596: LIST
19597: PUSH
19598: LD_INT 2
19600: NEG
19601: PUSH
19602: LD_INT 0
19604: PUSH
19605: EMPTY
19606: LIST
19607: LIST
19608: PUSH
19609: LD_INT 2
19611: NEG
19612: PUSH
19613: LD_INT 1
19615: NEG
19616: PUSH
19617: EMPTY
19618: LIST
19619: LIST
19620: PUSH
19621: LD_INT 2
19623: NEG
19624: PUSH
19625: LD_INT 2
19627: NEG
19628: PUSH
19629: EMPTY
19630: LIST
19631: LIST
19632: PUSH
19633: EMPTY
19634: LIST
19635: LIST
19636: LIST
19637: LIST
19638: LIST
19639: LIST
19640: LIST
19641: LIST
19642: LIST
19643: LIST
19644: LIST
19645: LIST
19646: LIST
19647: LIST
19648: LIST
19649: LIST
19650: LIST
19651: LIST
19652: LIST
19653: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19654: LD_ADDR_VAR 0 58
19658: PUSH
19659: LD_INT 0
19661: PUSH
19662: LD_INT 0
19664: PUSH
19665: EMPTY
19666: LIST
19667: LIST
19668: PUSH
19669: LD_INT 0
19671: PUSH
19672: LD_INT 1
19674: NEG
19675: PUSH
19676: EMPTY
19677: LIST
19678: LIST
19679: PUSH
19680: LD_INT 1
19682: PUSH
19683: LD_INT 0
19685: PUSH
19686: EMPTY
19687: LIST
19688: LIST
19689: PUSH
19690: LD_INT 1
19692: PUSH
19693: LD_INT 1
19695: PUSH
19696: EMPTY
19697: LIST
19698: LIST
19699: PUSH
19700: LD_INT 0
19702: PUSH
19703: LD_INT 1
19705: PUSH
19706: EMPTY
19707: LIST
19708: LIST
19709: PUSH
19710: LD_INT 1
19712: NEG
19713: PUSH
19714: LD_INT 0
19716: PUSH
19717: EMPTY
19718: LIST
19719: LIST
19720: PUSH
19721: LD_INT 1
19723: NEG
19724: PUSH
19725: LD_INT 1
19727: NEG
19728: PUSH
19729: EMPTY
19730: LIST
19731: LIST
19732: PUSH
19733: LD_INT 1
19735: NEG
19736: PUSH
19737: LD_INT 2
19739: NEG
19740: PUSH
19741: EMPTY
19742: LIST
19743: LIST
19744: PUSH
19745: LD_INT 0
19747: PUSH
19748: LD_INT 2
19750: NEG
19751: PUSH
19752: EMPTY
19753: LIST
19754: LIST
19755: PUSH
19756: LD_INT 1
19758: PUSH
19759: LD_INT 1
19761: NEG
19762: PUSH
19763: EMPTY
19764: LIST
19765: LIST
19766: PUSH
19767: LD_INT 2
19769: PUSH
19770: LD_INT 0
19772: PUSH
19773: EMPTY
19774: LIST
19775: LIST
19776: PUSH
19777: LD_INT 2
19779: PUSH
19780: LD_INT 1
19782: PUSH
19783: EMPTY
19784: LIST
19785: LIST
19786: PUSH
19787: LD_INT 2
19789: PUSH
19790: LD_INT 2
19792: PUSH
19793: EMPTY
19794: LIST
19795: LIST
19796: PUSH
19797: LD_INT 1
19799: PUSH
19800: LD_INT 2
19802: PUSH
19803: EMPTY
19804: LIST
19805: LIST
19806: PUSH
19807: LD_INT 0
19809: PUSH
19810: LD_INT 2
19812: PUSH
19813: EMPTY
19814: LIST
19815: LIST
19816: PUSH
19817: LD_INT 1
19819: NEG
19820: PUSH
19821: LD_INT 1
19823: PUSH
19824: EMPTY
19825: LIST
19826: LIST
19827: PUSH
19828: LD_INT 2
19830: NEG
19831: PUSH
19832: LD_INT 0
19834: PUSH
19835: EMPTY
19836: LIST
19837: LIST
19838: PUSH
19839: LD_INT 2
19841: NEG
19842: PUSH
19843: LD_INT 1
19845: NEG
19846: PUSH
19847: EMPTY
19848: LIST
19849: LIST
19850: PUSH
19851: LD_INT 2
19853: NEG
19854: PUSH
19855: LD_INT 2
19857: NEG
19858: PUSH
19859: EMPTY
19860: LIST
19861: LIST
19862: PUSH
19863: EMPTY
19864: LIST
19865: LIST
19866: LIST
19867: LIST
19868: LIST
19869: LIST
19870: LIST
19871: LIST
19872: LIST
19873: LIST
19874: LIST
19875: LIST
19876: LIST
19877: LIST
19878: LIST
19879: LIST
19880: LIST
19881: LIST
19882: LIST
19883: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19884: LD_ADDR_VAR 0 59
19888: PUSH
19889: LD_INT 0
19891: PUSH
19892: LD_INT 0
19894: PUSH
19895: EMPTY
19896: LIST
19897: LIST
19898: PUSH
19899: LD_INT 0
19901: PUSH
19902: LD_INT 1
19904: NEG
19905: PUSH
19906: EMPTY
19907: LIST
19908: LIST
19909: PUSH
19910: LD_INT 1
19912: PUSH
19913: LD_INT 0
19915: PUSH
19916: EMPTY
19917: LIST
19918: LIST
19919: PUSH
19920: LD_INT 1
19922: PUSH
19923: LD_INT 1
19925: PUSH
19926: EMPTY
19927: LIST
19928: LIST
19929: PUSH
19930: LD_INT 0
19932: PUSH
19933: LD_INT 1
19935: PUSH
19936: EMPTY
19937: LIST
19938: LIST
19939: PUSH
19940: LD_INT 1
19942: NEG
19943: PUSH
19944: LD_INT 0
19946: PUSH
19947: EMPTY
19948: LIST
19949: LIST
19950: PUSH
19951: LD_INT 1
19953: NEG
19954: PUSH
19955: LD_INT 1
19957: NEG
19958: PUSH
19959: EMPTY
19960: LIST
19961: LIST
19962: PUSH
19963: EMPTY
19964: LIST
19965: LIST
19966: LIST
19967: LIST
19968: LIST
19969: LIST
19970: LIST
19971: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19972: LD_ADDR_VAR 0 60
19976: PUSH
19977: LD_INT 0
19979: PUSH
19980: LD_INT 0
19982: PUSH
19983: EMPTY
19984: LIST
19985: LIST
19986: PUSH
19987: LD_INT 0
19989: PUSH
19990: LD_INT 1
19992: NEG
19993: PUSH
19994: EMPTY
19995: LIST
19996: LIST
19997: PUSH
19998: LD_INT 1
20000: PUSH
20001: LD_INT 0
20003: PUSH
20004: EMPTY
20005: LIST
20006: LIST
20007: PUSH
20008: LD_INT 1
20010: PUSH
20011: LD_INT 1
20013: PUSH
20014: EMPTY
20015: LIST
20016: LIST
20017: PUSH
20018: LD_INT 0
20020: PUSH
20021: LD_INT 1
20023: PUSH
20024: EMPTY
20025: LIST
20026: LIST
20027: PUSH
20028: LD_INT 1
20030: NEG
20031: PUSH
20032: LD_INT 0
20034: PUSH
20035: EMPTY
20036: LIST
20037: LIST
20038: PUSH
20039: LD_INT 1
20041: NEG
20042: PUSH
20043: LD_INT 1
20045: NEG
20046: PUSH
20047: EMPTY
20048: LIST
20049: LIST
20050: PUSH
20051: EMPTY
20052: LIST
20053: LIST
20054: LIST
20055: LIST
20056: LIST
20057: LIST
20058: LIST
20059: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20060: LD_ADDR_VAR 0 61
20064: PUSH
20065: LD_INT 0
20067: PUSH
20068: LD_INT 0
20070: PUSH
20071: EMPTY
20072: LIST
20073: LIST
20074: PUSH
20075: LD_INT 0
20077: PUSH
20078: LD_INT 1
20080: NEG
20081: PUSH
20082: EMPTY
20083: LIST
20084: LIST
20085: PUSH
20086: LD_INT 1
20088: PUSH
20089: LD_INT 0
20091: PUSH
20092: EMPTY
20093: LIST
20094: LIST
20095: PUSH
20096: LD_INT 1
20098: PUSH
20099: LD_INT 1
20101: PUSH
20102: EMPTY
20103: LIST
20104: LIST
20105: PUSH
20106: LD_INT 0
20108: PUSH
20109: LD_INT 1
20111: PUSH
20112: EMPTY
20113: LIST
20114: LIST
20115: PUSH
20116: LD_INT 1
20118: NEG
20119: PUSH
20120: LD_INT 0
20122: PUSH
20123: EMPTY
20124: LIST
20125: LIST
20126: PUSH
20127: LD_INT 1
20129: NEG
20130: PUSH
20131: LD_INT 1
20133: NEG
20134: PUSH
20135: EMPTY
20136: LIST
20137: LIST
20138: PUSH
20139: EMPTY
20140: LIST
20141: LIST
20142: LIST
20143: LIST
20144: LIST
20145: LIST
20146: LIST
20147: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20148: LD_ADDR_VAR 0 62
20152: PUSH
20153: LD_INT 0
20155: PUSH
20156: LD_INT 0
20158: PUSH
20159: EMPTY
20160: LIST
20161: LIST
20162: PUSH
20163: LD_INT 0
20165: PUSH
20166: LD_INT 1
20168: NEG
20169: PUSH
20170: EMPTY
20171: LIST
20172: LIST
20173: PUSH
20174: LD_INT 1
20176: PUSH
20177: LD_INT 0
20179: PUSH
20180: EMPTY
20181: LIST
20182: LIST
20183: PUSH
20184: LD_INT 1
20186: PUSH
20187: LD_INT 1
20189: PUSH
20190: EMPTY
20191: LIST
20192: LIST
20193: PUSH
20194: LD_INT 0
20196: PUSH
20197: LD_INT 1
20199: PUSH
20200: EMPTY
20201: LIST
20202: LIST
20203: PUSH
20204: LD_INT 1
20206: NEG
20207: PUSH
20208: LD_INT 0
20210: PUSH
20211: EMPTY
20212: LIST
20213: LIST
20214: PUSH
20215: LD_INT 1
20217: NEG
20218: PUSH
20219: LD_INT 1
20221: NEG
20222: PUSH
20223: EMPTY
20224: LIST
20225: LIST
20226: PUSH
20227: EMPTY
20228: LIST
20229: LIST
20230: LIST
20231: LIST
20232: LIST
20233: LIST
20234: LIST
20235: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20236: LD_ADDR_VAR 0 63
20240: PUSH
20241: LD_INT 0
20243: PUSH
20244: LD_INT 0
20246: PUSH
20247: EMPTY
20248: LIST
20249: LIST
20250: PUSH
20251: LD_INT 0
20253: PUSH
20254: LD_INT 1
20256: NEG
20257: PUSH
20258: EMPTY
20259: LIST
20260: LIST
20261: PUSH
20262: LD_INT 1
20264: PUSH
20265: LD_INT 0
20267: PUSH
20268: EMPTY
20269: LIST
20270: LIST
20271: PUSH
20272: LD_INT 1
20274: PUSH
20275: LD_INT 1
20277: PUSH
20278: EMPTY
20279: LIST
20280: LIST
20281: PUSH
20282: LD_INT 0
20284: PUSH
20285: LD_INT 1
20287: PUSH
20288: EMPTY
20289: LIST
20290: LIST
20291: PUSH
20292: LD_INT 1
20294: NEG
20295: PUSH
20296: LD_INT 0
20298: PUSH
20299: EMPTY
20300: LIST
20301: LIST
20302: PUSH
20303: LD_INT 1
20305: NEG
20306: PUSH
20307: LD_INT 1
20309: NEG
20310: PUSH
20311: EMPTY
20312: LIST
20313: LIST
20314: PUSH
20315: EMPTY
20316: LIST
20317: LIST
20318: LIST
20319: LIST
20320: LIST
20321: LIST
20322: LIST
20323: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20324: LD_ADDR_VAR 0 64
20328: PUSH
20329: LD_INT 0
20331: PUSH
20332: LD_INT 0
20334: PUSH
20335: EMPTY
20336: LIST
20337: LIST
20338: PUSH
20339: LD_INT 0
20341: PUSH
20342: LD_INT 1
20344: NEG
20345: PUSH
20346: EMPTY
20347: LIST
20348: LIST
20349: PUSH
20350: LD_INT 1
20352: PUSH
20353: LD_INT 0
20355: PUSH
20356: EMPTY
20357: LIST
20358: LIST
20359: PUSH
20360: LD_INT 1
20362: PUSH
20363: LD_INT 1
20365: PUSH
20366: EMPTY
20367: LIST
20368: LIST
20369: PUSH
20370: LD_INT 0
20372: PUSH
20373: LD_INT 1
20375: PUSH
20376: EMPTY
20377: LIST
20378: LIST
20379: PUSH
20380: LD_INT 1
20382: NEG
20383: PUSH
20384: LD_INT 0
20386: PUSH
20387: EMPTY
20388: LIST
20389: LIST
20390: PUSH
20391: LD_INT 1
20393: NEG
20394: PUSH
20395: LD_INT 1
20397: NEG
20398: PUSH
20399: EMPTY
20400: LIST
20401: LIST
20402: PUSH
20403: EMPTY
20404: LIST
20405: LIST
20406: LIST
20407: LIST
20408: LIST
20409: LIST
20410: LIST
20411: ST_TO_ADDR
// end ; 1 :
20412: GO 26309
20414: LD_INT 1
20416: DOUBLE
20417: EQUAL
20418: IFTRUE 20422
20420: GO 23045
20422: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20423: LD_ADDR_VAR 0 11
20427: PUSH
20428: LD_INT 1
20430: NEG
20431: PUSH
20432: LD_INT 3
20434: NEG
20435: PUSH
20436: EMPTY
20437: LIST
20438: LIST
20439: PUSH
20440: LD_INT 0
20442: PUSH
20443: LD_INT 3
20445: NEG
20446: PUSH
20447: EMPTY
20448: LIST
20449: LIST
20450: PUSH
20451: LD_INT 1
20453: PUSH
20454: LD_INT 2
20456: NEG
20457: PUSH
20458: EMPTY
20459: LIST
20460: LIST
20461: PUSH
20462: EMPTY
20463: LIST
20464: LIST
20465: LIST
20466: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20467: LD_ADDR_VAR 0 12
20471: PUSH
20472: LD_INT 2
20474: PUSH
20475: LD_INT 1
20477: NEG
20478: PUSH
20479: EMPTY
20480: LIST
20481: LIST
20482: PUSH
20483: LD_INT 3
20485: PUSH
20486: LD_INT 0
20488: PUSH
20489: EMPTY
20490: LIST
20491: LIST
20492: PUSH
20493: LD_INT 3
20495: PUSH
20496: LD_INT 1
20498: PUSH
20499: EMPTY
20500: LIST
20501: LIST
20502: PUSH
20503: EMPTY
20504: LIST
20505: LIST
20506: LIST
20507: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20508: LD_ADDR_VAR 0 13
20512: PUSH
20513: LD_INT 3
20515: PUSH
20516: LD_INT 2
20518: PUSH
20519: EMPTY
20520: LIST
20521: LIST
20522: PUSH
20523: LD_INT 3
20525: PUSH
20526: LD_INT 3
20528: PUSH
20529: EMPTY
20530: LIST
20531: LIST
20532: PUSH
20533: LD_INT 2
20535: PUSH
20536: LD_INT 3
20538: PUSH
20539: EMPTY
20540: LIST
20541: LIST
20542: PUSH
20543: EMPTY
20544: LIST
20545: LIST
20546: LIST
20547: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20548: LD_ADDR_VAR 0 14
20552: PUSH
20553: LD_INT 1
20555: PUSH
20556: LD_INT 3
20558: PUSH
20559: EMPTY
20560: LIST
20561: LIST
20562: PUSH
20563: LD_INT 0
20565: PUSH
20566: LD_INT 3
20568: PUSH
20569: EMPTY
20570: LIST
20571: LIST
20572: PUSH
20573: LD_INT 1
20575: NEG
20576: PUSH
20577: LD_INT 2
20579: PUSH
20580: EMPTY
20581: LIST
20582: LIST
20583: PUSH
20584: EMPTY
20585: LIST
20586: LIST
20587: LIST
20588: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20589: LD_ADDR_VAR 0 15
20593: PUSH
20594: LD_INT 2
20596: NEG
20597: PUSH
20598: LD_INT 1
20600: PUSH
20601: EMPTY
20602: LIST
20603: LIST
20604: PUSH
20605: LD_INT 3
20607: NEG
20608: PUSH
20609: LD_INT 0
20611: PUSH
20612: EMPTY
20613: LIST
20614: LIST
20615: PUSH
20616: LD_INT 3
20618: NEG
20619: PUSH
20620: LD_INT 1
20622: NEG
20623: PUSH
20624: EMPTY
20625: LIST
20626: LIST
20627: PUSH
20628: EMPTY
20629: LIST
20630: LIST
20631: LIST
20632: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20633: LD_ADDR_VAR 0 16
20637: PUSH
20638: LD_INT 2
20640: NEG
20641: PUSH
20642: LD_INT 3
20644: NEG
20645: PUSH
20646: EMPTY
20647: LIST
20648: LIST
20649: PUSH
20650: LD_INT 3
20652: NEG
20653: PUSH
20654: LD_INT 2
20656: NEG
20657: PUSH
20658: EMPTY
20659: LIST
20660: LIST
20661: PUSH
20662: LD_INT 3
20664: NEG
20665: PUSH
20666: LD_INT 3
20668: NEG
20669: PUSH
20670: EMPTY
20671: LIST
20672: LIST
20673: PUSH
20674: EMPTY
20675: LIST
20676: LIST
20677: LIST
20678: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20679: LD_ADDR_VAR 0 17
20683: PUSH
20684: LD_INT 1
20686: NEG
20687: PUSH
20688: LD_INT 3
20690: NEG
20691: PUSH
20692: EMPTY
20693: LIST
20694: LIST
20695: PUSH
20696: LD_INT 0
20698: PUSH
20699: LD_INT 3
20701: NEG
20702: PUSH
20703: EMPTY
20704: LIST
20705: LIST
20706: PUSH
20707: LD_INT 1
20709: PUSH
20710: LD_INT 2
20712: NEG
20713: PUSH
20714: EMPTY
20715: LIST
20716: LIST
20717: PUSH
20718: EMPTY
20719: LIST
20720: LIST
20721: LIST
20722: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20723: LD_ADDR_VAR 0 18
20727: PUSH
20728: LD_INT 2
20730: PUSH
20731: LD_INT 1
20733: NEG
20734: PUSH
20735: EMPTY
20736: LIST
20737: LIST
20738: PUSH
20739: LD_INT 3
20741: PUSH
20742: LD_INT 0
20744: PUSH
20745: EMPTY
20746: LIST
20747: LIST
20748: PUSH
20749: LD_INT 3
20751: PUSH
20752: LD_INT 1
20754: PUSH
20755: EMPTY
20756: LIST
20757: LIST
20758: PUSH
20759: EMPTY
20760: LIST
20761: LIST
20762: LIST
20763: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20764: LD_ADDR_VAR 0 19
20768: PUSH
20769: LD_INT 3
20771: PUSH
20772: LD_INT 2
20774: PUSH
20775: EMPTY
20776: LIST
20777: LIST
20778: PUSH
20779: LD_INT 3
20781: PUSH
20782: LD_INT 3
20784: PUSH
20785: EMPTY
20786: LIST
20787: LIST
20788: PUSH
20789: LD_INT 2
20791: PUSH
20792: LD_INT 3
20794: PUSH
20795: EMPTY
20796: LIST
20797: LIST
20798: PUSH
20799: EMPTY
20800: LIST
20801: LIST
20802: LIST
20803: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20804: LD_ADDR_VAR 0 20
20808: PUSH
20809: LD_INT 1
20811: PUSH
20812: LD_INT 3
20814: PUSH
20815: EMPTY
20816: LIST
20817: LIST
20818: PUSH
20819: LD_INT 0
20821: PUSH
20822: LD_INT 3
20824: PUSH
20825: EMPTY
20826: LIST
20827: LIST
20828: PUSH
20829: LD_INT 1
20831: NEG
20832: PUSH
20833: LD_INT 2
20835: PUSH
20836: EMPTY
20837: LIST
20838: LIST
20839: PUSH
20840: EMPTY
20841: LIST
20842: LIST
20843: LIST
20844: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20845: LD_ADDR_VAR 0 21
20849: PUSH
20850: LD_INT 2
20852: NEG
20853: PUSH
20854: LD_INT 1
20856: PUSH
20857: EMPTY
20858: LIST
20859: LIST
20860: PUSH
20861: LD_INT 3
20863: NEG
20864: PUSH
20865: LD_INT 0
20867: PUSH
20868: EMPTY
20869: LIST
20870: LIST
20871: PUSH
20872: LD_INT 3
20874: NEG
20875: PUSH
20876: LD_INT 1
20878: NEG
20879: PUSH
20880: EMPTY
20881: LIST
20882: LIST
20883: PUSH
20884: EMPTY
20885: LIST
20886: LIST
20887: LIST
20888: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20889: LD_ADDR_VAR 0 22
20893: PUSH
20894: LD_INT 2
20896: NEG
20897: PUSH
20898: LD_INT 3
20900: NEG
20901: PUSH
20902: EMPTY
20903: LIST
20904: LIST
20905: PUSH
20906: LD_INT 3
20908: NEG
20909: PUSH
20910: LD_INT 2
20912: NEG
20913: PUSH
20914: EMPTY
20915: LIST
20916: LIST
20917: PUSH
20918: LD_INT 3
20920: NEG
20921: PUSH
20922: LD_INT 3
20924: NEG
20925: PUSH
20926: EMPTY
20927: LIST
20928: LIST
20929: PUSH
20930: EMPTY
20931: LIST
20932: LIST
20933: LIST
20934: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20935: LD_ADDR_VAR 0 23
20939: PUSH
20940: LD_INT 0
20942: PUSH
20943: LD_INT 3
20945: NEG
20946: PUSH
20947: EMPTY
20948: LIST
20949: LIST
20950: PUSH
20951: LD_INT 1
20953: NEG
20954: PUSH
20955: LD_INT 4
20957: NEG
20958: PUSH
20959: EMPTY
20960: LIST
20961: LIST
20962: PUSH
20963: LD_INT 1
20965: PUSH
20966: LD_INT 3
20968: NEG
20969: PUSH
20970: EMPTY
20971: LIST
20972: LIST
20973: PUSH
20974: EMPTY
20975: LIST
20976: LIST
20977: LIST
20978: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20979: LD_ADDR_VAR 0 24
20983: PUSH
20984: LD_INT 3
20986: PUSH
20987: LD_INT 0
20989: PUSH
20990: EMPTY
20991: LIST
20992: LIST
20993: PUSH
20994: LD_INT 3
20996: PUSH
20997: LD_INT 1
20999: NEG
21000: PUSH
21001: EMPTY
21002: LIST
21003: LIST
21004: PUSH
21005: LD_INT 4
21007: PUSH
21008: LD_INT 1
21010: PUSH
21011: EMPTY
21012: LIST
21013: LIST
21014: PUSH
21015: EMPTY
21016: LIST
21017: LIST
21018: LIST
21019: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21020: LD_ADDR_VAR 0 25
21024: PUSH
21025: LD_INT 3
21027: PUSH
21028: LD_INT 3
21030: PUSH
21031: EMPTY
21032: LIST
21033: LIST
21034: PUSH
21035: LD_INT 4
21037: PUSH
21038: LD_INT 3
21040: PUSH
21041: EMPTY
21042: LIST
21043: LIST
21044: PUSH
21045: LD_INT 3
21047: PUSH
21048: LD_INT 4
21050: PUSH
21051: EMPTY
21052: LIST
21053: LIST
21054: PUSH
21055: EMPTY
21056: LIST
21057: LIST
21058: LIST
21059: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21060: LD_ADDR_VAR 0 26
21064: PUSH
21065: LD_INT 0
21067: PUSH
21068: LD_INT 3
21070: PUSH
21071: EMPTY
21072: LIST
21073: LIST
21074: PUSH
21075: LD_INT 1
21077: PUSH
21078: LD_INT 4
21080: PUSH
21081: EMPTY
21082: LIST
21083: LIST
21084: PUSH
21085: LD_INT 1
21087: NEG
21088: PUSH
21089: LD_INT 3
21091: PUSH
21092: EMPTY
21093: LIST
21094: LIST
21095: PUSH
21096: EMPTY
21097: LIST
21098: LIST
21099: LIST
21100: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21101: LD_ADDR_VAR 0 27
21105: PUSH
21106: LD_INT 3
21108: NEG
21109: PUSH
21110: LD_INT 0
21112: PUSH
21113: EMPTY
21114: LIST
21115: LIST
21116: PUSH
21117: LD_INT 3
21119: NEG
21120: PUSH
21121: LD_INT 1
21123: PUSH
21124: EMPTY
21125: LIST
21126: LIST
21127: PUSH
21128: LD_INT 4
21130: NEG
21131: PUSH
21132: LD_INT 1
21134: NEG
21135: PUSH
21136: EMPTY
21137: LIST
21138: LIST
21139: PUSH
21140: EMPTY
21141: LIST
21142: LIST
21143: LIST
21144: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21145: LD_ADDR_VAR 0 28
21149: PUSH
21150: LD_INT 3
21152: NEG
21153: PUSH
21154: LD_INT 3
21156: NEG
21157: PUSH
21158: EMPTY
21159: LIST
21160: LIST
21161: PUSH
21162: LD_INT 3
21164: NEG
21165: PUSH
21166: LD_INT 4
21168: NEG
21169: PUSH
21170: EMPTY
21171: LIST
21172: LIST
21173: PUSH
21174: LD_INT 4
21176: NEG
21177: PUSH
21178: LD_INT 3
21180: NEG
21181: PUSH
21182: EMPTY
21183: LIST
21184: LIST
21185: PUSH
21186: EMPTY
21187: LIST
21188: LIST
21189: LIST
21190: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21191: LD_ADDR_VAR 0 29
21195: PUSH
21196: LD_INT 1
21198: NEG
21199: PUSH
21200: LD_INT 3
21202: NEG
21203: PUSH
21204: EMPTY
21205: LIST
21206: LIST
21207: PUSH
21208: LD_INT 0
21210: PUSH
21211: LD_INT 3
21213: NEG
21214: PUSH
21215: EMPTY
21216: LIST
21217: LIST
21218: PUSH
21219: LD_INT 1
21221: PUSH
21222: LD_INT 2
21224: NEG
21225: PUSH
21226: EMPTY
21227: LIST
21228: LIST
21229: PUSH
21230: LD_INT 1
21232: NEG
21233: PUSH
21234: LD_INT 4
21236: NEG
21237: PUSH
21238: EMPTY
21239: LIST
21240: LIST
21241: PUSH
21242: LD_INT 0
21244: PUSH
21245: LD_INT 4
21247: NEG
21248: PUSH
21249: EMPTY
21250: LIST
21251: LIST
21252: PUSH
21253: LD_INT 1
21255: PUSH
21256: LD_INT 3
21258: NEG
21259: PUSH
21260: EMPTY
21261: LIST
21262: LIST
21263: PUSH
21264: LD_INT 1
21266: NEG
21267: PUSH
21268: LD_INT 5
21270: NEG
21271: PUSH
21272: EMPTY
21273: LIST
21274: LIST
21275: PUSH
21276: LD_INT 0
21278: PUSH
21279: LD_INT 5
21281: NEG
21282: PUSH
21283: EMPTY
21284: LIST
21285: LIST
21286: PUSH
21287: LD_INT 1
21289: PUSH
21290: LD_INT 4
21292: NEG
21293: PUSH
21294: EMPTY
21295: LIST
21296: LIST
21297: PUSH
21298: LD_INT 1
21300: NEG
21301: PUSH
21302: LD_INT 6
21304: NEG
21305: PUSH
21306: EMPTY
21307: LIST
21308: LIST
21309: PUSH
21310: LD_INT 0
21312: PUSH
21313: LD_INT 6
21315: NEG
21316: PUSH
21317: EMPTY
21318: LIST
21319: LIST
21320: PUSH
21321: LD_INT 1
21323: PUSH
21324: LD_INT 5
21326: NEG
21327: PUSH
21328: EMPTY
21329: LIST
21330: LIST
21331: PUSH
21332: EMPTY
21333: LIST
21334: LIST
21335: LIST
21336: LIST
21337: LIST
21338: LIST
21339: LIST
21340: LIST
21341: LIST
21342: LIST
21343: LIST
21344: LIST
21345: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21346: LD_ADDR_VAR 0 30
21350: PUSH
21351: LD_INT 2
21353: PUSH
21354: LD_INT 1
21356: NEG
21357: PUSH
21358: EMPTY
21359: LIST
21360: LIST
21361: PUSH
21362: LD_INT 3
21364: PUSH
21365: LD_INT 0
21367: PUSH
21368: EMPTY
21369: LIST
21370: LIST
21371: PUSH
21372: LD_INT 3
21374: PUSH
21375: LD_INT 1
21377: PUSH
21378: EMPTY
21379: LIST
21380: LIST
21381: PUSH
21382: LD_INT 3
21384: PUSH
21385: LD_INT 1
21387: NEG
21388: PUSH
21389: EMPTY
21390: LIST
21391: LIST
21392: PUSH
21393: LD_INT 4
21395: PUSH
21396: LD_INT 0
21398: PUSH
21399: EMPTY
21400: LIST
21401: LIST
21402: PUSH
21403: LD_INT 4
21405: PUSH
21406: LD_INT 1
21408: PUSH
21409: EMPTY
21410: LIST
21411: LIST
21412: PUSH
21413: LD_INT 4
21415: PUSH
21416: LD_INT 1
21418: NEG
21419: PUSH
21420: EMPTY
21421: LIST
21422: LIST
21423: PUSH
21424: LD_INT 5
21426: PUSH
21427: LD_INT 0
21429: PUSH
21430: EMPTY
21431: LIST
21432: LIST
21433: PUSH
21434: LD_INT 5
21436: PUSH
21437: LD_INT 1
21439: PUSH
21440: EMPTY
21441: LIST
21442: LIST
21443: PUSH
21444: LD_INT 5
21446: PUSH
21447: LD_INT 1
21449: NEG
21450: PUSH
21451: EMPTY
21452: LIST
21453: LIST
21454: PUSH
21455: LD_INT 6
21457: PUSH
21458: LD_INT 0
21460: PUSH
21461: EMPTY
21462: LIST
21463: LIST
21464: PUSH
21465: LD_INT 6
21467: PUSH
21468: LD_INT 1
21470: PUSH
21471: EMPTY
21472: LIST
21473: LIST
21474: PUSH
21475: EMPTY
21476: LIST
21477: LIST
21478: LIST
21479: LIST
21480: LIST
21481: LIST
21482: LIST
21483: LIST
21484: LIST
21485: LIST
21486: LIST
21487: LIST
21488: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21489: LD_ADDR_VAR 0 31
21493: PUSH
21494: LD_INT 3
21496: PUSH
21497: LD_INT 2
21499: PUSH
21500: EMPTY
21501: LIST
21502: LIST
21503: PUSH
21504: LD_INT 3
21506: PUSH
21507: LD_INT 3
21509: PUSH
21510: EMPTY
21511: LIST
21512: LIST
21513: PUSH
21514: LD_INT 2
21516: PUSH
21517: LD_INT 3
21519: PUSH
21520: EMPTY
21521: LIST
21522: LIST
21523: PUSH
21524: LD_INT 4
21526: PUSH
21527: LD_INT 3
21529: PUSH
21530: EMPTY
21531: LIST
21532: LIST
21533: PUSH
21534: LD_INT 4
21536: PUSH
21537: LD_INT 4
21539: PUSH
21540: EMPTY
21541: LIST
21542: LIST
21543: PUSH
21544: LD_INT 3
21546: PUSH
21547: LD_INT 4
21549: PUSH
21550: EMPTY
21551: LIST
21552: LIST
21553: PUSH
21554: LD_INT 5
21556: PUSH
21557: LD_INT 4
21559: PUSH
21560: EMPTY
21561: LIST
21562: LIST
21563: PUSH
21564: LD_INT 5
21566: PUSH
21567: LD_INT 5
21569: PUSH
21570: EMPTY
21571: LIST
21572: LIST
21573: PUSH
21574: LD_INT 4
21576: PUSH
21577: LD_INT 5
21579: PUSH
21580: EMPTY
21581: LIST
21582: LIST
21583: PUSH
21584: LD_INT 6
21586: PUSH
21587: LD_INT 5
21589: PUSH
21590: EMPTY
21591: LIST
21592: LIST
21593: PUSH
21594: LD_INT 6
21596: PUSH
21597: LD_INT 6
21599: PUSH
21600: EMPTY
21601: LIST
21602: LIST
21603: PUSH
21604: LD_INT 5
21606: PUSH
21607: LD_INT 6
21609: PUSH
21610: EMPTY
21611: LIST
21612: LIST
21613: PUSH
21614: EMPTY
21615: LIST
21616: LIST
21617: LIST
21618: LIST
21619: LIST
21620: LIST
21621: LIST
21622: LIST
21623: LIST
21624: LIST
21625: LIST
21626: LIST
21627: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21628: LD_ADDR_VAR 0 32
21632: PUSH
21633: LD_INT 1
21635: PUSH
21636: LD_INT 3
21638: PUSH
21639: EMPTY
21640: LIST
21641: LIST
21642: PUSH
21643: LD_INT 0
21645: PUSH
21646: LD_INT 3
21648: PUSH
21649: EMPTY
21650: LIST
21651: LIST
21652: PUSH
21653: LD_INT 1
21655: NEG
21656: PUSH
21657: LD_INT 2
21659: PUSH
21660: EMPTY
21661: LIST
21662: LIST
21663: PUSH
21664: LD_INT 1
21666: PUSH
21667: LD_INT 4
21669: PUSH
21670: EMPTY
21671: LIST
21672: LIST
21673: PUSH
21674: LD_INT 0
21676: PUSH
21677: LD_INT 4
21679: PUSH
21680: EMPTY
21681: LIST
21682: LIST
21683: PUSH
21684: LD_INT 1
21686: NEG
21687: PUSH
21688: LD_INT 3
21690: PUSH
21691: EMPTY
21692: LIST
21693: LIST
21694: PUSH
21695: LD_INT 1
21697: PUSH
21698: LD_INT 5
21700: PUSH
21701: EMPTY
21702: LIST
21703: LIST
21704: PUSH
21705: LD_INT 0
21707: PUSH
21708: LD_INT 5
21710: PUSH
21711: EMPTY
21712: LIST
21713: LIST
21714: PUSH
21715: LD_INT 1
21717: NEG
21718: PUSH
21719: LD_INT 4
21721: PUSH
21722: EMPTY
21723: LIST
21724: LIST
21725: PUSH
21726: LD_INT 1
21728: PUSH
21729: LD_INT 6
21731: PUSH
21732: EMPTY
21733: LIST
21734: LIST
21735: PUSH
21736: LD_INT 0
21738: PUSH
21739: LD_INT 6
21741: PUSH
21742: EMPTY
21743: LIST
21744: LIST
21745: PUSH
21746: LD_INT 1
21748: NEG
21749: PUSH
21750: LD_INT 5
21752: PUSH
21753: EMPTY
21754: LIST
21755: LIST
21756: PUSH
21757: EMPTY
21758: LIST
21759: LIST
21760: LIST
21761: LIST
21762: LIST
21763: LIST
21764: LIST
21765: LIST
21766: LIST
21767: LIST
21768: LIST
21769: LIST
21770: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21771: LD_ADDR_VAR 0 33
21775: PUSH
21776: LD_INT 2
21778: NEG
21779: PUSH
21780: LD_INT 1
21782: PUSH
21783: EMPTY
21784: LIST
21785: LIST
21786: PUSH
21787: LD_INT 3
21789: NEG
21790: PUSH
21791: LD_INT 0
21793: PUSH
21794: EMPTY
21795: LIST
21796: LIST
21797: PUSH
21798: LD_INT 3
21800: NEG
21801: PUSH
21802: LD_INT 1
21804: NEG
21805: PUSH
21806: EMPTY
21807: LIST
21808: LIST
21809: PUSH
21810: LD_INT 3
21812: NEG
21813: PUSH
21814: LD_INT 1
21816: PUSH
21817: EMPTY
21818: LIST
21819: LIST
21820: PUSH
21821: LD_INT 4
21823: NEG
21824: PUSH
21825: LD_INT 0
21827: PUSH
21828: EMPTY
21829: LIST
21830: LIST
21831: PUSH
21832: LD_INT 4
21834: NEG
21835: PUSH
21836: LD_INT 1
21838: NEG
21839: PUSH
21840: EMPTY
21841: LIST
21842: LIST
21843: PUSH
21844: LD_INT 4
21846: NEG
21847: PUSH
21848: LD_INT 1
21850: PUSH
21851: EMPTY
21852: LIST
21853: LIST
21854: PUSH
21855: LD_INT 5
21857: NEG
21858: PUSH
21859: LD_INT 0
21861: PUSH
21862: EMPTY
21863: LIST
21864: LIST
21865: PUSH
21866: LD_INT 5
21868: NEG
21869: PUSH
21870: LD_INT 1
21872: NEG
21873: PUSH
21874: EMPTY
21875: LIST
21876: LIST
21877: PUSH
21878: LD_INT 5
21880: NEG
21881: PUSH
21882: LD_INT 1
21884: PUSH
21885: EMPTY
21886: LIST
21887: LIST
21888: PUSH
21889: LD_INT 6
21891: NEG
21892: PUSH
21893: LD_INT 0
21895: PUSH
21896: EMPTY
21897: LIST
21898: LIST
21899: PUSH
21900: LD_INT 6
21902: NEG
21903: PUSH
21904: LD_INT 1
21906: NEG
21907: PUSH
21908: EMPTY
21909: LIST
21910: LIST
21911: PUSH
21912: EMPTY
21913: LIST
21914: LIST
21915: LIST
21916: LIST
21917: LIST
21918: LIST
21919: LIST
21920: LIST
21921: LIST
21922: LIST
21923: LIST
21924: LIST
21925: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21926: LD_ADDR_VAR 0 34
21930: PUSH
21931: LD_INT 2
21933: NEG
21934: PUSH
21935: LD_INT 3
21937: NEG
21938: PUSH
21939: EMPTY
21940: LIST
21941: LIST
21942: PUSH
21943: LD_INT 3
21945: NEG
21946: PUSH
21947: LD_INT 2
21949: NEG
21950: PUSH
21951: EMPTY
21952: LIST
21953: LIST
21954: PUSH
21955: LD_INT 3
21957: NEG
21958: PUSH
21959: LD_INT 3
21961: NEG
21962: PUSH
21963: EMPTY
21964: LIST
21965: LIST
21966: PUSH
21967: LD_INT 3
21969: NEG
21970: PUSH
21971: LD_INT 4
21973: NEG
21974: PUSH
21975: EMPTY
21976: LIST
21977: LIST
21978: PUSH
21979: LD_INT 4
21981: NEG
21982: PUSH
21983: LD_INT 3
21985: NEG
21986: PUSH
21987: EMPTY
21988: LIST
21989: LIST
21990: PUSH
21991: LD_INT 4
21993: NEG
21994: PUSH
21995: LD_INT 4
21997: NEG
21998: PUSH
21999: EMPTY
22000: LIST
22001: LIST
22002: PUSH
22003: LD_INT 4
22005: NEG
22006: PUSH
22007: LD_INT 5
22009: NEG
22010: PUSH
22011: EMPTY
22012: LIST
22013: LIST
22014: PUSH
22015: LD_INT 5
22017: NEG
22018: PUSH
22019: LD_INT 4
22021: NEG
22022: PUSH
22023: EMPTY
22024: LIST
22025: LIST
22026: PUSH
22027: LD_INT 5
22029: NEG
22030: PUSH
22031: LD_INT 5
22033: NEG
22034: PUSH
22035: EMPTY
22036: LIST
22037: LIST
22038: PUSH
22039: LD_INT 5
22041: NEG
22042: PUSH
22043: LD_INT 6
22045: NEG
22046: PUSH
22047: EMPTY
22048: LIST
22049: LIST
22050: PUSH
22051: LD_INT 6
22053: NEG
22054: PUSH
22055: LD_INT 5
22057: NEG
22058: PUSH
22059: EMPTY
22060: LIST
22061: LIST
22062: PUSH
22063: LD_INT 6
22065: NEG
22066: PUSH
22067: LD_INT 6
22069: NEG
22070: PUSH
22071: EMPTY
22072: LIST
22073: LIST
22074: PUSH
22075: EMPTY
22076: LIST
22077: LIST
22078: LIST
22079: LIST
22080: LIST
22081: LIST
22082: LIST
22083: LIST
22084: LIST
22085: LIST
22086: LIST
22087: LIST
22088: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22089: LD_ADDR_VAR 0 41
22093: PUSH
22094: LD_INT 0
22096: PUSH
22097: LD_INT 2
22099: NEG
22100: PUSH
22101: EMPTY
22102: LIST
22103: LIST
22104: PUSH
22105: LD_INT 1
22107: NEG
22108: PUSH
22109: LD_INT 3
22111: NEG
22112: PUSH
22113: EMPTY
22114: LIST
22115: LIST
22116: PUSH
22117: LD_INT 1
22119: PUSH
22120: LD_INT 2
22122: NEG
22123: PUSH
22124: EMPTY
22125: LIST
22126: LIST
22127: PUSH
22128: EMPTY
22129: LIST
22130: LIST
22131: LIST
22132: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22133: LD_ADDR_VAR 0 42
22137: PUSH
22138: LD_INT 2
22140: PUSH
22141: LD_INT 0
22143: PUSH
22144: EMPTY
22145: LIST
22146: LIST
22147: PUSH
22148: LD_INT 2
22150: PUSH
22151: LD_INT 1
22153: NEG
22154: PUSH
22155: EMPTY
22156: LIST
22157: LIST
22158: PUSH
22159: LD_INT 3
22161: PUSH
22162: LD_INT 1
22164: PUSH
22165: EMPTY
22166: LIST
22167: LIST
22168: PUSH
22169: EMPTY
22170: LIST
22171: LIST
22172: LIST
22173: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22174: LD_ADDR_VAR 0 43
22178: PUSH
22179: LD_INT 2
22181: PUSH
22182: LD_INT 2
22184: PUSH
22185: EMPTY
22186: LIST
22187: LIST
22188: PUSH
22189: LD_INT 3
22191: PUSH
22192: LD_INT 2
22194: PUSH
22195: EMPTY
22196: LIST
22197: LIST
22198: PUSH
22199: LD_INT 2
22201: PUSH
22202: LD_INT 3
22204: PUSH
22205: EMPTY
22206: LIST
22207: LIST
22208: PUSH
22209: EMPTY
22210: LIST
22211: LIST
22212: LIST
22213: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22214: LD_ADDR_VAR 0 44
22218: PUSH
22219: LD_INT 0
22221: PUSH
22222: LD_INT 2
22224: PUSH
22225: EMPTY
22226: LIST
22227: LIST
22228: PUSH
22229: LD_INT 1
22231: PUSH
22232: LD_INT 3
22234: PUSH
22235: EMPTY
22236: LIST
22237: LIST
22238: PUSH
22239: LD_INT 1
22241: NEG
22242: PUSH
22243: LD_INT 2
22245: PUSH
22246: EMPTY
22247: LIST
22248: LIST
22249: PUSH
22250: EMPTY
22251: LIST
22252: LIST
22253: LIST
22254: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22255: LD_ADDR_VAR 0 45
22259: PUSH
22260: LD_INT 2
22262: NEG
22263: PUSH
22264: LD_INT 0
22266: PUSH
22267: EMPTY
22268: LIST
22269: LIST
22270: PUSH
22271: LD_INT 2
22273: NEG
22274: PUSH
22275: LD_INT 1
22277: PUSH
22278: EMPTY
22279: LIST
22280: LIST
22281: PUSH
22282: LD_INT 3
22284: NEG
22285: PUSH
22286: LD_INT 1
22288: NEG
22289: PUSH
22290: EMPTY
22291: LIST
22292: LIST
22293: PUSH
22294: EMPTY
22295: LIST
22296: LIST
22297: LIST
22298: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22299: LD_ADDR_VAR 0 46
22303: PUSH
22304: LD_INT 2
22306: NEG
22307: PUSH
22308: LD_INT 2
22310: NEG
22311: PUSH
22312: EMPTY
22313: LIST
22314: LIST
22315: PUSH
22316: LD_INT 2
22318: NEG
22319: PUSH
22320: LD_INT 3
22322: NEG
22323: PUSH
22324: EMPTY
22325: LIST
22326: LIST
22327: PUSH
22328: LD_INT 3
22330: NEG
22331: PUSH
22332: LD_INT 2
22334: NEG
22335: PUSH
22336: EMPTY
22337: LIST
22338: LIST
22339: PUSH
22340: EMPTY
22341: LIST
22342: LIST
22343: LIST
22344: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22345: LD_ADDR_VAR 0 47
22349: PUSH
22350: LD_INT 2
22352: NEG
22353: PUSH
22354: LD_INT 3
22356: NEG
22357: PUSH
22358: EMPTY
22359: LIST
22360: LIST
22361: PUSH
22362: LD_INT 1
22364: NEG
22365: PUSH
22366: LD_INT 3
22368: NEG
22369: PUSH
22370: EMPTY
22371: LIST
22372: LIST
22373: PUSH
22374: EMPTY
22375: LIST
22376: LIST
22377: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22378: LD_ADDR_VAR 0 48
22382: PUSH
22383: LD_INT 1
22385: PUSH
22386: LD_INT 2
22388: NEG
22389: PUSH
22390: EMPTY
22391: LIST
22392: LIST
22393: PUSH
22394: LD_INT 2
22396: PUSH
22397: LD_INT 1
22399: NEG
22400: PUSH
22401: EMPTY
22402: LIST
22403: LIST
22404: PUSH
22405: EMPTY
22406: LIST
22407: LIST
22408: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22409: LD_ADDR_VAR 0 49
22413: PUSH
22414: LD_INT 3
22416: PUSH
22417: LD_INT 1
22419: PUSH
22420: EMPTY
22421: LIST
22422: LIST
22423: PUSH
22424: LD_INT 3
22426: PUSH
22427: LD_INT 2
22429: PUSH
22430: EMPTY
22431: LIST
22432: LIST
22433: PUSH
22434: EMPTY
22435: LIST
22436: LIST
22437: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22438: LD_ADDR_VAR 0 50
22442: PUSH
22443: LD_INT 2
22445: PUSH
22446: LD_INT 3
22448: PUSH
22449: EMPTY
22450: LIST
22451: LIST
22452: PUSH
22453: LD_INT 1
22455: PUSH
22456: LD_INT 3
22458: PUSH
22459: EMPTY
22460: LIST
22461: LIST
22462: PUSH
22463: EMPTY
22464: LIST
22465: LIST
22466: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22467: LD_ADDR_VAR 0 51
22471: PUSH
22472: LD_INT 1
22474: NEG
22475: PUSH
22476: LD_INT 2
22478: PUSH
22479: EMPTY
22480: LIST
22481: LIST
22482: PUSH
22483: LD_INT 2
22485: NEG
22486: PUSH
22487: LD_INT 1
22489: PUSH
22490: EMPTY
22491: LIST
22492: LIST
22493: PUSH
22494: EMPTY
22495: LIST
22496: LIST
22497: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22498: LD_ADDR_VAR 0 52
22502: PUSH
22503: LD_INT 3
22505: NEG
22506: PUSH
22507: LD_INT 1
22509: NEG
22510: PUSH
22511: EMPTY
22512: LIST
22513: LIST
22514: PUSH
22515: LD_INT 3
22517: NEG
22518: PUSH
22519: LD_INT 2
22521: NEG
22522: PUSH
22523: EMPTY
22524: LIST
22525: LIST
22526: PUSH
22527: EMPTY
22528: LIST
22529: LIST
22530: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22531: LD_ADDR_VAR 0 53
22535: PUSH
22536: LD_INT 1
22538: NEG
22539: PUSH
22540: LD_INT 3
22542: NEG
22543: PUSH
22544: EMPTY
22545: LIST
22546: LIST
22547: PUSH
22548: LD_INT 0
22550: PUSH
22551: LD_INT 3
22553: NEG
22554: PUSH
22555: EMPTY
22556: LIST
22557: LIST
22558: PUSH
22559: LD_INT 1
22561: PUSH
22562: LD_INT 2
22564: NEG
22565: PUSH
22566: EMPTY
22567: LIST
22568: LIST
22569: PUSH
22570: EMPTY
22571: LIST
22572: LIST
22573: LIST
22574: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22575: LD_ADDR_VAR 0 54
22579: PUSH
22580: LD_INT 2
22582: PUSH
22583: LD_INT 1
22585: NEG
22586: PUSH
22587: EMPTY
22588: LIST
22589: LIST
22590: PUSH
22591: LD_INT 3
22593: PUSH
22594: LD_INT 0
22596: PUSH
22597: EMPTY
22598: LIST
22599: LIST
22600: PUSH
22601: LD_INT 3
22603: PUSH
22604: LD_INT 1
22606: PUSH
22607: EMPTY
22608: LIST
22609: LIST
22610: PUSH
22611: EMPTY
22612: LIST
22613: LIST
22614: LIST
22615: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22616: LD_ADDR_VAR 0 55
22620: PUSH
22621: LD_INT 3
22623: PUSH
22624: LD_INT 2
22626: PUSH
22627: EMPTY
22628: LIST
22629: LIST
22630: PUSH
22631: LD_INT 3
22633: PUSH
22634: LD_INT 3
22636: PUSH
22637: EMPTY
22638: LIST
22639: LIST
22640: PUSH
22641: LD_INT 2
22643: PUSH
22644: LD_INT 3
22646: PUSH
22647: EMPTY
22648: LIST
22649: LIST
22650: PUSH
22651: EMPTY
22652: LIST
22653: LIST
22654: LIST
22655: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22656: LD_ADDR_VAR 0 56
22660: PUSH
22661: LD_INT 1
22663: PUSH
22664: LD_INT 3
22666: PUSH
22667: EMPTY
22668: LIST
22669: LIST
22670: PUSH
22671: LD_INT 0
22673: PUSH
22674: LD_INT 3
22676: PUSH
22677: EMPTY
22678: LIST
22679: LIST
22680: PUSH
22681: LD_INT 1
22683: NEG
22684: PUSH
22685: LD_INT 2
22687: PUSH
22688: EMPTY
22689: LIST
22690: LIST
22691: PUSH
22692: EMPTY
22693: LIST
22694: LIST
22695: LIST
22696: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22697: LD_ADDR_VAR 0 57
22701: PUSH
22702: LD_INT 2
22704: NEG
22705: PUSH
22706: LD_INT 1
22708: PUSH
22709: EMPTY
22710: LIST
22711: LIST
22712: PUSH
22713: LD_INT 3
22715: NEG
22716: PUSH
22717: LD_INT 0
22719: PUSH
22720: EMPTY
22721: LIST
22722: LIST
22723: PUSH
22724: LD_INT 3
22726: NEG
22727: PUSH
22728: LD_INT 1
22730: NEG
22731: PUSH
22732: EMPTY
22733: LIST
22734: LIST
22735: PUSH
22736: EMPTY
22737: LIST
22738: LIST
22739: LIST
22740: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22741: LD_ADDR_VAR 0 58
22745: PUSH
22746: LD_INT 2
22748: NEG
22749: PUSH
22750: LD_INT 3
22752: NEG
22753: PUSH
22754: EMPTY
22755: LIST
22756: LIST
22757: PUSH
22758: LD_INT 3
22760: NEG
22761: PUSH
22762: LD_INT 2
22764: NEG
22765: PUSH
22766: EMPTY
22767: LIST
22768: LIST
22769: PUSH
22770: LD_INT 3
22772: NEG
22773: PUSH
22774: LD_INT 3
22776: NEG
22777: PUSH
22778: EMPTY
22779: LIST
22780: LIST
22781: PUSH
22782: EMPTY
22783: LIST
22784: LIST
22785: LIST
22786: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22787: LD_ADDR_VAR 0 59
22791: PUSH
22792: LD_INT 1
22794: NEG
22795: PUSH
22796: LD_INT 2
22798: NEG
22799: PUSH
22800: EMPTY
22801: LIST
22802: LIST
22803: PUSH
22804: LD_INT 0
22806: PUSH
22807: LD_INT 2
22809: NEG
22810: PUSH
22811: EMPTY
22812: LIST
22813: LIST
22814: PUSH
22815: LD_INT 1
22817: PUSH
22818: LD_INT 1
22820: NEG
22821: PUSH
22822: EMPTY
22823: LIST
22824: LIST
22825: PUSH
22826: EMPTY
22827: LIST
22828: LIST
22829: LIST
22830: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22831: LD_ADDR_VAR 0 60
22835: PUSH
22836: LD_INT 1
22838: PUSH
22839: LD_INT 1
22841: NEG
22842: PUSH
22843: EMPTY
22844: LIST
22845: LIST
22846: PUSH
22847: LD_INT 2
22849: PUSH
22850: LD_INT 0
22852: PUSH
22853: EMPTY
22854: LIST
22855: LIST
22856: PUSH
22857: LD_INT 2
22859: PUSH
22860: LD_INT 1
22862: PUSH
22863: EMPTY
22864: LIST
22865: LIST
22866: PUSH
22867: EMPTY
22868: LIST
22869: LIST
22870: LIST
22871: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22872: LD_ADDR_VAR 0 61
22876: PUSH
22877: LD_INT 2
22879: PUSH
22880: LD_INT 1
22882: PUSH
22883: EMPTY
22884: LIST
22885: LIST
22886: PUSH
22887: LD_INT 2
22889: PUSH
22890: LD_INT 2
22892: PUSH
22893: EMPTY
22894: LIST
22895: LIST
22896: PUSH
22897: LD_INT 1
22899: PUSH
22900: LD_INT 2
22902: PUSH
22903: EMPTY
22904: LIST
22905: LIST
22906: PUSH
22907: EMPTY
22908: LIST
22909: LIST
22910: LIST
22911: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22912: LD_ADDR_VAR 0 62
22916: PUSH
22917: LD_INT 1
22919: PUSH
22920: LD_INT 2
22922: PUSH
22923: EMPTY
22924: LIST
22925: LIST
22926: PUSH
22927: LD_INT 0
22929: PUSH
22930: LD_INT 2
22932: PUSH
22933: EMPTY
22934: LIST
22935: LIST
22936: PUSH
22937: LD_INT 1
22939: NEG
22940: PUSH
22941: LD_INT 1
22943: PUSH
22944: EMPTY
22945: LIST
22946: LIST
22947: PUSH
22948: EMPTY
22949: LIST
22950: LIST
22951: LIST
22952: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22953: LD_ADDR_VAR 0 63
22957: PUSH
22958: LD_INT 1
22960: NEG
22961: PUSH
22962: LD_INT 1
22964: PUSH
22965: EMPTY
22966: LIST
22967: LIST
22968: PUSH
22969: LD_INT 2
22971: NEG
22972: PUSH
22973: LD_INT 0
22975: PUSH
22976: EMPTY
22977: LIST
22978: LIST
22979: PUSH
22980: LD_INT 2
22982: NEG
22983: PUSH
22984: LD_INT 1
22986: NEG
22987: PUSH
22988: EMPTY
22989: LIST
22990: LIST
22991: PUSH
22992: EMPTY
22993: LIST
22994: LIST
22995: LIST
22996: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22997: LD_ADDR_VAR 0 64
23001: PUSH
23002: LD_INT 1
23004: NEG
23005: PUSH
23006: LD_INT 2
23008: NEG
23009: PUSH
23010: EMPTY
23011: LIST
23012: LIST
23013: PUSH
23014: LD_INT 2
23016: NEG
23017: PUSH
23018: LD_INT 1
23020: NEG
23021: PUSH
23022: EMPTY
23023: LIST
23024: LIST
23025: PUSH
23026: LD_INT 2
23028: NEG
23029: PUSH
23030: LD_INT 2
23032: NEG
23033: PUSH
23034: EMPTY
23035: LIST
23036: LIST
23037: PUSH
23038: EMPTY
23039: LIST
23040: LIST
23041: LIST
23042: ST_TO_ADDR
// end ; 2 :
23043: GO 26309
23045: LD_INT 2
23047: DOUBLE
23048: EQUAL
23049: IFTRUE 23053
23051: GO 26308
23053: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23054: LD_ADDR_VAR 0 29
23058: PUSH
23059: LD_INT 4
23061: PUSH
23062: LD_INT 0
23064: PUSH
23065: EMPTY
23066: LIST
23067: LIST
23068: PUSH
23069: LD_INT 4
23071: PUSH
23072: LD_INT 1
23074: NEG
23075: PUSH
23076: EMPTY
23077: LIST
23078: LIST
23079: PUSH
23080: LD_INT 5
23082: PUSH
23083: LD_INT 0
23085: PUSH
23086: EMPTY
23087: LIST
23088: LIST
23089: PUSH
23090: LD_INT 5
23092: PUSH
23093: LD_INT 1
23095: PUSH
23096: EMPTY
23097: LIST
23098: LIST
23099: PUSH
23100: LD_INT 4
23102: PUSH
23103: LD_INT 1
23105: PUSH
23106: EMPTY
23107: LIST
23108: LIST
23109: PUSH
23110: LD_INT 3
23112: PUSH
23113: LD_INT 0
23115: PUSH
23116: EMPTY
23117: LIST
23118: LIST
23119: PUSH
23120: LD_INT 3
23122: PUSH
23123: LD_INT 1
23125: NEG
23126: PUSH
23127: EMPTY
23128: LIST
23129: LIST
23130: PUSH
23131: LD_INT 3
23133: PUSH
23134: LD_INT 2
23136: NEG
23137: PUSH
23138: EMPTY
23139: LIST
23140: LIST
23141: PUSH
23142: LD_INT 5
23144: PUSH
23145: LD_INT 2
23147: PUSH
23148: EMPTY
23149: LIST
23150: LIST
23151: PUSH
23152: LD_INT 3
23154: PUSH
23155: LD_INT 3
23157: PUSH
23158: EMPTY
23159: LIST
23160: LIST
23161: PUSH
23162: LD_INT 3
23164: PUSH
23165: LD_INT 2
23167: PUSH
23168: EMPTY
23169: LIST
23170: LIST
23171: PUSH
23172: LD_INT 4
23174: PUSH
23175: LD_INT 3
23177: PUSH
23178: EMPTY
23179: LIST
23180: LIST
23181: PUSH
23182: LD_INT 4
23184: PUSH
23185: LD_INT 4
23187: PUSH
23188: EMPTY
23189: LIST
23190: LIST
23191: PUSH
23192: LD_INT 3
23194: PUSH
23195: LD_INT 4
23197: PUSH
23198: EMPTY
23199: LIST
23200: LIST
23201: PUSH
23202: LD_INT 2
23204: PUSH
23205: LD_INT 3
23207: PUSH
23208: EMPTY
23209: LIST
23210: LIST
23211: PUSH
23212: LD_INT 2
23214: PUSH
23215: LD_INT 2
23217: PUSH
23218: EMPTY
23219: LIST
23220: LIST
23221: PUSH
23222: LD_INT 4
23224: PUSH
23225: LD_INT 2
23227: PUSH
23228: EMPTY
23229: LIST
23230: LIST
23231: PUSH
23232: LD_INT 2
23234: PUSH
23235: LD_INT 4
23237: PUSH
23238: EMPTY
23239: LIST
23240: LIST
23241: PUSH
23242: LD_INT 0
23244: PUSH
23245: LD_INT 4
23247: PUSH
23248: EMPTY
23249: LIST
23250: LIST
23251: PUSH
23252: LD_INT 0
23254: PUSH
23255: LD_INT 3
23257: PUSH
23258: EMPTY
23259: LIST
23260: LIST
23261: PUSH
23262: LD_INT 1
23264: PUSH
23265: LD_INT 4
23267: PUSH
23268: EMPTY
23269: LIST
23270: LIST
23271: PUSH
23272: LD_INT 1
23274: PUSH
23275: LD_INT 5
23277: PUSH
23278: EMPTY
23279: LIST
23280: LIST
23281: PUSH
23282: LD_INT 0
23284: PUSH
23285: LD_INT 5
23287: PUSH
23288: EMPTY
23289: LIST
23290: LIST
23291: PUSH
23292: LD_INT 1
23294: NEG
23295: PUSH
23296: LD_INT 4
23298: PUSH
23299: EMPTY
23300: LIST
23301: LIST
23302: PUSH
23303: LD_INT 1
23305: NEG
23306: PUSH
23307: LD_INT 3
23309: PUSH
23310: EMPTY
23311: LIST
23312: LIST
23313: PUSH
23314: LD_INT 2
23316: PUSH
23317: LD_INT 5
23319: PUSH
23320: EMPTY
23321: LIST
23322: LIST
23323: PUSH
23324: LD_INT 2
23326: NEG
23327: PUSH
23328: LD_INT 3
23330: PUSH
23331: EMPTY
23332: LIST
23333: LIST
23334: PUSH
23335: LD_INT 3
23337: NEG
23338: PUSH
23339: LD_INT 0
23341: PUSH
23342: EMPTY
23343: LIST
23344: LIST
23345: PUSH
23346: LD_INT 3
23348: NEG
23349: PUSH
23350: LD_INT 1
23352: NEG
23353: PUSH
23354: EMPTY
23355: LIST
23356: LIST
23357: PUSH
23358: LD_INT 2
23360: NEG
23361: PUSH
23362: LD_INT 0
23364: PUSH
23365: EMPTY
23366: LIST
23367: LIST
23368: PUSH
23369: LD_INT 2
23371: NEG
23372: PUSH
23373: LD_INT 1
23375: PUSH
23376: EMPTY
23377: LIST
23378: LIST
23379: PUSH
23380: LD_INT 3
23382: NEG
23383: PUSH
23384: LD_INT 1
23386: PUSH
23387: EMPTY
23388: LIST
23389: LIST
23390: PUSH
23391: LD_INT 4
23393: NEG
23394: PUSH
23395: LD_INT 0
23397: PUSH
23398: EMPTY
23399: LIST
23400: LIST
23401: PUSH
23402: LD_INT 4
23404: NEG
23405: PUSH
23406: LD_INT 1
23408: NEG
23409: PUSH
23410: EMPTY
23411: LIST
23412: LIST
23413: PUSH
23414: LD_INT 4
23416: NEG
23417: PUSH
23418: LD_INT 2
23420: NEG
23421: PUSH
23422: EMPTY
23423: LIST
23424: LIST
23425: PUSH
23426: LD_INT 2
23428: NEG
23429: PUSH
23430: LD_INT 2
23432: PUSH
23433: EMPTY
23434: LIST
23435: LIST
23436: PUSH
23437: LD_INT 4
23439: NEG
23440: PUSH
23441: LD_INT 4
23443: NEG
23444: PUSH
23445: EMPTY
23446: LIST
23447: LIST
23448: PUSH
23449: LD_INT 4
23451: NEG
23452: PUSH
23453: LD_INT 5
23455: NEG
23456: PUSH
23457: EMPTY
23458: LIST
23459: LIST
23460: PUSH
23461: LD_INT 3
23463: NEG
23464: PUSH
23465: LD_INT 4
23467: NEG
23468: PUSH
23469: EMPTY
23470: LIST
23471: LIST
23472: PUSH
23473: LD_INT 3
23475: NEG
23476: PUSH
23477: LD_INT 3
23479: NEG
23480: PUSH
23481: EMPTY
23482: LIST
23483: LIST
23484: PUSH
23485: LD_INT 4
23487: NEG
23488: PUSH
23489: LD_INT 3
23491: NEG
23492: PUSH
23493: EMPTY
23494: LIST
23495: LIST
23496: PUSH
23497: LD_INT 5
23499: NEG
23500: PUSH
23501: LD_INT 4
23503: NEG
23504: PUSH
23505: EMPTY
23506: LIST
23507: LIST
23508: PUSH
23509: LD_INT 5
23511: NEG
23512: PUSH
23513: LD_INT 5
23515: NEG
23516: PUSH
23517: EMPTY
23518: LIST
23519: LIST
23520: PUSH
23521: LD_INT 3
23523: NEG
23524: PUSH
23525: LD_INT 5
23527: NEG
23528: PUSH
23529: EMPTY
23530: LIST
23531: LIST
23532: PUSH
23533: LD_INT 5
23535: NEG
23536: PUSH
23537: LD_INT 3
23539: NEG
23540: PUSH
23541: EMPTY
23542: LIST
23543: LIST
23544: PUSH
23545: EMPTY
23546: LIST
23547: LIST
23548: LIST
23549: LIST
23550: LIST
23551: LIST
23552: LIST
23553: LIST
23554: LIST
23555: LIST
23556: LIST
23557: LIST
23558: LIST
23559: LIST
23560: LIST
23561: LIST
23562: LIST
23563: LIST
23564: LIST
23565: LIST
23566: LIST
23567: LIST
23568: LIST
23569: LIST
23570: LIST
23571: LIST
23572: LIST
23573: LIST
23574: LIST
23575: LIST
23576: LIST
23577: LIST
23578: LIST
23579: LIST
23580: LIST
23581: LIST
23582: LIST
23583: LIST
23584: LIST
23585: LIST
23586: LIST
23587: LIST
23588: LIST
23589: LIST
23590: LIST
23591: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23592: LD_ADDR_VAR 0 30
23596: PUSH
23597: LD_INT 4
23599: PUSH
23600: LD_INT 4
23602: PUSH
23603: EMPTY
23604: LIST
23605: LIST
23606: PUSH
23607: LD_INT 4
23609: PUSH
23610: LD_INT 3
23612: PUSH
23613: EMPTY
23614: LIST
23615: LIST
23616: PUSH
23617: LD_INT 5
23619: PUSH
23620: LD_INT 4
23622: PUSH
23623: EMPTY
23624: LIST
23625: LIST
23626: PUSH
23627: LD_INT 5
23629: PUSH
23630: LD_INT 5
23632: PUSH
23633: EMPTY
23634: LIST
23635: LIST
23636: PUSH
23637: LD_INT 4
23639: PUSH
23640: LD_INT 5
23642: PUSH
23643: EMPTY
23644: LIST
23645: LIST
23646: PUSH
23647: LD_INT 3
23649: PUSH
23650: LD_INT 4
23652: PUSH
23653: EMPTY
23654: LIST
23655: LIST
23656: PUSH
23657: LD_INT 3
23659: PUSH
23660: LD_INT 3
23662: PUSH
23663: EMPTY
23664: LIST
23665: LIST
23666: PUSH
23667: LD_INT 5
23669: PUSH
23670: LD_INT 3
23672: PUSH
23673: EMPTY
23674: LIST
23675: LIST
23676: PUSH
23677: LD_INT 3
23679: PUSH
23680: LD_INT 5
23682: PUSH
23683: EMPTY
23684: LIST
23685: LIST
23686: PUSH
23687: LD_INT 0
23689: PUSH
23690: LD_INT 3
23692: PUSH
23693: EMPTY
23694: LIST
23695: LIST
23696: PUSH
23697: LD_INT 0
23699: PUSH
23700: LD_INT 2
23702: PUSH
23703: EMPTY
23704: LIST
23705: LIST
23706: PUSH
23707: LD_INT 1
23709: PUSH
23710: LD_INT 3
23712: PUSH
23713: EMPTY
23714: LIST
23715: LIST
23716: PUSH
23717: LD_INT 1
23719: PUSH
23720: LD_INT 4
23722: PUSH
23723: EMPTY
23724: LIST
23725: LIST
23726: PUSH
23727: LD_INT 0
23729: PUSH
23730: LD_INT 4
23732: PUSH
23733: EMPTY
23734: LIST
23735: LIST
23736: PUSH
23737: LD_INT 1
23739: NEG
23740: PUSH
23741: LD_INT 3
23743: PUSH
23744: EMPTY
23745: LIST
23746: LIST
23747: PUSH
23748: LD_INT 1
23750: NEG
23751: PUSH
23752: LD_INT 2
23754: PUSH
23755: EMPTY
23756: LIST
23757: LIST
23758: PUSH
23759: LD_INT 2
23761: PUSH
23762: LD_INT 4
23764: PUSH
23765: EMPTY
23766: LIST
23767: LIST
23768: PUSH
23769: LD_INT 2
23771: NEG
23772: PUSH
23773: LD_INT 2
23775: PUSH
23776: EMPTY
23777: LIST
23778: LIST
23779: PUSH
23780: LD_INT 4
23782: NEG
23783: PUSH
23784: LD_INT 0
23786: PUSH
23787: EMPTY
23788: LIST
23789: LIST
23790: PUSH
23791: LD_INT 4
23793: NEG
23794: PUSH
23795: LD_INT 1
23797: NEG
23798: PUSH
23799: EMPTY
23800: LIST
23801: LIST
23802: PUSH
23803: LD_INT 3
23805: NEG
23806: PUSH
23807: LD_INT 0
23809: PUSH
23810: EMPTY
23811: LIST
23812: LIST
23813: PUSH
23814: LD_INT 3
23816: NEG
23817: PUSH
23818: LD_INT 1
23820: PUSH
23821: EMPTY
23822: LIST
23823: LIST
23824: PUSH
23825: LD_INT 4
23827: NEG
23828: PUSH
23829: LD_INT 1
23831: PUSH
23832: EMPTY
23833: LIST
23834: LIST
23835: PUSH
23836: LD_INT 5
23838: NEG
23839: PUSH
23840: LD_INT 0
23842: PUSH
23843: EMPTY
23844: LIST
23845: LIST
23846: PUSH
23847: LD_INT 5
23849: NEG
23850: PUSH
23851: LD_INT 1
23853: NEG
23854: PUSH
23855: EMPTY
23856: LIST
23857: LIST
23858: PUSH
23859: LD_INT 5
23861: NEG
23862: PUSH
23863: LD_INT 2
23865: NEG
23866: PUSH
23867: EMPTY
23868: LIST
23869: LIST
23870: PUSH
23871: LD_INT 3
23873: NEG
23874: PUSH
23875: LD_INT 2
23877: PUSH
23878: EMPTY
23879: LIST
23880: LIST
23881: PUSH
23882: LD_INT 3
23884: NEG
23885: PUSH
23886: LD_INT 3
23888: NEG
23889: PUSH
23890: EMPTY
23891: LIST
23892: LIST
23893: PUSH
23894: LD_INT 3
23896: NEG
23897: PUSH
23898: LD_INT 4
23900: NEG
23901: PUSH
23902: EMPTY
23903: LIST
23904: LIST
23905: PUSH
23906: LD_INT 2
23908: NEG
23909: PUSH
23910: LD_INT 3
23912: NEG
23913: PUSH
23914: EMPTY
23915: LIST
23916: LIST
23917: PUSH
23918: LD_INT 2
23920: NEG
23921: PUSH
23922: LD_INT 2
23924: NEG
23925: PUSH
23926: EMPTY
23927: LIST
23928: LIST
23929: PUSH
23930: LD_INT 3
23932: NEG
23933: PUSH
23934: LD_INT 2
23936: NEG
23937: PUSH
23938: EMPTY
23939: LIST
23940: LIST
23941: PUSH
23942: LD_INT 4
23944: NEG
23945: PUSH
23946: LD_INT 3
23948: NEG
23949: PUSH
23950: EMPTY
23951: LIST
23952: LIST
23953: PUSH
23954: LD_INT 4
23956: NEG
23957: PUSH
23958: LD_INT 4
23960: NEG
23961: PUSH
23962: EMPTY
23963: LIST
23964: LIST
23965: PUSH
23966: LD_INT 2
23968: NEG
23969: PUSH
23970: LD_INT 4
23972: NEG
23973: PUSH
23974: EMPTY
23975: LIST
23976: LIST
23977: PUSH
23978: LD_INT 4
23980: NEG
23981: PUSH
23982: LD_INT 2
23984: NEG
23985: PUSH
23986: EMPTY
23987: LIST
23988: LIST
23989: PUSH
23990: LD_INT 0
23992: PUSH
23993: LD_INT 4
23995: NEG
23996: PUSH
23997: EMPTY
23998: LIST
23999: LIST
24000: PUSH
24001: LD_INT 0
24003: PUSH
24004: LD_INT 5
24006: NEG
24007: PUSH
24008: EMPTY
24009: LIST
24010: LIST
24011: PUSH
24012: LD_INT 1
24014: PUSH
24015: LD_INT 4
24017: NEG
24018: PUSH
24019: EMPTY
24020: LIST
24021: LIST
24022: PUSH
24023: LD_INT 1
24025: PUSH
24026: LD_INT 3
24028: NEG
24029: PUSH
24030: EMPTY
24031: LIST
24032: LIST
24033: PUSH
24034: LD_INT 0
24036: PUSH
24037: LD_INT 3
24039: NEG
24040: PUSH
24041: EMPTY
24042: LIST
24043: LIST
24044: PUSH
24045: LD_INT 1
24047: NEG
24048: PUSH
24049: LD_INT 4
24051: NEG
24052: PUSH
24053: EMPTY
24054: LIST
24055: LIST
24056: PUSH
24057: LD_INT 1
24059: NEG
24060: PUSH
24061: LD_INT 5
24063: NEG
24064: PUSH
24065: EMPTY
24066: LIST
24067: LIST
24068: PUSH
24069: LD_INT 2
24071: PUSH
24072: LD_INT 3
24074: NEG
24075: PUSH
24076: EMPTY
24077: LIST
24078: LIST
24079: PUSH
24080: LD_INT 2
24082: NEG
24083: PUSH
24084: LD_INT 5
24086: NEG
24087: PUSH
24088: EMPTY
24089: LIST
24090: LIST
24091: PUSH
24092: EMPTY
24093: LIST
24094: LIST
24095: LIST
24096: LIST
24097: LIST
24098: LIST
24099: LIST
24100: LIST
24101: LIST
24102: LIST
24103: LIST
24104: LIST
24105: LIST
24106: LIST
24107: LIST
24108: LIST
24109: LIST
24110: LIST
24111: LIST
24112: LIST
24113: LIST
24114: LIST
24115: LIST
24116: LIST
24117: LIST
24118: LIST
24119: LIST
24120: LIST
24121: LIST
24122: LIST
24123: LIST
24124: LIST
24125: LIST
24126: LIST
24127: LIST
24128: LIST
24129: LIST
24130: LIST
24131: LIST
24132: LIST
24133: LIST
24134: LIST
24135: LIST
24136: LIST
24137: LIST
24138: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24139: LD_ADDR_VAR 0 31
24143: PUSH
24144: LD_INT 0
24146: PUSH
24147: LD_INT 4
24149: PUSH
24150: EMPTY
24151: LIST
24152: LIST
24153: PUSH
24154: LD_INT 0
24156: PUSH
24157: LD_INT 3
24159: PUSH
24160: EMPTY
24161: LIST
24162: LIST
24163: PUSH
24164: LD_INT 1
24166: PUSH
24167: LD_INT 4
24169: PUSH
24170: EMPTY
24171: LIST
24172: LIST
24173: PUSH
24174: LD_INT 1
24176: PUSH
24177: LD_INT 5
24179: PUSH
24180: EMPTY
24181: LIST
24182: LIST
24183: PUSH
24184: LD_INT 0
24186: PUSH
24187: LD_INT 5
24189: PUSH
24190: EMPTY
24191: LIST
24192: LIST
24193: PUSH
24194: LD_INT 1
24196: NEG
24197: PUSH
24198: LD_INT 4
24200: PUSH
24201: EMPTY
24202: LIST
24203: LIST
24204: PUSH
24205: LD_INT 1
24207: NEG
24208: PUSH
24209: LD_INT 3
24211: PUSH
24212: EMPTY
24213: LIST
24214: LIST
24215: PUSH
24216: LD_INT 2
24218: PUSH
24219: LD_INT 5
24221: PUSH
24222: EMPTY
24223: LIST
24224: LIST
24225: PUSH
24226: LD_INT 2
24228: NEG
24229: PUSH
24230: LD_INT 3
24232: PUSH
24233: EMPTY
24234: LIST
24235: LIST
24236: PUSH
24237: LD_INT 3
24239: NEG
24240: PUSH
24241: LD_INT 0
24243: PUSH
24244: EMPTY
24245: LIST
24246: LIST
24247: PUSH
24248: LD_INT 3
24250: NEG
24251: PUSH
24252: LD_INT 1
24254: NEG
24255: PUSH
24256: EMPTY
24257: LIST
24258: LIST
24259: PUSH
24260: LD_INT 2
24262: NEG
24263: PUSH
24264: LD_INT 0
24266: PUSH
24267: EMPTY
24268: LIST
24269: LIST
24270: PUSH
24271: LD_INT 2
24273: NEG
24274: PUSH
24275: LD_INT 1
24277: PUSH
24278: EMPTY
24279: LIST
24280: LIST
24281: PUSH
24282: LD_INT 3
24284: NEG
24285: PUSH
24286: LD_INT 1
24288: PUSH
24289: EMPTY
24290: LIST
24291: LIST
24292: PUSH
24293: LD_INT 4
24295: NEG
24296: PUSH
24297: LD_INT 0
24299: PUSH
24300: EMPTY
24301: LIST
24302: LIST
24303: PUSH
24304: LD_INT 4
24306: NEG
24307: PUSH
24308: LD_INT 1
24310: NEG
24311: PUSH
24312: EMPTY
24313: LIST
24314: LIST
24315: PUSH
24316: LD_INT 4
24318: NEG
24319: PUSH
24320: LD_INT 2
24322: NEG
24323: PUSH
24324: EMPTY
24325: LIST
24326: LIST
24327: PUSH
24328: LD_INT 2
24330: NEG
24331: PUSH
24332: LD_INT 2
24334: PUSH
24335: EMPTY
24336: LIST
24337: LIST
24338: PUSH
24339: LD_INT 4
24341: NEG
24342: PUSH
24343: LD_INT 4
24345: NEG
24346: PUSH
24347: EMPTY
24348: LIST
24349: LIST
24350: PUSH
24351: LD_INT 4
24353: NEG
24354: PUSH
24355: LD_INT 5
24357: NEG
24358: PUSH
24359: EMPTY
24360: LIST
24361: LIST
24362: PUSH
24363: LD_INT 3
24365: NEG
24366: PUSH
24367: LD_INT 4
24369: NEG
24370: PUSH
24371: EMPTY
24372: LIST
24373: LIST
24374: PUSH
24375: LD_INT 3
24377: NEG
24378: PUSH
24379: LD_INT 3
24381: NEG
24382: PUSH
24383: EMPTY
24384: LIST
24385: LIST
24386: PUSH
24387: LD_INT 4
24389: NEG
24390: PUSH
24391: LD_INT 3
24393: NEG
24394: PUSH
24395: EMPTY
24396: LIST
24397: LIST
24398: PUSH
24399: LD_INT 5
24401: NEG
24402: PUSH
24403: LD_INT 4
24405: NEG
24406: PUSH
24407: EMPTY
24408: LIST
24409: LIST
24410: PUSH
24411: LD_INT 5
24413: NEG
24414: PUSH
24415: LD_INT 5
24417: NEG
24418: PUSH
24419: EMPTY
24420: LIST
24421: LIST
24422: PUSH
24423: LD_INT 3
24425: NEG
24426: PUSH
24427: LD_INT 5
24429: NEG
24430: PUSH
24431: EMPTY
24432: LIST
24433: LIST
24434: PUSH
24435: LD_INT 5
24437: NEG
24438: PUSH
24439: LD_INT 3
24441: NEG
24442: PUSH
24443: EMPTY
24444: LIST
24445: LIST
24446: PUSH
24447: LD_INT 0
24449: PUSH
24450: LD_INT 3
24452: NEG
24453: PUSH
24454: EMPTY
24455: LIST
24456: LIST
24457: PUSH
24458: LD_INT 0
24460: PUSH
24461: LD_INT 4
24463: NEG
24464: PUSH
24465: EMPTY
24466: LIST
24467: LIST
24468: PUSH
24469: LD_INT 1
24471: PUSH
24472: LD_INT 3
24474: NEG
24475: PUSH
24476: EMPTY
24477: LIST
24478: LIST
24479: PUSH
24480: LD_INT 1
24482: PUSH
24483: LD_INT 2
24485: NEG
24486: PUSH
24487: EMPTY
24488: LIST
24489: LIST
24490: PUSH
24491: LD_INT 0
24493: PUSH
24494: LD_INT 2
24496: NEG
24497: PUSH
24498: EMPTY
24499: LIST
24500: LIST
24501: PUSH
24502: LD_INT 1
24504: NEG
24505: PUSH
24506: LD_INT 3
24508: NEG
24509: PUSH
24510: EMPTY
24511: LIST
24512: LIST
24513: PUSH
24514: LD_INT 1
24516: NEG
24517: PUSH
24518: LD_INT 4
24520: NEG
24521: PUSH
24522: EMPTY
24523: LIST
24524: LIST
24525: PUSH
24526: LD_INT 2
24528: PUSH
24529: LD_INT 2
24531: NEG
24532: PUSH
24533: EMPTY
24534: LIST
24535: LIST
24536: PUSH
24537: LD_INT 2
24539: NEG
24540: PUSH
24541: LD_INT 4
24543: NEG
24544: PUSH
24545: EMPTY
24546: LIST
24547: LIST
24548: PUSH
24549: LD_INT 4
24551: PUSH
24552: LD_INT 0
24554: PUSH
24555: EMPTY
24556: LIST
24557: LIST
24558: PUSH
24559: LD_INT 4
24561: PUSH
24562: LD_INT 1
24564: NEG
24565: PUSH
24566: EMPTY
24567: LIST
24568: LIST
24569: PUSH
24570: LD_INT 5
24572: PUSH
24573: LD_INT 0
24575: PUSH
24576: EMPTY
24577: LIST
24578: LIST
24579: PUSH
24580: LD_INT 5
24582: PUSH
24583: LD_INT 1
24585: PUSH
24586: EMPTY
24587: LIST
24588: LIST
24589: PUSH
24590: LD_INT 4
24592: PUSH
24593: LD_INT 1
24595: PUSH
24596: EMPTY
24597: LIST
24598: LIST
24599: PUSH
24600: LD_INT 3
24602: PUSH
24603: LD_INT 0
24605: PUSH
24606: EMPTY
24607: LIST
24608: LIST
24609: PUSH
24610: LD_INT 3
24612: PUSH
24613: LD_INT 1
24615: NEG
24616: PUSH
24617: EMPTY
24618: LIST
24619: LIST
24620: PUSH
24621: LD_INT 3
24623: PUSH
24624: LD_INT 2
24626: NEG
24627: PUSH
24628: EMPTY
24629: LIST
24630: LIST
24631: PUSH
24632: LD_INT 5
24634: PUSH
24635: LD_INT 2
24637: PUSH
24638: EMPTY
24639: LIST
24640: LIST
24641: PUSH
24642: EMPTY
24643: LIST
24644: LIST
24645: LIST
24646: LIST
24647: LIST
24648: LIST
24649: LIST
24650: LIST
24651: LIST
24652: LIST
24653: LIST
24654: LIST
24655: LIST
24656: LIST
24657: LIST
24658: LIST
24659: LIST
24660: LIST
24661: LIST
24662: LIST
24663: LIST
24664: LIST
24665: LIST
24666: LIST
24667: LIST
24668: LIST
24669: LIST
24670: LIST
24671: LIST
24672: LIST
24673: LIST
24674: LIST
24675: LIST
24676: LIST
24677: LIST
24678: LIST
24679: LIST
24680: LIST
24681: LIST
24682: LIST
24683: LIST
24684: LIST
24685: LIST
24686: LIST
24687: LIST
24688: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24689: LD_ADDR_VAR 0 32
24693: PUSH
24694: LD_INT 4
24696: NEG
24697: PUSH
24698: LD_INT 0
24700: PUSH
24701: EMPTY
24702: LIST
24703: LIST
24704: PUSH
24705: LD_INT 4
24707: NEG
24708: PUSH
24709: LD_INT 1
24711: NEG
24712: PUSH
24713: EMPTY
24714: LIST
24715: LIST
24716: PUSH
24717: LD_INT 3
24719: NEG
24720: PUSH
24721: LD_INT 0
24723: PUSH
24724: EMPTY
24725: LIST
24726: LIST
24727: PUSH
24728: LD_INT 3
24730: NEG
24731: PUSH
24732: LD_INT 1
24734: PUSH
24735: EMPTY
24736: LIST
24737: LIST
24738: PUSH
24739: LD_INT 4
24741: NEG
24742: PUSH
24743: LD_INT 1
24745: PUSH
24746: EMPTY
24747: LIST
24748: LIST
24749: PUSH
24750: LD_INT 5
24752: NEG
24753: PUSH
24754: LD_INT 0
24756: PUSH
24757: EMPTY
24758: LIST
24759: LIST
24760: PUSH
24761: LD_INT 5
24763: NEG
24764: PUSH
24765: LD_INT 1
24767: NEG
24768: PUSH
24769: EMPTY
24770: LIST
24771: LIST
24772: PUSH
24773: LD_INT 5
24775: NEG
24776: PUSH
24777: LD_INT 2
24779: NEG
24780: PUSH
24781: EMPTY
24782: LIST
24783: LIST
24784: PUSH
24785: LD_INT 3
24787: NEG
24788: PUSH
24789: LD_INT 2
24791: PUSH
24792: EMPTY
24793: LIST
24794: LIST
24795: PUSH
24796: LD_INT 3
24798: NEG
24799: PUSH
24800: LD_INT 3
24802: NEG
24803: PUSH
24804: EMPTY
24805: LIST
24806: LIST
24807: PUSH
24808: LD_INT 3
24810: NEG
24811: PUSH
24812: LD_INT 4
24814: NEG
24815: PUSH
24816: EMPTY
24817: LIST
24818: LIST
24819: PUSH
24820: LD_INT 2
24822: NEG
24823: PUSH
24824: LD_INT 3
24826: NEG
24827: PUSH
24828: EMPTY
24829: LIST
24830: LIST
24831: PUSH
24832: LD_INT 2
24834: NEG
24835: PUSH
24836: LD_INT 2
24838: NEG
24839: PUSH
24840: EMPTY
24841: LIST
24842: LIST
24843: PUSH
24844: LD_INT 3
24846: NEG
24847: PUSH
24848: LD_INT 2
24850: NEG
24851: PUSH
24852: EMPTY
24853: LIST
24854: LIST
24855: PUSH
24856: LD_INT 4
24858: NEG
24859: PUSH
24860: LD_INT 3
24862: NEG
24863: PUSH
24864: EMPTY
24865: LIST
24866: LIST
24867: PUSH
24868: LD_INT 4
24870: NEG
24871: PUSH
24872: LD_INT 4
24874: NEG
24875: PUSH
24876: EMPTY
24877: LIST
24878: LIST
24879: PUSH
24880: LD_INT 2
24882: NEG
24883: PUSH
24884: LD_INT 4
24886: NEG
24887: PUSH
24888: EMPTY
24889: LIST
24890: LIST
24891: PUSH
24892: LD_INT 4
24894: NEG
24895: PUSH
24896: LD_INT 2
24898: NEG
24899: PUSH
24900: EMPTY
24901: LIST
24902: LIST
24903: PUSH
24904: LD_INT 0
24906: PUSH
24907: LD_INT 4
24909: NEG
24910: PUSH
24911: EMPTY
24912: LIST
24913: LIST
24914: PUSH
24915: LD_INT 0
24917: PUSH
24918: LD_INT 5
24920: NEG
24921: PUSH
24922: EMPTY
24923: LIST
24924: LIST
24925: PUSH
24926: LD_INT 1
24928: PUSH
24929: LD_INT 4
24931: NEG
24932: PUSH
24933: EMPTY
24934: LIST
24935: LIST
24936: PUSH
24937: LD_INT 1
24939: PUSH
24940: LD_INT 3
24942: NEG
24943: PUSH
24944: EMPTY
24945: LIST
24946: LIST
24947: PUSH
24948: LD_INT 0
24950: PUSH
24951: LD_INT 3
24953: NEG
24954: PUSH
24955: EMPTY
24956: LIST
24957: LIST
24958: PUSH
24959: LD_INT 1
24961: NEG
24962: PUSH
24963: LD_INT 4
24965: NEG
24966: PUSH
24967: EMPTY
24968: LIST
24969: LIST
24970: PUSH
24971: LD_INT 1
24973: NEG
24974: PUSH
24975: LD_INT 5
24977: NEG
24978: PUSH
24979: EMPTY
24980: LIST
24981: LIST
24982: PUSH
24983: LD_INT 2
24985: PUSH
24986: LD_INT 3
24988: NEG
24989: PUSH
24990: EMPTY
24991: LIST
24992: LIST
24993: PUSH
24994: LD_INT 2
24996: NEG
24997: PUSH
24998: LD_INT 5
25000: NEG
25001: PUSH
25002: EMPTY
25003: LIST
25004: LIST
25005: PUSH
25006: LD_INT 3
25008: PUSH
25009: LD_INT 0
25011: PUSH
25012: EMPTY
25013: LIST
25014: LIST
25015: PUSH
25016: LD_INT 3
25018: PUSH
25019: LD_INT 1
25021: NEG
25022: PUSH
25023: EMPTY
25024: LIST
25025: LIST
25026: PUSH
25027: LD_INT 4
25029: PUSH
25030: LD_INT 0
25032: PUSH
25033: EMPTY
25034: LIST
25035: LIST
25036: PUSH
25037: LD_INT 4
25039: PUSH
25040: LD_INT 1
25042: PUSH
25043: EMPTY
25044: LIST
25045: LIST
25046: PUSH
25047: LD_INT 3
25049: PUSH
25050: LD_INT 1
25052: PUSH
25053: EMPTY
25054: LIST
25055: LIST
25056: PUSH
25057: LD_INT 2
25059: PUSH
25060: LD_INT 0
25062: PUSH
25063: EMPTY
25064: LIST
25065: LIST
25066: PUSH
25067: LD_INT 2
25069: PUSH
25070: LD_INT 1
25072: NEG
25073: PUSH
25074: EMPTY
25075: LIST
25076: LIST
25077: PUSH
25078: LD_INT 2
25080: PUSH
25081: LD_INT 2
25083: NEG
25084: PUSH
25085: EMPTY
25086: LIST
25087: LIST
25088: PUSH
25089: LD_INT 4
25091: PUSH
25092: LD_INT 2
25094: PUSH
25095: EMPTY
25096: LIST
25097: LIST
25098: PUSH
25099: LD_INT 4
25101: PUSH
25102: LD_INT 4
25104: PUSH
25105: EMPTY
25106: LIST
25107: LIST
25108: PUSH
25109: LD_INT 4
25111: PUSH
25112: LD_INT 3
25114: PUSH
25115: EMPTY
25116: LIST
25117: LIST
25118: PUSH
25119: LD_INT 5
25121: PUSH
25122: LD_INT 4
25124: PUSH
25125: EMPTY
25126: LIST
25127: LIST
25128: PUSH
25129: LD_INT 5
25131: PUSH
25132: LD_INT 5
25134: PUSH
25135: EMPTY
25136: LIST
25137: LIST
25138: PUSH
25139: LD_INT 4
25141: PUSH
25142: LD_INT 5
25144: PUSH
25145: EMPTY
25146: LIST
25147: LIST
25148: PUSH
25149: LD_INT 3
25151: PUSH
25152: LD_INT 4
25154: PUSH
25155: EMPTY
25156: LIST
25157: LIST
25158: PUSH
25159: LD_INT 3
25161: PUSH
25162: LD_INT 3
25164: PUSH
25165: EMPTY
25166: LIST
25167: LIST
25168: PUSH
25169: LD_INT 5
25171: PUSH
25172: LD_INT 3
25174: PUSH
25175: EMPTY
25176: LIST
25177: LIST
25178: PUSH
25179: LD_INT 3
25181: PUSH
25182: LD_INT 5
25184: PUSH
25185: EMPTY
25186: LIST
25187: LIST
25188: PUSH
25189: EMPTY
25190: LIST
25191: LIST
25192: LIST
25193: LIST
25194: LIST
25195: LIST
25196: LIST
25197: LIST
25198: LIST
25199: LIST
25200: LIST
25201: LIST
25202: LIST
25203: LIST
25204: LIST
25205: LIST
25206: LIST
25207: LIST
25208: LIST
25209: LIST
25210: LIST
25211: LIST
25212: LIST
25213: LIST
25214: LIST
25215: LIST
25216: LIST
25217: LIST
25218: LIST
25219: LIST
25220: LIST
25221: LIST
25222: LIST
25223: LIST
25224: LIST
25225: LIST
25226: LIST
25227: LIST
25228: LIST
25229: LIST
25230: LIST
25231: LIST
25232: LIST
25233: LIST
25234: LIST
25235: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25236: LD_ADDR_VAR 0 33
25240: PUSH
25241: LD_INT 4
25243: NEG
25244: PUSH
25245: LD_INT 4
25247: NEG
25248: PUSH
25249: EMPTY
25250: LIST
25251: LIST
25252: PUSH
25253: LD_INT 4
25255: NEG
25256: PUSH
25257: LD_INT 5
25259: NEG
25260: PUSH
25261: EMPTY
25262: LIST
25263: LIST
25264: PUSH
25265: LD_INT 3
25267: NEG
25268: PUSH
25269: LD_INT 4
25271: NEG
25272: PUSH
25273: EMPTY
25274: LIST
25275: LIST
25276: PUSH
25277: LD_INT 3
25279: NEG
25280: PUSH
25281: LD_INT 3
25283: NEG
25284: PUSH
25285: EMPTY
25286: LIST
25287: LIST
25288: PUSH
25289: LD_INT 4
25291: NEG
25292: PUSH
25293: LD_INT 3
25295: NEG
25296: PUSH
25297: EMPTY
25298: LIST
25299: LIST
25300: PUSH
25301: LD_INT 5
25303: NEG
25304: PUSH
25305: LD_INT 4
25307: NEG
25308: PUSH
25309: EMPTY
25310: LIST
25311: LIST
25312: PUSH
25313: LD_INT 5
25315: NEG
25316: PUSH
25317: LD_INT 5
25319: NEG
25320: PUSH
25321: EMPTY
25322: LIST
25323: LIST
25324: PUSH
25325: LD_INT 3
25327: NEG
25328: PUSH
25329: LD_INT 5
25331: NEG
25332: PUSH
25333: EMPTY
25334: LIST
25335: LIST
25336: PUSH
25337: LD_INT 5
25339: NEG
25340: PUSH
25341: LD_INT 3
25343: NEG
25344: PUSH
25345: EMPTY
25346: LIST
25347: LIST
25348: PUSH
25349: LD_INT 0
25351: PUSH
25352: LD_INT 3
25354: NEG
25355: PUSH
25356: EMPTY
25357: LIST
25358: LIST
25359: PUSH
25360: LD_INT 0
25362: PUSH
25363: LD_INT 4
25365: NEG
25366: PUSH
25367: EMPTY
25368: LIST
25369: LIST
25370: PUSH
25371: LD_INT 1
25373: PUSH
25374: LD_INT 3
25376: NEG
25377: PUSH
25378: EMPTY
25379: LIST
25380: LIST
25381: PUSH
25382: LD_INT 1
25384: PUSH
25385: LD_INT 2
25387: NEG
25388: PUSH
25389: EMPTY
25390: LIST
25391: LIST
25392: PUSH
25393: LD_INT 0
25395: PUSH
25396: LD_INT 2
25398: NEG
25399: PUSH
25400: EMPTY
25401: LIST
25402: LIST
25403: PUSH
25404: LD_INT 1
25406: NEG
25407: PUSH
25408: LD_INT 3
25410: NEG
25411: PUSH
25412: EMPTY
25413: LIST
25414: LIST
25415: PUSH
25416: LD_INT 1
25418: NEG
25419: PUSH
25420: LD_INT 4
25422: NEG
25423: PUSH
25424: EMPTY
25425: LIST
25426: LIST
25427: PUSH
25428: LD_INT 2
25430: PUSH
25431: LD_INT 2
25433: NEG
25434: PUSH
25435: EMPTY
25436: LIST
25437: LIST
25438: PUSH
25439: LD_INT 2
25441: NEG
25442: PUSH
25443: LD_INT 4
25445: NEG
25446: PUSH
25447: EMPTY
25448: LIST
25449: LIST
25450: PUSH
25451: LD_INT 4
25453: PUSH
25454: LD_INT 0
25456: PUSH
25457: EMPTY
25458: LIST
25459: LIST
25460: PUSH
25461: LD_INT 4
25463: PUSH
25464: LD_INT 1
25466: NEG
25467: PUSH
25468: EMPTY
25469: LIST
25470: LIST
25471: PUSH
25472: LD_INT 5
25474: PUSH
25475: LD_INT 0
25477: PUSH
25478: EMPTY
25479: LIST
25480: LIST
25481: PUSH
25482: LD_INT 5
25484: PUSH
25485: LD_INT 1
25487: PUSH
25488: EMPTY
25489: LIST
25490: LIST
25491: PUSH
25492: LD_INT 4
25494: PUSH
25495: LD_INT 1
25497: PUSH
25498: EMPTY
25499: LIST
25500: LIST
25501: PUSH
25502: LD_INT 3
25504: PUSH
25505: LD_INT 0
25507: PUSH
25508: EMPTY
25509: LIST
25510: LIST
25511: PUSH
25512: LD_INT 3
25514: PUSH
25515: LD_INT 1
25517: NEG
25518: PUSH
25519: EMPTY
25520: LIST
25521: LIST
25522: PUSH
25523: LD_INT 3
25525: PUSH
25526: LD_INT 2
25528: NEG
25529: PUSH
25530: EMPTY
25531: LIST
25532: LIST
25533: PUSH
25534: LD_INT 5
25536: PUSH
25537: LD_INT 2
25539: PUSH
25540: EMPTY
25541: LIST
25542: LIST
25543: PUSH
25544: LD_INT 3
25546: PUSH
25547: LD_INT 3
25549: PUSH
25550: EMPTY
25551: LIST
25552: LIST
25553: PUSH
25554: LD_INT 3
25556: PUSH
25557: LD_INT 2
25559: PUSH
25560: EMPTY
25561: LIST
25562: LIST
25563: PUSH
25564: LD_INT 4
25566: PUSH
25567: LD_INT 3
25569: PUSH
25570: EMPTY
25571: LIST
25572: LIST
25573: PUSH
25574: LD_INT 4
25576: PUSH
25577: LD_INT 4
25579: PUSH
25580: EMPTY
25581: LIST
25582: LIST
25583: PUSH
25584: LD_INT 3
25586: PUSH
25587: LD_INT 4
25589: PUSH
25590: EMPTY
25591: LIST
25592: LIST
25593: PUSH
25594: LD_INT 2
25596: PUSH
25597: LD_INT 3
25599: PUSH
25600: EMPTY
25601: LIST
25602: LIST
25603: PUSH
25604: LD_INT 2
25606: PUSH
25607: LD_INT 2
25609: PUSH
25610: EMPTY
25611: LIST
25612: LIST
25613: PUSH
25614: LD_INT 4
25616: PUSH
25617: LD_INT 2
25619: PUSH
25620: EMPTY
25621: LIST
25622: LIST
25623: PUSH
25624: LD_INT 2
25626: PUSH
25627: LD_INT 4
25629: PUSH
25630: EMPTY
25631: LIST
25632: LIST
25633: PUSH
25634: LD_INT 0
25636: PUSH
25637: LD_INT 4
25639: PUSH
25640: EMPTY
25641: LIST
25642: LIST
25643: PUSH
25644: LD_INT 0
25646: PUSH
25647: LD_INT 3
25649: PUSH
25650: EMPTY
25651: LIST
25652: LIST
25653: PUSH
25654: LD_INT 1
25656: PUSH
25657: LD_INT 4
25659: PUSH
25660: EMPTY
25661: LIST
25662: LIST
25663: PUSH
25664: LD_INT 1
25666: PUSH
25667: LD_INT 5
25669: PUSH
25670: EMPTY
25671: LIST
25672: LIST
25673: PUSH
25674: LD_INT 0
25676: PUSH
25677: LD_INT 5
25679: PUSH
25680: EMPTY
25681: LIST
25682: LIST
25683: PUSH
25684: LD_INT 1
25686: NEG
25687: PUSH
25688: LD_INT 4
25690: PUSH
25691: EMPTY
25692: LIST
25693: LIST
25694: PUSH
25695: LD_INT 1
25697: NEG
25698: PUSH
25699: LD_INT 3
25701: PUSH
25702: EMPTY
25703: LIST
25704: LIST
25705: PUSH
25706: LD_INT 2
25708: PUSH
25709: LD_INT 5
25711: PUSH
25712: EMPTY
25713: LIST
25714: LIST
25715: PUSH
25716: LD_INT 2
25718: NEG
25719: PUSH
25720: LD_INT 3
25722: PUSH
25723: EMPTY
25724: LIST
25725: LIST
25726: PUSH
25727: EMPTY
25728: LIST
25729: LIST
25730: LIST
25731: LIST
25732: LIST
25733: LIST
25734: LIST
25735: LIST
25736: LIST
25737: LIST
25738: LIST
25739: LIST
25740: LIST
25741: LIST
25742: LIST
25743: LIST
25744: LIST
25745: LIST
25746: LIST
25747: LIST
25748: LIST
25749: LIST
25750: LIST
25751: LIST
25752: LIST
25753: LIST
25754: LIST
25755: LIST
25756: LIST
25757: LIST
25758: LIST
25759: LIST
25760: LIST
25761: LIST
25762: LIST
25763: LIST
25764: LIST
25765: LIST
25766: LIST
25767: LIST
25768: LIST
25769: LIST
25770: LIST
25771: LIST
25772: LIST
25773: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25774: LD_ADDR_VAR 0 34
25778: PUSH
25779: LD_INT 0
25781: PUSH
25782: LD_INT 4
25784: NEG
25785: PUSH
25786: EMPTY
25787: LIST
25788: LIST
25789: PUSH
25790: LD_INT 0
25792: PUSH
25793: LD_INT 5
25795: NEG
25796: PUSH
25797: EMPTY
25798: LIST
25799: LIST
25800: PUSH
25801: LD_INT 1
25803: PUSH
25804: LD_INT 4
25806: NEG
25807: PUSH
25808: EMPTY
25809: LIST
25810: LIST
25811: PUSH
25812: LD_INT 1
25814: PUSH
25815: LD_INT 3
25817: NEG
25818: PUSH
25819: EMPTY
25820: LIST
25821: LIST
25822: PUSH
25823: LD_INT 0
25825: PUSH
25826: LD_INT 3
25828: NEG
25829: PUSH
25830: EMPTY
25831: LIST
25832: LIST
25833: PUSH
25834: LD_INT 1
25836: NEG
25837: PUSH
25838: LD_INT 4
25840: NEG
25841: PUSH
25842: EMPTY
25843: LIST
25844: LIST
25845: PUSH
25846: LD_INT 1
25848: NEG
25849: PUSH
25850: LD_INT 5
25852: NEG
25853: PUSH
25854: EMPTY
25855: LIST
25856: LIST
25857: PUSH
25858: LD_INT 2
25860: PUSH
25861: LD_INT 3
25863: NEG
25864: PUSH
25865: EMPTY
25866: LIST
25867: LIST
25868: PUSH
25869: LD_INT 2
25871: NEG
25872: PUSH
25873: LD_INT 5
25875: NEG
25876: PUSH
25877: EMPTY
25878: LIST
25879: LIST
25880: PUSH
25881: LD_INT 3
25883: PUSH
25884: LD_INT 0
25886: PUSH
25887: EMPTY
25888: LIST
25889: LIST
25890: PUSH
25891: LD_INT 3
25893: PUSH
25894: LD_INT 1
25896: NEG
25897: PUSH
25898: EMPTY
25899: LIST
25900: LIST
25901: PUSH
25902: LD_INT 4
25904: PUSH
25905: LD_INT 0
25907: PUSH
25908: EMPTY
25909: LIST
25910: LIST
25911: PUSH
25912: LD_INT 4
25914: PUSH
25915: LD_INT 1
25917: PUSH
25918: EMPTY
25919: LIST
25920: LIST
25921: PUSH
25922: LD_INT 3
25924: PUSH
25925: LD_INT 1
25927: PUSH
25928: EMPTY
25929: LIST
25930: LIST
25931: PUSH
25932: LD_INT 2
25934: PUSH
25935: LD_INT 0
25937: PUSH
25938: EMPTY
25939: LIST
25940: LIST
25941: PUSH
25942: LD_INT 2
25944: PUSH
25945: LD_INT 1
25947: NEG
25948: PUSH
25949: EMPTY
25950: LIST
25951: LIST
25952: PUSH
25953: LD_INT 2
25955: PUSH
25956: LD_INT 2
25958: NEG
25959: PUSH
25960: EMPTY
25961: LIST
25962: LIST
25963: PUSH
25964: LD_INT 4
25966: PUSH
25967: LD_INT 2
25969: PUSH
25970: EMPTY
25971: LIST
25972: LIST
25973: PUSH
25974: LD_INT 4
25976: PUSH
25977: LD_INT 4
25979: PUSH
25980: EMPTY
25981: LIST
25982: LIST
25983: PUSH
25984: LD_INT 4
25986: PUSH
25987: LD_INT 3
25989: PUSH
25990: EMPTY
25991: LIST
25992: LIST
25993: PUSH
25994: LD_INT 5
25996: PUSH
25997: LD_INT 4
25999: PUSH
26000: EMPTY
26001: LIST
26002: LIST
26003: PUSH
26004: LD_INT 5
26006: PUSH
26007: LD_INT 5
26009: PUSH
26010: EMPTY
26011: LIST
26012: LIST
26013: PUSH
26014: LD_INT 4
26016: PUSH
26017: LD_INT 5
26019: PUSH
26020: EMPTY
26021: LIST
26022: LIST
26023: PUSH
26024: LD_INT 3
26026: PUSH
26027: LD_INT 4
26029: PUSH
26030: EMPTY
26031: LIST
26032: LIST
26033: PUSH
26034: LD_INT 3
26036: PUSH
26037: LD_INT 3
26039: PUSH
26040: EMPTY
26041: LIST
26042: LIST
26043: PUSH
26044: LD_INT 5
26046: PUSH
26047: LD_INT 3
26049: PUSH
26050: EMPTY
26051: LIST
26052: LIST
26053: PUSH
26054: LD_INT 3
26056: PUSH
26057: LD_INT 5
26059: PUSH
26060: EMPTY
26061: LIST
26062: LIST
26063: PUSH
26064: LD_INT 0
26066: PUSH
26067: LD_INT 3
26069: PUSH
26070: EMPTY
26071: LIST
26072: LIST
26073: PUSH
26074: LD_INT 0
26076: PUSH
26077: LD_INT 2
26079: PUSH
26080: EMPTY
26081: LIST
26082: LIST
26083: PUSH
26084: LD_INT 1
26086: PUSH
26087: LD_INT 3
26089: PUSH
26090: EMPTY
26091: LIST
26092: LIST
26093: PUSH
26094: LD_INT 1
26096: PUSH
26097: LD_INT 4
26099: PUSH
26100: EMPTY
26101: LIST
26102: LIST
26103: PUSH
26104: LD_INT 0
26106: PUSH
26107: LD_INT 4
26109: PUSH
26110: EMPTY
26111: LIST
26112: LIST
26113: PUSH
26114: LD_INT 1
26116: NEG
26117: PUSH
26118: LD_INT 3
26120: PUSH
26121: EMPTY
26122: LIST
26123: LIST
26124: PUSH
26125: LD_INT 1
26127: NEG
26128: PUSH
26129: LD_INT 2
26131: PUSH
26132: EMPTY
26133: LIST
26134: LIST
26135: PUSH
26136: LD_INT 2
26138: PUSH
26139: LD_INT 4
26141: PUSH
26142: EMPTY
26143: LIST
26144: LIST
26145: PUSH
26146: LD_INT 2
26148: NEG
26149: PUSH
26150: LD_INT 2
26152: PUSH
26153: EMPTY
26154: LIST
26155: LIST
26156: PUSH
26157: LD_INT 4
26159: NEG
26160: PUSH
26161: LD_INT 0
26163: PUSH
26164: EMPTY
26165: LIST
26166: LIST
26167: PUSH
26168: LD_INT 4
26170: NEG
26171: PUSH
26172: LD_INT 1
26174: NEG
26175: PUSH
26176: EMPTY
26177: LIST
26178: LIST
26179: PUSH
26180: LD_INT 3
26182: NEG
26183: PUSH
26184: LD_INT 0
26186: PUSH
26187: EMPTY
26188: LIST
26189: LIST
26190: PUSH
26191: LD_INT 3
26193: NEG
26194: PUSH
26195: LD_INT 1
26197: PUSH
26198: EMPTY
26199: LIST
26200: LIST
26201: PUSH
26202: LD_INT 4
26204: NEG
26205: PUSH
26206: LD_INT 1
26208: PUSH
26209: EMPTY
26210: LIST
26211: LIST
26212: PUSH
26213: LD_INT 5
26215: NEG
26216: PUSH
26217: LD_INT 0
26219: PUSH
26220: EMPTY
26221: LIST
26222: LIST
26223: PUSH
26224: LD_INT 5
26226: NEG
26227: PUSH
26228: LD_INT 1
26230: NEG
26231: PUSH
26232: EMPTY
26233: LIST
26234: LIST
26235: PUSH
26236: LD_INT 5
26238: NEG
26239: PUSH
26240: LD_INT 2
26242: NEG
26243: PUSH
26244: EMPTY
26245: LIST
26246: LIST
26247: PUSH
26248: LD_INT 3
26250: NEG
26251: PUSH
26252: LD_INT 2
26254: PUSH
26255: EMPTY
26256: LIST
26257: LIST
26258: PUSH
26259: EMPTY
26260: LIST
26261: LIST
26262: LIST
26263: LIST
26264: LIST
26265: LIST
26266: LIST
26267: LIST
26268: LIST
26269: LIST
26270: LIST
26271: LIST
26272: LIST
26273: LIST
26274: LIST
26275: LIST
26276: LIST
26277: LIST
26278: LIST
26279: LIST
26280: LIST
26281: LIST
26282: LIST
26283: LIST
26284: LIST
26285: LIST
26286: LIST
26287: LIST
26288: LIST
26289: LIST
26290: LIST
26291: LIST
26292: LIST
26293: LIST
26294: LIST
26295: LIST
26296: LIST
26297: LIST
26298: LIST
26299: LIST
26300: LIST
26301: LIST
26302: LIST
26303: LIST
26304: LIST
26305: ST_TO_ADDR
// end ; end ;
26306: GO 26309
26308: POP
// case btype of b_depot , b_warehouse :
26309: LD_VAR 0 1
26313: PUSH
26314: LD_INT 0
26316: DOUBLE
26317: EQUAL
26318: IFTRUE 26328
26320: LD_INT 1
26322: DOUBLE
26323: EQUAL
26324: IFTRUE 26328
26326: GO 26529
26328: POP
// case nation of nation_american :
26329: LD_VAR 0 5
26333: PUSH
26334: LD_INT 1
26336: DOUBLE
26337: EQUAL
26338: IFTRUE 26342
26340: GO 26398
26342: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26343: LD_ADDR_VAR 0 9
26347: PUSH
26348: LD_VAR 0 11
26352: PUSH
26353: LD_VAR 0 12
26357: PUSH
26358: LD_VAR 0 13
26362: PUSH
26363: LD_VAR 0 14
26367: PUSH
26368: LD_VAR 0 15
26372: PUSH
26373: LD_VAR 0 16
26377: PUSH
26378: EMPTY
26379: LIST
26380: LIST
26381: LIST
26382: LIST
26383: LIST
26384: LIST
26385: PUSH
26386: LD_VAR 0 4
26390: PUSH
26391: LD_INT 1
26393: PLUS
26394: ARRAY
26395: ST_TO_ADDR
26396: GO 26527
26398: LD_INT 2
26400: DOUBLE
26401: EQUAL
26402: IFTRUE 26406
26404: GO 26462
26406: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26407: LD_ADDR_VAR 0 9
26411: PUSH
26412: LD_VAR 0 17
26416: PUSH
26417: LD_VAR 0 18
26421: PUSH
26422: LD_VAR 0 19
26426: PUSH
26427: LD_VAR 0 20
26431: PUSH
26432: LD_VAR 0 21
26436: PUSH
26437: LD_VAR 0 22
26441: PUSH
26442: EMPTY
26443: LIST
26444: LIST
26445: LIST
26446: LIST
26447: LIST
26448: LIST
26449: PUSH
26450: LD_VAR 0 4
26454: PUSH
26455: LD_INT 1
26457: PLUS
26458: ARRAY
26459: ST_TO_ADDR
26460: GO 26527
26462: LD_INT 3
26464: DOUBLE
26465: EQUAL
26466: IFTRUE 26470
26468: GO 26526
26470: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26471: LD_ADDR_VAR 0 9
26475: PUSH
26476: LD_VAR 0 23
26480: PUSH
26481: LD_VAR 0 24
26485: PUSH
26486: LD_VAR 0 25
26490: PUSH
26491: LD_VAR 0 26
26495: PUSH
26496: LD_VAR 0 27
26500: PUSH
26501: LD_VAR 0 28
26505: PUSH
26506: EMPTY
26507: LIST
26508: LIST
26509: LIST
26510: LIST
26511: LIST
26512: LIST
26513: PUSH
26514: LD_VAR 0 4
26518: PUSH
26519: LD_INT 1
26521: PLUS
26522: ARRAY
26523: ST_TO_ADDR
26524: GO 26527
26526: POP
26527: GO 27076
26529: LD_INT 2
26531: DOUBLE
26532: EQUAL
26533: IFTRUE 26543
26535: LD_INT 3
26537: DOUBLE
26538: EQUAL
26539: IFTRUE 26543
26541: GO 26599
26543: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26544: LD_ADDR_VAR 0 9
26548: PUSH
26549: LD_VAR 0 29
26553: PUSH
26554: LD_VAR 0 30
26558: PUSH
26559: LD_VAR 0 31
26563: PUSH
26564: LD_VAR 0 32
26568: PUSH
26569: LD_VAR 0 33
26573: PUSH
26574: LD_VAR 0 34
26578: PUSH
26579: EMPTY
26580: LIST
26581: LIST
26582: LIST
26583: LIST
26584: LIST
26585: LIST
26586: PUSH
26587: LD_VAR 0 4
26591: PUSH
26592: LD_INT 1
26594: PLUS
26595: ARRAY
26596: ST_TO_ADDR
26597: GO 27076
26599: LD_INT 16
26601: DOUBLE
26602: EQUAL
26603: IFTRUE 26655
26605: LD_INT 17
26607: DOUBLE
26608: EQUAL
26609: IFTRUE 26655
26611: LD_INT 18
26613: DOUBLE
26614: EQUAL
26615: IFTRUE 26655
26617: LD_INT 19
26619: DOUBLE
26620: EQUAL
26621: IFTRUE 26655
26623: LD_INT 20
26625: DOUBLE
26626: EQUAL
26627: IFTRUE 26655
26629: LD_INT 21
26631: DOUBLE
26632: EQUAL
26633: IFTRUE 26655
26635: LD_INT 23
26637: DOUBLE
26638: EQUAL
26639: IFTRUE 26655
26641: LD_INT 24
26643: DOUBLE
26644: EQUAL
26645: IFTRUE 26655
26647: LD_INT 25
26649: DOUBLE
26650: EQUAL
26651: IFTRUE 26655
26653: GO 26711
26655: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26656: LD_ADDR_VAR 0 9
26660: PUSH
26661: LD_VAR 0 35
26665: PUSH
26666: LD_VAR 0 36
26670: PUSH
26671: LD_VAR 0 37
26675: PUSH
26676: LD_VAR 0 38
26680: PUSH
26681: LD_VAR 0 39
26685: PUSH
26686: LD_VAR 0 40
26690: PUSH
26691: EMPTY
26692: LIST
26693: LIST
26694: LIST
26695: LIST
26696: LIST
26697: LIST
26698: PUSH
26699: LD_VAR 0 4
26703: PUSH
26704: LD_INT 1
26706: PLUS
26707: ARRAY
26708: ST_TO_ADDR
26709: GO 27076
26711: LD_INT 6
26713: DOUBLE
26714: EQUAL
26715: IFTRUE 26767
26717: LD_INT 7
26719: DOUBLE
26720: EQUAL
26721: IFTRUE 26767
26723: LD_INT 8
26725: DOUBLE
26726: EQUAL
26727: IFTRUE 26767
26729: LD_INT 13
26731: DOUBLE
26732: EQUAL
26733: IFTRUE 26767
26735: LD_INT 12
26737: DOUBLE
26738: EQUAL
26739: IFTRUE 26767
26741: LD_INT 15
26743: DOUBLE
26744: EQUAL
26745: IFTRUE 26767
26747: LD_INT 11
26749: DOUBLE
26750: EQUAL
26751: IFTRUE 26767
26753: LD_INT 14
26755: DOUBLE
26756: EQUAL
26757: IFTRUE 26767
26759: LD_INT 10
26761: DOUBLE
26762: EQUAL
26763: IFTRUE 26767
26765: GO 26823
26767: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26768: LD_ADDR_VAR 0 9
26772: PUSH
26773: LD_VAR 0 41
26777: PUSH
26778: LD_VAR 0 42
26782: PUSH
26783: LD_VAR 0 43
26787: PUSH
26788: LD_VAR 0 44
26792: PUSH
26793: LD_VAR 0 45
26797: PUSH
26798: LD_VAR 0 46
26802: PUSH
26803: EMPTY
26804: LIST
26805: LIST
26806: LIST
26807: LIST
26808: LIST
26809: LIST
26810: PUSH
26811: LD_VAR 0 4
26815: PUSH
26816: LD_INT 1
26818: PLUS
26819: ARRAY
26820: ST_TO_ADDR
26821: GO 27076
26823: LD_INT 36
26825: DOUBLE
26826: EQUAL
26827: IFTRUE 26831
26829: GO 26887
26831: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26832: LD_ADDR_VAR 0 9
26836: PUSH
26837: LD_VAR 0 47
26841: PUSH
26842: LD_VAR 0 48
26846: PUSH
26847: LD_VAR 0 49
26851: PUSH
26852: LD_VAR 0 50
26856: PUSH
26857: LD_VAR 0 51
26861: PUSH
26862: LD_VAR 0 52
26866: PUSH
26867: EMPTY
26868: LIST
26869: LIST
26870: LIST
26871: LIST
26872: LIST
26873: LIST
26874: PUSH
26875: LD_VAR 0 4
26879: PUSH
26880: LD_INT 1
26882: PLUS
26883: ARRAY
26884: ST_TO_ADDR
26885: GO 27076
26887: LD_INT 4
26889: DOUBLE
26890: EQUAL
26891: IFTRUE 26913
26893: LD_INT 5
26895: DOUBLE
26896: EQUAL
26897: IFTRUE 26913
26899: LD_INT 34
26901: DOUBLE
26902: EQUAL
26903: IFTRUE 26913
26905: LD_INT 37
26907: DOUBLE
26908: EQUAL
26909: IFTRUE 26913
26911: GO 26969
26913: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26914: LD_ADDR_VAR 0 9
26918: PUSH
26919: LD_VAR 0 53
26923: PUSH
26924: LD_VAR 0 54
26928: PUSH
26929: LD_VAR 0 55
26933: PUSH
26934: LD_VAR 0 56
26938: PUSH
26939: LD_VAR 0 57
26943: PUSH
26944: LD_VAR 0 58
26948: PUSH
26949: EMPTY
26950: LIST
26951: LIST
26952: LIST
26953: LIST
26954: LIST
26955: LIST
26956: PUSH
26957: LD_VAR 0 4
26961: PUSH
26962: LD_INT 1
26964: PLUS
26965: ARRAY
26966: ST_TO_ADDR
26967: GO 27076
26969: LD_INT 31
26971: DOUBLE
26972: EQUAL
26973: IFTRUE 27019
26975: LD_INT 32
26977: DOUBLE
26978: EQUAL
26979: IFTRUE 27019
26981: LD_INT 33
26983: DOUBLE
26984: EQUAL
26985: IFTRUE 27019
26987: LD_INT 27
26989: DOUBLE
26990: EQUAL
26991: IFTRUE 27019
26993: LD_INT 26
26995: DOUBLE
26996: EQUAL
26997: IFTRUE 27019
26999: LD_INT 28
27001: DOUBLE
27002: EQUAL
27003: IFTRUE 27019
27005: LD_INT 29
27007: DOUBLE
27008: EQUAL
27009: IFTRUE 27019
27011: LD_INT 30
27013: DOUBLE
27014: EQUAL
27015: IFTRUE 27019
27017: GO 27075
27019: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27020: LD_ADDR_VAR 0 9
27024: PUSH
27025: LD_VAR 0 59
27029: PUSH
27030: LD_VAR 0 60
27034: PUSH
27035: LD_VAR 0 61
27039: PUSH
27040: LD_VAR 0 62
27044: PUSH
27045: LD_VAR 0 63
27049: PUSH
27050: LD_VAR 0 64
27054: PUSH
27055: EMPTY
27056: LIST
27057: LIST
27058: LIST
27059: LIST
27060: LIST
27061: LIST
27062: PUSH
27063: LD_VAR 0 4
27067: PUSH
27068: LD_INT 1
27070: PLUS
27071: ARRAY
27072: ST_TO_ADDR
27073: GO 27076
27075: POP
// temp_list2 = [ ] ;
27076: LD_ADDR_VAR 0 10
27080: PUSH
27081: EMPTY
27082: ST_TO_ADDR
// for i in temp_list do
27083: LD_ADDR_VAR 0 8
27087: PUSH
27088: LD_VAR 0 9
27092: PUSH
27093: FOR_IN
27094: IFFALSE 27146
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27096: LD_ADDR_VAR 0 10
27100: PUSH
27101: LD_VAR 0 10
27105: PUSH
27106: LD_VAR 0 8
27110: PUSH
27111: LD_INT 1
27113: ARRAY
27114: PUSH
27115: LD_VAR 0 2
27119: PLUS
27120: PUSH
27121: LD_VAR 0 8
27125: PUSH
27126: LD_INT 2
27128: ARRAY
27129: PUSH
27130: LD_VAR 0 3
27134: PLUS
27135: PUSH
27136: EMPTY
27137: LIST
27138: LIST
27139: PUSH
27140: EMPTY
27141: LIST
27142: ADD
27143: ST_TO_ADDR
27144: GO 27093
27146: POP
27147: POP
// result = temp_list2 ;
27148: LD_ADDR_VAR 0 7
27152: PUSH
27153: LD_VAR 0 10
27157: ST_TO_ADDR
// end ;
27158: LD_VAR 0 7
27162: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27163: LD_INT 0
27165: PPUSH
27166: PPUSH
27167: PPUSH
// result := false ;
27168: LD_ADDR_VAR 0 4
27172: PUSH
27173: LD_INT 0
27175: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27176: LD_VAR 0 1
27180: NOT
27181: PUSH
27182: LD_VAR 0 2
27186: NOT
27187: OR
27188: PUSH
27189: LD_VAR 0 1
27193: PPUSH
27194: CALL_OW 310
27198: OR
27199: IFFALSE 27203
// exit ;
27201: GO 27407
// if distance < 0 then
27203: LD_VAR 0 3
27207: PUSH
27208: LD_INT 0
27210: LESS
27211: IFFALSE 27221
// distance := 0 ;
27213: LD_ADDR_VAR 0 3
27217: PUSH
27218: LD_INT 0
27220: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27221: LD_ADDR_VAR 0 6
27225: PUSH
27226: LD_VAR 0 2
27230: PPUSH
27231: CALL_OW 266
27235: PPUSH
27236: LD_VAR 0 2
27240: PPUSH
27241: CALL_OW 250
27245: PPUSH
27246: LD_VAR 0 2
27250: PPUSH
27251: CALL_OW 251
27255: PPUSH
27256: LD_VAR 0 2
27260: PPUSH
27261: CALL_OW 254
27265: PPUSH
27266: LD_VAR 0 2
27270: PPUSH
27271: CALL_OW 248
27275: PPUSH
27276: LD_INT 1
27278: PPUSH
27279: CALL 8624 0 6
27283: ST_TO_ADDR
// if not entrance then
27284: LD_VAR 0 6
27288: NOT
27289: IFFALSE 27293
// exit ;
27291: GO 27407
// for i in entrance do
27293: LD_ADDR_VAR 0 5
27297: PUSH
27298: LD_VAR 0 6
27302: PUSH
27303: FOR_IN
27304: IFFALSE 27405
// begin if not distance then
27306: LD_VAR 0 3
27310: NOT
27311: IFFALSE 27356
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27313: LD_VAR 0 1
27317: PPUSH
27318: LD_VAR 0 5
27322: PUSH
27323: LD_INT 1
27325: ARRAY
27326: PPUSH
27327: LD_VAR 0 5
27331: PUSH
27332: LD_INT 2
27334: ARRAY
27335: PPUSH
27336: CALL_OW 307
27340: IFFALSE 27354
// begin result := true ;
27342: LD_ADDR_VAR 0 4
27346: PUSH
27347: LD_INT 1
27349: ST_TO_ADDR
// exit ;
27350: POP
27351: POP
27352: GO 27407
// end ; end else
27354: GO 27403
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27356: LD_VAR 0 1
27360: PPUSH
27361: LD_VAR 0 5
27365: PUSH
27366: LD_INT 1
27368: ARRAY
27369: PPUSH
27370: LD_VAR 0 5
27374: PUSH
27375: LD_INT 2
27377: ARRAY
27378: PPUSH
27379: CALL_OW 297
27383: PUSH
27384: LD_VAR 0 3
27388: LESSEQUAL
27389: IFFALSE 27403
// begin result := true ;
27391: LD_ADDR_VAR 0 4
27395: PUSH
27396: LD_INT 1
27398: ST_TO_ADDR
// exit ;
27399: POP
27400: POP
27401: GO 27407
// end ; end ; end ;
27403: GO 27303
27405: POP
27406: POP
// end ;
27407: LD_VAR 0 4
27411: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27412: LD_INT 0
27414: PPUSH
27415: PPUSH
27416: PPUSH
// result := false ;
27417: LD_ADDR_VAR 0 3
27421: PUSH
27422: LD_INT 0
27424: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27425: LD_VAR 0 1
27429: NOT
27430: PUSH
27431: LD_VAR 0 2
27435: NOT
27436: OR
27437: PUSH
27438: LD_VAR 0 1
27442: PPUSH
27443: CALL_OW 302
27447: NOT
27448: OR
27449: PUSH
27450: LD_VAR 0 2
27454: PPUSH
27455: CALL_OW 302
27459: NOT
27460: OR
27461: IFFALSE 27465
// exit ;
27463: GO 27626
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27465: LD_VAR 0 1
27469: PPUSH
27470: LD_INT 81
27472: PUSH
27473: LD_VAR 0 1
27477: PPUSH
27478: CALL_OW 255
27482: PUSH
27483: EMPTY
27484: LIST
27485: LIST
27486: PUSH
27487: LD_INT 3
27489: PUSH
27490: LD_INT 21
27492: PUSH
27493: LD_INT 3
27495: PUSH
27496: EMPTY
27497: LIST
27498: LIST
27499: PUSH
27500: EMPTY
27501: LIST
27502: LIST
27503: PUSH
27504: EMPTY
27505: LIST
27506: LIST
27507: PPUSH
27508: CALL_OW 69
27512: PPUSH
27513: LD_VAR 0 1
27517: PPUSH
27518: CALL_OW 74
27522: PPUSH
27523: CALL_OW 296
27527: PUSH
27528: LD_INT 8
27530: LESS
27531: IFFALSE 27535
// exit ;
27533: GO 27626
// building := IsInUnit ( unit2 ) ;
27535: LD_ADDR_VAR 0 5
27539: PUSH
27540: LD_VAR 0 2
27544: PPUSH
27545: CALL_OW 310
27549: ST_TO_ADDR
// if building then
27550: LD_VAR 0 5
27554: IFFALSE 27581
// result := IsNearbyEntrance ( unit , building , 2 ) else
27556: LD_ADDR_VAR 0 3
27560: PUSH
27561: LD_VAR 0 1
27565: PPUSH
27566: LD_VAR 0 5
27570: PPUSH
27571: LD_INT 2
27573: PPUSH
27574: CALL 27163 0 3
27578: ST_TO_ADDR
27579: GO 27626
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27581: LD_ADDR_VAR 0 3
27585: PUSH
27586: LD_VAR 0 1
27590: PPUSH
27591: LD_VAR 0 2
27595: PPUSH
27596: CALL_OW 296
27600: PUSH
27601: LD_INT 6
27603: LESS
27604: PUSH
27605: LD_VAR 0 2
27609: PPUSH
27610: CALL_OW 255
27614: PPUSH
27615: LD_VAR 0 1
27619: PPUSH
27620: CALL_OW 292
27624: AND
27625: ST_TO_ADDR
// end ;
27626: LD_VAR 0 3
27630: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27631: LD_INT 0
27633: PPUSH
27634: PPUSH
27635: PPUSH
27636: PPUSH
// tmp := [ ] ;
27637: LD_ADDR_VAR 0 3
27641: PUSH
27642: EMPTY
27643: ST_TO_ADDR
// list := [ ] ;
27644: LD_ADDR_VAR 0 5
27648: PUSH
27649: EMPTY
27650: ST_TO_ADDR
// for i = 16 to 25 do
27651: LD_ADDR_VAR 0 4
27655: PUSH
27656: DOUBLE
27657: LD_INT 16
27659: DEC
27660: ST_TO_ADDR
27661: LD_INT 25
27663: PUSH
27664: FOR_TO
27665: IFFALSE 27738
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27667: LD_ADDR_VAR 0 3
27671: PUSH
27672: LD_VAR 0 3
27676: PUSH
27677: LD_INT 22
27679: PUSH
27680: LD_VAR 0 1
27684: PPUSH
27685: CALL_OW 255
27689: PUSH
27690: EMPTY
27691: LIST
27692: LIST
27693: PUSH
27694: LD_INT 91
27696: PUSH
27697: LD_VAR 0 1
27701: PUSH
27702: LD_INT 6
27704: PUSH
27705: EMPTY
27706: LIST
27707: LIST
27708: LIST
27709: PUSH
27710: LD_INT 30
27712: PUSH
27713: LD_VAR 0 4
27717: PUSH
27718: EMPTY
27719: LIST
27720: LIST
27721: PUSH
27722: EMPTY
27723: LIST
27724: LIST
27725: LIST
27726: PUSH
27727: EMPTY
27728: LIST
27729: PPUSH
27730: CALL_OW 69
27734: ADD
27735: ST_TO_ADDR
27736: GO 27664
27738: POP
27739: POP
// for i = 1 to tmp do
27740: LD_ADDR_VAR 0 4
27744: PUSH
27745: DOUBLE
27746: LD_INT 1
27748: DEC
27749: ST_TO_ADDR
27750: LD_VAR 0 3
27754: PUSH
27755: FOR_TO
27756: IFFALSE 27844
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27758: LD_ADDR_VAR 0 5
27762: PUSH
27763: LD_VAR 0 5
27767: PUSH
27768: LD_VAR 0 3
27772: PUSH
27773: LD_VAR 0 4
27777: ARRAY
27778: PPUSH
27779: CALL_OW 266
27783: PUSH
27784: LD_VAR 0 3
27788: PUSH
27789: LD_VAR 0 4
27793: ARRAY
27794: PPUSH
27795: CALL_OW 250
27799: PUSH
27800: LD_VAR 0 3
27804: PUSH
27805: LD_VAR 0 4
27809: ARRAY
27810: PPUSH
27811: CALL_OW 251
27815: PUSH
27816: LD_VAR 0 3
27820: PUSH
27821: LD_VAR 0 4
27825: ARRAY
27826: PPUSH
27827: CALL_OW 254
27831: PUSH
27832: EMPTY
27833: LIST
27834: LIST
27835: LIST
27836: LIST
27837: PUSH
27838: EMPTY
27839: LIST
27840: ADD
27841: ST_TO_ADDR
27842: GO 27755
27844: POP
27845: POP
// result := list ;
27846: LD_ADDR_VAR 0 2
27850: PUSH
27851: LD_VAR 0 5
27855: ST_TO_ADDR
// end ;
27856: LD_VAR 0 2
27860: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27861: LD_INT 0
27863: PPUSH
27864: PPUSH
27865: PPUSH
27866: PPUSH
27867: PPUSH
27868: PPUSH
27869: PPUSH
// if not factory then
27870: LD_VAR 0 1
27874: NOT
27875: IFFALSE 27879
// exit ;
27877: GO 28404
// if control = control_apeman then
27879: LD_VAR 0 4
27883: PUSH
27884: LD_INT 5
27886: EQUAL
27887: IFFALSE 27996
// begin tmp := UnitsInside ( factory ) ;
27889: LD_ADDR_VAR 0 8
27893: PUSH
27894: LD_VAR 0 1
27898: PPUSH
27899: CALL_OW 313
27903: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27904: LD_VAR 0 8
27908: PPUSH
27909: LD_INT 25
27911: PUSH
27912: LD_INT 12
27914: PUSH
27915: EMPTY
27916: LIST
27917: LIST
27918: PPUSH
27919: CALL_OW 72
27923: NOT
27924: IFFALSE 27934
// control := control_manual ;
27926: LD_ADDR_VAR 0 4
27930: PUSH
27931: LD_INT 1
27933: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27934: LD_ADDR_VAR 0 8
27938: PUSH
27939: LD_VAR 0 1
27943: PPUSH
27944: CALL 27631 0 1
27948: ST_TO_ADDR
// if tmp then
27949: LD_VAR 0 8
27953: IFFALSE 27996
// begin for i in tmp do
27955: LD_ADDR_VAR 0 7
27959: PUSH
27960: LD_VAR 0 8
27964: PUSH
27965: FOR_IN
27966: IFFALSE 27994
// if i [ 1 ] = b_ext_radar then
27968: LD_VAR 0 7
27972: PUSH
27973: LD_INT 1
27975: ARRAY
27976: PUSH
27977: LD_INT 20
27979: EQUAL
27980: IFFALSE 27992
// begin control := control_remote ;
27982: LD_ADDR_VAR 0 4
27986: PUSH
27987: LD_INT 2
27989: ST_TO_ADDR
// break ;
27990: GO 27994
// end ;
27992: GO 27965
27994: POP
27995: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27996: LD_VAR 0 1
28000: PPUSH
28001: LD_VAR 0 2
28005: PPUSH
28006: LD_VAR 0 3
28010: PPUSH
28011: LD_VAR 0 4
28015: PPUSH
28016: LD_VAR 0 5
28020: PPUSH
28021: CALL_OW 448
28025: IFFALSE 28060
// begin result := [ chassis , engine , control , weapon ] ;
28027: LD_ADDR_VAR 0 6
28031: PUSH
28032: LD_VAR 0 2
28036: PUSH
28037: LD_VAR 0 3
28041: PUSH
28042: LD_VAR 0 4
28046: PUSH
28047: LD_VAR 0 5
28051: PUSH
28052: EMPTY
28053: LIST
28054: LIST
28055: LIST
28056: LIST
28057: ST_TO_ADDR
// exit ;
28058: GO 28404
// end ; _chassis := AvailableChassisList ( factory ) ;
28060: LD_ADDR_VAR 0 9
28064: PUSH
28065: LD_VAR 0 1
28069: PPUSH
28070: CALL_OW 475
28074: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28075: LD_ADDR_VAR 0 11
28079: PUSH
28080: LD_VAR 0 1
28084: PPUSH
28085: CALL_OW 476
28089: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28090: LD_ADDR_VAR 0 12
28094: PUSH
28095: LD_VAR 0 1
28099: PPUSH
28100: CALL_OW 477
28104: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28105: LD_ADDR_VAR 0 10
28109: PUSH
28110: LD_VAR 0 1
28114: PPUSH
28115: CALL_OW 478
28119: ST_TO_ADDR
// if not chassis in _chassis then
28120: LD_VAR 0 2
28124: PUSH
28125: LD_VAR 0 9
28129: IN
28130: NOT
28131: IFFALSE 28157
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28133: LD_ADDR_VAR 0 2
28137: PUSH
28138: LD_VAR 0 9
28142: PUSH
28143: LD_INT 1
28145: PPUSH
28146: LD_VAR 0 9
28150: PPUSH
28151: CALL_OW 12
28155: ARRAY
28156: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28157: LD_VAR 0 2
28161: PPUSH
28162: LD_VAR 0 3
28166: PPUSH
28167: CALL 28409 0 2
28171: NOT
28172: IFFALSE 28231
// repeat engine := _engine [ 1 ] ;
28174: LD_ADDR_VAR 0 3
28178: PUSH
28179: LD_VAR 0 11
28183: PUSH
28184: LD_INT 1
28186: ARRAY
28187: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28188: LD_ADDR_VAR 0 11
28192: PUSH
28193: LD_VAR 0 11
28197: PPUSH
28198: LD_INT 1
28200: PPUSH
28201: CALL_OW 3
28205: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28206: LD_VAR 0 2
28210: PPUSH
28211: LD_VAR 0 3
28215: PPUSH
28216: CALL 28409 0 2
28220: PUSH
28221: LD_VAR 0 11
28225: PUSH
28226: EMPTY
28227: EQUAL
28228: OR
28229: IFFALSE 28174
// if not control in _control then
28231: LD_VAR 0 4
28235: PUSH
28236: LD_VAR 0 12
28240: IN
28241: NOT
28242: IFFALSE 28268
// control := _control [ rand ( 1 , _control ) ] ;
28244: LD_ADDR_VAR 0 4
28248: PUSH
28249: LD_VAR 0 12
28253: PUSH
28254: LD_INT 1
28256: PPUSH
28257: LD_VAR 0 12
28261: PPUSH
28262: CALL_OW 12
28266: ARRAY
28267: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28268: LD_VAR 0 2
28272: PPUSH
28273: LD_VAR 0 5
28277: PPUSH
28278: CALL 28629 0 2
28282: NOT
28283: IFFALSE 28342
// repeat weapon := _weapon [ 1 ] ;
28285: LD_ADDR_VAR 0 5
28289: PUSH
28290: LD_VAR 0 10
28294: PUSH
28295: LD_INT 1
28297: ARRAY
28298: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28299: LD_ADDR_VAR 0 10
28303: PUSH
28304: LD_VAR 0 10
28308: PPUSH
28309: LD_INT 1
28311: PPUSH
28312: CALL_OW 3
28316: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28317: LD_VAR 0 2
28321: PPUSH
28322: LD_VAR 0 5
28326: PPUSH
28327: CALL 28629 0 2
28331: PUSH
28332: LD_VAR 0 10
28336: PUSH
28337: EMPTY
28338: EQUAL
28339: OR
28340: IFFALSE 28285
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28342: LD_VAR 0 1
28346: PPUSH
28347: LD_VAR 0 2
28351: PPUSH
28352: LD_VAR 0 3
28356: PPUSH
28357: LD_VAR 0 4
28361: PPUSH
28362: LD_VAR 0 5
28366: PPUSH
28367: CALL_OW 448
28371: IFFALSE 28404
// result := [ chassis , engine , control , weapon ] ;
28373: LD_ADDR_VAR 0 6
28377: PUSH
28378: LD_VAR 0 2
28382: PUSH
28383: LD_VAR 0 3
28387: PUSH
28388: LD_VAR 0 4
28392: PUSH
28393: LD_VAR 0 5
28397: PUSH
28398: EMPTY
28399: LIST
28400: LIST
28401: LIST
28402: LIST
28403: ST_TO_ADDR
// end ;
28404: LD_VAR 0 6
28408: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28409: LD_INT 0
28411: PPUSH
// if not chassis or not engine then
28412: LD_VAR 0 1
28416: NOT
28417: PUSH
28418: LD_VAR 0 2
28422: NOT
28423: OR
28424: IFFALSE 28428
// exit ;
28426: GO 28624
// case engine of engine_solar :
28428: LD_VAR 0 2
28432: PUSH
28433: LD_INT 2
28435: DOUBLE
28436: EQUAL
28437: IFTRUE 28441
28439: GO 28479
28441: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28442: LD_ADDR_VAR 0 3
28446: PUSH
28447: LD_INT 11
28449: PUSH
28450: LD_INT 12
28452: PUSH
28453: LD_INT 13
28455: PUSH
28456: LD_INT 14
28458: PUSH
28459: LD_INT 1
28461: PUSH
28462: LD_INT 2
28464: PUSH
28465: LD_INT 3
28467: PUSH
28468: EMPTY
28469: LIST
28470: LIST
28471: LIST
28472: LIST
28473: LIST
28474: LIST
28475: LIST
28476: ST_TO_ADDR
28477: GO 28608
28479: LD_INT 1
28481: DOUBLE
28482: EQUAL
28483: IFTRUE 28487
28485: GO 28549
28487: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28488: LD_ADDR_VAR 0 3
28492: PUSH
28493: LD_INT 11
28495: PUSH
28496: LD_INT 12
28498: PUSH
28499: LD_INT 13
28501: PUSH
28502: LD_INT 14
28504: PUSH
28505: LD_INT 1
28507: PUSH
28508: LD_INT 2
28510: PUSH
28511: LD_INT 3
28513: PUSH
28514: LD_INT 4
28516: PUSH
28517: LD_INT 5
28519: PUSH
28520: LD_INT 21
28522: PUSH
28523: LD_INT 23
28525: PUSH
28526: LD_INT 22
28528: PUSH
28529: LD_INT 24
28531: PUSH
28532: EMPTY
28533: LIST
28534: LIST
28535: LIST
28536: LIST
28537: LIST
28538: LIST
28539: LIST
28540: LIST
28541: LIST
28542: LIST
28543: LIST
28544: LIST
28545: LIST
28546: ST_TO_ADDR
28547: GO 28608
28549: LD_INT 3
28551: DOUBLE
28552: EQUAL
28553: IFTRUE 28557
28555: GO 28607
28557: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28558: LD_ADDR_VAR 0 3
28562: PUSH
28563: LD_INT 13
28565: PUSH
28566: LD_INT 14
28568: PUSH
28569: LD_INT 2
28571: PUSH
28572: LD_INT 3
28574: PUSH
28575: LD_INT 4
28577: PUSH
28578: LD_INT 5
28580: PUSH
28581: LD_INT 21
28583: PUSH
28584: LD_INT 22
28586: PUSH
28587: LD_INT 23
28589: PUSH
28590: LD_INT 24
28592: PUSH
28593: EMPTY
28594: LIST
28595: LIST
28596: LIST
28597: LIST
28598: LIST
28599: LIST
28600: LIST
28601: LIST
28602: LIST
28603: LIST
28604: ST_TO_ADDR
28605: GO 28608
28607: POP
// result := ( chassis in result ) ;
28608: LD_ADDR_VAR 0 3
28612: PUSH
28613: LD_VAR 0 1
28617: PUSH
28618: LD_VAR 0 3
28622: IN
28623: ST_TO_ADDR
// end ;
28624: LD_VAR 0 3
28628: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28629: LD_INT 0
28631: PPUSH
// if not chassis or not weapon then
28632: LD_VAR 0 1
28636: NOT
28637: PUSH
28638: LD_VAR 0 2
28642: NOT
28643: OR
28644: IFFALSE 28648
// exit ;
28646: GO 29674
// case weapon of us_machine_gun :
28648: LD_VAR 0 2
28652: PUSH
28653: LD_INT 2
28655: DOUBLE
28656: EQUAL
28657: IFTRUE 28661
28659: GO 28691
28661: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28662: LD_ADDR_VAR 0 3
28666: PUSH
28667: LD_INT 1
28669: PUSH
28670: LD_INT 2
28672: PUSH
28673: LD_INT 3
28675: PUSH
28676: LD_INT 4
28678: PUSH
28679: LD_INT 5
28681: PUSH
28682: EMPTY
28683: LIST
28684: LIST
28685: LIST
28686: LIST
28687: LIST
28688: ST_TO_ADDR
28689: GO 29658
28691: LD_INT 3
28693: DOUBLE
28694: EQUAL
28695: IFTRUE 28699
28697: GO 28729
28699: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28700: LD_ADDR_VAR 0 3
28704: PUSH
28705: LD_INT 1
28707: PUSH
28708: LD_INT 2
28710: PUSH
28711: LD_INT 3
28713: PUSH
28714: LD_INT 4
28716: PUSH
28717: LD_INT 5
28719: PUSH
28720: EMPTY
28721: LIST
28722: LIST
28723: LIST
28724: LIST
28725: LIST
28726: ST_TO_ADDR
28727: GO 29658
28729: LD_INT 11
28731: DOUBLE
28732: EQUAL
28733: IFTRUE 28737
28735: GO 28767
28737: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28738: LD_ADDR_VAR 0 3
28742: PUSH
28743: LD_INT 1
28745: PUSH
28746: LD_INT 2
28748: PUSH
28749: LD_INT 3
28751: PUSH
28752: LD_INT 4
28754: PUSH
28755: LD_INT 5
28757: PUSH
28758: EMPTY
28759: LIST
28760: LIST
28761: LIST
28762: LIST
28763: LIST
28764: ST_TO_ADDR
28765: GO 29658
28767: LD_INT 4
28769: DOUBLE
28770: EQUAL
28771: IFTRUE 28775
28773: GO 28801
28775: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28776: LD_ADDR_VAR 0 3
28780: PUSH
28781: LD_INT 2
28783: PUSH
28784: LD_INT 3
28786: PUSH
28787: LD_INT 4
28789: PUSH
28790: LD_INT 5
28792: PUSH
28793: EMPTY
28794: LIST
28795: LIST
28796: LIST
28797: LIST
28798: ST_TO_ADDR
28799: GO 29658
28801: LD_INT 5
28803: DOUBLE
28804: EQUAL
28805: IFTRUE 28809
28807: GO 28835
28809: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28810: LD_ADDR_VAR 0 3
28814: PUSH
28815: LD_INT 2
28817: PUSH
28818: LD_INT 3
28820: PUSH
28821: LD_INT 4
28823: PUSH
28824: LD_INT 5
28826: PUSH
28827: EMPTY
28828: LIST
28829: LIST
28830: LIST
28831: LIST
28832: ST_TO_ADDR
28833: GO 29658
28835: LD_INT 9
28837: DOUBLE
28838: EQUAL
28839: IFTRUE 28843
28841: GO 28869
28843: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28844: LD_ADDR_VAR 0 3
28848: PUSH
28849: LD_INT 2
28851: PUSH
28852: LD_INT 3
28854: PUSH
28855: LD_INT 4
28857: PUSH
28858: LD_INT 5
28860: PUSH
28861: EMPTY
28862: LIST
28863: LIST
28864: LIST
28865: LIST
28866: ST_TO_ADDR
28867: GO 29658
28869: LD_INT 7
28871: DOUBLE
28872: EQUAL
28873: IFTRUE 28877
28875: GO 28903
28877: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28878: LD_ADDR_VAR 0 3
28882: PUSH
28883: LD_INT 2
28885: PUSH
28886: LD_INT 3
28888: PUSH
28889: LD_INT 4
28891: PUSH
28892: LD_INT 5
28894: PUSH
28895: EMPTY
28896: LIST
28897: LIST
28898: LIST
28899: LIST
28900: ST_TO_ADDR
28901: GO 29658
28903: LD_INT 12
28905: DOUBLE
28906: EQUAL
28907: IFTRUE 28911
28909: GO 28937
28911: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28912: LD_ADDR_VAR 0 3
28916: PUSH
28917: LD_INT 2
28919: PUSH
28920: LD_INT 3
28922: PUSH
28923: LD_INT 4
28925: PUSH
28926: LD_INT 5
28928: PUSH
28929: EMPTY
28930: LIST
28931: LIST
28932: LIST
28933: LIST
28934: ST_TO_ADDR
28935: GO 29658
28937: LD_INT 13
28939: DOUBLE
28940: EQUAL
28941: IFTRUE 28945
28943: GO 28971
28945: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28946: LD_ADDR_VAR 0 3
28950: PUSH
28951: LD_INT 2
28953: PUSH
28954: LD_INT 3
28956: PUSH
28957: LD_INT 4
28959: PUSH
28960: LD_INT 5
28962: PUSH
28963: EMPTY
28964: LIST
28965: LIST
28966: LIST
28967: LIST
28968: ST_TO_ADDR
28969: GO 29658
28971: LD_INT 14
28973: DOUBLE
28974: EQUAL
28975: IFTRUE 28979
28977: GO 28997
28979: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28980: LD_ADDR_VAR 0 3
28984: PUSH
28985: LD_INT 4
28987: PUSH
28988: LD_INT 5
28990: PUSH
28991: EMPTY
28992: LIST
28993: LIST
28994: ST_TO_ADDR
28995: GO 29658
28997: LD_INT 6
28999: DOUBLE
29000: EQUAL
29001: IFTRUE 29005
29003: GO 29023
29005: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29006: LD_ADDR_VAR 0 3
29010: PUSH
29011: LD_INT 4
29013: PUSH
29014: LD_INT 5
29016: PUSH
29017: EMPTY
29018: LIST
29019: LIST
29020: ST_TO_ADDR
29021: GO 29658
29023: LD_INT 10
29025: DOUBLE
29026: EQUAL
29027: IFTRUE 29031
29029: GO 29049
29031: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29032: LD_ADDR_VAR 0 3
29036: PUSH
29037: LD_INT 4
29039: PUSH
29040: LD_INT 5
29042: PUSH
29043: EMPTY
29044: LIST
29045: LIST
29046: ST_TO_ADDR
29047: GO 29658
29049: LD_INT 22
29051: DOUBLE
29052: EQUAL
29053: IFTRUE 29057
29055: GO 29083
29057: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29058: LD_ADDR_VAR 0 3
29062: PUSH
29063: LD_INT 11
29065: PUSH
29066: LD_INT 12
29068: PUSH
29069: LD_INT 13
29071: PUSH
29072: LD_INT 14
29074: PUSH
29075: EMPTY
29076: LIST
29077: LIST
29078: LIST
29079: LIST
29080: ST_TO_ADDR
29081: GO 29658
29083: LD_INT 23
29085: DOUBLE
29086: EQUAL
29087: IFTRUE 29091
29089: GO 29117
29091: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29092: LD_ADDR_VAR 0 3
29096: PUSH
29097: LD_INT 11
29099: PUSH
29100: LD_INT 12
29102: PUSH
29103: LD_INT 13
29105: PUSH
29106: LD_INT 14
29108: PUSH
29109: EMPTY
29110: LIST
29111: LIST
29112: LIST
29113: LIST
29114: ST_TO_ADDR
29115: GO 29658
29117: LD_INT 24
29119: DOUBLE
29120: EQUAL
29121: IFTRUE 29125
29123: GO 29151
29125: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29126: LD_ADDR_VAR 0 3
29130: PUSH
29131: LD_INT 11
29133: PUSH
29134: LD_INT 12
29136: PUSH
29137: LD_INT 13
29139: PUSH
29140: LD_INT 14
29142: PUSH
29143: EMPTY
29144: LIST
29145: LIST
29146: LIST
29147: LIST
29148: ST_TO_ADDR
29149: GO 29658
29151: LD_INT 30
29153: DOUBLE
29154: EQUAL
29155: IFTRUE 29159
29157: GO 29185
29159: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29160: LD_ADDR_VAR 0 3
29164: PUSH
29165: LD_INT 11
29167: PUSH
29168: LD_INT 12
29170: PUSH
29171: LD_INT 13
29173: PUSH
29174: LD_INT 14
29176: PUSH
29177: EMPTY
29178: LIST
29179: LIST
29180: LIST
29181: LIST
29182: ST_TO_ADDR
29183: GO 29658
29185: LD_INT 25
29187: DOUBLE
29188: EQUAL
29189: IFTRUE 29193
29191: GO 29211
29193: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29194: LD_ADDR_VAR 0 3
29198: PUSH
29199: LD_INT 13
29201: PUSH
29202: LD_INT 14
29204: PUSH
29205: EMPTY
29206: LIST
29207: LIST
29208: ST_TO_ADDR
29209: GO 29658
29211: LD_INT 27
29213: DOUBLE
29214: EQUAL
29215: IFTRUE 29219
29217: GO 29237
29219: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29220: LD_ADDR_VAR 0 3
29224: PUSH
29225: LD_INT 13
29227: PUSH
29228: LD_INT 14
29230: PUSH
29231: EMPTY
29232: LIST
29233: LIST
29234: ST_TO_ADDR
29235: GO 29658
29237: LD_INT 28
29239: DOUBLE
29240: EQUAL
29241: IFTRUE 29245
29243: GO 29263
29245: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29246: LD_ADDR_VAR 0 3
29250: PUSH
29251: LD_INT 13
29253: PUSH
29254: LD_INT 14
29256: PUSH
29257: EMPTY
29258: LIST
29259: LIST
29260: ST_TO_ADDR
29261: GO 29658
29263: LD_INT 29
29265: DOUBLE
29266: EQUAL
29267: IFTRUE 29271
29269: GO 29289
29271: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29272: LD_ADDR_VAR 0 3
29276: PUSH
29277: LD_INT 13
29279: PUSH
29280: LD_INT 14
29282: PUSH
29283: EMPTY
29284: LIST
29285: LIST
29286: ST_TO_ADDR
29287: GO 29658
29289: LD_INT 31
29291: DOUBLE
29292: EQUAL
29293: IFTRUE 29297
29295: GO 29315
29297: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29298: LD_ADDR_VAR 0 3
29302: PUSH
29303: LD_INT 13
29305: PUSH
29306: LD_INT 14
29308: PUSH
29309: EMPTY
29310: LIST
29311: LIST
29312: ST_TO_ADDR
29313: GO 29658
29315: LD_INT 26
29317: DOUBLE
29318: EQUAL
29319: IFTRUE 29323
29321: GO 29341
29323: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29324: LD_ADDR_VAR 0 3
29328: PUSH
29329: LD_INT 13
29331: PUSH
29332: LD_INT 14
29334: PUSH
29335: EMPTY
29336: LIST
29337: LIST
29338: ST_TO_ADDR
29339: GO 29658
29341: LD_INT 42
29343: DOUBLE
29344: EQUAL
29345: IFTRUE 29349
29347: GO 29375
29349: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29350: LD_ADDR_VAR 0 3
29354: PUSH
29355: LD_INT 21
29357: PUSH
29358: LD_INT 22
29360: PUSH
29361: LD_INT 23
29363: PUSH
29364: LD_INT 24
29366: PUSH
29367: EMPTY
29368: LIST
29369: LIST
29370: LIST
29371: LIST
29372: ST_TO_ADDR
29373: GO 29658
29375: LD_INT 43
29377: DOUBLE
29378: EQUAL
29379: IFTRUE 29383
29381: GO 29409
29383: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29384: LD_ADDR_VAR 0 3
29388: PUSH
29389: LD_INT 21
29391: PUSH
29392: LD_INT 22
29394: PUSH
29395: LD_INT 23
29397: PUSH
29398: LD_INT 24
29400: PUSH
29401: EMPTY
29402: LIST
29403: LIST
29404: LIST
29405: LIST
29406: ST_TO_ADDR
29407: GO 29658
29409: LD_INT 44
29411: DOUBLE
29412: EQUAL
29413: IFTRUE 29417
29415: GO 29443
29417: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29418: LD_ADDR_VAR 0 3
29422: PUSH
29423: LD_INT 21
29425: PUSH
29426: LD_INT 22
29428: PUSH
29429: LD_INT 23
29431: PUSH
29432: LD_INT 24
29434: PUSH
29435: EMPTY
29436: LIST
29437: LIST
29438: LIST
29439: LIST
29440: ST_TO_ADDR
29441: GO 29658
29443: LD_INT 45
29445: DOUBLE
29446: EQUAL
29447: IFTRUE 29451
29449: GO 29477
29451: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29452: LD_ADDR_VAR 0 3
29456: PUSH
29457: LD_INT 21
29459: PUSH
29460: LD_INT 22
29462: PUSH
29463: LD_INT 23
29465: PUSH
29466: LD_INT 24
29468: PUSH
29469: EMPTY
29470: LIST
29471: LIST
29472: LIST
29473: LIST
29474: ST_TO_ADDR
29475: GO 29658
29477: LD_INT 49
29479: DOUBLE
29480: EQUAL
29481: IFTRUE 29485
29483: GO 29511
29485: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29486: LD_ADDR_VAR 0 3
29490: PUSH
29491: LD_INT 21
29493: PUSH
29494: LD_INT 22
29496: PUSH
29497: LD_INT 23
29499: PUSH
29500: LD_INT 24
29502: PUSH
29503: EMPTY
29504: LIST
29505: LIST
29506: LIST
29507: LIST
29508: ST_TO_ADDR
29509: GO 29658
29511: LD_INT 51
29513: DOUBLE
29514: EQUAL
29515: IFTRUE 29519
29517: GO 29545
29519: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29520: LD_ADDR_VAR 0 3
29524: PUSH
29525: LD_INT 21
29527: PUSH
29528: LD_INT 22
29530: PUSH
29531: LD_INT 23
29533: PUSH
29534: LD_INT 24
29536: PUSH
29537: EMPTY
29538: LIST
29539: LIST
29540: LIST
29541: LIST
29542: ST_TO_ADDR
29543: GO 29658
29545: LD_INT 52
29547: DOUBLE
29548: EQUAL
29549: IFTRUE 29553
29551: GO 29579
29553: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29554: LD_ADDR_VAR 0 3
29558: PUSH
29559: LD_INT 21
29561: PUSH
29562: LD_INT 22
29564: PUSH
29565: LD_INT 23
29567: PUSH
29568: LD_INT 24
29570: PUSH
29571: EMPTY
29572: LIST
29573: LIST
29574: LIST
29575: LIST
29576: ST_TO_ADDR
29577: GO 29658
29579: LD_INT 53
29581: DOUBLE
29582: EQUAL
29583: IFTRUE 29587
29585: GO 29605
29587: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29588: LD_ADDR_VAR 0 3
29592: PUSH
29593: LD_INT 23
29595: PUSH
29596: LD_INT 24
29598: PUSH
29599: EMPTY
29600: LIST
29601: LIST
29602: ST_TO_ADDR
29603: GO 29658
29605: LD_INT 46
29607: DOUBLE
29608: EQUAL
29609: IFTRUE 29613
29611: GO 29631
29613: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29614: LD_ADDR_VAR 0 3
29618: PUSH
29619: LD_INT 23
29621: PUSH
29622: LD_INT 24
29624: PUSH
29625: EMPTY
29626: LIST
29627: LIST
29628: ST_TO_ADDR
29629: GO 29658
29631: LD_INT 47
29633: DOUBLE
29634: EQUAL
29635: IFTRUE 29639
29637: GO 29657
29639: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29640: LD_ADDR_VAR 0 3
29644: PUSH
29645: LD_INT 23
29647: PUSH
29648: LD_INT 24
29650: PUSH
29651: EMPTY
29652: LIST
29653: LIST
29654: ST_TO_ADDR
29655: GO 29658
29657: POP
// result := ( chassis in result ) ;
29658: LD_ADDR_VAR 0 3
29662: PUSH
29663: LD_VAR 0 1
29667: PUSH
29668: LD_VAR 0 3
29672: IN
29673: ST_TO_ADDR
// end ;
29674: LD_VAR 0 3
29678: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29679: LD_INT 0
29681: PPUSH
29682: PPUSH
29683: PPUSH
29684: PPUSH
// uc_side = 0 ;
29685: LD_ADDR_OWVAR 20
29689: PUSH
29690: LD_INT 0
29692: ST_TO_ADDR
// uc_nation = 0 ;
29693: LD_ADDR_OWVAR 21
29697: PUSH
29698: LD_INT 0
29700: ST_TO_ADDR
// nat_area := nature_area ;
29701: LD_ADDR_VAR 0 4
29705: PUSH
29706: LD_INT 24
29708: ST_TO_ADDR
// InitHc ;
29709: CALL_OW 19
// for i = 1 to 4 do
29713: LD_ADDR_VAR 0 2
29717: PUSH
29718: DOUBLE
29719: LD_INT 1
29721: DEC
29722: ST_TO_ADDR
29723: LD_INT 4
29725: PUSH
29726: FOR_TO
29727: IFFALSE 29774
// begin hc_class = 18 ;
29729: LD_ADDR_OWVAR 28
29733: PUSH
29734: LD_INT 18
29736: ST_TO_ADDR
// hc_gallery =  ;
29737: LD_ADDR_OWVAR 33
29741: PUSH
29742: LD_STRING 
29744: ST_TO_ADDR
// animal := CreateHuman ;
29745: LD_ADDR_VAR 0 3
29749: PUSH
29750: CALL_OW 44
29754: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29755: LD_VAR 0 3
29759: PPUSH
29760: LD_VAR 0 4
29764: PPUSH
29765: LD_INT 0
29767: PPUSH
29768: CALL_OW 49
// end ;
29772: GO 29726
29774: POP
29775: POP
// for i = 1 to 3 do
29776: LD_ADDR_VAR 0 2
29780: PUSH
29781: DOUBLE
29782: LD_INT 1
29784: DEC
29785: ST_TO_ADDR
29786: LD_INT 3
29788: PUSH
29789: FOR_TO
29790: IFFALSE 29854
// begin hc_class = class_tiger ;
29792: LD_ADDR_OWVAR 28
29796: PUSH
29797: LD_INT 14
29799: ST_TO_ADDR
// hc_gallery =  ;
29800: LD_ADDR_OWVAR 33
29804: PUSH
29805: LD_STRING 
29807: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29808: LD_ADDR_OWVAR 35
29812: PUSH
29813: LD_INT 5
29815: NEG
29816: PPUSH
29817: LD_INT 5
29819: PPUSH
29820: CALL_OW 12
29824: ST_TO_ADDR
// animal := CreateHuman ;
29825: LD_ADDR_VAR 0 3
29829: PUSH
29830: CALL_OW 44
29834: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29835: LD_VAR 0 3
29839: PPUSH
29840: LD_VAR 0 4
29844: PPUSH
29845: LD_INT 0
29847: PPUSH
29848: CALL_OW 49
// end ;
29852: GO 29789
29854: POP
29855: POP
// for i = 1 to 3 do
29856: LD_ADDR_VAR 0 2
29860: PUSH
29861: DOUBLE
29862: LD_INT 1
29864: DEC
29865: ST_TO_ADDR
29866: LD_INT 3
29868: PUSH
29869: FOR_TO
29870: IFFALSE 29973
// begin hc_class = class_apeman ;
29872: LD_ADDR_OWVAR 28
29876: PUSH
29877: LD_INT 12
29879: ST_TO_ADDR
// hc_gallery =  ;
29880: LD_ADDR_OWVAR 33
29884: PUSH
29885: LD_STRING 
29887: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29888: LD_ADDR_OWVAR 35
29892: PUSH
29893: LD_INT 2
29895: NEG
29896: PPUSH
29897: LD_INT 2
29899: PPUSH
29900: CALL_OW 12
29904: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29905: LD_ADDR_OWVAR 31
29909: PUSH
29910: LD_INT 1
29912: PPUSH
29913: LD_INT 3
29915: PPUSH
29916: CALL_OW 12
29920: PUSH
29921: LD_INT 1
29923: PPUSH
29924: LD_INT 3
29926: PPUSH
29927: CALL_OW 12
29931: PUSH
29932: LD_INT 0
29934: PUSH
29935: LD_INT 0
29937: PUSH
29938: EMPTY
29939: LIST
29940: LIST
29941: LIST
29942: LIST
29943: ST_TO_ADDR
// animal := CreateHuman ;
29944: LD_ADDR_VAR 0 3
29948: PUSH
29949: CALL_OW 44
29953: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29954: LD_VAR 0 3
29958: PPUSH
29959: LD_VAR 0 4
29963: PPUSH
29964: LD_INT 0
29966: PPUSH
29967: CALL_OW 49
// end ;
29971: GO 29869
29973: POP
29974: POP
// for i = 1 to 3 do
29975: LD_ADDR_VAR 0 2
29979: PUSH
29980: DOUBLE
29981: LD_INT 1
29983: DEC
29984: ST_TO_ADDR
29985: LD_INT 3
29987: PUSH
29988: FOR_TO
29989: IFFALSE 30036
// begin hc_class = 13 ;
29991: LD_ADDR_OWVAR 28
29995: PUSH
29996: LD_INT 13
29998: ST_TO_ADDR
// hc_gallery =  ;
29999: LD_ADDR_OWVAR 33
30003: PUSH
30004: LD_STRING 
30006: ST_TO_ADDR
// animal := CreateHuman ;
30007: LD_ADDR_VAR 0 3
30011: PUSH
30012: CALL_OW 44
30016: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30017: LD_VAR 0 3
30021: PPUSH
30022: LD_VAR 0 4
30026: PPUSH
30027: LD_INT 0
30029: PPUSH
30030: CALL_OW 49
// end ;
30034: GO 29988
30036: POP
30037: POP
// for i = 1 to 3 do
30038: LD_ADDR_VAR 0 2
30042: PUSH
30043: DOUBLE
30044: LD_INT 1
30046: DEC
30047: ST_TO_ADDR
30048: LD_INT 3
30050: PUSH
30051: FOR_TO
30052: IFFALSE 30097
// begin hc_class = 20 ;
30054: LD_ADDR_OWVAR 28
30058: PUSH
30059: LD_INT 20
30061: ST_TO_ADDR
// hc_gallery =  ;
30062: LD_ADDR_OWVAR 33
30066: PUSH
30067: LD_STRING 
30069: ST_TO_ADDR
// animal := CreateHuman ;
30070: LD_ADDR_VAR 0 3
30074: PUSH
30075: CALL_OW 44
30079: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30080: LD_VAR 0 3
30084: PPUSH
30085: LD_INT 4
30087: PPUSH
30088: LD_INT 0
30090: PPUSH
30091: CALL_OW 49
// end ;
30095: GO 30051
30097: POP
30098: POP
// end ; end_of_file
30099: LD_VAR 0 1
30103: RET
// export function Action ; begin
30104: LD_INT 0
30106: PPUSH
// InGameOn ;
30107: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30111: LD_EXP 11
30115: PPUSH
30116: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30120: LD_EXP 11
30124: PPUSH
30125: LD_STRING D1-JMM-1
30127: PPUSH
30128: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30132: LD_EXP 12
30136: PPUSH
30137: LD_STRING D1-Roth-1
30139: PPUSH
30140: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30144: LD_EXP 11
30148: PPUSH
30149: LD_STRING D1-JMM-2
30151: PPUSH
30152: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30156: LD_EXP 12
30160: PPUSH
30161: LD_STRING D1-Roth-2
30163: PPUSH
30164: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30168: LD_EXP 11
30172: PPUSH
30173: LD_STRING D1-JMM-3
30175: PPUSH
30176: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30180: LD_EXP 12
30184: PPUSH
30185: LD_STRING D1-Roth-3
30187: PPUSH
30188: CALL_OW 88
// ComInvisible ( Roth ) ;
30192: LD_EXP 12
30196: PPUSH
30197: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30201: LD_INT 46
30203: PPUSH
30204: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30208: LD_EXP 11
30212: PPUSH
30213: LD_STRING D1-JMM-4
30215: PPUSH
30216: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30220: LD_INT 10
30222: PPUSH
30223: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30227: LD_EXP 12
30231: PPUSH
30232: LD_EXP 11
30236: PPUSH
30237: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30241: LD_EXP 11
30245: PPUSH
30246: LD_STRING D1-JMM-4a
30248: PPUSH
30249: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30253: LD_EXP 12
30257: PPUSH
30258: LD_STRING D1-Roth-4
30260: PPUSH
30261: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30265: LD_EXP 11
30269: PPUSH
30270: LD_STRING D1-JMM-5
30272: PPUSH
30273: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30277: LD_EXP 12
30281: PPUSH
30282: LD_STRING D1-Roth-5
30284: PPUSH
30285: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30289: LD_EXP 11
30293: PPUSH
30294: LD_STRING D1-JMM-6
30296: PPUSH
30297: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30301: LD_EXP 12
30305: PPUSH
30306: LD_STRING D1-Roth-6
30308: PPUSH
30309: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30313: LD_EXP 11
30317: PPUSH
30318: LD_STRING D1-JMM-7
30320: PPUSH
30321: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30325: LD_EXP 13
30329: PPUSH
30330: LD_EXP 11
30334: PPUSH
30335: CALL_OW 250
30339: PPUSH
30340: LD_EXP 11
30344: PPUSH
30345: CALL_OW 251
30349: PPUSH
30350: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30354: LD_EXP 12
30358: PPUSH
30359: LD_STRING D1-Roth-7
30361: PPUSH
30362: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30366: LD_INT 10
30368: PPUSH
30369: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30373: LD_EXP 13
30377: PPUSH
30378: LD_EXP 11
30382: PPUSH
30383: CALL_OW 296
30387: PUSH
30388: LD_INT 6
30390: LESS
30391: IFFALSE 30366
// ComTurnUnit ( Powell , JMM ) ;
30393: LD_EXP 13
30397: PPUSH
30398: LD_EXP 11
30402: PPUSH
30403: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30407: LD_EXP 13
30411: PPUSH
30412: LD_STRING D1-Pow-7
30414: PPUSH
30415: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30419: LD_EXP 11
30423: PPUSH
30424: LD_EXP 13
30428: PPUSH
30429: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30433: LD_EXP 12
30437: PPUSH
30438: LD_EXP 13
30442: PPUSH
30443: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30447: LD_EXP 11
30451: PPUSH
30452: LD_STRING D1-JMM-8
30454: PPUSH
30455: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30459: LD_EXP 13
30463: PPUSH
30464: LD_STRING D1-Pow-8
30466: PPUSH
30467: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30471: LD_EXP 11
30475: PPUSH
30476: LD_STRING D1-JMM-9
30478: PPUSH
30479: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30483: LD_EXP 13
30487: PPUSH
30488: LD_INT 124
30490: PPUSH
30491: LD_INT 61
30493: PPUSH
30494: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30498: LD_INT 35
30500: PPUSH
30501: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30505: LD_EXP 11
30509: PPUSH
30510: LD_EXP 13
30514: PPUSH
30515: CALL_OW 296
30519: PUSH
30520: LD_INT 6
30522: GREATER
30523: IFFALSE 30498
// SayRadio ( Powell , D1-Pow-9 ) ;
30525: LD_EXP 13
30529: PPUSH
30530: LD_STRING D1-Pow-9
30532: PPUSH
30533: CALL_OW 94
// RemoveUnit ( Powell ) ;
30537: LD_EXP 13
30541: PPUSH
30542: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30546: LD_EXP 13
30550: PPUSH
30551: LD_INT 18
30553: PPUSH
30554: CALL_OW 52
// if Joan and not Joan in selected then
30558: LD_EXP 33
30562: PUSH
30563: LD_EXP 33
30567: PUSH
30568: LD_EXP 3
30572: IN
30573: NOT
30574: AND
30575: IFFALSE 30589
// SayRadio ( Joan , D1-Joan-9 ) ;
30577: LD_EXP 33
30581: PPUSH
30582: LD_STRING D1-Joan-9
30584: PPUSH
30585: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30589: LD_EXP 12
30593: PPUSH
30594: LD_EXP 11
30598: PPUSH
30599: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30603: LD_EXP 11
30607: PPUSH
30608: LD_EXP 12
30612: PPUSH
30613: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30617: LD_EXP 12
30621: PPUSH
30622: LD_STRING D1-Roth-9
30624: PPUSH
30625: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30629: LD_EXP 11
30633: PPUSH
30634: LD_STRING D1-JMM-10
30636: PPUSH
30637: CALL_OW 88
// InGameOff ;
30641: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30645: LD_STRING M1
30647: PPUSH
30648: CALL_OW 337
// SaveForQuickRestart ;
30652: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30656: LD_INT 7
30658: PPUSH
30659: LD_INT 1
30661: PPUSH
30662: LD_INT 2
30664: PPUSH
30665: LD_INT 1
30667: PPUSH
30668: CALL_OW 80
// wait ( 0 0$3 ) ;
30672: LD_INT 105
30674: PPUSH
30675: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30679: LD_EXP 12
30683: PPUSH
30684: LD_INT 124
30686: PPUSH
30687: LD_INT 18
30689: PPUSH
30690: CALL_OW 111
// AddComInvisible ( Roth ) ;
30694: LD_EXP 12
30698: PPUSH
30699: CALL_OW 212
// wait ( 0 0$30 ) ;
30703: LD_INT 1050
30705: PPUSH
30706: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
30710: LD_EXP 12
30714: PPUSH
30715: LD_INT 2100
30717: PPUSH
30718: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30722: LD_EXP 12
30726: PPUSH
30727: LD_INT 156
30729: PPUSH
30730: LD_INT 20
30732: PPUSH
30733: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30737: LD_EXP 12
30741: PPUSH
30742: LD_INT 178
30744: PPUSH
30745: LD_INT 42
30747: PPUSH
30748: CALL_OW 171
// AddComInvisible ( Roth ) ;
30752: LD_EXP 12
30756: PPUSH
30757: CALL_OW 212
// end ;
30761: LD_VAR 0 1
30765: RET
// every 0 0$1 do var i , tmp ;
30766: GO 30768
30768: DISABLE
30769: LD_INT 0
30771: PPUSH
30772: PPUSH
// begin tmp := selected union friends union others ;
30773: LD_ADDR_VAR 0 2
30777: PUSH
30778: LD_EXP 3
30782: PUSH
30783: LD_EXP 4
30787: UNION
30788: PUSH
30789: LD_EXP 5
30793: UNION
30794: ST_TO_ADDR
// if not tmp then
30795: LD_VAR 0 2
30799: NOT
30800: IFFALSE 30804
// exit ;
30802: GO 30876
// repeat wait ( 0 0$1 ) ;
30804: LD_INT 35
30806: PPUSH
30807: CALL_OW 67
// for i in tmp do
30811: LD_ADDR_VAR 0 1
30815: PUSH
30816: LD_VAR 0 2
30820: PUSH
30821: FOR_IN
30822: IFFALSE 30867
// if CanSpot ( JMM , i ) then
30824: LD_EXP 11
30828: PPUSH
30829: LD_VAR 0 1
30833: PPUSH
30834: CALL 27412 0 2
30838: IFFALSE 30865
// begin tmp := tmp diff i ;
30840: LD_ADDR_VAR 0 2
30844: PUSH
30845: LD_VAR 0 2
30849: PUSH
30850: LD_VAR 0 1
30854: DIFF
30855: ST_TO_ADDR
// Spot ( i ) ;
30856: LD_VAR 0 1
30860: PPUSH
30861: CALL 30879 0 1
// end ;
30865: GO 30821
30867: POP
30868: POP
// until not tmp ;
30869: LD_VAR 0 2
30873: NOT
30874: IFFALSE 30804
// end ;
30876: PPOPN 2
30878: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30879: LD_INT 0
30881: PPUSH
30882: PPUSH
30883: PPUSH
30884: PPUSH
// if not unit then
30885: LD_VAR 0 1
30889: NOT
30890: IFFALSE 30894
// exit ;
30892: GO 32783
// InGameOn ;
30894: CALL_OW 8
// side := GetSide ( JMM ) ;
30898: LD_ADDR_VAR 0 4
30902: PUSH
30903: LD_EXP 11
30907: PPUSH
30908: CALL_OW 255
30912: ST_TO_ADDR
// joined := false ;
30913: LD_ADDR_VAR 0 5
30917: PUSH
30918: LD_INT 0
30920: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30921: LD_ADDR_VAR 0 3
30925: PUSH
30926: LD_VAR 0 1
30930: PPUSH
30931: CALL_OW 310
30935: ST_TO_ADDR
// if building then
30936: LD_VAR 0 3
30940: IFFALSE 30999
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30942: LD_EXP 11
30946: PPUSH
30947: LD_VAR 0 1
30951: PPUSH
30952: CALL_OW 255
30956: PPUSH
30957: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30961: LD_EXP 11
30965: PPUSH
30966: LD_VAR 0 3
30970: PPUSH
30971: CALL_OW 120
// repeat wait ( 3 ) ;
30975: LD_INT 3
30977: PPUSH
30978: CALL_OW 67
// until IsInUnit ( JMM ) ;
30982: LD_EXP 11
30986: PPUSH
30987: CALL_OW 310
30991: IFFALSE 30975
// DialogueOn ;
30993: CALL_OW 6
// end else
30997: GO 31031
// begin ComTurnUnit ( JMM , unit ) ;
30999: LD_EXP 11
31003: PPUSH
31004: LD_VAR 0 1
31008: PPUSH
31009: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31013: LD_VAR 0 1
31017: PPUSH
31018: LD_EXP 11
31022: PPUSH
31023: CALL_OW 119
// DialogueOn ;
31027: CALL_OW 6
// end ; if unit = Joan then
31031: LD_VAR 0 1
31035: PUSH
31036: LD_EXP 33
31040: EQUAL
31041: IFFALSE 31151
// begin joined := true ;
31043: LD_ADDR_VAR 0 5
31047: PUSH
31048: LD_INT 1
31050: ST_TO_ADDR
// if Joan in selected then
31051: LD_EXP 33
31055: PUSH
31056: LD_EXP 3
31060: IN
31061: IFFALSE 31089
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31063: LD_EXP 33
31067: PPUSH
31068: LD_STRING D3-Joan-Joan-1
31070: PPUSH
31071: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31075: LD_EXP 11
31079: PPUSH
31080: LD_STRING D3-Joan-JMM-1
31082: PPUSH
31083: CALL_OW 88
// end else
31087: GO 31149
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31089: LD_EXP 33
31093: PPUSH
31094: LD_STRING D4-Joan-Joan-1
31096: PPUSH
31097: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31101: LD_EXP 11
31105: PPUSH
31106: LD_STRING D4-Joan-JMM-1
31108: PPUSH
31109: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31113: LD_EXP 33
31117: PPUSH
31118: LD_STRING D4-Joan-Joan-2
31120: PPUSH
31121: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31125: LD_EXP 11
31129: PPUSH
31130: LD_STRING D4-Joan-JMM-2
31132: PPUSH
31133: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31137: LD_EXP 33
31141: PPUSH
31142: LD_STRING D4-Joan-Joan-3
31144: PPUSH
31145: CALL_OW 88
// end ; end else
31149: GO 32591
// if unit = Lisa then
31151: LD_VAR 0 1
31155: PUSH
31156: LD_EXP 20
31160: EQUAL
31161: IFFALSE 31353
// begin if Lisa in selected then
31163: LD_EXP 20
31167: PUSH
31168: LD_EXP 3
31172: IN
31173: IFFALSE 31286
// begin if GetSide ( Joan ) = 7 then
31175: LD_EXP 33
31179: PPUSH
31180: CALL_OW 255
31184: PUSH
31185: LD_INT 7
31187: EQUAL
31188: IFFALSE 31252
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31190: LD_EXP 20
31194: PPUSH
31195: LD_STRING D3-LisaJ-Lisa-1
31197: PPUSH
31198: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31202: LD_EXP 11
31206: PPUSH
31207: LD_STRING D3-LisaJ-JMM-1
31209: PPUSH
31210: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31214: LD_EXP 20
31218: PPUSH
31219: LD_STRING D3-LisaJ-Lisa-2
31221: PPUSH
31222: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31226: LD_EXP 11
31230: PPUSH
31231: LD_STRING D3-LisaJ-JMM-2
31233: PPUSH
31234: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31238: LD_EXP 20
31242: PPUSH
31243: LD_STRING D3-LisaJ-Lisa-3
31245: PPUSH
31246: CALL_OW 88
// end else
31250: GO 31284
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31252: LD_EXP 20
31256: PPUSH
31257: LD_STRING D3-LisaL-Lisa-1
31259: PPUSH
31260: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31264: LD_EXP 11
31268: PPUSH
31269: LD_STRING D3-LisaL-JMM-1
31271: PPUSH
31272: CALL_OW 88
// joined := true ;
31276: LD_ADDR_VAR 0 5
31280: PUSH
31281: LD_INT 1
31283: ST_TO_ADDR
// end ; end else
31284: GO 31351
// begin if GetSide ( Joan ) = 7 then
31286: LD_EXP 33
31290: PPUSH
31291: CALL_OW 255
31295: PUSH
31296: LD_INT 7
31298: EQUAL
31299: IFFALSE 31339
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31301: LD_EXP 20
31305: PPUSH
31306: LD_STRING D4-LisaJ-Lisa-1
31308: PPUSH
31309: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31313: LD_EXP 11
31317: PPUSH
31318: LD_STRING D4-LisaJ-JMM-1
31320: PPUSH
31321: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31325: LD_EXP 20
31329: PPUSH
31330: LD_STRING D4-LisaJ-Lisa-2
31332: PPUSH
31333: CALL_OW 88
// end else
31337: GO 31351
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31339: LD_EXP 20
31343: PPUSH
31344: LD_STRING D4-LisaL-Lisa-1
31346: PPUSH
31347: CALL_OW 88
// end ; end ; end else
31351: GO 32591
// if unit = Frank then
31353: LD_VAR 0 1
31357: PUSH
31358: LD_EXP 30
31362: EQUAL
31363: IFFALSE 31503
// begin joined := true ;
31365: LD_ADDR_VAR 0 5
31369: PUSH
31370: LD_INT 1
31372: ST_TO_ADDR
// if Frank in selected then
31373: LD_EXP 30
31377: PUSH
31378: LD_EXP 3
31382: IN
31383: IFFALSE 31453
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31385: LD_EXP 30
31389: PPUSH
31390: LD_STRING D3-Frank-Frank-1
31392: PPUSH
31393: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31397: LD_EXP 11
31401: PPUSH
31402: LD_STRING D3-Frank-JMM-1
31404: PPUSH
31405: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31409: LD_EXP 30
31413: PPUSH
31414: LD_STRING D3-Frank-Frank-2
31416: PPUSH
31417: CALL_OW 88
// if reached_lab then
31421: LD_EXP 6
31425: IFFALSE 31451
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31427: LD_EXP 11
31431: PPUSH
31432: LD_STRING D3-Frank-JMM-2
31434: PPUSH
31435: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31439: LD_EXP 30
31443: PPUSH
31444: LD_STRING D3-Frank-Frank-3
31446: PPUSH
31447: CALL_OW 88
// end ; end else
31451: GO 31501
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31453: LD_EXP 30
31457: PPUSH
31458: LD_STRING D4-Frank-Frank-1
31460: PPUSH
31461: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31465: LD_EXP 11
31469: PPUSH
31470: LD_STRING D4-Frank-JMM-1
31472: PPUSH
31473: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31477: LD_EXP 30
31481: PPUSH
31482: LD_STRING D4-Frank-Frank-2
31484: PPUSH
31485: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31489: LD_EXP 11
31493: PPUSH
31494: LD_STRING D4-Frank-JMM-2
31496: PPUSH
31497: CALL_OW 88
// end ; end else
31501: GO 32591
// if unit = Brown then
31503: LD_VAR 0 1
31507: PUSH
31508: LD_EXP 25
31512: EQUAL
31513: IFFALSE 31609
// begin if Brown in selected or gamma_commander = 2 then
31515: LD_EXP 25
31519: PUSH
31520: LD_EXP 3
31524: IN
31525: PUSH
31526: LD_EXP 10
31530: PUSH
31531: LD_INT 2
31533: EQUAL
31534: OR
31535: IFFALSE 31571
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31537: LD_EXP 25
31541: PPUSH
31542: LD_STRING D3-Soldier1-Sol1-1
31544: PPUSH
31545: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31549: LD_EXP 11
31553: PPUSH
31554: LD_STRING D3-Soldier1-JMM-1
31556: PPUSH
31557: CALL_OW 88
// joined := true ;
31561: LD_ADDR_VAR 0 5
31565: PUSH
31566: LD_INT 1
31568: ST_TO_ADDR
// end else
31569: GO 31607
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31571: LD_EXP 25
31575: PPUSH
31576: LD_STRING D4-Soldier1-Sol1-1
31578: PPUSH
31579: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31583: LD_EXP 11
31587: PPUSH
31588: LD_STRING D4-Soldier1-JMM-1
31590: PPUSH
31591: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31595: LD_EXP 25
31599: PPUSH
31600: LD_STRING D4-Soldier1-Sol1-2
31602: PPUSH
31603: CALL_OW 88
// end ; end else
31607: GO 32591
// if unit = Donaldson then
31609: LD_VAR 0 1
31613: PUSH
31614: LD_EXP 21
31618: EQUAL
31619: IFFALSE 31715
// begin if Donaldson in selected or gamma_commander = 1 then
31621: LD_EXP 21
31625: PUSH
31626: LD_EXP 3
31630: IN
31631: PUSH
31632: LD_EXP 10
31636: PUSH
31637: LD_INT 1
31639: EQUAL
31640: OR
31641: IFFALSE 31677
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31643: LD_EXP 21
31647: PPUSH
31648: LD_STRING D3-Soldier2-FSol2-1
31650: PPUSH
31651: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31655: LD_EXP 11
31659: PPUSH
31660: LD_STRING D3-Soldier2-JMM-1
31662: PPUSH
31663: CALL_OW 88
// joined := true ;
31667: LD_ADDR_VAR 0 5
31671: PUSH
31672: LD_INT 1
31674: ST_TO_ADDR
// end else
31675: GO 31713
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31677: LD_VAR 0 1
31681: PPUSH
31682: LD_STRING D4-Soldier1-FSol1-1
31684: PPUSH
31685: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31689: LD_EXP 11
31693: PPUSH
31694: LD_STRING D4-Soldier1-JMM-1
31696: PPUSH
31697: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31701: LD_VAR 0 1
31705: PPUSH
31706: LD_STRING D4-Soldier1-FSol1-2
31708: PPUSH
31709: CALL_OW 88
// end ; end else
31713: GO 32591
// if unit = Cyrus then
31715: LD_VAR 0 1
31719: PUSH
31720: LD_EXP 23
31724: EQUAL
31725: IFFALSE 31799
// begin if Cyrus in selected then
31727: LD_EXP 23
31731: PUSH
31732: LD_EXP 3
31736: IN
31737: IFFALSE 31773
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31739: LD_EXP 23
31743: PPUSH
31744: LD_STRING D3-Cyrus-Cyrus-1
31746: PPUSH
31747: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31751: LD_EXP 11
31755: PPUSH
31756: LD_STRING D3-Cyrus-JMM-1
31758: PPUSH
31759: CALL_OW 88
// joined := true ;
31763: LD_ADDR_VAR 0 5
31767: PUSH
31768: LD_INT 1
31770: ST_TO_ADDR
// end else
31771: GO 31797
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31773: LD_EXP 23
31777: PPUSH
31778: LD_STRING D4-Cyrus-Cyrus-1
31780: PPUSH
31781: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31785: LD_EXP 11
31789: PPUSH
31790: LD_STRING D4-Cyrus-JMM-1
31792: PPUSH
31793: CALL_OW 88
// end ; end else
31797: GO 32591
// if unit = Bobby then
31799: LD_VAR 0 1
31803: PUSH
31804: LD_EXP 22
31808: EQUAL
31809: IFFALSE 31895
// begin if Bobby in selected then
31811: LD_EXP 22
31815: PUSH
31816: LD_EXP 3
31820: IN
31821: IFFALSE 31857
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31823: LD_EXP 22
31827: PPUSH
31828: LD_STRING D3-Bobby-Bobby-1
31830: PPUSH
31831: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31835: LD_EXP 11
31839: PPUSH
31840: LD_STRING D3-Bobby-JMM-1
31842: PPUSH
31843: CALL_OW 88
// joined := true ;
31847: LD_ADDR_VAR 0 5
31851: PUSH
31852: LD_INT 1
31854: ST_TO_ADDR
// end else
31855: GO 31893
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31857: LD_EXP 22
31861: PPUSH
31862: LD_STRING D4-Bobby-Bobby-1
31864: PPUSH
31865: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31869: LD_EXP 11
31873: PPUSH
31874: LD_STRING D4-Bobby-JMM-1
31876: PPUSH
31877: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31881: LD_EXP 22
31885: PPUSH
31886: LD_STRING D4-Bobby-Bobby-2
31888: PPUSH
31889: CALL_OW 88
// end ; end else
31893: GO 32591
// if unit = Cornel then
31895: LD_VAR 0 1
31899: PUSH
31900: LD_EXP 28
31904: EQUAL
31905: IFFALSE 32003
// begin if Cornel in selected then
31907: LD_EXP 28
31911: PUSH
31912: LD_EXP 3
31916: IN
31917: IFFALSE 31965
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31919: LD_EXP 28
31923: PPUSH
31924: LD_STRING D3-Mark-Corn-1
31926: PPUSH
31927: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31931: LD_EXP 11
31935: PPUSH
31936: LD_STRING D3-Mark-JMM-1
31938: PPUSH
31939: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31943: LD_EXP 28
31947: PPUSH
31948: LD_STRING D3-Mark-Corn-2
31950: PPUSH
31951: CALL_OW 88
// joined := true ;
31955: LD_ADDR_VAR 0 5
31959: PUSH
31960: LD_INT 1
31962: ST_TO_ADDR
// end else
31963: GO 32001
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31965: LD_EXP 28
31969: PPUSH
31970: LD_STRING D4-Mark-Corn-1
31972: PPUSH
31973: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31977: LD_EXP 11
31981: PPUSH
31982: LD_STRING D3-Joan-JMM-1
31984: PPUSH
31985: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31989: LD_EXP 28
31993: PPUSH
31994: LD_STRING D4-Mark-Corn-2
31996: PPUSH
31997: CALL_OW 88
// end ; end else
32001: GO 32591
// if unit = Gary then
32003: LD_VAR 0 1
32007: PUSH
32008: LD_EXP 29
32012: EQUAL
32013: IFFALSE 32097
// begin if Gary in selected then
32015: LD_EXP 29
32019: PUSH
32020: LD_EXP 3
32024: IN
32025: IFFALSE 32061
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32027: LD_EXP 29
32031: PPUSH
32032: LD_STRING D3-Gary-Gary-1
32034: PPUSH
32035: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32039: LD_EXP 11
32043: PPUSH
32044: LD_STRING D3-Gary-JMM-1
32046: PPUSH
32047: CALL_OW 88
// joined := true ;
32051: LD_ADDR_VAR 0 5
32055: PUSH
32056: LD_INT 1
32058: ST_TO_ADDR
// end else
32059: GO 32095
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32061: LD_EXP 29
32065: PPUSH
32066: LD_STRING D4-Gary-Gary-1
32068: PPUSH
32069: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32073: LD_EXP 29
32077: PPUSH
32078: LD_INT 1
32080: PPUSH
32081: CALL_OW 235
// DialogueOff ;
32085: CALL_OW 7
// InGameOff ;
32089: CALL_OW 9
// exit ;
32093: GO 32783
// end ; end else
32095: GO 32591
// if unit = Kikuchi then
32097: LD_VAR 0 1
32101: PUSH
32102: LD_EXP 31
32106: EQUAL
32107: IFFALSE 32191
// begin if Kikuchi in selected then
32109: LD_EXP 31
32113: PUSH
32114: LD_EXP 3
32118: IN
32119: IFFALSE 32155
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32121: LD_EXP 31
32125: PPUSH
32126: LD_STRING D3-Yamako-Yam-1
32128: PPUSH
32129: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32133: LD_EXP 11
32137: PPUSH
32138: LD_STRING D3-Soldier2-JMM-1
32140: PPUSH
32141: CALL_OW 88
// joined := true ;
32145: LD_ADDR_VAR 0 5
32149: PUSH
32150: LD_INT 1
32152: ST_TO_ADDR
// end else
32153: GO 32189
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32155: LD_EXP 31
32159: PPUSH
32160: LD_STRING D4-Yamako-Yam-1
32162: PPUSH
32163: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32167: LD_EXP 31
32171: PPUSH
32172: LD_INT 1
32174: PPUSH
32175: CALL_OW 235
// DialogueOff ;
32179: CALL_OW 7
// InGameOff ;
32183: CALL_OW 9
// exit ;
32187: GO 32783
// end ; end else
32189: GO 32591
// if unit = Gladstone then
32191: LD_VAR 0 1
32195: PUSH
32196: LD_EXP 26
32200: EQUAL
32201: IFFALSE 32275
// begin if Gladstone in selected then
32203: LD_EXP 26
32207: PUSH
32208: LD_EXP 3
32212: IN
32213: IFFALSE 32249
// begin joined := true ;
32215: LD_ADDR_VAR 0 5
32219: PUSH
32220: LD_INT 1
32222: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32223: LD_EXP 11
32227: PPUSH
32228: LD_STRING D3-Tim-JMM-1
32230: PPUSH
32231: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32235: LD_EXP 26
32239: PPUSH
32240: LD_STRING D3-Tim-Glad-1
32242: PPUSH
32243: CALL_OW 88
// end else
32247: GO 32273
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32249: LD_EXP 11
32253: PPUSH
32254: LD_STRING D4-Tim-JMM-1
32256: PPUSH
32257: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32261: LD_EXP 26
32265: PPUSH
32266: LD_STRING D4-Tim-Glad-1
32268: PPUSH
32269: CALL_OW 88
// end ; end else
32273: GO 32591
// if unit = Denis then
32275: LD_VAR 0 1
32279: PUSH
32280: LD_EXP 24
32284: EQUAL
32285: IFFALSE 32321
// begin joined := true ;
32287: LD_ADDR_VAR 0 5
32291: PUSH
32292: LD_INT 1
32294: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32295: LD_EXP 24
32299: PPUSH
32300: LD_STRING D3-Denis-Den-1
32302: PPUSH
32303: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32307: LD_EXP 11
32311: PPUSH
32312: LD_STRING D3-Denis-JMM-1
32314: PPUSH
32315: CALL_OW 88
// end else
32319: GO 32591
// if unit = Simms then
32321: LD_VAR 0 1
32325: PUSH
32326: LD_EXP 32
32330: EQUAL
32331: IFFALSE 32367
// begin joined := true ;
32333: LD_ADDR_VAR 0 5
32337: PUSH
32338: LD_INT 1
32340: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32341: LD_EXP 32
32345: PPUSH
32346: LD_STRING D3-Simms-Sim-1
32348: PPUSH
32349: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32353: LD_EXP 11
32357: PPUSH
32358: LD_STRING D3-Simms-JMM-1
32360: PPUSH
32361: CALL_OW 88
// end else
32365: GO 32591
// if unit = DeltaDoctor then
32367: LD_VAR 0 1
32371: PUSH
32372: LD_EXP 34
32376: EQUAL
32377: IFFALSE 32413
// begin joined := true ;
32379: LD_ADDR_VAR 0 5
32383: PUSH
32384: LD_INT 1
32386: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32387: LD_EXP 34
32391: PPUSH
32392: LD_STRING D3-Soldier1-Sol1-1
32394: PPUSH
32395: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32399: LD_EXP 11
32403: PPUSH
32404: LD_STRING D3-Soldier1-JMM-1
32406: PPUSH
32407: CALL_OW 88
// end else
32411: GO 32591
// begin joined := unit in selected ;
32413: LD_ADDR_VAR 0 5
32417: PUSH
32418: LD_VAR 0 1
32422: PUSH
32423: LD_EXP 3
32427: IN
32428: ST_TO_ADDR
// if joined then
32429: LD_VAR 0 5
32433: IFFALSE 32502
// begin if GetSex ( unit ) = sex_male then
32435: LD_VAR 0 1
32439: PPUSH
32440: CALL_OW 258
32444: PUSH
32445: LD_INT 1
32447: EQUAL
32448: IFFALSE 32476
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32450: LD_VAR 0 1
32454: PPUSH
32455: LD_STRING D3-Soldier1-Sol1-1
32457: PPUSH
32458: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32462: LD_EXP 11
32466: PPUSH
32467: LD_STRING D3-Soldier1-JMM-1
32469: PPUSH
32470: CALL_OW 88
// end else
32474: GO 32500
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32476: LD_VAR 0 1
32480: PPUSH
32481: LD_STRING D3-Soldier2-FSol2-1
32483: PPUSH
32484: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32488: LD_EXP 11
32492: PPUSH
32493: LD_STRING D3-Soldier2-JMM-1
32495: PPUSH
32496: CALL_OW 88
// end ; end else
32500: GO 32591
// begin if GetSex ( unit ) = sex_male then
32502: LD_VAR 0 1
32506: PPUSH
32507: CALL_OW 258
32511: PUSH
32512: LD_INT 1
32514: EQUAL
32515: IFFALSE 32555
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32517: LD_VAR 0 1
32521: PPUSH
32522: LD_STRING D4-Soldier2-Sol1-1
32524: PPUSH
32525: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32529: LD_EXP 11
32533: PPUSH
32534: LD_STRING D4-Soldier2-JMM-1
32536: PPUSH
32537: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32541: LD_VAR 0 1
32545: PPUSH
32546: LD_STRING D4-Soldier2-Sol2-1
32548: PPUSH
32549: CALL_OW 88
// end else
32553: GO 32591
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32555: LD_VAR 0 1
32559: PPUSH
32560: LD_STRING D4-Soldier1-FSol1-1
32562: PPUSH
32563: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32567: LD_EXP 11
32571: PPUSH
32572: LD_STRING D4-Soldier1-JMM-1
32574: PPUSH
32575: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32579: LD_VAR 0 1
32583: PPUSH
32584: LD_STRING D4-Soldier1-FSol1-2
32586: PPUSH
32587: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32591: CALL_OW 7
// InGameOff ;
32595: CALL_OW 9
// if building then
32599: LD_VAR 0 3
32603: IFFALSE 32704
// begin SetSide ( JMM , side ) ;
32605: LD_EXP 11
32609: PPUSH
32610: LD_VAR 0 4
32614: PPUSH
32615: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32619: LD_EXP 11
32623: PPUSH
32624: CALL_OW 122
// if joined then
32628: LD_VAR 0 5
32632: IFFALSE 32671
// begin SetSide ( unit , side ) ;
32634: LD_VAR 0 1
32638: PPUSH
32639: LD_VAR 0 4
32643: PPUSH
32644: CALL_OW 235
// SetSide ( building , 1 ) ;
32648: LD_VAR 0 3
32652: PPUSH
32653: LD_INT 1
32655: PPUSH
32656: CALL_OW 235
// ComExitBuilding ( unit ) ;
32660: LD_VAR 0 1
32664: PPUSH
32665: CALL_OW 122
// end else
32669: GO 32702
// begin wait ( 0 0$10 ) ;
32671: LD_INT 350
32673: PPUSH
32674: CALL_OW 67
// SetSide ( unit , 1 ) ;
32678: LD_VAR 0 1
32682: PPUSH
32683: LD_INT 1
32685: PPUSH
32686: CALL_OW 235
// SetSide ( building , 1 ) ;
32690: LD_VAR 0 3
32694: PPUSH
32695: LD_INT 1
32697: PPUSH
32698: CALL_OW 235
// end ; end else
32702: GO 32783
// begin ComStop ( [ JMM , unit ] ) ;
32704: LD_EXP 11
32708: PUSH
32709: LD_VAR 0 1
32713: PUSH
32714: EMPTY
32715: LIST
32716: LIST
32717: PPUSH
32718: CALL_OW 141
// if joined then
32722: LD_VAR 0 5
32726: IFFALSE 32744
// SetSide ( unit , side ) else
32728: LD_VAR 0 1
32732: PPUSH
32733: LD_VAR 0 4
32737: PPUSH
32738: CALL_OW 235
32742: GO 32783
// begin repeat wait ( 0 0$1 ) ;
32744: LD_INT 35
32746: PPUSH
32747: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32751: LD_EXP 11
32755: PPUSH
32756: LD_VAR 0 1
32760: PPUSH
32761: CALL_OW 296
32765: PUSH
32766: LD_INT 10
32768: GREATER
32769: IFFALSE 32744
// SetSide ( unit , 1 ) ;
32771: LD_VAR 0 1
32775: PPUSH
32776: LD_INT 1
32778: PPUSH
32779: CALL_OW 235
// end ; end ; end ;
32783: LD_VAR 0 2
32787: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32788: LD_EXP 11
32792: PPUSH
32793: CALL_OW 310
32797: PUSH
32798: LD_INT 47
32800: EQUAL
32801: IFFALSE 32869
32803: GO 32805
32805: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32806: LD_STRING M1a
32808: PPUSH
32809: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32813: LD_INT 13
32815: PPUSH
32816: LD_INT 1
32818: PPUSH
32819: LD_INT 2
32821: PPUSH
32822: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32826: LD_INT 29
32828: PPUSH
32829: LD_INT 1
32831: PPUSH
32832: LD_INT 2
32834: PPUSH
32835: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32839: LD_EXP 11
32843: PPUSH
32844: LD_INT 9
32846: PPUSH
32847: CALL_OW 336
// can_escape := true ;
32851: LD_ADDR_EXP 7
32855: PUSH
32856: LD_INT 1
32858: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32859: LD_INT 19
32861: PPUSH
32862: LD_INT 1
32864: PPUSH
32865: CALL_OW 424
// end ;
32869: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32870: LD_INT 22
32872: PUSH
32873: LD_INT 4
32875: PUSH
32876: EMPTY
32877: LIST
32878: LIST
32879: PUSH
32880: LD_INT 34
32882: PUSH
32883: LD_INT 12
32885: PUSH
32886: EMPTY
32887: LIST
32888: LIST
32889: PUSH
32890: EMPTY
32891: LIST
32892: LIST
32893: PPUSH
32894: CALL_OW 69
32898: IFFALSE 32980
32900: GO 32902
32902: DISABLE
32903: LD_INT 0
32905: PPUSH
// begin enable ;
32906: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32907: LD_ADDR_VAR 0 1
32911: PUSH
32912: LD_INT 22
32914: PUSH
32915: LD_INT 4
32917: PUSH
32918: EMPTY
32919: LIST
32920: LIST
32921: PUSH
32922: LD_INT 34
32924: PUSH
32925: LD_INT 12
32927: PUSH
32928: EMPTY
32929: LIST
32930: LIST
32931: PUSH
32932: EMPTY
32933: LIST
32934: LIST
32935: PPUSH
32936: CALL_OW 69
32940: PUSH
32941: FOR_IN
32942: IFFALSE 32978
// if GetDistUnits ( i , JMM ) < 6 then
32944: LD_VAR 0 1
32948: PPUSH
32949: LD_EXP 11
32953: PPUSH
32954: CALL_OW 296
32958: PUSH
32959: LD_INT 6
32961: LESS
32962: IFFALSE 32976
// SetSide ( i , 7 ) ;
32964: LD_VAR 0 1
32968: PPUSH
32969: LD_INT 7
32971: PPUSH
32972: CALL_OW 235
32976: GO 32941
32978: POP
32979: POP
// end ;
32980: PPOPN 1
32982: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32983: LD_EXP 7
32987: PUSH
32988: LD_INT 19
32990: PPUSH
32991: LD_INT 22
32993: PUSH
32994: LD_INT 7
32996: PUSH
32997: EMPTY
32998: LIST
32999: LIST
33000: PUSH
33001: LD_INT 21
33003: PUSH
33004: LD_INT 1
33006: PUSH
33007: EMPTY
33008: LIST
33009: LIST
33010: PUSH
33011: EMPTY
33012: LIST
33013: LIST
33014: PPUSH
33015: CALL_OW 71
33019: NOT
33020: AND
33021: PUSH
33022: LD_INT 3
33024: PPUSH
33025: CALL_OW 469
33029: NOT
33030: AND
33031: PUSH
33032: LD_INT 5
33034: PPUSH
33035: CALL_OW 469
33039: NOT
33040: AND
33041: IFFALSE 34267
33043: GO 33045
33045: DISABLE
33046: LD_INT 0
33048: PPUSH
33049: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33050: LD_ADDR_VAR 0 1
33054: PUSH
33055: LD_EXP 3
33059: PPUSH
33060: LD_INT 22
33062: PUSH
33063: LD_INT 4
33065: PUSH
33066: EMPTY
33067: LIST
33068: LIST
33069: PUSH
33070: LD_INT 21
33072: PUSH
33073: LD_INT 1
33075: PUSH
33076: EMPTY
33077: LIST
33078: LIST
33079: PUSH
33080: EMPTY
33081: LIST
33082: LIST
33083: PPUSH
33084: CALL_OW 72
33088: PUSH
33089: LD_INT 0
33091: EQUAL
33092: ST_TO_ADDR
// if not all_taken then
33093: LD_VAR 0 1
33097: NOT
33098: IFFALSE 33239
// case query ( Q1 ) of 1 :
33100: LD_STRING Q1
33102: PPUSH
33103: CALL_OW 97
33107: PUSH
33108: LD_INT 1
33110: DOUBLE
33111: EQUAL
33112: IFTRUE 33116
33114: GO 33227
33116: POP
// begin repeat wait ( 0 0$1 ) ;
33117: LD_INT 35
33119: PPUSH
33120: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33124: LD_EXP 3
33128: PPUSH
33129: LD_INT 22
33131: PUSH
33132: LD_INT 4
33134: PUSH
33135: EMPTY
33136: LIST
33137: LIST
33138: PUSH
33139: LD_INT 21
33141: PUSH
33142: LD_INT 1
33144: PUSH
33145: EMPTY
33146: LIST
33147: LIST
33148: PUSH
33149: EMPTY
33150: LIST
33151: LIST
33152: PPUSH
33153: CALL_OW 72
33157: PUSH
33158: LD_INT 0
33160: EQUAL
33161: PUSH
33162: LD_INT 19
33164: PPUSH
33165: LD_INT 22
33167: PUSH
33168: LD_INT 7
33170: PUSH
33171: EMPTY
33172: LIST
33173: LIST
33174: PUSH
33175: LD_INT 21
33177: PUSH
33178: LD_INT 1
33180: PUSH
33181: EMPTY
33182: LIST
33183: LIST
33184: PUSH
33185: EMPTY
33186: LIST
33187: LIST
33188: PPUSH
33189: CALL_OW 71
33193: NOT
33194: AND
33195: PUSH
33196: LD_INT 3
33198: PPUSH
33199: CALL_OW 469
33203: NOT
33204: AND
33205: PUSH
33206: LD_INT 5
33208: PPUSH
33209: CALL_OW 469
33213: NOT
33214: AND
33215: IFFALSE 33117
// all_taken := true ;
33217: LD_ADDR_VAR 0 1
33221: PUSH
33222: LD_INT 1
33224: ST_TO_ADDR
// end ; 2 :
33225: GO 33239
33227: LD_INT 2
33229: DOUBLE
33230: EQUAL
33231: IFTRUE 33235
33233: GO 33238
33235: POP
// ; end ;
33236: GO 33239
33238: POP
// if team_kill_counter then
33239: LD_EXP 9
33243: IFFALSE 33259
// Say ( JMM , D5-JMM-1 ) else
33245: LD_EXP 11
33249: PPUSH
33250: LD_STRING D5-JMM-1
33252: PPUSH
33253: CALL_OW 88
33257: GO 33271
// Say ( JMM , D5-JMM-1a ) ;
33259: LD_EXP 11
33263: PPUSH
33264: LD_STRING D5-JMM-1a
33266: PPUSH
33267: CALL_OW 88
// if all_taken then
33271: LD_VAR 0 1
33275: IFFALSE 33289
// AddMedal ( All , 1 ) else
33277: LD_STRING All
33279: PPUSH
33280: LD_INT 1
33282: PPUSH
33283: CALL_OW 101
33287: GO 33300
// AddMedal ( All , - 1 ) ;
33289: LD_STRING All
33291: PPUSH
33292: LD_INT 1
33294: NEG
33295: PPUSH
33296: CALL_OW 101
// if team_kill_counter then
33300: LD_EXP 9
33304: IFFALSE 33319
// AddMedal ( Save , - 1 ) else
33306: LD_STRING Save
33308: PPUSH
33309: LD_INT 1
33311: NEG
33312: PPUSH
33313: CALL_OW 101
33317: GO 33329
// AddMedal ( Save , 1 ) ;
33319: LD_STRING Save
33321: PPUSH
33322: LD_INT 1
33324: PPUSH
33325: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33329: LD_EXP 8
33333: PUSH
33334: LD_INT 2
33336: PUSH
33337: LD_INT 1
33339: PUSH
33340: LD_INT 1
33342: PUSH
33343: EMPTY
33344: LIST
33345: LIST
33346: LIST
33347: PUSH
33348: LD_OWVAR 67
33352: ARRAY
33353: GREATEREQUAL
33354: IFFALSE 33369
// AddMedal ( Friendship , - 1 ) else
33356: LD_STRING Friendship
33358: PPUSH
33359: LD_INT 1
33361: NEG
33362: PPUSH
33363: CALL_OW 101
33367: GO 33379
// AddMedal ( Friendship , 1 ) ;
33369: LD_STRING Friendship
33371: PPUSH
33372: LD_INT 1
33374: PPUSH
33375: CALL_OW 101
// GiveMedals ( MAIN ) ;
33379: LD_STRING MAIN
33381: PPUSH
33382: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33386: LD_ADDR_VAR 0 2
33390: PUSH
33391: LD_INT 22
33393: PUSH
33394: LD_INT 7
33396: PUSH
33397: EMPTY
33398: LIST
33399: LIST
33400: PUSH
33401: LD_INT 2
33403: PUSH
33404: LD_INT 25
33406: PUSH
33407: LD_INT 1
33409: PUSH
33410: EMPTY
33411: LIST
33412: LIST
33413: PUSH
33414: LD_INT 25
33416: PUSH
33417: LD_INT 2
33419: PUSH
33420: EMPTY
33421: LIST
33422: LIST
33423: PUSH
33424: LD_INT 25
33426: PUSH
33427: LD_INT 3
33429: PUSH
33430: EMPTY
33431: LIST
33432: LIST
33433: PUSH
33434: LD_INT 25
33436: PUSH
33437: LD_INT 4
33439: PUSH
33440: EMPTY
33441: LIST
33442: LIST
33443: PUSH
33444: LD_INT 25
33446: PUSH
33447: LD_INT 5
33449: PUSH
33450: EMPTY
33451: LIST
33452: LIST
33453: PUSH
33454: LD_INT 25
33456: PUSH
33457: LD_INT 8
33459: PUSH
33460: EMPTY
33461: LIST
33462: LIST
33463: PUSH
33464: LD_INT 25
33466: PUSH
33467: LD_INT 9
33469: PUSH
33470: EMPTY
33471: LIST
33472: LIST
33473: PUSH
33474: EMPTY
33475: LIST
33476: LIST
33477: LIST
33478: LIST
33479: LIST
33480: LIST
33481: LIST
33482: LIST
33483: PUSH
33484: EMPTY
33485: LIST
33486: LIST
33487: PUSH
33488: EMPTY
33489: LIST
33490: PPUSH
33491: CALL_OW 69
33495: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33496: LD_VAR 0 2
33500: PUSH
33501: LD_EXP 12
33505: UNION
33506: PPUSH
33507: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33511: LD_EXP 11
33515: PPUSH
33516: LD_STRING 12a_JMM
33518: PPUSH
33519: CALL_OW 38
// if IsLive ( Roth ) then
33523: LD_EXP 12
33527: PPUSH
33528: CALL_OW 300
33532: IFFALSE 33546
// SaveCharacters ( Roth , 12a_Roth ) ;
33534: LD_EXP 12
33538: PPUSH
33539: LD_STRING 12a_Roth
33541: PPUSH
33542: CALL_OW 38
// if Lisa in tmp then
33546: LD_EXP 20
33550: PUSH
33551: LD_VAR 0 2
33555: IN
33556: IFFALSE 33572
// SaveCharacters ( Lisa , 12a_Lisa ) else
33558: LD_EXP 20
33562: PPUSH
33563: LD_STRING 12a_Lisa
33565: PPUSH
33566: CALL_OW 38
33570: GO 33590
// if Lisa then
33572: LD_EXP 20
33576: IFFALSE 33590
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33578: LD_EXP 20
33582: PPUSH
33583: LD_STRING 12p_Lisa
33585: PPUSH
33586: CALL_OW 38
// if Donaldson in tmp then
33590: LD_EXP 21
33594: PUSH
33595: LD_VAR 0 2
33599: IN
33600: IFFALSE 33616
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33602: LD_EXP 21
33606: PPUSH
33607: LD_STRING 12a_Donaldson
33609: PPUSH
33610: CALL_OW 38
33614: GO 33634
// if Donaldson then
33616: LD_EXP 21
33620: IFFALSE 33634
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33622: LD_EXP 21
33626: PPUSH
33627: LD_STRING 12p_Donaldson
33629: PPUSH
33630: CALL_OW 38
// if Bobby in tmp then
33634: LD_EXP 22
33638: PUSH
33639: LD_VAR 0 2
33643: IN
33644: IFFALSE 33660
// SaveCharacters ( Bobby , 12a_Bobby ) else
33646: LD_EXP 22
33650: PPUSH
33651: LD_STRING 12a_Bobby
33653: PPUSH
33654: CALL_OW 38
33658: GO 33678
// if Bobby then
33660: LD_EXP 22
33664: IFFALSE 33678
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33666: LD_EXP 22
33670: PPUSH
33671: LD_STRING 12p_Bobby
33673: PPUSH
33674: CALL_OW 38
// if Cyrus in tmp then
33678: LD_EXP 23
33682: PUSH
33683: LD_VAR 0 2
33687: IN
33688: IFFALSE 33704
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33690: LD_EXP 23
33694: PPUSH
33695: LD_STRING 12a_Cyrus
33697: PPUSH
33698: CALL_OW 38
33702: GO 33722
// if Cyrus then
33704: LD_EXP 23
33708: IFFALSE 33722
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33710: LD_EXP 23
33714: PPUSH
33715: LD_STRING 12p_Cyrus
33717: PPUSH
33718: CALL_OW 38
// if Denis in tmp then
33722: LD_EXP 24
33726: PUSH
33727: LD_VAR 0 2
33731: IN
33732: IFFALSE 33746
// SaveCharacters ( Denis , 12a_Denis ) ;
33734: LD_EXP 24
33738: PPUSH
33739: LD_STRING 12a_Denis
33741: PPUSH
33742: CALL_OW 38
// if Brown in tmp then
33746: LD_EXP 25
33750: PUSH
33751: LD_VAR 0 2
33755: IN
33756: IFFALSE 33772
// SaveCharacters ( Brown , 12a_Brown ) else
33758: LD_EXP 25
33762: PPUSH
33763: LD_STRING 12a_Brown
33765: PPUSH
33766: CALL_OW 38
33770: GO 33796
// if Brown in tmp then
33772: LD_EXP 25
33776: PUSH
33777: LD_VAR 0 2
33781: IN
33782: IFFALSE 33796
// SaveCharacters ( Brown , 12p_Brown ) ;
33784: LD_EXP 25
33788: PPUSH
33789: LD_STRING 12p_Brown
33791: PPUSH
33792: CALL_OW 38
// if Gladstone in tmp then
33796: LD_EXP 26
33800: PUSH
33801: LD_VAR 0 2
33805: IN
33806: IFFALSE 33822
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33808: LD_EXP 26
33812: PPUSH
33813: LD_STRING 12a_Gladstone
33815: PPUSH
33816: CALL_OW 38
33820: GO 33840
// if Gladstone then
33822: LD_EXP 26
33826: IFFALSE 33840
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33828: LD_EXP 26
33832: PPUSH
33833: LD_STRING 12p_Gladstone
33835: PPUSH
33836: CALL_OW 38
// if Houten in tmp then
33840: LD_EXP 27
33844: PUSH
33845: LD_VAR 0 2
33849: IN
33850: IFFALSE 33866
// SaveCharacters ( Houten , 12a_Houten ) else
33852: LD_EXP 27
33856: PPUSH
33857: LD_STRING 12a_Houten
33859: PPUSH
33860: CALL_OW 38
33864: GO 33884
// if Houten then
33866: LD_EXP 27
33870: IFFALSE 33884
// SaveCharacters ( Houten , 12p_Houten ) ;
33872: LD_EXP 27
33876: PPUSH
33877: LD_STRING 12p_Houten
33879: PPUSH
33880: CALL_OW 38
// if Cornel in tmp then
33884: LD_EXP 28
33888: PUSH
33889: LD_VAR 0 2
33893: IN
33894: IFFALSE 33910
// SaveCharacters ( Cornel , 12a_Cornell ) else
33896: LD_EXP 28
33900: PPUSH
33901: LD_STRING 12a_Cornell
33903: PPUSH
33904: CALL_OW 38
33908: GO 33928
// if Cornel then
33910: LD_EXP 28
33914: IFFALSE 33928
// SaveCharacters ( Cornel , 12p_Cornell ) ;
33916: LD_EXP 28
33920: PPUSH
33921: LD_STRING 12p_Cornell
33923: PPUSH
33924: CALL_OW 38
// if Gary in tmp then
33928: LD_EXP 29
33932: PUSH
33933: LD_VAR 0 2
33937: IN
33938: IFFALSE 33954
// SaveCharacters ( Gary , 12a_Gary ) else
33940: LD_EXP 29
33944: PPUSH
33945: LD_STRING 12a_Gary
33947: PPUSH
33948: CALL_OW 38
33952: GO 33972
// if Gary then
33954: LD_EXP 29
33958: IFFALSE 33972
// SaveCharacters ( Gary , 12p_Gary ) ;
33960: LD_EXP 29
33964: PPUSH
33965: LD_STRING 12p_Gary
33967: PPUSH
33968: CALL_OW 38
// if Frank in tmp then
33972: LD_EXP 30
33976: PUSH
33977: LD_VAR 0 2
33981: IN
33982: IFFALSE 33996
// SaveCharacters ( Frank , 12a_Frank ) ;
33984: LD_EXP 30
33988: PPUSH
33989: LD_STRING 12a_Frank
33991: PPUSH
33992: CALL_OW 38
// if Kikuchi in tmp then
33996: LD_EXP 31
34000: PUSH
34001: LD_VAR 0 2
34005: IN
34006: IFFALSE 34022
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
34008: LD_EXP 31
34012: PPUSH
34013: LD_STRING 12a_Kikuchi
34015: PPUSH
34016: CALL_OW 38
34020: GO 34040
// if Kikuchi then
34022: LD_EXP 31
34026: IFFALSE 34040
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34028: LD_EXP 31
34032: PPUSH
34033: LD_STRING 12p_Kikuchi
34035: PPUSH
34036: CALL_OW 38
// if Simms in tmp then
34040: LD_EXP 32
34044: PUSH
34045: LD_VAR 0 2
34049: IN
34050: IFFALSE 34064
// SaveCharacters ( Simms , 12a_Simms ) ;
34052: LD_EXP 32
34056: PPUSH
34057: LD_STRING 12a_Simms
34059: PPUSH
34060: CALL_OW 38
// if Joan in tmp then
34064: LD_EXP 33
34068: PUSH
34069: LD_VAR 0 2
34073: IN
34074: IFFALSE 34088
// SaveCharacters ( Joan , 12a_Joan ) ;
34076: LD_EXP 33
34080: PPUSH
34081: LD_STRING 12a_Joan
34083: PPUSH
34084: CALL_OW 38
// if DeltaDoctor in tmp then
34088: LD_EXP 34
34092: PUSH
34093: LD_VAR 0 2
34097: IN
34098: IFFALSE 34112
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34100: LD_EXP 34
34104: PPUSH
34105: LD_STRING 12a_DeltaDoctor
34107: PPUSH
34108: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34112: LD_ADDR_VAR 0 2
34116: PUSH
34117: LD_VAR 0 2
34121: PUSH
34122: LD_EXP 11
34126: PUSH
34127: LD_EXP 12
34131: PUSH
34132: LD_EXP 20
34136: PUSH
34137: LD_EXP 21
34141: PUSH
34142: LD_EXP 22
34146: PUSH
34147: LD_EXP 23
34151: PUSH
34152: LD_EXP 24
34156: PUSH
34157: LD_EXP 25
34161: PUSH
34162: LD_EXP 26
34166: PUSH
34167: LD_EXP 27
34171: PUSH
34172: LD_EXP 28
34176: PUSH
34177: LD_EXP 29
34181: PUSH
34182: LD_EXP 30
34186: PUSH
34187: LD_EXP 31
34191: PUSH
34192: LD_EXP 32
34196: PUSH
34197: LD_EXP 33
34201: PUSH
34202: LD_EXP 34
34206: PUSH
34207: EMPTY
34208: LIST
34209: LIST
34210: LIST
34211: LIST
34212: LIST
34213: LIST
34214: LIST
34215: LIST
34216: LIST
34217: LIST
34218: LIST
34219: LIST
34220: LIST
34221: LIST
34222: LIST
34223: LIST
34224: LIST
34225: DIFF
34226: ST_TO_ADDR
// if tmp then
34227: LD_VAR 0 2
34231: IFFALSE 34245
// SaveCharacters ( tmp , 12a_others ) ;
34233: LD_VAR 0 2
34237: PPUSH
34238: LD_STRING 12a_others
34240: PPUSH
34241: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
34245: LD_EXP 5
34249: PUSH
34250: LD_VAR 0 2
34254: DIFF
34255: PPUSH
34256: LD_STRING 12p_others
34258: PPUSH
34259: CALL_OW 38
// YouWin ;
34263: CALL_OW 103
// end ; end_of_file
34267: PPOPN 2
34269: END
// on SailEvent ( event ) do var tmp ;
34270: LD_INT 0
34272: PPUSH
// begin if event = 1 then
34273: LD_VAR 0 1
34277: PUSH
34278: LD_INT 1
34280: EQUAL
34281: IFFALSE 34354
// begin if not mobile_patrol then
34283: LD_EXP 14
34287: NOT
34288: IFFALSE 34292
// exit ;
34290: GO 34354
// tmp := mobile_patrol [ mobile_patrol ] ;
34292: LD_ADDR_VAR 0 2
34296: PUSH
34297: LD_EXP 14
34301: PUSH
34302: LD_EXP 14
34306: ARRAY
34307: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34308: LD_ADDR_EXP 14
34312: PUSH
34313: LD_EXP 14
34317: PPUSH
34318: LD_EXP 14
34322: PPUSH
34323: CALL_OW 3
34327: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34328: LD_VAR 0 2
34332: PPUSH
34333: LD_EXP 15
34337: PUSH
34338: LD_EXP 14
34342: PUSH
34343: LD_INT 1
34345: PLUS
34346: ARRAY
34347: PPUSH
34348: EMPTY
34349: PPUSH
34350: CALL 6207 0 3
// end ; end ;
34354: PPOPN 2
34356: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34357: LD_VAR 0 1
34361: PUSH
34362: LD_EXP 11
34366: EQUAL
34367: IFFALSE 34376
// YouLost ( JMM ) ;
34369: LD_STRING JMM
34371: PPUSH
34372: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34376: LD_VAR 0 1
34380: PPUSH
34381: CALL_OW 255
34385: PUSH
34386: LD_INT 7
34388: EQUAL
34389: PUSH
34390: LD_VAR 0 1
34394: PPUSH
34395: CALL_OW 264
34399: PUSH
34400: LD_INT 12
34402: EQUAL
34403: AND
34404: IFFALSE 34413
// YouLost ( Artifact ) ;
34406: LD_STRING Artifact
34408: PPUSH
34409: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
34413: LD_VAR 0 1
34417: PPUSH
34418: CALL_OW 255
34422: PUSH
34423: LD_INT 7
34425: EQUAL
34426: PUSH
34427: LD_VAR 0 1
34431: PPUSH
34432: CALL_OW 247
34436: PUSH
34437: LD_INT 1
34439: EQUAL
34440: AND
34441: IFFALSE 34457
// team_kill_counter := team_kill_counter + 1 ;
34443: LD_ADDR_EXP 9
34447: PUSH
34448: LD_EXP 9
34452: PUSH
34453: LD_INT 1
34455: PLUS
34456: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34457: LD_VAR 0 1
34461: PPUSH
34462: CALL_OW 255
34466: PUSH
34467: LD_INT 1
34469: EQUAL
34470: PUSH
34471: LD_VAR 0 1
34475: PPUSH
34476: CALL_OW 247
34480: PUSH
34481: LD_INT 1
34483: EQUAL
34484: AND
34485: IFFALSE 34501
// friends_kill_counter := friends_kill_counter + 1 ;
34487: LD_ADDR_EXP 8
34491: PUSH
34492: LD_EXP 8
34496: PUSH
34497: LD_INT 1
34499: PLUS
34500: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34501: LD_VAR 0 1
34505: PPUSH
34506: CALL_OW 255
34510: PUSH
34511: LD_INT 1
34513: NONEQUAL
34514: IFFALSE 34518
// exit ;
34516: GO 34595
// if GetControl ( un ) = control_remote then
34518: LD_VAR 0 1
34522: PPUSH
34523: CALL_OW 263
34527: PUSH
34528: LD_INT 2
34530: EQUAL
34531: IFFALSE 34549
// defenders := defenders diff un ;
34533: LD_ADDR_EXP 17
34537: PUSH
34538: LD_EXP 17
34542: PUSH
34543: LD_VAR 0 1
34547: DIFF
34548: ST_TO_ADDR
// if not un in defenders then
34549: LD_VAR 0 1
34553: PUSH
34554: LD_EXP 17
34558: IN
34559: NOT
34560: IFFALSE 34595
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34562: LD_ADDR_EXP 18
34566: PUSH
34567: LD_VAR 0 1
34571: PPUSH
34572: CALL_OW 250
34576: PUSH
34577: LD_VAR 0 1
34581: PPUSH
34582: CALL_OW 251
34586: PUSH
34587: EMPTY
34588: LIST
34589: LIST
34590: ST_TO_ADDR
// Defend ;
34591: CALL 2405 0 0
// end ; end ;
34595: PPOPN 1
34597: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34598: LD_VAR 0 1
34602: PPUSH
34603: CALL_OW 255
34607: PUSH
34608: LD_INT 1
34610: NONEQUAL
34611: IFFALSE 34615
// exit ;
34613: GO 34639
// if GetControl ( veh ) = control_remote then
34615: LD_VAR 0 1
34619: PPUSH
34620: CALL_OW 263
34624: PUSH
34625: LD_INT 2
34627: EQUAL
34628: IFFALSE 34639
// Connect ( veh ) ;
34630: LD_VAR 0 1
34634: PPUSH
34635: CALL 5402 0 1
// end ;
34639: PPOPN 2
34641: END
// on UnitGoesToRed ( un ) do var i , veh ;
34642: LD_INT 0
34644: PPUSH
34645: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34646: LD_VAR 0 1
34650: PPUSH
34651: CALL_OW 255
34655: PUSH
34656: LD_INT 1
34658: EQUAL
34659: PUSH
34660: LD_VAR 0 1
34664: PPUSH
34665: CALL_OW 263
34669: PUSH
34670: LD_INT 2
34672: EQUAL
34673: AND
34674: IFFALSE 34685
// ComUnlink ( un ) ;
34676: LD_VAR 0 1
34680: PPUSH
34681: CALL_OW 136
// if un = ambar0 then
34685: LD_VAR 0 1
34689: PUSH
34690: LD_INT 18
34692: EQUAL
34693: IFFALSE 34803
// begin uc_side := 1 ;
34695: LD_ADDR_OWVAR 20
34699: PUSH
34700: LD_INT 1
34702: ST_TO_ADDR
// uc_nation := 1 ;
34703: LD_ADDR_OWVAR 21
34707: PUSH
34708: LD_INT 1
34710: ST_TO_ADDR
// for i = 1 to 6 do
34711: LD_ADDR_VAR 0 2
34715: PUSH
34716: DOUBLE
34717: LD_INT 1
34719: DEC
34720: ST_TO_ADDR
34721: LD_INT 6
34723: PUSH
34724: FOR_TO
34725: IFFALSE 34801
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34727: LD_INT 3
34729: PPUSH
34730: LD_INT 1
34732: PPUSH
34733: LD_INT 3
34735: PPUSH
34736: LD_INT 4
34738: PPUSH
34739: LD_INT 100
34741: PPUSH
34742: CALL 5166 0 5
// veh := CreateVehicle ;
34746: LD_ADDR_VAR 0 3
34750: PUSH
34751: CALL_OW 45
34755: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34756: LD_VAR 0 3
34760: PPUSH
34761: LD_INT 1
34763: PPUSH
34764: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34768: LD_VAR 0 3
34772: PPUSH
34773: LD_INT 25
34775: PPUSH
34776: LD_INT 0
34778: PPUSH
34779: CALL_OW 49
// defenders := defenders ^ veh ;
34783: LD_ADDR_EXP 17
34787: PUSH
34788: LD_EXP 17
34792: PUSH
34793: LD_VAR 0 3
34797: ADD
34798: ST_TO_ADDR
// end ;
34799: GO 34724
34801: POP
34802: POP
// end ; end ;
34803: PPOPN 3
34805: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
34806: LD_VAR 0 2
34810: PUSH
34811: LD_EXP 13
34815: EQUAL
34816: IFFALSE 34827
// RemoveUnit ( Powell ) ;
34818: LD_EXP 13
34822: PPUSH
34823: CALL_OW 64
// end ;
34827: PPOPN 2
34829: END
