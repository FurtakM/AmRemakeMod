// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29625 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2785 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30050 0 0
// PreparePatrol ;
 103: CALL 889 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := 1 ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 1
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 5081 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 5144 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 0
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defcon_wave := 0 ;
 556: LD_ADDR_EXP 19
 560: PUSH
 561: LD_INT 0
 563: ST_TO_ADDR
// defenders := [ ] ;
 564: LD_ADDR_EXP 17
 568: PUSH
 569: EMPTY
 570: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 571: LD_INT 5
 573: PPUSH
 574: LD_STRING alpha
 576: PPUSH
 577: CALL_OW 500
// uc_side := 1 ;
 581: LD_ADDR_OWVAR 20
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// uc_nation := 1 ;
 589: LD_ADDR_OWVAR 21
 593: PUSH
 594: LD_INT 1
 596: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 597: LD_ADDR_EXP 13
 601: PUSH
 602: LD_STRING Powell
 604: PPUSH
 605: CALL_OW 25
 609: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 610: LD_EXP 13
 614: PPUSH
 615: LD_INT 110
 617: PPUSH
 618: LD_INT 26
 620: PPUSH
 621: LD_INT 0
 623: PPUSH
 624: CALL_OW 48
// ComHold ( Powell ) ;
 628: LD_EXP 13
 632: PPUSH
 633: CALL_OW 140
// for i = 1 to 5 do
 637: LD_ADDR_VAR 0 2
 641: PUSH
 642: DOUBLE
 643: LD_INT 1
 645: DEC
 646: ST_TO_ADDR
 647: LD_INT 5
 649: PUSH
 650: FOR_TO
 651: IFFALSE 707
// begin PrepareHuman ( false , 1 , 10 ) ;
 653: LD_INT 0
 655: PPUSH
 656: LD_INT 1
 658: PPUSH
 659: LD_INT 10
 661: PPUSH
 662: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 666: LD_ADDR_EXP 16
 670: PUSH
 671: LD_EXP 16
 675: PPUSH
 676: LD_INT 1
 678: PPUSH
 679: CALL_OW 44
 683: PPUSH
 684: CALL_OW 2
 688: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 689: LD_EXP 16
 693: PUSH
 694: LD_INT 1
 696: ARRAY
 697: PPUSH
 698: LD_INT 18
 700: PPUSH
 701: CALL_OW 52
// end ;
 705: GO 650
 707: POP
 708: POP
// if Difficulty > 2 then
 709: LD_OWVAR 67
 713: PUSH
 714: LD_INT 2
 716: GREATER
 717: IFFALSE 766
// begin bc_type := b_turret ;
 719: LD_ADDR_OWVAR 42
 723: PUSH
 724: LD_INT 33
 726: ST_TO_ADDR
// bc_level := 7 ;
 727: LD_ADDR_OWVAR 43
 731: PUSH
 732: LD_INT 7
 734: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 735: LD_ADDR_VAR 0 4
 739: PUSH
 740: LD_INT 107
 742: PPUSH
 743: LD_INT 55
 745: PPUSH
 746: LD_INT 5
 748: PPUSH
 749: CALL_OW 47
 753: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 754: LD_VAR 0 4
 758: PPUSH
 759: LD_INT 7
 761: PPUSH
 762: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 766: LD_ADDR_VAR 0 2
 770: PUSH
 771: LD_INT 22
 773: PUSH
 774: LD_INT 1
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: PUSH
 781: LD_INT 30
 783: PUSH
 784: LD_INT 3
 786: PUSH
 787: EMPTY
 788: LIST
 789: LIST
 790: PUSH
 791: EMPTY
 792: LIST
 793: LIST
 794: PPUSH
 795: CALL_OW 69
 799: PUSH
 800: LD_INT 22
 802: PUSH
 803: LD_INT 1
 805: PUSH
 806: EMPTY
 807: LIST
 808: LIST
 809: PUSH
 810: LD_INT 30
 812: PUSH
 813: LD_INT 36
 815: PUSH
 816: EMPTY
 817: LIST
 818: LIST
 819: PUSH
 820: EMPTY
 821: LIST
 822: LIST
 823: PPUSH
 824: CALL_OW 69
 828: ADD
 829: PUSH
 830: FOR_IN
 831: IFFALSE 882
// for j = 1 to 3 do
 833: LD_ADDR_VAR 0 3
 837: PUSH
 838: DOUBLE
 839: LD_INT 1
 841: DEC
 842: ST_TO_ADDR
 843: LD_INT 3
 845: PUSH
 846: FOR_TO
 847: IFFALSE 878
// begin PrepareHuman ( false , 3 , 6 ) ;
 849: LD_INT 0
 851: PPUSH
 852: LD_INT 3
 854: PPUSH
 855: LD_INT 6
 857: PPUSH
 858: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 862: CALL_OW 44
 866: PPUSH
 867: LD_VAR 0 2
 871: PPUSH
 872: CALL_OW 52
// end ;
 876: GO 846
 878: POP
 879: POP
 880: GO 830
 882: POP
 883: POP
// end ;
 884: LD_VAR 0 1
 888: RET
// export function PreparePatrol ; var i , un ; begin
 889: LD_INT 0
 891: PPUSH
 892: PPUSH
 893: PPUSH
// uc_side := 1 ;
 894: LD_ADDR_OWVAR 20
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// uc_nation := 1 ;
 902: LD_ADDR_OWVAR 21
 906: PUSH
 907: LD_INT 1
 909: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 910: LD_ADDR_EXP 15
 914: PUSH
 915: LD_INT 99
 917: PUSH
 918: LD_INT 55
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PUSH
 925: LD_INT 113
 927: PUSH
 928: LD_INT 67
 930: PUSH
 931: EMPTY
 932: LIST
 933: LIST
 934: PUSH
 935: LD_INT 129
 937: PUSH
 938: LD_INT 68
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PUSH
 945: LD_INT 135
 947: PUSH
 948: LD_INT 62
 950: PUSH
 951: EMPTY
 952: LIST
 953: LIST
 954: PUSH
 955: LD_INT 103
 957: PUSH
 958: LD_INT 41
 960: PUSH
 961: EMPTY
 962: LIST
 963: LIST
 964: PUSH
 965: EMPTY
 966: LIST
 967: LIST
 968: LIST
 969: LIST
 970: LIST
 971: PUSH
 972: LD_INT 27
 974: PUSH
 975: LD_INT 49
 977: PUSH
 978: EMPTY
 979: LIST
 980: LIST
 981: PUSH
 982: LD_INT 46
 984: PUSH
 985: LD_INT 49
 987: PUSH
 988: EMPTY
 989: LIST
 990: LIST
 991: PUSH
 992: LD_INT 87
 994: PUSH
 995: LD_INT 70
 997: PUSH
 998: EMPTY
 999: LIST
1000: LIST
1001: PUSH
1002: LD_INT 99
1004: PUSH
1005: LD_INT 79
1007: PUSH
1008: EMPTY
1009: LIST
1010: LIST
1011: PUSH
1012: LD_INT 118
1014: PUSH
1015: LD_INT 111
1017: PUSH
1018: EMPTY
1019: LIST
1020: LIST
1021: PUSH
1022: LD_INT 99
1024: PUSH
1025: LD_INT 79
1027: PUSH
1028: EMPTY
1029: LIST
1030: LIST
1031: PUSH
1032: LD_INT 87
1034: PUSH
1035: LD_INT 70
1037: PUSH
1038: EMPTY
1039: LIST
1040: LIST
1041: PUSH
1042: LD_INT 46
1044: PUSH
1045: LD_INT 49
1047: PUSH
1048: EMPTY
1049: LIST
1050: LIST
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: LIST
1056: LIST
1057: LIST
1058: LIST
1059: LIST
1060: LIST
1061: PUSH
1062: LD_INT 200
1064: PUSH
1065: LD_INT 88
1067: PUSH
1068: EMPTY
1069: LIST
1070: LIST
1071: PUSH
1072: LD_INT 175
1074: PUSH
1075: LD_INT 80
1077: PUSH
1078: EMPTY
1079: LIST
1080: LIST
1081: PUSH
1082: LD_INT 135
1084: PUSH
1085: LD_INT 62
1087: PUSH
1088: EMPTY
1089: LIST
1090: LIST
1091: PUSH
1092: LD_INT 117
1094: PUSH
1095: LD_INT 53
1097: PUSH
1098: EMPTY
1099: LIST
1100: LIST
1101: PUSH
1102: LD_INT 103
1104: PUSH
1105: LD_INT 41
1107: PUSH
1108: EMPTY
1109: LIST
1110: LIST
1111: PUSH
1112: LD_INT 99
1114: PUSH
1115: LD_INT 24
1117: PUSH
1118: EMPTY
1119: LIST
1120: LIST
1121: PUSH
1122: LD_INT 85
1124: PUSH
1125: LD_INT 3
1127: PUSH
1128: EMPTY
1129: LIST
1130: LIST
1131: PUSH
1132: LD_INT 99
1134: PUSH
1135: LD_INT 24
1137: PUSH
1138: EMPTY
1139: LIST
1140: LIST
1141: PUSH
1142: LD_INT 103
1144: PUSH
1145: LD_INT 41
1147: PUSH
1148: EMPTY
1149: LIST
1150: LIST
1151: PUSH
1152: LD_INT 98
1154: PUSH
1155: LD_INT 47
1157: PUSH
1158: EMPTY
1159: LIST
1160: LIST
1161: PUSH
1162: LD_INT 99
1164: PUSH
1165: LD_INT 56
1167: PUSH
1168: EMPTY
1169: LIST
1170: LIST
1171: PUSH
1172: LD_INT 96
1174: PUSH
1175: LD_INT 66
1177: PUSH
1178: EMPTY
1179: LIST
1180: LIST
1181: PUSH
1182: LD_INT 99
1184: PUSH
1185: LD_INT 56
1187: PUSH
1188: EMPTY
1189: LIST
1190: LIST
1191: PUSH
1192: LD_INT 112
1194: PUSH
1195: LD_INT 66
1197: PUSH
1198: EMPTY
1199: LIST
1200: LIST
1201: PUSH
1202: LD_INT 129
1204: PUSH
1205: LD_INT 68
1207: PUSH
1208: EMPTY
1209: LIST
1210: LIST
1211: PUSH
1212: LD_INT 135
1214: PUSH
1215: LD_INT 62
1217: PUSH
1218: EMPTY
1219: LIST
1220: LIST
1221: PUSH
1222: LD_INT 156
1224: PUSH
1225: LD_INT 71
1227: PUSH
1228: EMPTY
1229: LIST
1230: LIST
1231: PUSH
1232: LD_INT 168
1234: PUSH
1235: LD_INT 76
1237: PUSH
1238: EMPTY
1239: LIST
1240: LIST
1241: PUSH
1242: LD_INT 168
1244: PUSH
1245: LD_INT 61
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: PUSH
1252: LD_INT 168
1254: PUSH
1255: LD_INT 75
1257: PUSH
1258: EMPTY
1259: LIST
1260: LIST
1261: PUSH
1262: LD_INT 185
1264: PUSH
1265: LD_INT 85
1267: PUSH
1268: EMPTY
1269: LIST
1270: LIST
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: LIST
1287: LIST
1288: LIST
1289: LIST
1290: LIST
1291: LIST
1292: LIST
1293: LIST
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: ST_TO_ADDR
// mobile_patrol := [ ] ;
1300: LD_ADDR_EXP 14
1304: PUSH
1305: EMPTY
1306: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1307: LD_INT 3
1309: PPUSH
1310: LD_INT 1
1312: PPUSH
1313: LD_INT 3
1315: PPUSH
1316: LD_INT 4
1318: PPUSH
1319: LD_INT 100
1321: PPUSH
1322: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1326: LD_ADDR_EXP 14
1330: PUSH
1331: LD_EXP 14
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: CALL_OW 45
1343: PPUSH
1344: CALL_OW 2
1348: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1349: LD_EXP 14
1353: PUSH
1354: LD_INT 1
1356: ARRAY
1357: PPUSH
1358: LD_INT 99
1360: PPUSH
1361: LD_INT 55
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1371: LD_INT 2
1373: PPUSH
1374: LD_INT 1
1376: PPUSH
1377: LD_INT 3
1379: PPUSH
1380: LD_INT 4
1382: PPUSH
1383: LD_INT 100
1385: PPUSH
1386: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1390: LD_ADDR_EXP 14
1394: PUSH
1395: LD_EXP 14
1399: PPUSH
1400: LD_INT 2
1402: PPUSH
1403: CALL_OW 45
1407: PPUSH
1408: CALL_OW 2
1412: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1413: LD_EXP 14
1417: PUSH
1418: LD_INT 2
1420: ARRAY
1421: PPUSH
1422: LD_INT 27
1424: PPUSH
1425: LD_INT 49
1427: PPUSH
1428: LD_INT 0
1430: PPUSH
1431: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1435: LD_INT 3
1437: PPUSH
1438: LD_INT 1
1440: PPUSH
1441: LD_INT 3
1443: PPUSH
1444: LD_INT 7
1446: PPUSH
1447: LD_INT 100
1449: PPUSH
1450: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1454: LD_ADDR_EXP 14
1458: PUSH
1459: LD_EXP 14
1463: PPUSH
1464: LD_INT 3
1466: PPUSH
1467: CALL_OW 45
1471: PPUSH
1472: CALL_OW 2
1476: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1477: LD_EXP 14
1481: PUSH
1482: LD_INT 3
1484: ARRAY
1485: PPUSH
1486: LD_INT 200
1488: PPUSH
1489: LD_INT 88
1491: PPUSH
1492: LD_INT 0
1494: PPUSH
1495: CALL_OW 48
// for i = mobile_patrol downto 1 do
1499: LD_ADDR_VAR 0 2
1503: PUSH
1504: DOUBLE
1505: LD_EXP 14
1509: INC
1510: ST_TO_ADDR
1511: LD_INT 1
1513: PUSH
1514: FOR_DOWNTO
1515: IFFALSE 1526
// RaiseSailEvent ( 1 ) ;
1517: LD_INT 1
1519: PPUSH
1520: CALL_OW 427
1524: GO 1514
1526: POP
1527: POP
// end ;
1528: LD_VAR 0 1
1532: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1533: LD_INT 0
1535: PPUSH
1536: PPUSH
1537: PPUSH
1538: PPUSH
1539: PPUSH
1540: PPUSH
1541: PPUSH
1542: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1543: LD_ADDR_VAR 0 5
1547: PUSH
1548: LD_INT 20
1550: PUSH
1551: LD_INT 4
1553: PUSH
1554: EMPTY
1555: LIST
1556: LIST
1557: PUSH
1558: LD_INT 21
1560: PUSH
1561: LD_INT 5
1563: PUSH
1564: EMPTY
1565: LIST
1566: LIST
1567: PUSH
1568: LD_INT 22
1570: PUSH
1571: LD_INT 1
1573: PUSH
1574: EMPTY
1575: LIST
1576: LIST
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: LIST
1582: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1583: LD_ADDR_VAR 0 6
1587: PUSH
1588: LD_INT 176
1590: PUSH
1591: LD_INT 81
1593: PUSH
1594: LD_INT 135
1596: PUSH
1597: LD_INT 62
1599: PUSH
1600: LD_INT 114
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 93
1608: PUSH
1609: LD_INT 71
1611: PUSH
1612: LD_INT 76
1614: PUSH
1615: LD_INT 67
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: LIST
1622: LIST
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: PUSH
1630: LD_INT 107
1632: PUSH
1633: LD_INT 92
1635: PUSH
1636: LD_INT 92
1638: PUSH
1639: LD_INT 72
1641: PUSH
1642: LD_INT 77
1644: PUSH
1645: LD_INT 68
1647: PUSH
1648: EMPTY
1649: LIST
1650: LIST
1651: LIST
1652: LIST
1653: LIST
1654: LIST
1655: PUSH
1656: LD_INT 45
1658: PUSH
1659: LD_INT 49
1661: PUSH
1662: LD_INT 67
1664: PUSH
1665: LD_INT 59
1667: PUSH
1668: LD_INT 77
1670: PUSH
1671: LD_INT 68
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: LIST
1679: LIST
1680: LIST
1681: PUSH
1682: EMPTY
1683: LIST
1684: LIST
1685: LIST
1686: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1687: LD_ADDR_VAR 0 4
1691: PUSH
1692: LD_INT 1
1694: PPUSH
1695: LD_VAR 0 5
1699: PPUSH
1700: CALL_OW 12
1704: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1705: LD_ADDR_VAR 0 3
1709: PUSH
1710: LD_INT 1
1712: PPUSH
1713: LD_INT 2
1715: PPUSH
1716: CALL_OW 12
1720: ST_TO_ADDR
// uc_side := 1 ;
1721: LD_ADDR_OWVAR 20
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// uc_nation := 1 ;
1729: LD_ADDR_OWVAR 21
1733: PUSH
1734: LD_INT 1
1736: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1737: LD_INT 2
1739: PPUSH
1740: LD_INT 3
1742: PPUSH
1743: LD_INT 3
1745: PPUSH
1746: LD_INT 12
1748: PPUSH
1749: LD_INT 100
1751: PPUSH
1752: CALL 5144 0 5
// veh := CreateVehicle ;
1756: LD_ADDR_VAR 0 8
1760: PUSH
1761: CALL_OW 45
1765: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1766: LD_VAR 0 8
1770: PPUSH
1771: LD_VAR 0 5
1775: PUSH
1776: LD_VAR 0 4
1780: ARRAY
1781: PUSH
1782: LD_INT 2
1784: ARRAY
1785: PPUSH
1786: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1790: LD_VAR 0 8
1794: PPUSH
1795: LD_VAR 0 5
1799: PUSH
1800: LD_VAR 0 4
1804: ARRAY
1805: PUSH
1806: LD_INT 1
1808: ARRAY
1809: PPUSH
1810: LD_INT 0
1812: PPUSH
1813: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1817: LD_VAR 0 8
1821: PPUSH
1822: LD_INT 1
1824: PUSH
1825: LD_INT 3
1827: PUSH
1828: EMPTY
1829: LIST
1830: LIST
1831: PUSH
1832: LD_VAR 0 3
1836: ARRAY
1837: PPUSH
1838: LD_INT 100
1840: PPUSH
1841: CALL_OW 290
// tmp := road [ k ] ;
1845: LD_ADDR_VAR 0 7
1849: PUSH
1850: LD_VAR 0 6
1854: PUSH
1855: LD_VAR 0 4
1859: ARRAY
1860: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1861: LD_ADDR_VAR 0 2
1865: PUSH
1866: DOUBLE
1867: LD_INT 1
1869: DEC
1870: ST_TO_ADDR
1871: LD_VAR 0 7
1875: PUSH
1876: LD_INT 2
1878: DIV
1879: PUSH
1880: FOR_TO
1881: IFFALSE 1928
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_VAR 0 7
1892: PUSH
1893: LD_VAR 0 2
1897: PUSH
1898: LD_INT 2
1900: MUL
1901: PUSH
1902: LD_INT 1
1904: MINUS
1905: ARRAY
1906: PPUSH
1907: LD_VAR 0 7
1911: PUSH
1912: LD_VAR 0 2
1916: PUSH
1917: LD_INT 2
1919: MUL
1920: ARRAY
1921: PPUSH
1922: CALL_OW 171
1926: GO 1880
1928: POP
1929: POP
// AddComGive ( veh , alfa ) ;
1930: LD_VAR 0 8
1934: PPUSH
1935: LD_INT 5
1937: PPUSH
1938: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1942: LD_VAR 0 8
1946: PPUSH
1947: LD_INT 70
1949: PPUSH
1950: CALL_OW 202
// for i = tmp div 2 downto 1 do
1954: LD_ADDR_VAR 0 2
1958: PUSH
1959: DOUBLE
1960: LD_VAR 0 7
1964: PUSH
1965: LD_INT 2
1967: DIV
1968: INC
1969: ST_TO_ADDR
1970: LD_INT 1
1972: PUSH
1973: FOR_DOWNTO
1974: IFFALSE 2021
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1976: LD_VAR 0 8
1980: PPUSH
1981: LD_VAR 0 7
1985: PUSH
1986: LD_VAR 0 2
1990: PUSH
1991: LD_INT 2
1993: MUL
1994: PUSH
1995: LD_INT 1
1997: MINUS
1998: ARRAY
1999: PPUSH
2000: LD_VAR 0 7
2004: PUSH
2005: LD_VAR 0 2
2009: PUSH
2010: LD_INT 2
2012: MUL
2013: ARRAY
2014: PPUSH
2015: CALL_OW 171
2019: GO 1973
2021: POP
2022: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2023: LD_VAR 0 8
2027: PPUSH
2028: LD_VAR 0 5
2032: PUSH
2033: LD_VAR 0 4
2037: ARRAY
2038: PUSH
2039: LD_INT 1
2041: ARRAY
2042: PPUSH
2043: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2047: LD_INT 35
2049: PPUSH
2050: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2054: LD_VAR 0 8
2058: PPUSH
2059: LD_VAR 0 5
2063: PUSH
2064: LD_VAR 0 4
2068: ARRAY
2069: PUSH
2070: LD_INT 1
2072: ARRAY
2073: PPUSH
2074: CALL_OW 308
2078: PUSH
2079: LD_VAR 0 8
2083: PPUSH
2084: LD_VAR 0 3
2088: PPUSH
2089: CALL_OW 289
2093: PUSH
2094: LD_INT 0
2096: EQUAL
2097: AND
2098: IFFALSE 2047
// RemoveUnit ( veh ) ;
2100: LD_VAR 0 8
2104: PPUSH
2105: CALL_OW 64
// end ;
2109: LD_VAR 0 1
2113: RET
// every 3 3$00 do
2114: GO 2116
2116: DISABLE
// begin enable ;
2117: ENABLE
// SpawnCargo ;
2118: CALL 1533 0 0
// end ;
2122: END
// export function PrepareDefenders ; var i , tmp ; begin
2123: LD_INT 0
2125: PPUSH
2126: PPUSH
2127: PPUSH
// if defenders then
2128: LD_EXP 17
2132: IFFALSE 2136
// exit ;
2134: GO 2400
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2136: LD_ADDR_VAR 0 2
2140: PUSH
2141: DOUBLE
2142: LD_INT 1
2144: DEC
2145: ST_TO_ADDR
2146: LD_INT 4
2148: PUSH
2149: LD_INT 5
2151: PUSH
2152: LD_INT 6
2154: PUSH
2155: EMPTY
2156: LIST
2157: LIST
2158: LIST
2159: PUSH
2160: LD_OWVAR 67
2164: ARRAY
2165: PUSH
2166: FOR_TO
2167: IFFALSE 2306
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2169: LD_ADDR_VAR 0 3
2173: PUSH
2174: LD_INT 6
2176: PPUSH
2177: LD_INT 2
2179: PUSH
2180: LD_INT 3
2182: PUSH
2183: EMPTY
2184: LIST
2185: LIST
2186: PUSH
2187: LD_INT 1
2189: PPUSH
2190: LD_INT 2
2192: PPUSH
2193: CALL_OW 12
2197: ARRAY
2198: PPUSH
2199: LD_INT 1
2201: PUSH
2202: LD_INT 3
2204: PUSH
2205: EMPTY
2206: LIST
2207: LIST
2208: PUSH
2209: LD_INT 1
2211: PPUSH
2212: LD_INT 2
2214: PPUSH
2215: CALL_OW 12
2219: ARRAY
2220: PPUSH
2221: LD_INT 2
2223: PPUSH
2224: LD_INT 4
2226: PUSH
2227: LD_INT 5
2229: PUSH
2230: LD_INT 9
2232: PUSH
2233: EMPTY
2234: LIST
2235: LIST
2236: LIST
2237: PUSH
2238: LD_INT 1
2240: PPUSH
2241: LD_INT 3
2243: PPUSH
2244: CALL_OW 12
2248: ARRAY
2249: PPUSH
2250: CALL 27807 0 5
2254: ST_TO_ADDR
// if tmp then
2255: LD_VAR 0 3
2259: IFFALSE 2304
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2261: LD_INT 6
2263: PPUSH
2264: LD_VAR 0 3
2268: PUSH
2269: LD_INT 1
2271: ARRAY
2272: PPUSH
2273: LD_VAR 0 3
2277: PUSH
2278: LD_INT 2
2280: ARRAY
2281: PPUSH
2282: LD_VAR 0 3
2286: PUSH
2287: LD_INT 3
2289: ARRAY
2290: PPUSH
2291: LD_VAR 0 3
2295: PUSH
2296: LD_INT 4
2298: ARRAY
2299: PPUSH
2300: CALL_OW 185
// end ;
2304: GO 2166
2306: POP
2307: POP
// repeat wait ( 0 0$1 ) ;
2308: LD_INT 35
2310: PPUSH
2311: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2315: LD_INT 22
2317: PUSH
2318: LD_INT 1
2320: PUSH
2321: EMPTY
2322: LIST
2323: LIST
2324: PUSH
2325: LD_INT 33
2327: PUSH
2328: LD_INT 2
2330: PUSH
2331: EMPTY
2332: LIST
2333: LIST
2334: PUSH
2335: EMPTY
2336: LIST
2337: LIST
2338: PPUSH
2339: CALL_OW 69
2343: PUSH
2344: LD_INT 4
2346: PUSH
2347: LD_INT 5
2349: PUSH
2350: LD_INT 6
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: LIST
2357: PUSH
2358: LD_OWVAR 67
2362: ARRAY
2363: GREATEREQUAL
2364: IFFALSE 2308
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2366: LD_ADDR_EXP 17
2370: PUSH
2371: LD_INT 22
2373: PUSH
2374: LD_INT 1
2376: PUSH
2377: EMPTY
2378: LIST
2379: LIST
2380: PUSH
2381: LD_INT 33
2383: PUSH
2384: LD_INT 2
2386: PUSH
2387: EMPTY
2388: LIST
2389: LIST
2390: PUSH
2391: EMPTY
2392: LIST
2393: LIST
2394: PPUSH
2395: CALL_OW 69
2399: ST_TO_ADDR
// end ;
2400: LD_VAR 0 1
2404: RET
// export function Defend ; var i , un , veh , tmp ; begin
2405: LD_INT 0
2407: PPUSH
2408: PPUSH
2409: PPUSH
2410: PPUSH
2411: PPUSH
// defcon_wave := defcon_wave + 1 ;
2412: LD_ADDR_EXP 19
2416: PUSH
2417: LD_EXP 19
2421: PUSH
2422: LD_INT 1
2424: PLUS
2425: ST_TO_ADDR
// if not defenders then
2426: LD_EXP 17
2430: NOT
2431: IFFALSE 2437
// PrepareDefenders ;
2433: CALL 2123 0 0
// if defcon_wave > 1 then
2437: LD_EXP 19
2441: PUSH
2442: LD_INT 1
2444: GREATER
2445: IFFALSE 2671
// begin for i = 1 to defcon_wave + 2 do
2447: LD_ADDR_VAR 0 2
2451: PUSH
2452: DOUBLE
2453: LD_INT 1
2455: DEC
2456: ST_TO_ADDR
2457: LD_EXP 19
2461: PUSH
2462: LD_INT 2
2464: PLUS
2465: PUSH
2466: FOR_TO
2467: IFFALSE 2593
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2469: LD_INT 4
2471: PPUSH
2472: LD_INT 3
2474: PPUSH
2475: LD_INT 1
2477: PPUSH
2478: LD_INT 4
2480: PUSH
2481: LD_INT 6
2483: PUSH
2484: LD_INT 7
2486: PUSH
2487: EMPTY
2488: LIST
2489: LIST
2490: LIST
2491: PUSH
2492: LD_INT 1
2494: PPUSH
2495: LD_INT 3
2497: PPUSH
2498: CALL_OW 12
2502: ARRAY
2503: PPUSH
2504: LD_INT 100
2506: PPUSH
2507: CALL 5144 0 5
// veh := CreateVehicle ;
2511: LD_ADDR_VAR 0 4
2515: PUSH
2516: CALL_OW 45
2520: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2521: LD_VAR 0 4
2525: PPUSH
2526: LD_INT 1
2528: PPUSH
2529: CALL_OW 233
// defenders := defenders ^ veh ;
2533: LD_ADDR_EXP 17
2537: PUSH
2538: LD_EXP 17
2542: PUSH
2543: LD_VAR 0 4
2547: ADD
2548: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2549: LD_INT 0
2551: PPUSH
2552: LD_INT 3
2554: PPUSH
2555: LD_INT 9
2557: PPUSH
2558: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2562: CALL_OW 44
2566: PPUSH
2567: LD_VAR 0 4
2571: PPUSH
2572: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2576: LD_VAR 0 4
2580: PPUSH
2581: LD_INT 25
2583: PPUSH
2584: LD_INT 0
2586: PPUSH
2587: CALL_OW 49
// end ;
2591: GO 2466
2593: POP
2594: POP
// for i = 1 to defcon_wave do
2595: LD_ADDR_VAR 0 2
2599: PUSH
2600: DOUBLE
2601: LD_INT 1
2603: DEC
2604: ST_TO_ADDR
2605: LD_EXP 19
2609: PUSH
2610: FOR_TO
2611: IFFALSE 2669
// begin PrepareHuman ( false , 5 , 9 ) ;
2613: LD_INT 0
2615: PPUSH
2616: LD_INT 5
2618: PPUSH
2619: LD_INT 9
2621: PPUSH
2622: CALL_OW 380
// un := CreateHuman ;
2626: LD_ADDR_VAR 0 3
2630: PUSH
2631: CALL_OW 44
2635: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2636: LD_VAR 0 3
2640: PPUSH
2641: LD_INT 25
2643: PPUSH
2644: LD_INT 0
2646: PPUSH
2647: CALL_OW 49
// defenders := defenders ^ un ;
2651: LD_ADDR_EXP 17
2655: PUSH
2656: LD_EXP 17
2660: PUSH
2661: LD_VAR 0 3
2665: ADD
2666: ST_TO_ADDR
// end ;
2667: GO 2610
2669: POP
2670: POP
// end ; repeat wait ( 0 0$1 ) ;
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 67
// for i in defenders do
2678: LD_ADDR_VAR 0 2
2682: PUSH
2683: LD_EXP 17
2687: PUSH
2688: FOR_IN
2689: IFFALSE 2771
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2691: LD_EXP 18
2695: PUSH
2696: LD_VAR 0 2
2700: PPUSH
2701: LD_EXP 18
2705: PUSH
2706: LD_INT 1
2708: ARRAY
2709: PPUSH
2710: LD_EXP 18
2714: PUSH
2715: LD_INT 2
2717: ARRAY
2718: PPUSH
2719: CALL_OW 297
2723: PUSH
2724: LD_INT 10
2726: GREATER
2727: AND
2728: PUSH
2729: LD_VAR 0 2
2733: PPUSH
2734: CALL_OW 314
2738: NOT
2739: AND
2740: IFFALSE 2769
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2742: LD_VAR 0 2
2746: PPUSH
2747: LD_EXP 18
2751: PUSH
2752: LD_INT 1
2754: ARRAY
2755: PPUSH
2756: LD_EXP 18
2760: PUSH
2761: LD_INT 2
2763: ARRAY
2764: PPUSH
2765: CALL_OW 114
// end ;
2769: GO 2688
2771: POP
2772: POP
// until not defenders ;
2773: LD_EXP 17
2777: NOT
2778: IFFALSE 2671
// end ; end_of_file
2780: LD_VAR 0 1
2784: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2785: LD_INT 0
2787: PPUSH
2788: PPUSH
2789: PPUSH
2790: PPUSH
2791: PPUSH
2792: PPUSH
2793: PPUSH
// uc_side := 4 ;
2794: LD_ADDR_OWVAR 20
2798: PUSH
2799: LD_INT 4
2801: ST_TO_ADDR
// uc_nation := 1 ;
2802: LD_ADDR_OWVAR 21
2806: PUSH
2807: LD_INT 1
2809: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2810: LD_ADDR_EXP 34
2814: PUSH
2815: LD_STRING DeltaDoctor
2817: PPUSH
2818: LD_EXP 1
2822: NOT
2823: PPUSH
2824: LD_STRING 10c_
2826: PPUSH
2827: CALL 5081 0 3
2831: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2832: LD_ADDR_EXP 33
2836: PUSH
2837: LD_STRING Joan
2839: PPUSH
2840: LD_EXP 1
2844: NOT
2845: PPUSH
2846: LD_STRING 10c_
2848: PPUSH
2849: CALL 5081 0 3
2853: ST_TO_ADDR
// if Joan then
2854: LD_EXP 33
2858: IFFALSE 2889
// friends := Insert ( friends , friends + 1 , Joan ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_EXP 4
2869: PPUSH
2870: LD_EXP 4
2874: PUSH
2875: LD_INT 1
2877: PLUS
2878: PPUSH
2879: LD_EXP 33
2883: PPUSH
2884: CALL_OW 2
2888: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2889: LD_ADDR_EXP 32
2893: PUSH
2894: LD_STRING Simms
2896: PPUSH
2897: LD_EXP 1
2901: NOT
2902: PPUSH
2903: LD_STRING 10c_
2905: PPUSH
2906: CALL 5081 0 3
2910: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2911: LD_ADDR_EXP 31
2915: PUSH
2916: LD_STRING Kikuchi
2918: PPUSH
2919: LD_EXP 1
2923: NOT
2924: PPUSH
2925: LD_STRING 11_
2927: PPUSH
2928: CALL 5081 0 3
2932: ST_TO_ADDR
// if Kikuchi then
2933: LD_EXP 31
2937: IFFALSE 2968
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2939: LD_ADDR_EXP 4
2943: PUSH
2944: LD_EXP 4
2948: PPUSH
2949: LD_EXP 4
2953: PUSH
2954: LD_INT 1
2956: PLUS
2957: PPUSH
2958: LD_EXP 31
2962: PPUSH
2963: CALL_OW 2
2967: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2968: LD_ADDR_EXP 30
2972: PUSH
2973: LD_STRING Frank
2975: PPUSH
2976: LD_EXP 1
2980: NOT
2981: PPUSH
2982: LD_STRING 11_
2984: PPUSH
2985: CALL 5081 0 3
2989: ST_TO_ADDR
// if Frank then
2990: LD_EXP 30
2994: IFFALSE 3025
// friends := Insert ( friends , friends + 1 , Frank ) ;
2996: LD_ADDR_EXP 4
3000: PUSH
3001: LD_EXP 4
3005: PPUSH
3006: LD_EXP 4
3010: PUSH
3011: LD_INT 1
3013: PLUS
3014: PPUSH
3015: LD_EXP 30
3019: PPUSH
3020: CALL_OW 2
3024: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3025: LD_ADDR_EXP 29
3029: PUSH
3030: LD_STRING Gary
3032: PPUSH
3033: LD_EXP 1
3037: NOT
3038: PPUSH
3039: LD_STRING 11_
3041: PPUSH
3042: CALL 5081 0 3
3046: ST_TO_ADDR
// if Gary then
3047: LD_EXP 29
3051: IFFALSE 3082
// friends := Insert ( friends , friends + 1 , Gary ) ;
3053: LD_ADDR_EXP 4
3057: PUSH
3058: LD_EXP 4
3062: PPUSH
3063: LD_EXP 4
3067: PUSH
3068: LD_INT 1
3070: PLUS
3071: PPUSH
3072: LD_EXP 29
3076: PPUSH
3077: CALL_OW 2
3081: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
3082: LD_ADDR_EXP 28
3086: PUSH
3087: LD_STRING Cornel
3089: PPUSH
3090: LD_EXP 1
3094: NOT
3095: PPUSH
3096: LD_STRING 11_
3098: PPUSH
3099: CALL 5081 0 3
3103: ST_TO_ADDR
// if Cornel then
3104: LD_EXP 28
3108: IFFALSE 3139
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3110: LD_ADDR_EXP 4
3114: PUSH
3115: LD_EXP 4
3119: PPUSH
3120: LD_EXP 4
3124: PUSH
3125: LD_INT 1
3127: PLUS
3128: PPUSH
3129: LD_EXP 28
3133: PPUSH
3134: CALL_OW 2
3138: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3139: LD_ADDR_EXP 27
3143: PUSH
3144: LD_STRING Houten
3146: PPUSH
3147: LD_EXP 1
3151: NOT
3152: PPUSH
3153: LD_STRING 11_
3155: PPUSH
3156: CALL 5081 0 3
3160: ST_TO_ADDR
// if Houten then
3161: LD_EXP 27
3165: IFFALSE 3196
// friends := Insert ( friends , friends + 1 , Houten ) ;
3167: LD_ADDR_EXP 4
3171: PUSH
3172: LD_EXP 4
3176: PPUSH
3177: LD_EXP 4
3181: PUSH
3182: LD_INT 1
3184: PLUS
3185: PPUSH
3186: LD_EXP 27
3190: PPUSH
3191: CALL_OW 2
3195: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3196: LD_ADDR_EXP 26
3200: PUSH
3201: LD_STRING Gladstone
3203: PPUSH
3204: LD_EXP 1
3208: NOT
3209: PPUSH
3210: LD_STRING 11_
3212: PPUSH
3213: CALL 5081 0 3
3217: ST_TO_ADDR
// if Gladstone then
3218: LD_EXP 26
3222: IFFALSE 3253
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3224: LD_ADDR_EXP 4
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: LD_EXP 4
3238: PUSH
3239: LD_INT 1
3241: PLUS
3242: PPUSH
3243: LD_EXP 26
3247: PPUSH
3248: CALL_OW 2
3252: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3253: LD_ADDR_EXP 20
3257: PUSH
3258: LD_STRING Lisa
3260: PPUSH
3261: LD_EXP 1
3265: NOT
3266: PPUSH
3267: LD_STRING 11_
3269: PPUSH
3270: CALL 5081 0 3
3274: ST_TO_ADDR
// if Lisa then
3275: LD_EXP 20
3279: IFFALSE 3304
// friends := Insert ( friends , 1 , Lisa ) ;
3281: LD_ADDR_EXP 4
3285: PUSH
3286: LD_EXP 4
3290: PPUSH
3291: LD_INT 1
3293: PPUSH
3294: LD_EXP 20
3298: PPUSH
3299: CALL_OW 2
3303: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3304: LD_ADDR_EXP 21
3308: PUSH
3309: LD_STRING Donaldson
3311: PPUSH
3312: LD_EXP 1
3316: NOT
3317: PPUSH
3318: LD_STRING 11_
3320: PPUSH
3321: CALL 5081 0 3
3325: ST_TO_ADDR
// if Donaldson then
3326: LD_EXP 21
3330: IFFALSE 3361
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: LD_EXP 21
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3361: LD_ADDR_EXP 22
3365: PUSH
3366: LD_STRING Bobby
3368: PPUSH
3369: LD_EXP 1
3373: NOT
3374: PPUSH
3375: LD_STRING 11_
3377: PPUSH
3378: CALL 5081 0 3
3382: ST_TO_ADDR
// if Bobby then
3383: LD_EXP 22
3387: IFFALSE 3418
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3389: LD_ADDR_EXP 4
3393: PUSH
3394: LD_EXP 4
3398: PPUSH
3399: LD_EXP 4
3403: PUSH
3404: LD_INT 1
3406: PLUS
3407: PPUSH
3408: LD_EXP 22
3412: PPUSH
3413: CALL_OW 2
3417: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3418: LD_ADDR_EXP 23
3422: PUSH
3423: LD_STRING Cyrus
3425: PPUSH
3426: LD_EXP 1
3430: NOT
3431: PPUSH
3432: LD_STRING 11_
3434: PPUSH
3435: CALL 5081 0 3
3439: ST_TO_ADDR
// if Cyrus then
3440: LD_EXP 23
3444: IFFALSE 3475
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3446: LD_ADDR_EXP 4
3450: PUSH
3451: LD_EXP 4
3455: PPUSH
3456: LD_EXP 4
3460: PUSH
3461: LD_INT 1
3463: PLUS
3464: PPUSH
3465: LD_EXP 23
3469: PPUSH
3470: CALL_OW 2
3474: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3475: LD_ADDR_EXP 24
3479: PUSH
3480: LD_STRING Denis
3482: PPUSH
3483: LD_EXP 1
3487: NOT
3488: PPUSH
3489: LD_STRING 11_
3491: PPUSH
3492: CALL 5081 0 3
3496: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3497: LD_ADDR_EXP 25
3501: PUSH
3502: LD_STRING Brown
3504: PPUSH
3505: LD_EXP 1
3509: NOT
3510: PPUSH
3511: LD_STRING 11_
3513: PPUSH
3514: CALL 5081 0 3
3518: ST_TO_ADDR
// if Brown then
3519: LD_EXP 25
3523: IFFALSE 3554
// friends := Insert ( friends , friends + 1 , Brown ) ;
3525: LD_ADDR_EXP 4
3529: PUSH
3530: LD_EXP 4
3534: PPUSH
3535: LD_EXP 4
3539: PUSH
3540: LD_INT 1
3542: PLUS
3543: PPUSH
3544: LD_EXP 25
3548: PPUSH
3549: CALL_OW 2
3553: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
3554: LD_ADDR_EXP 4
3558: PUSH
3559: LD_EXP 4
3563: PUSH
3564: LD_STRING 11c_others
3566: PPUSH
3567: CALL_OW 31
3571: ADD
3572: PUSH
3573: LD_STRING 11_others
3575: PPUSH
3576: CALL_OW 31
3580: ADD
3581: ST_TO_ADDR
// if friends < 10 then
3582: LD_EXP 4
3586: PUSH
3587: LD_INT 10
3589: LESS
3590: IFFALSE 3662
// for i = 1 to 10 do
3592: LD_ADDR_VAR 0 2
3596: PUSH
3597: DOUBLE
3598: LD_INT 1
3600: DEC
3601: ST_TO_ADDR
3602: LD_INT 10
3604: PUSH
3605: FOR_TO
3606: IFFALSE 3660
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3608: LD_INT 0
3610: PPUSH
3611: LD_INT 1
3613: PPUSH
3614: LD_INT 4
3616: PPUSH
3617: CALL_OW 12
3621: PPUSH
3622: LD_INT 7
3624: PPUSH
3625: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3629: LD_ADDR_EXP 4
3633: PUSH
3634: LD_EXP 4
3638: PPUSH
3639: LD_EXP 4
3643: PUSH
3644: LD_INT 1
3646: PLUS
3647: PPUSH
3648: CALL_OW 44
3652: PPUSH
3653: CALL_OW 2
3657: ST_TO_ADDR
// end ;
3658: GO 3605
3660: POP
3661: POP
// for i in friends do
3662: LD_ADDR_VAR 0 2
3666: PUSH
3667: LD_EXP 4
3671: PUSH
3672: FOR_IN
3673: IFFALSE 3731
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3675: LD_VAR 0 2
3679: PPUSH
3680: LD_INT 1
3682: PPUSH
3683: CALL_OW 259
3687: PUSH
3688: LD_VAR 0 2
3692: PPUSH
3693: LD_INT 4
3695: PPUSH
3696: CALL_OW 259
3700: GREATEREQUAL
3701: IFFALSE 3717
// SetClass ( i , class_soldier ) else
3703: LD_VAR 0 2
3707: PPUSH
3708: LD_INT 1
3710: PPUSH
3711: CALL_OW 336
3715: GO 3729
// SetClass ( i , class_scientistic ) ;
3717: LD_VAR 0 2
3721: PPUSH
3722: LD_INT 4
3724: PPUSH
3725: CALL_OW 336
3729: GO 3672
3731: POP
3732: POP
// if Frank then
3733: LD_EXP 30
3737: IFFALSE 3751
// SetClass ( Frank , class_sniper ) ;
3739: LD_EXP 30
3743: PPUSH
3744: LD_INT 5
3746: PPUSH
3747: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3751: LD_EXP 33
3755: PUSH
3756: LD_EXP 24
3760: PUSH
3761: LD_EXP 34
3765: PUSH
3766: LD_EXP 32
3770: PUSH
3771: EMPTY
3772: LIST
3773: LIST
3774: LIST
3775: LIST
3776: PPUSH
3777: LD_INT 4
3779: PPUSH
3780: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
3784: LD_ADDR_EXP 3
3788: PUSH
3789: LD_STRING 
3791: PPUSH
3792: LD_INT 7
3794: PPUSH
3795: LD_INT 7
3797: PPUSH
3798: LD_INT -6
3800: PUSH
3801: LD_EXP 11
3805: PUSH
3806: LD_EXP 12
3810: PUSH
3811: LD_EXP 32
3815: PUSH
3816: LD_EXP 24
3820: PUSH
3821: LD_EXP 34
3825: PUSH
3826: LD_INT -2
3828: PUSH
3829: LD_INT -3
3831: PUSH
3832: LD_INT -5
3834: PUSH
3835: EMPTY
3836: LIST
3837: LIST
3838: LIST
3839: LIST
3840: LIST
3841: LIST
3842: LIST
3843: LIST
3844: LIST
3845: PUSH
3846: LD_EXP 4
3850: ADD
3851: PPUSH
3852: LD_INT 1
3854: PUSH
3855: LD_INT 4
3857: PUSH
3858: LD_INT 2
3860: PUSH
3861: EMPTY
3862: LIST
3863: LIST
3864: PUSH
3865: LD_INT 5
3867: PUSH
3868: LD_INT 0
3870: PUSH
3871: LD_INT 3
3873: PUSH
3874: EMPTY
3875: LIST
3876: LIST
3877: LIST
3878: PUSH
3879: EMPTY
3880: LIST
3881: LIST
3882: LIST
3883: PPUSH
3884: CALL_OW 42
3888: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3889: LD_ADDR_EXP 3
3893: PUSH
3894: LD_EXP 3
3898: PUSH
3899: LD_EXP 24
3903: PUSH
3904: LD_EXP 32
3908: PUSH
3909: EMPTY
3910: LIST
3911: LIST
3912: UNION
3913: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3914: LD_ADDR_EXP 5
3918: PUSH
3919: LD_EXP 4
3923: PUSH
3924: LD_EXP 11
3928: PUSH
3929: LD_EXP 12
3933: PUSH
3934: LD_EXP 20
3938: PUSH
3939: LD_EXP 21
3943: PUSH
3944: LD_EXP 22
3948: PUSH
3949: LD_EXP 23
3953: PUSH
3954: LD_EXP 24
3958: PUSH
3959: LD_EXP 25
3963: PUSH
3964: LD_EXP 26
3968: PUSH
3969: LD_EXP 27
3973: PUSH
3974: LD_EXP 28
3978: PUSH
3979: LD_EXP 29
3983: PUSH
3984: LD_EXP 30
3988: PUSH
3989: LD_EXP 31
3993: PUSH
3994: LD_EXP 32
3998: PUSH
3999: LD_EXP 33
4003: PUSH
4004: LD_EXP 34
4008: PUSH
4009: EMPTY
4010: LIST
4011: LIST
4012: LIST
4013: LIST
4014: LIST
4015: LIST
4016: LIST
4017: LIST
4018: LIST
4019: LIST
4020: LIST
4021: LIST
4022: LIST
4023: LIST
4024: LIST
4025: LIST
4026: LIST
4027: PUSH
4028: LD_EXP 3
4032: ADD
4033: DIFF
4034: ST_TO_ADDR
// friends := friends diff others ;
4035: LD_ADDR_EXP 4
4039: PUSH
4040: LD_EXP 4
4044: PUSH
4045: LD_EXP 5
4049: DIFF
4050: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4051: LD_ADDR_VAR 0 4
4055: PUSH
4056: LD_INT 111
4058: PUSH
4059: LD_INT 137
4061: PUSH
4062: LD_INT 51
4064: PUSH
4065: EMPTY
4066: LIST
4067: LIST
4068: LIST
4069: PUSH
4070: LD_INT 147
4072: PUSH
4073: LD_INT 129
4075: PUSH
4076: LD_INT 25
4078: PUSH
4079: EMPTY
4080: LIST
4081: LIST
4082: LIST
4083: PUSH
4084: EMPTY
4085: LIST
4086: LIST
4087: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4088: LD_ADDR_VAR 0 5
4092: PUSH
4093: LD_INT 5
4095: PUSH
4096: LD_INT 6
4098: PUSH
4099: LD_INT 7
4101: PUSH
4102: LD_INT 8
4104: PUSH
4105: LD_INT 17
4107: PUSH
4108: LD_INT 18
4110: PUSH
4111: EMPTY
4112: LIST
4113: LIST
4114: LIST
4115: LIST
4116: LIST
4117: LIST
4118: ST_TO_ADDR
// for i in buildings do
4119: LD_ADDR_VAR 0 2
4123: PUSH
4124: LD_VAR 0 4
4128: PUSH
4129: FOR_IN
4130: IFFALSE 4146
// SetSide ( i , 4 ) ;
4132: LD_VAR 0 2
4136: PPUSH
4137: LD_INT 4
4139: PPUSH
4140: CALL_OW 235
4144: GO 4129
4146: POP
4147: POP
// for i in selected do
4148: LD_ADDR_VAR 0 2
4152: PUSH
4153: LD_EXP 3
4157: PUSH
4158: FOR_IN
4159: IFFALSE 4421
// begin if GetClass ( i ) in [ 1 , 5 ] then
4161: LD_VAR 0 2
4165: PPUSH
4166: CALL_OW 257
4170: PUSH
4171: LD_INT 1
4173: PUSH
4174: LD_INT 5
4176: PUSH
4177: EMPTY
4178: LIST
4179: LIST
4180: IN
4181: IFFALSE 4302
// begin if buildings [ 1 ] then
4183: LD_VAR 0 4
4187: PUSH
4188: LD_INT 1
4190: ARRAY
4191: IFFALSE 4252
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4193: LD_VAR 0 2
4197: PPUSH
4198: LD_VAR 0 4
4202: PUSH
4203: LD_INT 1
4205: ARRAY
4206: PUSH
4207: LD_INT 1
4209: ARRAY
4210: PPUSH
4211: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4215: LD_ADDR_VAR 0 4
4219: PUSH
4220: LD_VAR 0 4
4224: PPUSH
4225: LD_INT 1
4227: PPUSH
4228: LD_VAR 0 4
4232: PUSH
4233: LD_INT 1
4235: ARRAY
4236: PPUSH
4237: LD_INT 1
4239: PPUSH
4240: CALL_OW 3
4244: PPUSH
4245: CALL_OW 1
4249: ST_TO_ADDR
// end else
4250: GO 4300
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4252: LD_VAR 0 2
4256: PPUSH
4257: LD_VAR 0 5
4261: PUSH
4262: LD_INT 1
4264: ARRAY
4265: PPUSH
4266: LD_INT 0
4268: PPUSH
4269: CALL_OW 49
// ComHold ( i ) ;
4273: LD_VAR 0 2
4277: PPUSH
4278: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4282: LD_ADDR_VAR 0 5
4286: PUSH
4287: LD_VAR 0 5
4291: PPUSH
4292: LD_INT 1
4294: PPUSH
4295: CALL_OW 3
4299: ST_TO_ADDR
// end ; end else
4300: GO 4419
// begin if buildings [ 2 ] then
4302: LD_VAR 0 4
4306: PUSH
4307: LD_INT 2
4309: ARRAY
4310: IFFALSE 4371
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4312: LD_VAR 0 2
4316: PPUSH
4317: LD_VAR 0 4
4321: PUSH
4322: LD_INT 2
4324: ARRAY
4325: PUSH
4326: LD_INT 1
4328: ARRAY
4329: PPUSH
4330: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4334: LD_ADDR_VAR 0 4
4338: PUSH
4339: LD_VAR 0 4
4343: PPUSH
4344: LD_INT 2
4346: PPUSH
4347: LD_VAR 0 4
4351: PUSH
4352: LD_INT 2
4354: ARRAY
4355: PPUSH
4356: LD_INT 1
4358: PPUSH
4359: CALL_OW 3
4363: PPUSH
4364: CALL_OW 1
4368: ST_TO_ADDR
// end else
4369: GO 4419
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4371: LD_VAR 0 2
4375: PPUSH
4376: LD_VAR 0 5
4380: PUSH
4381: LD_INT 1
4383: ARRAY
4384: PPUSH
4385: LD_INT 0
4387: PPUSH
4388: CALL_OW 49
// ComHold ( i ) ;
4392: LD_VAR 0 2
4396: PPUSH
4397: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4401: LD_ADDR_VAR 0 5
4405: PUSH
4406: LD_VAR 0 5
4410: PPUSH
4411: LD_INT 1
4413: PPUSH
4414: CALL_OW 3
4418: ST_TO_ADDR
// end ; end ; end ;
4419: GO 4158
4421: POP
4422: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4423: LD_ADDR_VAR 0 6
4427: PUSH
4428: LD_INT 22
4430: PUSH
4431: LD_INT 1
4433: PUSH
4434: EMPTY
4435: LIST
4436: LIST
4437: PUSH
4438: LD_INT 30
4440: PUSH
4441: LD_INT 32
4443: PUSH
4444: EMPTY
4445: LIST
4446: LIST
4447: PUSH
4448: EMPTY
4449: LIST
4450: LIST
4451: PPUSH
4452: CALL_OW 69
4456: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4457: LD_ADDR_VAR 0 2
4461: PUSH
4462: DOUBLE
4463: LD_VAR 0 6
4467: PUSH
4468: LD_EXP 5
4472: MINUS
4473: INC
4474: ST_TO_ADDR
4475: LD_INT 1
4477: PUSH
4478: FOR_DOWNTO
4479: IFFALSE 4542
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4481: LD_INT 0
4483: PPUSH
4484: LD_INT 1
4486: PPUSH
4487: LD_INT 7
4489: PUSH
4490: LD_INT 8
4492: PUSH
4493: LD_INT 9
4495: PUSH
4496: EMPTY
4497: LIST
4498: LIST
4499: LIST
4500: PUSH
4501: LD_OWVAR 67
4505: ARRAY
4506: PPUSH
4507: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4511: LD_ADDR_EXP 5
4515: PUSH
4516: LD_EXP 5
4520: PPUSH
4521: LD_EXP 5
4525: PUSH
4526: LD_INT 1
4528: PLUS
4529: PPUSH
4530: CALL_OW 44
4534: PPUSH
4535: CALL_OW 2
4539: ST_TO_ADDR
// end ;
4540: GO 4478
4542: POP
4543: POP
// if others then
4544: LD_EXP 5
4548: IFFALSE 4654
// for i = 1 to bunkers do
4550: LD_ADDR_VAR 0 2
4554: PUSH
4555: DOUBLE
4556: LD_INT 1
4558: DEC
4559: ST_TO_ADDR
4560: LD_VAR 0 6
4564: PUSH
4565: FOR_TO
4566: IFFALSE 4652
// begin SetSide ( others [ others ] , 1 ) ;
4568: LD_EXP 5
4572: PUSH
4573: LD_EXP 5
4577: ARRAY
4578: PPUSH
4579: LD_INT 1
4581: PPUSH
4582: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4586: LD_EXP 5
4590: PUSH
4591: LD_EXP 5
4595: ARRAY
4596: PPUSH
4597: LD_INT 1
4599: PPUSH
4600: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4604: LD_EXP 5
4608: PUSH
4609: LD_EXP 5
4613: ARRAY
4614: PPUSH
4615: LD_VAR 0 6
4619: PUSH
4620: LD_VAR 0 2
4624: ARRAY
4625: PPUSH
4626: CALL_OW 52
// others := Delete ( others , others ) ;
4630: LD_ADDR_EXP 5
4634: PUSH
4635: LD_EXP 5
4639: PPUSH
4640: LD_EXP 5
4644: PPUSH
4645: CALL_OW 3
4649: ST_TO_ADDR
// end ;
4650: GO 4565
4652: POP
4653: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4654: LD_ADDR_VAR 0 5
4658: PUSH
4659: LD_VAR 0 5
4663: PUSH
4664: LD_INT 9
4666: PUSH
4667: LD_INT 10
4669: PUSH
4670: LD_INT 11
4672: PUSH
4673: LD_INT 12
4675: PUSH
4676: LD_INT 13
4678: PUSH
4679: LD_INT 14
4681: PUSH
4682: LD_INT 15
4684: PUSH
4685: LD_INT 16
4687: PUSH
4688: EMPTY
4689: LIST
4690: LIST
4691: LIST
4692: LIST
4693: LIST
4694: LIST
4695: LIST
4696: LIST
4697: UNION
4698: ST_TO_ADDR
// for i in friends ^ others do
4699: LD_ADDR_VAR 0 2
4703: PUSH
4704: LD_EXP 4
4708: PUSH
4709: LD_EXP 5
4713: ADD
4714: PUSH
4715: FOR_IN
4716: IFFALSE 5056
// begin SetTag ( i , 2 ) ;
4718: LD_VAR 0 2
4722: PPUSH
4723: LD_INT 2
4725: PPUSH
4726: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4730: LD_VAR 0 2
4734: PUSH
4735: LD_EXP 4
4739: IN
4740: PUSH
4741: LD_VAR 0 2
4745: PPUSH
4746: CALL_OW 257
4750: PUSH
4751: LD_INT 1
4753: EQUAL
4754: AND
4755: PUSH
4756: LD_VAR 0 2
4760: PUSH
4761: LD_EXP 5
4765: IN
4766: OR
4767: PUSH
4768: LD_VAR 0 4
4772: PUSH
4773: LD_INT 1
4775: ARRAY
4776: AND
4777: IFFALSE 4850
// begin SetClass ( i , 1 ) ;
4779: LD_VAR 0 2
4783: PPUSH
4784: LD_INT 1
4786: PPUSH
4787: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4791: LD_VAR 0 2
4795: PPUSH
4796: LD_VAR 0 4
4800: PUSH
4801: LD_INT 1
4803: ARRAY
4804: PUSH
4805: LD_INT 1
4807: ARRAY
4808: PPUSH
4809: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4813: LD_ADDR_VAR 0 4
4817: PUSH
4818: LD_VAR 0 4
4822: PPUSH
4823: LD_INT 1
4825: PPUSH
4826: LD_VAR 0 4
4830: PUSH
4831: LD_INT 1
4833: ARRAY
4834: PPUSH
4835: LD_INT 1
4837: PPUSH
4838: CALL_OW 3
4842: PPUSH
4843: CALL_OW 1
4847: ST_TO_ADDR
// continue ;
4848: GO 4715
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4850: LD_VAR 0 2
4854: PUSH
4855: LD_EXP 4
4859: IN
4860: PUSH
4861: LD_VAR 0 2
4865: PPUSH
4866: CALL_OW 257
4870: PUSH
4871: LD_INT 4
4873: EQUAL
4874: AND
4875: PUSH
4876: LD_VAR 0 2
4880: PUSH
4881: LD_EXP 5
4885: IN
4886: OR
4887: PUSH
4888: LD_VAR 0 4
4892: PUSH
4893: LD_INT 2
4895: ARRAY
4896: AND
4897: IFFALSE 4970
// begin SetClass ( i , 4 ) ;
4899: LD_VAR 0 2
4903: PPUSH
4904: LD_INT 4
4906: PPUSH
4907: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4911: LD_VAR 0 2
4915: PPUSH
4916: LD_VAR 0 4
4920: PUSH
4921: LD_INT 2
4923: ARRAY
4924: PUSH
4925: LD_INT 1
4927: ARRAY
4928: PPUSH
4929: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4933: LD_ADDR_VAR 0 4
4937: PUSH
4938: LD_VAR 0 4
4942: PPUSH
4943: LD_INT 2
4945: PPUSH
4946: LD_VAR 0 4
4950: PUSH
4951: LD_INT 2
4953: ARRAY
4954: PPUSH
4955: LD_INT 1
4957: PPUSH
4958: CALL_OW 3
4962: PPUSH
4963: CALL_OW 1
4967: ST_TO_ADDR
// continue ;
4968: GO 4715
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4970: LD_VAR 0 2
4974: PPUSH
4975: LD_VAR 0 5
4979: PUSH
4980: LD_INT 1
4982: ARRAY
4983: PPUSH
4984: LD_INT 0
4986: PPUSH
4987: CALL_OW 49
// if GetClass ( i ) <> 4 then
4991: LD_VAR 0 2
4995: PPUSH
4996: CALL_OW 257
5000: PUSH
5001: LD_INT 4
5003: NONEQUAL
5004: IFFALSE 5018
// SetClass ( i , 1 ) ;
5006: LD_VAR 0 2
5010: PPUSH
5011: LD_INT 1
5013: PPUSH
5014: CALL_OW 336
// ComHold ( i ) ;
5018: LD_VAR 0 2
5022: PPUSH
5023: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5027: LD_ADDR_VAR 0 5
5031: PUSH
5032: LD_VAR 0 5
5036: PPUSH
5037: LD_INT 1
5039: PPUSH
5040: CALL_OW 3
5044: ST_TO_ADDR
// if not areas then
5045: LD_VAR 0 5
5049: NOT
5050: IFFALSE 5054
// break ;
5052: GO 5056
// end ;
5054: GO 4715
5056: POP
5057: POP
// if Frank then
5058: LD_EXP 30
5062: IFFALSE 5076
// SetClass ( Frank , class_sniper ) ;
5064: LD_EXP 30
5068: PPUSH
5069: LD_INT 5
5071: PPUSH
5072: CALL_OW 336
// end ; end_of_file
5076: LD_VAR 0 1
5080: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5081: LD_INT 0
5083: PPUSH
5084: PPUSH
// if exist_mode then
5085: LD_VAR 0 2
5089: IFFALSE 5114
// unit := CreateCharacter ( prefix & ident ) else
5091: LD_ADDR_VAR 0 5
5095: PUSH
5096: LD_VAR 0 3
5100: PUSH
5101: LD_VAR 0 1
5105: STR
5106: PPUSH
5107: CALL_OW 34
5111: ST_TO_ADDR
5112: GO 5129
// unit := NewCharacter ( ident ) ;
5114: LD_ADDR_VAR 0 5
5118: PUSH
5119: LD_VAR 0 1
5123: PPUSH
5124: CALL_OW 25
5128: ST_TO_ADDR
// result := unit ;
5129: LD_ADDR_VAR 0 4
5133: PUSH
5134: LD_VAR 0 5
5138: ST_TO_ADDR
// end ;
5139: LD_VAR 0 4
5143: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5144: LD_INT 0
5146: PPUSH
// vc_chassis := chassis ;
5147: LD_ADDR_OWVAR 37
5151: PUSH
5152: LD_VAR 0 1
5156: ST_TO_ADDR
// vc_engine := engine ;
5157: LD_ADDR_OWVAR 39
5161: PUSH
5162: LD_VAR 0 2
5166: ST_TO_ADDR
// vc_control := control ;
5167: LD_ADDR_OWVAR 38
5171: PUSH
5172: LD_VAR 0 3
5176: ST_TO_ADDR
// vc_weapon := weapon ;
5177: LD_ADDR_OWVAR 40
5181: PUSH
5182: LD_VAR 0 4
5186: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5187: LD_ADDR_OWVAR 41
5191: PUSH
5192: LD_VAR 0 5
5196: ST_TO_ADDR
// end ;
5197: LD_VAR 0 6
5201: RET
// export function CanSayRand ( side ) ; begin
5202: LD_INT 0
5204: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5205: LD_ADDR_VAR 0 2
5209: PUSH
5210: LD_INT 52
5212: PUSH
5213: EMPTY
5214: LIST
5215: PUSH
5216: LD_INT 22
5218: PUSH
5219: LD_VAR 0 1
5223: PUSH
5224: EMPTY
5225: LIST
5226: LIST
5227: PUSH
5228: LD_INT 2
5230: PUSH
5231: LD_INT 25
5233: PUSH
5234: LD_INT 1
5236: PUSH
5237: EMPTY
5238: LIST
5239: LIST
5240: PUSH
5241: LD_INT 25
5243: PUSH
5244: LD_INT 2
5246: PUSH
5247: EMPTY
5248: LIST
5249: LIST
5250: PUSH
5251: LD_INT 25
5253: PUSH
5254: LD_INT 3
5256: PUSH
5257: EMPTY
5258: LIST
5259: LIST
5260: PUSH
5261: LD_INT 25
5263: PUSH
5264: LD_INT 4
5266: PUSH
5267: EMPTY
5268: LIST
5269: LIST
5270: PUSH
5271: EMPTY
5272: LIST
5273: LIST
5274: LIST
5275: LIST
5276: LIST
5277: PUSH
5278: EMPTY
5279: LIST
5280: LIST
5281: LIST
5282: PPUSH
5283: CALL_OW 69
5287: PUSH
5288: LD_EXP 11
5292: PUSH
5293: LD_EXP 30
5297: PUSH
5298: LD_EXP 20
5302: PUSH
5303: LD_EXP 21
5307: PUSH
5308: LD_EXP 22
5312: PUSH
5313: LD_EXP 23
5317: PUSH
5318: LD_EXP 24
5322: PUSH
5323: LD_EXP 25
5327: PUSH
5328: LD_EXP 26
5332: PUSH
5333: LD_EXP 27
5337: PUSH
5338: LD_EXP 13
5342: PUSH
5343: LD_EXP 28
5347: PUSH
5348: LD_EXP 29
5352: PUSH
5353: LD_EXP 31
5357: PUSH
5358: EMPTY
5359: LIST
5360: LIST
5361: LIST
5362: LIST
5363: LIST
5364: LIST
5365: LIST
5366: LIST
5367: LIST
5368: LIST
5369: LIST
5370: LIST
5371: LIST
5372: LIST
5373: DIFF
5374: ST_TO_ADDR
// end ;
5375: LD_VAR 0 2
5379: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5380: LD_INT 0
5382: PPUSH
5383: PPUSH
5384: PPUSH
5385: PPUSH
5386: PPUSH
5387: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5388: LD_VAR 0 1
5392: NOT
5393: PUSH
5394: LD_VAR 0 1
5398: PPUSH
5399: CALL_OW 263
5403: PUSH
5404: LD_INT 2
5406: EQUAL
5407: NOT
5408: OR
5409: IFFALSE 5413
// exit ;
5411: GO 5729
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5413: LD_ADDR_VAR 0 6
5417: PUSH
5418: LD_INT 22
5420: PUSH
5421: LD_VAR 0 1
5425: PPUSH
5426: CALL_OW 255
5430: PUSH
5431: EMPTY
5432: LIST
5433: LIST
5434: PUSH
5435: LD_INT 2
5437: PUSH
5438: LD_INT 30
5440: PUSH
5441: LD_INT 36
5443: PUSH
5444: EMPTY
5445: LIST
5446: LIST
5447: PUSH
5448: LD_INT 34
5450: PUSH
5451: LD_INT 31
5453: PUSH
5454: EMPTY
5455: LIST
5456: LIST
5457: PUSH
5458: EMPTY
5459: LIST
5460: LIST
5461: LIST
5462: PUSH
5463: EMPTY
5464: LIST
5465: LIST
5466: PPUSH
5467: CALL_OW 69
5471: ST_TO_ADDR
// if not tmp then
5472: LD_VAR 0 6
5476: NOT
5477: IFFALSE 5481
// exit ;
5479: GO 5729
// result := [ ] ;
5481: LD_ADDR_VAR 0 2
5485: PUSH
5486: EMPTY
5487: ST_TO_ADDR
// for i in tmp do
5488: LD_ADDR_VAR 0 3
5492: PUSH
5493: LD_VAR 0 6
5497: PUSH
5498: FOR_IN
5499: IFFALSE 5570
// begin t := UnitsInside ( i ) ;
5501: LD_ADDR_VAR 0 4
5505: PUSH
5506: LD_VAR 0 3
5510: PPUSH
5511: CALL_OW 313
5515: ST_TO_ADDR
// if t then
5516: LD_VAR 0 4
5520: IFFALSE 5568
// for j in t do
5522: LD_ADDR_VAR 0 7
5526: PUSH
5527: LD_VAR 0 4
5531: PUSH
5532: FOR_IN
5533: IFFALSE 5566
// result := Insert ( result , result + 1 , j ) ;
5535: LD_ADDR_VAR 0 2
5539: PUSH
5540: LD_VAR 0 2
5544: PPUSH
5545: LD_VAR 0 2
5549: PUSH
5550: LD_INT 1
5552: PLUS
5553: PPUSH
5554: LD_VAR 0 7
5558: PPUSH
5559: CALL_OW 2
5563: ST_TO_ADDR
5564: GO 5532
5566: POP
5567: POP
// end ;
5568: GO 5498
5570: POP
5571: POP
// if not result then
5572: LD_VAR 0 2
5576: NOT
5577: IFFALSE 5581
// exit ;
5579: GO 5729
// mech := result [ 1 ] ;
5581: LD_ADDR_VAR 0 5
5585: PUSH
5586: LD_VAR 0 2
5590: PUSH
5591: LD_INT 1
5593: ARRAY
5594: ST_TO_ADDR
// if result > 1 then
5595: LD_VAR 0 2
5599: PUSH
5600: LD_INT 1
5602: GREATER
5603: IFFALSE 5715
// for i = 2 to result do
5605: LD_ADDR_VAR 0 3
5609: PUSH
5610: DOUBLE
5611: LD_INT 2
5613: DEC
5614: ST_TO_ADDR
5615: LD_VAR 0 2
5619: PUSH
5620: FOR_TO
5621: IFFALSE 5713
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5623: LD_ADDR_VAR 0 4
5627: PUSH
5628: LD_VAR 0 2
5632: PUSH
5633: LD_VAR 0 3
5637: ARRAY
5638: PPUSH
5639: LD_INT 3
5641: PPUSH
5642: CALL_OW 259
5646: PUSH
5647: LD_VAR 0 2
5651: PUSH
5652: LD_VAR 0 3
5656: ARRAY
5657: PPUSH
5658: CALL_OW 432
5662: MINUS
5663: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5664: LD_VAR 0 4
5668: PUSH
5669: LD_VAR 0 5
5673: PPUSH
5674: LD_INT 3
5676: PPUSH
5677: CALL_OW 259
5681: PUSH
5682: LD_VAR 0 5
5686: PPUSH
5687: CALL_OW 432
5691: MINUS
5692: GREATEREQUAL
5693: IFFALSE 5711
// mech := result [ i ] ;
5695: LD_ADDR_VAR 0 5
5699: PUSH
5700: LD_VAR 0 2
5704: PUSH
5705: LD_VAR 0 3
5709: ARRAY
5710: ST_TO_ADDR
// end ;
5711: GO 5620
5713: POP
5714: POP
// ComLinkTo ( vehicle , mech ) ;
5715: LD_VAR 0 1
5719: PPUSH
5720: LD_VAR 0 5
5724: PPUSH
5725: CALL_OW 135
// end ;
5729: LD_VAR 0 2
5733: RET
// export function SayRand ( sex , dial ) ; begin
5734: LD_INT 0
5736: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5737: LD_ADDR_VAR 0 3
5741: PUSH
5742: LD_INT 52
5744: PUSH
5745: EMPTY
5746: LIST
5747: PUSH
5748: LD_INT 22
5750: PUSH
5751: LD_INT 1
5753: PUSH
5754: EMPTY
5755: LIST
5756: LIST
5757: PUSH
5758: LD_INT 26
5760: PUSH
5761: LD_VAR 0 1
5765: PUSH
5766: EMPTY
5767: LIST
5768: LIST
5769: PUSH
5770: LD_INT 2
5772: PUSH
5773: LD_INT 25
5775: PUSH
5776: LD_INT 1
5778: PUSH
5779: EMPTY
5780: LIST
5781: LIST
5782: PUSH
5783: LD_INT 25
5785: PUSH
5786: LD_INT 2
5788: PUSH
5789: EMPTY
5790: LIST
5791: LIST
5792: PUSH
5793: LD_INT 25
5795: PUSH
5796: LD_INT 3
5798: PUSH
5799: EMPTY
5800: LIST
5801: LIST
5802: PUSH
5803: LD_INT 25
5805: PUSH
5806: LD_INT 4
5808: PUSH
5809: EMPTY
5810: LIST
5811: LIST
5812: PUSH
5813: EMPTY
5814: LIST
5815: LIST
5816: LIST
5817: LIST
5818: LIST
5819: PUSH
5820: EMPTY
5821: LIST
5822: LIST
5823: LIST
5824: LIST
5825: PPUSH
5826: CALL_OW 69
5830: PUSH
5831: LD_EXP 11
5835: PUSH
5836: LD_EXP 30
5840: PUSH
5841: LD_EXP 20
5845: PUSH
5846: LD_EXP 21
5850: PUSH
5851: LD_EXP 22
5855: PUSH
5856: LD_EXP 23
5860: PUSH
5861: LD_EXP 24
5865: PUSH
5866: LD_EXP 25
5870: PUSH
5871: LD_EXP 26
5875: PUSH
5876: LD_EXP 27
5880: PUSH
5881: LD_EXP 13
5885: PUSH
5886: LD_EXP 28
5890: PUSH
5891: LD_EXP 29
5895: PUSH
5896: LD_EXP 31
5900: PUSH
5901: EMPTY
5902: LIST
5903: LIST
5904: LIST
5905: LIST
5906: LIST
5907: LIST
5908: LIST
5909: LIST
5910: LIST
5911: LIST
5912: LIST
5913: LIST
5914: LIST
5915: LIST
5916: DIFF
5917: ST_TO_ADDR
// if not result then
5918: LD_VAR 0 3
5922: NOT
5923: IFFALSE 5927
// exit ;
5925: GO 5955
// result := result [ 1 ] ;
5927: LD_ADDR_VAR 0 3
5931: PUSH
5932: LD_VAR 0 3
5936: PUSH
5937: LD_INT 1
5939: ARRAY
5940: ST_TO_ADDR
// Say ( result , dial ) ;
5941: LD_VAR 0 3
5945: PPUSH
5946: LD_VAR 0 2
5950: PPUSH
5951: CALL_OW 88
// end ;
5955: LD_VAR 0 3
5959: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5960: LD_INT 0
5962: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5963: LD_ADDR_VAR 0 4
5967: PUSH
5968: LD_INT 22
5970: PUSH
5971: LD_INT 1
5973: PUSH
5974: EMPTY
5975: LIST
5976: LIST
5977: PUSH
5978: LD_INT 26
5980: PUSH
5981: LD_VAR 0 1
5985: PUSH
5986: EMPTY
5987: LIST
5988: LIST
5989: PUSH
5990: LD_INT 2
5992: PUSH
5993: LD_INT 25
5995: PUSH
5996: LD_INT 1
5998: PUSH
5999: EMPTY
6000: LIST
6001: LIST
6002: PUSH
6003: LD_INT 25
6005: PUSH
6006: LD_INT 2
6008: PUSH
6009: EMPTY
6010: LIST
6011: LIST
6012: PUSH
6013: LD_INT 25
6015: PUSH
6016: LD_INT 3
6018: PUSH
6019: EMPTY
6020: LIST
6021: LIST
6022: PUSH
6023: LD_INT 25
6025: PUSH
6026: LD_INT 4
6028: PUSH
6029: EMPTY
6030: LIST
6031: LIST
6032: PUSH
6033: EMPTY
6034: LIST
6035: LIST
6036: LIST
6037: LIST
6038: LIST
6039: PUSH
6040: EMPTY
6041: LIST
6042: LIST
6043: LIST
6044: PPUSH
6045: CALL_OW 69
6049: PUSH
6050: LD_EXP 11
6054: PUSH
6055: LD_EXP 30
6059: PUSH
6060: LD_EXP 20
6064: PUSH
6065: LD_EXP 21
6069: PUSH
6070: LD_EXP 22
6074: PUSH
6075: LD_EXP 23
6079: PUSH
6080: LD_EXP 24
6084: PUSH
6085: LD_EXP 25
6089: PUSH
6090: LD_EXP 26
6094: PUSH
6095: LD_EXP 27
6099: PUSH
6100: LD_EXP 13
6104: PUSH
6105: LD_EXP 28
6109: PUSH
6110: LD_EXP 29
6114: PUSH
6115: LD_EXP 31
6119: PUSH
6120: EMPTY
6121: LIST
6122: LIST
6123: LIST
6124: LIST
6125: LIST
6126: LIST
6127: LIST
6128: LIST
6129: LIST
6130: LIST
6131: LIST
6132: LIST
6133: LIST
6134: LIST
6135: PUSH
6136: LD_VAR 0 3
6140: ADD
6141: DIFF
6142: ST_TO_ADDR
// if not result then
6143: LD_VAR 0 4
6147: NOT
6148: IFFALSE 6152
// exit ;
6150: GO 6180
// result := result [ 1 ] ;
6152: LD_ADDR_VAR 0 4
6156: PUSH
6157: LD_VAR 0 4
6161: PUSH
6162: LD_INT 1
6164: ARRAY
6165: ST_TO_ADDR
// Say ( result , dial ) ;
6166: LD_VAR 0 4
6170: PPUSH
6171: LD_VAR 0 2
6175: PPUSH
6176: CALL_OW 88
// end ;
6180: LD_VAR 0 4
6184: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6185: LD_INT 0
6187: PPUSH
6188: PPUSH
6189: PPUSH
6190: PPUSH
6191: PPUSH
6192: PPUSH
6193: PPUSH
6194: PPUSH
6195: PPUSH
6196: PPUSH
6197: PPUSH
6198: PPUSH
6199: PPUSH
6200: PPUSH
6201: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6202: LD_VAR 0 1
6206: NOT
6207: PUSH
6208: LD_VAR 0 2
6212: NOT
6213: OR
6214: PUSH
6215: LD_VAR 0 1
6219: PPUSH
6220: CALL_OW 247
6224: PUSH
6225: LD_INT 3
6227: EQUAL
6228: OR
6229: IFFALSE 6233
// exit ;
6231: GO 7740
// for i = path downto 1 do
6233: LD_ADDR_VAR 0 5
6237: PUSH
6238: DOUBLE
6239: LD_VAR 0 2
6243: INC
6244: ST_TO_ADDR
6245: LD_INT 1
6247: PUSH
6248: FOR_DOWNTO
6249: IFFALSE 6310
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6251: LD_VAR 0 2
6255: PUSH
6256: LD_VAR 0 5
6260: ARRAY
6261: PUSH
6262: LD_INT 1
6264: ARRAY
6265: PPUSH
6266: LD_VAR 0 2
6270: PUSH
6271: LD_VAR 0 5
6275: ARRAY
6276: PUSH
6277: LD_INT 2
6279: ARRAY
6280: PPUSH
6281: CALL_OW 488
6285: NOT
6286: IFFALSE 6308
// path = Delete ( path , i ) ;
6288: LD_ADDR_VAR 0 2
6292: PUSH
6293: LD_VAR 0 2
6297: PPUSH
6298: LD_VAR 0 5
6302: PPUSH
6303: CALL_OW 3
6307: ST_TO_ADDR
// end ;
6308: GO 6248
6310: POP
6311: POP
// if not path then
6312: LD_VAR 0 2
6316: NOT
6317: IFFALSE 6321
// exit ;
6319: GO 7740
// tmp_path := [ ] ;
6321: LD_ADDR_VAR 0 11
6325: PUSH
6326: EMPTY
6327: ST_TO_ADDR
// if flags then
6328: LD_VAR 0 3
6332: IFFALSE 6406
// begin if flags [ 1 ] then
6334: LD_VAR 0 3
6338: PUSH
6339: LD_INT 1
6341: ARRAY
6342: IFFALSE 6358
// safe_place = flags [ 1 ] ;
6344: LD_ADDR_VAR 0 16
6348: PUSH
6349: LD_VAR 0 3
6353: PUSH
6354: LD_INT 1
6356: ARRAY
6357: ST_TO_ADDR
// if flags [ 2 ] then
6358: LD_VAR 0 3
6362: PUSH
6363: LD_INT 2
6365: ARRAY
6366: IFFALSE 6382
// spot_dist = flags [ 2 ] ;
6368: LD_ADDR_VAR 0 15
6372: PUSH
6373: LD_VAR 0 3
6377: PUSH
6378: LD_INT 2
6380: ARRAY
6381: ST_TO_ADDR
// if flags [ 3 ] then
6382: LD_VAR 0 3
6386: PUSH
6387: LD_INT 3
6389: ARRAY
6390: IFFALSE 6406
// chase_range = flags [ 3 ] ;
6392: LD_ADDR_VAR 0 17
6396: PUSH
6397: LD_VAR 0 3
6401: PUSH
6402: LD_INT 3
6404: ARRAY
6405: ST_TO_ADDR
// end ; if not chase_range then
6406: LD_VAR 0 17
6410: NOT
6411: IFFALSE 6421
// chase_range = 8 ;
6413: LD_ADDR_VAR 0 17
6417: PUSH
6418: LD_INT 8
6420: ST_TO_ADDR
// if not spot_dist then
6421: LD_VAR 0 15
6425: NOT
6426: IFFALSE 6436
// spot_dist := 8 ;
6428: LD_ADDR_VAR 0 15
6432: PUSH
6433: LD_INT 8
6435: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6436: LD_ADDR_VAR 0 18
6440: PUSH
6441: LD_VAR 0 1
6445: PPUSH
6446: CALL_OW 247
6450: PUSH
6451: LD_INT 2
6453: EQUAL
6454: PUSH
6455: LD_VAR 0 1
6459: PPUSH
6460: CALL_OW 262
6464: PUSH
6465: LD_INT 3
6467: NONEQUAL
6468: AND
6469: ST_TO_ADDR
// status = 1 ;
6470: LD_ADDR_VAR 0 12
6474: PUSH
6475: LD_INT 1
6477: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6478: LD_ADDR_VAR 0 11
6482: PUSH
6483: LD_INT 1
6485: PUSH
6486: LD_VAR 0 2
6490: PUSH
6491: LD_INT 1
6493: ARRAY
6494: PUSH
6495: EMPTY
6496: LIST
6497: LIST
6498: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6499: LD_INT 35
6501: PPUSH
6502: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6506: LD_VAR 0 18
6510: PUSH
6511: LD_VAR 0 1
6515: PPUSH
6516: CALL_OW 261
6520: PUSH
6521: LD_INT 20
6523: LESS
6524: AND
6525: IFFALSE 6718
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6527: LD_ADDR_VAR 0 10
6531: PUSH
6532: LD_INT 22
6534: PUSH
6535: LD_VAR 0 1
6539: PPUSH
6540: CALL_OW 255
6544: PUSH
6545: EMPTY
6546: LIST
6547: LIST
6548: PUSH
6549: LD_INT 2
6551: PUSH
6552: LD_INT 30
6554: PUSH
6555: LD_INT 0
6557: PUSH
6558: EMPTY
6559: LIST
6560: LIST
6561: PUSH
6562: LD_INT 30
6564: PUSH
6565: LD_INT 1
6567: PUSH
6568: EMPTY
6569: LIST
6570: LIST
6571: PUSH
6572: LD_INT 30
6574: PUSH
6575: LD_INT 29
6577: PUSH
6578: EMPTY
6579: LIST
6580: LIST
6581: PUSH
6582: LD_INT 30
6584: PUSH
6585: LD_INT 3
6587: PUSH
6588: EMPTY
6589: LIST
6590: LIST
6591: PUSH
6592: EMPTY
6593: LIST
6594: LIST
6595: LIST
6596: LIST
6597: LIST
6598: PUSH
6599: EMPTY
6600: LIST
6601: LIST
6602: PPUSH
6603: CALL_OW 69
6607: ST_TO_ADDR
// if not station then
6608: LD_VAR 0 10
6612: NOT
6613: IFFALSE 6629
// begin SetFuel ( unit , 40 ) ;
6615: LD_VAR 0 1
6619: PPUSH
6620: LD_INT 40
6622: PPUSH
6623: CALL_OW 240
// continue ;
6627: GO 6499
// end ; status := 6 ;
6629: LD_ADDR_VAR 0 12
6633: PUSH
6634: LD_INT 6
6636: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6637: LD_ADDR_VAR 0 10
6641: PUSH
6642: LD_VAR 0 10
6646: PPUSH
6647: LD_VAR 0 1
6651: PPUSH
6652: CALL_OW 74
6656: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6657: LD_INT 35
6659: PPUSH
6660: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6664: LD_VAR 0 1
6668: PPUSH
6669: LD_VAR 0 10
6673: PPUSH
6674: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6678: LD_VAR 0 1
6682: PPUSH
6683: LD_VAR 0 10
6687: PPUSH
6688: CALL_OW 296
6692: PUSH
6693: LD_INT 6
6695: LESS
6696: IFFALSE 6657
// SetFuel ( unit , 100 ) ;
6698: LD_VAR 0 1
6702: PPUSH
6703: LD_INT 100
6705: PPUSH
6706: CALL_OW 240
// status := 5 ;
6710: LD_ADDR_VAR 0 12
6714: PUSH
6715: LD_INT 5
6717: ST_TO_ADDR
// end ; if status = 1 then
6718: LD_VAR 0 12
6722: PUSH
6723: LD_INT 1
6725: EQUAL
6726: IFFALSE 7058
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6728: LD_ADDR_VAR 0 13
6732: PUSH
6733: LD_INT 81
6735: PUSH
6736: LD_VAR 0 1
6740: PPUSH
6741: CALL_OW 255
6745: PUSH
6746: EMPTY
6747: LIST
6748: LIST
6749: PUSH
6750: LD_INT 3
6752: PUSH
6753: LD_INT 21
6755: PUSH
6756: LD_INT 3
6758: PUSH
6759: EMPTY
6760: LIST
6761: LIST
6762: PUSH
6763: EMPTY
6764: LIST
6765: LIST
6766: PUSH
6767: LD_INT 91
6769: PUSH
6770: LD_VAR 0 1
6774: PUSH
6775: LD_VAR 0 15
6779: PUSH
6780: EMPTY
6781: LIST
6782: LIST
6783: LIST
6784: PUSH
6785: LD_INT 101
6787: PUSH
6788: LD_INT 1
6790: PUSH
6791: EMPTY
6792: LIST
6793: LIST
6794: PUSH
6795: EMPTY
6796: LIST
6797: LIST
6798: LIST
6799: LIST
6800: PPUSH
6801: CALL_OW 69
6805: ST_TO_ADDR
// if ( enemy ) then
6806: LD_VAR 0 13
6810: IFFALSE 6860
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6812: LD_VAR 0 1
6816: PPUSH
6817: LD_VAR 0 1
6821: PPUSH
6822: CALL_OW 250
6826: PPUSH
6827: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6831: LD_VAR 0 1
6835: PPUSH
6836: LD_VAR 0 1
6840: PPUSH
6841: CALL_OW 251
6845: PPUSH
6846: CALL_OW 232
// status = 2 ;
6850: LD_ADDR_VAR 0 12
6854: PUSH
6855: LD_INT 2
6857: ST_TO_ADDR
// end else
6858: GO 7058
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6860: LD_VAR 0 1
6864: PPUSH
6865: LD_VAR 0 11
6869: PUSH
6870: LD_INT 2
6872: ARRAY
6873: PUSH
6874: LD_INT 1
6876: ARRAY
6877: PPUSH
6878: LD_VAR 0 11
6882: PUSH
6883: LD_INT 2
6885: ARRAY
6886: PUSH
6887: LD_INT 2
6889: ARRAY
6890: PPUSH
6891: CALL_OW 307
6895: PUSH
6896: LD_VAR 0 1
6900: PPUSH
6901: CALL_OW 314
6905: NOT
6906: OR
6907: IFFALSE 7058
// begin wait ( 0 0$2 ) ;
6909: LD_INT 70
6911: PPUSH
6912: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6916: LD_VAR 0 11
6920: PUSH
6921: LD_INT 1
6923: ARRAY
6924: PUSH
6925: LD_INT 1
6927: PLUS
6928: PUSH
6929: LD_VAR 0 2
6933: GREATER
6934: IFFALSE 6959
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6936: LD_ADDR_VAR 0 11
6940: PUSH
6941: LD_VAR 0 11
6945: PPUSH
6946: LD_INT 1
6948: PPUSH
6949: LD_INT 1
6951: PPUSH
6952: CALL_OW 1
6956: ST_TO_ADDR
6957: GO 6990
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
6959: LD_ADDR_VAR 0 11
6963: PUSH
6964: LD_VAR 0 11
6968: PPUSH
6969: LD_INT 1
6971: PPUSH
6972: LD_VAR 0 11
6976: PUSH
6977: LD_INT 1
6979: ARRAY
6980: PUSH
6981: LD_INT 1
6983: PLUS
6984: PPUSH
6985: CALL_OW 1
6989: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
6990: LD_ADDR_VAR 0 11
6994: PUSH
6995: LD_VAR 0 11
6999: PPUSH
7000: LD_INT 2
7002: PPUSH
7003: LD_VAR 0 2
7007: PUSH
7008: LD_VAR 0 11
7012: PUSH
7013: LD_INT 1
7015: ARRAY
7016: ARRAY
7017: PPUSH
7018: CALL_OW 1
7022: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7023: LD_VAR 0 1
7027: PPUSH
7028: LD_VAR 0 11
7032: PUSH
7033: LD_INT 2
7035: ARRAY
7036: PUSH
7037: LD_INT 1
7039: ARRAY
7040: PPUSH
7041: LD_VAR 0 11
7045: PUSH
7046: LD_INT 2
7048: ARRAY
7049: PUSH
7050: LD_INT 2
7052: ARRAY
7053: PPUSH
7054: CALL_OW 114
// end ; end ; end ; if status = 2 then
7058: LD_VAR 0 12
7062: PUSH
7063: LD_INT 2
7065: EQUAL
7066: IFFALSE 7299
// begin if GetLives ( unit ) < 650 and safe_place then
7068: LD_VAR 0 1
7072: PPUSH
7073: CALL_OW 256
7077: PUSH
7078: LD_INT 650
7080: LESS
7081: PUSH
7082: LD_VAR 0 16
7086: AND
7087: IFFALSE 7099
// begin status = 3 ;
7089: LD_ADDR_VAR 0 12
7093: PUSH
7094: LD_INT 3
7096: ST_TO_ADDR
// continue ;
7097: GO 6499
// end ; x := GetRememberedX ( unit ) ;
7099: LD_ADDR_VAR 0 6
7103: PUSH
7104: LD_VAR 0 1
7108: PPUSH
7109: CALL_OW 252
7113: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7114: LD_ADDR_VAR 0 7
7118: PUSH
7119: LD_VAR 0 1
7123: PPUSH
7124: CALL_OW 253
7128: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7129: LD_ADDR_VAR 0 13
7133: PUSH
7134: LD_INT 81
7136: PUSH
7137: LD_VAR 0 1
7141: PPUSH
7142: CALL_OW 255
7146: PUSH
7147: EMPTY
7148: LIST
7149: LIST
7150: PUSH
7151: LD_INT 92
7153: PUSH
7154: LD_VAR 0 6
7158: PUSH
7159: LD_VAR 0 7
7163: PUSH
7164: LD_VAR 0 15
7168: PUSH
7169: EMPTY
7170: LIST
7171: LIST
7172: LIST
7173: LIST
7174: PUSH
7175: LD_INT 101
7177: PUSH
7178: LD_INT 1
7180: PUSH
7181: EMPTY
7182: LIST
7183: LIST
7184: PUSH
7185: EMPTY
7186: LIST
7187: LIST
7188: LIST
7189: PPUSH
7190: CALL_OW 69
7194: ST_TO_ADDR
// if enemy then
7195: LD_VAR 0 13
7199: IFFALSE 7282
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7201: LD_ADDR_VAR 0 14
7205: PUSH
7206: LD_VAR 0 13
7210: PPUSH
7211: LD_VAR 0 1
7215: PPUSH
7216: CALL_OW 74
7220: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range and not IsInvisible ( e ) then
7221: LD_VAR 0 14
7225: PPUSH
7226: LD_VAR 0 6
7230: PPUSH
7231: LD_VAR 0 7
7235: PPUSH
7236: CALL_OW 297
7240: PUSH
7241: LD_VAR 0 15
7245: PUSH
7246: LD_VAR 0 17
7250: PLUS
7251: LESS
7252: PUSH
7253: LD_VAR 0 14
7257: PPUSH
7258: CALL_OW 571
7262: NOT
7263: AND
7264: IFFALSE 7280
// ComAttackUnit ( unit , e ) ;
7266: LD_VAR 0 1
7270: PPUSH
7271: LD_VAR 0 14
7275: PPUSH
7276: CALL_OW 115
// end else
7280: GO 7299
// begin ComStop ( unit ) ;
7282: LD_VAR 0 1
7286: PPUSH
7287: CALL_OW 141
// status = 5 ;
7291: LD_ADDR_VAR 0 12
7295: PUSH
7296: LD_INT 5
7298: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7299: LD_VAR 0 12
7303: PUSH
7304: LD_INT 3
7306: EQUAL
7307: PUSH
7308: LD_VAR 0 16
7312: AND
7313: IFFALSE 7399
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7315: LD_VAR 0 1
7319: PPUSH
7320: LD_VAR 0 16
7324: PUSH
7325: LD_INT 1
7327: ARRAY
7328: PPUSH
7329: LD_VAR 0 16
7333: PUSH
7334: LD_INT 2
7336: ARRAY
7337: PPUSH
7338: CALL_OW 111
// wait ( 0 0$1 ) ;
7342: LD_INT 35
7344: PPUSH
7345: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7349: LD_VAR 0 1
7353: PPUSH
7354: LD_VAR 0 16
7358: PUSH
7359: LD_INT 1
7361: ARRAY
7362: PPUSH
7363: LD_VAR 0 16
7367: PUSH
7368: LD_INT 2
7370: ARRAY
7371: PPUSH
7372: CALL_OW 297
7376: PUSH
7377: LD_INT 4
7379: LESS
7380: IFFALSE 7315
// ComStop ( unit ) ;
7382: LD_VAR 0 1
7386: PPUSH
7387: CALL_OW 141
// status = 4 ;
7391: LD_ADDR_VAR 0 12
7395: PUSH
7396: LD_INT 4
7398: ST_TO_ADDR
// end ; if status = 4 then
7399: LD_VAR 0 12
7403: PUSH
7404: LD_INT 4
7406: EQUAL
7407: IFFALSE 7439
// begin repeat wait ( 0 0$1 ) ;
7409: LD_INT 35
7411: PPUSH
7412: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7416: LD_VAR 0 1
7420: PPUSH
7421: CALL_OW 256
7425: PUSH
7426: LD_INT 1000
7428: EQUAL
7429: IFFALSE 7409
// status = 5 ;
7431: LD_ADDR_VAR 0 12
7435: PUSH
7436: LD_INT 5
7438: ST_TO_ADDR
// end ; if status = 5 then
7439: LD_VAR 0 12
7443: PUSH
7444: LD_INT 5
7446: EQUAL
7447: IFFALSE 7729
// begin p := 999 ;
7449: LD_ADDR_VAR 0 9
7453: PUSH
7454: LD_INT 999
7456: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7457: LD_ADDR_VAR 0 14
7461: PUSH
7462: LD_VAR 0 11
7466: PUSH
7467: LD_INT 2
7469: ARRAY
7470: PUSH
7471: LD_INT 1
7473: ARRAY
7474: PUSH
7475: LD_VAR 0 11
7479: PUSH
7480: LD_INT 2
7482: ARRAY
7483: PUSH
7484: LD_INT 2
7486: ARRAY
7487: PUSH
7488: EMPTY
7489: LIST
7490: LIST
7491: ST_TO_ADDR
// c := 1 ;
7492: LD_ADDR_VAR 0 8
7496: PUSH
7497: LD_INT 1
7499: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7500: LD_ADDR_VAR 0 5
7504: PUSH
7505: DOUBLE
7506: LD_INT 1
7508: DEC
7509: ST_TO_ADDR
7510: LD_VAR 0 11
7514: PUSH
7515: LD_INT 2
7517: ARRAY
7518: PUSH
7519: LD_INT 2
7521: DIV
7522: PUSH
7523: FOR_TO
7524: IFFALSE 7656
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7526: LD_ADDR_VAR 0 6
7530: PUSH
7531: LD_VAR 0 1
7535: PPUSH
7536: LD_VAR 0 11
7540: PUSH
7541: LD_INT 2
7543: ARRAY
7544: PUSH
7545: LD_VAR 0 8
7549: ARRAY
7550: PPUSH
7551: LD_VAR 0 11
7555: PUSH
7556: LD_INT 2
7558: ARRAY
7559: PUSH
7560: LD_VAR 0 8
7564: PUSH
7565: LD_INT 1
7567: PLUS
7568: ARRAY
7569: PPUSH
7570: CALL_OW 297
7574: ST_TO_ADDR
// if x < p then
7575: LD_VAR 0 6
7579: PUSH
7580: LD_VAR 0 9
7584: LESS
7585: IFFALSE 7640
// begin p := x ;
7587: LD_ADDR_VAR 0 9
7591: PUSH
7592: LD_VAR 0 6
7596: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7597: LD_ADDR_VAR 0 14
7601: PUSH
7602: LD_VAR 0 11
7606: PUSH
7607: LD_INT 2
7609: ARRAY
7610: PUSH
7611: LD_VAR 0 8
7615: ARRAY
7616: PUSH
7617: LD_VAR 0 11
7621: PUSH
7622: LD_INT 2
7624: ARRAY
7625: PUSH
7626: LD_VAR 0 8
7630: PUSH
7631: LD_INT 1
7633: PLUS
7634: ARRAY
7635: PUSH
7636: EMPTY
7637: LIST
7638: LIST
7639: ST_TO_ADDR
// end ; c = c + 2 ;
7640: LD_ADDR_VAR 0 8
7644: PUSH
7645: LD_VAR 0 8
7649: PUSH
7650: LD_INT 2
7652: PLUS
7653: ST_TO_ADDR
// end ;
7654: GO 7523
7656: POP
7657: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7658: LD_VAR 0 1
7662: PPUSH
7663: LD_VAR 0 14
7667: PUSH
7668: LD_INT 1
7670: ARRAY
7671: PPUSH
7672: LD_VAR 0 14
7676: PUSH
7677: LD_INT 2
7679: ARRAY
7680: PPUSH
7681: CALL_OW 111
// wait ( 0 0$1 ) ;
7685: LD_INT 35
7687: PPUSH
7688: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7692: LD_VAR 0 1
7696: PPUSH
7697: LD_VAR 0 14
7701: PUSH
7702: LD_INT 1
7704: ARRAY
7705: PPUSH
7706: LD_VAR 0 14
7710: PUSH
7711: LD_INT 2
7713: ARRAY
7714: PPUSH
7715: CALL_OW 307
7719: IFFALSE 7658
// status = 1 ;
7721: LD_ADDR_VAR 0 12
7725: PUSH
7726: LD_INT 1
7728: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7729: LD_VAR 0 1
7733: PPUSH
7734: CALL_OW 301
7738: IFFALSE 6499
// end ;
7740: LD_VAR 0 4
7744: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7745: LD_INT 0
7747: PPUSH
7748: PPUSH
7749: PPUSH
7750: PPUSH
7751: PPUSH
7752: PPUSH
7753: PPUSH
7754: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7755: LD_VAR 0 1
7759: NOT
7760: PUSH
7761: LD_VAR 0 3
7765: NOT
7766: OR
7767: PUSH
7768: LD_VAR 0 4
7772: PUSH
7773: LD_INT 1
7775: PUSH
7776: LD_INT 2
7778: PUSH
7779: LD_INT 0
7781: PUSH
7782: EMPTY
7783: LIST
7784: LIST
7785: LIST
7786: IN
7787: NOT
7788: OR
7789: PUSH
7790: LD_VAR 0 6
7794: NOT
7795: OR
7796: PUSH
7797: LD_VAR 0 7
7801: NOT
7802: OR
7803: IFFALSE 7807
// exit ;
7805: GO 8198
// sex_id :=  ;
7807: LD_ADDR_VAR 0 14
7811: PUSH
7812: LD_STRING 
7814: ST_TO_ADDR
// case class of 1 :
7815: LD_VAR 0 5
7819: PUSH
7820: LD_INT 1
7822: DOUBLE
7823: EQUAL
7824: IFTRUE 7828
7826: GO 7839
7828: POP
// class_id := Sol ; 2 :
7829: LD_ADDR_VAR 0 15
7833: PUSH
7834: LD_STRING Sol
7836: ST_TO_ADDR
7837: GO 7897
7839: LD_INT 2
7841: DOUBLE
7842: EQUAL
7843: IFTRUE 7847
7845: GO 7858
7847: POP
// class_id := Eng ; 3 :
7848: LD_ADDR_VAR 0 15
7852: PUSH
7853: LD_STRING Eng
7855: ST_TO_ADDR
7856: GO 7897
7858: LD_INT 3
7860: DOUBLE
7861: EQUAL
7862: IFTRUE 7866
7864: GO 7877
7866: POP
// class_id := Mech ; 4 :
7867: LD_ADDR_VAR 0 15
7871: PUSH
7872: LD_STRING Mech
7874: ST_TO_ADDR
7875: GO 7897
7877: LD_INT 4
7879: DOUBLE
7880: EQUAL
7881: IFTRUE 7885
7883: GO 7896
7885: POP
// class_id := Sci ; end ;
7886: LD_ADDR_VAR 0 15
7890: PUSH
7891: LD_STRING Sci
7893: ST_TO_ADDR
7894: GO 7897
7896: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7897: LD_ADDR_VAR 0 11
7901: PUSH
7902: LD_VAR 0 1
7906: PPUSH
7907: LD_INT 25
7909: PUSH
7910: LD_VAR 0 5
7914: PUSH
7915: EMPTY
7916: LIST
7917: LIST
7918: PPUSH
7919: CALL_OW 72
7923: ST_TO_ADDR
// if tmp then
7924: LD_VAR 0 11
7928: IFFALSE 7940
// units := tmp ;
7930: LD_ADDR_VAR 0 1
7934: PUSH
7935: LD_VAR 0 11
7939: ST_TO_ADDR
// if sex then
7940: LD_VAR 0 4
7944: IFFALSE 8000
// begin if sex = sex_female then
7946: LD_VAR 0 4
7950: PUSH
7951: LD_INT 2
7953: EQUAL
7954: IFFALSE 7964
// sex_id := F ;
7956: LD_ADDR_VAR 0 14
7960: PUSH
7961: LD_STRING F
7963: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7964: LD_ADDR_VAR 0 1
7968: PUSH
7969: LD_VAR 0 1
7973: PPUSH
7974: LD_INT 26
7976: PUSH
7977: LD_VAR 0 4
7981: PUSH
7982: EMPTY
7983: LIST
7984: LIST
7985: PPUSH
7986: CALL_OW 72
7990: ST_TO_ADDR
// if not units then
7991: LD_VAR 0 1
7995: NOT
7996: IFFALSE 8000
// exit ;
7998: GO 8198
// end ; unit_id := id ;
8000: LD_ADDR_VAR 0 12
8004: PUSH
8005: LD_VAR 0 6
8009: ST_TO_ADDR
// if unit_id > units then
8010: LD_VAR 0 12
8014: PUSH
8015: LD_VAR 0 1
8019: GREATER
8020: IFFALSE 8030
// unit_id := 1 ;
8022: LD_ADDR_VAR 0 12
8026: PUSH
8027: LD_INT 1
8029: ST_TO_ADDR
// if not units [ unit_id ] then
8030: LD_VAR 0 1
8034: PUSH
8035: LD_VAR 0 12
8039: ARRAY
8040: NOT
8041: IFFALSE 8045
// exit ;
8043: GO 8198
// unit := units [ unit_id ] ;
8045: LD_ADDR_VAR 0 10
8049: PUSH
8050: LD_VAR 0 1
8054: PUSH
8055: LD_VAR 0 12
8059: ARRAY
8060: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8061: LD_ADDR_VAR 0 13
8065: PUSH
8066: LD_STRING D
8068: PUSH
8069: LD_VAR 0 3
8073: STR
8074: PUSH
8075: LD_STRING -
8077: STR
8078: PUSH
8079: LD_VAR 0 14
8083: STR
8084: PUSH
8085: LD_VAR 0 15
8089: STR
8090: PUSH
8091: LD_VAR 0 6
8095: STR
8096: PUSH
8097: LD_STRING -
8099: STR
8100: PUSH
8101: LD_VAR 0 7
8105: STR
8106: ST_TO_ADDR
// case type of 0 :
8107: LD_VAR 0 2
8111: PUSH
8112: LD_INT 0
8114: DOUBLE
8115: EQUAL
8116: IFTRUE 8120
8118: GO 8137
8120: POP
// Say ( unit , dialog_id ) ; 1 :
8121: LD_VAR 0 10
8125: PPUSH
8126: LD_VAR 0 13
8130: PPUSH
8131: CALL_OW 88
8135: GO 8188
8137: LD_INT 1
8139: DOUBLE
8140: EQUAL
8141: IFTRUE 8145
8143: GO 8162
8145: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8146: LD_VAR 0 10
8150: PPUSH
8151: LD_VAR 0 13
8155: PPUSH
8156: CALL_OW 94
8160: GO 8188
8162: LD_INT 2
8164: DOUBLE
8165: EQUAL
8166: IFTRUE 8170
8168: GO 8187
8170: POP
// ForceSay ( unit , dialog_id ) ; end ;
8171: LD_VAR 0 10
8175: PPUSH
8176: LD_VAR 0 13
8180: PPUSH
8181: CALL_OW 91
8185: GO 8188
8187: POP
// result := unit ;
8188: LD_ADDR_VAR 0 8
8192: PUSH
8193: LD_VAR 0 10
8197: ST_TO_ADDR
// end ;
8198: LD_VAR 0 8
8202: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8203: LD_INT 0
8205: PPUSH
8206: PPUSH
8207: PPUSH
8208: PPUSH
8209: PPUSH
8210: PPUSH
8211: PPUSH
// result := array ;
8212: LD_ADDR_VAR 0 5
8216: PUSH
8217: LD_VAR 0 1
8221: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8222: LD_VAR 0 1
8226: NOT
8227: PUSH
8228: LD_VAR 0 2
8232: NOT
8233: OR
8234: PUSH
8235: LD_VAR 0 3
8239: NOT
8240: OR
8241: PUSH
8242: LD_VAR 0 2
8246: PUSH
8247: LD_VAR 0 1
8251: GREATER
8252: OR
8253: PUSH
8254: LD_VAR 0 3
8258: PUSH
8259: LD_VAR 0 1
8263: GREATER
8264: OR
8265: IFFALSE 8269
// exit ;
8267: GO 8565
// if direction then
8269: LD_VAR 0 4
8273: IFFALSE 8337
// begin d := 1 ;
8275: LD_ADDR_VAR 0 9
8279: PUSH
8280: LD_INT 1
8282: ST_TO_ADDR
// if i_from > i_to then
8283: LD_VAR 0 2
8287: PUSH
8288: LD_VAR 0 3
8292: GREATER
8293: IFFALSE 8319
// length := ( array - i_from ) + i_to else
8295: LD_ADDR_VAR 0 11
8299: PUSH
8300: LD_VAR 0 1
8304: PUSH
8305: LD_VAR 0 2
8309: MINUS
8310: PUSH
8311: LD_VAR 0 3
8315: PLUS
8316: ST_TO_ADDR
8317: GO 8335
// length := i_to - i_from ;
8319: LD_ADDR_VAR 0 11
8323: PUSH
8324: LD_VAR 0 3
8328: PUSH
8329: LD_VAR 0 2
8333: MINUS
8334: ST_TO_ADDR
// end else
8335: GO 8398
// begin d := - 1 ;
8337: LD_ADDR_VAR 0 9
8341: PUSH
8342: LD_INT 1
8344: NEG
8345: ST_TO_ADDR
// if i_from > i_to then
8346: LD_VAR 0 2
8350: PUSH
8351: LD_VAR 0 3
8355: GREATER
8356: IFFALSE 8376
// length := i_from - i_to else
8358: LD_ADDR_VAR 0 11
8362: PUSH
8363: LD_VAR 0 2
8367: PUSH
8368: LD_VAR 0 3
8372: MINUS
8373: ST_TO_ADDR
8374: GO 8398
// length := ( array - i_to ) + i_from ;
8376: LD_ADDR_VAR 0 11
8380: PUSH
8381: LD_VAR 0 1
8385: PUSH
8386: LD_VAR 0 3
8390: MINUS
8391: PUSH
8392: LD_VAR 0 2
8396: PLUS
8397: ST_TO_ADDR
// end ; if not length then
8398: LD_VAR 0 11
8402: NOT
8403: IFFALSE 8407
// exit ;
8405: GO 8565
// tmp := array ;
8407: LD_ADDR_VAR 0 10
8411: PUSH
8412: LD_VAR 0 1
8416: ST_TO_ADDR
// for i = 1 to length do
8417: LD_ADDR_VAR 0 6
8421: PUSH
8422: DOUBLE
8423: LD_INT 1
8425: DEC
8426: ST_TO_ADDR
8427: LD_VAR 0 11
8431: PUSH
8432: FOR_TO
8433: IFFALSE 8553
// begin for j = 1 to array do
8435: LD_ADDR_VAR 0 7
8439: PUSH
8440: DOUBLE
8441: LD_INT 1
8443: DEC
8444: ST_TO_ADDR
8445: LD_VAR 0 1
8449: PUSH
8450: FOR_TO
8451: IFFALSE 8539
// begin k := j + d ;
8453: LD_ADDR_VAR 0 8
8457: PUSH
8458: LD_VAR 0 7
8462: PUSH
8463: LD_VAR 0 9
8467: PLUS
8468: ST_TO_ADDR
// if k > array then
8469: LD_VAR 0 8
8473: PUSH
8474: LD_VAR 0 1
8478: GREATER
8479: IFFALSE 8489
// k := 1 ;
8481: LD_ADDR_VAR 0 8
8485: PUSH
8486: LD_INT 1
8488: ST_TO_ADDR
// if not k then
8489: LD_VAR 0 8
8493: NOT
8494: IFFALSE 8506
// k := array ;
8496: LD_ADDR_VAR 0 8
8500: PUSH
8501: LD_VAR 0 1
8505: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8506: LD_ADDR_VAR 0 10
8510: PUSH
8511: LD_VAR 0 10
8515: PPUSH
8516: LD_VAR 0 8
8520: PPUSH
8521: LD_VAR 0 1
8525: PUSH
8526: LD_VAR 0 7
8530: ARRAY
8531: PPUSH
8532: CALL_OW 1
8536: ST_TO_ADDR
// end ;
8537: GO 8450
8539: POP
8540: POP
// array := tmp ;
8541: LD_ADDR_VAR 0 1
8545: PUSH
8546: LD_VAR 0 10
8550: ST_TO_ADDR
// end ;
8551: GO 8432
8553: POP
8554: POP
// result := array ;
8555: LD_ADDR_VAR 0 5
8559: PUSH
8560: LD_VAR 0 1
8564: ST_TO_ADDR
// end ;
8565: LD_VAR 0 5
8569: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8570: LD_INT 0
8572: PPUSH
8573: PPUSH
8574: PPUSH
8575: PPUSH
8576: PPUSH
8577: PPUSH
8578: PPUSH
8579: PPUSH
8580: PPUSH
8581: PPUSH
8582: PPUSH
8583: PPUSH
8584: PPUSH
8585: PPUSH
8586: PPUSH
8587: PPUSH
8588: PPUSH
8589: PPUSH
8590: PPUSH
8591: PPUSH
8592: PPUSH
8593: PPUSH
8594: PPUSH
8595: PPUSH
8596: PPUSH
8597: PPUSH
8598: PPUSH
8599: PPUSH
8600: PPUSH
8601: PPUSH
8602: PPUSH
8603: PPUSH
8604: PPUSH
8605: PPUSH
8606: PPUSH
8607: PPUSH
8608: PPUSH
8609: PPUSH
8610: PPUSH
8611: PPUSH
8612: PPUSH
8613: PPUSH
8614: PPUSH
8615: PPUSH
8616: PPUSH
8617: PPUSH
8618: PPUSH
8619: PPUSH
8620: PPUSH
8621: PPUSH
8622: PPUSH
8623: PPUSH
8624: PPUSH
8625: PPUSH
8626: PPUSH
8627: PPUSH
8628: PPUSH
8629: PPUSH
// result = [ ] ;
8630: LD_ADDR_VAR 0 7
8634: PUSH
8635: EMPTY
8636: ST_TO_ADDR
// temp_list = [ ] ;
8637: LD_ADDR_VAR 0 9
8641: PUSH
8642: EMPTY
8643: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8644: LD_VAR 0 4
8648: PUSH
8649: LD_INT 0
8651: PUSH
8652: LD_INT 1
8654: PUSH
8655: LD_INT 2
8657: PUSH
8658: LD_INT 3
8660: PUSH
8661: LD_INT 4
8663: PUSH
8664: LD_INT 5
8666: PUSH
8667: EMPTY
8668: LIST
8669: LIST
8670: LIST
8671: LIST
8672: LIST
8673: LIST
8674: IN
8675: NOT
8676: PUSH
8677: LD_VAR 0 1
8681: PUSH
8682: LD_INT 0
8684: PUSH
8685: LD_INT 1
8687: PUSH
8688: EMPTY
8689: LIST
8690: LIST
8691: IN
8692: PUSH
8693: LD_VAR 0 5
8697: PUSH
8698: LD_INT 1
8700: PUSH
8701: LD_INT 2
8703: PUSH
8704: LD_INT 3
8706: PUSH
8707: EMPTY
8708: LIST
8709: LIST
8710: LIST
8711: IN
8712: NOT
8713: AND
8714: OR
8715: IFFALSE 8719
// exit ;
8717: GO 27104
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8719: LD_VAR 0 1
8723: PUSH
8724: LD_INT 6
8726: PUSH
8727: LD_INT 7
8729: PUSH
8730: LD_INT 8
8732: PUSH
8733: LD_INT 13
8735: PUSH
8736: LD_INT 12
8738: PUSH
8739: LD_INT 15
8741: PUSH
8742: LD_INT 11
8744: PUSH
8745: LD_INT 14
8747: PUSH
8748: LD_INT 10
8750: PUSH
8751: EMPTY
8752: LIST
8753: LIST
8754: LIST
8755: LIST
8756: LIST
8757: LIST
8758: LIST
8759: LIST
8760: LIST
8761: IN
8762: IFFALSE 8772
// btype = b_lab ;
8764: LD_ADDR_VAR 0 1
8768: PUSH
8769: LD_INT 6
8771: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8772: LD_VAR 0 6
8776: PUSH
8777: LD_INT 0
8779: PUSH
8780: LD_INT 1
8782: PUSH
8783: LD_INT 2
8785: PUSH
8786: EMPTY
8787: LIST
8788: LIST
8789: LIST
8790: IN
8791: NOT
8792: PUSH
8793: LD_VAR 0 1
8797: PUSH
8798: LD_INT 0
8800: PUSH
8801: LD_INT 1
8803: PUSH
8804: LD_INT 2
8806: PUSH
8807: LD_INT 3
8809: PUSH
8810: LD_INT 6
8812: PUSH
8813: LD_INT 36
8815: PUSH
8816: LD_INT 4
8818: PUSH
8819: LD_INT 5
8821: PUSH
8822: LD_INT 31
8824: PUSH
8825: LD_INT 32
8827: PUSH
8828: LD_INT 33
8830: PUSH
8831: EMPTY
8832: LIST
8833: LIST
8834: LIST
8835: LIST
8836: LIST
8837: LIST
8838: LIST
8839: LIST
8840: LIST
8841: LIST
8842: LIST
8843: IN
8844: NOT
8845: PUSH
8846: LD_VAR 0 6
8850: PUSH
8851: LD_INT 1
8853: EQUAL
8854: AND
8855: OR
8856: PUSH
8857: LD_VAR 0 1
8861: PUSH
8862: LD_INT 2
8864: PUSH
8865: LD_INT 3
8867: PUSH
8868: EMPTY
8869: LIST
8870: LIST
8871: IN
8872: NOT
8873: PUSH
8874: LD_VAR 0 6
8878: PUSH
8879: LD_INT 2
8881: EQUAL
8882: AND
8883: OR
8884: IFFALSE 8894
// mode = 0 ;
8886: LD_ADDR_VAR 0 6
8890: PUSH
8891: LD_INT 0
8893: ST_TO_ADDR
// case mode of 0 :
8894: LD_VAR 0 6
8898: PUSH
8899: LD_INT 0
8901: DOUBLE
8902: EQUAL
8903: IFTRUE 8907
8905: GO 20360
8907: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8908: LD_ADDR_VAR 0 11
8912: PUSH
8913: LD_INT 0
8915: PUSH
8916: LD_INT 0
8918: PUSH
8919: EMPTY
8920: LIST
8921: LIST
8922: PUSH
8923: LD_INT 0
8925: PUSH
8926: LD_INT 1
8928: NEG
8929: PUSH
8930: EMPTY
8931: LIST
8932: LIST
8933: PUSH
8934: LD_INT 1
8936: PUSH
8937: LD_INT 0
8939: PUSH
8940: EMPTY
8941: LIST
8942: LIST
8943: PUSH
8944: LD_INT 1
8946: PUSH
8947: LD_INT 1
8949: PUSH
8950: EMPTY
8951: LIST
8952: LIST
8953: PUSH
8954: LD_INT 0
8956: PUSH
8957: LD_INT 1
8959: PUSH
8960: EMPTY
8961: LIST
8962: LIST
8963: PUSH
8964: LD_INT 1
8966: NEG
8967: PUSH
8968: LD_INT 0
8970: PUSH
8971: EMPTY
8972: LIST
8973: LIST
8974: PUSH
8975: LD_INT 1
8977: NEG
8978: PUSH
8979: LD_INT 1
8981: NEG
8982: PUSH
8983: EMPTY
8984: LIST
8985: LIST
8986: PUSH
8987: LD_INT 1
8989: NEG
8990: PUSH
8991: LD_INT 2
8993: NEG
8994: PUSH
8995: EMPTY
8996: LIST
8997: LIST
8998: PUSH
8999: LD_INT 0
9001: PUSH
9002: LD_INT 2
9004: NEG
9005: PUSH
9006: EMPTY
9007: LIST
9008: LIST
9009: PUSH
9010: LD_INT 1
9012: PUSH
9013: LD_INT 1
9015: NEG
9016: PUSH
9017: EMPTY
9018: LIST
9019: LIST
9020: PUSH
9021: LD_INT 1
9023: PUSH
9024: LD_INT 2
9026: PUSH
9027: EMPTY
9028: LIST
9029: LIST
9030: PUSH
9031: LD_INT 0
9033: PUSH
9034: LD_INT 2
9036: PUSH
9037: EMPTY
9038: LIST
9039: LIST
9040: PUSH
9041: LD_INT 1
9043: NEG
9044: PUSH
9045: LD_INT 1
9047: PUSH
9048: EMPTY
9049: LIST
9050: LIST
9051: PUSH
9052: LD_INT 1
9054: PUSH
9055: LD_INT 3
9057: PUSH
9058: EMPTY
9059: LIST
9060: LIST
9061: PUSH
9062: LD_INT 0
9064: PUSH
9065: LD_INT 3
9067: PUSH
9068: EMPTY
9069: LIST
9070: LIST
9071: PUSH
9072: LD_INT 1
9074: NEG
9075: PUSH
9076: LD_INT 2
9078: PUSH
9079: EMPTY
9080: LIST
9081: LIST
9082: PUSH
9083: EMPTY
9084: LIST
9085: LIST
9086: LIST
9087: LIST
9088: LIST
9089: LIST
9090: LIST
9091: LIST
9092: LIST
9093: LIST
9094: LIST
9095: LIST
9096: LIST
9097: LIST
9098: LIST
9099: LIST
9100: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9101: LD_ADDR_VAR 0 12
9105: PUSH
9106: LD_INT 0
9108: PUSH
9109: LD_INT 0
9111: PUSH
9112: EMPTY
9113: LIST
9114: LIST
9115: PUSH
9116: LD_INT 0
9118: PUSH
9119: LD_INT 1
9121: NEG
9122: PUSH
9123: EMPTY
9124: LIST
9125: LIST
9126: PUSH
9127: LD_INT 1
9129: PUSH
9130: LD_INT 0
9132: PUSH
9133: EMPTY
9134: LIST
9135: LIST
9136: PUSH
9137: LD_INT 1
9139: PUSH
9140: LD_INT 1
9142: PUSH
9143: EMPTY
9144: LIST
9145: LIST
9146: PUSH
9147: LD_INT 0
9149: PUSH
9150: LD_INT 1
9152: PUSH
9153: EMPTY
9154: LIST
9155: LIST
9156: PUSH
9157: LD_INT 1
9159: NEG
9160: PUSH
9161: LD_INT 0
9163: PUSH
9164: EMPTY
9165: LIST
9166: LIST
9167: PUSH
9168: LD_INT 1
9170: NEG
9171: PUSH
9172: LD_INT 1
9174: NEG
9175: PUSH
9176: EMPTY
9177: LIST
9178: LIST
9179: PUSH
9180: LD_INT 1
9182: PUSH
9183: LD_INT 1
9185: NEG
9186: PUSH
9187: EMPTY
9188: LIST
9189: LIST
9190: PUSH
9191: LD_INT 2
9193: PUSH
9194: LD_INT 0
9196: PUSH
9197: EMPTY
9198: LIST
9199: LIST
9200: PUSH
9201: LD_INT 2
9203: PUSH
9204: LD_INT 1
9206: PUSH
9207: EMPTY
9208: LIST
9209: LIST
9210: PUSH
9211: LD_INT 1
9213: NEG
9214: PUSH
9215: LD_INT 1
9217: PUSH
9218: EMPTY
9219: LIST
9220: LIST
9221: PUSH
9222: LD_INT 2
9224: NEG
9225: PUSH
9226: LD_INT 0
9228: PUSH
9229: EMPTY
9230: LIST
9231: LIST
9232: PUSH
9233: LD_INT 2
9235: NEG
9236: PUSH
9237: LD_INT 1
9239: NEG
9240: PUSH
9241: EMPTY
9242: LIST
9243: LIST
9244: PUSH
9245: LD_INT 2
9247: NEG
9248: PUSH
9249: LD_INT 1
9251: PUSH
9252: EMPTY
9253: LIST
9254: LIST
9255: PUSH
9256: LD_INT 3
9258: NEG
9259: PUSH
9260: LD_INT 0
9262: PUSH
9263: EMPTY
9264: LIST
9265: LIST
9266: PUSH
9267: LD_INT 3
9269: NEG
9270: PUSH
9271: LD_INT 1
9273: NEG
9274: PUSH
9275: EMPTY
9276: LIST
9277: LIST
9278: PUSH
9279: EMPTY
9280: LIST
9281: LIST
9282: LIST
9283: LIST
9284: LIST
9285: LIST
9286: LIST
9287: LIST
9288: LIST
9289: LIST
9290: LIST
9291: LIST
9292: LIST
9293: LIST
9294: LIST
9295: LIST
9296: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9297: LD_ADDR_VAR 0 13
9301: PUSH
9302: LD_INT 0
9304: PUSH
9305: LD_INT 0
9307: PUSH
9308: EMPTY
9309: LIST
9310: LIST
9311: PUSH
9312: LD_INT 0
9314: PUSH
9315: LD_INT 1
9317: NEG
9318: PUSH
9319: EMPTY
9320: LIST
9321: LIST
9322: PUSH
9323: LD_INT 1
9325: PUSH
9326: LD_INT 0
9328: PUSH
9329: EMPTY
9330: LIST
9331: LIST
9332: PUSH
9333: LD_INT 1
9335: PUSH
9336: LD_INT 1
9338: PUSH
9339: EMPTY
9340: LIST
9341: LIST
9342: PUSH
9343: LD_INT 0
9345: PUSH
9346: LD_INT 1
9348: PUSH
9349: EMPTY
9350: LIST
9351: LIST
9352: PUSH
9353: LD_INT 1
9355: NEG
9356: PUSH
9357: LD_INT 0
9359: PUSH
9360: EMPTY
9361: LIST
9362: LIST
9363: PUSH
9364: LD_INT 1
9366: NEG
9367: PUSH
9368: LD_INT 1
9370: NEG
9371: PUSH
9372: EMPTY
9373: LIST
9374: LIST
9375: PUSH
9376: LD_INT 1
9378: NEG
9379: PUSH
9380: LD_INT 2
9382: NEG
9383: PUSH
9384: EMPTY
9385: LIST
9386: LIST
9387: PUSH
9388: LD_INT 2
9390: PUSH
9391: LD_INT 1
9393: PUSH
9394: EMPTY
9395: LIST
9396: LIST
9397: PUSH
9398: LD_INT 2
9400: PUSH
9401: LD_INT 2
9403: PUSH
9404: EMPTY
9405: LIST
9406: LIST
9407: PUSH
9408: LD_INT 1
9410: PUSH
9411: LD_INT 2
9413: PUSH
9414: EMPTY
9415: LIST
9416: LIST
9417: PUSH
9418: LD_INT 2
9420: NEG
9421: PUSH
9422: LD_INT 1
9424: NEG
9425: PUSH
9426: EMPTY
9427: LIST
9428: LIST
9429: PUSH
9430: LD_INT 2
9432: NEG
9433: PUSH
9434: LD_INT 2
9436: NEG
9437: PUSH
9438: EMPTY
9439: LIST
9440: LIST
9441: PUSH
9442: LD_INT 2
9444: NEG
9445: PUSH
9446: LD_INT 3
9448: NEG
9449: PUSH
9450: EMPTY
9451: LIST
9452: LIST
9453: PUSH
9454: LD_INT 3
9456: NEG
9457: PUSH
9458: LD_INT 2
9460: NEG
9461: PUSH
9462: EMPTY
9463: LIST
9464: LIST
9465: PUSH
9466: LD_INT 3
9468: NEG
9469: PUSH
9470: LD_INT 3
9472: NEG
9473: PUSH
9474: EMPTY
9475: LIST
9476: LIST
9477: PUSH
9478: EMPTY
9479: LIST
9480: LIST
9481: LIST
9482: LIST
9483: LIST
9484: LIST
9485: LIST
9486: LIST
9487: LIST
9488: LIST
9489: LIST
9490: LIST
9491: LIST
9492: LIST
9493: LIST
9494: LIST
9495: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9496: LD_ADDR_VAR 0 14
9500: PUSH
9501: LD_INT 0
9503: PUSH
9504: LD_INT 0
9506: PUSH
9507: EMPTY
9508: LIST
9509: LIST
9510: PUSH
9511: LD_INT 0
9513: PUSH
9514: LD_INT 1
9516: NEG
9517: PUSH
9518: EMPTY
9519: LIST
9520: LIST
9521: PUSH
9522: LD_INT 1
9524: PUSH
9525: LD_INT 0
9527: PUSH
9528: EMPTY
9529: LIST
9530: LIST
9531: PUSH
9532: LD_INT 1
9534: PUSH
9535: LD_INT 1
9537: PUSH
9538: EMPTY
9539: LIST
9540: LIST
9541: PUSH
9542: LD_INT 0
9544: PUSH
9545: LD_INT 1
9547: PUSH
9548: EMPTY
9549: LIST
9550: LIST
9551: PUSH
9552: LD_INT 1
9554: NEG
9555: PUSH
9556: LD_INT 0
9558: PUSH
9559: EMPTY
9560: LIST
9561: LIST
9562: PUSH
9563: LD_INT 1
9565: NEG
9566: PUSH
9567: LD_INT 1
9569: NEG
9570: PUSH
9571: EMPTY
9572: LIST
9573: LIST
9574: PUSH
9575: LD_INT 1
9577: NEG
9578: PUSH
9579: LD_INT 2
9581: NEG
9582: PUSH
9583: EMPTY
9584: LIST
9585: LIST
9586: PUSH
9587: LD_INT 0
9589: PUSH
9590: LD_INT 2
9592: NEG
9593: PUSH
9594: EMPTY
9595: LIST
9596: LIST
9597: PUSH
9598: LD_INT 1
9600: PUSH
9601: LD_INT 1
9603: NEG
9604: PUSH
9605: EMPTY
9606: LIST
9607: LIST
9608: PUSH
9609: LD_INT 1
9611: PUSH
9612: LD_INT 2
9614: PUSH
9615: EMPTY
9616: LIST
9617: LIST
9618: PUSH
9619: LD_INT 0
9621: PUSH
9622: LD_INT 2
9624: PUSH
9625: EMPTY
9626: LIST
9627: LIST
9628: PUSH
9629: LD_INT 1
9631: NEG
9632: PUSH
9633: LD_INT 1
9635: PUSH
9636: EMPTY
9637: LIST
9638: LIST
9639: PUSH
9640: LD_INT 1
9642: NEG
9643: PUSH
9644: LD_INT 3
9646: NEG
9647: PUSH
9648: EMPTY
9649: LIST
9650: LIST
9651: PUSH
9652: LD_INT 0
9654: PUSH
9655: LD_INT 3
9657: NEG
9658: PUSH
9659: EMPTY
9660: LIST
9661: LIST
9662: PUSH
9663: LD_INT 1
9665: PUSH
9666: LD_INT 2
9668: NEG
9669: PUSH
9670: EMPTY
9671: LIST
9672: LIST
9673: PUSH
9674: EMPTY
9675: LIST
9676: LIST
9677: LIST
9678: LIST
9679: LIST
9680: LIST
9681: LIST
9682: LIST
9683: LIST
9684: LIST
9685: LIST
9686: LIST
9687: LIST
9688: LIST
9689: LIST
9690: LIST
9691: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9692: LD_ADDR_VAR 0 15
9696: PUSH
9697: LD_INT 0
9699: PUSH
9700: LD_INT 0
9702: PUSH
9703: EMPTY
9704: LIST
9705: LIST
9706: PUSH
9707: LD_INT 0
9709: PUSH
9710: LD_INT 1
9712: NEG
9713: PUSH
9714: EMPTY
9715: LIST
9716: LIST
9717: PUSH
9718: LD_INT 1
9720: PUSH
9721: LD_INT 0
9723: PUSH
9724: EMPTY
9725: LIST
9726: LIST
9727: PUSH
9728: LD_INT 1
9730: PUSH
9731: LD_INT 1
9733: PUSH
9734: EMPTY
9735: LIST
9736: LIST
9737: PUSH
9738: LD_INT 0
9740: PUSH
9741: LD_INT 1
9743: PUSH
9744: EMPTY
9745: LIST
9746: LIST
9747: PUSH
9748: LD_INT 1
9750: NEG
9751: PUSH
9752: LD_INT 0
9754: PUSH
9755: EMPTY
9756: LIST
9757: LIST
9758: PUSH
9759: LD_INT 1
9761: NEG
9762: PUSH
9763: LD_INT 1
9765: NEG
9766: PUSH
9767: EMPTY
9768: LIST
9769: LIST
9770: PUSH
9771: LD_INT 1
9773: PUSH
9774: LD_INT 1
9776: NEG
9777: PUSH
9778: EMPTY
9779: LIST
9780: LIST
9781: PUSH
9782: LD_INT 2
9784: PUSH
9785: LD_INT 0
9787: PUSH
9788: EMPTY
9789: LIST
9790: LIST
9791: PUSH
9792: LD_INT 2
9794: PUSH
9795: LD_INT 1
9797: PUSH
9798: EMPTY
9799: LIST
9800: LIST
9801: PUSH
9802: LD_INT 1
9804: NEG
9805: PUSH
9806: LD_INT 1
9808: PUSH
9809: EMPTY
9810: LIST
9811: LIST
9812: PUSH
9813: LD_INT 2
9815: NEG
9816: PUSH
9817: LD_INT 0
9819: PUSH
9820: EMPTY
9821: LIST
9822: LIST
9823: PUSH
9824: LD_INT 2
9826: NEG
9827: PUSH
9828: LD_INT 1
9830: NEG
9831: PUSH
9832: EMPTY
9833: LIST
9834: LIST
9835: PUSH
9836: LD_INT 2
9838: PUSH
9839: LD_INT 1
9841: NEG
9842: PUSH
9843: EMPTY
9844: LIST
9845: LIST
9846: PUSH
9847: LD_INT 3
9849: PUSH
9850: LD_INT 0
9852: PUSH
9853: EMPTY
9854: LIST
9855: LIST
9856: PUSH
9857: LD_INT 3
9859: PUSH
9860: LD_INT 1
9862: PUSH
9863: EMPTY
9864: LIST
9865: LIST
9866: PUSH
9867: EMPTY
9868: LIST
9869: LIST
9870: LIST
9871: LIST
9872: LIST
9873: LIST
9874: LIST
9875: LIST
9876: LIST
9877: LIST
9878: LIST
9879: LIST
9880: LIST
9881: LIST
9882: LIST
9883: LIST
9884: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9885: LD_ADDR_VAR 0 16
9889: PUSH
9890: LD_INT 0
9892: PUSH
9893: LD_INT 0
9895: PUSH
9896: EMPTY
9897: LIST
9898: LIST
9899: PUSH
9900: LD_INT 0
9902: PUSH
9903: LD_INT 1
9905: NEG
9906: PUSH
9907: EMPTY
9908: LIST
9909: LIST
9910: PUSH
9911: LD_INT 1
9913: PUSH
9914: LD_INT 0
9916: PUSH
9917: EMPTY
9918: LIST
9919: LIST
9920: PUSH
9921: LD_INT 1
9923: PUSH
9924: LD_INT 1
9926: PUSH
9927: EMPTY
9928: LIST
9929: LIST
9930: PUSH
9931: LD_INT 0
9933: PUSH
9934: LD_INT 1
9936: PUSH
9937: EMPTY
9938: LIST
9939: LIST
9940: PUSH
9941: LD_INT 1
9943: NEG
9944: PUSH
9945: LD_INT 0
9947: PUSH
9948: EMPTY
9949: LIST
9950: LIST
9951: PUSH
9952: LD_INT 1
9954: NEG
9955: PUSH
9956: LD_INT 1
9958: NEG
9959: PUSH
9960: EMPTY
9961: LIST
9962: LIST
9963: PUSH
9964: LD_INT 1
9966: NEG
9967: PUSH
9968: LD_INT 2
9970: NEG
9971: PUSH
9972: EMPTY
9973: LIST
9974: LIST
9975: PUSH
9976: LD_INT 2
9978: PUSH
9979: LD_INT 1
9981: PUSH
9982: EMPTY
9983: LIST
9984: LIST
9985: PUSH
9986: LD_INT 2
9988: PUSH
9989: LD_INT 2
9991: PUSH
9992: EMPTY
9993: LIST
9994: LIST
9995: PUSH
9996: LD_INT 1
9998: PUSH
9999: LD_INT 2
10001: PUSH
10002: EMPTY
10003: LIST
10004: LIST
10005: PUSH
10006: LD_INT 2
10008: NEG
10009: PUSH
10010: LD_INT 1
10012: NEG
10013: PUSH
10014: EMPTY
10015: LIST
10016: LIST
10017: PUSH
10018: LD_INT 2
10020: NEG
10021: PUSH
10022: LD_INT 2
10024: NEG
10025: PUSH
10026: EMPTY
10027: LIST
10028: LIST
10029: PUSH
10030: LD_INT 3
10032: PUSH
10033: LD_INT 2
10035: PUSH
10036: EMPTY
10037: LIST
10038: LIST
10039: PUSH
10040: LD_INT 3
10042: PUSH
10043: LD_INT 3
10045: PUSH
10046: EMPTY
10047: LIST
10048: LIST
10049: PUSH
10050: LD_INT 2
10052: PUSH
10053: LD_INT 3
10055: PUSH
10056: EMPTY
10057: LIST
10058: LIST
10059: PUSH
10060: EMPTY
10061: LIST
10062: LIST
10063: LIST
10064: LIST
10065: LIST
10066: LIST
10067: LIST
10068: LIST
10069: LIST
10070: LIST
10071: LIST
10072: LIST
10073: LIST
10074: LIST
10075: LIST
10076: LIST
10077: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10078: LD_ADDR_VAR 0 17
10082: PUSH
10083: LD_INT 0
10085: PUSH
10086: LD_INT 0
10088: PUSH
10089: EMPTY
10090: LIST
10091: LIST
10092: PUSH
10093: LD_INT 0
10095: PUSH
10096: LD_INT 1
10098: NEG
10099: PUSH
10100: EMPTY
10101: LIST
10102: LIST
10103: PUSH
10104: LD_INT 1
10106: PUSH
10107: LD_INT 0
10109: PUSH
10110: EMPTY
10111: LIST
10112: LIST
10113: PUSH
10114: LD_INT 1
10116: PUSH
10117: LD_INT 1
10119: PUSH
10120: EMPTY
10121: LIST
10122: LIST
10123: PUSH
10124: LD_INT 0
10126: PUSH
10127: LD_INT 1
10129: PUSH
10130: EMPTY
10131: LIST
10132: LIST
10133: PUSH
10134: LD_INT 1
10136: NEG
10137: PUSH
10138: LD_INT 0
10140: PUSH
10141: EMPTY
10142: LIST
10143: LIST
10144: PUSH
10145: LD_INT 1
10147: NEG
10148: PUSH
10149: LD_INT 1
10151: NEG
10152: PUSH
10153: EMPTY
10154: LIST
10155: LIST
10156: PUSH
10157: LD_INT 1
10159: NEG
10160: PUSH
10161: LD_INT 2
10163: NEG
10164: PUSH
10165: EMPTY
10166: LIST
10167: LIST
10168: PUSH
10169: LD_INT 0
10171: PUSH
10172: LD_INT 2
10174: NEG
10175: PUSH
10176: EMPTY
10177: LIST
10178: LIST
10179: PUSH
10180: LD_INT 1
10182: PUSH
10183: LD_INT 1
10185: NEG
10186: PUSH
10187: EMPTY
10188: LIST
10189: LIST
10190: PUSH
10191: LD_INT 2
10193: PUSH
10194: LD_INT 0
10196: PUSH
10197: EMPTY
10198: LIST
10199: LIST
10200: PUSH
10201: LD_INT 2
10203: PUSH
10204: LD_INT 1
10206: PUSH
10207: EMPTY
10208: LIST
10209: LIST
10210: PUSH
10211: LD_INT 2
10213: PUSH
10214: LD_INT 2
10216: PUSH
10217: EMPTY
10218: LIST
10219: LIST
10220: PUSH
10221: LD_INT 1
10223: PUSH
10224: LD_INT 2
10226: PUSH
10227: EMPTY
10228: LIST
10229: LIST
10230: PUSH
10231: LD_INT 0
10233: PUSH
10234: LD_INT 2
10236: PUSH
10237: EMPTY
10238: LIST
10239: LIST
10240: PUSH
10241: LD_INT 1
10243: NEG
10244: PUSH
10245: LD_INT 1
10247: PUSH
10248: EMPTY
10249: LIST
10250: LIST
10251: PUSH
10252: LD_INT 2
10254: NEG
10255: PUSH
10256: LD_INT 0
10258: PUSH
10259: EMPTY
10260: LIST
10261: LIST
10262: PUSH
10263: LD_INT 2
10265: NEG
10266: PUSH
10267: LD_INT 1
10269: NEG
10270: PUSH
10271: EMPTY
10272: LIST
10273: LIST
10274: PUSH
10275: LD_INT 2
10277: NEG
10278: PUSH
10279: LD_INT 2
10281: NEG
10282: PUSH
10283: EMPTY
10284: LIST
10285: LIST
10286: PUSH
10287: EMPTY
10288: LIST
10289: LIST
10290: LIST
10291: LIST
10292: LIST
10293: LIST
10294: LIST
10295: LIST
10296: LIST
10297: LIST
10298: LIST
10299: LIST
10300: LIST
10301: LIST
10302: LIST
10303: LIST
10304: LIST
10305: LIST
10306: LIST
10307: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10308: LD_ADDR_VAR 0 18
10312: PUSH
10313: LD_INT 0
10315: PUSH
10316: LD_INT 0
10318: PUSH
10319: EMPTY
10320: LIST
10321: LIST
10322: PUSH
10323: LD_INT 0
10325: PUSH
10326: LD_INT 1
10328: NEG
10329: PUSH
10330: EMPTY
10331: LIST
10332: LIST
10333: PUSH
10334: LD_INT 1
10336: PUSH
10337: LD_INT 0
10339: PUSH
10340: EMPTY
10341: LIST
10342: LIST
10343: PUSH
10344: LD_INT 1
10346: PUSH
10347: LD_INT 1
10349: PUSH
10350: EMPTY
10351: LIST
10352: LIST
10353: PUSH
10354: LD_INT 0
10356: PUSH
10357: LD_INT 1
10359: PUSH
10360: EMPTY
10361: LIST
10362: LIST
10363: PUSH
10364: LD_INT 1
10366: NEG
10367: PUSH
10368: LD_INT 0
10370: PUSH
10371: EMPTY
10372: LIST
10373: LIST
10374: PUSH
10375: LD_INT 1
10377: NEG
10378: PUSH
10379: LD_INT 1
10381: NEG
10382: PUSH
10383: EMPTY
10384: LIST
10385: LIST
10386: PUSH
10387: LD_INT 1
10389: NEG
10390: PUSH
10391: LD_INT 2
10393: NEG
10394: PUSH
10395: EMPTY
10396: LIST
10397: LIST
10398: PUSH
10399: LD_INT 0
10401: PUSH
10402: LD_INT 2
10404: NEG
10405: PUSH
10406: EMPTY
10407: LIST
10408: LIST
10409: PUSH
10410: LD_INT 1
10412: PUSH
10413: LD_INT 1
10415: NEG
10416: PUSH
10417: EMPTY
10418: LIST
10419: LIST
10420: PUSH
10421: LD_INT 2
10423: PUSH
10424: LD_INT 0
10426: PUSH
10427: EMPTY
10428: LIST
10429: LIST
10430: PUSH
10431: LD_INT 2
10433: PUSH
10434: LD_INT 1
10436: PUSH
10437: EMPTY
10438: LIST
10439: LIST
10440: PUSH
10441: LD_INT 2
10443: PUSH
10444: LD_INT 2
10446: PUSH
10447: EMPTY
10448: LIST
10449: LIST
10450: PUSH
10451: LD_INT 1
10453: PUSH
10454: LD_INT 2
10456: PUSH
10457: EMPTY
10458: LIST
10459: LIST
10460: PUSH
10461: LD_INT 0
10463: PUSH
10464: LD_INT 2
10466: PUSH
10467: EMPTY
10468: LIST
10469: LIST
10470: PUSH
10471: LD_INT 1
10473: NEG
10474: PUSH
10475: LD_INT 1
10477: PUSH
10478: EMPTY
10479: LIST
10480: LIST
10481: PUSH
10482: LD_INT 2
10484: NEG
10485: PUSH
10486: LD_INT 0
10488: PUSH
10489: EMPTY
10490: LIST
10491: LIST
10492: PUSH
10493: LD_INT 2
10495: NEG
10496: PUSH
10497: LD_INT 1
10499: NEG
10500: PUSH
10501: EMPTY
10502: LIST
10503: LIST
10504: PUSH
10505: LD_INT 2
10507: NEG
10508: PUSH
10509: LD_INT 2
10511: NEG
10512: PUSH
10513: EMPTY
10514: LIST
10515: LIST
10516: PUSH
10517: EMPTY
10518: LIST
10519: LIST
10520: LIST
10521: LIST
10522: LIST
10523: LIST
10524: LIST
10525: LIST
10526: LIST
10527: LIST
10528: LIST
10529: LIST
10530: LIST
10531: LIST
10532: LIST
10533: LIST
10534: LIST
10535: LIST
10536: LIST
10537: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10538: LD_ADDR_VAR 0 19
10542: PUSH
10543: LD_INT 0
10545: PUSH
10546: LD_INT 0
10548: PUSH
10549: EMPTY
10550: LIST
10551: LIST
10552: PUSH
10553: LD_INT 0
10555: PUSH
10556: LD_INT 1
10558: NEG
10559: PUSH
10560: EMPTY
10561: LIST
10562: LIST
10563: PUSH
10564: LD_INT 1
10566: PUSH
10567: LD_INT 0
10569: PUSH
10570: EMPTY
10571: LIST
10572: LIST
10573: PUSH
10574: LD_INT 1
10576: PUSH
10577: LD_INT 1
10579: PUSH
10580: EMPTY
10581: LIST
10582: LIST
10583: PUSH
10584: LD_INT 0
10586: PUSH
10587: LD_INT 1
10589: PUSH
10590: EMPTY
10591: LIST
10592: LIST
10593: PUSH
10594: LD_INT 1
10596: NEG
10597: PUSH
10598: LD_INT 0
10600: PUSH
10601: EMPTY
10602: LIST
10603: LIST
10604: PUSH
10605: LD_INT 1
10607: NEG
10608: PUSH
10609: LD_INT 1
10611: NEG
10612: PUSH
10613: EMPTY
10614: LIST
10615: LIST
10616: PUSH
10617: LD_INT 1
10619: NEG
10620: PUSH
10621: LD_INT 2
10623: NEG
10624: PUSH
10625: EMPTY
10626: LIST
10627: LIST
10628: PUSH
10629: LD_INT 0
10631: PUSH
10632: LD_INT 2
10634: NEG
10635: PUSH
10636: EMPTY
10637: LIST
10638: LIST
10639: PUSH
10640: LD_INT 1
10642: PUSH
10643: LD_INT 1
10645: NEG
10646: PUSH
10647: EMPTY
10648: LIST
10649: LIST
10650: PUSH
10651: LD_INT 2
10653: PUSH
10654: LD_INT 0
10656: PUSH
10657: EMPTY
10658: LIST
10659: LIST
10660: PUSH
10661: LD_INT 2
10663: PUSH
10664: LD_INT 1
10666: PUSH
10667: EMPTY
10668: LIST
10669: LIST
10670: PUSH
10671: LD_INT 2
10673: PUSH
10674: LD_INT 2
10676: PUSH
10677: EMPTY
10678: LIST
10679: LIST
10680: PUSH
10681: LD_INT 1
10683: PUSH
10684: LD_INT 2
10686: PUSH
10687: EMPTY
10688: LIST
10689: LIST
10690: PUSH
10691: LD_INT 0
10693: PUSH
10694: LD_INT 2
10696: PUSH
10697: EMPTY
10698: LIST
10699: LIST
10700: PUSH
10701: LD_INT 1
10703: NEG
10704: PUSH
10705: LD_INT 1
10707: PUSH
10708: EMPTY
10709: LIST
10710: LIST
10711: PUSH
10712: LD_INT 2
10714: NEG
10715: PUSH
10716: LD_INT 0
10718: PUSH
10719: EMPTY
10720: LIST
10721: LIST
10722: PUSH
10723: LD_INT 2
10725: NEG
10726: PUSH
10727: LD_INT 1
10729: NEG
10730: PUSH
10731: EMPTY
10732: LIST
10733: LIST
10734: PUSH
10735: LD_INT 2
10737: NEG
10738: PUSH
10739: LD_INT 2
10741: NEG
10742: PUSH
10743: EMPTY
10744: LIST
10745: LIST
10746: PUSH
10747: EMPTY
10748: LIST
10749: LIST
10750: LIST
10751: LIST
10752: LIST
10753: LIST
10754: LIST
10755: LIST
10756: LIST
10757: LIST
10758: LIST
10759: LIST
10760: LIST
10761: LIST
10762: LIST
10763: LIST
10764: LIST
10765: LIST
10766: LIST
10767: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10768: LD_ADDR_VAR 0 20
10772: PUSH
10773: LD_INT 0
10775: PUSH
10776: LD_INT 0
10778: PUSH
10779: EMPTY
10780: LIST
10781: LIST
10782: PUSH
10783: LD_INT 0
10785: PUSH
10786: LD_INT 1
10788: NEG
10789: PUSH
10790: EMPTY
10791: LIST
10792: LIST
10793: PUSH
10794: LD_INT 1
10796: PUSH
10797: LD_INT 0
10799: PUSH
10800: EMPTY
10801: LIST
10802: LIST
10803: PUSH
10804: LD_INT 1
10806: PUSH
10807: LD_INT 1
10809: PUSH
10810: EMPTY
10811: LIST
10812: LIST
10813: PUSH
10814: LD_INT 0
10816: PUSH
10817: LD_INT 1
10819: PUSH
10820: EMPTY
10821: LIST
10822: LIST
10823: PUSH
10824: LD_INT 1
10826: NEG
10827: PUSH
10828: LD_INT 0
10830: PUSH
10831: EMPTY
10832: LIST
10833: LIST
10834: PUSH
10835: LD_INT 1
10837: NEG
10838: PUSH
10839: LD_INT 1
10841: NEG
10842: PUSH
10843: EMPTY
10844: LIST
10845: LIST
10846: PUSH
10847: LD_INT 1
10849: NEG
10850: PUSH
10851: LD_INT 2
10853: NEG
10854: PUSH
10855: EMPTY
10856: LIST
10857: LIST
10858: PUSH
10859: LD_INT 0
10861: PUSH
10862: LD_INT 2
10864: NEG
10865: PUSH
10866: EMPTY
10867: LIST
10868: LIST
10869: PUSH
10870: LD_INT 1
10872: PUSH
10873: LD_INT 1
10875: NEG
10876: PUSH
10877: EMPTY
10878: LIST
10879: LIST
10880: PUSH
10881: LD_INT 2
10883: PUSH
10884: LD_INT 0
10886: PUSH
10887: EMPTY
10888: LIST
10889: LIST
10890: PUSH
10891: LD_INT 2
10893: PUSH
10894: LD_INT 1
10896: PUSH
10897: EMPTY
10898: LIST
10899: LIST
10900: PUSH
10901: LD_INT 2
10903: PUSH
10904: LD_INT 2
10906: PUSH
10907: EMPTY
10908: LIST
10909: LIST
10910: PUSH
10911: LD_INT 1
10913: PUSH
10914: LD_INT 2
10916: PUSH
10917: EMPTY
10918: LIST
10919: LIST
10920: PUSH
10921: LD_INT 0
10923: PUSH
10924: LD_INT 2
10926: PUSH
10927: EMPTY
10928: LIST
10929: LIST
10930: PUSH
10931: LD_INT 1
10933: NEG
10934: PUSH
10935: LD_INT 1
10937: PUSH
10938: EMPTY
10939: LIST
10940: LIST
10941: PUSH
10942: LD_INT 2
10944: NEG
10945: PUSH
10946: LD_INT 0
10948: PUSH
10949: EMPTY
10950: LIST
10951: LIST
10952: PUSH
10953: LD_INT 2
10955: NEG
10956: PUSH
10957: LD_INT 1
10959: NEG
10960: PUSH
10961: EMPTY
10962: LIST
10963: LIST
10964: PUSH
10965: LD_INT 2
10967: NEG
10968: PUSH
10969: LD_INT 2
10971: NEG
10972: PUSH
10973: EMPTY
10974: LIST
10975: LIST
10976: PUSH
10977: EMPTY
10978: LIST
10979: LIST
10980: LIST
10981: LIST
10982: LIST
10983: LIST
10984: LIST
10985: LIST
10986: LIST
10987: LIST
10988: LIST
10989: LIST
10990: LIST
10991: LIST
10992: LIST
10993: LIST
10994: LIST
10995: LIST
10996: LIST
10997: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10998: LD_ADDR_VAR 0 21
11002: PUSH
11003: LD_INT 0
11005: PUSH
11006: LD_INT 0
11008: PUSH
11009: EMPTY
11010: LIST
11011: LIST
11012: PUSH
11013: LD_INT 0
11015: PUSH
11016: LD_INT 1
11018: NEG
11019: PUSH
11020: EMPTY
11021: LIST
11022: LIST
11023: PUSH
11024: LD_INT 1
11026: PUSH
11027: LD_INT 0
11029: PUSH
11030: EMPTY
11031: LIST
11032: LIST
11033: PUSH
11034: LD_INT 1
11036: PUSH
11037: LD_INT 1
11039: PUSH
11040: EMPTY
11041: LIST
11042: LIST
11043: PUSH
11044: LD_INT 0
11046: PUSH
11047: LD_INT 1
11049: PUSH
11050: EMPTY
11051: LIST
11052: LIST
11053: PUSH
11054: LD_INT 1
11056: NEG
11057: PUSH
11058: LD_INT 0
11060: PUSH
11061: EMPTY
11062: LIST
11063: LIST
11064: PUSH
11065: LD_INT 1
11067: NEG
11068: PUSH
11069: LD_INT 1
11071: NEG
11072: PUSH
11073: EMPTY
11074: LIST
11075: LIST
11076: PUSH
11077: LD_INT 1
11079: NEG
11080: PUSH
11081: LD_INT 2
11083: NEG
11084: PUSH
11085: EMPTY
11086: LIST
11087: LIST
11088: PUSH
11089: LD_INT 0
11091: PUSH
11092: LD_INT 2
11094: NEG
11095: PUSH
11096: EMPTY
11097: LIST
11098: LIST
11099: PUSH
11100: LD_INT 1
11102: PUSH
11103: LD_INT 1
11105: NEG
11106: PUSH
11107: EMPTY
11108: LIST
11109: LIST
11110: PUSH
11111: LD_INT 2
11113: PUSH
11114: LD_INT 0
11116: PUSH
11117: EMPTY
11118: LIST
11119: LIST
11120: PUSH
11121: LD_INT 2
11123: PUSH
11124: LD_INT 1
11126: PUSH
11127: EMPTY
11128: LIST
11129: LIST
11130: PUSH
11131: LD_INT 2
11133: PUSH
11134: LD_INT 2
11136: PUSH
11137: EMPTY
11138: LIST
11139: LIST
11140: PUSH
11141: LD_INT 1
11143: PUSH
11144: LD_INT 2
11146: PUSH
11147: EMPTY
11148: LIST
11149: LIST
11150: PUSH
11151: LD_INT 0
11153: PUSH
11154: LD_INT 2
11156: PUSH
11157: EMPTY
11158: LIST
11159: LIST
11160: PUSH
11161: LD_INT 1
11163: NEG
11164: PUSH
11165: LD_INT 1
11167: PUSH
11168: EMPTY
11169: LIST
11170: LIST
11171: PUSH
11172: LD_INT 2
11174: NEG
11175: PUSH
11176: LD_INT 0
11178: PUSH
11179: EMPTY
11180: LIST
11181: LIST
11182: PUSH
11183: LD_INT 2
11185: NEG
11186: PUSH
11187: LD_INT 1
11189: NEG
11190: PUSH
11191: EMPTY
11192: LIST
11193: LIST
11194: PUSH
11195: LD_INT 2
11197: NEG
11198: PUSH
11199: LD_INT 2
11201: NEG
11202: PUSH
11203: EMPTY
11204: LIST
11205: LIST
11206: PUSH
11207: EMPTY
11208: LIST
11209: LIST
11210: LIST
11211: LIST
11212: LIST
11213: LIST
11214: LIST
11215: LIST
11216: LIST
11217: LIST
11218: LIST
11219: LIST
11220: LIST
11221: LIST
11222: LIST
11223: LIST
11224: LIST
11225: LIST
11226: LIST
11227: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11228: LD_ADDR_VAR 0 22
11232: PUSH
11233: LD_INT 0
11235: PUSH
11236: LD_INT 0
11238: PUSH
11239: EMPTY
11240: LIST
11241: LIST
11242: PUSH
11243: LD_INT 0
11245: PUSH
11246: LD_INT 1
11248: NEG
11249: PUSH
11250: EMPTY
11251: LIST
11252: LIST
11253: PUSH
11254: LD_INT 1
11256: PUSH
11257: LD_INT 0
11259: PUSH
11260: EMPTY
11261: LIST
11262: LIST
11263: PUSH
11264: LD_INT 1
11266: PUSH
11267: LD_INT 1
11269: PUSH
11270: EMPTY
11271: LIST
11272: LIST
11273: PUSH
11274: LD_INT 0
11276: PUSH
11277: LD_INT 1
11279: PUSH
11280: EMPTY
11281: LIST
11282: LIST
11283: PUSH
11284: LD_INT 1
11286: NEG
11287: PUSH
11288: LD_INT 0
11290: PUSH
11291: EMPTY
11292: LIST
11293: LIST
11294: PUSH
11295: LD_INT 1
11297: NEG
11298: PUSH
11299: LD_INT 1
11301: NEG
11302: PUSH
11303: EMPTY
11304: LIST
11305: LIST
11306: PUSH
11307: LD_INT 1
11309: NEG
11310: PUSH
11311: LD_INT 2
11313: NEG
11314: PUSH
11315: EMPTY
11316: LIST
11317: LIST
11318: PUSH
11319: LD_INT 0
11321: PUSH
11322: LD_INT 2
11324: NEG
11325: PUSH
11326: EMPTY
11327: LIST
11328: LIST
11329: PUSH
11330: LD_INT 1
11332: PUSH
11333: LD_INT 1
11335: NEG
11336: PUSH
11337: EMPTY
11338: LIST
11339: LIST
11340: PUSH
11341: LD_INT 2
11343: PUSH
11344: LD_INT 0
11346: PUSH
11347: EMPTY
11348: LIST
11349: LIST
11350: PUSH
11351: LD_INT 2
11353: PUSH
11354: LD_INT 1
11356: PUSH
11357: EMPTY
11358: LIST
11359: LIST
11360: PUSH
11361: LD_INT 2
11363: PUSH
11364: LD_INT 2
11366: PUSH
11367: EMPTY
11368: LIST
11369: LIST
11370: PUSH
11371: LD_INT 1
11373: PUSH
11374: LD_INT 2
11376: PUSH
11377: EMPTY
11378: LIST
11379: LIST
11380: PUSH
11381: LD_INT 0
11383: PUSH
11384: LD_INT 2
11386: PUSH
11387: EMPTY
11388: LIST
11389: LIST
11390: PUSH
11391: LD_INT 1
11393: NEG
11394: PUSH
11395: LD_INT 1
11397: PUSH
11398: EMPTY
11399: LIST
11400: LIST
11401: PUSH
11402: LD_INT 2
11404: NEG
11405: PUSH
11406: LD_INT 0
11408: PUSH
11409: EMPTY
11410: LIST
11411: LIST
11412: PUSH
11413: LD_INT 2
11415: NEG
11416: PUSH
11417: LD_INT 1
11419: NEG
11420: PUSH
11421: EMPTY
11422: LIST
11423: LIST
11424: PUSH
11425: LD_INT 2
11427: NEG
11428: PUSH
11429: LD_INT 2
11431: NEG
11432: PUSH
11433: EMPTY
11434: LIST
11435: LIST
11436: PUSH
11437: EMPTY
11438: LIST
11439: LIST
11440: LIST
11441: LIST
11442: LIST
11443: LIST
11444: LIST
11445: LIST
11446: LIST
11447: LIST
11448: LIST
11449: LIST
11450: LIST
11451: LIST
11452: LIST
11453: LIST
11454: LIST
11455: LIST
11456: LIST
11457: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11458: LD_ADDR_VAR 0 23
11462: PUSH
11463: LD_INT 0
11465: PUSH
11466: LD_INT 0
11468: PUSH
11469: EMPTY
11470: LIST
11471: LIST
11472: PUSH
11473: LD_INT 0
11475: PUSH
11476: LD_INT 1
11478: NEG
11479: PUSH
11480: EMPTY
11481: LIST
11482: LIST
11483: PUSH
11484: LD_INT 1
11486: PUSH
11487: LD_INT 0
11489: PUSH
11490: EMPTY
11491: LIST
11492: LIST
11493: PUSH
11494: LD_INT 1
11496: PUSH
11497: LD_INT 1
11499: PUSH
11500: EMPTY
11501: LIST
11502: LIST
11503: PUSH
11504: LD_INT 0
11506: PUSH
11507: LD_INT 1
11509: PUSH
11510: EMPTY
11511: LIST
11512: LIST
11513: PUSH
11514: LD_INT 1
11516: NEG
11517: PUSH
11518: LD_INT 0
11520: PUSH
11521: EMPTY
11522: LIST
11523: LIST
11524: PUSH
11525: LD_INT 1
11527: NEG
11528: PUSH
11529: LD_INT 1
11531: NEG
11532: PUSH
11533: EMPTY
11534: LIST
11535: LIST
11536: PUSH
11537: LD_INT 1
11539: NEG
11540: PUSH
11541: LD_INT 2
11543: NEG
11544: PUSH
11545: EMPTY
11546: LIST
11547: LIST
11548: PUSH
11549: LD_INT 0
11551: PUSH
11552: LD_INT 2
11554: NEG
11555: PUSH
11556: EMPTY
11557: LIST
11558: LIST
11559: PUSH
11560: LD_INT 1
11562: PUSH
11563: LD_INT 1
11565: NEG
11566: PUSH
11567: EMPTY
11568: LIST
11569: LIST
11570: PUSH
11571: LD_INT 2
11573: PUSH
11574: LD_INT 0
11576: PUSH
11577: EMPTY
11578: LIST
11579: LIST
11580: PUSH
11581: LD_INT 2
11583: PUSH
11584: LD_INT 1
11586: PUSH
11587: EMPTY
11588: LIST
11589: LIST
11590: PUSH
11591: LD_INT 2
11593: PUSH
11594: LD_INT 2
11596: PUSH
11597: EMPTY
11598: LIST
11599: LIST
11600: PUSH
11601: LD_INT 1
11603: PUSH
11604: LD_INT 2
11606: PUSH
11607: EMPTY
11608: LIST
11609: LIST
11610: PUSH
11611: LD_INT 0
11613: PUSH
11614: LD_INT 2
11616: PUSH
11617: EMPTY
11618: LIST
11619: LIST
11620: PUSH
11621: LD_INT 1
11623: NEG
11624: PUSH
11625: LD_INT 1
11627: PUSH
11628: EMPTY
11629: LIST
11630: LIST
11631: PUSH
11632: LD_INT 2
11634: NEG
11635: PUSH
11636: LD_INT 0
11638: PUSH
11639: EMPTY
11640: LIST
11641: LIST
11642: PUSH
11643: LD_INT 2
11645: NEG
11646: PUSH
11647: LD_INT 1
11649: NEG
11650: PUSH
11651: EMPTY
11652: LIST
11653: LIST
11654: PUSH
11655: LD_INT 2
11657: NEG
11658: PUSH
11659: LD_INT 2
11661: NEG
11662: PUSH
11663: EMPTY
11664: LIST
11665: LIST
11666: PUSH
11667: LD_INT 2
11669: NEG
11670: PUSH
11671: LD_INT 3
11673: NEG
11674: PUSH
11675: EMPTY
11676: LIST
11677: LIST
11678: PUSH
11679: LD_INT 1
11681: NEG
11682: PUSH
11683: LD_INT 3
11685: NEG
11686: PUSH
11687: EMPTY
11688: LIST
11689: LIST
11690: PUSH
11691: LD_INT 1
11693: PUSH
11694: LD_INT 2
11696: NEG
11697: PUSH
11698: EMPTY
11699: LIST
11700: LIST
11701: PUSH
11702: LD_INT 2
11704: PUSH
11705: LD_INT 1
11707: NEG
11708: PUSH
11709: EMPTY
11710: LIST
11711: LIST
11712: PUSH
11713: EMPTY
11714: LIST
11715: LIST
11716: LIST
11717: LIST
11718: LIST
11719: LIST
11720: LIST
11721: LIST
11722: LIST
11723: LIST
11724: LIST
11725: LIST
11726: LIST
11727: LIST
11728: LIST
11729: LIST
11730: LIST
11731: LIST
11732: LIST
11733: LIST
11734: LIST
11735: LIST
11736: LIST
11737: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11738: LD_ADDR_VAR 0 24
11742: PUSH
11743: LD_INT 0
11745: PUSH
11746: LD_INT 0
11748: PUSH
11749: EMPTY
11750: LIST
11751: LIST
11752: PUSH
11753: LD_INT 0
11755: PUSH
11756: LD_INT 1
11758: NEG
11759: PUSH
11760: EMPTY
11761: LIST
11762: LIST
11763: PUSH
11764: LD_INT 1
11766: PUSH
11767: LD_INT 0
11769: PUSH
11770: EMPTY
11771: LIST
11772: LIST
11773: PUSH
11774: LD_INT 1
11776: PUSH
11777: LD_INT 1
11779: PUSH
11780: EMPTY
11781: LIST
11782: LIST
11783: PUSH
11784: LD_INT 0
11786: PUSH
11787: LD_INT 1
11789: PUSH
11790: EMPTY
11791: LIST
11792: LIST
11793: PUSH
11794: LD_INT 1
11796: NEG
11797: PUSH
11798: LD_INT 0
11800: PUSH
11801: EMPTY
11802: LIST
11803: LIST
11804: PUSH
11805: LD_INT 1
11807: NEG
11808: PUSH
11809: LD_INT 1
11811: NEG
11812: PUSH
11813: EMPTY
11814: LIST
11815: LIST
11816: PUSH
11817: LD_INT 1
11819: NEG
11820: PUSH
11821: LD_INT 2
11823: NEG
11824: PUSH
11825: EMPTY
11826: LIST
11827: LIST
11828: PUSH
11829: LD_INT 0
11831: PUSH
11832: LD_INT 2
11834: NEG
11835: PUSH
11836: EMPTY
11837: LIST
11838: LIST
11839: PUSH
11840: LD_INT 1
11842: PUSH
11843: LD_INT 1
11845: NEG
11846: PUSH
11847: EMPTY
11848: LIST
11849: LIST
11850: PUSH
11851: LD_INT 2
11853: PUSH
11854: LD_INT 0
11856: PUSH
11857: EMPTY
11858: LIST
11859: LIST
11860: PUSH
11861: LD_INT 2
11863: PUSH
11864: LD_INT 1
11866: PUSH
11867: EMPTY
11868: LIST
11869: LIST
11870: PUSH
11871: LD_INT 2
11873: PUSH
11874: LD_INT 2
11876: PUSH
11877: EMPTY
11878: LIST
11879: LIST
11880: PUSH
11881: LD_INT 1
11883: PUSH
11884: LD_INT 2
11886: PUSH
11887: EMPTY
11888: LIST
11889: LIST
11890: PUSH
11891: LD_INT 0
11893: PUSH
11894: LD_INT 2
11896: PUSH
11897: EMPTY
11898: LIST
11899: LIST
11900: PUSH
11901: LD_INT 1
11903: NEG
11904: PUSH
11905: LD_INT 1
11907: PUSH
11908: EMPTY
11909: LIST
11910: LIST
11911: PUSH
11912: LD_INT 2
11914: NEG
11915: PUSH
11916: LD_INT 0
11918: PUSH
11919: EMPTY
11920: LIST
11921: LIST
11922: PUSH
11923: LD_INT 2
11925: NEG
11926: PUSH
11927: LD_INT 1
11929: NEG
11930: PUSH
11931: EMPTY
11932: LIST
11933: LIST
11934: PUSH
11935: LD_INT 2
11937: NEG
11938: PUSH
11939: LD_INT 2
11941: NEG
11942: PUSH
11943: EMPTY
11944: LIST
11945: LIST
11946: PUSH
11947: LD_INT 1
11949: PUSH
11950: LD_INT 2
11952: NEG
11953: PUSH
11954: EMPTY
11955: LIST
11956: LIST
11957: PUSH
11958: LD_INT 2
11960: PUSH
11961: LD_INT 1
11963: NEG
11964: PUSH
11965: EMPTY
11966: LIST
11967: LIST
11968: PUSH
11969: LD_INT 3
11971: PUSH
11972: LD_INT 1
11974: PUSH
11975: EMPTY
11976: LIST
11977: LIST
11978: PUSH
11979: LD_INT 3
11981: PUSH
11982: LD_INT 2
11984: PUSH
11985: EMPTY
11986: LIST
11987: LIST
11988: PUSH
11989: EMPTY
11990: LIST
11991: LIST
11992: LIST
11993: LIST
11994: LIST
11995: LIST
11996: LIST
11997: LIST
11998: LIST
11999: LIST
12000: LIST
12001: LIST
12002: LIST
12003: LIST
12004: LIST
12005: LIST
12006: LIST
12007: LIST
12008: LIST
12009: LIST
12010: LIST
12011: LIST
12012: LIST
12013: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12014: LD_ADDR_VAR 0 25
12018: PUSH
12019: LD_INT 0
12021: PUSH
12022: LD_INT 0
12024: PUSH
12025: EMPTY
12026: LIST
12027: LIST
12028: PUSH
12029: LD_INT 0
12031: PUSH
12032: LD_INT 1
12034: NEG
12035: PUSH
12036: EMPTY
12037: LIST
12038: LIST
12039: PUSH
12040: LD_INT 1
12042: PUSH
12043: LD_INT 0
12045: PUSH
12046: EMPTY
12047: LIST
12048: LIST
12049: PUSH
12050: LD_INT 1
12052: PUSH
12053: LD_INT 1
12055: PUSH
12056: EMPTY
12057: LIST
12058: LIST
12059: PUSH
12060: LD_INT 0
12062: PUSH
12063: LD_INT 1
12065: PUSH
12066: EMPTY
12067: LIST
12068: LIST
12069: PUSH
12070: LD_INT 1
12072: NEG
12073: PUSH
12074: LD_INT 0
12076: PUSH
12077: EMPTY
12078: LIST
12079: LIST
12080: PUSH
12081: LD_INT 1
12083: NEG
12084: PUSH
12085: LD_INT 1
12087: NEG
12088: PUSH
12089: EMPTY
12090: LIST
12091: LIST
12092: PUSH
12093: LD_INT 1
12095: NEG
12096: PUSH
12097: LD_INT 2
12099: NEG
12100: PUSH
12101: EMPTY
12102: LIST
12103: LIST
12104: PUSH
12105: LD_INT 0
12107: PUSH
12108: LD_INT 2
12110: NEG
12111: PUSH
12112: EMPTY
12113: LIST
12114: LIST
12115: PUSH
12116: LD_INT 1
12118: PUSH
12119: LD_INT 1
12121: NEG
12122: PUSH
12123: EMPTY
12124: LIST
12125: LIST
12126: PUSH
12127: LD_INT 2
12129: PUSH
12130: LD_INT 0
12132: PUSH
12133: EMPTY
12134: LIST
12135: LIST
12136: PUSH
12137: LD_INT 2
12139: PUSH
12140: LD_INT 1
12142: PUSH
12143: EMPTY
12144: LIST
12145: LIST
12146: PUSH
12147: LD_INT 2
12149: PUSH
12150: LD_INT 2
12152: PUSH
12153: EMPTY
12154: LIST
12155: LIST
12156: PUSH
12157: LD_INT 1
12159: PUSH
12160: LD_INT 2
12162: PUSH
12163: EMPTY
12164: LIST
12165: LIST
12166: PUSH
12167: LD_INT 0
12169: PUSH
12170: LD_INT 2
12172: PUSH
12173: EMPTY
12174: LIST
12175: LIST
12176: PUSH
12177: LD_INT 1
12179: NEG
12180: PUSH
12181: LD_INT 1
12183: PUSH
12184: EMPTY
12185: LIST
12186: LIST
12187: PUSH
12188: LD_INT 2
12190: NEG
12191: PUSH
12192: LD_INT 0
12194: PUSH
12195: EMPTY
12196: LIST
12197: LIST
12198: PUSH
12199: LD_INT 2
12201: NEG
12202: PUSH
12203: LD_INT 1
12205: NEG
12206: PUSH
12207: EMPTY
12208: LIST
12209: LIST
12210: PUSH
12211: LD_INT 2
12213: NEG
12214: PUSH
12215: LD_INT 2
12217: NEG
12218: PUSH
12219: EMPTY
12220: LIST
12221: LIST
12222: PUSH
12223: LD_INT 3
12225: PUSH
12226: LD_INT 1
12228: PUSH
12229: EMPTY
12230: LIST
12231: LIST
12232: PUSH
12233: LD_INT 3
12235: PUSH
12236: LD_INT 2
12238: PUSH
12239: EMPTY
12240: LIST
12241: LIST
12242: PUSH
12243: LD_INT 2
12245: PUSH
12246: LD_INT 3
12248: PUSH
12249: EMPTY
12250: LIST
12251: LIST
12252: PUSH
12253: LD_INT 1
12255: PUSH
12256: LD_INT 3
12258: PUSH
12259: EMPTY
12260: LIST
12261: LIST
12262: PUSH
12263: EMPTY
12264: LIST
12265: LIST
12266: LIST
12267: LIST
12268: LIST
12269: LIST
12270: LIST
12271: LIST
12272: LIST
12273: LIST
12274: LIST
12275: LIST
12276: LIST
12277: LIST
12278: LIST
12279: LIST
12280: LIST
12281: LIST
12282: LIST
12283: LIST
12284: LIST
12285: LIST
12286: LIST
12287: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12288: LD_ADDR_VAR 0 26
12292: PUSH
12293: LD_INT 0
12295: PUSH
12296: LD_INT 0
12298: PUSH
12299: EMPTY
12300: LIST
12301: LIST
12302: PUSH
12303: LD_INT 0
12305: PUSH
12306: LD_INT 1
12308: NEG
12309: PUSH
12310: EMPTY
12311: LIST
12312: LIST
12313: PUSH
12314: LD_INT 1
12316: PUSH
12317: LD_INT 0
12319: PUSH
12320: EMPTY
12321: LIST
12322: LIST
12323: PUSH
12324: LD_INT 1
12326: PUSH
12327: LD_INT 1
12329: PUSH
12330: EMPTY
12331: LIST
12332: LIST
12333: PUSH
12334: LD_INT 0
12336: PUSH
12337: LD_INT 1
12339: PUSH
12340: EMPTY
12341: LIST
12342: LIST
12343: PUSH
12344: LD_INT 1
12346: NEG
12347: PUSH
12348: LD_INT 0
12350: PUSH
12351: EMPTY
12352: LIST
12353: LIST
12354: PUSH
12355: LD_INT 1
12357: NEG
12358: PUSH
12359: LD_INT 1
12361: NEG
12362: PUSH
12363: EMPTY
12364: LIST
12365: LIST
12366: PUSH
12367: LD_INT 1
12369: NEG
12370: PUSH
12371: LD_INT 2
12373: NEG
12374: PUSH
12375: EMPTY
12376: LIST
12377: LIST
12378: PUSH
12379: LD_INT 0
12381: PUSH
12382: LD_INT 2
12384: NEG
12385: PUSH
12386: EMPTY
12387: LIST
12388: LIST
12389: PUSH
12390: LD_INT 1
12392: PUSH
12393: LD_INT 1
12395: NEG
12396: PUSH
12397: EMPTY
12398: LIST
12399: LIST
12400: PUSH
12401: LD_INT 2
12403: PUSH
12404: LD_INT 0
12406: PUSH
12407: EMPTY
12408: LIST
12409: LIST
12410: PUSH
12411: LD_INT 2
12413: PUSH
12414: LD_INT 1
12416: PUSH
12417: EMPTY
12418: LIST
12419: LIST
12420: PUSH
12421: LD_INT 2
12423: PUSH
12424: LD_INT 2
12426: PUSH
12427: EMPTY
12428: LIST
12429: LIST
12430: PUSH
12431: LD_INT 1
12433: PUSH
12434: LD_INT 2
12436: PUSH
12437: EMPTY
12438: LIST
12439: LIST
12440: PUSH
12441: LD_INT 0
12443: PUSH
12444: LD_INT 2
12446: PUSH
12447: EMPTY
12448: LIST
12449: LIST
12450: PUSH
12451: LD_INT 1
12453: NEG
12454: PUSH
12455: LD_INT 1
12457: PUSH
12458: EMPTY
12459: LIST
12460: LIST
12461: PUSH
12462: LD_INT 2
12464: NEG
12465: PUSH
12466: LD_INT 0
12468: PUSH
12469: EMPTY
12470: LIST
12471: LIST
12472: PUSH
12473: LD_INT 2
12475: NEG
12476: PUSH
12477: LD_INT 1
12479: NEG
12480: PUSH
12481: EMPTY
12482: LIST
12483: LIST
12484: PUSH
12485: LD_INT 2
12487: NEG
12488: PUSH
12489: LD_INT 2
12491: NEG
12492: PUSH
12493: EMPTY
12494: LIST
12495: LIST
12496: PUSH
12497: LD_INT 2
12499: PUSH
12500: LD_INT 3
12502: PUSH
12503: EMPTY
12504: LIST
12505: LIST
12506: PUSH
12507: LD_INT 1
12509: PUSH
12510: LD_INT 3
12512: PUSH
12513: EMPTY
12514: LIST
12515: LIST
12516: PUSH
12517: LD_INT 1
12519: NEG
12520: PUSH
12521: LD_INT 2
12523: PUSH
12524: EMPTY
12525: LIST
12526: LIST
12527: PUSH
12528: LD_INT 2
12530: NEG
12531: PUSH
12532: LD_INT 1
12534: PUSH
12535: EMPTY
12536: LIST
12537: LIST
12538: PUSH
12539: EMPTY
12540: LIST
12541: LIST
12542: LIST
12543: LIST
12544: LIST
12545: LIST
12546: LIST
12547: LIST
12548: LIST
12549: LIST
12550: LIST
12551: LIST
12552: LIST
12553: LIST
12554: LIST
12555: LIST
12556: LIST
12557: LIST
12558: LIST
12559: LIST
12560: LIST
12561: LIST
12562: LIST
12563: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12564: LD_ADDR_VAR 0 27
12568: PUSH
12569: LD_INT 0
12571: PUSH
12572: LD_INT 0
12574: PUSH
12575: EMPTY
12576: LIST
12577: LIST
12578: PUSH
12579: LD_INT 0
12581: PUSH
12582: LD_INT 1
12584: NEG
12585: PUSH
12586: EMPTY
12587: LIST
12588: LIST
12589: PUSH
12590: LD_INT 1
12592: PUSH
12593: LD_INT 0
12595: PUSH
12596: EMPTY
12597: LIST
12598: LIST
12599: PUSH
12600: LD_INT 1
12602: PUSH
12603: LD_INT 1
12605: PUSH
12606: EMPTY
12607: LIST
12608: LIST
12609: PUSH
12610: LD_INT 0
12612: PUSH
12613: LD_INT 1
12615: PUSH
12616: EMPTY
12617: LIST
12618: LIST
12619: PUSH
12620: LD_INT 1
12622: NEG
12623: PUSH
12624: LD_INT 0
12626: PUSH
12627: EMPTY
12628: LIST
12629: LIST
12630: PUSH
12631: LD_INT 1
12633: NEG
12634: PUSH
12635: LD_INT 1
12637: NEG
12638: PUSH
12639: EMPTY
12640: LIST
12641: LIST
12642: PUSH
12643: LD_INT 1
12645: NEG
12646: PUSH
12647: LD_INT 2
12649: NEG
12650: PUSH
12651: EMPTY
12652: LIST
12653: LIST
12654: PUSH
12655: LD_INT 0
12657: PUSH
12658: LD_INT 2
12660: NEG
12661: PUSH
12662: EMPTY
12663: LIST
12664: LIST
12665: PUSH
12666: LD_INT 1
12668: PUSH
12669: LD_INT 1
12671: NEG
12672: PUSH
12673: EMPTY
12674: LIST
12675: LIST
12676: PUSH
12677: LD_INT 2
12679: PUSH
12680: LD_INT 0
12682: PUSH
12683: EMPTY
12684: LIST
12685: LIST
12686: PUSH
12687: LD_INT 2
12689: PUSH
12690: LD_INT 1
12692: PUSH
12693: EMPTY
12694: LIST
12695: LIST
12696: PUSH
12697: LD_INT 2
12699: PUSH
12700: LD_INT 2
12702: PUSH
12703: EMPTY
12704: LIST
12705: LIST
12706: PUSH
12707: LD_INT 1
12709: PUSH
12710: LD_INT 2
12712: PUSH
12713: EMPTY
12714: LIST
12715: LIST
12716: PUSH
12717: LD_INT 0
12719: PUSH
12720: LD_INT 2
12722: PUSH
12723: EMPTY
12724: LIST
12725: LIST
12726: PUSH
12727: LD_INT 1
12729: NEG
12730: PUSH
12731: LD_INT 1
12733: PUSH
12734: EMPTY
12735: LIST
12736: LIST
12737: PUSH
12738: LD_INT 2
12740: NEG
12741: PUSH
12742: LD_INT 0
12744: PUSH
12745: EMPTY
12746: LIST
12747: LIST
12748: PUSH
12749: LD_INT 2
12751: NEG
12752: PUSH
12753: LD_INT 1
12755: NEG
12756: PUSH
12757: EMPTY
12758: LIST
12759: LIST
12760: PUSH
12761: LD_INT 2
12763: NEG
12764: PUSH
12765: LD_INT 2
12767: NEG
12768: PUSH
12769: EMPTY
12770: LIST
12771: LIST
12772: PUSH
12773: LD_INT 1
12775: NEG
12776: PUSH
12777: LD_INT 2
12779: PUSH
12780: EMPTY
12781: LIST
12782: LIST
12783: PUSH
12784: LD_INT 2
12786: NEG
12787: PUSH
12788: LD_INT 1
12790: PUSH
12791: EMPTY
12792: LIST
12793: LIST
12794: PUSH
12795: LD_INT 3
12797: NEG
12798: PUSH
12799: LD_INT 1
12801: NEG
12802: PUSH
12803: EMPTY
12804: LIST
12805: LIST
12806: PUSH
12807: LD_INT 3
12809: NEG
12810: PUSH
12811: LD_INT 2
12813: NEG
12814: PUSH
12815: EMPTY
12816: LIST
12817: LIST
12818: PUSH
12819: EMPTY
12820: LIST
12821: LIST
12822: LIST
12823: LIST
12824: LIST
12825: LIST
12826: LIST
12827: LIST
12828: LIST
12829: LIST
12830: LIST
12831: LIST
12832: LIST
12833: LIST
12834: LIST
12835: LIST
12836: LIST
12837: LIST
12838: LIST
12839: LIST
12840: LIST
12841: LIST
12842: LIST
12843: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12844: LD_ADDR_VAR 0 28
12848: PUSH
12849: LD_INT 0
12851: PUSH
12852: LD_INT 0
12854: PUSH
12855: EMPTY
12856: LIST
12857: LIST
12858: PUSH
12859: LD_INT 0
12861: PUSH
12862: LD_INT 1
12864: NEG
12865: PUSH
12866: EMPTY
12867: LIST
12868: LIST
12869: PUSH
12870: LD_INT 1
12872: PUSH
12873: LD_INT 0
12875: PUSH
12876: EMPTY
12877: LIST
12878: LIST
12879: PUSH
12880: LD_INT 1
12882: PUSH
12883: LD_INT 1
12885: PUSH
12886: EMPTY
12887: LIST
12888: LIST
12889: PUSH
12890: LD_INT 0
12892: PUSH
12893: LD_INT 1
12895: PUSH
12896: EMPTY
12897: LIST
12898: LIST
12899: PUSH
12900: LD_INT 1
12902: NEG
12903: PUSH
12904: LD_INT 0
12906: PUSH
12907: EMPTY
12908: LIST
12909: LIST
12910: PUSH
12911: LD_INT 1
12913: NEG
12914: PUSH
12915: LD_INT 1
12917: NEG
12918: PUSH
12919: EMPTY
12920: LIST
12921: LIST
12922: PUSH
12923: LD_INT 1
12925: NEG
12926: PUSH
12927: LD_INT 2
12929: NEG
12930: PUSH
12931: EMPTY
12932: LIST
12933: LIST
12934: PUSH
12935: LD_INT 0
12937: PUSH
12938: LD_INT 2
12940: NEG
12941: PUSH
12942: EMPTY
12943: LIST
12944: LIST
12945: PUSH
12946: LD_INT 1
12948: PUSH
12949: LD_INT 1
12951: NEG
12952: PUSH
12953: EMPTY
12954: LIST
12955: LIST
12956: PUSH
12957: LD_INT 2
12959: PUSH
12960: LD_INT 0
12962: PUSH
12963: EMPTY
12964: LIST
12965: LIST
12966: PUSH
12967: LD_INT 2
12969: PUSH
12970: LD_INT 1
12972: PUSH
12973: EMPTY
12974: LIST
12975: LIST
12976: PUSH
12977: LD_INT 2
12979: PUSH
12980: LD_INT 2
12982: PUSH
12983: EMPTY
12984: LIST
12985: LIST
12986: PUSH
12987: LD_INT 1
12989: PUSH
12990: LD_INT 2
12992: PUSH
12993: EMPTY
12994: LIST
12995: LIST
12996: PUSH
12997: LD_INT 0
12999: PUSH
13000: LD_INT 2
13002: PUSH
13003: EMPTY
13004: LIST
13005: LIST
13006: PUSH
13007: LD_INT 1
13009: NEG
13010: PUSH
13011: LD_INT 1
13013: PUSH
13014: EMPTY
13015: LIST
13016: LIST
13017: PUSH
13018: LD_INT 2
13020: NEG
13021: PUSH
13022: LD_INT 0
13024: PUSH
13025: EMPTY
13026: LIST
13027: LIST
13028: PUSH
13029: LD_INT 2
13031: NEG
13032: PUSH
13033: LD_INT 1
13035: NEG
13036: PUSH
13037: EMPTY
13038: LIST
13039: LIST
13040: PUSH
13041: LD_INT 2
13043: NEG
13044: PUSH
13045: LD_INT 2
13047: NEG
13048: PUSH
13049: EMPTY
13050: LIST
13051: LIST
13052: PUSH
13053: LD_INT 2
13055: NEG
13056: PUSH
13057: LD_INT 3
13059: NEG
13060: PUSH
13061: EMPTY
13062: LIST
13063: LIST
13064: PUSH
13065: LD_INT 1
13067: NEG
13068: PUSH
13069: LD_INT 3
13071: NEG
13072: PUSH
13073: EMPTY
13074: LIST
13075: LIST
13076: PUSH
13077: LD_INT 3
13079: NEG
13080: PUSH
13081: LD_INT 1
13083: NEG
13084: PUSH
13085: EMPTY
13086: LIST
13087: LIST
13088: PUSH
13089: LD_INT 3
13091: NEG
13092: PUSH
13093: LD_INT 2
13095: NEG
13096: PUSH
13097: EMPTY
13098: LIST
13099: LIST
13100: PUSH
13101: EMPTY
13102: LIST
13103: LIST
13104: LIST
13105: LIST
13106: LIST
13107: LIST
13108: LIST
13109: LIST
13110: LIST
13111: LIST
13112: LIST
13113: LIST
13114: LIST
13115: LIST
13116: LIST
13117: LIST
13118: LIST
13119: LIST
13120: LIST
13121: LIST
13122: LIST
13123: LIST
13124: LIST
13125: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13126: LD_ADDR_VAR 0 29
13130: PUSH
13131: LD_INT 0
13133: PUSH
13134: LD_INT 0
13136: PUSH
13137: EMPTY
13138: LIST
13139: LIST
13140: PUSH
13141: LD_INT 0
13143: PUSH
13144: LD_INT 1
13146: NEG
13147: PUSH
13148: EMPTY
13149: LIST
13150: LIST
13151: PUSH
13152: LD_INT 1
13154: PUSH
13155: LD_INT 0
13157: PUSH
13158: EMPTY
13159: LIST
13160: LIST
13161: PUSH
13162: LD_INT 1
13164: PUSH
13165: LD_INT 1
13167: PUSH
13168: EMPTY
13169: LIST
13170: LIST
13171: PUSH
13172: LD_INT 0
13174: PUSH
13175: LD_INT 1
13177: PUSH
13178: EMPTY
13179: LIST
13180: LIST
13181: PUSH
13182: LD_INT 1
13184: NEG
13185: PUSH
13186: LD_INT 0
13188: PUSH
13189: EMPTY
13190: LIST
13191: LIST
13192: PUSH
13193: LD_INT 1
13195: NEG
13196: PUSH
13197: LD_INT 1
13199: NEG
13200: PUSH
13201: EMPTY
13202: LIST
13203: LIST
13204: PUSH
13205: LD_INT 1
13207: NEG
13208: PUSH
13209: LD_INT 2
13211: NEG
13212: PUSH
13213: EMPTY
13214: LIST
13215: LIST
13216: PUSH
13217: LD_INT 0
13219: PUSH
13220: LD_INT 2
13222: NEG
13223: PUSH
13224: EMPTY
13225: LIST
13226: LIST
13227: PUSH
13228: LD_INT 1
13230: PUSH
13231: LD_INT 1
13233: NEG
13234: PUSH
13235: EMPTY
13236: LIST
13237: LIST
13238: PUSH
13239: LD_INT 2
13241: PUSH
13242: LD_INT 0
13244: PUSH
13245: EMPTY
13246: LIST
13247: LIST
13248: PUSH
13249: LD_INT 2
13251: PUSH
13252: LD_INT 1
13254: PUSH
13255: EMPTY
13256: LIST
13257: LIST
13258: PUSH
13259: LD_INT 1
13261: PUSH
13262: LD_INT 2
13264: PUSH
13265: EMPTY
13266: LIST
13267: LIST
13268: PUSH
13269: LD_INT 0
13271: PUSH
13272: LD_INT 2
13274: PUSH
13275: EMPTY
13276: LIST
13277: LIST
13278: PUSH
13279: LD_INT 1
13281: NEG
13282: PUSH
13283: LD_INT 1
13285: PUSH
13286: EMPTY
13287: LIST
13288: LIST
13289: PUSH
13290: LD_INT 2
13292: NEG
13293: PUSH
13294: LD_INT 1
13296: NEG
13297: PUSH
13298: EMPTY
13299: LIST
13300: LIST
13301: PUSH
13302: LD_INT 2
13304: NEG
13305: PUSH
13306: LD_INT 2
13308: NEG
13309: PUSH
13310: EMPTY
13311: LIST
13312: LIST
13313: PUSH
13314: LD_INT 2
13316: NEG
13317: PUSH
13318: LD_INT 3
13320: NEG
13321: PUSH
13322: EMPTY
13323: LIST
13324: LIST
13325: PUSH
13326: LD_INT 2
13328: PUSH
13329: LD_INT 1
13331: NEG
13332: PUSH
13333: EMPTY
13334: LIST
13335: LIST
13336: PUSH
13337: LD_INT 3
13339: PUSH
13340: LD_INT 1
13342: PUSH
13343: EMPTY
13344: LIST
13345: LIST
13346: PUSH
13347: LD_INT 1
13349: PUSH
13350: LD_INT 3
13352: PUSH
13353: EMPTY
13354: LIST
13355: LIST
13356: PUSH
13357: LD_INT 1
13359: NEG
13360: PUSH
13361: LD_INT 2
13363: PUSH
13364: EMPTY
13365: LIST
13366: LIST
13367: PUSH
13368: LD_INT 3
13370: NEG
13371: PUSH
13372: LD_INT 2
13374: NEG
13375: PUSH
13376: EMPTY
13377: LIST
13378: LIST
13379: PUSH
13380: EMPTY
13381: LIST
13382: LIST
13383: LIST
13384: LIST
13385: LIST
13386: LIST
13387: LIST
13388: LIST
13389: LIST
13390: LIST
13391: LIST
13392: LIST
13393: LIST
13394: LIST
13395: LIST
13396: LIST
13397: LIST
13398: LIST
13399: LIST
13400: LIST
13401: LIST
13402: LIST
13403: LIST
13404: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13405: LD_ADDR_VAR 0 30
13409: PUSH
13410: LD_INT 0
13412: PUSH
13413: LD_INT 0
13415: PUSH
13416: EMPTY
13417: LIST
13418: LIST
13419: PUSH
13420: LD_INT 0
13422: PUSH
13423: LD_INT 1
13425: NEG
13426: PUSH
13427: EMPTY
13428: LIST
13429: LIST
13430: PUSH
13431: LD_INT 1
13433: PUSH
13434: LD_INT 0
13436: PUSH
13437: EMPTY
13438: LIST
13439: LIST
13440: PUSH
13441: LD_INT 1
13443: PUSH
13444: LD_INT 1
13446: PUSH
13447: EMPTY
13448: LIST
13449: LIST
13450: PUSH
13451: LD_INT 0
13453: PUSH
13454: LD_INT 1
13456: PUSH
13457: EMPTY
13458: LIST
13459: LIST
13460: PUSH
13461: LD_INT 1
13463: NEG
13464: PUSH
13465: LD_INT 0
13467: PUSH
13468: EMPTY
13469: LIST
13470: LIST
13471: PUSH
13472: LD_INT 1
13474: NEG
13475: PUSH
13476: LD_INT 1
13478: NEG
13479: PUSH
13480: EMPTY
13481: LIST
13482: LIST
13483: PUSH
13484: LD_INT 1
13486: NEG
13487: PUSH
13488: LD_INT 2
13490: NEG
13491: PUSH
13492: EMPTY
13493: LIST
13494: LIST
13495: PUSH
13496: LD_INT 0
13498: PUSH
13499: LD_INT 2
13501: NEG
13502: PUSH
13503: EMPTY
13504: LIST
13505: LIST
13506: PUSH
13507: LD_INT 1
13509: PUSH
13510: LD_INT 1
13512: NEG
13513: PUSH
13514: EMPTY
13515: LIST
13516: LIST
13517: PUSH
13518: LD_INT 2
13520: PUSH
13521: LD_INT 0
13523: PUSH
13524: EMPTY
13525: LIST
13526: LIST
13527: PUSH
13528: LD_INT 2
13530: PUSH
13531: LD_INT 1
13533: PUSH
13534: EMPTY
13535: LIST
13536: LIST
13537: PUSH
13538: LD_INT 2
13540: PUSH
13541: LD_INT 2
13543: PUSH
13544: EMPTY
13545: LIST
13546: LIST
13547: PUSH
13548: LD_INT 1
13550: PUSH
13551: LD_INT 2
13553: PUSH
13554: EMPTY
13555: LIST
13556: LIST
13557: PUSH
13558: LD_INT 1
13560: NEG
13561: PUSH
13562: LD_INT 1
13564: PUSH
13565: EMPTY
13566: LIST
13567: LIST
13568: PUSH
13569: LD_INT 2
13571: NEG
13572: PUSH
13573: LD_INT 0
13575: PUSH
13576: EMPTY
13577: LIST
13578: LIST
13579: PUSH
13580: LD_INT 2
13582: NEG
13583: PUSH
13584: LD_INT 1
13586: NEG
13587: PUSH
13588: EMPTY
13589: LIST
13590: LIST
13591: PUSH
13592: LD_INT 1
13594: NEG
13595: PUSH
13596: LD_INT 3
13598: NEG
13599: PUSH
13600: EMPTY
13601: LIST
13602: LIST
13603: PUSH
13604: LD_INT 1
13606: PUSH
13607: LD_INT 2
13609: NEG
13610: PUSH
13611: EMPTY
13612: LIST
13613: LIST
13614: PUSH
13615: LD_INT 3
13617: PUSH
13618: LD_INT 2
13620: PUSH
13621: EMPTY
13622: LIST
13623: LIST
13624: PUSH
13625: LD_INT 2
13627: PUSH
13628: LD_INT 3
13630: PUSH
13631: EMPTY
13632: LIST
13633: LIST
13634: PUSH
13635: LD_INT 2
13637: NEG
13638: PUSH
13639: LD_INT 1
13641: PUSH
13642: EMPTY
13643: LIST
13644: LIST
13645: PUSH
13646: LD_INT 3
13648: NEG
13649: PUSH
13650: LD_INT 1
13652: NEG
13653: PUSH
13654: EMPTY
13655: LIST
13656: LIST
13657: PUSH
13658: EMPTY
13659: LIST
13660: LIST
13661: LIST
13662: LIST
13663: LIST
13664: LIST
13665: LIST
13666: LIST
13667: LIST
13668: LIST
13669: LIST
13670: LIST
13671: LIST
13672: LIST
13673: LIST
13674: LIST
13675: LIST
13676: LIST
13677: LIST
13678: LIST
13679: LIST
13680: LIST
13681: LIST
13682: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13683: LD_ADDR_VAR 0 31
13687: PUSH
13688: LD_INT 0
13690: PUSH
13691: LD_INT 0
13693: PUSH
13694: EMPTY
13695: LIST
13696: LIST
13697: PUSH
13698: LD_INT 0
13700: PUSH
13701: LD_INT 1
13703: NEG
13704: PUSH
13705: EMPTY
13706: LIST
13707: LIST
13708: PUSH
13709: LD_INT 1
13711: PUSH
13712: LD_INT 0
13714: PUSH
13715: EMPTY
13716: LIST
13717: LIST
13718: PUSH
13719: LD_INT 1
13721: PUSH
13722: LD_INT 1
13724: PUSH
13725: EMPTY
13726: LIST
13727: LIST
13728: PUSH
13729: LD_INT 0
13731: PUSH
13732: LD_INT 1
13734: PUSH
13735: EMPTY
13736: LIST
13737: LIST
13738: PUSH
13739: LD_INT 1
13741: NEG
13742: PUSH
13743: LD_INT 0
13745: PUSH
13746: EMPTY
13747: LIST
13748: LIST
13749: PUSH
13750: LD_INT 1
13752: NEG
13753: PUSH
13754: LD_INT 1
13756: NEG
13757: PUSH
13758: EMPTY
13759: LIST
13760: LIST
13761: PUSH
13762: LD_INT 1
13764: NEG
13765: PUSH
13766: LD_INT 2
13768: NEG
13769: PUSH
13770: EMPTY
13771: LIST
13772: LIST
13773: PUSH
13774: LD_INT 1
13776: PUSH
13777: LD_INT 1
13779: NEG
13780: PUSH
13781: EMPTY
13782: LIST
13783: LIST
13784: PUSH
13785: LD_INT 2
13787: PUSH
13788: LD_INT 0
13790: PUSH
13791: EMPTY
13792: LIST
13793: LIST
13794: PUSH
13795: LD_INT 2
13797: PUSH
13798: LD_INT 1
13800: PUSH
13801: EMPTY
13802: LIST
13803: LIST
13804: PUSH
13805: LD_INT 2
13807: PUSH
13808: LD_INT 2
13810: PUSH
13811: EMPTY
13812: LIST
13813: LIST
13814: PUSH
13815: LD_INT 1
13817: PUSH
13818: LD_INT 2
13820: PUSH
13821: EMPTY
13822: LIST
13823: LIST
13824: PUSH
13825: LD_INT 0
13827: PUSH
13828: LD_INT 2
13830: PUSH
13831: EMPTY
13832: LIST
13833: LIST
13834: PUSH
13835: LD_INT 1
13837: NEG
13838: PUSH
13839: LD_INT 1
13841: PUSH
13842: EMPTY
13843: LIST
13844: LIST
13845: PUSH
13846: LD_INT 2
13848: NEG
13849: PUSH
13850: LD_INT 1
13852: NEG
13853: PUSH
13854: EMPTY
13855: LIST
13856: LIST
13857: PUSH
13858: LD_INT 2
13860: NEG
13861: PUSH
13862: LD_INT 2
13864: NEG
13865: PUSH
13866: EMPTY
13867: LIST
13868: LIST
13869: PUSH
13870: LD_INT 2
13872: NEG
13873: PUSH
13874: LD_INT 3
13876: NEG
13877: PUSH
13878: EMPTY
13879: LIST
13880: LIST
13881: PUSH
13882: LD_INT 2
13884: PUSH
13885: LD_INT 1
13887: NEG
13888: PUSH
13889: EMPTY
13890: LIST
13891: LIST
13892: PUSH
13893: LD_INT 3
13895: PUSH
13896: LD_INT 1
13898: PUSH
13899: EMPTY
13900: LIST
13901: LIST
13902: PUSH
13903: LD_INT 1
13905: PUSH
13906: LD_INT 3
13908: PUSH
13909: EMPTY
13910: LIST
13911: LIST
13912: PUSH
13913: LD_INT 1
13915: NEG
13916: PUSH
13917: LD_INT 2
13919: PUSH
13920: EMPTY
13921: LIST
13922: LIST
13923: PUSH
13924: LD_INT 3
13926: NEG
13927: PUSH
13928: LD_INT 2
13930: NEG
13931: PUSH
13932: EMPTY
13933: LIST
13934: LIST
13935: PUSH
13936: EMPTY
13937: LIST
13938: LIST
13939: LIST
13940: LIST
13941: LIST
13942: LIST
13943: LIST
13944: LIST
13945: LIST
13946: LIST
13947: LIST
13948: LIST
13949: LIST
13950: LIST
13951: LIST
13952: LIST
13953: LIST
13954: LIST
13955: LIST
13956: LIST
13957: LIST
13958: LIST
13959: LIST
13960: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13961: LD_ADDR_VAR 0 32
13965: PUSH
13966: LD_INT 0
13968: PUSH
13969: LD_INT 0
13971: PUSH
13972: EMPTY
13973: LIST
13974: LIST
13975: PUSH
13976: LD_INT 0
13978: PUSH
13979: LD_INT 1
13981: NEG
13982: PUSH
13983: EMPTY
13984: LIST
13985: LIST
13986: PUSH
13987: LD_INT 1
13989: PUSH
13990: LD_INT 0
13992: PUSH
13993: EMPTY
13994: LIST
13995: LIST
13996: PUSH
13997: LD_INT 1
13999: PUSH
14000: LD_INT 1
14002: PUSH
14003: EMPTY
14004: LIST
14005: LIST
14006: PUSH
14007: LD_INT 0
14009: PUSH
14010: LD_INT 1
14012: PUSH
14013: EMPTY
14014: LIST
14015: LIST
14016: PUSH
14017: LD_INT 1
14019: NEG
14020: PUSH
14021: LD_INT 0
14023: PUSH
14024: EMPTY
14025: LIST
14026: LIST
14027: PUSH
14028: LD_INT 1
14030: NEG
14031: PUSH
14032: LD_INT 1
14034: NEG
14035: PUSH
14036: EMPTY
14037: LIST
14038: LIST
14039: PUSH
14040: LD_INT 1
14042: NEG
14043: PUSH
14044: LD_INT 2
14046: NEG
14047: PUSH
14048: EMPTY
14049: LIST
14050: LIST
14051: PUSH
14052: LD_INT 0
14054: PUSH
14055: LD_INT 2
14057: NEG
14058: PUSH
14059: EMPTY
14060: LIST
14061: LIST
14062: PUSH
14063: LD_INT 1
14065: PUSH
14066: LD_INT 1
14068: NEG
14069: PUSH
14070: EMPTY
14071: LIST
14072: LIST
14073: PUSH
14074: LD_INT 2
14076: PUSH
14077: LD_INT 1
14079: PUSH
14080: EMPTY
14081: LIST
14082: LIST
14083: PUSH
14084: LD_INT 2
14086: PUSH
14087: LD_INT 2
14089: PUSH
14090: EMPTY
14091: LIST
14092: LIST
14093: PUSH
14094: LD_INT 1
14096: PUSH
14097: LD_INT 2
14099: PUSH
14100: EMPTY
14101: LIST
14102: LIST
14103: PUSH
14104: LD_INT 0
14106: PUSH
14107: LD_INT 2
14109: PUSH
14110: EMPTY
14111: LIST
14112: LIST
14113: PUSH
14114: LD_INT 1
14116: NEG
14117: PUSH
14118: LD_INT 1
14120: PUSH
14121: EMPTY
14122: LIST
14123: LIST
14124: PUSH
14125: LD_INT 2
14127: NEG
14128: PUSH
14129: LD_INT 0
14131: PUSH
14132: EMPTY
14133: LIST
14134: LIST
14135: PUSH
14136: LD_INT 2
14138: NEG
14139: PUSH
14140: LD_INT 1
14142: NEG
14143: PUSH
14144: EMPTY
14145: LIST
14146: LIST
14147: PUSH
14148: LD_INT 1
14150: NEG
14151: PUSH
14152: LD_INT 3
14154: NEG
14155: PUSH
14156: EMPTY
14157: LIST
14158: LIST
14159: PUSH
14160: LD_INT 1
14162: PUSH
14163: LD_INT 2
14165: NEG
14166: PUSH
14167: EMPTY
14168: LIST
14169: LIST
14170: PUSH
14171: LD_INT 3
14173: PUSH
14174: LD_INT 2
14176: PUSH
14177: EMPTY
14178: LIST
14179: LIST
14180: PUSH
14181: LD_INT 2
14183: PUSH
14184: LD_INT 3
14186: PUSH
14187: EMPTY
14188: LIST
14189: LIST
14190: PUSH
14191: LD_INT 2
14193: NEG
14194: PUSH
14195: LD_INT 1
14197: PUSH
14198: EMPTY
14199: LIST
14200: LIST
14201: PUSH
14202: LD_INT 3
14204: NEG
14205: PUSH
14206: LD_INT 1
14208: NEG
14209: PUSH
14210: EMPTY
14211: LIST
14212: LIST
14213: PUSH
14214: EMPTY
14215: LIST
14216: LIST
14217: LIST
14218: LIST
14219: LIST
14220: LIST
14221: LIST
14222: LIST
14223: LIST
14224: LIST
14225: LIST
14226: LIST
14227: LIST
14228: LIST
14229: LIST
14230: LIST
14231: LIST
14232: LIST
14233: LIST
14234: LIST
14235: LIST
14236: LIST
14237: LIST
14238: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14239: LD_ADDR_VAR 0 33
14243: PUSH
14244: LD_INT 0
14246: PUSH
14247: LD_INT 0
14249: PUSH
14250: EMPTY
14251: LIST
14252: LIST
14253: PUSH
14254: LD_INT 0
14256: PUSH
14257: LD_INT 1
14259: NEG
14260: PUSH
14261: EMPTY
14262: LIST
14263: LIST
14264: PUSH
14265: LD_INT 1
14267: PUSH
14268: LD_INT 0
14270: PUSH
14271: EMPTY
14272: LIST
14273: LIST
14274: PUSH
14275: LD_INT 1
14277: PUSH
14278: LD_INT 1
14280: PUSH
14281: EMPTY
14282: LIST
14283: LIST
14284: PUSH
14285: LD_INT 0
14287: PUSH
14288: LD_INT 1
14290: PUSH
14291: EMPTY
14292: LIST
14293: LIST
14294: PUSH
14295: LD_INT 1
14297: NEG
14298: PUSH
14299: LD_INT 0
14301: PUSH
14302: EMPTY
14303: LIST
14304: LIST
14305: PUSH
14306: LD_INT 1
14308: NEG
14309: PUSH
14310: LD_INT 1
14312: NEG
14313: PUSH
14314: EMPTY
14315: LIST
14316: LIST
14317: PUSH
14318: LD_INT 1
14320: NEG
14321: PUSH
14322: LD_INT 2
14324: NEG
14325: PUSH
14326: EMPTY
14327: LIST
14328: LIST
14329: PUSH
14330: LD_INT 1
14332: PUSH
14333: LD_INT 1
14335: NEG
14336: PUSH
14337: EMPTY
14338: LIST
14339: LIST
14340: PUSH
14341: LD_INT 2
14343: PUSH
14344: LD_INT 0
14346: PUSH
14347: EMPTY
14348: LIST
14349: LIST
14350: PUSH
14351: LD_INT 2
14353: PUSH
14354: LD_INT 1
14356: PUSH
14357: EMPTY
14358: LIST
14359: LIST
14360: PUSH
14361: LD_INT 1
14363: PUSH
14364: LD_INT 2
14366: PUSH
14367: EMPTY
14368: LIST
14369: LIST
14370: PUSH
14371: LD_INT 0
14373: PUSH
14374: LD_INT 2
14376: PUSH
14377: EMPTY
14378: LIST
14379: LIST
14380: PUSH
14381: LD_INT 1
14383: NEG
14384: PUSH
14385: LD_INT 1
14387: PUSH
14388: EMPTY
14389: LIST
14390: LIST
14391: PUSH
14392: LD_INT 2
14394: NEG
14395: PUSH
14396: LD_INT 0
14398: PUSH
14399: EMPTY
14400: LIST
14401: LIST
14402: PUSH
14403: LD_INT 2
14405: NEG
14406: PUSH
14407: LD_INT 1
14409: NEG
14410: PUSH
14411: EMPTY
14412: LIST
14413: LIST
14414: PUSH
14415: LD_INT 2
14417: NEG
14418: PUSH
14419: LD_INT 2
14421: NEG
14422: PUSH
14423: EMPTY
14424: LIST
14425: LIST
14426: PUSH
14427: LD_INT 2
14429: NEG
14430: PUSH
14431: LD_INT 3
14433: NEG
14434: PUSH
14435: EMPTY
14436: LIST
14437: LIST
14438: PUSH
14439: LD_INT 2
14441: PUSH
14442: LD_INT 1
14444: NEG
14445: PUSH
14446: EMPTY
14447: LIST
14448: LIST
14449: PUSH
14450: LD_INT 3
14452: PUSH
14453: LD_INT 1
14455: PUSH
14456: EMPTY
14457: LIST
14458: LIST
14459: PUSH
14460: LD_INT 1
14462: PUSH
14463: LD_INT 3
14465: PUSH
14466: EMPTY
14467: LIST
14468: LIST
14469: PUSH
14470: LD_INT 1
14472: NEG
14473: PUSH
14474: LD_INT 2
14476: PUSH
14477: EMPTY
14478: LIST
14479: LIST
14480: PUSH
14481: LD_INT 3
14483: NEG
14484: PUSH
14485: LD_INT 2
14487: NEG
14488: PUSH
14489: EMPTY
14490: LIST
14491: LIST
14492: PUSH
14493: EMPTY
14494: LIST
14495: LIST
14496: LIST
14497: LIST
14498: LIST
14499: LIST
14500: LIST
14501: LIST
14502: LIST
14503: LIST
14504: LIST
14505: LIST
14506: LIST
14507: LIST
14508: LIST
14509: LIST
14510: LIST
14511: LIST
14512: LIST
14513: LIST
14514: LIST
14515: LIST
14516: LIST
14517: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14518: LD_ADDR_VAR 0 34
14522: PUSH
14523: LD_INT 0
14525: PUSH
14526: LD_INT 0
14528: PUSH
14529: EMPTY
14530: LIST
14531: LIST
14532: PUSH
14533: LD_INT 0
14535: PUSH
14536: LD_INT 1
14538: NEG
14539: PUSH
14540: EMPTY
14541: LIST
14542: LIST
14543: PUSH
14544: LD_INT 1
14546: PUSH
14547: LD_INT 0
14549: PUSH
14550: EMPTY
14551: LIST
14552: LIST
14553: PUSH
14554: LD_INT 1
14556: PUSH
14557: LD_INT 1
14559: PUSH
14560: EMPTY
14561: LIST
14562: LIST
14563: PUSH
14564: LD_INT 0
14566: PUSH
14567: LD_INT 1
14569: PUSH
14570: EMPTY
14571: LIST
14572: LIST
14573: PUSH
14574: LD_INT 1
14576: NEG
14577: PUSH
14578: LD_INT 0
14580: PUSH
14581: EMPTY
14582: LIST
14583: LIST
14584: PUSH
14585: LD_INT 1
14587: NEG
14588: PUSH
14589: LD_INT 1
14591: NEG
14592: PUSH
14593: EMPTY
14594: LIST
14595: LIST
14596: PUSH
14597: LD_INT 1
14599: NEG
14600: PUSH
14601: LD_INT 2
14603: NEG
14604: PUSH
14605: EMPTY
14606: LIST
14607: LIST
14608: PUSH
14609: LD_INT 0
14611: PUSH
14612: LD_INT 2
14614: NEG
14615: PUSH
14616: EMPTY
14617: LIST
14618: LIST
14619: PUSH
14620: LD_INT 1
14622: PUSH
14623: LD_INT 1
14625: NEG
14626: PUSH
14627: EMPTY
14628: LIST
14629: LIST
14630: PUSH
14631: LD_INT 2
14633: PUSH
14634: LD_INT 1
14636: PUSH
14637: EMPTY
14638: LIST
14639: LIST
14640: PUSH
14641: LD_INT 2
14643: PUSH
14644: LD_INT 2
14646: PUSH
14647: EMPTY
14648: LIST
14649: LIST
14650: PUSH
14651: LD_INT 1
14653: PUSH
14654: LD_INT 2
14656: PUSH
14657: EMPTY
14658: LIST
14659: LIST
14660: PUSH
14661: LD_INT 1
14663: NEG
14664: PUSH
14665: LD_INT 1
14667: PUSH
14668: EMPTY
14669: LIST
14670: LIST
14671: PUSH
14672: LD_INT 2
14674: NEG
14675: PUSH
14676: LD_INT 0
14678: PUSH
14679: EMPTY
14680: LIST
14681: LIST
14682: PUSH
14683: LD_INT 2
14685: NEG
14686: PUSH
14687: LD_INT 1
14689: NEG
14690: PUSH
14691: EMPTY
14692: LIST
14693: LIST
14694: PUSH
14695: LD_INT 2
14697: NEG
14698: PUSH
14699: LD_INT 2
14701: NEG
14702: PUSH
14703: EMPTY
14704: LIST
14705: LIST
14706: PUSH
14707: LD_INT 1
14709: NEG
14710: PUSH
14711: LD_INT 3
14713: NEG
14714: PUSH
14715: EMPTY
14716: LIST
14717: LIST
14718: PUSH
14719: LD_INT 1
14721: PUSH
14722: LD_INT 2
14724: NEG
14725: PUSH
14726: EMPTY
14727: LIST
14728: LIST
14729: PUSH
14730: LD_INT 3
14732: PUSH
14733: LD_INT 2
14735: PUSH
14736: EMPTY
14737: LIST
14738: LIST
14739: PUSH
14740: LD_INT 2
14742: PUSH
14743: LD_INT 3
14745: PUSH
14746: EMPTY
14747: LIST
14748: LIST
14749: PUSH
14750: LD_INT 2
14752: NEG
14753: PUSH
14754: LD_INT 1
14756: PUSH
14757: EMPTY
14758: LIST
14759: LIST
14760: PUSH
14761: LD_INT 3
14763: NEG
14764: PUSH
14765: LD_INT 1
14767: NEG
14768: PUSH
14769: EMPTY
14770: LIST
14771: LIST
14772: PUSH
14773: EMPTY
14774: LIST
14775: LIST
14776: LIST
14777: LIST
14778: LIST
14779: LIST
14780: LIST
14781: LIST
14782: LIST
14783: LIST
14784: LIST
14785: LIST
14786: LIST
14787: LIST
14788: LIST
14789: LIST
14790: LIST
14791: LIST
14792: LIST
14793: LIST
14794: LIST
14795: LIST
14796: LIST
14797: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14798: LD_ADDR_VAR 0 35
14802: PUSH
14803: LD_INT 0
14805: PUSH
14806: LD_INT 0
14808: PUSH
14809: EMPTY
14810: LIST
14811: LIST
14812: PUSH
14813: LD_INT 0
14815: PUSH
14816: LD_INT 1
14818: NEG
14819: PUSH
14820: EMPTY
14821: LIST
14822: LIST
14823: PUSH
14824: LD_INT 1
14826: PUSH
14827: LD_INT 0
14829: PUSH
14830: EMPTY
14831: LIST
14832: LIST
14833: PUSH
14834: LD_INT 1
14836: PUSH
14837: LD_INT 1
14839: PUSH
14840: EMPTY
14841: LIST
14842: LIST
14843: PUSH
14844: LD_INT 0
14846: PUSH
14847: LD_INT 1
14849: PUSH
14850: EMPTY
14851: LIST
14852: LIST
14853: PUSH
14854: LD_INT 1
14856: NEG
14857: PUSH
14858: LD_INT 0
14860: PUSH
14861: EMPTY
14862: LIST
14863: LIST
14864: PUSH
14865: LD_INT 1
14867: NEG
14868: PUSH
14869: LD_INT 1
14871: NEG
14872: PUSH
14873: EMPTY
14874: LIST
14875: LIST
14876: PUSH
14877: LD_INT 2
14879: PUSH
14880: LD_INT 1
14882: PUSH
14883: EMPTY
14884: LIST
14885: LIST
14886: PUSH
14887: LD_INT 2
14889: NEG
14890: PUSH
14891: LD_INT 1
14893: NEG
14894: PUSH
14895: EMPTY
14896: LIST
14897: LIST
14898: PUSH
14899: EMPTY
14900: LIST
14901: LIST
14902: LIST
14903: LIST
14904: LIST
14905: LIST
14906: LIST
14907: LIST
14908: LIST
14909: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14910: LD_ADDR_VAR 0 36
14914: PUSH
14915: LD_INT 0
14917: PUSH
14918: LD_INT 0
14920: PUSH
14921: EMPTY
14922: LIST
14923: LIST
14924: PUSH
14925: LD_INT 0
14927: PUSH
14928: LD_INT 1
14930: NEG
14931: PUSH
14932: EMPTY
14933: LIST
14934: LIST
14935: PUSH
14936: LD_INT 1
14938: PUSH
14939: LD_INT 0
14941: PUSH
14942: EMPTY
14943: LIST
14944: LIST
14945: PUSH
14946: LD_INT 1
14948: PUSH
14949: LD_INT 1
14951: PUSH
14952: EMPTY
14953: LIST
14954: LIST
14955: PUSH
14956: LD_INT 0
14958: PUSH
14959: LD_INT 1
14961: PUSH
14962: EMPTY
14963: LIST
14964: LIST
14965: PUSH
14966: LD_INT 1
14968: NEG
14969: PUSH
14970: LD_INT 0
14972: PUSH
14973: EMPTY
14974: LIST
14975: LIST
14976: PUSH
14977: LD_INT 1
14979: NEG
14980: PUSH
14981: LD_INT 1
14983: NEG
14984: PUSH
14985: EMPTY
14986: LIST
14987: LIST
14988: PUSH
14989: LD_INT 1
14991: NEG
14992: PUSH
14993: LD_INT 2
14995: NEG
14996: PUSH
14997: EMPTY
14998: LIST
14999: LIST
15000: PUSH
15001: LD_INT 1
15003: PUSH
15004: LD_INT 2
15006: PUSH
15007: EMPTY
15008: LIST
15009: LIST
15010: PUSH
15011: EMPTY
15012: LIST
15013: LIST
15014: LIST
15015: LIST
15016: LIST
15017: LIST
15018: LIST
15019: LIST
15020: LIST
15021: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15022: LD_ADDR_VAR 0 37
15026: PUSH
15027: LD_INT 0
15029: PUSH
15030: LD_INT 0
15032: PUSH
15033: EMPTY
15034: LIST
15035: LIST
15036: PUSH
15037: LD_INT 0
15039: PUSH
15040: LD_INT 1
15042: NEG
15043: PUSH
15044: EMPTY
15045: LIST
15046: LIST
15047: PUSH
15048: LD_INT 1
15050: PUSH
15051: LD_INT 0
15053: PUSH
15054: EMPTY
15055: LIST
15056: LIST
15057: PUSH
15058: LD_INT 1
15060: PUSH
15061: LD_INT 1
15063: PUSH
15064: EMPTY
15065: LIST
15066: LIST
15067: PUSH
15068: LD_INT 0
15070: PUSH
15071: LD_INT 1
15073: PUSH
15074: EMPTY
15075: LIST
15076: LIST
15077: PUSH
15078: LD_INT 1
15080: NEG
15081: PUSH
15082: LD_INT 0
15084: PUSH
15085: EMPTY
15086: LIST
15087: LIST
15088: PUSH
15089: LD_INT 1
15091: NEG
15092: PUSH
15093: LD_INT 1
15095: NEG
15096: PUSH
15097: EMPTY
15098: LIST
15099: LIST
15100: PUSH
15101: LD_INT 1
15103: PUSH
15104: LD_INT 1
15106: NEG
15107: PUSH
15108: EMPTY
15109: LIST
15110: LIST
15111: PUSH
15112: LD_INT 1
15114: NEG
15115: PUSH
15116: LD_INT 1
15118: PUSH
15119: EMPTY
15120: LIST
15121: LIST
15122: PUSH
15123: EMPTY
15124: LIST
15125: LIST
15126: LIST
15127: LIST
15128: LIST
15129: LIST
15130: LIST
15131: LIST
15132: LIST
15133: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15134: LD_ADDR_VAR 0 38
15138: PUSH
15139: LD_INT 0
15141: PUSH
15142: LD_INT 0
15144: PUSH
15145: EMPTY
15146: LIST
15147: LIST
15148: PUSH
15149: LD_INT 0
15151: PUSH
15152: LD_INT 1
15154: NEG
15155: PUSH
15156: EMPTY
15157: LIST
15158: LIST
15159: PUSH
15160: LD_INT 1
15162: PUSH
15163: LD_INT 0
15165: PUSH
15166: EMPTY
15167: LIST
15168: LIST
15169: PUSH
15170: LD_INT 1
15172: PUSH
15173: LD_INT 1
15175: PUSH
15176: EMPTY
15177: LIST
15178: LIST
15179: PUSH
15180: LD_INT 0
15182: PUSH
15183: LD_INT 1
15185: PUSH
15186: EMPTY
15187: LIST
15188: LIST
15189: PUSH
15190: LD_INT 1
15192: NEG
15193: PUSH
15194: LD_INT 0
15196: PUSH
15197: EMPTY
15198: LIST
15199: LIST
15200: PUSH
15201: LD_INT 1
15203: NEG
15204: PUSH
15205: LD_INT 1
15207: NEG
15208: PUSH
15209: EMPTY
15210: LIST
15211: LIST
15212: PUSH
15213: LD_INT 2
15215: PUSH
15216: LD_INT 1
15218: PUSH
15219: EMPTY
15220: LIST
15221: LIST
15222: PUSH
15223: LD_INT 2
15225: NEG
15226: PUSH
15227: LD_INT 1
15229: NEG
15230: PUSH
15231: EMPTY
15232: LIST
15233: LIST
15234: PUSH
15235: EMPTY
15236: LIST
15237: LIST
15238: LIST
15239: LIST
15240: LIST
15241: LIST
15242: LIST
15243: LIST
15244: LIST
15245: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15246: LD_ADDR_VAR 0 39
15250: PUSH
15251: LD_INT 0
15253: PUSH
15254: LD_INT 0
15256: PUSH
15257: EMPTY
15258: LIST
15259: LIST
15260: PUSH
15261: LD_INT 0
15263: PUSH
15264: LD_INT 1
15266: NEG
15267: PUSH
15268: EMPTY
15269: LIST
15270: LIST
15271: PUSH
15272: LD_INT 1
15274: PUSH
15275: LD_INT 0
15277: PUSH
15278: EMPTY
15279: LIST
15280: LIST
15281: PUSH
15282: LD_INT 1
15284: PUSH
15285: LD_INT 1
15287: PUSH
15288: EMPTY
15289: LIST
15290: LIST
15291: PUSH
15292: LD_INT 0
15294: PUSH
15295: LD_INT 1
15297: PUSH
15298: EMPTY
15299: LIST
15300: LIST
15301: PUSH
15302: LD_INT 1
15304: NEG
15305: PUSH
15306: LD_INT 0
15308: PUSH
15309: EMPTY
15310: LIST
15311: LIST
15312: PUSH
15313: LD_INT 1
15315: NEG
15316: PUSH
15317: LD_INT 1
15319: NEG
15320: PUSH
15321: EMPTY
15322: LIST
15323: LIST
15324: PUSH
15325: LD_INT 1
15327: NEG
15328: PUSH
15329: LD_INT 2
15331: NEG
15332: PUSH
15333: EMPTY
15334: LIST
15335: LIST
15336: PUSH
15337: LD_INT 1
15339: PUSH
15340: LD_INT 2
15342: PUSH
15343: EMPTY
15344: LIST
15345: LIST
15346: PUSH
15347: EMPTY
15348: LIST
15349: LIST
15350: LIST
15351: LIST
15352: LIST
15353: LIST
15354: LIST
15355: LIST
15356: LIST
15357: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15358: LD_ADDR_VAR 0 40
15362: PUSH
15363: LD_INT 0
15365: PUSH
15366: LD_INT 0
15368: PUSH
15369: EMPTY
15370: LIST
15371: LIST
15372: PUSH
15373: LD_INT 0
15375: PUSH
15376: LD_INT 1
15378: NEG
15379: PUSH
15380: EMPTY
15381: LIST
15382: LIST
15383: PUSH
15384: LD_INT 1
15386: PUSH
15387: LD_INT 0
15389: PUSH
15390: EMPTY
15391: LIST
15392: LIST
15393: PUSH
15394: LD_INT 1
15396: PUSH
15397: LD_INT 1
15399: PUSH
15400: EMPTY
15401: LIST
15402: LIST
15403: PUSH
15404: LD_INT 0
15406: PUSH
15407: LD_INT 1
15409: PUSH
15410: EMPTY
15411: LIST
15412: LIST
15413: PUSH
15414: LD_INT 1
15416: NEG
15417: PUSH
15418: LD_INT 0
15420: PUSH
15421: EMPTY
15422: LIST
15423: LIST
15424: PUSH
15425: LD_INT 1
15427: NEG
15428: PUSH
15429: LD_INT 1
15431: NEG
15432: PUSH
15433: EMPTY
15434: LIST
15435: LIST
15436: PUSH
15437: LD_INT 1
15439: PUSH
15440: LD_INT 1
15442: NEG
15443: PUSH
15444: EMPTY
15445: LIST
15446: LIST
15447: PUSH
15448: LD_INT 1
15450: NEG
15451: PUSH
15452: LD_INT 1
15454: PUSH
15455: EMPTY
15456: LIST
15457: LIST
15458: PUSH
15459: EMPTY
15460: LIST
15461: LIST
15462: LIST
15463: LIST
15464: LIST
15465: LIST
15466: LIST
15467: LIST
15468: LIST
15469: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15470: LD_ADDR_VAR 0 41
15474: PUSH
15475: LD_INT 0
15477: PUSH
15478: LD_INT 0
15480: PUSH
15481: EMPTY
15482: LIST
15483: LIST
15484: PUSH
15485: LD_INT 0
15487: PUSH
15488: LD_INT 1
15490: NEG
15491: PUSH
15492: EMPTY
15493: LIST
15494: LIST
15495: PUSH
15496: LD_INT 1
15498: PUSH
15499: LD_INT 0
15501: PUSH
15502: EMPTY
15503: LIST
15504: LIST
15505: PUSH
15506: LD_INT 1
15508: PUSH
15509: LD_INT 1
15511: PUSH
15512: EMPTY
15513: LIST
15514: LIST
15515: PUSH
15516: LD_INT 0
15518: PUSH
15519: LD_INT 1
15521: PUSH
15522: EMPTY
15523: LIST
15524: LIST
15525: PUSH
15526: LD_INT 1
15528: NEG
15529: PUSH
15530: LD_INT 0
15532: PUSH
15533: EMPTY
15534: LIST
15535: LIST
15536: PUSH
15537: LD_INT 1
15539: NEG
15540: PUSH
15541: LD_INT 1
15543: NEG
15544: PUSH
15545: EMPTY
15546: LIST
15547: LIST
15548: PUSH
15549: LD_INT 1
15551: NEG
15552: PUSH
15553: LD_INT 2
15555: NEG
15556: PUSH
15557: EMPTY
15558: LIST
15559: LIST
15560: PUSH
15561: LD_INT 1
15563: PUSH
15564: LD_INT 1
15566: NEG
15567: PUSH
15568: EMPTY
15569: LIST
15570: LIST
15571: PUSH
15572: LD_INT 2
15574: PUSH
15575: LD_INT 0
15577: PUSH
15578: EMPTY
15579: LIST
15580: LIST
15581: PUSH
15582: LD_INT 2
15584: PUSH
15585: LD_INT 1
15587: PUSH
15588: EMPTY
15589: LIST
15590: LIST
15591: PUSH
15592: LD_INT 2
15594: PUSH
15595: LD_INT 2
15597: PUSH
15598: EMPTY
15599: LIST
15600: LIST
15601: PUSH
15602: LD_INT 1
15604: PUSH
15605: LD_INT 2
15607: PUSH
15608: EMPTY
15609: LIST
15610: LIST
15611: PUSH
15612: LD_INT 1
15614: NEG
15615: PUSH
15616: LD_INT 1
15618: PUSH
15619: EMPTY
15620: LIST
15621: LIST
15622: PUSH
15623: LD_INT 2
15625: NEG
15626: PUSH
15627: LD_INT 0
15629: PUSH
15630: EMPTY
15631: LIST
15632: LIST
15633: PUSH
15634: LD_INT 2
15636: NEG
15637: PUSH
15638: LD_INT 1
15640: NEG
15641: PUSH
15642: EMPTY
15643: LIST
15644: LIST
15645: PUSH
15646: LD_INT 2
15648: NEG
15649: PUSH
15650: LD_INT 2
15652: NEG
15653: PUSH
15654: EMPTY
15655: LIST
15656: LIST
15657: PUSH
15658: LD_INT 2
15660: NEG
15661: PUSH
15662: LD_INT 3
15664: NEG
15665: PUSH
15666: EMPTY
15667: LIST
15668: LIST
15669: PUSH
15670: LD_INT 2
15672: PUSH
15673: LD_INT 1
15675: NEG
15676: PUSH
15677: EMPTY
15678: LIST
15679: LIST
15680: PUSH
15681: LD_INT 3
15683: PUSH
15684: LD_INT 0
15686: PUSH
15687: EMPTY
15688: LIST
15689: LIST
15690: PUSH
15691: LD_INT 3
15693: PUSH
15694: LD_INT 1
15696: PUSH
15697: EMPTY
15698: LIST
15699: LIST
15700: PUSH
15701: LD_INT 3
15703: PUSH
15704: LD_INT 2
15706: PUSH
15707: EMPTY
15708: LIST
15709: LIST
15710: PUSH
15711: LD_INT 3
15713: PUSH
15714: LD_INT 3
15716: PUSH
15717: EMPTY
15718: LIST
15719: LIST
15720: PUSH
15721: LD_INT 2
15723: PUSH
15724: LD_INT 3
15726: PUSH
15727: EMPTY
15728: LIST
15729: LIST
15730: PUSH
15731: LD_INT 2
15733: NEG
15734: PUSH
15735: LD_INT 1
15737: PUSH
15738: EMPTY
15739: LIST
15740: LIST
15741: PUSH
15742: LD_INT 3
15744: NEG
15745: PUSH
15746: LD_INT 0
15748: PUSH
15749: EMPTY
15750: LIST
15751: LIST
15752: PUSH
15753: LD_INT 3
15755: NEG
15756: PUSH
15757: LD_INT 1
15759: NEG
15760: PUSH
15761: EMPTY
15762: LIST
15763: LIST
15764: PUSH
15765: LD_INT 3
15767: NEG
15768: PUSH
15769: LD_INT 2
15771: NEG
15772: PUSH
15773: EMPTY
15774: LIST
15775: LIST
15776: PUSH
15777: LD_INT 3
15779: NEG
15780: PUSH
15781: LD_INT 3
15783: NEG
15784: PUSH
15785: EMPTY
15786: LIST
15787: LIST
15788: PUSH
15789: EMPTY
15790: LIST
15791: LIST
15792: LIST
15793: LIST
15794: LIST
15795: LIST
15796: LIST
15797: LIST
15798: LIST
15799: LIST
15800: LIST
15801: LIST
15802: LIST
15803: LIST
15804: LIST
15805: LIST
15806: LIST
15807: LIST
15808: LIST
15809: LIST
15810: LIST
15811: LIST
15812: LIST
15813: LIST
15814: LIST
15815: LIST
15816: LIST
15817: LIST
15818: LIST
15819: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15820: LD_ADDR_VAR 0 42
15824: PUSH
15825: LD_INT 0
15827: PUSH
15828: LD_INT 0
15830: PUSH
15831: EMPTY
15832: LIST
15833: LIST
15834: PUSH
15835: LD_INT 0
15837: PUSH
15838: LD_INT 1
15840: NEG
15841: PUSH
15842: EMPTY
15843: LIST
15844: LIST
15845: PUSH
15846: LD_INT 1
15848: PUSH
15849: LD_INT 0
15851: PUSH
15852: EMPTY
15853: LIST
15854: LIST
15855: PUSH
15856: LD_INT 1
15858: PUSH
15859: LD_INT 1
15861: PUSH
15862: EMPTY
15863: LIST
15864: LIST
15865: PUSH
15866: LD_INT 0
15868: PUSH
15869: LD_INT 1
15871: PUSH
15872: EMPTY
15873: LIST
15874: LIST
15875: PUSH
15876: LD_INT 1
15878: NEG
15879: PUSH
15880: LD_INT 0
15882: PUSH
15883: EMPTY
15884: LIST
15885: LIST
15886: PUSH
15887: LD_INT 1
15889: NEG
15890: PUSH
15891: LD_INT 1
15893: NEG
15894: PUSH
15895: EMPTY
15896: LIST
15897: LIST
15898: PUSH
15899: LD_INT 1
15901: NEG
15902: PUSH
15903: LD_INT 2
15905: NEG
15906: PUSH
15907: EMPTY
15908: LIST
15909: LIST
15910: PUSH
15911: LD_INT 0
15913: PUSH
15914: LD_INT 2
15916: NEG
15917: PUSH
15918: EMPTY
15919: LIST
15920: LIST
15921: PUSH
15922: LD_INT 1
15924: PUSH
15925: LD_INT 1
15927: NEG
15928: PUSH
15929: EMPTY
15930: LIST
15931: LIST
15932: PUSH
15933: LD_INT 2
15935: PUSH
15936: LD_INT 1
15938: PUSH
15939: EMPTY
15940: LIST
15941: LIST
15942: PUSH
15943: LD_INT 2
15945: PUSH
15946: LD_INT 2
15948: PUSH
15949: EMPTY
15950: LIST
15951: LIST
15952: PUSH
15953: LD_INT 1
15955: PUSH
15956: LD_INT 2
15958: PUSH
15959: EMPTY
15960: LIST
15961: LIST
15962: PUSH
15963: LD_INT 0
15965: PUSH
15966: LD_INT 2
15968: PUSH
15969: EMPTY
15970: LIST
15971: LIST
15972: PUSH
15973: LD_INT 1
15975: NEG
15976: PUSH
15977: LD_INT 1
15979: PUSH
15980: EMPTY
15981: LIST
15982: LIST
15983: PUSH
15984: LD_INT 2
15986: NEG
15987: PUSH
15988: LD_INT 1
15990: NEG
15991: PUSH
15992: EMPTY
15993: LIST
15994: LIST
15995: PUSH
15996: LD_INT 2
15998: NEG
15999: PUSH
16000: LD_INT 2
16002: NEG
16003: PUSH
16004: EMPTY
16005: LIST
16006: LIST
16007: PUSH
16008: LD_INT 2
16010: NEG
16011: PUSH
16012: LD_INT 3
16014: NEG
16015: PUSH
16016: EMPTY
16017: LIST
16018: LIST
16019: PUSH
16020: LD_INT 1
16022: NEG
16023: PUSH
16024: LD_INT 3
16026: NEG
16027: PUSH
16028: EMPTY
16029: LIST
16030: LIST
16031: PUSH
16032: LD_INT 0
16034: PUSH
16035: LD_INT 3
16037: NEG
16038: PUSH
16039: EMPTY
16040: LIST
16041: LIST
16042: PUSH
16043: LD_INT 1
16045: PUSH
16046: LD_INT 2
16048: NEG
16049: PUSH
16050: EMPTY
16051: LIST
16052: LIST
16053: PUSH
16054: LD_INT 3
16056: PUSH
16057: LD_INT 2
16059: PUSH
16060: EMPTY
16061: LIST
16062: LIST
16063: PUSH
16064: LD_INT 3
16066: PUSH
16067: LD_INT 3
16069: PUSH
16070: EMPTY
16071: LIST
16072: LIST
16073: PUSH
16074: LD_INT 2
16076: PUSH
16077: LD_INT 3
16079: PUSH
16080: EMPTY
16081: LIST
16082: LIST
16083: PUSH
16084: LD_INT 1
16086: PUSH
16087: LD_INT 3
16089: PUSH
16090: EMPTY
16091: LIST
16092: LIST
16093: PUSH
16094: LD_INT 0
16096: PUSH
16097: LD_INT 3
16099: PUSH
16100: EMPTY
16101: LIST
16102: LIST
16103: PUSH
16104: LD_INT 1
16106: NEG
16107: PUSH
16108: LD_INT 2
16110: PUSH
16111: EMPTY
16112: LIST
16113: LIST
16114: PUSH
16115: LD_INT 3
16117: NEG
16118: PUSH
16119: LD_INT 2
16121: NEG
16122: PUSH
16123: EMPTY
16124: LIST
16125: LIST
16126: PUSH
16127: LD_INT 3
16129: NEG
16130: PUSH
16131: LD_INT 3
16133: NEG
16134: PUSH
16135: EMPTY
16136: LIST
16137: LIST
16138: PUSH
16139: EMPTY
16140: LIST
16141: LIST
16142: LIST
16143: LIST
16144: LIST
16145: LIST
16146: LIST
16147: LIST
16148: LIST
16149: LIST
16150: LIST
16151: LIST
16152: LIST
16153: LIST
16154: LIST
16155: LIST
16156: LIST
16157: LIST
16158: LIST
16159: LIST
16160: LIST
16161: LIST
16162: LIST
16163: LIST
16164: LIST
16165: LIST
16166: LIST
16167: LIST
16168: LIST
16169: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16170: LD_ADDR_VAR 0 43
16174: PUSH
16175: LD_INT 0
16177: PUSH
16178: LD_INT 0
16180: PUSH
16181: EMPTY
16182: LIST
16183: LIST
16184: PUSH
16185: LD_INT 0
16187: PUSH
16188: LD_INT 1
16190: NEG
16191: PUSH
16192: EMPTY
16193: LIST
16194: LIST
16195: PUSH
16196: LD_INT 1
16198: PUSH
16199: LD_INT 0
16201: PUSH
16202: EMPTY
16203: LIST
16204: LIST
16205: PUSH
16206: LD_INT 1
16208: PUSH
16209: LD_INT 1
16211: PUSH
16212: EMPTY
16213: LIST
16214: LIST
16215: PUSH
16216: LD_INT 0
16218: PUSH
16219: LD_INT 1
16221: PUSH
16222: EMPTY
16223: LIST
16224: LIST
16225: PUSH
16226: LD_INT 1
16228: NEG
16229: PUSH
16230: LD_INT 0
16232: PUSH
16233: EMPTY
16234: LIST
16235: LIST
16236: PUSH
16237: LD_INT 1
16239: NEG
16240: PUSH
16241: LD_INT 1
16243: NEG
16244: PUSH
16245: EMPTY
16246: LIST
16247: LIST
16248: PUSH
16249: LD_INT 1
16251: NEG
16252: PUSH
16253: LD_INT 2
16255: NEG
16256: PUSH
16257: EMPTY
16258: LIST
16259: LIST
16260: PUSH
16261: LD_INT 0
16263: PUSH
16264: LD_INT 2
16266: NEG
16267: PUSH
16268: EMPTY
16269: LIST
16270: LIST
16271: PUSH
16272: LD_INT 1
16274: PUSH
16275: LD_INT 1
16277: NEG
16278: PUSH
16279: EMPTY
16280: LIST
16281: LIST
16282: PUSH
16283: LD_INT 2
16285: PUSH
16286: LD_INT 0
16288: PUSH
16289: EMPTY
16290: LIST
16291: LIST
16292: PUSH
16293: LD_INT 2
16295: PUSH
16296: LD_INT 1
16298: PUSH
16299: EMPTY
16300: LIST
16301: LIST
16302: PUSH
16303: LD_INT 1
16305: PUSH
16306: LD_INT 2
16308: PUSH
16309: EMPTY
16310: LIST
16311: LIST
16312: PUSH
16313: LD_INT 0
16315: PUSH
16316: LD_INT 2
16318: PUSH
16319: EMPTY
16320: LIST
16321: LIST
16322: PUSH
16323: LD_INT 1
16325: NEG
16326: PUSH
16327: LD_INT 1
16329: PUSH
16330: EMPTY
16331: LIST
16332: LIST
16333: PUSH
16334: LD_INT 2
16336: NEG
16337: PUSH
16338: LD_INT 0
16340: PUSH
16341: EMPTY
16342: LIST
16343: LIST
16344: PUSH
16345: LD_INT 2
16347: NEG
16348: PUSH
16349: LD_INT 1
16351: NEG
16352: PUSH
16353: EMPTY
16354: LIST
16355: LIST
16356: PUSH
16357: LD_INT 1
16359: NEG
16360: PUSH
16361: LD_INT 3
16363: NEG
16364: PUSH
16365: EMPTY
16366: LIST
16367: LIST
16368: PUSH
16369: LD_INT 0
16371: PUSH
16372: LD_INT 3
16374: NEG
16375: PUSH
16376: EMPTY
16377: LIST
16378: LIST
16379: PUSH
16380: LD_INT 1
16382: PUSH
16383: LD_INT 2
16385: NEG
16386: PUSH
16387: EMPTY
16388: LIST
16389: LIST
16390: PUSH
16391: LD_INT 2
16393: PUSH
16394: LD_INT 1
16396: NEG
16397: PUSH
16398: EMPTY
16399: LIST
16400: LIST
16401: PUSH
16402: LD_INT 3
16404: PUSH
16405: LD_INT 0
16407: PUSH
16408: EMPTY
16409: LIST
16410: LIST
16411: PUSH
16412: LD_INT 3
16414: PUSH
16415: LD_INT 1
16417: PUSH
16418: EMPTY
16419: LIST
16420: LIST
16421: PUSH
16422: LD_INT 1
16424: PUSH
16425: LD_INT 3
16427: PUSH
16428: EMPTY
16429: LIST
16430: LIST
16431: PUSH
16432: LD_INT 0
16434: PUSH
16435: LD_INT 3
16437: PUSH
16438: EMPTY
16439: LIST
16440: LIST
16441: PUSH
16442: LD_INT 1
16444: NEG
16445: PUSH
16446: LD_INT 2
16448: PUSH
16449: EMPTY
16450: LIST
16451: LIST
16452: PUSH
16453: LD_INT 2
16455: NEG
16456: PUSH
16457: LD_INT 1
16459: PUSH
16460: EMPTY
16461: LIST
16462: LIST
16463: PUSH
16464: LD_INT 3
16466: NEG
16467: PUSH
16468: LD_INT 0
16470: PUSH
16471: EMPTY
16472: LIST
16473: LIST
16474: PUSH
16475: LD_INT 3
16477: NEG
16478: PUSH
16479: LD_INT 1
16481: NEG
16482: PUSH
16483: EMPTY
16484: LIST
16485: LIST
16486: PUSH
16487: EMPTY
16488: LIST
16489: LIST
16490: LIST
16491: LIST
16492: LIST
16493: LIST
16494: LIST
16495: LIST
16496: LIST
16497: LIST
16498: LIST
16499: LIST
16500: LIST
16501: LIST
16502: LIST
16503: LIST
16504: LIST
16505: LIST
16506: LIST
16507: LIST
16508: LIST
16509: LIST
16510: LIST
16511: LIST
16512: LIST
16513: LIST
16514: LIST
16515: LIST
16516: LIST
16517: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16518: LD_ADDR_VAR 0 44
16522: PUSH
16523: LD_INT 0
16525: PUSH
16526: LD_INT 0
16528: PUSH
16529: EMPTY
16530: LIST
16531: LIST
16532: PUSH
16533: LD_INT 0
16535: PUSH
16536: LD_INT 1
16538: NEG
16539: PUSH
16540: EMPTY
16541: LIST
16542: LIST
16543: PUSH
16544: LD_INT 1
16546: PUSH
16547: LD_INT 0
16549: PUSH
16550: EMPTY
16551: LIST
16552: LIST
16553: PUSH
16554: LD_INT 1
16556: PUSH
16557: LD_INT 1
16559: PUSH
16560: EMPTY
16561: LIST
16562: LIST
16563: PUSH
16564: LD_INT 0
16566: PUSH
16567: LD_INT 1
16569: PUSH
16570: EMPTY
16571: LIST
16572: LIST
16573: PUSH
16574: LD_INT 1
16576: NEG
16577: PUSH
16578: LD_INT 0
16580: PUSH
16581: EMPTY
16582: LIST
16583: LIST
16584: PUSH
16585: LD_INT 1
16587: NEG
16588: PUSH
16589: LD_INT 1
16591: NEG
16592: PUSH
16593: EMPTY
16594: LIST
16595: LIST
16596: PUSH
16597: LD_INT 1
16599: NEG
16600: PUSH
16601: LD_INT 2
16603: NEG
16604: PUSH
16605: EMPTY
16606: LIST
16607: LIST
16608: PUSH
16609: LD_INT 1
16611: PUSH
16612: LD_INT 1
16614: NEG
16615: PUSH
16616: EMPTY
16617: LIST
16618: LIST
16619: PUSH
16620: LD_INT 2
16622: PUSH
16623: LD_INT 0
16625: PUSH
16626: EMPTY
16627: LIST
16628: LIST
16629: PUSH
16630: LD_INT 2
16632: PUSH
16633: LD_INT 1
16635: PUSH
16636: EMPTY
16637: LIST
16638: LIST
16639: PUSH
16640: LD_INT 2
16642: PUSH
16643: LD_INT 2
16645: PUSH
16646: EMPTY
16647: LIST
16648: LIST
16649: PUSH
16650: LD_INT 1
16652: PUSH
16653: LD_INT 2
16655: PUSH
16656: EMPTY
16657: LIST
16658: LIST
16659: PUSH
16660: LD_INT 1
16662: NEG
16663: PUSH
16664: LD_INT 1
16666: PUSH
16667: EMPTY
16668: LIST
16669: LIST
16670: PUSH
16671: LD_INT 2
16673: NEG
16674: PUSH
16675: LD_INT 0
16677: PUSH
16678: EMPTY
16679: LIST
16680: LIST
16681: PUSH
16682: LD_INT 2
16684: NEG
16685: PUSH
16686: LD_INT 1
16688: NEG
16689: PUSH
16690: EMPTY
16691: LIST
16692: LIST
16693: PUSH
16694: LD_INT 2
16696: NEG
16697: PUSH
16698: LD_INT 2
16700: NEG
16701: PUSH
16702: EMPTY
16703: LIST
16704: LIST
16705: PUSH
16706: LD_INT 2
16708: NEG
16709: PUSH
16710: LD_INT 3
16712: NEG
16713: PUSH
16714: EMPTY
16715: LIST
16716: LIST
16717: PUSH
16718: LD_INT 2
16720: PUSH
16721: LD_INT 1
16723: NEG
16724: PUSH
16725: EMPTY
16726: LIST
16727: LIST
16728: PUSH
16729: LD_INT 3
16731: PUSH
16732: LD_INT 0
16734: PUSH
16735: EMPTY
16736: LIST
16737: LIST
16738: PUSH
16739: LD_INT 3
16741: PUSH
16742: LD_INT 1
16744: PUSH
16745: EMPTY
16746: LIST
16747: LIST
16748: PUSH
16749: LD_INT 3
16751: PUSH
16752: LD_INT 2
16754: PUSH
16755: EMPTY
16756: LIST
16757: LIST
16758: PUSH
16759: LD_INT 3
16761: PUSH
16762: LD_INT 3
16764: PUSH
16765: EMPTY
16766: LIST
16767: LIST
16768: PUSH
16769: LD_INT 2
16771: PUSH
16772: LD_INT 3
16774: PUSH
16775: EMPTY
16776: LIST
16777: LIST
16778: PUSH
16779: LD_INT 2
16781: NEG
16782: PUSH
16783: LD_INT 1
16785: PUSH
16786: EMPTY
16787: LIST
16788: LIST
16789: PUSH
16790: LD_INT 3
16792: NEG
16793: PUSH
16794: LD_INT 0
16796: PUSH
16797: EMPTY
16798: LIST
16799: LIST
16800: PUSH
16801: LD_INT 3
16803: NEG
16804: PUSH
16805: LD_INT 1
16807: NEG
16808: PUSH
16809: EMPTY
16810: LIST
16811: LIST
16812: PUSH
16813: LD_INT 3
16815: NEG
16816: PUSH
16817: LD_INT 2
16819: NEG
16820: PUSH
16821: EMPTY
16822: LIST
16823: LIST
16824: PUSH
16825: LD_INT 3
16827: NEG
16828: PUSH
16829: LD_INT 3
16831: NEG
16832: PUSH
16833: EMPTY
16834: LIST
16835: LIST
16836: PUSH
16837: EMPTY
16838: LIST
16839: LIST
16840: LIST
16841: LIST
16842: LIST
16843: LIST
16844: LIST
16845: LIST
16846: LIST
16847: LIST
16848: LIST
16849: LIST
16850: LIST
16851: LIST
16852: LIST
16853: LIST
16854: LIST
16855: LIST
16856: LIST
16857: LIST
16858: LIST
16859: LIST
16860: LIST
16861: LIST
16862: LIST
16863: LIST
16864: LIST
16865: LIST
16866: LIST
16867: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16868: LD_ADDR_VAR 0 45
16872: PUSH
16873: LD_INT 0
16875: PUSH
16876: LD_INT 0
16878: PUSH
16879: EMPTY
16880: LIST
16881: LIST
16882: PUSH
16883: LD_INT 0
16885: PUSH
16886: LD_INT 1
16888: NEG
16889: PUSH
16890: EMPTY
16891: LIST
16892: LIST
16893: PUSH
16894: LD_INT 1
16896: PUSH
16897: LD_INT 0
16899: PUSH
16900: EMPTY
16901: LIST
16902: LIST
16903: PUSH
16904: LD_INT 1
16906: PUSH
16907: LD_INT 1
16909: PUSH
16910: EMPTY
16911: LIST
16912: LIST
16913: PUSH
16914: LD_INT 0
16916: PUSH
16917: LD_INT 1
16919: PUSH
16920: EMPTY
16921: LIST
16922: LIST
16923: PUSH
16924: LD_INT 1
16926: NEG
16927: PUSH
16928: LD_INT 0
16930: PUSH
16931: EMPTY
16932: LIST
16933: LIST
16934: PUSH
16935: LD_INT 1
16937: NEG
16938: PUSH
16939: LD_INT 1
16941: NEG
16942: PUSH
16943: EMPTY
16944: LIST
16945: LIST
16946: PUSH
16947: LD_INT 1
16949: NEG
16950: PUSH
16951: LD_INT 2
16953: NEG
16954: PUSH
16955: EMPTY
16956: LIST
16957: LIST
16958: PUSH
16959: LD_INT 0
16961: PUSH
16962: LD_INT 2
16964: NEG
16965: PUSH
16966: EMPTY
16967: LIST
16968: LIST
16969: PUSH
16970: LD_INT 1
16972: PUSH
16973: LD_INT 1
16975: NEG
16976: PUSH
16977: EMPTY
16978: LIST
16979: LIST
16980: PUSH
16981: LD_INT 2
16983: PUSH
16984: LD_INT 1
16986: PUSH
16987: EMPTY
16988: LIST
16989: LIST
16990: PUSH
16991: LD_INT 2
16993: PUSH
16994: LD_INT 2
16996: PUSH
16997: EMPTY
16998: LIST
16999: LIST
17000: PUSH
17001: LD_INT 1
17003: PUSH
17004: LD_INT 2
17006: PUSH
17007: EMPTY
17008: LIST
17009: LIST
17010: PUSH
17011: LD_INT 0
17013: PUSH
17014: LD_INT 2
17016: PUSH
17017: EMPTY
17018: LIST
17019: LIST
17020: PUSH
17021: LD_INT 1
17023: NEG
17024: PUSH
17025: LD_INT 1
17027: PUSH
17028: EMPTY
17029: LIST
17030: LIST
17031: PUSH
17032: LD_INT 2
17034: NEG
17035: PUSH
17036: LD_INT 1
17038: NEG
17039: PUSH
17040: EMPTY
17041: LIST
17042: LIST
17043: PUSH
17044: LD_INT 2
17046: NEG
17047: PUSH
17048: LD_INT 2
17050: NEG
17051: PUSH
17052: EMPTY
17053: LIST
17054: LIST
17055: PUSH
17056: LD_INT 2
17058: NEG
17059: PUSH
17060: LD_INT 3
17062: NEG
17063: PUSH
17064: EMPTY
17065: LIST
17066: LIST
17067: PUSH
17068: LD_INT 1
17070: NEG
17071: PUSH
17072: LD_INT 3
17074: NEG
17075: PUSH
17076: EMPTY
17077: LIST
17078: LIST
17079: PUSH
17080: LD_INT 0
17082: PUSH
17083: LD_INT 3
17085: NEG
17086: PUSH
17087: EMPTY
17088: LIST
17089: LIST
17090: PUSH
17091: LD_INT 1
17093: PUSH
17094: LD_INT 2
17096: NEG
17097: PUSH
17098: EMPTY
17099: LIST
17100: LIST
17101: PUSH
17102: LD_INT 3
17104: PUSH
17105: LD_INT 2
17107: PUSH
17108: EMPTY
17109: LIST
17110: LIST
17111: PUSH
17112: LD_INT 3
17114: PUSH
17115: LD_INT 3
17117: PUSH
17118: EMPTY
17119: LIST
17120: LIST
17121: PUSH
17122: LD_INT 2
17124: PUSH
17125: LD_INT 3
17127: PUSH
17128: EMPTY
17129: LIST
17130: LIST
17131: PUSH
17132: LD_INT 1
17134: PUSH
17135: LD_INT 3
17137: PUSH
17138: EMPTY
17139: LIST
17140: LIST
17141: PUSH
17142: LD_INT 0
17144: PUSH
17145: LD_INT 3
17147: PUSH
17148: EMPTY
17149: LIST
17150: LIST
17151: PUSH
17152: LD_INT 1
17154: NEG
17155: PUSH
17156: LD_INT 2
17158: PUSH
17159: EMPTY
17160: LIST
17161: LIST
17162: PUSH
17163: LD_INT 3
17165: NEG
17166: PUSH
17167: LD_INT 2
17169: NEG
17170: PUSH
17171: EMPTY
17172: LIST
17173: LIST
17174: PUSH
17175: LD_INT 3
17177: NEG
17178: PUSH
17179: LD_INT 3
17181: NEG
17182: PUSH
17183: EMPTY
17184: LIST
17185: LIST
17186: PUSH
17187: EMPTY
17188: LIST
17189: LIST
17190: LIST
17191: LIST
17192: LIST
17193: LIST
17194: LIST
17195: LIST
17196: LIST
17197: LIST
17198: LIST
17199: LIST
17200: LIST
17201: LIST
17202: LIST
17203: LIST
17204: LIST
17205: LIST
17206: LIST
17207: LIST
17208: LIST
17209: LIST
17210: LIST
17211: LIST
17212: LIST
17213: LIST
17214: LIST
17215: LIST
17216: LIST
17217: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17218: LD_ADDR_VAR 0 46
17222: PUSH
17223: LD_INT 0
17225: PUSH
17226: LD_INT 0
17228: PUSH
17229: EMPTY
17230: LIST
17231: LIST
17232: PUSH
17233: LD_INT 0
17235: PUSH
17236: LD_INT 1
17238: NEG
17239: PUSH
17240: EMPTY
17241: LIST
17242: LIST
17243: PUSH
17244: LD_INT 1
17246: PUSH
17247: LD_INT 0
17249: PUSH
17250: EMPTY
17251: LIST
17252: LIST
17253: PUSH
17254: LD_INT 1
17256: PUSH
17257: LD_INT 1
17259: PUSH
17260: EMPTY
17261: LIST
17262: LIST
17263: PUSH
17264: LD_INT 0
17266: PUSH
17267: LD_INT 1
17269: PUSH
17270: EMPTY
17271: LIST
17272: LIST
17273: PUSH
17274: LD_INT 1
17276: NEG
17277: PUSH
17278: LD_INT 0
17280: PUSH
17281: EMPTY
17282: LIST
17283: LIST
17284: PUSH
17285: LD_INT 1
17287: NEG
17288: PUSH
17289: LD_INT 1
17291: NEG
17292: PUSH
17293: EMPTY
17294: LIST
17295: LIST
17296: PUSH
17297: LD_INT 1
17299: NEG
17300: PUSH
17301: LD_INT 2
17303: NEG
17304: PUSH
17305: EMPTY
17306: LIST
17307: LIST
17308: PUSH
17309: LD_INT 0
17311: PUSH
17312: LD_INT 2
17314: NEG
17315: PUSH
17316: EMPTY
17317: LIST
17318: LIST
17319: PUSH
17320: LD_INT 1
17322: PUSH
17323: LD_INT 1
17325: NEG
17326: PUSH
17327: EMPTY
17328: LIST
17329: LIST
17330: PUSH
17331: LD_INT 2
17333: PUSH
17334: LD_INT 0
17336: PUSH
17337: EMPTY
17338: LIST
17339: LIST
17340: PUSH
17341: LD_INT 2
17343: PUSH
17344: LD_INT 1
17346: PUSH
17347: EMPTY
17348: LIST
17349: LIST
17350: PUSH
17351: LD_INT 1
17353: PUSH
17354: LD_INT 2
17356: PUSH
17357: EMPTY
17358: LIST
17359: LIST
17360: PUSH
17361: LD_INT 0
17363: PUSH
17364: LD_INT 2
17366: PUSH
17367: EMPTY
17368: LIST
17369: LIST
17370: PUSH
17371: LD_INT 1
17373: NEG
17374: PUSH
17375: LD_INT 1
17377: PUSH
17378: EMPTY
17379: LIST
17380: LIST
17381: PUSH
17382: LD_INT 2
17384: NEG
17385: PUSH
17386: LD_INT 0
17388: PUSH
17389: EMPTY
17390: LIST
17391: LIST
17392: PUSH
17393: LD_INT 2
17395: NEG
17396: PUSH
17397: LD_INT 1
17399: NEG
17400: PUSH
17401: EMPTY
17402: LIST
17403: LIST
17404: PUSH
17405: LD_INT 1
17407: NEG
17408: PUSH
17409: LD_INT 3
17411: NEG
17412: PUSH
17413: EMPTY
17414: LIST
17415: LIST
17416: PUSH
17417: LD_INT 0
17419: PUSH
17420: LD_INT 3
17422: NEG
17423: PUSH
17424: EMPTY
17425: LIST
17426: LIST
17427: PUSH
17428: LD_INT 1
17430: PUSH
17431: LD_INT 2
17433: NEG
17434: PUSH
17435: EMPTY
17436: LIST
17437: LIST
17438: PUSH
17439: LD_INT 2
17441: PUSH
17442: LD_INT 1
17444: NEG
17445: PUSH
17446: EMPTY
17447: LIST
17448: LIST
17449: PUSH
17450: LD_INT 3
17452: PUSH
17453: LD_INT 0
17455: PUSH
17456: EMPTY
17457: LIST
17458: LIST
17459: PUSH
17460: LD_INT 3
17462: PUSH
17463: LD_INT 1
17465: PUSH
17466: EMPTY
17467: LIST
17468: LIST
17469: PUSH
17470: LD_INT 1
17472: PUSH
17473: LD_INT 3
17475: PUSH
17476: EMPTY
17477: LIST
17478: LIST
17479: PUSH
17480: LD_INT 0
17482: PUSH
17483: LD_INT 3
17485: PUSH
17486: EMPTY
17487: LIST
17488: LIST
17489: PUSH
17490: LD_INT 1
17492: NEG
17493: PUSH
17494: LD_INT 2
17496: PUSH
17497: EMPTY
17498: LIST
17499: LIST
17500: PUSH
17501: LD_INT 2
17503: NEG
17504: PUSH
17505: LD_INT 1
17507: PUSH
17508: EMPTY
17509: LIST
17510: LIST
17511: PUSH
17512: LD_INT 3
17514: NEG
17515: PUSH
17516: LD_INT 0
17518: PUSH
17519: EMPTY
17520: LIST
17521: LIST
17522: PUSH
17523: LD_INT 3
17525: NEG
17526: PUSH
17527: LD_INT 1
17529: NEG
17530: PUSH
17531: EMPTY
17532: LIST
17533: LIST
17534: PUSH
17535: EMPTY
17536: LIST
17537: LIST
17538: LIST
17539: LIST
17540: LIST
17541: LIST
17542: LIST
17543: LIST
17544: LIST
17545: LIST
17546: LIST
17547: LIST
17548: LIST
17549: LIST
17550: LIST
17551: LIST
17552: LIST
17553: LIST
17554: LIST
17555: LIST
17556: LIST
17557: LIST
17558: LIST
17559: LIST
17560: LIST
17561: LIST
17562: LIST
17563: LIST
17564: LIST
17565: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17566: LD_ADDR_VAR 0 47
17570: PUSH
17571: LD_INT 0
17573: PUSH
17574: LD_INT 0
17576: PUSH
17577: EMPTY
17578: LIST
17579: LIST
17580: PUSH
17581: LD_INT 0
17583: PUSH
17584: LD_INT 1
17586: NEG
17587: PUSH
17588: EMPTY
17589: LIST
17590: LIST
17591: PUSH
17592: LD_INT 1
17594: PUSH
17595: LD_INT 0
17597: PUSH
17598: EMPTY
17599: LIST
17600: LIST
17601: PUSH
17602: LD_INT 1
17604: PUSH
17605: LD_INT 1
17607: PUSH
17608: EMPTY
17609: LIST
17610: LIST
17611: PUSH
17612: LD_INT 0
17614: PUSH
17615: LD_INT 1
17617: PUSH
17618: EMPTY
17619: LIST
17620: LIST
17621: PUSH
17622: LD_INT 1
17624: NEG
17625: PUSH
17626: LD_INT 0
17628: PUSH
17629: EMPTY
17630: LIST
17631: LIST
17632: PUSH
17633: LD_INT 1
17635: NEG
17636: PUSH
17637: LD_INT 1
17639: NEG
17640: PUSH
17641: EMPTY
17642: LIST
17643: LIST
17644: PUSH
17645: LD_INT 1
17647: NEG
17648: PUSH
17649: LD_INT 2
17651: NEG
17652: PUSH
17653: EMPTY
17654: LIST
17655: LIST
17656: PUSH
17657: LD_INT 0
17659: PUSH
17660: LD_INT 2
17662: NEG
17663: PUSH
17664: EMPTY
17665: LIST
17666: LIST
17667: PUSH
17668: LD_INT 1
17670: PUSH
17671: LD_INT 1
17673: NEG
17674: PUSH
17675: EMPTY
17676: LIST
17677: LIST
17678: PUSH
17679: LD_INT 2
17681: NEG
17682: PUSH
17683: LD_INT 1
17685: NEG
17686: PUSH
17687: EMPTY
17688: LIST
17689: LIST
17690: PUSH
17691: LD_INT 2
17693: NEG
17694: PUSH
17695: LD_INT 2
17697: NEG
17698: PUSH
17699: EMPTY
17700: LIST
17701: LIST
17702: PUSH
17703: EMPTY
17704: LIST
17705: LIST
17706: LIST
17707: LIST
17708: LIST
17709: LIST
17710: LIST
17711: LIST
17712: LIST
17713: LIST
17714: LIST
17715: LIST
17716: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17717: LD_ADDR_VAR 0 48
17721: PUSH
17722: LD_INT 0
17724: PUSH
17725: LD_INT 0
17727: PUSH
17728: EMPTY
17729: LIST
17730: LIST
17731: PUSH
17732: LD_INT 0
17734: PUSH
17735: LD_INT 1
17737: NEG
17738: PUSH
17739: EMPTY
17740: LIST
17741: LIST
17742: PUSH
17743: LD_INT 1
17745: PUSH
17746: LD_INT 0
17748: PUSH
17749: EMPTY
17750: LIST
17751: LIST
17752: PUSH
17753: LD_INT 1
17755: PUSH
17756: LD_INT 1
17758: PUSH
17759: EMPTY
17760: LIST
17761: LIST
17762: PUSH
17763: LD_INT 0
17765: PUSH
17766: LD_INT 1
17768: PUSH
17769: EMPTY
17770: LIST
17771: LIST
17772: PUSH
17773: LD_INT 1
17775: NEG
17776: PUSH
17777: LD_INT 0
17779: PUSH
17780: EMPTY
17781: LIST
17782: LIST
17783: PUSH
17784: LD_INT 1
17786: NEG
17787: PUSH
17788: LD_INT 1
17790: NEG
17791: PUSH
17792: EMPTY
17793: LIST
17794: LIST
17795: PUSH
17796: LD_INT 1
17798: NEG
17799: PUSH
17800: LD_INT 2
17802: NEG
17803: PUSH
17804: EMPTY
17805: LIST
17806: LIST
17807: PUSH
17808: LD_INT 0
17810: PUSH
17811: LD_INT 2
17813: NEG
17814: PUSH
17815: EMPTY
17816: LIST
17817: LIST
17818: PUSH
17819: LD_INT 1
17821: PUSH
17822: LD_INT 1
17824: NEG
17825: PUSH
17826: EMPTY
17827: LIST
17828: LIST
17829: PUSH
17830: LD_INT 2
17832: PUSH
17833: LD_INT 0
17835: PUSH
17836: EMPTY
17837: LIST
17838: LIST
17839: PUSH
17840: LD_INT 2
17842: PUSH
17843: LD_INT 1
17845: PUSH
17846: EMPTY
17847: LIST
17848: LIST
17849: PUSH
17850: EMPTY
17851: LIST
17852: LIST
17853: LIST
17854: LIST
17855: LIST
17856: LIST
17857: LIST
17858: LIST
17859: LIST
17860: LIST
17861: LIST
17862: LIST
17863: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17864: LD_ADDR_VAR 0 49
17868: PUSH
17869: LD_INT 0
17871: PUSH
17872: LD_INT 0
17874: PUSH
17875: EMPTY
17876: LIST
17877: LIST
17878: PUSH
17879: LD_INT 0
17881: PUSH
17882: LD_INT 1
17884: NEG
17885: PUSH
17886: EMPTY
17887: LIST
17888: LIST
17889: PUSH
17890: LD_INT 1
17892: PUSH
17893: LD_INT 0
17895: PUSH
17896: EMPTY
17897: LIST
17898: LIST
17899: PUSH
17900: LD_INT 1
17902: PUSH
17903: LD_INT 1
17905: PUSH
17906: EMPTY
17907: LIST
17908: LIST
17909: PUSH
17910: LD_INT 0
17912: PUSH
17913: LD_INT 1
17915: PUSH
17916: EMPTY
17917: LIST
17918: LIST
17919: PUSH
17920: LD_INT 1
17922: NEG
17923: PUSH
17924: LD_INT 0
17926: PUSH
17927: EMPTY
17928: LIST
17929: LIST
17930: PUSH
17931: LD_INT 1
17933: NEG
17934: PUSH
17935: LD_INT 1
17937: NEG
17938: PUSH
17939: EMPTY
17940: LIST
17941: LIST
17942: PUSH
17943: LD_INT 1
17945: PUSH
17946: LD_INT 1
17948: NEG
17949: PUSH
17950: EMPTY
17951: LIST
17952: LIST
17953: PUSH
17954: LD_INT 2
17956: PUSH
17957: LD_INT 0
17959: PUSH
17960: EMPTY
17961: LIST
17962: LIST
17963: PUSH
17964: LD_INT 2
17966: PUSH
17967: LD_INT 1
17969: PUSH
17970: EMPTY
17971: LIST
17972: LIST
17973: PUSH
17974: LD_INT 2
17976: PUSH
17977: LD_INT 2
17979: PUSH
17980: EMPTY
17981: LIST
17982: LIST
17983: PUSH
17984: LD_INT 1
17986: PUSH
17987: LD_INT 2
17989: PUSH
17990: EMPTY
17991: LIST
17992: LIST
17993: PUSH
17994: EMPTY
17995: LIST
17996: LIST
17997: LIST
17998: LIST
17999: LIST
18000: LIST
18001: LIST
18002: LIST
18003: LIST
18004: LIST
18005: LIST
18006: LIST
18007: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18008: LD_ADDR_VAR 0 50
18012: PUSH
18013: LD_INT 0
18015: PUSH
18016: LD_INT 0
18018: PUSH
18019: EMPTY
18020: LIST
18021: LIST
18022: PUSH
18023: LD_INT 0
18025: PUSH
18026: LD_INT 1
18028: NEG
18029: PUSH
18030: EMPTY
18031: LIST
18032: LIST
18033: PUSH
18034: LD_INT 1
18036: PUSH
18037: LD_INT 0
18039: PUSH
18040: EMPTY
18041: LIST
18042: LIST
18043: PUSH
18044: LD_INT 1
18046: PUSH
18047: LD_INT 1
18049: PUSH
18050: EMPTY
18051: LIST
18052: LIST
18053: PUSH
18054: LD_INT 0
18056: PUSH
18057: LD_INT 1
18059: PUSH
18060: EMPTY
18061: LIST
18062: LIST
18063: PUSH
18064: LD_INT 1
18066: NEG
18067: PUSH
18068: LD_INT 0
18070: PUSH
18071: EMPTY
18072: LIST
18073: LIST
18074: PUSH
18075: LD_INT 1
18077: NEG
18078: PUSH
18079: LD_INT 1
18081: NEG
18082: PUSH
18083: EMPTY
18084: LIST
18085: LIST
18086: PUSH
18087: LD_INT 2
18089: PUSH
18090: LD_INT 1
18092: PUSH
18093: EMPTY
18094: LIST
18095: LIST
18096: PUSH
18097: LD_INT 2
18099: PUSH
18100: LD_INT 2
18102: PUSH
18103: EMPTY
18104: LIST
18105: LIST
18106: PUSH
18107: LD_INT 1
18109: PUSH
18110: LD_INT 2
18112: PUSH
18113: EMPTY
18114: LIST
18115: LIST
18116: PUSH
18117: LD_INT 0
18119: PUSH
18120: LD_INT 2
18122: PUSH
18123: EMPTY
18124: LIST
18125: LIST
18126: PUSH
18127: LD_INT 1
18129: NEG
18130: PUSH
18131: LD_INT 1
18133: PUSH
18134: EMPTY
18135: LIST
18136: LIST
18137: PUSH
18138: EMPTY
18139: LIST
18140: LIST
18141: LIST
18142: LIST
18143: LIST
18144: LIST
18145: LIST
18146: LIST
18147: LIST
18148: LIST
18149: LIST
18150: LIST
18151: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18152: LD_ADDR_VAR 0 51
18156: PUSH
18157: LD_INT 0
18159: PUSH
18160: LD_INT 0
18162: PUSH
18163: EMPTY
18164: LIST
18165: LIST
18166: PUSH
18167: LD_INT 0
18169: PUSH
18170: LD_INT 1
18172: NEG
18173: PUSH
18174: EMPTY
18175: LIST
18176: LIST
18177: PUSH
18178: LD_INT 1
18180: PUSH
18181: LD_INT 0
18183: PUSH
18184: EMPTY
18185: LIST
18186: LIST
18187: PUSH
18188: LD_INT 1
18190: PUSH
18191: LD_INT 1
18193: PUSH
18194: EMPTY
18195: LIST
18196: LIST
18197: PUSH
18198: LD_INT 0
18200: PUSH
18201: LD_INT 1
18203: PUSH
18204: EMPTY
18205: LIST
18206: LIST
18207: PUSH
18208: LD_INT 1
18210: NEG
18211: PUSH
18212: LD_INT 0
18214: PUSH
18215: EMPTY
18216: LIST
18217: LIST
18218: PUSH
18219: LD_INT 1
18221: NEG
18222: PUSH
18223: LD_INT 1
18225: NEG
18226: PUSH
18227: EMPTY
18228: LIST
18229: LIST
18230: PUSH
18231: LD_INT 1
18233: PUSH
18234: LD_INT 2
18236: PUSH
18237: EMPTY
18238: LIST
18239: LIST
18240: PUSH
18241: LD_INT 0
18243: PUSH
18244: LD_INT 2
18246: PUSH
18247: EMPTY
18248: LIST
18249: LIST
18250: PUSH
18251: LD_INT 1
18253: NEG
18254: PUSH
18255: LD_INT 1
18257: PUSH
18258: EMPTY
18259: LIST
18260: LIST
18261: PUSH
18262: LD_INT 2
18264: NEG
18265: PUSH
18266: LD_INT 0
18268: PUSH
18269: EMPTY
18270: LIST
18271: LIST
18272: PUSH
18273: LD_INT 2
18275: NEG
18276: PUSH
18277: LD_INT 1
18279: NEG
18280: PUSH
18281: EMPTY
18282: LIST
18283: LIST
18284: PUSH
18285: EMPTY
18286: LIST
18287: LIST
18288: LIST
18289: LIST
18290: LIST
18291: LIST
18292: LIST
18293: LIST
18294: LIST
18295: LIST
18296: LIST
18297: LIST
18298: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18299: LD_ADDR_VAR 0 52
18303: PUSH
18304: LD_INT 0
18306: PUSH
18307: LD_INT 0
18309: PUSH
18310: EMPTY
18311: LIST
18312: LIST
18313: PUSH
18314: LD_INT 0
18316: PUSH
18317: LD_INT 1
18319: NEG
18320: PUSH
18321: EMPTY
18322: LIST
18323: LIST
18324: PUSH
18325: LD_INT 1
18327: PUSH
18328: LD_INT 0
18330: PUSH
18331: EMPTY
18332: LIST
18333: LIST
18334: PUSH
18335: LD_INT 1
18337: PUSH
18338: LD_INT 1
18340: PUSH
18341: EMPTY
18342: LIST
18343: LIST
18344: PUSH
18345: LD_INT 0
18347: PUSH
18348: LD_INT 1
18350: PUSH
18351: EMPTY
18352: LIST
18353: LIST
18354: PUSH
18355: LD_INT 1
18357: NEG
18358: PUSH
18359: LD_INT 0
18361: PUSH
18362: EMPTY
18363: LIST
18364: LIST
18365: PUSH
18366: LD_INT 1
18368: NEG
18369: PUSH
18370: LD_INT 1
18372: NEG
18373: PUSH
18374: EMPTY
18375: LIST
18376: LIST
18377: PUSH
18378: LD_INT 1
18380: NEG
18381: PUSH
18382: LD_INT 2
18384: NEG
18385: PUSH
18386: EMPTY
18387: LIST
18388: LIST
18389: PUSH
18390: LD_INT 1
18392: NEG
18393: PUSH
18394: LD_INT 1
18396: PUSH
18397: EMPTY
18398: LIST
18399: LIST
18400: PUSH
18401: LD_INT 2
18403: NEG
18404: PUSH
18405: LD_INT 0
18407: PUSH
18408: EMPTY
18409: LIST
18410: LIST
18411: PUSH
18412: LD_INT 2
18414: NEG
18415: PUSH
18416: LD_INT 1
18418: NEG
18419: PUSH
18420: EMPTY
18421: LIST
18422: LIST
18423: PUSH
18424: LD_INT 2
18426: NEG
18427: PUSH
18428: LD_INT 2
18430: NEG
18431: PUSH
18432: EMPTY
18433: LIST
18434: LIST
18435: PUSH
18436: EMPTY
18437: LIST
18438: LIST
18439: LIST
18440: LIST
18441: LIST
18442: LIST
18443: LIST
18444: LIST
18445: LIST
18446: LIST
18447: LIST
18448: LIST
18449: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18450: LD_ADDR_VAR 0 53
18454: PUSH
18455: LD_INT 0
18457: PUSH
18458: LD_INT 0
18460: PUSH
18461: EMPTY
18462: LIST
18463: LIST
18464: PUSH
18465: LD_INT 0
18467: PUSH
18468: LD_INT 1
18470: NEG
18471: PUSH
18472: EMPTY
18473: LIST
18474: LIST
18475: PUSH
18476: LD_INT 1
18478: PUSH
18479: LD_INT 0
18481: PUSH
18482: EMPTY
18483: LIST
18484: LIST
18485: PUSH
18486: LD_INT 1
18488: PUSH
18489: LD_INT 1
18491: PUSH
18492: EMPTY
18493: LIST
18494: LIST
18495: PUSH
18496: LD_INT 0
18498: PUSH
18499: LD_INT 1
18501: PUSH
18502: EMPTY
18503: LIST
18504: LIST
18505: PUSH
18506: LD_INT 1
18508: NEG
18509: PUSH
18510: LD_INT 0
18512: PUSH
18513: EMPTY
18514: LIST
18515: LIST
18516: PUSH
18517: LD_INT 1
18519: NEG
18520: PUSH
18521: LD_INT 1
18523: NEG
18524: PUSH
18525: EMPTY
18526: LIST
18527: LIST
18528: PUSH
18529: LD_INT 1
18531: NEG
18532: PUSH
18533: LD_INT 2
18535: NEG
18536: PUSH
18537: EMPTY
18538: LIST
18539: LIST
18540: PUSH
18541: LD_INT 0
18543: PUSH
18544: LD_INT 2
18546: NEG
18547: PUSH
18548: EMPTY
18549: LIST
18550: LIST
18551: PUSH
18552: LD_INT 1
18554: PUSH
18555: LD_INT 1
18557: NEG
18558: PUSH
18559: EMPTY
18560: LIST
18561: LIST
18562: PUSH
18563: LD_INT 2
18565: PUSH
18566: LD_INT 0
18568: PUSH
18569: EMPTY
18570: LIST
18571: LIST
18572: PUSH
18573: LD_INT 2
18575: PUSH
18576: LD_INT 1
18578: PUSH
18579: EMPTY
18580: LIST
18581: LIST
18582: PUSH
18583: LD_INT 2
18585: PUSH
18586: LD_INT 2
18588: PUSH
18589: EMPTY
18590: LIST
18591: LIST
18592: PUSH
18593: LD_INT 1
18595: PUSH
18596: LD_INT 2
18598: PUSH
18599: EMPTY
18600: LIST
18601: LIST
18602: PUSH
18603: LD_INT 0
18605: PUSH
18606: LD_INT 2
18608: PUSH
18609: EMPTY
18610: LIST
18611: LIST
18612: PUSH
18613: LD_INT 1
18615: NEG
18616: PUSH
18617: LD_INT 1
18619: PUSH
18620: EMPTY
18621: LIST
18622: LIST
18623: PUSH
18624: LD_INT 2
18626: NEG
18627: PUSH
18628: LD_INT 0
18630: PUSH
18631: EMPTY
18632: LIST
18633: LIST
18634: PUSH
18635: LD_INT 2
18637: NEG
18638: PUSH
18639: LD_INT 1
18641: NEG
18642: PUSH
18643: EMPTY
18644: LIST
18645: LIST
18646: PUSH
18647: LD_INT 2
18649: NEG
18650: PUSH
18651: LD_INT 2
18653: NEG
18654: PUSH
18655: EMPTY
18656: LIST
18657: LIST
18658: PUSH
18659: EMPTY
18660: LIST
18661: LIST
18662: LIST
18663: LIST
18664: LIST
18665: LIST
18666: LIST
18667: LIST
18668: LIST
18669: LIST
18670: LIST
18671: LIST
18672: LIST
18673: LIST
18674: LIST
18675: LIST
18676: LIST
18677: LIST
18678: LIST
18679: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18680: LD_ADDR_VAR 0 54
18684: PUSH
18685: LD_INT 0
18687: PUSH
18688: LD_INT 0
18690: PUSH
18691: EMPTY
18692: LIST
18693: LIST
18694: PUSH
18695: LD_INT 0
18697: PUSH
18698: LD_INT 1
18700: NEG
18701: PUSH
18702: EMPTY
18703: LIST
18704: LIST
18705: PUSH
18706: LD_INT 1
18708: PUSH
18709: LD_INT 0
18711: PUSH
18712: EMPTY
18713: LIST
18714: LIST
18715: PUSH
18716: LD_INT 1
18718: PUSH
18719: LD_INT 1
18721: PUSH
18722: EMPTY
18723: LIST
18724: LIST
18725: PUSH
18726: LD_INT 0
18728: PUSH
18729: LD_INT 1
18731: PUSH
18732: EMPTY
18733: LIST
18734: LIST
18735: PUSH
18736: LD_INT 1
18738: NEG
18739: PUSH
18740: LD_INT 0
18742: PUSH
18743: EMPTY
18744: LIST
18745: LIST
18746: PUSH
18747: LD_INT 1
18749: NEG
18750: PUSH
18751: LD_INT 1
18753: NEG
18754: PUSH
18755: EMPTY
18756: LIST
18757: LIST
18758: PUSH
18759: LD_INT 1
18761: NEG
18762: PUSH
18763: LD_INT 2
18765: NEG
18766: PUSH
18767: EMPTY
18768: LIST
18769: LIST
18770: PUSH
18771: LD_INT 0
18773: PUSH
18774: LD_INT 2
18776: NEG
18777: PUSH
18778: EMPTY
18779: LIST
18780: LIST
18781: PUSH
18782: LD_INT 1
18784: PUSH
18785: LD_INT 1
18787: NEG
18788: PUSH
18789: EMPTY
18790: LIST
18791: LIST
18792: PUSH
18793: LD_INT 2
18795: PUSH
18796: LD_INT 0
18798: PUSH
18799: EMPTY
18800: LIST
18801: LIST
18802: PUSH
18803: LD_INT 2
18805: PUSH
18806: LD_INT 1
18808: PUSH
18809: EMPTY
18810: LIST
18811: LIST
18812: PUSH
18813: LD_INT 2
18815: PUSH
18816: LD_INT 2
18818: PUSH
18819: EMPTY
18820: LIST
18821: LIST
18822: PUSH
18823: LD_INT 1
18825: PUSH
18826: LD_INT 2
18828: PUSH
18829: EMPTY
18830: LIST
18831: LIST
18832: PUSH
18833: LD_INT 0
18835: PUSH
18836: LD_INT 2
18838: PUSH
18839: EMPTY
18840: LIST
18841: LIST
18842: PUSH
18843: LD_INT 1
18845: NEG
18846: PUSH
18847: LD_INT 1
18849: PUSH
18850: EMPTY
18851: LIST
18852: LIST
18853: PUSH
18854: LD_INT 2
18856: NEG
18857: PUSH
18858: LD_INT 0
18860: PUSH
18861: EMPTY
18862: LIST
18863: LIST
18864: PUSH
18865: LD_INT 2
18867: NEG
18868: PUSH
18869: LD_INT 1
18871: NEG
18872: PUSH
18873: EMPTY
18874: LIST
18875: LIST
18876: PUSH
18877: LD_INT 2
18879: NEG
18880: PUSH
18881: LD_INT 2
18883: NEG
18884: PUSH
18885: EMPTY
18886: LIST
18887: LIST
18888: PUSH
18889: EMPTY
18890: LIST
18891: LIST
18892: LIST
18893: LIST
18894: LIST
18895: LIST
18896: LIST
18897: LIST
18898: LIST
18899: LIST
18900: LIST
18901: LIST
18902: LIST
18903: LIST
18904: LIST
18905: LIST
18906: LIST
18907: LIST
18908: LIST
18909: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18910: LD_ADDR_VAR 0 55
18914: PUSH
18915: LD_INT 0
18917: PUSH
18918: LD_INT 0
18920: PUSH
18921: EMPTY
18922: LIST
18923: LIST
18924: PUSH
18925: LD_INT 0
18927: PUSH
18928: LD_INT 1
18930: NEG
18931: PUSH
18932: EMPTY
18933: LIST
18934: LIST
18935: PUSH
18936: LD_INT 1
18938: PUSH
18939: LD_INT 0
18941: PUSH
18942: EMPTY
18943: LIST
18944: LIST
18945: PUSH
18946: LD_INT 1
18948: PUSH
18949: LD_INT 1
18951: PUSH
18952: EMPTY
18953: LIST
18954: LIST
18955: PUSH
18956: LD_INT 0
18958: PUSH
18959: LD_INT 1
18961: PUSH
18962: EMPTY
18963: LIST
18964: LIST
18965: PUSH
18966: LD_INT 1
18968: NEG
18969: PUSH
18970: LD_INT 0
18972: PUSH
18973: EMPTY
18974: LIST
18975: LIST
18976: PUSH
18977: LD_INT 1
18979: NEG
18980: PUSH
18981: LD_INT 1
18983: NEG
18984: PUSH
18985: EMPTY
18986: LIST
18987: LIST
18988: PUSH
18989: LD_INT 1
18991: NEG
18992: PUSH
18993: LD_INT 2
18995: NEG
18996: PUSH
18997: EMPTY
18998: LIST
18999: LIST
19000: PUSH
19001: LD_INT 0
19003: PUSH
19004: LD_INT 2
19006: NEG
19007: PUSH
19008: EMPTY
19009: LIST
19010: LIST
19011: PUSH
19012: LD_INT 1
19014: PUSH
19015: LD_INT 1
19017: NEG
19018: PUSH
19019: EMPTY
19020: LIST
19021: LIST
19022: PUSH
19023: LD_INT 2
19025: PUSH
19026: LD_INT 0
19028: PUSH
19029: EMPTY
19030: LIST
19031: LIST
19032: PUSH
19033: LD_INT 2
19035: PUSH
19036: LD_INT 1
19038: PUSH
19039: EMPTY
19040: LIST
19041: LIST
19042: PUSH
19043: LD_INT 2
19045: PUSH
19046: LD_INT 2
19048: PUSH
19049: EMPTY
19050: LIST
19051: LIST
19052: PUSH
19053: LD_INT 1
19055: PUSH
19056: LD_INT 2
19058: PUSH
19059: EMPTY
19060: LIST
19061: LIST
19062: PUSH
19063: LD_INT 0
19065: PUSH
19066: LD_INT 2
19068: PUSH
19069: EMPTY
19070: LIST
19071: LIST
19072: PUSH
19073: LD_INT 1
19075: NEG
19076: PUSH
19077: LD_INT 1
19079: PUSH
19080: EMPTY
19081: LIST
19082: LIST
19083: PUSH
19084: LD_INT 2
19086: NEG
19087: PUSH
19088: LD_INT 0
19090: PUSH
19091: EMPTY
19092: LIST
19093: LIST
19094: PUSH
19095: LD_INT 2
19097: NEG
19098: PUSH
19099: LD_INT 1
19101: NEG
19102: PUSH
19103: EMPTY
19104: LIST
19105: LIST
19106: PUSH
19107: LD_INT 2
19109: NEG
19110: PUSH
19111: LD_INT 2
19113: NEG
19114: PUSH
19115: EMPTY
19116: LIST
19117: LIST
19118: PUSH
19119: EMPTY
19120: LIST
19121: LIST
19122: LIST
19123: LIST
19124: LIST
19125: LIST
19126: LIST
19127: LIST
19128: LIST
19129: LIST
19130: LIST
19131: LIST
19132: LIST
19133: LIST
19134: LIST
19135: LIST
19136: LIST
19137: LIST
19138: LIST
19139: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19140: LD_ADDR_VAR 0 56
19144: PUSH
19145: LD_INT 0
19147: PUSH
19148: LD_INT 0
19150: PUSH
19151: EMPTY
19152: LIST
19153: LIST
19154: PUSH
19155: LD_INT 0
19157: PUSH
19158: LD_INT 1
19160: NEG
19161: PUSH
19162: EMPTY
19163: LIST
19164: LIST
19165: PUSH
19166: LD_INT 1
19168: PUSH
19169: LD_INT 0
19171: PUSH
19172: EMPTY
19173: LIST
19174: LIST
19175: PUSH
19176: LD_INT 1
19178: PUSH
19179: LD_INT 1
19181: PUSH
19182: EMPTY
19183: LIST
19184: LIST
19185: PUSH
19186: LD_INT 0
19188: PUSH
19189: LD_INT 1
19191: PUSH
19192: EMPTY
19193: LIST
19194: LIST
19195: PUSH
19196: LD_INT 1
19198: NEG
19199: PUSH
19200: LD_INT 0
19202: PUSH
19203: EMPTY
19204: LIST
19205: LIST
19206: PUSH
19207: LD_INT 1
19209: NEG
19210: PUSH
19211: LD_INT 1
19213: NEG
19214: PUSH
19215: EMPTY
19216: LIST
19217: LIST
19218: PUSH
19219: LD_INT 1
19221: NEG
19222: PUSH
19223: LD_INT 2
19225: NEG
19226: PUSH
19227: EMPTY
19228: LIST
19229: LIST
19230: PUSH
19231: LD_INT 0
19233: PUSH
19234: LD_INT 2
19236: NEG
19237: PUSH
19238: EMPTY
19239: LIST
19240: LIST
19241: PUSH
19242: LD_INT 1
19244: PUSH
19245: LD_INT 1
19247: NEG
19248: PUSH
19249: EMPTY
19250: LIST
19251: LIST
19252: PUSH
19253: LD_INT 2
19255: PUSH
19256: LD_INT 0
19258: PUSH
19259: EMPTY
19260: LIST
19261: LIST
19262: PUSH
19263: LD_INT 2
19265: PUSH
19266: LD_INT 1
19268: PUSH
19269: EMPTY
19270: LIST
19271: LIST
19272: PUSH
19273: LD_INT 2
19275: PUSH
19276: LD_INT 2
19278: PUSH
19279: EMPTY
19280: LIST
19281: LIST
19282: PUSH
19283: LD_INT 1
19285: PUSH
19286: LD_INT 2
19288: PUSH
19289: EMPTY
19290: LIST
19291: LIST
19292: PUSH
19293: LD_INT 0
19295: PUSH
19296: LD_INT 2
19298: PUSH
19299: EMPTY
19300: LIST
19301: LIST
19302: PUSH
19303: LD_INT 1
19305: NEG
19306: PUSH
19307: LD_INT 1
19309: PUSH
19310: EMPTY
19311: LIST
19312: LIST
19313: PUSH
19314: LD_INT 2
19316: NEG
19317: PUSH
19318: LD_INT 0
19320: PUSH
19321: EMPTY
19322: LIST
19323: LIST
19324: PUSH
19325: LD_INT 2
19327: NEG
19328: PUSH
19329: LD_INT 1
19331: NEG
19332: PUSH
19333: EMPTY
19334: LIST
19335: LIST
19336: PUSH
19337: LD_INT 2
19339: NEG
19340: PUSH
19341: LD_INT 2
19343: NEG
19344: PUSH
19345: EMPTY
19346: LIST
19347: LIST
19348: PUSH
19349: EMPTY
19350: LIST
19351: LIST
19352: LIST
19353: LIST
19354: LIST
19355: LIST
19356: LIST
19357: LIST
19358: LIST
19359: LIST
19360: LIST
19361: LIST
19362: LIST
19363: LIST
19364: LIST
19365: LIST
19366: LIST
19367: LIST
19368: LIST
19369: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19370: LD_ADDR_VAR 0 57
19374: PUSH
19375: LD_INT 0
19377: PUSH
19378: LD_INT 0
19380: PUSH
19381: EMPTY
19382: LIST
19383: LIST
19384: PUSH
19385: LD_INT 0
19387: PUSH
19388: LD_INT 1
19390: NEG
19391: PUSH
19392: EMPTY
19393: LIST
19394: LIST
19395: PUSH
19396: LD_INT 1
19398: PUSH
19399: LD_INT 0
19401: PUSH
19402: EMPTY
19403: LIST
19404: LIST
19405: PUSH
19406: LD_INT 1
19408: PUSH
19409: LD_INT 1
19411: PUSH
19412: EMPTY
19413: LIST
19414: LIST
19415: PUSH
19416: LD_INT 0
19418: PUSH
19419: LD_INT 1
19421: PUSH
19422: EMPTY
19423: LIST
19424: LIST
19425: PUSH
19426: LD_INT 1
19428: NEG
19429: PUSH
19430: LD_INT 0
19432: PUSH
19433: EMPTY
19434: LIST
19435: LIST
19436: PUSH
19437: LD_INT 1
19439: NEG
19440: PUSH
19441: LD_INT 1
19443: NEG
19444: PUSH
19445: EMPTY
19446: LIST
19447: LIST
19448: PUSH
19449: LD_INT 1
19451: NEG
19452: PUSH
19453: LD_INT 2
19455: NEG
19456: PUSH
19457: EMPTY
19458: LIST
19459: LIST
19460: PUSH
19461: LD_INT 0
19463: PUSH
19464: LD_INT 2
19466: NEG
19467: PUSH
19468: EMPTY
19469: LIST
19470: LIST
19471: PUSH
19472: LD_INT 1
19474: PUSH
19475: LD_INT 1
19477: NEG
19478: PUSH
19479: EMPTY
19480: LIST
19481: LIST
19482: PUSH
19483: LD_INT 2
19485: PUSH
19486: LD_INT 0
19488: PUSH
19489: EMPTY
19490: LIST
19491: LIST
19492: PUSH
19493: LD_INT 2
19495: PUSH
19496: LD_INT 1
19498: PUSH
19499: EMPTY
19500: LIST
19501: LIST
19502: PUSH
19503: LD_INT 2
19505: PUSH
19506: LD_INT 2
19508: PUSH
19509: EMPTY
19510: LIST
19511: LIST
19512: PUSH
19513: LD_INT 1
19515: PUSH
19516: LD_INT 2
19518: PUSH
19519: EMPTY
19520: LIST
19521: LIST
19522: PUSH
19523: LD_INT 0
19525: PUSH
19526: LD_INT 2
19528: PUSH
19529: EMPTY
19530: LIST
19531: LIST
19532: PUSH
19533: LD_INT 1
19535: NEG
19536: PUSH
19537: LD_INT 1
19539: PUSH
19540: EMPTY
19541: LIST
19542: LIST
19543: PUSH
19544: LD_INT 2
19546: NEG
19547: PUSH
19548: LD_INT 0
19550: PUSH
19551: EMPTY
19552: LIST
19553: LIST
19554: PUSH
19555: LD_INT 2
19557: NEG
19558: PUSH
19559: LD_INT 1
19561: NEG
19562: PUSH
19563: EMPTY
19564: LIST
19565: LIST
19566: PUSH
19567: LD_INT 2
19569: NEG
19570: PUSH
19571: LD_INT 2
19573: NEG
19574: PUSH
19575: EMPTY
19576: LIST
19577: LIST
19578: PUSH
19579: EMPTY
19580: LIST
19581: LIST
19582: LIST
19583: LIST
19584: LIST
19585: LIST
19586: LIST
19587: LIST
19588: LIST
19589: LIST
19590: LIST
19591: LIST
19592: LIST
19593: LIST
19594: LIST
19595: LIST
19596: LIST
19597: LIST
19598: LIST
19599: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19600: LD_ADDR_VAR 0 58
19604: PUSH
19605: LD_INT 0
19607: PUSH
19608: LD_INT 0
19610: PUSH
19611: EMPTY
19612: LIST
19613: LIST
19614: PUSH
19615: LD_INT 0
19617: PUSH
19618: LD_INT 1
19620: NEG
19621: PUSH
19622: EMPTY
19623: LIST
19624: LIST
19625: PUSH
19626: LD_INT 1
19628: PUSH
19629: LD_INT 0
19631: PUSH
19632: EMPTY
19633: LIST
19634: LIST
19635: PUSH
19636: LD_INT 1
19638: PUSH
19639: LD_INT 1
19641: PUSH
19642: EMPTY
19643: LIST
19644: LIST
19645: PUSH
19646: LD_INT 0
19648: PUSH
19649: LD_INT 1
19651: PUSH
19652: EMPTY
19653: LIST
19654: LIST
19655: PUSH
19656: LD_INT 1
19658: NEG
19659: PUSH
19660: LD_INT 0
19662: PUSH
19663: EMPTY
19664: LIST
19665: LIST
19666: PUSH
19667: LD_INT 1
19669: NEG
19670: PUSH
19671: LD_INT 1
19673: NEG
19674: PUSH
19675: EMPTY
19676: LIST
19677: LIST
19678: PUSH
19679: LD_INT 1
19681: NEG
19682: PUSH
19683: LD_INT 2
19685: NEG
19686: PUSH
19687: EMPTY
19688: LIST
19689: LIST
19690: PUSH
19691: LD_INT 0
19693: PUSH
19694: LD_INT 2
19696: NEG
19697: PUSH
19698: EMPTY
19699: LIST
19700: LIST
19701: PUSH
19702: LD_INT 1
19704: PUSH
19705: LD_INT 1
19707: NEG
19708: PUSH
19709: EMPTY
19710: LIST
19711: LIST
19712: PUSH
19713: LD_INT 2
19715: PUSH
19716: LD_INT 0
19718: PUSH
19719: EMPTY
19720: LIST
19721: LIST
19722: PUSH
19723: LD_INT 2
19725: PUSH
19726: LD_INT 1
19728: PUSH
19729: EMPTY
19730: LIST
19731: LIST
19732: PUSH
19733: LD_INT 2
19735: PUSH
19736: LD_INT 2
19738: PUSH
19739: EMPTY
19740: LIST
19741: LIST
19742: PUSH
19743: LD_INT 1
19745: PUSH
19746: LD_INT 2
19748: PUSH
19749: EMPTY
19750: LIST
19751: LIST
19752: PUSH
19753: LD_INT 0
19755: PUSH
19756: LD_INT 2
19758: PUSH
19759: EMPTY
19760: LIST
19761: LIST
19762: PUSH
19763: LD_INT 1
19765: NEG
19766: PUSH
19767: LD_INT 1
19769: PUSH
19770: EMPTY
19771: LIST
19772: LIST
19773: PUSH
19774: LD_INT 2
19776: NEG
19777: PUSH
19778: LD_INT 0
19780: PUSH
19781: EMPTY
19782: LIST
19783: LIST
19784: PUSH
19785: LD_INT 2
19787: NEG
19788: PUSH
19789: LD_INT 1
19791: NEG
19792: PUSH
19793: EMPTY
19794: LIST
19795: LIST
19796: PUSH
19797: LD_INT 2
19799: NEG
19800: PUSH
19801: LD_INT 2
19803: NEG
19804: PUSH
19805: EMPTY
19806: LIST
19807: LIST
19808: PUSH
19809: EMPTY
19810: LIST
19811: LIST
19812: LIST
19813: LIST
19814: LIST
19815: LIST
19816: LIST
19817: LIST
19818: LIST
19819: LIST
19820: LIST
19821: LIST
19822: LIST
19823: LIST
19824: LIST
19825: LIST
19826: LIST
19827: LIST
19828: LIST
19829: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19830: LD_ADDR_VAR 0 59
19834: PUSH
19835: LD_INT 0
19837: PUSH
19838: LD_INT 0
19840: PUSH
19841: EMPTY
19842: LIST
19843: LIST
19844: PUSH
19845: LD_INT 0
19847: PUSH
19848: LD_INT 1
19850: NEG
19851: PUSH
19852: EMPTY
19853: LIST
19854: LIST
19855: PUSH
19856: LD_INT 1
19858: PUSH
19859: LD_INT 0
19861: PUSH
19862: EMPTY
19863: LIST
19864: LIST
19865: PUSH
19866: LD_INT 1
19868: PUSH
19869: LD_INT 1
19871: PUSH
19872: EMPTY
19873: LIST
19874: LIST
19875: PUSH
19876: LD_INT 0
19878: PUSH
19879: LD_INT 1
19881: PUSH
19882: EMPTY
19883: LIST
19884: LIST
19885: PUSH
19886: LD_INT 1
19888: NEG
19889: PUSH
19890: LD_INT 0
19892: PUSH
19893: EMPTY
19894: LIST
19895: LIST
19896: PUSH
19897: LD_INT 1
19899: NEG
19900: PUSH
19901: LD_INT 1
19903: NEG
19904: PUSH
19905: EMPTY
19906: LIST
19907: LIST
19908: PUSH
19909: EMPTY
19910: LIST
19911: LIST
19912: LIST
19913: LIST
19914: LIST
19915: LIST
19916: LIST
19917: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19918: LD_ADDR_VAR 0 60
19922: PUSH
19923: LD_INT 0
19925: PUSH
19926: LD_INT 0
19928: PUSH
19929: EMPTY
19930: LIST
19931: LIST
19932: PUSH
19933: LD_INT 0
19935: PUSH
19936: LD_INT 1
19938: NEG
19939: PUSH
19940: EMPTY
19941: LIST
19942: LIST
19943: PUSH
19944: LD_INT 1
19946: PUSH
19947: LD_INT 0
19949: PUSH
19950: EMPTY
19951: LIST
19952: LIST
19953: PUSH
19954: LD_INT 1
19956: PUSH
19957: LD_INT 1
19959: PUSH
19960: EMPTY
19961: LIST
19962: LIST
19963: PUSH
19964: LD_INT 0
19966: PUSH
19967: LD_INT 1
19969: PUSH
19970: EMPTY
19971: LIST
19972: LIST
19973: PUSH
19974: LD_INT 1
19976: NEG
19977: PUSH
19978: LD_INT 0
19980: PUSH
19981: EMPTY
19982: LIST
19983: LIST
19984: PUSH
19985: LD_INT 1
19987: NEG
19988: PUSH
19989: LD_INT 1
19991: NEG
19992: PUSH
19993: EMPTY
19994: LIST
19995: LIST
19996: PUSH
19997: EMPTY
19998: LIST
19999: LIST
20000: LIST
20001: LIST
20002: LIST
20003: LIST
20004: LIST
20005: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20006: LD_ADDR_VAR 0 61
20010: PUSH
20011: LD_INT 0
20013: PUSH
20014: LD_INT 0
20016: PUSH
20017: EMPTY
20018: LIST
20019: LIST
20020: PUSH
20021: LD_INT 0
20023: PUSH
20024: LD_INT 1
20026: NEG
20027: PUSH
20028: EMPTY
20029: LIST
20030: LIST
20031: PUSH
20032: LD_INT 1
20034: PUSH
20035: LD_INT 0
20037: PUSH
20038: EMPTY
20039: LIST
20040: LIST
20041: PUSH
20042: LD_INT 1
20044: PUSH
20045: LD_INT 1
20047: PUSH
20048: EMPTY
20049: LIST
20050: LIST
20051: PUSH
20052: LD_INT 0
20054: PUSH
20055: LD_INT 1
20057: PUSH
20058: EMPTY
20059: LIST
20060: LIST
20061: PUSH
20062: LD_INT 1
20064: NEG
20065: PUSH
20066: LD_INT 0
20068: PUSH
20069: EMPTY
20070: LIST
20071: LIST
20072: PUSH
20073: LD_INT 1
20075: NEG
20076: PUSH
20077: LD_INT 1
20079: NEG
20080: PUSH
20081: EMPTY
20082: LIST
20083: LIST
20084: PUSH
20085: EMPTY
20086: LIST
20087: LIST
20088: LIST
20089: LIST
20090: LIST
20091: LIST
20092: LIST
20093: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20094: LD_ADDR_VAR 0 62
20098: PUSH
20099: LD_INT 0
20101: PUSH
20102: LD_INT 0
20104: PUSH
20105: EMPTY
20106: LIST
20107: LIST
20108: PUSH
20109: LD_INT 0
20111: PUSH
20112: LD_INT 1
20114: NEG
20115: PUSH
20116: EMPTY
20117: LIST
20118: LIST
20119: PUSH
20120: LD_INT 1
20122: PUSH
20123: LD_INT 0
20125: PUSH
20126: EMPTY
20127: LIST
20128: LIST
20129: PUSH
20130: LD_INT 1
20132: PUSH
20133: LD_INT 1
20135: PUSH
20136: EMPTY
20137: LIST
20138: LIST
20139: PUSH
20140: LD_INT 0
20142: PUSH
20143: LD_INT 1
20145: PUSH
20146: EMPTY
20147: LIST
20148: LIST
20149: PUSH
20150: LD_INT 1
20152: NEG
20153: PUSH
20154: LD_INT 0
20156: PUSH
20157: EMPTY
20158: LIST
20159: LIST
20160: PUSH
20161: LD_INT 1
20163: NEG
20164: PUSH
20165: LD_INT 1
20167: NEG
20168: PUSH
20169: EMPTY
20170: LIST
20171: LIST
20172: PUSH
20173: EMPTY
20174: LIST
20175: LIST
20176: LIST
20177: LIST
20178: LIST
20179: LIST
20180: LIST
20181: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20182: LD_ADDR_VAR 0 63
20186: PUSH
20187: LD_INT 0
20189: PUSH
20190: LD_INT 0
20192: PUSH
20193: EMPTY
20194: LIST
20195: LIST
20196: PUSH
20197: LD_INT 0
20199: PUSH
20200: LD_INT 1
20202: NEG
20203: PUSH
20204: EMPTY
20205: LIST
20206: LIST
20207: PUSH
20208: LD_INT 1
20210: PUSH
20211: LD_INT 0
20213: PUSH
20214: EMPTY
20215: LIST
20216: LIST
20217: PUSH
20218: LD_INT 1
20220: PUSH
20221: LD_INT 1
20223: PUSH
20224: EMPTY
20225: LIST
20226: LIST
20227: PUSH
20228: LD_INT 0
20230: PUSH
20231: LD_INT 1
20233: PUSH
20234: EMPTY
20235: LIST
20236: LIST
20237: PUSH
20238: LD_INT 1
20240: NEG
20241: PUSH
20242: LD_INT 0
20244: PUSH
20245: EMPTY
20246: LIST
20247: LIST
20248: PUSH
20249: LD_INT 1
20251: NEG
20252: PUSH
20253: LD_INT 1
20255: NEG
20256: PUSH
20257: EMPTY
20258: LIST
20259: LIST
20260: PUSH
20261: EMPTY
20262: LIST
20263: LIST
20264: LIST
20265: LIST
20266: LIST
20267: LIST
20268: LIST
20269: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20270: LD_ADDR_VAR 0 64
20274: PUSH
20275: LD_INT 0
20277: PUSH
20278: LD_INT 0
20280: PUSH
20281: EMPTY
20282: LIST
20283: LIST
20284: PUSH
20285: LD_INT 0
20287: PUSH
20288: LD_INT 1
20290: NEG
20291: PUSH
20292: EMPTY
20293: LIST
20294: LIST
20295: PUSH
20296: LD_INT 1
20298: PUSH
20299: LD_INT 0
20301: PUSH
20302: EMPTY
20303: LIST
20304: LIST
20305: PUSH
20306: LD_INT 1
20308: PUSH
20309: LD_INT 1
20311: PUSH
20312: EMPTY
20313: LIST
20314: LIST
20315: PUSH
20316: LD_INT 0
20318: PUSH
20319: LD_INT 1
20321: PUSH
20322: EMPTY
20323: LIST
20324: LIST
20325: PUSH
20326: LD_INT 1
20328: NEG
20329: PUSH
20330: LD_INT 0
20332: PUSH
20333: EMPTY
20334: LIST
20335: LIST
20336: PUSH
20337: LD_INT 1
20339: NEG
20340: PUSH
20341: LD_INT 1
20343: NEG
20344: PUSH
20345: EMPTY
20346: LIST
20347: LIST
20348: PUSH
20349: EMPTY
20350: LIST
20351: LIST
20352: LIST
20353: LIST
20354: LIST
20355: LIST
20356: LIST
20357: ST_TO_ADDR
// end ; 1 :
20358: GO 26255
20360: LD_INT 1
20362: DOUBLE
20363: EQUAL
20364: IFTRUE 20368
20366: GO 22991
20368: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20369: LD_ADDR_VAR 0 11
20373: PUSH
20374: LD_INT 1
20376: NEG
20377: PUSH
20378: LD_INT 3
20380: NEG
20381: PUSH
20382: EMPTY
20383: LIST
20384: LIST
20385: PUSH
20386: LD_INT 0
20388: PUSH
20389: LD_INT 3
20391: NEG
20392: PUSH
20393: EMPTY
20394: LIST
20395: LIST
20396: PUSH
20397: LD_INT 1
20399: PUSH
20400: LD_INT 2
20402: NEG
20403: PUSH
20404: EMPTY
20405: LIST
20406: LIST
20407: PUSH
20408: EMPTY
20409: LIST
20410: LIST
20411: LIST
20412: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20413: LD_ADDR_VAR 0 12
20417: PUSH
20418: LD_INT 2
20420: PUSH
20421: LD_INT 1
20423: NEG
20424: PUSH
20425: EMPTY
20426: LIST
20427: LIST
20428: PUSH
20429: LD_INT 3
20431: PUSH
20432: LD_INT 0
20434: PUSH
20435: EMPTY
20436: LIST
20437: LIST
20438: PUSH
20439: LD_INT 3
20441: PUSH
20442: LD_INT 1
20444: PUSH
20445: EMPTY
20446: LIST
20447: LIST
20448: PUSH
20449: EMPTY
20450: LIST
20451: LIST
20452: LIST
20453: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20454: LD_ADDR_VAR 0 13
20458: PUSH
20459: LD_INT 3
20461: PUSH
20462: LD_INT 2
20464: PUSH
20465: EMPTY
20466: LIST
20467: LIST
20468: PUSH
20469: LD_INT 3
20471: PUSH
20472: LD_INT 3
20474: PUSH
20475: EMPTY
20476: LIST
20477: LIST
20478: PUSH
20479: LD_INT 2
20481: PUSH
20482: LD_INT 3
20484: PUSH
20485: EMPTY
20486: LIST
20487: LIST
20488: PUSH
20489: EMPTY
20490: LIST
20491: LIST
20492: LIST
20493: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20494: LD_ADDR_VAR 0 14
20498: PUSH
20499: LD_INT 1
20501: PUSH
20502: LD_INT 3
20504: PUSH
20505: EMPTY
20506: LIST
20507: LIST
20508: PUSH
20509: LD_INT 0
20511: PUSH
20512: LD_INT 3
20514: PUSH
20515: EMPTY
20516: LIST
20517: LIST
20518: PUSH
20519: LD_INT 1
20521: NEG
20522: PUSH
20523: LD_INT 2
20525: PUSH
20526: EMPTY
20527: LIST
20528: LIST
20529: PUSH
20530: EMPTY
20531: LIST
20532: LIST
20533: LIST
20534: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20535: LD_ADDR_VAR 0 15
20539: PUSH
20540: LD_INT 2
20542: NEG
20543: PUSH
20544: LD_INT 1
20546: PUSH
20547: EMPTY
20548: LIST
20549: LIST
20550: PUSH
20551: LD_INT 3
20553: NEG
20554: PUSH
20555: LD_INT 0
20557: PUSH
20558: EMPTY
20559: LIST
20560: LIST
20561: PUSH
20562: LD_INT 3
20564: NEG
20565: PUSH
20566: LD_INT 1
20568: NEG
20569: PUSH
20570: EMPTY
20571: LIST
20572: LIST
20573: PUSH
20574: EMPTY
20575: LIST
20576: LIST
20577: LIST
20578: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20579: LD_ADDR_VAR 0 16
20583: PUSH
20584: LD_INT 2
20586: NEG
20587: PUSH
20588: LD_INT 3
20590: NEG
20591: PUSH
20592: EMPTY
20593: LIST
20594: LIST
20595: PUSH
20596: LD_INT 3
20598: NEG
20599: PUSH
20600: LD_INT 2
20602: NEG
20603: PUSH
20604: EMPTY
20605: LIST
20606: LIST
20607: PUSH
20608: LD_INT 3
20610: NEG
20611: PUSH
20612: LD_INT 3
20614: NEG
20615: PUSH
20616: EMPTY
20617: LIST
20618: LIST
20619: PUSH
20620: EMPTY
20621: LIST
20622: LIST
20623: LIST
20624: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20625: LD_ADDR_VAR 0 17
20629: PUSH
20630: LD_INT 1
20632: NEG
20633: PUSH
20634: LD_INT 3
20636: NEG
20637: PUSH
20638: EMPTY
20639: LIST
20640: LIST
20641: PUSH
20642: LD_INT 0
20644: PUSH
20645: LD_INT 3
20647: NEG
20648: PUSH
20649: EMPTY
20650: LIST
20651: LIST
20652: PUSH
20653: LD_INT 1
20655: PUSH
20656: LD_INT 2
20658: NEG
20659: PUSH
20660: EMPTY
20661: LIST
20662: LIST
20663: PUSH
20664: EMPTY
20665: LIST
20666: LIST
20667: LIST
20668: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20669: LD_ADDR_VAR 0 18
20673: PUSH
20674: LD_INT 2
20676: PUSH
20677: LD_INT 1
20679: NEG
20680: PUSH
20681: EMPTY
20682: LIST
20683: LIST
20684: PUSH
20685: LD_INT 3
20687: PUSH
20688: LD_INT 0
20690: PUSH
20691: EMPTY
20692: LIST
20693: LIST
20694: PUSH
20695: LD_INT 3
20697: PUSH
20698: LD_INT 1
20700: PUSH
20701: EMPTY
20702: LIST
20703: LIST
20704: PUSH
20705: EMPTY
20706: LIST
20707: LIST
20708: LIST
20709: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20710: LD_ADDR_VAR 0 19
20714: PUSH
20715: LD_INT 3
20717: PUSH
20718: LD_INT 2
20720: PUSH
20721: EMPTY
20722: LIST
20723: LIST
20724: PUSH
20725: LD_INT 3
20727: PUSH
20728: LD_INT 3
20730: PUSH
20731: EMPTY
20732: LIST
20733: LIST
20734: PUSH
20735: LD_INT 2
20737: PUSH
20738: LD_INT 3
20740: PUSH
20741: EMPTY
20742: LIST
20743: LIST
20744: PUSH
20745: EMPTY
20746: LIST
20747: LIST
20748: LIST
20749: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20750: LD_ADDR_VAR 0 20
20754: PUSH
20755: LD_INT 1
20757: PUSH
20758: LD_INT 3
20760: PUSH
20761: EMPTY
20762: LIST
20763: LIST
20764: PUSH
20765: LD_INT 0
20767: PUSH
20768: LD_INT 3
20770: PUSH
20771: EMPTY
20772: LIST
20773: LIST
20774: PUSH
20775: LD_INT 1
20777: NEG
20778: PUSH
20779: LD_INT 2
20781: PUSH
20782: EMPTY
20783: LIST
20784: LIST
20785: PUSH
20786: EMPTY
20787: LIST
20788: LIST
20789: LIST
20790: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20791: LD_ADDR_VAR 0 21
20795: PUSH
20796: LD_INT 2
20798: NEG
20799: PUSH
20800: LD_INT 1
20802: PUSH
20803: EMPTY
20804: LIST
20805: LIST
20806: PUSH
20807: LD_INT 3
20809: NEG
20810: PUSH
20811: LD_INT 0
20813: PUSH
20814: EMPTY
20815: LIST
20816: LIST
20817: PUSH
20818: LD_INT 3
20820: NEG
20821: PUSH
20822: LD_INT 1
20824: NEG
20825: PUSH
20826: EMPTY
20827: LIST
20828: LIST
20829: PUSH
20830: EMPTY
20831: LIST
20832: LIST
20833: LIST
20834: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20835: LD_ADDR_VAR 0 22
20839: PUSH
20840: LD_INT 2
20842: NEG
20843: PUSH
20844: LD_INT 3
20846: NEG
20847: PUSH
20848: EMPTY
20849: LIST
20850: LIST
20851: PUSH
20852: LD_INT 3
20854: NEG
20855: PUSH
20856: LD_INT 2
20858: NEG
20859: PUSH
20860: EMPTY
20861: LIST
20862: LIST
20863: PUSH
20864: LD_INT 3
20866: NEG
20867: PUSH
20868: LD_INT 3
20870: NEG
20871: PUSH
20872: EMPTY
20873: LIST
20874: LIST
20875: PUSH
20876: EMPTY
20877: LIST
20878: LIST
20879: LIST
20880: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20881: LD_ADDR_VAR 0 23
20885: PUSH
20886: LD_INT 0
20888: PUSH
20889: LD_INT 3
20891: NEG
20892: PUSH
20893: EMPTY
20894: LIST
20895: LIST
20896: PUSH
20897: LD_INT 1
20899: NEG
20900: PUSH
20901: LD_INT 4
20903: NEG
20904: PUSH
20905: EMPTY
20906: LIST
20907: LIST
20908: PUSH
20909: LD_INT 1
20911: PUSH
20912: LD_INT 3
20914: NEG
20915: PUSH
20916: EMPTY
20917: LIST
20918: LIST
20919: PUSH
20920: EMPTY
20921: LIST
20922: LIST
20923: LIST
20924: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20925: LD_ADDR_VAR 0 24
20929: PUSH
20930: LD_INT 3
20932: PUSH
20933: LD_INT 0
20935: PUSH
20936: EMPTY
20937: LIST
20938: LIST
20939: PUSH
20940: LD_INT 3
20942: PUSH
20943: LD_INT 1
20945: NEG
20946: PUSH
20947: EMPTY
20948: LIST
20949: LIST
20950: PUSH
20951: LD_INT 4
20953: PUSH
20954: LD_INT 1
20956: PUSH
20957: EMPTY
20958: LIST
20959: LIST
20960: PUSH
20961: EMPTY
20962: LIST
20963: LIST
20964: LIST
20965: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20966: LD_ADDR_VAR 0 25
20970: PUSH
20971: LD_INT 3
20973: PUSH
20974: LD_INT 3
20976: PUSH
20977: EMPTY
20978: LIST
20979: LIST
20980: PUSH
20981: LD_INT 4
20983: PUSH
20984: LD_INT 3
20986: PUSH
20987: EMPTY
20988: LIST
20989: LIST
20990: PUSH
20991: LD_INT 3
20993: PUSH
20994: LD_INT 4
20996: PUSH
20997: EMPTY
20998: LIST
20999: LIST
21000: PUSH
21001: EMPTY
21002: LIST
21003: LIST
21004: LIST
21005: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21006: LD_ADDR_VAR 0 26
21010: PUSH
21011: LD_INT 0
21013: PUSH
21014: LD_INT 3
21016: PUSH
21017: EMPTY
21018: LIST
21019: LIST
21020: PUSH
21021: LD_INT 1
21023: PUSH
21024: LD_INT 4
21026: PUSH
21027: EMPTY
21028: LIST
21029: LIST
21030: PUSH
21031: LD_INT 1
21033: NEG
21034: PUSH
21035: LD_INT 3
21037: PUSH
21038: EMPTY
21039: LIST
21040: LIST
21041: PUSH
21042: EMPTY
21043: LIST
21044: LIST
21045: LIST
21046: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21047: LD_ADDR_VAR 0 27
21051: PUSH
21052: LD_INT 3
21054: NEG
21055: PUSH
21056: LD_INT 0
21058: PUSH
21059: EMPTY
21060: LIST
21061: LIST
21062: PUSH
21063: LD_INT 3
21065: NEG
21066: PUSH
21067: LD_INT 1
21069: PUSH
21070: EMPTY
21071: LIST
21072: LIST
21073: PUSH
21074: LD_INT 4
21076: NEG
21077: PUSH
21078: LD_INT 1
21080: NEG
21081: PUSH
21082: EMPTY
21083: LIST
21084: LIST
21085: PUSH
21086: EMPTY
21087: LIST
21088: LIST
21089: LIST
21090: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21091: LD_ADDR_VAR 0 28
21095: PUSH
21096: LD_INT 3
21098: NEG
21099: PUSH
21100: LD_INT 3
21102: NEG
21103: PUSH
21104: EMPTY
21105: LIST
21106: LIST
21107: PUSH
21108: LD_INT 3
21110: NEG
21111: PUSH
21112: LD_INT 4
21114: NEG
21115: PUSH
21116: EMPTY
21117: LIST
21118: LIST
21119: PUSH
21120: LD_INT 4
21122: NEG
21123: PUSH
21124: LD_INT 3
21126: NEG
21127: PUSH
21128: EMPTY
21129: LIST
21130: LIST
21131: PUSH
21132: EMPTY
21133: LIST
21134: LIST
21135: LIST
21136: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21137: LD_ADDR_VAR 0 29
21141: PUSH
21142: LD_INT 1
21144: NEG
21145: PUSH
21146: LD_INT 3
21148: NEG
21149: PUSH
21150: EMPTY
21151: LIST
21152: LIST
21153: PUSH
21154: LD_INT 0
21156: PUSH
21157: LD_INT 3
21159: NEG
21160: PUSH
21161: EMPTY
21162: LIST
21163: LIST
21164: PUSH
21165: LD_INT 1
21167: PUSH
21168: LD_INT 2
21170: NEG
21171: PUSH
21172: EMPTY
21173: LIST
21174: LIST
21175: PUSH
21176: LD_INT 1
21178: NEG
21179: PUSH
21180: LD_INT 4
21182: NEG
21183: PUSH
21184: EMPTY
21185: LIST
21186: LIST
21187: PUSH
21188: LD_INT 0
21190: PUSH
21191: LD_INT 4
21193: NEG
21194: PUSH
21195: EMPTY
21196: LIST
21197: LIST
21198: PUSH
21199: LD_INT 1
21201: PUSH
21202: LD_INT 3
21204: NEG
21205: PUSH
21206: EMPTY
21207: LIST
21208: LIST
21209: PUSH
21210: LD_INT 1
21212: NEG
21213: PUSH
21214: LD_INT 5
21216: NEG
21217: PUSH
21218: EMPTY
21219: LIST
21220: LIST
21221: PUSH
21222: LD_INT 0
21224: PUSH
21225: LD_INT 5
21227: NEG
21228: PUSH
21229: EMPTY
21230: LIST
21231: LIST
21232: PUSH
21233: LD_INT 1
21235: PUSH
21236: LD_INT 4
21238: NEG
21239: PUSH
21240: EMPTY
21241: LIST
21242: LIST
21243: PUSH
21244: LD_INT 1
21246: NEG
21247: PUSH
21248: LD_INT 6
21250: NEG
21251: PUSH
21252: EMPTY
21253: LIST
21254: LIST
21255: PUSH
21256: LD_INT 0
21258: PUSH
21259: LD_INT 6
21261: NEG
21262: PUSH
21263: EMPTY
21264: LIST
21265: LIST
21266: PUSH
21267: LD_INT 1
21269: PUSH
21270: LD_INT 5
21272: NEG
21273: PUSH
21274: EMPTY
21275: LIST
21276: LIST
21277: PUSH
21278: EMPTY
21279: LIST
21280: LIST
21281: LIST
21282: LIST
21283: LIST
21284: LIST
21285: LIST
21286: LIST
21287: LIST
21288: LIST
21289: LIST
21290: LIST
21291: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21292: LD_ADDR_VAR 0 30
21296: PUSH
21297: LD_INT 2
21299: PUSH
21300: LD_INT 1
21302: NEG
21303: PUSH
21304: EMPTY
21305: LIST
21306: LIST
21307: PUSH
21308: LD_INT 3
21310: PUSH
21311: LD_INT 0
21313: PUSH
21314: EMPTY
21315: LIST
21316: LIST
21317: PUSH
21318: LD_INT 3
21320: PUSH
21321: LD_INT 1
21323: PUSH
21324: EMPTY
21325: LIST
21326: LIST
21327: PUSH
21328: LD_INT 3
21330: PUSH
21331: LD_INT 1
21333: NEG
21334: PUSH
21335: EMPTY
21336: LIST
21337: LIST
21338: PUSH
21339: LD_INT 4
21341: PUSH
21342: LD_INT 0
21344: PUSH
21345: EMPTY
21346: LIST
21347: LIST
21348: PUSH
21349: LD_INT 4
21351: PUSH
21352: LD_INT 1
21354: PUSH
21355: EMPTY
21356: LIST
21357: LIST
21358: PUSH
21359: LD_INT 4
21361: PUSH
21362: LD_INT 1
21364: NEG
21365: PUSH
21366: EMPTY
21367: LIST
21368: LIST
21369: PUSH
21370: LD_INT 5
21372: PUSH
21373: LD_INT 0
21375: PUSH
21376: EMPTY
21377: LIST
21378: LIST
21379: PUSH
21380: LD_INT 5
21382: PUSH
21383: LD_INT 1
21385: PUSH
21386: EMPTY
21387: LIST
21388: LIST
21389: PUSH
21390: LD_INT 5
21392: PUSH
21393: LD_INT 1
21395: NEG
21396: PUSH
21397: EMPTY
21398: LIST
21399: LIST
21400: PUSH
21401: LD_INT 6
21403: PUSH
21404: LD_INT 0
21406: PUSH
21407: EMPTY
21408: LIST
21409: LIST
21410: PUSH
21411: LD_INT 6
21413: PUSH
21414: LD_INT 1
21416: PUSH
21417: EMPTY
21418: LIST
21419: LIST
21420: PUSH
21421: EMPTY
21422: LIST
21423: LIST
21424: LIST
21425: LIST
21426: LIST
21427: LIST
21428: LIST
21429: LIST
21430: LIST
21431: LIST
21432: LIST
21433: LIST
21434: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21435: LD_ADDR_VAR 0 31
21439: PUSH
21440: LD_INT 3
21442: PUSH
21443: LD_INT 2
21445: PUSH
21446: EMPTY
21447: LIST
21448: LIST
21449: PUSH
21450: LD_INT 3
21452: PUSH
21453: LD_INT 3
21455: PUSH
21456: EMPTY
21457: LIST
21458: LIST
21459: PUSH
21460: LD_INT 2
21462: PUSH
21463: LD_INT 3
21465: PUSH
21466: EMPTY
21467: LIST
21468: LIST
21469: PUSH
21470: LD_INT 4
21472: PUSH
21473: LD_INT 3
21475: PUSH
21476: EMPTY
21477: LIST
21478: LIST
21479: PUSH
21480: LD_INT 4
21482: PUSH
21483: LD_INT 4
21485: PUSH
21486: EMPTY
21487: LIST
21488: LIST
21489: PUSH
21490: LD_INT 3
21492: PUSH
21493: LD_INT 4
21495: PUSH
21496: EMPTY
21497: LIST
21498: LIST
21499: PUSH
21500: LD_INT 5
21502: PUSH
21503: LD_INT 4
21505: PUSH
21506: EMPTY
21507: LIST
21508: LIST
21509: PUSH
21510: LD_INT 5
21512: PUSH
21513: LD_INT 5
21515: PUSH
21516: EMPTY
21517: LIST
21518: LIST
21519: PUSH
21520: LD_INT 4
21522: PUSH
21523: LD_INT 5
21525: PUSH
21526: EMPTY
21527: LIST
21528: LIST
21529: PUSH
21530: LD_INT 6
21532: PUSH
21533: LD_INT 5
21535: PUSH
21536: EMPTY
21537: LIST
21538: LIST
21539: PUSH
21540: LD_INT 6
21542: PUSH
21543: LD_INT 6
21545: PUSH
21546: EMPTY
21547: LIST
21548: LIST
21549: PUSH
21550: LD_INT 5
21552: PUSH
21553: LD_INT 6
21555: PUSH
21556: EMPTY
21557: LIST
21558: LIST
21559: PUSH
21560: EMPTY
21561: LIST
21562: LIST
21563: LIST
21564: LIST
21565: LIST
21566: LIST
21567: LIST
21568: LIST
21569: LIST
21570: LIST
21571: LIST
21572: LIST
21573: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21574: LD_ADDR_VAR 0 32
21578: PUSH
21579: LD_INT 1
21581: PUSH
21582: LD_INT 3
21584: PUSH
21585: EMPTY
21586: LIST
21587: LIST
21588: PUSH
21589: LD_INT 0
21591: PUSH
21592: LD_INT 3
21594: PUSH
21595: EMPTY
21596: LIST
21597: LIST
21598: PUSH
21599: LD_INT 1
21601: NEG
21602: PUSH
21603: LD_INT 2
21605: PUSH
21606: EMPTY
21607: LIST
21608: LIST
21609: PUSH
21610: LD_INT 1
21612: PUSH
21613: LD_INT 4
21615: PUSH
21616: EMPTY
21617: LIST
21618: LIST
21619: PUSH
21620: LD_INT 0
21622: PUSH
21623: LD_INT 4
21625: PUSH
21626: EMPTY
21627: LIST
21628: LIST
21629: PUSH
21630: LD_INT 1
21632: NEG
21633: PUSH
21634: LD_INT 3
21636: PUSH
21637: EMPTY
21638: LIST
21639: LIST
21640: PUSH
21641: LD_INT 1
21643: PUSH
21644: LD_INT 5
21646: PUSH
21647: EMPTY
21648: LIST
21649: LIST
21650: PUSH
21651: LD_INT 0
21653: PUSH
21654: LD_INT 5
21656: PUSH
21657: EMPTY
21658: LIST
21659: LIST
21660: PUSH
21661: LD_INT 1
21663: NEG
21664: PUSH
21665: LD_INT 4
21667: PUSH
21668: EMPTY
21669: LIST
21670: LIST
21671: PUSH
21672: LD_INT 1
21674: PUSH
21675: LD_INT 6
21677: PUSH
21678: EMPTY
21679: LIST
21680: LIST
21681: PUSH
21682: LD_INT 0
21684: PUSH
21685: LD_INT 6
21687: PUSH
21688: EMPTY
21689: LIST
21690: LIST
21691: PUSH
21692: LD_INT 1
21694: NEG
21695: PUSH
21696: LD_INT 5
21698: PUSH
21699: EMPTY
21700: LIST
21701: LIST
21702: PUSH
21703: EMPTY
21704: LIST
21705: LIST
21706: LIST
21707: LIST
21708: LIST
21709: LIST
21710: LIST
21711: LIST
21712: LIST
21713: LIST
21714: LIST
21715: LIST
21716: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21717: LD_ADDR_VAR 0 33
21721: PUSH
21722: LD_INT 2
21724: NEG
21725: PUSH
21726: LD_INT 1
21728: PUSH
21729: EMPTY
21730: LIST
21731: LIST
21732: PUSH
21733: LD_INT 3
21735: NEG
21736: PUSH
21737: LD_INT 0
21739: PUSH
21740: EMPTY
21741: LIST
21742: LIST
21743: PUSH
21744: LD_INT 3
21746: NEG
21747: PUSH
21748: LD_INT 1
21750: NEG
21751: PUSH
21752: EMPTY
21753: LIST
21754: LIST
21755: PUSH
21756: LD_INT 3
21758: NEG
21759: PUSH
21760: LD_INT 1
21762: PUSH
21763: EMPTY
21764: LIST
21765: LIST
21766: PUSH
21767: LD_INT 4
21769: NEG
21770: PUSH
21771: LD_INT 0
21773: PUSH
21774: EMPTY
21775: LIST
21776: LIST
21777: PUSH
21778: LD_INT 4
21780: NEG
21781: PUSH
21782: LD_INT 1
21784: NEG
21785: PUSH
21786: EMPTY
21787: LIST
21788: LIST
21789: PUSH
21790: LD_INT 4
21792: NEG
21793: PUSH
21794: LD_INT 1
21796: PUSH
21797: EMPTY
21798: LIST
21799: LIST
21800: PUSH
21801: LD_INT 5
21803: NEG
21804: PUSH
21805: LD_INT 0
21807: PUSH
21808: EMPTY
21809: LIST
21810: LIST
21811: PUSH
21812: LD_INT 5
21814: NEG
21815: PUSH
21816: LD_INT 1
21818: NEG
21819: PUSH
21820: EMPTY
21821: LIST
21822: LIST
21823: PUSH
21824: LD_INT 5
21826: NEG
21827: PUSH
21828: LD_INT 1
21830: PUSH
21831: EMPTY
21832: LIST
21833: LIST
21834: PUSH
21835: LD_INT 6
21837: NEG
21838: PUSH
21839: LD_INT 0
21841: PUSH
21842: EMPTY
21843: LIST
21844: LIST
21845: PUSH
21846: LD_INT 6
21848: NEG
21849: PUSH
21850: LD_INT 1
21852: NEG
21853: PUSH
21854: EMPTY
21855: LIST
21856: LIST
21857: PUSH
21858: EMPTY
21859: LIST
21860: LIST
21861: LIST
21862: LIST
21863: LIST
21864: LIST
21865: LIST
21866: LIST
21867: LIST
21868: LIST
21869: LIST
21870: LIST
21871: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21872: LD_ADDR_VAR 0 34
21876: PUSH
21877: LD_INT 2
21879: NEG
21880: PUSH
21881: LD_INT 3
21883: NEG
21884: PUSH
21885: EMPTY
21886: LIST
21887: LIST
21888: PUSH
21889: LD_INT 3
21891: NEG
21892: PUSH
21893: LD_INT 2
21895: NEG
21896: PUSH
21897: EMPTY
21898: LIST
21899: LIST
21900: PUSH
21901: LD_INT 3
21903: NEG
21904: PUSH
21905: LD_INT 3
21907: NEG
21908: PUSH
21909: EMPTY
21910: LIST
21911: LIST
21912: PUSH
21913: LD_INT 3
21915: NEG
21916: PUSH
21917: LD_INT 4
21919: NEG
21920: PUSH
21921: EMPTY
21922: LIST
21923: LIST
21924: PUSH
21925: LD_INT 4
21927: NEG
21928: PUSH
21929: LD_INT 3
21931: NEG
21932: PUSH
21933: EMPTY
21934: LIST
21935: LIST
21936: PUSH
21937: LD_INT 4
21939: NEG
21940: PUSH
21941: LD_INT 4
21943: NEG
21944: PUSH
21945: EMPTY
21946: LIST
21947: LIST
21948: PUSH
21949: LD_INT 4
21951: NEG
21952: PUSH
21953: LD_INT 5
21955: NEG
21956: PUSH
21957: EMPTY
21958: LIST
21959: LIST
21960: PUSH
21961: LD_INT 5
21963: NEG
21964: PUSH
21965: LD_INT 4
21967: NEG
21968: PUSH
21969: EMPTY
21970: LIST
21971: LIST
21972: PUSH
21973: LD_INT 5
21975: NEG
21976: PUSH
21977: LD_INT 5
21979: NEG
21980: PUSH
21981: EMPTY
21982: LIST
21983: LIST
21984: PUSH
21985: LD_INT 5
21987: NEG
21988: PUSH
21989: LD_INT 6
21991: NEG
21992: PUSH
21993: EMPTY
21994: LIST
21995: LIST
21996: PUSH
21997: LD_INT 6
21999: NEG
22000: PUSH
22001: LD_INT 5
22003: NEG
22004: PUSH
22005: EMPTY
22006: LIST
22007: LIST
22008: PUSH
22009: LD_INT 6
22011: NEG
22012: PUSH
22013: LD_INT 6
22015: NEG
22016: PUSH
22017: EMPTY
22018: LIST
22019: LIST
22020: PUSH
22021: EMPTY
22022: LIST
22023: LIST
22024: LIST
22025: LIST
22026: LIST
22027: LIST
22028: LIST
22029: LIST
22030: LIST
22031: LIST
22032: LIST
22033: LIST
22034: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22035: LD_ADDR_VAR 0 41
22039: PUSH
22040: LD_INT 0
22042: PUSH
22043: LD_INT 2
22045: NEG
22046: PUSH
22047: EMPTY
22048: LIST
22049: LIST
22050: PUSH
22051: LD_INT 1
22053: NEG
22054: PUSH
22055: LD_INT 3
22057: NEG
22058: PUSH
22059: EMPTY
22060: LIST
22061: LIST
22062: PUSH
22063: LD_INT 1
22065: PUSH
22066: LD_INT 2
22068: NEG
22069: PUSH
22070: EMPTY
22071: LIST
22072: LIST
22073: PUSH
22074: EMPTY
22075: LIST
22076: LIST
22077: LIST
22078: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22079: LD_ADDR_VAR 0 42
22083: PUSH
22084: LD_INT 2
22086: PUSH
22087: LD_INT 0
22089: PUSH
22090: EMPTY
22091: LIST
22092: LIST
22093: PUSH
22094: LD_INT 2
22096: PUSH
22097: LD_INT 1
22099: NEG
22100: PUSH
22101: EMPTY
22102: LIST
22103: LIST
22104: PUSH
22105: LD_INT 3
22107: PUSH
22108: LD_INT 1
22110: PUSH
22111: EMPTY
22112: LIST
22113: LIST
22114: PUSH
22115: EMPTY
22116: LIST
22117: LIST
22118: LIST
22119: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22120: LD_ADDR_VAR 0 43
22124: PUSH
22125: LD_INT 2
22127: PUSH
22128: LD_INT 2
22130: PUSH
22131: EMPTY
22132: LIST
22133: LIST
22134: PUSH
22135: LD_INT 3
22137: PUSH
22138: LD_INT 2
22140: PUSH
22141: EMPTY
22142: LIST
22143: LIST
22144: PUSH
22145: LD_INT 2
22147: PUSH
22148: LD_INT 3
22150: PUSH
22151: EMPTY
22152: LIST
22153: LIST
22154: PUSH
22155: EMPTY
22156: LIST
22157: LIST
22158: LIST
22159: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22160: LD_ADDR_VAR 0 44
22164: PUSH
22165: LD_INT 0
22167: PUSH
22168: LD_INT 2
22170: PUSH
22171: EMPTY
22172: LIST
22173: LIST
22174: PUSH
22175: LD_INT 1
22177: PUSH
22178: LD_INT 3
22180: PUSH
22181: EMPTY
22182: LIST
22183: LIST
22184: PUSH
22185: LD_INT 1
22187: NEG
22188: PUSH
22189: LD_INT 2
22191: PUSH
22192: EMPTY
22193: LIST
22194: LIST
22195: PUSH
22196: EMPTY
22197: LIST
22198: LIST
22199: LIST
22200: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22201: LD_ADDR_VAR 0 45
22205: PUSH
22206: LD_INT 2
22208: NEG
22209: PUSH
22210: LD_INT 0
22212: PUSH
22213: EMPTY
22214: LIST
22215: LIST
22216: PUSH
22217: LD_INT 2
22219: NEG
22220: PUSH
22221: LD_INT 1
22223: PUSH
22224: EMPTY
22225: LIST
22226: LIST
22227: PUSH
22228: LD_INT 3
22230: NEG
22231: PUSH
22232: LD_INT 1
22234: NEG
22235: PUSH
22236: EMPTY
22237: LIST
22238: LIST
22239: PUSH
22240: EMPTY
22241: LIST
22242: LIST
22243: LIST
22244: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22245: LD_ADDR_VAR 0 46
22249: PUSH
22250: LD_INT 2
22252: NEG
22253: PUSH
22254: LD_INT 2
22256: NEG
22257: PUSH
22258: EMPTY
22259: LIST
22260: LIST
22261: PUSH
22262: LD_INT 2
22264: NEG
22265: PUSH
22266: LD_INT 3
22268: NEG
22269: PUSH
22270: EMPTY
22271: LIST
22272: LIST
22273: PUSH
22274: LD_INT 3
22276: NEG
22277: PUSH
22278: LD_INT 2
22280: NEG
22281: PUSH
22282: EMPTY
22283: LIST
22284: LIST
22285: PUSH
22286: EMPTY
22287: LIST
22288: LIST
22289: LIST
22290: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22291: LD_ADDR_VAR 0 47
22295: PUSH
22296: LD_INT 2
22298: NEG
22299: PUSH
22300: LD_INT 3
22302: NEG
22303: PUSH
22304: EMPTY
22305: LIST
22306: LIST
22307: PUSH
22308: LD_INT 1
22310: NEG
22311: PUSH
22312: LD_INT 3
22314: NEG
22315: PUSH
22316: EMPTY
22317: LIST
22318: LIST
22319: PUSH
22320: EMPTY
22321: LIST
22322: LIST
22323: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22324: LD_ADDR_VAR 0 48
22328: PUSH
22329: LD_INT 1
22331: PUSH
22332: LD_INT 2
22334: NEG
22335: PUSH
22336: EMPTY
22337: LIST
22338: LIST
22339: PUSH
22340: LD_INT 2
22342: PUSH
22343: LD_INT 1
22345: NEG
22346: PUSH
22347: EMPTY
22348: LIST
22349: LIST
22350: PUSH
22351: EMPTY
22352: LIST
22353: LIST
22354: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22355: LD_ADDR_VAR 0 49
22359: PUSH
22360: LD_INT 3
22362: PUSH
22363: LD_INT 1
22365: PUSH
22366: EMPTY
22367: LIST
22368: LIST
22369: PUSH
22370: LD_INT 3
22372: PUSH
22373: LD_INT 2
22375: PUSH
22376: EMPTY
22377: LIST
22378: LIST
22379: PUSH
22380: EMPTY
22381: LIST
22382: LIST
22383: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22384: LD_ADDR_VAR 0 50
22388: PUSH
22389: LD_INT 2
22391: PUSH
22392: LD_INT 3
22394: PUSH
22395: EMPTY
22396: LIST
22397: LIST
22398: PUSH
22399: LD_INT 1
22401: PUSH
22402: LD_INT 3
22404: PUSH
22405: EMPTY
22406: LIST
22407: LIST
22408: PUSH
22409: EMPTY
22410: LIST
22411: LIST
22412: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22413: LD_ADDR_VAR 0 51
22417: PUSH
22418: LD_INT 1
22420: NEG
22421: PUSH
22422: LD_INT 2
22424: PUSH
22425: EMPTY
22426: LIST
22427: LIST
22428: PUSH
22429: LD_INT 2
22431: NEG
22432: PUSH
22433: LD_INT 1
22435: PUSH
22436: EMPTY
22437: LIST
22438: LIST
22439: PUSH
22440: EMPTY
22441: LIST
22442: LIST
22443: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22444: LD_ADDR_VAR 0 52
22448: PUSH
22449: LD_INT 3
22451: NEG
22452: PUSH
22453: LD_INT 1
22455: NEG
22456: PUSH
22457: EMPTY
22458: LIST
22459: LIST
22460: PUSH
22461: LD_INT 3
22463: NEG
22464: PUSH
22465: LD_INT 2
22467: NEG
22468: PUSH
22469: EMPTY
22470: LIST
22471: LIST
22472: PUSH
22473: EMPTY
22474: LIST
22475: LIST
22476: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22477: LD_ADDR_VAR 0 53
22481: PUSH
22482: LD_INT 1
22484: NEG
22485: PUSH
22486: LD_INT 3
22488: NEG
22489: PUSH
22490: EMPTY
22491: LIST
22492: LIST
22493: PUSH
22494: LD_INT 0
22496: PUSH
22497: LD_INT 3
22499: NEG
22500: PUSH
22501: EMPTY
22502: LIST
22503: LIST
22504: PUSH
22505: LD_INT 1
22507: PUSH
22508: LD_INT 2
22510: NEG
22511: PUSH
22512: EMPTY
22513: LIST
22514: LIST
22515: PUSH
22516: EMPTY
22517: LIST
22518: LIST
22519: LIST
22520: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22521: LD_ADDR_VAR 0 54
22525: PUSH
22526: LD_INT 2
22528: PUSH
22529: LD_INT 1
22531: NEG
22532: PUSH
22533: EMPTY
22534: LIST
22535: LIST
22536: PUSH
22537: LD_INT 3
22539: PUSH
22540: LD_INT 0
22542: PUSH
22543: EMPTY
22544: LIST
22545: LIST
22546: PUSH
22547: LD_INT 3
22549: PUSH
22550: LD_INT 1
22552: PUSH
22553: EMPTY
22554: LIST
22555: LIST
22556: PUSH
22557: EMPTY
22558: LIST
22559: LIST
22560: LIST
22561: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22562: LD_ADDR_VAR 0 55
22566: PUSH
22567: LD_INT 3
22569: PUSH
22570: LD_INT 2
22572: PUSH
22573: EMPTY
22574: LIST
22575: LIST
22576: PUSH
22577: LD_INT 3
22579: PUSH
22580: LD_INT 3
22582: PUSH
22583: EMPTY
22584: LIST
22585: LIST
22586: PUSH
22587: LD_INT 2
22589: PUSH
22590: LD_INT 3
22592: PUSH
22593: EMPTY
22594: LIST
22595: LIST
22596: PUSH
22597: EMPTY
22598: LIST
22599: LIST
22600: LIST
22601: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22602: LD_ADDR_VAR 0 56
22606: PUSH
22607: LD_INT 1
22609: PUSH
22610: LD_INT 3
22612: PUSH
22613: EMPTY
22614: LIST
22615: LIST
22616: PUSH
22617: LD_INT 0
22619: PUSH
22620: LD_INT 3
22622: PUSH
22623: EMPTY
22624: LIST
22625: LIST
22626: PUSH
22627: LD_INT 1
22629: NEG
22630: PUSH
22631: LD_INT 2
22633: PUSH
22634: EMPTY
22635: LIST
22636: LIST
22637: PUSH
22638: EMPTY
22639: LIST
22640: LIST
22641: LIST
22642: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22643: LD_ADDR_VAR 0 57
22647: PUSH
22648: LD_INT 2
22650: NEG
22651: PUSH
22652: LD_INT 1
22654: PUSH
22655: EMPTY
22656: LIST
22657: LIST
22658: PUSH
22659: LD_INT 3
22661: NEG
22662: PUSH
22663: LD_INT 0
22665: PUSH
22666: EMPTY
22667: LIST
22668: LIST
22669: PUSH
22670: LD_INT 3
22672: NEG
22673: PUSH
22674: LD_INT 1
22676: NEG
22677: PUSH
22678: EMPTY
22679: LIST
22680: LIST
22681: PUSH
22682: EMPTY
22683: LIST
22684: LIST
22685: LIST
22686: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22687: LD_ADDR_VAR 0 58
22691: PUSH
22692: LD_INT 2
22694: NEG
22695: PUSH
22696: LD_INT 3
22698: NEG
22699: PUSH
22700: EMPTY
22701: LIST
22702: LIST
22703: PUSH
22704: LD_INT 3
22706: NEG
22707: PUSH
22708: LD_INT 2
22710: NEG
22711: PUSH
22712: EMPTY
22713: LIST
22714: LIST
22715: PUSH
22716: LD_INT 3
22718: NEG
22719: PUSH
22720: LD_INT 3
22722: NEG
22723: PUSH
22724: EMPTY
22725: LIST
22726: LIST
22727: PUSH
22728: EMPTY
22729: LIST
22730: LIST
22731: LIST
22732: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22733: LD_ADDR_VAR 0 59
22737: PUSH
22738: LD_INT 1
22740: NEG
22741: PUSH
22742: LD_INT 2
22744: NEG
22745: PUSH
22746: EMPTY
22747: LIST
22748: LIST
22749: PUSH
22750: LD_INT 0
22752: PUSH
22753: LD_INT 2
22755: NEG
22756: PUSH
22757: EMPTY
22758: LIST
22759: LIST
22760: PUSH
22761: LD_INT 1
22763: PUSH
22764: LD_INT 1
22766: NEG
22767: PUSH
22768: EMPTY
22769: LIST
22770: LIST
22771: PUSH
22772: EMPTY
22773: LIST
22774: LIST
22775: LIST
22776: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22777: LD_ADDR_VAR 0 60
22781: PUSH
22782: LD_INT 1
22784: PUSH
22785: LD_INT 1
22787: NEG
22788: PUSH
22789: EMPTY
22790: LIST
22791: LIST
22792: PUSH
22793: LD_INT 2
22795: PUSH
22796: LD_INT 0
22798: PUSH
22799: EMPTY
22800: LIST
22801: LIST
22802: PUSH
22803: LD_INT 2
22805: PUSH
22806: LD_INT 1
22808: PUSH
22809: EMPTY
22810: LIST
22811: LIST
22812: PUSH
22813: EMPTY
22814: LIST
22815: LIST
22816: LIST
22817: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22818: LD_ADDR_VAR 0 61
22822: PUSH
22823: LD_INT 2
22825: PUSH
22826: LD_INT 1
22828: PUSH
22829: EMPTY
22830: LIST
22831: LIST
22832: PUSH
22833: LD_INT 2
22835: PUSH
22836: LD_INT 2
22838: PUSH
22839: EMPTY
22840: LIST
22841: LIST
22842: PUSH
22843: LD_INT 1
22845: PUSH
22846: LD_INT 2
22848: PUSH
22849: EMPTY
22850: LIST
22851: LIST
22852: PUSH
22853: EMPTY
22854: LIST
22855: LIST
22856: LIST
22857: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22858: LD_ADDR_VAR 0 62
22862: PUSH
22863: LD_INT 1
22865: PUSH
22866: LD_INT 2
22868: PUSH
22869: EMPTY
22870: LIST
22871: LIST
22872: PUSH
22873: LD_INT 0
22875: PUSH
22876: LD_INT 2
22878: PUSH
22879: EMPTY
22880: LIST
22881: LIST
22882: PUSH
22883: LD_INT 1
22885: NEG
22886: PUSH
22887: LD_INT 1
22889: PUSH
22890: EMPTY
22891: LIST
22892: LIST
22893: PUSH
22894: EMPTY
22895: LIST
22896: LIST
22897: LIST
22898: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22899: LD_ADDR_VAR 0 63
22903: PUSH
22904: LD_INT 1
22906: NEG
22907: PUSH
22908: LD_INT 1
22910: PUSH
22911: EMPTY
22912: LIST
22913: LIST
22914: PUSH
22915: LD_INT 2
22917: NEG
22918: PUSH
22919: LD_INT 0
22921: PUSH
22922: EMPTY
22923: LIST
22924: LIST
22925: PUSH
22926: LD_INT 2
22928: NEG
22929: PUSH
22930: LD_INT 1
22932: NEG
22933: PUSH
22934: EMPTY
22935: LIST
22936: LIST
22937: PUSH
22938: EMPTY
22939: LIST
22940: LIST
22941: LIST
22942: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22943: LD_ADDR_VAR 0 64
22947: PUSH
22948: LD_INT 1
22950: NEG
22951: PUSH
22952: LD_INT 2
22954: NEG
22955: PUSH
22956: EMPTY
22957: LIST
22958: LIST
22959: PUSH
22960: LD_INT 2
22962: NEG
22963: PUSH
22964: LD_INT 1
22966: NEG
22967: PUSH
22968: EMPTY
22969: LIST
22970: LIST
22971: PUSH
22972: LD_INT 2
22974: NEG
22975: PUSH
22976: LD_INT 2
22978: NEG
22979: PUSH
22980: EMPTY
22981: LIST
22982: LIST
22983: PUSH
22984: EMPTY
22985: LIST
22986: LIST
22987: LIST
22988: ST_TO_ADDR
// end ; 2 :
22989: GO 26255
22991: LD_INT 2
22993: DOUBLE
22994: EQUAL
22995: IFTRUE 22999
22997: GO 26254
22999: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23000: LD_ADDR_VAR 0 29
23004: PUSH
23005: LD_INT 4
23007: PUSH
23008: LD_INT 0
23010: PUSH
23011: EMPTY
23012: LIST
23013: LIST
23014: PUSH
23015: LD_INT 4
23017: PUSH
23018: LD_INT 1
23020: NEG
23021: PUSH
23022: EMPTY
23023: LIST
23024: LIST
23025: PUSH
23026: LD_INT 5
23028: PUSH
23029: LD_INT 0
23031: PUSH
23032: EMPTY
23033: LIST
23034: LIST
23035: PUSH
23036: LD_INT 5
23038: PUSH
23039: LD_INT 1
23041: PUSH
23042: EMPTY
23043: LIST
23044: LIST
23045: PUSH
23046: LD_INT 4
23048: PUSH
23049: LD_INT 1
23051: PUSH
23052: EMPTY
23053: LIST
23054: LIST
23055: PUSH
23056: LD_INT 3
23058: PUSH
23059: LD_INT 0
23061: PUSH
23062: EMPTY
23063: LIST
23064: LIST
23065: PUSH
23066: LD_INT 3
23068: PUSH
23069: LD_INT 1
23071: NEG
23072: PUSH
23073: EMPTY
23074: LIST
23075: LIST
23076: PUSH
23077: LD_INT 3
23079: PUSH
23080: LD_INT 2
23082: NEG
23083: PUSH
23084: EMPTY
23085: LIST
23086: LIST
23087: PUSH
23088: LD_INT 5
23090: PUSH
23091: LD_INT 2
23093: PUSH
23094: EMPTY
23095: LIST
23096: LIST
23097: PUSH
23098: LD_INT 3
23100: PUSH
23101: LD_INT 3
23103: PUSH
23104: EMPTY
23105: LIST
23106: LIST
23107: PUSH
23108: LD_INT 3
23110: PUSH
23111: LD_INT 2
23113: PUSH
23114: EMPTY
23115: LIST
23116: LIST
23117: PUSH
23118: LD_INT 4
23120: PUSH
23121: LD_INT 3
23123: PUSH
23124: EMPTY
23125: LIST
23126: LIST
23127: PUSH
23128: LD_INT 4
23130: PUSH
23131: LD_INT 4
23133: PUSH
23134: EMPTY
23135: LIST
23136: LIST
23137: PUSH
23138: LD_INT 3
23140: PUSH
23141: LD_INT 4
23143: PUSH
23144: EMPTY
23145: LIST
23146: LIST
23147: PUSH
23148: LD_INT 2
23150: PUSH
23151: LD_INT 3
23153: PUSH
23154: EMPTY
23155: LIST
23156: LIST
23157: PUSH
23158: LD_INT 2
23160: PUSH
23161: LD_INT 2
23163: PUSH
23164: EMPTY
23165: LIST
23166: LIST
23167: PUSH
23168: LD_INT 4
23170: PUSH
23171: LD_INT 2
23173: PUSH
23174: EMPTY
23175: LIST
23176: LIST
23177: PUSH
23178: LD_INT 2
23180: PUSH
23181: LD_INT 4
23183: PUSH
23184: EMPTY
23185: LIST
23186: LIST
23187: PUSH
23188: LD_INT 0
23190: PUSH
23191: LD_INT 4
23193: PUSH
23194: EMPTY
23195: LIST
23196: LIST
23197: PUSH
23198: LD_INT 0
23200: PUSH
23201: LD_INT 3
23203: PUSH
23204: EMPTY
23205: LIST
23206: LIST
23207: PUSH
23208: LD_INT 1
23210: PUSH
23211: LD_INT 4
23213: PUSH
23214: EMPTY
23215: LIST
23216: LIST
23217: PUSH
23218: LD_INT 1
23220: PUSH
23221: LD_INT 5
23223: PUSH
23224: EMPTY
23225: LIST
23226: LIST
23227: PUSH
23228: LD_INT 0
23230: PUSH
23231: LD_INT 5
23233: PUSH
23234: EMPTY
23235: LIST
23236: LIST
23237: PUSH
23238: LD_INT 1
23240: NEG
23241: PUSH
23242: LD_INT 4
23244: PUSH
23245: EMPTY
23246: LIST
23247: LIST
23248: PUSH
23249: LD_INT 1
23251: NEG
23252: PUSH
23253: LD_INT 3
23255: PUSH
23256: EMPTY
23257: LIST
23258: LIST
23259: PUSH
23260: LD_INT 2
23262: PUSH
23263: LD_INT 5
23265: PUSH
23266: EMPTY
23267: LIST
23268: LIST
23269: PUSH
23270: LD_INT 2
23272: NEG
23273: PUSH
23274: LD_INT 3
23276: PUSH
23277: EMPTY
23278: LIST
23279: LIST
23280: PUSH
23281: LD_INT 3
23283: NEG
23284: PUSH
23285: LD_INT 0
23287: PUSH
23288: EMPTY
23289: LIST
23290: LIST
23291: PUSH
23292: LD_INT 3
23294: NEG
23295: PUSH
23296: LD_INT 1
23298: NEG
23299: PUSH
23300: EMPTY
23301: LIST
23302: LIST
23303: PUSH
23304: LD_INT 2
23306: NEG
23307: PUSH
23308: LD_INT 0
23310: PUSH
23311: EMPTY
23312: LIST
23313: LIST
23314: PUSH
23315: LD_INT 2
23317: NEG
23318: PUSH
23319: LD_INT 1
23321: PUSH
23322: EMPTY
23323: LIST
23324: LIST
23325: PUSH
23326: LD_INT 3
23328: NEG
23329: PUSH
23330: LD_INT 1
23332: PUSH
23333: EMPTY
23334: LIST
23335: LIST
23336: PUSH
23337: LD_INT 4
23339: NEG
23340: PUSH
23341: LD_INT 0
23343: PUSH
23344: EMPTY
23345: LIST
23346: LIST
23347: PUSH
23348: LD_INT 4
23350: NEG
23351: PUSH
23352: LD_INT 1
23354: NEG
23355: PUSH
23356: EMPTY
23357: LIST
23358: LIST
23359: PUSH
23360: LD_INT 4
23362: NEG
23363: PUSH
23364: LD_INT 2
23366: NEG
23367: PUSH
23368: EMPTY
23369: LIST
23370: LIST
23371: PUSH
23372: LD_INT 2
23374: NEG
23375: PUSH
23376: LD_INT 2
23378: PUSH
23379: EMPTY
23380: LIST
23381: LIST
23382: PUSH
23383: LD_INT 4
23385: NEG
23386: PUSH
23387: LD_INT 4
23389: NEG
23390: PUSH
23391: EMPTY
23392: LIST
23393: LIST
23394: PUSH
23395: LD_INT 4
23397: NEG
23398: PUSH
23399: LD_INT 5
23401: NEG
23402: PUSH
23403: EMPTY
23404: LIST
23405: LIST
23406: PUSH
23407: LD_INT 3
23409: NEG
23410: PUSH
23411: LD_INT 4
23413: NEG
23414: PUSH
23415: EMPTY
23416: LIST
23417: LIST
23418: PUSH
23419: LD_INT 3
23421: NEG
23422: PUSH
23423: LD_INT 3
23425: NEG
23426: PUSH
23427: EMPTY
23428: LIST
23429: LIST
23430: PUSH
23431: LD_INT 4
23433: NEG
23434: PUSH
23435: LD_INT 3
23437: NEG
23438: PUSH
23439: EMPTY
23440: LIST
23441: LIST
23442: PUSH
23443: LD_INT 5
23445: NEG
23446: PUSH
23447: LD_INT 4
23449: NEG
23450: PUSH
23451: EMPTY
23452: LIST
23453: LIST
23454: PUSH
23455: LD_INT 5
23457: NEG
23458: PUSH
23459: LD_INT 5
23461: NEG
23462: PUSH
23463: EMPTY
23464: LIST
23465: LIST
23466: PUSH
23467: LD_INT 3
23469: NEG
23470: PUSH
23471: LD_INT 5
23473: NEG
23474: PUSH
23475: EMPTY
23476: LIST
23477: LIST
23478: PUSH
23479: LD_INT 5
23481: NEG
23482: PUSH
23483: LD_INT 3
23485: NEG
23486: PUSH
23487: EMPTY
23488: LIST
23489: LIST
23490: PUSH
23491: EMPTY
23492: LIST
23493: LIST
23494: LIST
23495: LIST
23496: LIST
23497: LIST
23498: LIST
23499: LIST
23500: LIST
23501: LIST
23502: LIST
23503: LIST
23504: LIST
23505: LIST
23506: LIST
23507: LIST
23508: LIST
23509: LIST
23510: LIST
23511: LIST
23512: LIST
23513: LIST
23514: LIST
23515: LIST
23516: LIST
23517: LIST
23518: LIST
23519: LIST
23520: LIST
23521: LIST
23522: LIST
23523: LIST
23524: LIST
23525: LIST
23526: LIST
23527: LIST
23528: LIST
23529: LIST
23530: LIST
23531: LIST
23532: LIST
23533: LIST
23534: LIST
23535: LIST
23536: LIST
23537: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23538: LD_ADDR_VAR 0 30
23542: PUSH
23543: LD_INT 4
23545: PUSH
23546: LD_INT 4
23548: PUSH
23549: EMPTY
23550: LIST
23551: LIST
23552: PUSH
23553: LD_INT 4
23555: PUSH
23556: LD_INT 3
23558: PUSH
23559: EMPTY
23560: LIST
23561: LIST
23562: PUSH
23563: LD_INT 5
23565: PUSH
23566: LD_INT 4
23568: PUSH
23569: EMPTY
23570: LIST
23571: LIST
23572: PUSH
23573: LD_INT 5
23575: PUSH
23576: LD_INT 5
23578: PUSH
23579: EMPTY
23580: LIST
23581: LIST
23582: PUSH
23583: LD_INT 4
23585: PUSH
23586: LD_INT 5
23588: PUSH
23589: EMPTY
23590: LIST
23591: LIST
23592: PUSH
23593: LD_INT 3
23595: PUSH
23596: LD_INT 4
23598: PUSH
23599: EMPTY
23600: LIST
23601: LIST
23602: PUSH
23603: LD_INT 3
23605: PUSH
23606: LD_INT 3
23608: PUSH
23609: EMPTY
23610: LIST
23611: LIST
23612: PUSH
23613: LD_INT 5
23615: PUSH
23616: LD_INT 3
23618: PUSH
23619: EMPTY
23620: LIST
23621: LIST
23622: PUSH
23623: LD_INT 3
23625: PUSH
23626: LD_INT 5
23628: PUSH
23629: EMPTY
23630: LIST
23631: LIST
23632: PUSH
23633: LD_INT 0
23635: PUSH
23636: LD_INT 3
23638: PUSH
23639: EMPTY
23640: LIST
23641: LIST
23642: PUSH
23643: LD_INT 0
23645: PUSH
23646: LD_INT 2
23648: PUSH
23649: EMPTY
23650: LIST
23651: LIST
23652: PUSH
23653: LD_INT 1
23655: PUSH
23656: LD_INT 3
23658: PUSH
23659: EMPTY
23660: LIST
23661: LIST
23662: PUSH
23663: LD_INT 1
23665: PUSH
23666: LD_INT 4
23668: PUSH
23669: EMPTY
23670: LIST
23671: LIST
23672: PUSH
23673: LD_INT 0
23675: PUSH
23676: LD_INT 4
23678: PUSH
23679: EMPTY
23680: LIST
23681: LIST
23682: PUSH
23683: LD_INT 1
23685: NEG
23686: PUSH
23687: LD_INT 3
23689: PUSH
23690: EMPTY
23691: LIST
23692: LIST
23693: PUSH
23694: LD_INT 1
23696: NEG
23697: PUSH
23698: LD_INT 2
23700: PUSH
23701: EMPTY
23702: LIST
23703: LIST
23704: PUSH
23705: LD_INT 2
23707: PUSH
23708: LD_INT 4
23710: PUSH
23711: EMPTY
23712: LIST
23713: LIST
23714: PUSH
23715: LD_INT 2
23717: NEG
23718: PUSH
23719: LD_INT 2
23721: PUSH
23722: EMPTY
23723: LIST
23724: LIST
23725: PUSH
23726: LD_INT 4
23728: NEG
23729: PUSH
23730: LD_INT 0
23732: PUSH
23733: EMPTY
23734: LIST
23735: LIST
23736: PUSH
23737: LD_INT 4
23739: NEG
23740: PUSH
23741: LD_INT 1
23743: NEG
23744: PUSH
23745: EMPTY
23746: LIST
23747: LIST
23748: PUSH
23749: LD_INT 3
23751: NEG
23752: PUSH
23753: LD_INT 0
23755: PUSH
23756: EMPTY
23757: LIST
23758: LIST
23759: PUSH
23760: LD_INT 3
23762: NEG
23763: PUSH
23764: LD_INT 1
23766: PUSH
23767: EMPTY
23768: LIST
23769: LIST
23770: PUSH
23771: LD_INT 4
23773: NEG
23774: PUSH
23775: LD_INT 1
23777: PUSH
23778: EMPTY
23779: LIST
23780: LIST
23781: PUSH
23782: LD_INT 5
23784: NEG
23785: PUSH
23786: LD_INT 0
23788: PUSH
23789: EMPTY
23790: LIST
23791: LIST
23792: PUSH
23793: LD_INT 5
23795: NEG
23796: PUSH
23797: LD_INT 1
23799: NEG
23800: PUSH
23801: EMPTY
23802: LIST
23803: LIST
23804: PUSH
23805: LD_INT 5
23807: NEG
23808: PUSH
23809: LD_INT 2
23811: NEG
23812: PUSH
23813: EMPTY
23814: LIST
23815: LIST
23816: PUSH
23817: LD_INT 3
23819: NEG
23820: PUSH
23821: LD_INT 2
23823: PUSH
23824: EMPTY
23825: LIST
23826: LIST
23827: PUSH
23828: LD_INT 3
23830: NEG
23831: PUSH
23832: LD_INT 3
23834: NEG
23835: PUSH
23836: EMPTY
23837: LIST
23838: LIST
23839: PUSH
23840: LD_INT 3
23842: NEG
23843: PUSH
23844: LD_INT 4
23846: NEG
23847: PUSH
23848: EMPTY
23849: LIST
23850: LIST
23851: PUSH
23852: LD_INT 2
23854: NEG
23855: PUSH
23856: LD_INT 3
23858: NEG
23859: PUSH
23860: EMPTY
23861: LIST
23862: LIST
23863: PUSH
23864: LD_INT 2
23866: NEG
23867: PUSH
23868: LD_INT 2
23870: NEG
23871: PUSH
23872: EMPTY
23873: LIST
23874: LIST
23875: PUSH
23876: LD_INT 3
23878: NEG
23879: PUSH
23880: LD_INT 2
23882: NEG
23883: PUSH
23884: EMPTY
23885: LIST
23886: LIST
23887: PUSH
23888: LD_INT 4
23890: NEG
23891: PUSH
23892: LD_INT 3
23894: NEG
23895: PUSH
23896: EMPTY
23897: LIST
23898: LIST
23899: PUSH
23900: LD_INT 4
23902: NEG
23903: PUSH
23904: LD_INT 4
23906: NEG
23907: PUSH
23908: EMPTY
23909: LIST
23910: LIST
23911: PUSH
23912: LD_INT 2
23914: NEG
23915: PUSH
23916: LD_INT 4
23918: NEG
23919: PUSH
23920: EMPTY
23921: LIST
23922: LIST
23923: PUSH
23924: LD_INT 4
23926: NEG
23927: PUSH
23928: LD_INT 2
23930: NEG
23931: PUSH
23932: EMPTY
23933: LIST
23934: LIST
23935: PUSH
23936: LD_INT 0
23938: PUSH
23939: LD_INT 4
23941: NEG
23942: PUSH
23943: EMPTY
23944: LIST
23945: LIST
23946: PUSH
23947: LD_INT 0
23949: PUSH
23950: LD_INT 5
23952: NEG
23953: PUSH
23954: EMPTY
23955: LIST
23956: LIST
23957: PUSH
23958: LD_INT 1
23960: PUSH
23961: LD_INT 4
23963: NEG
23964: PUSH
23965: EMPTY
23966: LIST
23967: LIST
23968: PUSH
23969: LD_INT 1
23971: PUSH
23972: LD_INT 3
23974: NEG
23975: PUSH
23976: EMPTY
23977: LIST
23978: LIST
23979: PUSH
23980: LD_INT 0
23982: PUSH
23983: LD_INT 3
23985: NEG
23986: PUSH
23987: EMPTY
23988: LIST
23989: LIST
23990: PUSH
23991: LD_INT 1
23993: NEG
23994: PUSH
23995: LD_INT 4
23997: NEG
23998: PUSH
23999: EMPTY
24000: LIST
24001: LIST
24002: PUSH
24003: LD_INT 1
24005: NEG
24006: PUSH
24007: LD_INT 5
24009: NEG
24010: PUSH
24011: EMPTY
24012: LIST
24013: LIST
24014: PUSH
24015: LD_INT 2
24017: PUSH
24018: LD_INT 3
24020: NEG
24021: PUSH
24022: EMPTY
24023: LIST
24024: LIST
24025: PUSH
24026: LD_INT 2
24028: NEG
24029: PUSH
24030: LD_INT 5
24032: NEG
24033: PUSH
24034: EMPTY
24035: LIST
24036: LIST
24037: PUSH
24038: EMPTY
24039: LIST
24040: LIST
24041: LIST
24042: LIST
24043: LIST
24044: LIST
24045: LIST
24046: LIST
24047: LIST
24048: LIST
24049: LIST
24050: LIST
24051: LIST
24052: LIST
24053: LIST
24054: LIST
24055: LIST
24056: LIST
24057: LIST
24058: LIST
24059: LIST
24060: LIST
24061: LIST
24062: LIST
24063: LIST
24064: LIST
24065: LIST
24066: LIST
24067: LIST
24068: LIST
24069: LIST
24070: LIST
24071: LIST
24072: LIST
24073: LIST
24074: LIST
24075: LIST
24076: LIST
24077: LIST
24078: LIST
24079: LIST
24080: LIST
24081: LIST
24082: LIST
24083: LIST
24084: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24085: LD_ADDR_VAR 0 31
24089: PUSH
24090: LD_INT 0
24092: PUSH
24093: LD_INT 4
24095: PUSH
24096: EMPTY
24097: LIST
24098: LIST
24099: PUSH
24100: LD_INT 0
24102: PUSH
24103: LD_INT 3
24105: PUSH
24106: EMPTY
24107: LIST
24108: LIST
24109: PUSH
24110: LD_INT 1
24112: PUSH
24113: LD_INT 4
24115: PUSH
24116: EMPTY
24117: LIST
24118: LIST
24119: PUSH
24120: LD_INT 1
24122: PUSH
24123: LD_INT 5
24125: PUSH
24126: EMPTY
24127: LIST
24128: LIST
24129: PUSH
24130: LD_INT 0
24132: PUSH
24133: LD_INT 5
24135: PUSH
24136: EMPTY
24137: LIST
24138: LIST
24139: PUSH
24140: LD_INT 1
24142: NEG
24143: PUSH
24144: LD_INT 4
24146: PUSH
24147: EMPTY
24148: LIST
24149: LIST
24150: PUSH
24151: LD_INT 1
24153: NEG
24154: PUSH
24155: LD_INT 3
24157: PUSH
24158: EMPTY
24159: LIST
24160: LIST
24161: PUSH
24162: LD_INT 2
24164: PUSH
24165: LD_INT 5
24167: PUSH
24168: EMPTY
24169: LIST
24170: LIST
24171: PUSH
24172: LD_INT 2
24174: NEG
24175: PUSH
24176: LD_INT 3
24178: PUSH
24179: EMPTY
24180: LIST
24181: LIST
24182: PUSH
24183: LD_INT 3
24185: NEG
24186: PUSH
24187: LD_INT 0
24189: PUSH
24190: EMPTY
24191: LIST
24192: LIST
24193: PUSH
24194: LD_INT 3
24196: NEG
24197: PUSH
24198: LD_INT 1
24200: NEG
24201: PUSH
24202: EMPTY
24203: LIST
24204: LIST
24205: PUSH
24206: LD_INT 2
24208: NEG
24209: PUSH
24210: LD_INT 0
24212: PUSH
24213: EMPTY
24214: LIST
24215: LIST
24216: PUSH
24217: LD_INT 2
24219: NEG
24220: PUSH
24221: LD_INT 1
24223: PUSH
24224: EMPTY
24225: LIST
24226: LIST
24227: PUSH
24228: LD_INT 3
24230: NEG
24231: PUSH
24232: LD_INT 1
24234: PUSH
24235: EMPTY
24236: LIST
24237: LIST
24238: PUSH
24239: LD_INT 4
24241: NEG
24242: PUSH
24243: LD_INT 0
24245: PUSH
24246: EMPTY
24247: LIST
24248: LIST
24249: PUSH
24250: LD_INT 4
24252: NEG
24253: PUSH
24254: LD_INT 1
24256: NEG
24257: PUSH
24258: EMPTY
24259: LIST
24260: LIST
24261: PUSH
24262: LD_INT 4
24264: NEG
24265: PUSH
24266: LD_INT 2
24268: NEG
24269: PUSH
24270: EMPTY
24271: LIST
24272: LIST
24273: PUSH
24274: LD_INT 2
24276: NEG
24277: PUSH
24278: LD_INT 2
24280: PUSH
24281: EMPTY
24282: LIST
24283: LIST
24284: PUSH
24285: LD_INT 4
24287: NEG
24288: PUSH
24289: LD_INT 4
24291: NEG
24292: PUSH
24293: EMPTY
24294: LIST
24295: LIST
24296: PUSH
24297: LD_INT 4
24299: NEG
24300: PUSH
24301: LD_INT 5
24303: NEG
24304: PUSH
24305: EMPTY
24306: LIST
24307: LIST
24308: PUSH
24309: LD_INT 3
24311: NEG
24312: PUSH
24313: LD_INT 4
24315: NEG
24316: PUSH
24317: EMPTY
24318: LIST
24319: LIST
24320: PUSH
24321: LD_INT 3
24323: NEG
24324: PUSH
24325: LD_INT 3
24327: NEG
24328: PUSH
24329: EMPTY
24330: LIST
24331: LIST
24332: PUSH
24333: LD_INT 4
24335: NEG
24336: PUSH
24337: LD_INT 3
24339: NEG
24340: PUSH
24341: EMPTY
24342: LIST
24343: LIST
24344: PUSH
24345: LD_INT 5
24347: NEG
24348: PUSH
24349: LD_INT 4
24351: NEG
24352: PUSH
24353: EMPTY
24354: LIST
24355: LIST
24356: PUSH
24357: LD_INT 5
24359: NEG
24360: PUSH
24361: LD_INT 5
24363: NEG
24364: PUSH
24365: EMPTY
24366: LIST
24367: LIST
24368: PUSH
24369: LD_INT 3
24371: NEG
24372: PUSH
24373: LD_INT 5
24375: NEG
24376: PUSH
24377: EMPTY
24378: LIST
24379: LIST
24380: PUSH
24381: LD_INT 5
24383: NEG
24384: PUSH
24385: LD_INT 3
24387: NEG
24388: PUSH
24389: EMPTY
24390: LIST
24391: LIST
24392: PUSH
24393: LD_INT 0
24395: PUSH
24396: LD_INT 3
24398: NEG
24399: PUSH
24400: EMPTY
24401: LIST
24402: LIST
24403: PUSH
24404: LD_INT 0
24406: PUSH
24407: LD_INT 4
24409: NEG
24410: PUSH
24411: EMPTY
24412: LIST
24413: LIST
24414: PUSH
24415: LD_INT 1
24417: PUSH
24418: LD_INT 3
24420: NEG
24421: PUSH
24422: EMPTY
24423: LIST
24424: LIST
24425: PUSH
24426: LD_INT 1
24428: PUSH
24429: LD_INT 2
24431: NEG
24432: PUSH
24433: EMPTY
24434: LIST
24435: LIST
24436: PUSH
24437: LD_INT 0
24439: PUSH
24440: LD_INT 2
24442: NEG
24443: PUSH
24444: EMPTY
24445: LIST
24446: LIST
24447: PUSH
24448: LD_INT 1
24450: NEG
24451: PUSH
24452: LD_INT 3
24454: NEG
24455: PUSH
24456: EMPTY
24457: LIST
24458: LIST
24459: PUSH
24460: LD_INT 1
24462: NEG
24463: PUSH
24464: LD_INT 4
24466: NEG
24467: PUSH
24468: EMPTY
24469: LIST
24470: LIST
24471: PUSH
24472: LD_INT 2
24474: PUSH
24475: LD_INT 2
24477: NEG
24478: PUSH
24479: EMPTY
24480: LIST
24481: LIST
24482: PUSH
24483: LD_INT 2
24485: NEG
24486: PUSH
24487: LD_INT 4
24489: NEG
24490: PUSH
24491: EMPTY
24492: LIST
24493: LIST
24494: PUSH
24495: LD_INT 4
24497: PUSH
24498: LD_INT 0
24500: PUSH
24501: EMPTY
24502: LIST
24503: LIST
24504: PUSH
24505: LD_INT 4
24507: PUSH
24508: LD_INT 1
24510: NEG
24511: PUSH
24512: EMPTY
24513: LIST
24514: LIST
24515: PUSH
24516: LD_INT 5
24518: PUSH
24519: LD_INT 0
24521: PUSH
24522: EMPTY
24523: LIST
24524: LIST
24525: PUSH
24526: LD_INT 5
24528: PUSH
24529: LD_INT 1
24531: PUSH
24532: EMPTY
24533: LIST
24534: LIST
24535: PUSH
24536: LD_INT 4
24538: PUSH
24539: LD_INT 1
24541: PUSH
24542: EMPTY
24543: LIST
24544: LIST
24545: PUSH
24546: LD_INT 3
24548: PUSH
24549: LD_INT 0
24551: PUSH
24552: EMPTY
24553: LIST
24554: LIST
24555: PUSH
24556: LD_INT 3
24558: PUSH
24559: LD_INT 1
24561: NEG
24562: PUSH
24563: EMPTY
24564: LIST
24565: LIST
24566: PUSH
24567: LD_INT 3
24569: PUSH
24570: LD_INT 2
24572: NEG
24573: PUSH
24574: EMPTY
24575: LIST
24576: LIST
24577: PUSH
24578: LD_INT 5
24580: PUSH
24581: LD_INT 2
24583: PUSH
24584: EMPTY
24585: LIST
24586: LIST
24587: PUSH
24588: EMPTY
24589: LIST
24590: LIST
24591: LIST
24592: LIST
24593: LIST
24594: LIST
24595: LIST
24596: LIST
24597: LIST
24598: LIST
24599: LIST
24600: LIST
24601: LIST
24602: LIST
24603: LIST
24604: LIST
24605: LIST
24606: LIST
24607: LIST
24608: LIST
24609: LIST
24610: LIST
24611: LIST
24612: LIST
24613: LIST
24614: LIST
24615: LIST
24616: LIST
24617: LIST
24618: LIST
24619: LIST
24620: LIST
24621: LIST
24622: LIST
24623: LIST
24624: LIST
24625: LIST
24626: LIST
24627: LIST
24628: LIST
24629: LIST
24630: LIST
24631: LIST
24632: LIST
24633: LIST
24634: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24635: LD_ADDR_VAR 0 32
24639: PUSH
24640: LD_INT 4
24642: NEG
24643: PUSH
24644: LD_INT 0
24646: PUSH
24647: EMPTY
24648: LIST
24649: LIST
24650: PUSH
24651: LD_INT 4
24653: NEG
24654: PUSH
24655: LD_INT 1
24657: NEG
24658: PUSH
24659: EMPTY
24660: LIST
24661: LIST
24662: PUSH
24663: LD_INT 3
24665: NEG
24666: PUSH
24667: LD_INT 0
24669: PUSH
24670: EMPTY
24671: LIST
24672: LIST
24673: PUSH
24674: LD_INT 3
24676: NEG
24677: PUSH
24678: LD_INT 1
24680: PUSH
24681: EMPTY
24682: LIST
24683: LIST
24684: PUSH
24685: LD_INT 4
24687: NEG
24688: PUSH
24689: LD_INT 1
24691: PUSH
24692: EMPTY
24693: LIST
24694: LIST
24695: PUSH
24696: LD_INT 5
24698: NEG
24699: PUSH
24700: LD_INT 0
24702: PUSH
24703: EMPTY
24704: LIST
24705: LIST
24706: PUSH
24707: LD_INT 5
24709: NEG
24710: PUSH
24711: LD_INT 1
24713: NEG
24714: PUSH
24715: EMPTY
24716: LIST
24717: LIST
24718: PUSH
24719: LD_INT 5
24721: NEG
24722: PUSH
24723: LD_INT 2
24725: NEG
24726: PUSH
24727: EMPTY
24728: LIST
24729: LIST
24730: PUSH
24731: LD_INT 3
24733: NEG
24734: PUSH
24735: LD_INT 2
24737: PUSH
24738: EMPTY
24739: LIST
24740: LIST
24741: PUSH
24742: LD_INT 3
24744: NEG
24745: PUSH
24746: LD_INT 3
24748: NEG
24749: PUSH
24750: EMPTY
24751: LIST
24752: LIST
24753: PUSH
24754: LD_INT 3
24756: NEG
24757: PUSH
24758: LD_INT 4
24760: NEG
24761: PUSH
24762: EMPTY
24763: LIST
24764: LIST
24765: PUSH
24766: LD_INT 2
24768: NEG
24769: PUSH
24770: LD_INT 3
24772: NEG
24773: PUSH
24774: EMPTY
24775: LIST
24776: LIST
24777: PUSH
24778: LD_INT 2
24780: NEG
24781: PUSH
24782: LD_INT 2
24784: NEG
24785: PUSH
24786: EMPTY
24787: LIST
24788: LIST
24789: PUSH
24790: LD_INT 3
24792: NEG
24793: PUSH
24794: LD_INT 2
24796: NEG
24797: PUSH
24798: EMPTY
24799: LIST
24800: LIST
24801: PUSH
24802: LD_INT 4
24804: NEG
24805: PUSH
24806: LD_INT 3
24808: NEG
24809: PUSH
24810: EMPTY
24811: LIST
24812: LIST
24813: PUSH
24814: LD_INT 4
24816: NEG
24817: PUSH
24818: LD_INT 4
24820: NEG
24821: PUSH
24822: EMPTY
24823: LIST
24824: LIST
24825: PUSH
24826: LD_INT 2
24828: NEG
24829: PUSH
24830: LD_INT 4
24832: NEG
24833: PUSH
24834: EMPTY
24835: LIST
24836: LIST
24837: PUSH
24838: LD_INT 4
24840: NEG
24841: PUSH
24842: LD_INT 2
24844: NEG
24845: PUSH
24846: EMPTY
24847: LIST
24848: LIST
24849: PUSH
24850: LD_INT 0
24852: PUSH
24853: LD_INT 4
24855: NEG
24856: PUSH
24857: EMPTY
24858: LIST
24859: LIST
24860: PUSH
24861: LD_INT 0
24863: PUSH
24864: LD_INT 5
24866: NEG
24867: PUSH
24868: EMPTY
24869: LIST
24870: LIST
24871: PUSH
24872: LD_INT 1
24874: PUSH
24875: LD_INT 4
24877: NEG
24878: PUSH
24879: EMPTY
24880: LIST
24881: LIST
24882: PUSH
24883: LD_INT 1
24885: PUSH
24886: LD_INT 3
24888: NEG
24889: PUSH
24890: EMPTY
24891: LIST
24892: LIST
24893: PUSH
24894: LD_INT 0
24896: PUSH
24897: LD_INT 3
24899: NEG
24900: PUSH
24901: EMPTY
24902: LIST
24903: LIST
24904: PUSH
24905: LD_INT 1
24907: NEG
24908: PUSH
24909: LD_INT 4
24911: NEG
24912: PUSH
24913: EMPTY
24914: LIST
24915: LIST
24916: PUSH
24917: LD_INT 1
24919: NEG
24920: PUSH
24921: LD_INT 5
24923: NEG
24924: PUSH
24925: EMPTY
24926: LIST
24927: LIST
24928: PUSH
24929: LD_INT 2
24931: PUSH
24932: LD_INT 3
24934: NEG
24935: PUSH
24936: EMPTY
24937: LIST
24938: LIST
24939: PUSH
24940: LD_INT 2
24942: NEG
24943: PUSH
24944: LD_INT 5
24946: NEG
24947: PUSH
24948: EMPTY
24949: LIST
24950: LIST
24951: PUSH
24952: LD_INT 3
24954: PUSH
24955: LD_INT 0
24957: PUSH
24958: EMPTY
24959: LIST
24960: LIST
24961: PUSH
24962: LD_INT 3
24964: PUSH
24965: LD_INT 1
24967: NEG
24968: PUSH
24969: EMPTY
24970: LIST
24971: LIST
24972: PUSH
24973: LD_INT 4
24975: PUSH
24976: LD_INT 0
24978: PUSH
24979: EMPTY
24980: LIST
24981: LIST
24982: PUSH
24983: LD_INT 4
24985: PUSH
24986: LD_INT 1
24988: PUSH
24989: EMPTY
24990: LIST
24991: LIST
24992: PUSH
24993: LD_INT 3
24995: PUSH
24996: LD_INT 1
24998: PUSH
24999: EMPTY
25000: LIST
25001: LIST
25002: PUSH
25003: LD_INT 2
25005: PUSH
25006: LD_INT 0
25008: PUSH
25009: EMPTY
25010: LIST
25011: LIST
25012: PUSH
25013: LD_INT 2
25015: PUSH
25016: LD_INT 1
25018: NEG
25019: PUSH
25020: EMPTY
25021: LIST
25022: LIST
25023: PUSH
25024: LD_INT 2
25026: PUSH
25027: LD_INT 2
25029: NEG
25030: PUSH
25031: EMPTY
25032: LIST
25033: LIST
25034: PUSH
25035: LD_INT 4
25037: PUSH
25038: LD_INT 2
25040: PUSH
25041: EMPTY
25042: LIST
25043: LIST
25044: PUSH
25045: LD_INT 4
25047: PUSH
25048: LD_INT 4
25050: PUSH
25051: EMPTY
25052: LIST
25053: LIST
25054: PUSH
25055: LD_INT 4
25057: PUSH
25058: LD_INT 3
25060: PUSH
25061: EMPTY
25062: LIST
25063: LIST
25064: PUSH
25065: LD_INT 5
25067: PUSH
25068: LD_INT 4
25070: PUSH
25071: EMPTY
25072: LIST
25073: LIST
25074: PUSH
25075: LD_INT 5
25077: PUSH
25078: LD_INT 5
25080: PUSH
25081: EMPTY
25082: LIST
25083: LIST
25084: PUSH
25085: LD_INT 4
25087: PUSH
25088: LD_INT 5
25090: PUSH
25091: EMPTY
25092: LIST
25093: LIST
25094: PUSH
25095: LD_INT 3
25097: PUSH
25098: LD_INT 4
25100: PUSH
25101: EMPTY
25102: LIST
25103: LIST
25104: PUSH
25105: LD_INT 3
25107: PUSH
25108: LD_INT 3
25110: PUSH
25111: EMPTY
25112: LIST
25113: LIST
25114: PUSH
25115: LD_INT 5
25117: PUSH
25118: LD_INT 3
25120: PUSH
25121: EMPTY
25122: LIST
25123: LIST
25124: PUSH
25125: LD_INT 3
25127: PUSH
25128: LD_INT 5
25130: PUSH
25131: EMPTY
25132: LIST
25133: LIST
25134: PUSH
25135: EMPTY
25136: LIST
25137: LIST
25138: LIST
25139: LIST
25140: LIST
25141: LIST
25142: LIST
25143: LIST
25144: LIST
25145: LIST
25146: LIST
25147: LIST
25148: LIST
25149: LIST
25150: LIST
25151: LIST
25152: LIST
25153: LIST
25154: LIST
25155: LIST
25156: LIST
25157: LIST
25158: LIST
25159: LIST
25160: LIST
25161: LIST
25162: LIST
25163: LIST
25164: LIST
25165: LIST
25166: LIST
25167: LIST
25168: LIST
25169: LIST
25170: LIST
25171: LIST
25172: LIST
25173: LIST
25174: LIST
25175: LIST
25176: LIST
25177: LIST
25178: LIST
25179: LIST
25180: LIST
25181: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25182: LD_ADDR_VAR 0 33
25186: PUSH
25187: LD_INT 4
25189: NEG
25190: PUSH
25191: LD_INT 4
25193: NEG
25194: PUSH
25195: EMPTY
25196: LIST
25197: LIST
25198: PUSH
25199: LD_INT 4
25201: NEG
25202: PUSH
25203: LD_INT 5
25205: NEG
25206: PUSH
25207: EMPTY
25208: LIST
25209: LIST
25210: PUSH
25211: LD_INT 3
25213: NEG
25214: PUSH
25215: LD_INT 4
25217: NEG
25218: PUSH
25219: EMPTY
25220: LIST
25221: LIST
25222: PUSH
25223: LD_INT 3
25225: NEG
25226: PUSH
25227: LD_INT 3
25229: NEG
25230: PUSH
25231: EMPTY
25232: LIST
25233: LIST
25234: PUSH
25235: LD_INT 4
25237: NEG
25238: PUSH
25239: LD_INT 3
25241: NEG
25242: PUSH
25243: EMPTY
25244: LIST
25245: LIST
25246: PUSH
25247: LD_INT 5
25249: NEG
25250: PUSH
25251: LD_INT 4
25253: NEG
25254: PUSH
25255: EMPTY
25256: LIST
25257: LIST
25258: PUSH
25259: LD_INT 5
25261: NEG
25262: PUSH
25263: LD_INT 5
25265: NEG
25266: PUSH
25267: EMPTY
25268: LIST
25269: LIST
25270: PUSH
25271: LD_INT 3
25273: NEG
25274: PUSH
25275: LD_INT 5
25277: NEG
25278: PUSH
25279: EMPTY
25280: LIST
25281: LIST
25282: PUSH
25283: LD_INT 5
25285: NEG
25286: PUSH
25287: LD_INT 3
25289: NEG
25290: PUSH
25291: EMPTY
25292: LIST
25293: LIST
25294: PUSH
25295: LD_INT 0
25297: PUSH
25298: LD_INT 3
25300: NEG
25301: PUSH
25302: EMPTY
25303: LIST
25304: LIST
25305: PUSH
25306: LD_INT 0
25308: PUSH
25309: LD_INT 4
25311: NEG
25312: PUSH
25313: EMPTY
25314: LIST
25315: LIST
25316: PUSH
25317: LD_INT 1
25319: PUSH
25320: LD_INT 3
25322: NEG
25323: PUSH
25324: EMPTY
25325: LIST
25326: LIST
25327: PUSH
25328: LD_INT 1
25330: PUSH
25331: LD_INT 2
25333: NEG
25334: PUSH
25335: EMPTY
25336: LIST
25337: LIST
25338: PUSH
25339: LD_INT 0
25341: PUSH
25342: LD_INT 2
25344: NEG
25345: PUSH
25346: EMPTY
25347: LIST
25348: LIST
25349: PUSH
25350: LD_INT 1
25352: NEG
25353: PUSH
25354: LD_INT 3
25356: NEG
25357: PUSH
25358: EMPTY
25359: LIST
25360: LIST
25361: PUSH
25362: LD_INT 1
25364: NEG
25365: PUSH
25366: LD_INT 4
25368: NEG
25369: PUSH
25370: EMPTY
25371: LIST
25372: LIST
25373: PUSH
25374: LD_INT 2
25376: PUSH
25377: LD_INT 2
25379: NEG
25380: PUSH
25381: EMPTY
25382: LIST
25383: LIST
25384: PUSH
25385: LD_INT 2
25387: NEG
25388: PUSH
25389: LD_INT 4
25391: NEG
25392: PUSH
25393: EMPTY
25394: LIST
25395: LIST
25396: PUSH
25397: LD_INT 4
25399: PUSH
25400: LD_INT 0
25402: PUSH
25403: EMPTY
25404: LIST
25405: LIST
25406: PUSH
25407: LD_INT 4
25409: PUSH
25410: LD_INT 1
25412: NEG
25413: PUSH
25414: EMPTY
25415: LIST
25416: LIST
25417: PUSH
25418: LD_INT 5
25420: PUSH
25421: LD_INT 0
25423: PUSH
25424: EMPTY
25425: LIST
25426: LIST
25427: PUSH
25428: LD_INT 5
25430: PUSH
25431: LD_INT 1
25433: PUSH
25434: EMPTY
25435: LIST
25436: LIST
25437: PUSH
25438: LD_INT 4
25440: PUSH
25441: LD_INT 1
25443: PUSH
25444: EMPTY
25445: LIST
25446: LIST
25447: PUSH
25448: LD_INT 3
25450: PUSH
25451: LD_INT 0
25453: PUSH
25454: EMPTY
25455: LIST
25456: LIST
25457: PUSH
25458: LD_INT 3
25460: PUSH
25461: LD_INT 1
25463: NEG
25464: PUSH
25465: EMPTY
25466: LIST
25467: LIST
25468: PUSH
25469: LD_INT 3
25471: PUSH
25472: LD_INT 2
25474: NEG
25475: PUSH
25476: EMPTY
25477: LIST
25478: LIST
25479: PUSH
25480: LD_INT 5
25482: PUSH
25483: LD_INT 2
25485: PUSH
25486: EMPTY
25487: LIST
25488: LIST
25489: PUSH
25490: LD_INT 3
25492: PUSH
25493: LD_INT 3
25495: PUSH
25496: EMPTY
25497: LIST
25498: LIST
25499: PUSH
25500: LD_INT 3
25502: PUSH
25503: LD_INT 2
25505: PUSH
25506: EMPTY
25507: LIST
25508: LIST
25509: PUSH
25510: LD_INT 4
25512: PUSH
25513: LD_INT 3
25515: PUSH
25516: EMPTY
25517: LIST
25518: LIST
25519: PUSH
25520: LD_INT 4
25522: PUSH
25523: LD_INT 4
25525: PUSH
25526: EMPTY
25527: LIST
25528: LIST
25529: PUSH
25530: LD_INT 3
25532: PUSH
25533: LD_INT 4
25535: PUSH
25536: EMPTY
25537: LIST
25538: LIST
25539: PUSH
25540: LD_INT 2
25542: PUSH
25543: LD_INT 3
25545: PUSH
25546: EMPTY
25547: LIST
25548: LIST
25549: PUSH
25550: LD_INT 2
25552: PUSH
25553: LD_INT 2
25555: PUSH
25556: EMPTY
25557: LIST
25558: LIST
25559: PUSH
25560: LD_INT 4
25562: PUSH
25563: LD_INT 2
25565: PUSH
25566: EMPTY
25567: LIST
25568: LIST
25569: PUSH
25570: LD_INT 2
25572: PUSH
25573: LD_INT 4
25575: PUSH
25576: EMPTY
25577: LIST
25578: LIST
25579: PUSH
25580: LD_INT 0
25582: PUSH
25583: LD_INT 4
25585: PUSH
25586: EMPTY
25587: LIST
25588: LIST
25589: PUSH
25590: LD_INT 0
25592: PUSH
25593: LD_INT 3
25595: PUSH
25596: EMPTY
25597: LIST
25598: LIST
25599: PUSH
25600: LD_INT 1
25602: PUSH
25603: LD_INT 4
25605: PUSH
25606: EMPTY
25607: LIST
25608: LIST
25609: PUSH
25610: LD_INT 1
25612: PUSH
25613: LD_INT 5
25615: PUSH
25616: EMPTY
25617: LIST
25618: LIST
25619: PUSH
25620: LD_INT 0
25622: PUSH
25623: LD_INT 5
25625: PUSH
25626: EMPTY
25627: LIST
25628: LIST
25629: PUSH
25630: LD_INT 1
25632: NEG
25633: PUSH
25634: LD_INT 4
25636: PUSH
25637: EMPTY
25638: LIST
25639: LIST
25640: PUSH
25641: LD_INT 1
25643: NEG
25644: PUSH
25645: LD_INT 3
25647: PUSH
25648: EMPTY
25649: LIST
25650: LIST
25651: PUSH
25652: LD_INT 2
25654: PUSH
25655: LD_INT 5
25657: PUSH
25658: EMPTY
25659: LIST
25660: LIST
25661: PUSH
25662: LD_INT 2
25664: NEG
25665: PUSH
25666: LD_INT 3
25668: PUSH
25669: EMPTY
25670: LIST
25671: LIST
25672: PUSH
25673: EMPTY
25674: LIST
25675: LIST
25676: LIST
25677: LIST
25678: LIST
25679: LIST
25680: LIST
25681: LIST
25682: LIST
25683: LIST
25684: LIST
25685: LIST
25686: LIST
25687: LIST
25688: LIST
25689: LIST
25690: LIST
25691: LIST
25692: LIST
25693: LIST
25694: LIST
25695: LIST
25696: LIST
25697: LIST
25698: LIST
25699: LIST
25700: LIST
25701: LIST
25702: LIST
25703: LIST
25704: LIST
25705: LIST
25706: LIST
25707: LIST
25708: LIST
25709: LIST
25710: LIST
25711: LIST
25712: LIST
25713: LIST
25714: LIST
25715: LIST
25716: LIST
25717: LIST
25718: LIST
25719: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25720: LD_ADDR_VAR 0 34
25724: PUSH
25725: LD_INT 0
25727: PUSH
25728: LD_INT 4
25730: NEG
25731: PUSH
25732: EMPTY
25733: LIST
25734: LIST
25735: PUSH
25736: LD_INT 0
25738: PUSH
25739: LD_INT 5
25741: NEG
25742: PUSH
25743: EMPTY
25744: LIST
25745: LIST
25746: PUSH
25747: LD_INT 1
25749: PUSH
25750: LD_INT 4
25752: NEG
25753: PUSH
25754: EMPTY
25755: LIST
25756: LIST
25757: PUSH
25758: LD_INT 1
25760: PUSH
25761: LD_INT 3
25763: NEG
25764: PUSH
25765: EMPTY
25766: LIST
25767: LIST
25768: PUSH
25769: LD_INT 0
25771: PUSH
25772: LD_INT 3
25774: NEG
25775: PUSH
25776: EMPTY
25777: LIST
25778: LIST
25779: PUSH
25780: LD_INT 1
25782: NEG
25783: PUSH
25784: LD_INT 4
25786: NEG
25787: PUSH
25788: EMPTY
25789: LIST
25790: LIST
25791: PUSH
25792: LD_INT 1
25794: NEG
25795: PUSH
25796: LD_INT 5
25798: NEG
25799: PUSH
25800: EMPTY
25801: LIST
25802: LIST
25803: PUSH
25804: LD_INT 2
25806: PUSH
25807: LD_INT 3
25809: NEG
25810: PUSH
25811: EMPTY
25812: LIST
25813: LIST
25814: PUSH
25815: LD_INT 2
25817: NEG
25818: PUSH
25819: LD_INT 5
25821: NEG
25822: PUSH
25823: EMPTY
25824: LIST
25825: LIST
25826: PUSH
25827: LD_INT 3
25829: PUSH
25830: LD_INT 0
25832: PUSH
25833: EMPTY
25834: LIST
25835: LIST
25836: PUSH
25837: LD_INT 3
25839: PUSH
25840: LD_INT 1
25842: NEG
25843: PUSH
25844: EMPTY
25845: LIST
25846: LIST
25847: PUSH
25848: LD_INT 4
25850: PUSH
25851: LD_INT 0
25853: PUSH
25854: EMPTY
25855: LIST
25856: LIST
25857: PUSH
25858: LD_INT 4
25860: PUSH
25861: LD_INT 1
25863: PUSH
25864: EMPTY
25865: LIST
25866: LIST
25867: PUSH
25868: LD_INT 3
25870: PUSH
25871: LD_INT 1
25873: PUSH
25874: EMPTY
25875: LIST
25876: LIST
25877: PUSH
25878: LD_INT 2
25880: PUSH
25881: LD_INT 0
25883: PUSH
25884: EMPTY
25885: LIST
25886: LIST
25887: PUSH
25888: LD_INT 2
25890: PUSH
25891: LD_INT 1
25893: NEG
25894: PUSH
25895: EMPTY
25896: LIST
25897: LIST
25898: PUSH
25899: LD_INT 2
25901: PUSH
25902: LD_INT 2
25904: NEG
25905: PUSH
25906: EMPTY
25907: LIST
25908: LIST
25909: PUSH
25910: LD_INT 4
25912: PUSH
25913: LD_INT 2
25915: PUSH
25916: EMPTY
25917: LIST
25918: LIST
25919: PUSH
25920: LD_INT 4
25922: PUSH
25923: LD_INT 4
25925: PUSH
25926: EMPTY
25927: LIST
25928: LIST
25929: PUSH
25930: LD_INT 4
25932: PUSH
25933: LD_INT 3
25935: PUSH
25936: EMPTY
25937: LIST
25938: LIST
25939: PUSH
25940: LD_INT 5
25942: PUSH
25943: LD_INT 4
25945: PUSH
25946: EMPTY
25947: LIST
25948: LIST
25949: PUSH
25950: LD_INT 5
25952: PUSH
25953: LD_INT 5
25955: PUSH
25956: EMPTY
25957: LIST
25958: LIST
25959: PUSH
25960: LD_INT 4
25962: PUSH
25963: LD_INT 5
25965: PUSH
25966: EMPTY
25967: LIST
25968: LIST
25969: PUSH
25970: LD_INT 3
25972: PUSH
25973: LD_INT 4
25975: PUSH
25976: EMPTY
25977: LIST
25978: LIST
25979: PUSH
25980: LD_INT 3
25982: PUSH
25983: LD_INT 3
25985: PUSH
25986: EMPTY
25987: LIST
25988: LIST
25989: PUSH
25990: LD_INT 5
25992: PUSH
25993: LD_INT 3
25995: PUSH
25996: EMPTY
25997: LIST
25998: LIST
25999: PUSH
26000: LD_INT 3
26002: PUSH
26003: LD_INT 5
26005: PUSH
26006: EMPTY
26007: LIST
26008: LIST
26009: PUSH
26010: LD_INT 0
26012: PUSH
26013: LD_INT 3
26015: PUSH
26016: EMPTY
26017: LIST
26018: LIST
26019: PUSH
26020: LD_INT 0
26022: PUSH
26023: LD_INT 2
26025: PUSH
26026: EMPTY
26027: LIST
26028: LIST
26029: PUSH
26030: LD_INT 1
26032: PUSH
26033: LD_INT 3
26035: PUSH
26036: EMPTY
26037: LIST
26038: LIST
26039: PUSH
26040: LD_INT 1
26042: PUSH
26043: LD_INT 4
26045: PUSH
26046: EMPTY
26047: LIST
26048: LIST
26049: PUSH
26050: LD_INT 0
26052: PUSH
26053: LD_INT 4
26055: PUSH
26056: EMPTY
26057: LIST
26058: LIST
26059: PUSH
26060: LD_INT 1
26062: NEG
26063: PUSH
26064: LD_INT 3
26066: PUSH
26067: EMPTY
26068: LIST
26069: LIST
26070: PUSH
26071: LD_INT 1
26073: NEG
26074: PUSH
26075: LD_INT 2
26077: PUSH
26078: EMPTY
26079: LIST
26080: LIST
26081: PUSH
26082: LD_INT 2
26084: PUSH
26085: LD_INT 4
26087: PUSH
26088: EMPTY
26089: LIST
26090: LIST
26091: PUSH
26092: LD_INT 2
26094: NEG
26095: PUSH
26096: LD_INT 2
26098: PUSH
26099: EMPTY
26100: LIST
26101: LIST
26102: PUSH
26103: LD_INT 4
26105: NEG
26106: PUSH
26107: LD_INT 0
26109: PUSH
26110: EMPTY
26111: LIST
26112: LIST
26113: PUSH
26114: LD_INT 4
26116: NEG
26117: PUSH
26118: LD_INT 1
26120: NEG
26121: PUSH
26122: EMPTY
26123: LIST
26124: LIST
26125: PUSH
26126: LD_INT 3
26128: NEG
26129: PUSH
26130: LD_INT 0
26132: PUSH
26133: EMPTY
26134: LIST
26135: LIST
26136: PUSH
26137: LD_INT 3
26139: NEG
26140: PUSH
26141: LD_INT 1
26143: PUSH
26144: EMPTY
26145: LIST
26146: LIST
26147: PUSH
26148: LD_INT 4
26150: NEG
26151: PUSH
26152: LD_INT 1
26154: PUSH
26155: EMPTY
26156: LIST
26157: LIST
26158: PUSH
26159: LD_INT 5
26161: NEG
26162: PUSH
26163: LD_INT 0
26165: PUSH
26166: EMPTY
26167: LIST
26168: LIST
26169: PUSH
26170: LD_INT 5
26172: NEG
26173: PUSH
26174: LD_INT 1
26176: NEG
26177: PUSH
26178: EMPTY
26179: LIST
26180: LIST
26181: PUSH
26182: LD_INT 5
26184: NEG
26185: PUSH
26186: LD_INT 2
26188: NEG
26189: PUSH
26190: EMPTY
26191: LIST
26192: LIST
26193: PUSH
26194: LD_INT 3
26196: NEG
26197: PUSH
26198: LD_INT 2
26200: PUSH
26201: EMPTY
26202: LIST
26203: LIST
26204: PUSH
26205: EMPTY
26206: LIST
26207: LIST
26208: LIST
26209: LIST
26210: LIST
26211: LIST
26212: LIST
26213: LIST
26214: LIST
26215: LIST
26216: LIST
26217: LIST
26218: LIST
26219: LIST
26220: LIST
26221: LIST
26222: LIST
26223: LIST
26224: LIST
26225: LIST
26226: LIST
26227: LIST
26228: LIST
26229: LIST
26230: LIST
26231: LIST
26232: LIST
26233: LIST
26234: LIST
26235: LIST
26236: LIST
26237: LIST
26238: LIST
26239: LIST
26240: LIST
26241: LIST
26242: LIST
26243: LIST
26244: LIST
26245: LIST
26246: LIST
26247: LIST
26248: LIST
26249: LIST
26250: LIST
26251: ST_TO_ADDR
// end ; end ;
26252: GO 26255
26254: POP
// case btype of b_depot , b_warehouse :
26255: LD_VAR 0 1
26259: PUSH
26260: LD_INT 0
26262: DOUBLE
26263: EQUAL
26264: IFTRUE 26274
26266: LD_INT 1
26268: DOUBLE
26269: EQUAL
26270: IFTRUE 26274
26272: GO 26475
26274: POP
// case nation of nation_american :
26275: LD_VAR 0 5
26279: PUSH
26280: LD_INT 1
26282: DOUBLE
26283: EQUAL
26284: IFTRUE 26288
26286: GO 26344
26288: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26289: LD_ADDR_VAR 0 9
26293: PUSH
26294: LD_VAR 0 11
26298: PUSH
26299: LD_VAR 0 12
26303: PUSH
26304: LD_VAR 0 13
26308: PUSH
26309: LD_VAR 0 14
26313: PUSH
26314: LD_VAR 0 15
26318: PUSH
26319: LD_VAR 0 16
26323: PUSH
26324: EMPTY
26325: LIST
26326: LIST
26327: LIST
26328: LIST
26329: LIST
26330: LIST
26331: PUSH
26332: LD_VAR 0 4
26336: PUSH
26337: LD_INT 1
26339: PLUS
26340: ARRAY
26341: ST_TO_ADDR
26342: GO 26473
26344: LD_INT 2
26346: DOUBLE
26347: EQUAL
26348: IFTRUE 26352
26350: GO 26408
26352: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26353: LD_ADDR_VAR 0 9
26357: PUSH
26358: LD_VAR 0 17
26362: PUSH
26363: LD_VAR 0 18
26367: PUSH
26368: LD_VAR 0 19
26372: PUSH
26373: LD_VAR 0 20
26377: PUSH
26378: LD_VAR 0 21
26382: PUSH
26383: LD_VAR 0 22
26387: PUSH
26388: EMPTY
26389: LIST
26390: LIST
26391: LIST
26392: LIST
26393: LIST
26394: LIST
26395: PUSH
26396: LD_VAR 0 4
26400: PUSH
26401: LD_INT 1
26403: PLUS
26404: ARRAY
26405: ST_TO_ADDR
26406: GO 26473
26408: LD_INT 3
26410: DOUBLE
26411: EQUAL
26412: IFTRUE 26416
26414: GO 26472
26416: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26417: LD_ADDR_VAR 0 9
26421: PUSH
26422: LD_VAR 0 23
26426: PUSH
26427: LD_VAR 0 24
26431: PUSH
26432: LD_VAR 0 25
26436: PUSH
26437: LD_VAR 0 26
26441: PUSH
26442: LD_VAR 0 27
26446: PUSH
26447: LD_VAR 0 28
26451: PUSH
26452: EMPTY
26453: LIST
26454: LIST
26455: LIST
26456: LIST
26457: LIST
26458: LIST
26459: PUSH
26460: LD_VAR 0 4
26464: PUSH
26465: LD_INT 1
26467: PLUS
26468: ARRAY
26469: ST_TO_ADDR
26470: GO 26473
26472: POP
26473: GO 27022
26475: LD_INT 2
26477: DOUBLE
26478: EQUAL
26479: IFTRUE 26489
26481: LD_INT 3
26483: DOUBLE
26484: EQUAL
26485: IFTRUE 26489
26487: GO 26545
26489: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26490: LD_ADDR_VAR 0 9
26494: PUSH
26495: LD_VAR 0 29
26499: PUSH
26500: LD_VAR 0 30
26504: PUSH
26505: LD_VAR 0 31
26509: PUSH
26510: LD_VAR 0 32
26514: PUSH
26515: LD_VAR 0 33
26519: PUSH
26520: LD_VAR 0 34
26524: PUSH
26525: EMPTY
26526: LIST
26527: LIST
26528: LIST
26529: LIST
26530: LIST
26531: LIST
26532: PUSH
26533: LD_VAR 0 4
26537: PUSH
26538: LD_INT 1
26540: PLUS
26541: ARRAY
26542: ST_TO_ADDR
26543: GO 27022
26545: LD_INT 16
26547: DOUBLE
26548: EQUAL
26549: IFTRUE 26601
26551: LD_INT 17
26553: DOUBLE
26554: EQUAL
26555: IFTRUE 26601
26557: LD_INT 18
26559: DOUBLE
26560: EQUAL
26561: IFTRUE 26601
26563: LD_INT 19
26565: DOUBLE
26566: EQUAL
26567: IFTRUE 26601
26569: LD_INT 20
26571: DOUBLE
26572: EQUAL
26573: IFTRUE 26601
26575: LD_INT 21
26577: DOUBLE
26578: EQUAL
26579: IFTRUE 26601
26581: LD_INT 23
26583: DOUBLE
26584: EQUAL
26585: IFTRUE 26601
26587: LD_INT 24
26589: DOUBLE
26590: EQUAL
26591: IFTRUE 26601
26593: LD_INT 25
26595: DOUBLE
26596: EQUAL
26597: IFTRUE 26601
26599: GO 26657
26601: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26602: LD_ADDR_VAR 0 9
26606: PUSH
26607: LD_VAR 0 35
26611: PUSH
26612: LD_VAR 0 36
26616: PUSH
26617: LD_VAR 0 37
26621: PUSH
26622: LD_VAR 0 38
26626: PUSH
26627: LD_VAR 0 39
26631: PUSH
26632: LD_VAR 0 40
26636: PUSH
26637: EMPTY
26638: LIST
26639: LIST
26640: LIST
26641: LIST
26642: LIST
26643: LIST
26644: PUSH
26645: LD_VAR 0 4
26649: PUSH
26650: LD_INT 1
26652: PLUS
26653: ARRAY
26654: ST_TO_ADDR
26655: GO 27022
26657: LD_INT 6
26659: DOUBLE
26660: EQUAL
26661: IFTRUE 26713
26663: LD_INT 7
26665: DOUBLE
26666: EQUAL
26667: IFTRUE 26713
26669: LD_INT 8
26671: DOUBLE
26672: EQUAL
26673: IFTRUE 26713
26675: LD_INT 13
26677: DOUBLE
26678: EQUAL
26679: IFTRUE 26713
26681: LD_INT 12
26683: DOUBLE
26684: EQUAL
26685: IFTRUE 26713
26687: LD_INT 15
26689: DOUBLE
26690: EQUAL
26691: IFTRUE 26713
26693: LD_INT 11
26695: DOUBLE
26696: EQUAL
26697: IFTRUE 26713
26699: LD_INT 14
26701: DOUBLE
26702: EQUAL
26703: IFTRUE 26713
26705: LD_INT 10
26707: DOUBLE
26708: EQUAL
26709: IFTRUE 26713
26711: GO 26769
26713: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26714: LD_ADDR_VAR 0 9
26718: PUSH
26719: LD_VAR 0 41
26723: PUSH
26724: LD_VAR 0 42
26728: PUSH
26729: LD_VAR 0 43
26733: PUSH
26734: LD_VAR 0 44
26738: PUSH
26739: LD_VAR 0 45
26743: PUSH
26744: LD_VAR 0 46
26748: PUSH
26749: EMPTY
26750: LIST
26751: LIST
26752: LIST
26753: LIST
26754: LIST
26755: LIST
26756: PUSH
26757: LD_VAR 0 4
26761: PUSH
26762: LD_INT 1
26764: PLUS
26765: ARRAY
26766: ST_TO_ADDR
26767: GO 27022
26769: LD_INT 36
26771: DOUBLE
26772: EQUAL
26773: IFTRUE 26777
26775: GO 26833
26777: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26778: LD_ADDR_VAR 0 9
26782: PUSH
26783: LD_VAR 0 47
26787: PUSH
26788: LD_VAR 0 48
26792: PUSH
26793: LD_VAR 0 49
26797: PUSH
26798: LD_VAR 0 50
26802: PUSH
26803: LD_VAR 0 51
26807: PUSH
26808: LD_VAR 0 52
26812: PUSH
26813: EMPTY
26814: LIST
26815: LIST
26816: LIST
26817: LIST
26818: LIST
26819: LIST
26820: PUSH
26821: LD_VAR 0 4
26825: PUSH
26826: LD_INT 1
26828: PLUS
26829: ARRAY
26830: ST_TO_ADDR
26831: GO 27022
26833: LD_INT 4
26835: DOUBLE
26836: EQUAL
26837: IFTRUE 26859
26839: LD_INT 5
26841: DOUBLE
26842: EQUAL
26843: IFTRUE 26859
26845: LD_INT 34
26847: DOUBLE
26848: EQUAL
26849: IFTRUE 26859
26851: LD_INT 37
26853: DOUBLE
26854: EQUAL
26855: IFTRUE 26859
26857: GO 26915
26859: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26860: LD_ADDR_VAR 0 9
26864: PUSH
26865: LD_VAR 0 53
26869: PUSH
26870: LD_VAR 0 54
26874: PUSH
26875: LD_VAR 0 55
26879: PUSH
26880: LD_VAR 0 56
26884: PUSH
26885: LD_VAR 0 57
26889: PUSH
26890: LD_VAR 0 58
26894: PUSH
26895: EMPTY
26896: LIST
26897: LIST
26898: LIST
26899: LIST
26900: LIST
26901: LIST
26902: PUSH
26903: LD_VAR 0 4
26907: PUSH
26908: LD_INT 1
26910: PLUS
26911: ARRAY
26912: ST_TO_ADDR
26913: GO 27022
26915: LD_INT 31
26917: DOUBLE
26918: EQUAL
26919: IFTRUE 26965
26921: LD_INT 32
26923: DOUBLE
26924: EQUAL
26925: IFTRUE 26965
26927: LD_INT 33
26929: DOUBLE
26930: EQUAL
26931: IFTRUE 26965
26933: LD_INT 27
26935: DOUBLE
26936: EQUAL
26937: IFTRUE 26965
26939: LD_INT 26
26941: DOUBLE
26942: EQUAL
26943: IFTRUE 26965
26945: LD_INT 28
26947: DOUBLE
26948: EQUAL
26949: IFTRUE 26965
26951: LD_INT 29
26953: DOUBLE
26954: EQUAL
26955: IFTRUE 26965
26957: LD_INT 30
26959: DOUBLE
26960: EQUAL
26961: IFTRUE 26965
26963: GO 27021
26965: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26966: LD_ADDR_VAR 0 9
26970: PUSH
26971: LD_VAR 0 59
26975: PUSH
26976: LD_VAR 0 60
26980: PUSH
26981: LD_VAR 0 61
26985: PUSH
26986: LD_VAR 0 62
26990: PUSH
26991: LD_VAR 0 63
26995: PUSH
26996: LD_VAR 0 64
27000: PUSH
27001: EMPTY
27002: LIST
27003: LIST
27004: LIST
27005: LIST
27006: LIST
27007: LIST
27008: PUSH
27009: LD_VAR 0 4
27013: PUSH
27014: LD_INT 1
27016: PLUS
27017: ARRAY
27018: ST_TO_ADDR
27019: GO 27022
27021: POP
// temp_list2 = [ ] ;
27022: LD_ADDR_VAR 0 10
27026: PUSH
27027: EMPTY
27028: ST_TO_ADDR
// for i in temp_list do
27029: LD_ADDR_VAR 0 8
27033: PUSH
27034: LD_VAR 0 9
27038: PUSH
27039: FOR_IN
27040: IFFALSE 27092
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27042: LD_ADDR_VAR 0 10
27046: PUSH
27047: LD_VAR 0 10
27051: PUSH
27052: LD_VAR 0 8
27056: PUSH
27057: LD_INT 1
27059: ARRAY
27060: PUSH
27061: LD_VAR 0 2
27065: PLUS
27066: PUSH
27067: LD_VAR 0 8
27071: PUSH
27072: LD_INT 2
27074: ARRAY
27075: PUSH
27076: LD_VAR 0 3
27080: PLUS
27081: PUSH
27082: EMPTY
27083: LIST
27084: LIST
27085: PUSH
27086: EMPTY
27087: LIST
27088: ADD
27089: ST_TO_ADDR
27090: GO 27039
27092: POP
27093: POP
// result = temp_list2 ;
27094: LD_ADDR_VAR 0 7
27098: PUSH
27099: LD_VAR 0 10
27103: ST_TO_ADDR
// end ;
27104: LD_VAR 0 7
27108: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27109: LD_INT 0
27111: PPUSH
27112: PPUSH
27113: PPUSH
// result := false ;
27114: LD_ADDR_VAR 0 4
27118: PUSH
27119: LD_INT 0
27121: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27122: LD_VAR 0 1
27126: NOT
27127: PUSH
27128: LD_VAR 0 2
27132: NOT
27133: OR
27134: PUSH
27135: LD_VAR 0 1
27139: PPUSH
27140: CALL_OW 310
27144: OR
27145: IFFALSE 27149
// exit ;
27147: GO 27353
// if distance < 0 then
27149: LD_VAR 0 3
27153: PUSH
27154: LD_INT 0
27156: LESS
27157: IFFALSE 27167
// distance := 0 ;
27159: LD_ADDR_VAR 0 3
27163: PUSH
27164: LD_INT 0
27166: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27167: LD_ADDR_VAR 0 6
27171: PUSH
27172: LD_VAR 0 2
27176: PPUSH
27177: CALL_OW 266
27181: PPUSH
27182: LD_VAR 0 2
27186: PPUSH
27187: CALL_OW 250
27191: PPUSH
27192: LD_VAR 0 2
27196: PPUSH
27197: CALL_OW 251
27201: PPUSH
27202: LD_VAR 0 2
27206: PPUSH
27207: CALL_OW 254
27211: PPUSH
27212: LD_VAR 0 2
27216: PPUSH
27217: CALL_OW 248
27221: PPUSH
27222: LD_INT 1
27224: PPUSH
27225: CALL 8570 0 6
27229: ST_TO_ADDR
// if not entrance then
27230: LD_VAR 0 6
27234: NOT
27235: IFFALSE 27239
// exit ;
27237: GO 27353
// for i in entrance do
27239: LD_ADDR_VAR 0 5
27243: PUSH
27244: LD_VAR 0 6
27248: PUSH
27249: FOR_IN
27250: IFFALSE 27351
// begin if not distance then
27252: LD_VAR 0 3
27256: NOT
27257: IFFALSE 27302
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27259: LD_VAR 0 1
27263: PPUSH
27264: LD_VAR 0 5
27268: PUSH
27269: LD_INT 1
27271: ARRAY
27272: PPUSH
27273: LD_VAR 0 5
27277: PUSH
27278: LD_INT 2
27280: ARRAY
27281: PPUSH
27282: CALL_OW 307
27286: IFFALSE 27300
// begin result := true ;
27288: LD_ADDR_VAR 0 4
27292: PUSH
27293: LD_INT 1
27295: ST_TO_ADDR
// exit ;
27296: POP
27297: POP
27298: GO 27353
// end ; end else
27300: GO 27349
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27302: LD_VAR 0 1
27306: PPUSH
27307: LD_VAR 0 5
27311: PUSH
27312: LD_INT 1
27314: ARRAY
27315: PPUSH
27316: LD_VAR 0 5
27320: PUSH
27321: LD_INT 2
27323: ARRAY
27324: PPUSH
27325: CALL_OW 297
27329: PUSH
27330: LD_VAR 0 3
27334: LESSEQUAL
27335: IFFALSE 27349
// begin result := true ;
27337: LD_ADDR_VAR 0 4
27341: PUSH
27342: LD_INT 1
27344: ST_TO_ADDR
// exit ;
27345: POP
27346: POP
27347: GO 27353
// end ; end ; end ;
27349: GO 27249
27351: POP
27352: POP
// end ;
27353: LD_VAR 0 4
27357: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27358: LD_INT 0
27360: PPUSH
27361: PPUSH
27362: PPUSH
// result := false ;
27363: LD_ADDR_VAR 0 3
27367: PUSH
27368: LD_INT 0
27370: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27371: LD_VAR 0 1
27375: NOT
27376: PUSH
27377: LD_VAR 0 2
27381: NOT
27382: OR
27383: PUSH
27384: LD_VAR 0 1
27388: PPUSH
27389: CALL_OW 302
27393: NOT
27394: OR
27395: PUSH
27396: LD_VAR 0 2
27400: PPUSH
27401: CALL_OW 302
27405: NOT
27406: OR
27407: IFFALSE 27411
// exit ;
27409: GO 27572
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27411: LD_VAR 0 1
27415: PPUSH
27416: LD_INT 81
27418: PUSH
27419: LD_VAR 0 1
27423: PPUSH
27424: CALL_OW 255
27428: PUSH
27429: EMPTY
27430: LIST
27431: LIST
27432: PUSH
27433: LD_INT 3
27435: PUSH
27436: LD_INT 21
27438: PUSH
27439: LD_INT 3
27441: PUSH
27442: EMPTY
27443: LIST
27444: LIST
27445: PUSH
27446: EMPTY
27447: LIST
27448: LIST
27449: PUSH
27450: EMPTY
27451: LIST
27452: LIST
27453: PPUSH
27454: CALL_OW 69
27458: PPUSH
27459: LD_VAR 0 1
27463: PPUSH
27464: CALL_OW 74
27468: PPUSH
27469: CALL_OW 296
27473: PUSH
27474: LD_INT 8
27476: LESS
27477: IFFALSE 27481
// exit ;
27479: GO 27572
// building := IsInUnit ( unit2 ) ;
27481: LD_ADDR_VAR 0 5
27485: PUSH
27486: LD_VAR 0 2
27490: PPUSH
27491: CALL_OW 310
27495: ST_TO_ADDR
// if building then
27496: LD_VAR 0 5
27500: IFFALSE 27527
// result := IsNearbyEntrance ( unit , building , 2 ) else
27502: LD_ADDR_VAR 0 3
27506: PUSH
27507: LD_VAR 0 1
27511: PPUSH
27512: LD_VAR 0 5
27516: PPUSH
27517: LD_INT 2
27519: PPUSH
27520: CALL 27109 0 3
27524: ST_TO_ADDR
27525: GO 27572
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27527: LD_ADDR_VAR 0 3
27531: PUSH
27532: LD_VAR 0 1
27536: PPUSH
27537: LD_VAR 0 2
27541: PPUSH
27542: CALL_OW 296
27546: PUSH
27547: LD_INT 6
27549: LESS
27550: PUSH
27551: LD_VAR 0 2
27555: PPUSH
27556: CALL_OW 255
27560: PPUSH
27561: LD_VAR 0 1
27565: PPUSH
27566: CALL_OW 292
27570: AND
27571: ST_TO_ADDR
// end ;
27572: LD_VAR 0 3
27576: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27577: LD_INT 0
27579: PPUSH
27580: PPUSH
27581: PPUSH
27582: PPUSH
// tmp := [ ] ;
27583: LD_ADDR_VAR 0 3
27587: PUSH
27588: EMPTY
27589: ST_TO_ADDR
// list := [ ] ;
27590: LD_ADDR_VAR 0 5
27594: PUSH
27595: EMPTY
27596: ST_TO_ADDR
// for i = 16 to 25 do
27597: LD_ADDR_VAR 0 4
27601: PUSH
27602: DOUBLE
27603: LD_INT 16
27605: DEC
27606: ST_TO_ADDR
27607: LD_INT 25
27609: PUSH
27610: FOR_TO
27611: IFFALSE 27684
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27613: LD_ADDR_VAR 0 3
27617: PUSH
27618: LD_VAR 0 3
27622: PUSH
27623: LD_INT 22
27625: PUSH
27626: LD_VAR 0 1
27630: PPUSH
27631: CALL_OW 255
27635: PUSH
27636: EMPTY
27637: LIST
27638: LIST
27639: PUSH
27640: LD_INT 91
27642: PUSH
27643: LD_VAR 0 1
27647: PUSH
27648: LD_INT 6
27650: PUSH
27651: EMPTY
27652: LIST
27653: LIST
27654: LIST
27655: PUSH
27656: LD_INT 30
27658: PUSH
27659: LD_VAR 0 4
27663: PUSH
27664: EMPTY
27665: LIST
27666: LIST
27667: PUSH
27668: EMPTY
27669: LIST
27670: LIST
27671: LIST
27672: PUSH
27673: EMPTY
27674: LIST
27675: PPUSH
27676: CALL_OW 69
27680: ADD
27681: ST_TO_ADDR
27682: GO 27610
27684: POP
27685: POP
// for i = 1 to tmp do
27686: LD_ADDR_VAR 0 4
27690: PUSH
27691: DOUBLE
27692: LD_INT 1
27694: DEC
27695: ST_TO_ADDR
27696: LD_VAR 0 3
27700: PUSH
27701: FOR_TO
27702: IFFALSE 27790
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27704: LD_ADDR_VAR 0 5
27708: PUSH
27709: LD_VAR 0 5
27713: PUSH
27714: LD_VAR 0 3
27718: PUSH
27719: LD_VAR 0 4
27723: ARRAY
27724: PPUSH
27725: CALL_OW 266
27729: PUSH
27730: LD_VAR 0 3
27734: PUSH
27735: LD_VAR 0 4
27739: ARRAY
27740: PPUSH
27741: CALL_OW 250
27745: PUSH
27746: LD_VAR 0 3
27750: PUSH
27751: LD_VAR 0 4
27755: ARRAY
27756: PPUSH
27757: CALL_OW 251
27761: PUSH
27762: LD_VAR 0 3
27766: PUSH
27767: LD_VAR 0 4
27771: ARRAY
27772: PPUSH
27773: CALL_OW 254
27777: PUSH
27778: EMPTY
27779: LIST
27780: LIST
27781: LIST
27782: LIST
27783: PUSH
27784: EMPTY
27785: LIST
27786: ADD
27787: ST_TO_ADDR
27788: GO 27701
27790: POP
27791: POP
// result := list ;
27792: LD_ADDR_VAR 0 2
27796: PUSH
27797: LD_VAR 0 5
27801: ST_TO_ADDR
// end ;
27802: LD_VAR 0 2
27806: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27807: LD_INT 0
27809: PPUSH
27810: PPUSH
27811: PPUSH
27812: PPUSH
27813: PPUSH
27814: PPUSH
27815: PPUSH
// if not factory then
27816: LD_VAR 0 1
27820: NOT
27821: IFFALSE 27825
// exit ;
27823: GO 28350
// if control = control_apeman then
27825: LD_VAR 0 4
27829: PUSH
27830: LD_INT 5
27832: EQUAL
27833: IFFALSE 27942
// begin tmp := UnitsInside ( factory ) ;
27835: LD_ADDR_VAR 0 8
27839: PUSH
27840: LD_VAR 0 1
27844: PPUSH
27845: CALL_OW 313
27849: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27850: LD_VAR 0 8
27854: PPUSH
27855: LD_INT 25
27857: PUSH
27858: LD_INT 12
27860: PUSH
27861: EMPTY
27862: LIST
27863: LIST
27864: PPUSH
27865: CALL_OW 72
27869: NOT
27870: IFFALSE 27880
// control := control_manual ;
27872: LD_ADDR_VAR 0 4
27876: PUSH
27877: LD_INT 1
27879: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27880: LD_ADDR_VAR 0 8
27884: PUSH
27885: LD_VAR 0 1
27889: PPUSH
27890: CALL 27577 0 1
27894: ST_TO_ADDR
// if tmp then
27895: LD_VAR 0 8
27899: IFFALSE 27942
// begin for i in tmp do
27901: LD_ADDR_VAR 0 7
27905: PUSH
27906: LD_VAR 0 8
27910: PUSH
27911: FOR_IN
27912: IFFALSE 27940
// if i [ 1 ] = b_ext_radar then
27914: LD_VAR 0 7
27918: PUSH
27919: LD_INT 1
27921: ARRAY
27922: PUSH
27923: LD_INT 20
27925: EQUAL
27926: IFFALSE 27938
// begin control := control_remote ;
27928: LD_ADDR_VAR 0 4
27932: PUSH
27933: LD_INT 2
27935: ST_TO_ADDR
// break ;
27936: GO 27940
// end ;
27938: GO 27911
27940: POP
27941: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27942: LD_VAR 0 1
27946: PPUSH
27947: LD_VAR 0 2
27951: PPUSH
27952: LD_VAR 0 3
27956: PPUSH
27957: LD_VAR 0 4
27961: PPUSH
27962: LD_VAR 0 5
27966: PPUSH
27967: CALL_OW 448
27971: IFFALSE 28006
// begin result := [ chassis , engine , control , weapon ] ;
27973: LD_ADDR_VAR 0 6
27977: PUSH
27978: LD_VAR 0 2
27982: PUSH
27983: LD_VAR 0 3
27987: PUSH
27988: LD_VAR 0 4
27992: PUSH
27993: LD_VAR 0 5
27997: PUSH
27998: EMPTY
27999: LIST
28000: LIST
28001: LIST
28002: LIST
28003: ST_TO_ADDR
// exit ;
28004: GO 28350
// end ; _chassis := AvailableChassisList ( factory ) ;
28006: LD_ADDR_VAR 0 9
28010: PUSH
28011: LD_VAR 0 1
28015: PPUSH
28016: CALL_OW 475
28020: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28021: LD_ADDR_VAR 0 11
28025: PUSH
28026: LD_VAR 0 1
28030: PPUSH
28031: CALL_OW 476
28035: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28036: LD_ADDR_VAR 0 12
28040: PUSH
28041: LD_VAR 0 1
28045: PPUSH
28046: CALL_OW 477
28050: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28051: LD_ADDR_VAR 0 10
28055: PUSH
28056: LD_VAR 0 1
28060: PPUSH
28061: CALL_OW 478
28065: ST_TO_ADDR
// if not chassis in _chassis then
28066: LD_VAR 0 2
28070: PUSH
28071: LD_VAR 0 9
28075: IN
28076: NOT
28077: IFFALSE 28103
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28079: LD_ADDR_VAR 0 2
28083: PUSH
28084: LD_VAR 0 9
28088: PUSH
28089: LD_INT 1
28091: PPUSH
28092: LD_VAR 0 9
28096: PPUSH
28097: CALL_OW 12
28101: ARRAY
28102: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28103: LD_VAR 0 2
28107: PPUSH
28108: LD_VAR 0 3
28112: PPUSH
28113: CALL 28355 0 2
28117: NOT
28118: IFFALSE 28177
// repeat engine := _engine [ 1 ] ;
28120: LD_ADDR_VAR 0 3
28124: PUSH
28125: LD_VAR 0 11
28129: PUSH
28130: LD_INT 1
28132: ARRAY
28133: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28134: LD_ADDR_VAR 0 11
28138: PUSH
28139: LD_VAR 0 11
28143: PPUSH
28144: LD_INT 1
28146: PPUSH
28147: CALL_OW 3
28151: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28152: LD_VAR 0 2
28156: PPUSH
28157: LD_VAR 0 3
28161: PPUSH
28162: CALL 28355 0 2
28166: PUSH
28167: LD_VAR 0 11
28171: PUSH
28172: EMPTY
28173: EQUAL
28174: OR
28175: IFFALSE 28120
// if not control in _control then
28177: LD_VAR 0 4
28181: PUSH
28182: LD_VAR 0 12
28186: IN
28187: NOT
28188: IFFALSE 28214
// control := _control [ rand ( 1 , _control ) ] ;
28190: LD_ADDR_VAR 0 4
28194: PUSH
28195: LD_VAR 0 12
28199: PUSH
28200: LD_INT 1
28202: PPUSH
28203: LD_VAR 0 12
28207: PPUSH
28208: CALL_OW 12
28212: ARRAY
28213: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28214: LD_VAR 0 2
28218: PPUSH
28219: LD_VAR 0 5
28223: PPUSH
28224: CALL 28575 0 2
28228: NOT
28229: IFFALSE 28288
// repeat weapon := _weapon [ 1 ] ;
28231: LD_ADDR_VAR 0 5
28235: PUSH
28236: LD_VAR 0 10
28240: PUSH
28241: LD_INT 1
28243: ARRAY
28244: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28245: LD_ADDR_VAR 0 10
28249: PUSH
28250: LD_VAR 0 10
28254: PPUSH
28255: LD_INT 1
28257: PPUSH
28258: CALL_OW 3
28262: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28263: LD_VAR 0 2
28267: PPUSH
28268: LD_VAR 0 5
28272: PPUSH
28273: CALL 28575 0 2
28277: PUSH
28278: LD_VAR 0 10
28282: PUSH
28283: EMPTY
28284: EQUAL
28285: OR
28286: IFFALSE 28231
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28288: LD_VAR 0 1
28292: PPUSH
28293: LD_VAR 0 2
28297: PPUSH
28298: LD_VAR 0 3
28302: PPUSH
28303: LD_VAR 0 4
28307: PPUSH
28308: LD_VAR 0 5
28312: PPUSH
28313: CALL_OW 448
28317: IFFALSE 28350
// result := [ chassis , engine , control , weapon ] ;
28319: LD_ADDR_VAR 0 6
28323: PUSH
28324: LD_VAR 0 2
28328: PUSH
28329: LD_VAR 0 3
28333: PUSH
28334: LD_VAR 0 4
28338: PUSH
28339: LD_VAR 0 5
28343: PUSH
28344: EMPTY
28345: LIST
28346: LIST
28347: LIST
28348: LIST
28349: ST_TO_ADDR
// end ;
28350: LD_VAR 0 6
28354: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28355: LD_INT 0
28357: PPUSH
// if not chassis or not engine then
28358: LD_VAR 0 1
28362: NOT
28363: PUSH
28364: LD_VAR 0 2
28368: NOT
28369: OR
28370: IFFALSE 28374
// exit ;
28372: GO 28570
// case engine of engine_solar :
28374: LD_VAR 0 2
28378: PUSH
28379: LD_INT 2
28381: DOUBLE
28382: EQUAL
28383: IFTRUE 28387
28385: GO 28425
28387: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28388: LD_ADDR_VAR 0 3
28392: PUSH
28393: LD_INT 11
28395: PUSH
28396: LD_INT 12
28398: PUSH
28399: LD_INT 13
28401: PUSH
28402: LD_INT 14
28404: PUSH
28405: LD_INT 1
28407: PUSH
28408: LD_INT 2
28410: PUSH
28411: LD_INT 3
28413: PUSH
28414: EMPTY
28415: LIST
28416: LIST
28417: LIST
28418: LIST
28419: LIST
28420: LIST
28421: LIST
28422: ST_TO_ADDR
28423: GO 28554
28425: LD_INT 1
28427: DOUBLE
28428: EQUAL
28429: IFTRUE 28433
28431: GO 28495
28433: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28434: LD_ADDR_VAR 0 3
28438: PUSH
28439: LD_INT 11
28441: PUSH
28442: LD_INT 12
28444: PUSH
28445: LD_INT 13
28447: PUSH
28448: LD_INT 14
28450: PUSH
28451: LD_INT 1
28453: PUSH
28454: LD_INT 2
28456: PUSH
28457: LD_INT 3
28459: PUSH
28460: LD_INT 4
28462: PUSH
28463: LD_INT 5
28465: PUSH
28466: LD_INT 21
28468: PUSH
28469: LD_INT 23
28471: PUSH
28472: LD_INT 22
28474: PUSH
28475: LD_INT 24
28477: PUSH
28478: EMPTY
28479: LIST
28480: LIST
28481: LIST
28482: LIST
28483: LIST
28484: LIST
28485: LIST
28486: LIST
28487: LIST
28488: LIST
28489: LIST
28490: LIST
28491: LIST
28492: ST_TO_ADDR
28493: GO 28554
28495: LD_INT 3
28497: DOUBLE
28498: EQUAL
28499: IFTRUE 28503
28501: GO 28553
28503: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28504: LD_ADDR_VAR 0 3
28508: PUSH
28509: LD_INT 13
28511: PUSH
28512: LD_INT 14
28514: PUSH
28515: LD_INT 2
28517: PUSH
28518: LD_INT 3
28520: PUSH
28521: LD_INT 4
28523: PUSH
28524: LD_INT 5
28526: PUSH
28527: LD_INT 21
28529: PUSH
28530: LD_INT 22
28532: PUSH
28533: LD_INT 23
28535: PUSH
28536: LD_INT 24
28538: PUSH
28539: EMPTY
28540: LIST
28541: LIST
28542: LIST
28543: LIST
28544: LIST
28545: LIST
28546: LIST
28547: LIST
28548: LIST
28549: LIST
28550: ST_TO_ADDR
28551: GO 28554
28553: POP
// result := ( chassis in result ) ;
28554: LD_ADDR_VAR 0 3
28558: PUSH
28559: LD_VAR 0 1
28563: PUSH
28564: LD_VAR 0 3
28568: IN
28569: ST_TO_ADDR
// end ;
28570: LD_VAR 0 3
28574: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28575: LD_INT 0
28577: PPUSH
// if not chassis or not weapon then
28578: LD_VAR 0 1
28582: NOT
28583: PUSH
28584: LD_VAR 0 2
28588: NOT
28589: OR
28590: IFFALSE 28594
// exit ;
28592: GO 29620
// case weapon of us_machine_gun :
28594: LD_VAR 0 2
28598: PUSH
28599: LD_INT 2
28601: DOUBLE
28602: EQUAL
28603: IFTRUE 28607
28605: GO 28637
28607: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28608: LD_ADDR_VAR 0 3
28612: PUSH
28613: LD_INT 1
28615: PUSH
28616: LD_INT 2
28618: PUSH
28619: LD_INT 3
28621: PUSH
28622: LD_INT 4
28624: PUSH
28625: LD_INT 5
28627: PUSH
28628: EMPTY
28629: LIST
28630: LIST
28631: LIST
28632: LIST
28633: LIST
28634: ST_TO_ADDR
28635: GO 29604
28637: LD_INT 3
28639: DOUBLE
28640: EQUAL
28641: IFTRUE 28645
28643: GO 28675
28645: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28646: LD_ADDR_VAR 0 3
28650: PUSH
28651: LD_INT 1
28653: PUSH
28654: LD_INT 2
28656: PUSH
28657: LD_INT 3
28659: PUSH
28660: LD_INT 4
28662: PUSH
28663: LD_INT 5
28665: PUSH
28666: EMPTY
28667: LIST
28668: LIST
28669: LIST
28670: LIST
28671: LIST
28672: ST_TO_ADDR
28673: GO 29604
28675: LD_INT 11
28677: DOUBLE
28678: EQUAL
28679: IFTRUE 28683
28681: GO 28713
28683: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28684: LD_ADDR_VAR 0 3
28688: PUSH
28689: LD_INT 1
28691: PUSH
28692: LD_INT 2
28694: PUSH
28695: LD_INT 3
28697: PUSH
28698: LD_INT 4
28700: PUSH
28701: LD_INT 5
28703: PUSH
28704: EMPTY
28705: LIST
28706: LIST
28707: LIST
28708: LIST
28709: LIST
28710: ST_TO_ADDR
28711: GO 29604
28713: LD_INT 4
28715: DOUBLE
28716: EQUAL
28717: IFTRUE 28721
28719: GO 28747
28721: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28722: LD_ADDR_VAR 0 3
28726: PUSH
28727: LD_INT 2
28729: PUSH
28730: LD_INT 3
28732: PUSH
28733: LD_INT 4
28735: PUSH
28736: LD_INT 5
28738: PUSH
28739: EMPTY
28740: LIST
28741: LIST
28742: LIST
28743: LIST
28744: ST_TO_ADDR
28745: GO 29604
28747: LD_INT 5
28749: DOUBLE
28750: EQUAL
28751: IFTRUE 28755
28753: GO 28781
28755: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28756: LD_ADDR_VAR 0 3
28760: PUSH
28761: LD_INT 2
28763: PUSH
28764: LD_INT 3
28766: PUSH
28767: LD_INT 4
28769: PUSH
28770: LD_INT 5
28772: PUSH
28773: EMPTY
28774: LIST
28775: LIST
28776: LIST
28777: LIST
28778: ST_TO_ADDR
28779: GO 29604
28781: LD_INT 9
28783: DOUBLE
28784: EQUAL
28785: IFTRUE 28789
28787: GO 28815
28789: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28790: LD_ADDR_VAR 0 3
28794: PUSH
28795: LD_INT 2
28797: PUSH
28798: LD_INT 3
28800: PUSH
28801: LD_INT 4
28803: PUSH
28804: LD_INT 5
28806: PUSH
28807: EMPTY
28808: LIST
28809: LIST
28810: LIST
28811: LIST
28812: ST_TO_ADDR
28813: GO 29604
28815: LD_INT 7
28817: DOUBLE
28818: EQUAL
28819: IFTRUE 28823
28821: GO 28849
28823: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28824: LD_ADDR_VAR 0 3
28828: PUSH
28829: LD_INT 2
28831: PUSH
28832: LD_INT 3
28834: PUSH
28835: LD_INT 4
28837: PUSH
28838: LD_INT 5
28840: PUSH
28841: EMPTY
28842: LIST
28843: LIST
28844: LIST
28845: LIST
28846: ST_TO_ADDR
28847: GO 29604
28849: LD_INT 12
28851: DOUBLE
28852: EQUAL
28853: IFTRUE 28857
28855: GO 28883
28857: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28858: LD_ADDR_VAR 0 3
28862: PUSH
28863: LD_INT 2
28865: PUSH
28866: LD_INT 3
28868: PUSH
28869: LD_INT 4
28871: PUSH
28872: LD_INT 5
28874: PUSH
28875: EMPTY
28876: LIST
28877: LIST
28878: LIST
28879: LIST
28880: ST_TO_ADDR
28881: GO 29604
28883: LD_INT 13
28885: DOUBLE
28886: EQUAL
28887: IFTRUE 28891
28889: GO 28917
28891: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28892: LD_ADDR_VAR 0 3
28896: PUSH
28897: LD_INT 2
28899: PUSH
28900: LD_INT 3
28902: PUSH
28903: LD_INT 4
28905: PUSH
28906: LD_INT 5
28908: PUSH
28909: EMPTY
28910: LIST
28911: LIST
28912: LIST
28913: LIST
28914: ST_TO_ADDR
28915: GO 29604
28917: LD_INT 14
28919: DOUBLE
28920: EQUAL
28921: IFTRUE 28925
28923: GO 28943
28925: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28926: LD_ADDR_VAR 0 3
28930: PUSH
28931: LD_INT 4
28933: PUSH
28934: LD_INT 5
28936: PUSH
28937: EMPTY
28938: LIST
28939: LIST
28940: ST_TO_ADDR
28941: GO 29604
28943: LD_INT 6
28945: DOUBLE
28946: EQUAL
28947: IFTRUE 28951
28949: GO 28969
28951: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28952: LD_ADDR_VAR 0 3
28956: PUSH
28957: LD_INT 4
28959: PUSH
28960: LD_INT 5
28962: PUSH
28963: EMPTY
28964: LIST
28965: LIST
28966: ST_TO_ADDR
28967: GO 29604
28969: LD_INT 10
28971: DOUBLE
28972: EQUAL
28973: IFTRUE 28977
28975: GO 28995
28977: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
28978: LD_ADDR_VAR 0 3
28982: PUSH
28983: LD_INT 4
28985: PUSH
28986: LD_INT 5
28988: PUSH
28989: EMPTY
28990: LIST
28991: LIST
28992: ST_TO_ADDR
28993: GO 29604
28995: LD_INT 22
28997: DOUBLE
28998: EQUAL
28999: IFTRUE 29003
29001: GO 29029
29003: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29004: LD_ADDR_VAR 0 3
29008: PUSH
29009: LD_INT 11
29011: PUSH
29012: LD_INT 12
29014: PUSH
29015: LD_INT 13
29017: PUSH
29018: LD_INT 14
29020: PUSH
29021: EMPTY
29022: LIST
29023: LIST
29024: LIST
29025: LIST
29026: ST_TO_ADDR
29027: GO 29604
29029: LD_INT 23
29031: DOUBLE
29032: EQUAL
29033: IFTRUE 29037
29035: GO 29063
29037: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29038: LD_ADDR_VAR 0 3
29042: PUSH
29043: LD_INT 11
29045: PUSH
29046: LD_INT 12
29048: PUSH
29049: LD_INT 13
29051: PUSH
29052: LD_INT 14
29054: PUSH
29055: EMPTY
29056: LIST
29057: LIST
29058: LIST
29059: LIST
29060: ST_TO_ADDR
29061: GO 29604
29063: LD_INT 24
29065: DOUBLE
29066: EQUAL
29067: IFTRUE 29071
29069: GO 29097
29071: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29072: LD_ADDR_VAR 0 3
29076: PUSH
29077: LD_INT 11
29079: PUSH
29080: LD_INT 12
29082: PUSH
29083: LD_INT 13
29085: PUSH
29086: LD_INT 14
29088: PUSH
29089: EMPTY
29090: LIST
29091: LIST
29092: LIST
29093: LIST
29094: ST_TO_ADDR
29095: GO 29604
29097: LD_INT 30
29099: DOUBLE
29100: EQUAL
29101: IFTRUE 29105
29103: GO 29131
29105: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29106: LD_ADDR_VAR 0 3
29110: PUSH
29111: LD_INT 11
29113: PUSH
29114: LD_INT 12
29116: PUSH
29117: LD_INT 13
29119: PUSH
29120: LD_INT 14
29122: PUSH
29123: EMPTY
29124: LIST
29125: LIST
29126: LIST
29127: LIST
29128: ST_TO_ADDR
29129: GO 29604
29131: LD_INT 25
29133: DOUBLE
29134: EQUAL
29135: IFTRUE 29139
29137: GO 29157
29139: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29140: LD_ADDR_VAR 0 3
29144: PUSH
29145: LD_INT 13
29147: PUSH
29148: LD_INT 14
29150: PUSH
29151: EMPTY
29152: LIST
29153: LIST
29154: ST_TO_ADDR
29155: GO 29604
29157: LD_INT 27
29159: DOUBLE
29160: EQUAL
29161: IFTRUE 29165
29163: GO 29183
29165: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29166: LD_ADDR_VAR 0 3
29170: PUSH
29171: LD_INT 13
29173: PUSH
29174: LD_INT 14
29176: PUSH
29177: EMPTY
29178: LIST
29179: LIST
29180: ST_TO_ADDR
29181: GO 29604
29183: LD_INT 28
29185: DOUBLE
29186: EQUAL
29187: IFTRUE 29191
29189: GO 29209
29191: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29192: LD_ADDR_VAR 0 3
29196: PUSH
29197: LD_INT 13
29199: PUSH
29200: LD_INT 14
29202: PUSH
29203: EMPTY
29204: LIST
29205: LIST
29206: ST_TO_ADDR
29207: GO 29604
29209: LD_INT 29
29211: DOUBLE
29212: EQUAL
29213: IFTRUE 29217
29215: GO 29235
29217: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29218: LD_ADDR_VAR 0 3
29222: PUSH
29223: LD_INT 13
29225: PUSH
29226: LD_INT 14
29228: PUSH
29229: EMPTY
29230: LIST
29231: LIST
29232: ST_TO_ADDR
29233: GO 29604
29235: LD_INT 31
29237: DOUBLE
29238: EQUAL
29239: IFTRUE 29243
29241: GO 29261
29243: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29244: LD_ADDR_VAR 0 3
29248: PUSH
29249: LD_INT 13
29251: PUSH
29252: LD_INT 14
29254: PUSH
29255: EMPTY
29256: LIST
29257: LIST
29258: ST_TO_ADDR
29259: GO 29604
29261: LD_INT 26
29263: DOUBLE
29264: EQUAL
29265: IFTRUE 29269
29267: GO 29287
29269: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29270: LD_ADDR_VAR 0 3
29274: PUSH
29275: LD_INT 13
29277: PUSH
29278: LD_INT 14
29280: PUSH
29281: EMPTY
29282: LIST
29283: LIST
29284: ST_TO_ADDR
29285: GO 29604
29287: LD_INT 42
29289: DOUBLE
29290: EQUAL
29291: IFTRUE 29295
29293: GO 29321
29295: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29296: LD_ADDR_VAR 0 3
29300: PUSH
29301: LD_INT 21
29303: PUSH
29304: LD_INT 22
29306: PUSH
29307: LD_INT 23
29309: PUSH
29310: LD_INT 24
29312: PUSH
29313: EMPTY
29314: LIST
29315: LIST
29316: LIST
29317: LIST
29318: ST_TO_ADDR
29319: GO 29604
29321: LD_INT 43
29323: DOUBLE
29324: EQUAL
29325: IFTRUE 29329
29327: GO 29355
29329: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29330: LD_ADDR_VAR 0 3
29334: PUSH
29335: LD_INT 21
29337: PUSH
29338: LD_INT 22
29340: PUSH
29341: LD_INT 23
29343: PUSH
29344: LD_INT 24
29346: PUSH
29347: EMPTY
29348: LIST
29349: LIST
29350: LIST
29351: LIST
29352: ST_TO_ADDR
29353: GO 29604
29355: LD_INT 44
29357: DOUBLE
29358: EQUAL
29359: IFTRUE 29363
29361: GO 29389
29363: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29364: LD_ADDR_VAR 0 3
29368: PUSH
29369: LD_INT 21
29371: PUSH
29372: LD_INT 22
29374: PUSH
29375: LD_INT 23
29377: PUSH
29378: LD_INT 24
29380: PUSH
29381: EMPTY
29382: LIST
29383: LIST
29384: LIST
29385: LIST
29386: ST_TO_ADDR
29387: GO 29604
29389: LD_INT 45
29391: DOUBLE
29392: EQUAL
29393: IFTRUE 29397
29395: GO 29423
29397: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29398: LD_ADDR_VAR 0 3
29402: PUSH
29403: LD_INT 21
29405: PUSH
29406: LD_INT 22
29408: PUSH
29409: LD_INT 23
29411: PUSH
29412: LD_INT 24
29414: PUSH
29415: EMPTY
29416: LIST
29417: LIST
29418: LIST
29419: LIST
29420: ST_TO_ADDR
29421: GO 29604
29423: LD_INT 49
29425: DOUBLE
29426: EQUAL
29427: IFTRUE 29431
29429: GO 29457
29431: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29432: LD_ADDR_VAR 0 3
29436: PUSH
29437: LD_INT 21
29439: PUSH
29440: LD_INT 22
29442: PUSH
29443: LD_INT 23
29445: PUSH
29446: LD_INT 24
29448: PUSH
29449: EMPTY
29450: LIST
29451: LIST
29452: LIST
29453: LIST
29454: ST_TO_ADDR
29455: GO 29604
29457: LD_INT 51
29459: DOUBLE
29460: EQUAL
29461: IFTRUE 29465
29463: GO 29491
29465: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29466: LD_ADDR_VAR 0 3
29470: PUSH
29471: LD_INT 21
29473: PUSH
29474: LD_INT 22
29476: PUSH
29477: LD_INT 23
29479: PUSH
29480: LD_INT 24
29482: PUSH
29483: EMPTY
29484: LIST
29485: LIST
29486: LIST
29487: LIST
29488: ST_TO_ADDR
29489: GO 29604
29491: LD_INT 52
29493: DOUBLE
29494: EQUAL
29495: IFTRUE 29499
29497: GO 29525
29499: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29500: LD_ADDR_VAR 0 3
29504: PUSH
29505: LD_INT 21
29507: PUSH
29508: LD_INT 22
29510: PUSH
29511: LD_INT 23
29513: PUSH
29514: LD_INT 24
29516: PUSH
29517: EMPTY
29518: LIST
29519: LIST
29520: LIST
29521: LIST
29522: ST_TO_ADDR
29523: GO 29604
29525: LD_INT 53
29527: DOUBLE
29528: EQUAL
29529: IFTRUE 29533
29531: GO 29551
29533: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29534: LD_ADDR_VAR 0 3
29538: PUSH
29539: LD_INT 23
29541: PUSH
29542: LD_INT 24
29544: PUSH
29545: EMPTY
29546: LIST
29547: LIST
29548: ST_TO_ADDR
29549: GO 29604
29551: LD_INT 46
29553: DOUBLE
29554: EQUAL
29555: IFTRUE 29559
29557: GO 29577
29559: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29560: LD_ADDR_VAR 0 3
29564: PUSH
29565: LD_INT 23
29567: PUSH
29568: LD_INT 24
29570: PUSH
29571: EMPTY
29572: LIST
29573: LIST
29574: ST_TO_ADDR
29575: GO 29604
29577: LD_INT 47
29579: DOUBLE
29580: EQUAL
29581: IFTRUE 29585
29583: GO 29603
29585: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29586: LD_ADDR_VAR 0 3
29590: PUSH
29591: LD_INT 23
29593: PUSH
29594: LD_INT 24
29596: PUSH
29597: EMPTY
29598: LIST
29599: LIST
29600: ST_TO_ADDR
29601: GO 29604
29603: POP
// result := ( chassis in result ) ;
29604: LD_ADDR_VAR 0 3
29608: PUSH
29609: LD_VAR 0 1
29613: PUSH
29614: LD_VAR 0 3
29618: IN
29619: ST_TO_ADDR
// end ;
29620: LD_VAR 0 3
29624: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29625: LD_INT 0
29627: PPUSH
29628: PPUSH
29629: PPUSH
29630: PPUSH
// uc_side = 0 ;
29631: LD_ADDR_OWVAR 20
29635: PUSH
29636: LD_INT 0
29638: ST_TO_ADDR
// uc_nation = 0 ;
29639: LD_ADDR_OWVAR 21
29643: PUSH
29644: LD_INT 0
29646: ST_TO_ADDR
// nat_area := nature_area ;
29647: LD_ADDR_VAR 0 4
29651: PUSH
29652: LD_INT 24
29654: ST_TO_ADDR
// InitHc ;
29655: CALL_OW 19
// for i = 1 to 4 do
29659: LD_ADDR_VAR 0 2
29663: PUSH
29664: DOUBLE
29665: LD_INT 1
29667: DEC
29668: ST_TO_ADDR
29669: LD_INT 4
29671: PUSH
29672: FOR_TO
29673: IFFALSE 29720
// begin hc_class = 18 ;
29675: LD_ADDR_OWVAR 28
29679: PUSH
29680: LD_INT 18
29682: ST_TO_ADDR
// hc_gallery =  ;
29683: LD_ADDR_OWVAR 33
29687: PUSH
29688: LD_STRING 
29690: ST_TO_ADDR
// animal := CreateHuman ;
29691: LD_ADDR_VAR 0 3
29695: PUSH
29696: CALL_OW 44
29700: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29701: LD_VAR 0 3
29705: PPUSH
29706: LD_VAR 0 4
29710: PPUSH
29711: LD_INT 0
29713: PPUSH
29714: CALL_OW 49
// end ;
29718: GO 29672
29720: POP
29721: POP
// for i = 1 to 3 do
29722: LD_ADDR_VAR 0 2
29726: PUSH
29727: DOUBLE
29728: LD_INT 1
29730: DEC
29731: ST_TO_ADDR
29732: LD_INT 3
29734: PUSH
29735: FOR_TO
29736: IFFALSE 29800
// begin hc_class = class_tiger ;
29738: LD_ADDR_OWVAR 28
29742: PUSH
29743: LD_INT 14
29745: ST_TO_ADDR
// hc_gallery =  ;
29746: LD_ADDR_OWVAR 33
29750: PUSH
29751: LD_STRING 
29753: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29754: LD_ADDR_OWVAR 35
29758: PUSH
29759: LD_INT 5
29761: NEG
29762: PPUSH
29763: LD_INT 5
29765: PPUSH
29766: CALL_OW 12
29770: ST_TO_ADDR
// animal := CreateHuman ;
29771: LD_ADDR_VAR 0 3
29775: PUSH
29776: CALL_OW 44
29780: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29781: LD_VAR 0 3
29785: PPUSH
29786: LD_VAR 0 4
29790: PPUSH
29791: LD_INT 0
29793: PPUSH
29794: CALL_OW 49
// end ;
29798: GO 29735
29800: POP
29801: POP
// for i = 1 to 3 do
29802: LD_ADDR_VAR 0 2
29806: PUSH
29807: DOUBLE
29808: LD_INT 1
29810: DEC
29811: ST_TO_ADDR
29812: LD_INT 3
29814: PUSH
29815: FOR_TO
29816: IFFALSE 29919
// begin hc_class = class_apeman ;
29818: LD_ADDR_OWVAR 28
29822: PUSH
29823: LD_INT 12
29825: ST_TO_ADDR
// hc_gallery =  ;
29826: LD_ADDR_OWVAR 33
29830: PUSH
29831: LD_STRING 
29833: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29834: LD_ADDR_OWVAR 35
29838: PUSH
29839: LD_INT 2
29841: NEG
29842: PPUSH
29843: LD_INT 2
29845: PPUSH
29846: CALL_OW 12
29850: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29851: LD_ADDR_OWVAR 31
29855: PUSH
29856: LD_INT 1
29858: PPUSH
29859: LD_INT 3
29861: PPUSH
29862: CALL_OW 12
29866: PUSH
29867: LD_INT 1
29869: PPUSH
29870: LD_INT 3
29872: PPUSH
29873: CALL_OW 12
29877: PUSH
29878: LD_INT 0
29880: PUSH
29881: LD_INT 0
29883: PUSH
29884: EMPTY
29885: LIST
29886: LIST
29887: LIST
29888: LIST
29889: ST_TO_ADDR
// animal := CreateHuman ;
29890: LD_ADDR_VAR 0 3
29894: PUSH
29895: CALL_OW 44
29899: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29900: LD_VAR 0 3
29904: PPUSH
29905: LD_VAR 0 4
29909: PPUSH
29910: LD_INT 0
29912: PPUSH
29913: CALL_OW 49
// end ;
29917: GO 29815
29919: POP
29920: POP
// for i = 1 to 3 do
29921: LD_ADDR_VAR 0 2
29925: PUSH
29926: DOUBLE
29927: LD_INT 1
29929: DEC
29930: ST_TO_ADDR
29931: LD_INT 3
29933: PUSH
29934: FOR_TO
29935: IFFALSE 29982
// begin hc_class = 13 ;
29937: LD_ADDR_OWVAR 28
29941: PUSH
29942: LD_INT 13
29944: ST_TO_ADDR
// hc_gallery =  ;
29945: LD_ADDR_OWVAR 33
29949: PUSH
29950: LD_STRING 
29952: ST_TO_ADDR
// animal := CreateHuman ;
29953: LD_ADDR_VAR 0 3
29957: PUSH
29958: CALL_OW 44
29962: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29963: LD_VAR 0 3
29967: PPUSH
29968: LD_VAR 0 4
29972: PPUSH
29973: LD_INT 0
29975: PPUSH
29976: CALL_OW 49
// end ;
29980: GO 29934
29982: POP
29983: POP
// for i = 1 to 3 do
29984: LD_ADDR_VAR 0 2
29988: PUSH
29989: DOUBLE
29990: LD_INT 1
29992: DEC
29993: ST_TO_ADDR
29994: LD_INT 3
29996: PUSH
29997: FOR_TO
29998: IFFALSE 30043
// begin hc_class = 20 ;
30000: LD_ADDR_OWVAR 28
30004: PUSH
30005: LD_INT 20
30007: ST_TO_ADDR
// hc_gallery =  ;
30008: LD_ADDR_OWVAR 33
30012: PUSH
30013: LD_STRING 
30015: ST_TO_ADDR
// animal := CreateHuman ;
30016: LD_ADDR_VAR 0 3
30020: PUSH
30021: CALL_OW 44
30025: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30026: LD_VAR 0 3
30030: PPUSH
30031: LD_INT 4
30033: PPUSH
30034: LD_INT 0
30036: PPUSH
30037: CALL_OW 49
// end ;
30041: GO 29997
30043: POP
30044: POP
// end ; end_of_file
30045: LD_VAR 0 1
30049: RET
// export function Action ; begin
30050: LD_INT 0
30052: PPUSH
// InGameOn ;
30053: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30057: LD_EXP 11
30061: PPUSH
30062: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30066: LD_EXP 11
30070: PPUSH
30071: LD_STRING D1-JMM-1
30073: PPUSH
30074: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30078: LD_EXP 12
30082: PPUSH
30083: LD_STRING D1-Roth-1
30085: PPUSH
30086: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30090: LD_EXP 11
30094: PPUSH
30095: LD_STRING D1-JMM-2
30097: PPUSH
30098: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30102: LD_EXP 12
30106: PPUSH
30107: LD_STRING D1-Roth-2
30109: PPUSH
30110: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30114: LD_EXP 11
30118: PPUSH
30119: LD_STRING D1-JMM-3
30121: PPUSH
30122: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30126: LD_EXP 12
30130: PPUSH
30131: LD_STRING D1-Roth-3
30133: PPUSH
30134: CALL_OW 88
// ComInvisible ( Roth ) ;
30138: LD_EXP 12
30142: PPUSH
30143: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30147: LD_INT 46
30149: PPUSH
30150: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30154: LD_EXP 11
30158: PPUSH
30159: LD_STRING D1-JMM-4
30161: PPUSH
30162: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30166: LD_INT 10
30168: PPUSH
30169: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30173: LD_EXP 12
30177: PPUSH
30178: LD_EXP 11
30182: PPUSH
30183: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30187: LD_EXP 11
30191: PPUSH
30192: LD_STRING D1-JMM-4a
30194: PPUSH
30195: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30199: LD_EXP 12
30203: PPUSH
30204: LD_STRING D1-Roth-4
30206: PPUSH
30207: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30211: LD_EXP 11
30215: PPUSH
30216: LD_STRING D1-JMM-5
30218: PPUSH
30219: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30223: LD_EXP 12
30227: PPUSH
30228: LD_STRING D1-Roth-5
30230: PPUSH
30231: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30235: LD_EXP 11
30239: PPUSH
30240: LD_STRING D1-JMM-6
30242: PPUSH
30243: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30247: LD_EXP 12
30251: PPUSH
30252: LD_STRING D1-Roth-6
30254: PPUSH
30255: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30259: LD_EXP 11
30263: PPUSH
30264: LD_STRING D1-JMM-7
30266: PPUSH
30267: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30271: LD_EXP 13
30275: PPUSH
30276: LD_EXP 11
30280: PPUSH
30281: CALL_OW 250
30285: PPUSH
30286: LD_EXP 11
30290: PPUSH
30291: CALL_OW 251
30295: PPUSH
30296: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30300: LD_EXP 12
30304: PPUSH
30305: LD_STRING D1-Roth-7
30307: PPUSH
30308: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30312: LD_INT 10
30314: PPUSH
30315: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30319: LD_EXP 13
30323: PPUSH
30324: LD_EXP 11
30328: PPUSH
30329: CALL_OW 296
30333: PUSH
30334: LD_INT 6
30336: LESS
30337: IFFALSE 30312
// ComTurnUnit ( Powell , JMM ) ;
30339: LD_EXP 13
30343: PPUSH
30344: LD_EXP 11
30348: PPUSH
30349: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30353: LD_EXP 13
30357: PPUSH
30358: LD_STRING D1-Pow-7
30360: PPUSH
30361: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30365: LD_EXP 11
30369: PPUSH
30370: LD_EXP 13
30374: PPUSH
30375: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30379: LD_EXP 12
30383: PPUSH
30384: LD_EXP 13
30388: PPUSH
30389: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30393: LD_EXP 11
30397: PPUSH
30398: LD_STRING D1-JMM-8
30400: PPUSH
30401: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30405: LD_EXP 13
30409: PPUSH
30410: LD_STRING D1-Pow-8
30412: PPUSH
30413: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30417: LD_EXP 11
30421: PPUSH
30422: LD_STRING D1-JMM-9
30424: PPUSH
30425: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30429: LD_EXP 13
30433: PPUSH
30434: LD_INT 124
30436: PPUSH
30437: LD_INT 61
30439: PPUSH
30440: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30444: LD_INT 35
30446: PPUSH
30447: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30451: LD_EXP 11
30455: PPUSH
30456: LD_EXP 13
30460: PPUSH
30461: CALL_OW 296
30465: PUSH
30466: LD_INT 6
30468: GREATER
30469: IFFALSE 30444
// SayRadio ( Powell , D1-Pow-9 ) ;
30471: LD_EXP 13
30475: PPUSH
30476: LD_STRING D1-Pow-9
30478: PPUSH
30479: CALL_OW 94
// RemoveUnit ( Powell ) ;
30483: LD_EXP 13
30487: PPUSH
30488: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30492: LD_EXP 13
30496: PPUSH
30497: LD_INT 18
30499: PPUSH
30500: CALL_OW 52
// if Joan and not Joan in selected then
30504: LD_EXP 33
30508: PUSH
30509: LD_EXP 33
30513: PUSH
30514: LD_EXP 3
30518: IN
30519: NOT
30520: AND
30521: IFFALSE 30535
// SayRadio ( Joan , D1-Joan-9 ) ;
30523: LD_EXP 33
30527: PPUSH
30528: LD_STRING D1-Joan-9
30530: PPUSH
30531: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30535: LD_EXP 12
30539: PPUSH
30540: LD_EXP 11
30544: PPUSH
30545: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30549: LD_EXP 11
30553: PPUSH
30554: LD_EXP 12
30558: PPUSH
30559: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30563: LD_EXP 12
30567: PPUSH
30568: LD_STRING D1-Roth-9
30570: PPUSH
30571: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30575: LD_EXP 11
30579: PPUSH
30580: LD_STRING D1-JMM-10
30582: PPUSH
30583: CALL_OW 88
// InGameOff ;
30587: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30591: LD_STRING M1
30593: PPUSH
30594: CALL_OW 337
// SaveForQuickRestart ;
30598: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30602: LD_INT 7
30604: PPUSH
30605: LD_INT 1
30607: PPUSH
30608: LD_INT 2
30610: PPUSH
30611: LD_INT 1
30613: PPUSH
30614: CALL_OW 80
// wait ( 0 0$3 ) ;
30618: LD_INT 105
30620: PPUSH
30621: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30625: LD_EXP 12
30629: PPUSH
30630: LD_INT 124
30632: PPUSH
30633: LD_INT 18
30635: PPUSH
30636: CALL_OW 111
// AddComInvisible ( Roth ) ;
30640: LD_EXP 12
30644: PPUSH
30645: CALL_OW 212
// wait ( 0 0$30 ) ;
30649: LD_INT 1050
30651: PPUSH
30652: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
30656: LD_EXP 12
30660: PPUSH
30661: LD_INT 2100
30663: PPUSH
30664: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30668: LD_EXP 12
30672: PPUSH
30673: LD_INT 156
30675: PPUSH
30676: LD_INT 20
30678: PPUSH
30679: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30683: LD_EXP 12
30687: PPUSH
30688: LD_INT 178
30690: PPUSH
30691: LD_INT 42
30693: PPUSH
30694: CALL_OW 171
// AddComInvisible ( Roth ) ;
30698: LD_EXP 12
30702: PPUSH
30703: CALL_OW 212
// end ;
30707: LD_VAR 0 1
30711: RET
// every 0 0$1 do var i , tmp ;
30712: GO 30714
30714: DISABLE
30715: LD_INT 0
30717: PPUSH
30718: PPUSH
// begin tmp := selected union friends union others ;
30719: LD_ADDR_VAR 0 2
30723: PUSH
30724: LD_EXP 3
30728: PUSH
30729: LD_EXP 4
30733: UNION
30734: PUSH
30735: LD_EXP 5
30739: UNION
30740: ST_TO_ADDR
// if not tmp then
30741: LD_VAR 0 2
30745: NOT
30746: IFFALSE 30750
// exit ;
30748: GO 30822
// repeat wait ( 0 0$1 ) ;
30750: LD_INT 35
30752: PPUSH
30753: CALL_OW 67
// for i in tmp do
30757: LD_ADDR_VAR 0 1
30761: PUSH
30762: LD_VAR 0 2
30766: PUSH
30767: FOR_IN
30768: IFFALSE 30813
// if CanSpot ( JMM , i ) then
30770: LD_EXP 11
30774: PPUSH
30775: LD_VAR 0 1
30779: PPUSH
30780: CALL 27358 0 2
30784: IFFALSE 30811
// begin tmp := tmp diff i ;
30786: LD_ADDR_VAR 0 2
30790: PUSH
30791: LD_VAR 0 2
30795: PUSH
30796: LD_VAR 0 1
30800: DIFF
30801: ST_TO_ADDR
// Spot ( i ) ;
30802: LD_VAR 0 1
30806: PPUSH
30807: CALL 30825 0 1
// end ;
30811: GO 30767
30813: POP
30814: POP
// until not tmp ;
30815: LD_VAR 0 2
30819: NOT
30820: IFFALSE 30750
// end ;
30822: PPOPN 2
30824: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30825: LD_INT 0
30827: PPUSH
30828: PPUSH
30829: PPUSH
30830: PPUSH
// if not unit then
30831: LD_VAR 0 1
30835: NOT
30836: IFFALSE 30840
// exit ;
30838: GO 32729
// InGameOn ;
30840: CALL_OW 8
// side := GetSide ( JMM ) ;
30844: LD_ADDR_VAR 0 4
30848: PUSH
30849: LD_EXP 11
30853: PPUSH
30854: CALL_OW 255
30858: ST_TO_ADDR
// joined := false ;
30859: LD_ADDR_VAR 0 5
30863: PUSH
30864: LD_INT 0
30866: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30867: LD_ADDR_VAR 0 3
30871: PUSH
30872: LD_VAR 0 1
30876: PPUSH
30877: CALL_OW 310
30881: ST_TO_ADDR
// if building then
30882: LD_VAR 0 3
30886: IFFALSE 30945
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30888: LD_EXP 11
30892: PPUSH
30893: LD_VAR 0 1
30897: PPUSH
30898: CALL_OW 255
30902: PPUSH
30903: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30907: LD_EXP 11
30911: PPUSH
30912: LD_VAR 0 3
30916: PPUSH
30917: CALL_OW 120
// repeat wait ( 3 ) ;
30921: LD_INT 3
30923: PPUSH
30924: CALL_OW 67
// until IsInUnit ( JMM ) ;
30928: LD_EXP 11
30932: PPUSH
30933: CALL_OW 310
30937: IFFALSE 30921
// DialogueOn ;
30939: CALL_OW 6
// end else
30943: GO 30977
// begin ComTurnUnit ( JMM , unit ) ;
30945: LD_EXP 11
30949: PPUSH
30950: LD_VAR 0 1
30954: PPUSH
30955: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30959: LD_VAR 0 1
30963: PPUSH
30964: LD_EXP 11
30968: PPUSH
30969: CALL_OW 119
// DialogueOn ;
30973: CALL_OW 6
// end ; if unit = Joan then
30977: LD_VAR 0 1
30981: PUSH
30982: LD_EXP 33
30986: EQUAL
30987: IFFALSE 31097
// begin joined := true ;
30989: LD_ADDR_VAR 0 5
30993: PUSH
30994: LD_INT 1
30996: ST_TO_ADDR
// if Joan in selected then
30997: LD_EXP 33
31001: PUSH
31002: LD_EXP 3
31006: IN
31007: IFFALSE 31035
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31009: LD_EXP 33
31013: PPUSH
31014: LD_STRING D3-Joan-Joan-1
31016: PPUSH
31017: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31021: LD_EXP 11
31025: PPUSH
31026: LD_STRING D3-Joan-JMM-1
31028: PPUSH
31029: CALL_OW 88
// end else
31033: GO 31095
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31035: LD_EXP 33
31039: PPUSH
31040: LD_STRING D4-Joan-Joan-1
31042: PPUSH
31043: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31047: LD_EXP 11
31051: PPUSH
31052: LD_STRING D4-Joan-JMM-1
31054: PPUSH
31055: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31059: LD_EXP 33
31063: PPUSH
31064: LD_STRING D4-Joan-Joan-2
31066: PPUSH
31067: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31071: LD_EXP 11
31075: PPUSH
31076: LD_STRING D4-Joan-JMM-2
31078: PPUSH
31079: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31083: LD_EXP 33
31087: PPUSH
31088: LD_STRING D4-Joan-Joan-3
31090: PPUSH
31091: CALL_OW 88
// end ; end else
31095: GO 32537
// if unit = Lisa then
31097: LD_VAR 0 1
31101: PUSH
31102: LD_EXP 20
31106: EQUAL
31107: IFFALSE 31299
// begin if Lisa in selected then
31109: LD_EXP 20
31113: PUSH
31114: LD_EXP 3
31118: IN
31119: IFFALSE 31232
// begin if GetSide ( Joan ) = 7 then
31121: LD_EXP 33
31125: PPUSH
31126: CALL_OW 255
31130: PUSH
31131: LD_INT 7
31133: EQUAL
31134: IFFALSE 31198
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31136: LD_EXP 20
31140: PPUSH
31141: LD_STRING D3-LisaJ-Lisa-1
31143: PPUSH
31144: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31148: LD_EXP 11
31152: PPUSH
31153: LD_STRING D3-LisaJ-JMM-1
31155: PPUSH
31156: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31160: LD_EXP 20
31164: PPUSH
31165: LD_STRING D3-LisaJ-Lisa-2
31167: PPUSH
31168: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31172: LD_EXP 11
31176: PPUSH
31177: LD_STRING D3-LisaJ-JMM-2
31179: PPUSH
31180: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31184: LD_EXP 20
31188: PPUSH
31189: LD_STRING D3-LisaJ-Lisa-3
31191: PPUSH
31192: CALL_OW 88
// end else
31196: GO 31230
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31198: LD_EXP 20
31202: PPUSH
31203: LD_STRING D3-LisaL-Lisa-1
31205: PPUSH
31206: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31210: LD_EXP 11
31214: PPUSH
31215: LD_STRING D3-LisaL-JMM-1
31217: PPUSH
31218: CALL_OW 88
// joined := true ;
31222: LD_ADDR_VAR 0 5
31226: PUSH
31227: LD_INT 1
31229: ST_TO_ADDR
// end ; end else
31230: GO 31297
// begin if GetSide ( Joan ) = 7 then
31232: LD_EXP 33
31236: PPUSH
31237: CALL_OW 255
31241: PUSH
31242: LD_INT 7
31244: EQUAL
31245: IFFALSE 31285
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31247: LD_EXP 20
31251: PPUSH
31252: LD_STRING D4-LisaJ-Lisa-1
31254: PPUSH
31255: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31259: LD_EXP 11
31263: PPUSH
31264: LD_STRING D4-LisaJ-JMM-1
31266: PPUSH
31267: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31271: LD_EXP 20
31275: PPUSH
31276: LD_STRING D4-LisaJ-Lisa-2
31278: PPUSH
31279: CALL_OW 88
// end else
31283: GO 31297
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31285: LD_EXP 20
31289: PPUSH
31290: LD_STRING D4-LisaL-Lisa-1
31292: PPUSH
31293: CALL_OW 88
// end ; end ; end else
31297: GO 32537
// if unit = Frank then
31299: LD_VAR 0 1
31303: PUSH
31304: LD_EXP 30
31308: EQUAL
31309: IFFALSE 31449
// begin joined := true ;
31311: LD_ADDR_VAR 0 5
31315: PUSH
31316: LD_INT 1
31318: ST_TO_ADDR
// if Frank in selected then
31319: LD_EXP 30
31323: PUSH
31324: LD_EXP 3
31328: IN
31329: IFFALSE 31399
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31331: LD_EXP 30
31335: PPUSH
31336: LD_STRING D3-Frank-Frank-1
31338: PPUSH
31339: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31343: LD_EXP 11
31347: PPUSH
31348: LD_STRING D3-Frank-JMM-1
31350: PPUSH
31351: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31355: LD_EXP 30
31359: PPUSH
31360: LD_STRING D3-Frank-Frank-2
31362: PPUSH
31363: CALL_OW 88
// if reached_lab then
31367: LD_EXP 6
31371: IFFALSE 31397
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31373: LD_EXP 11
31377: PPUSH
31378: LD_STRING D3-Frank-JMM-2
31380: PPUSH
31381: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31385: LD_EXP 30
31389: PPUSH
31390: LD_STRING D3-Frank-Frank-3
31392: PPUSH
31393: CALL_OW 88
// end ; end else
31397: GO 31447
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31399: LD_EXP 30
31403: PPUSH
31404: LD_STRING D4-Frank-Frank-1
31406: PPUSH
31407: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31411: LD_EXP 11
31415: PPUSH
31416: LD_STRING D4-Frank-JMM-1
31418: PPUSH
31419: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31423: LD_EXP 30
31427: PPUSH
31428: LD_STRING D4-Frank-Frank-2
31430: PPUSH
31431: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31435: LD_EXP 11
31439: PPUSH
31440: LD_STRING D4-Frank-JMM-2
31442: PPUSH
31443: CALL_OW 88
// end ; end else
31447: GO 32537
// if unit = Brown then
31449: LD_VAR 0 1
31453: PUSH
31454: LD_EXP 25
31458: EQUAL
31459: IFFALSE 31555
// begin if Brown in selected or gamma_commander = 2 then
31461: LD_EXP 25
31465: PUSH
31466: LD_EXP 3
31470: IN
31471: PUSH
31472: LD_EXP 10
31476: PUSH
31477: LD_INT 2
31479: EQUAL
31480: OR
31481: IFFALSE 31517
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31483: LD_EXP 25
31487: PPUSH
31488: LD_STRING D3-Soldier1-Sol1-1
31490: PPUSH
31491: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31495: LD_EXP 11
31499: PPUSH
31500: LD_STRING D3-Soldier1-JMM-1
31502: PPUSH
31503: CALL_OW 88
// joined := true ;
31507: LD_ADDR_VAR 0 5
31511: PUSH
31512: LD_INT 1
31514: ST_TO_ADDR
// end else
31515: GO 31553
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31517: LD_EXP 25
31521: PPUSH
31522: LD_STRING D4-Soldier1-Sol1-1
31524: PPUSH
31525: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31529: LD_EXP 11
31533: PPUSH
31534: LD_STRING D4-Soldier1-JMM-1
31536: PPUSH
31537: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31541: LD_EXP 25
31545: PPUSH
31546: LD_STRING D4-Soldier1-Sol1-2
31548: PPUSH
31549: CALL_OW 88
// end ; end else
31553: GO 32537
// if unit = Donaldson then
31555: LD_VAR 0 1
31559: PUSH
31560: LD_EXP 21
31564: EQUAL
31565: IFFALSE 31661
// begin if Donaldson in selected or gamma_commander = 1 then
31567: LD_EXP 21
31571: PUSH
31572: LD_EXP 3
31576: IN
31577: PUSH
31578: LD_EXP 10
31582: PUSH
31583: LD_INT 1
31585: EQUAL
31586: OR
31587: IFFALSE 31623
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31589: LD_EXP 21
31593: PPUSH
31594: LD_STRING D3-Soldier2-FSol2-1
31596: PPUSH
31597: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31601: LD_EXP 11
31605: PPUSH
31606: LD_STRING D3-Soldier2-JMM-1
31608: PPUSH
31609: CALL_OW 88
// joined := true ;
31613: LD_ADDR_VAR 0 5
31617: PUSH
31618: LD_INT 1
31620: ST_TO_ADDR
// end else
31621: GO 31659
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31623: LD_VAR 0 1
31627: PPUSH
31628: LD_STRING D4-Soldier1-FSol1-1
31630: PPUSH
31631: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31635: LD_EXP 11
31639: PPUSH
31640: LD_STRING D4-Soldier1-JMM-1
31642: PPUSH
31643: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31647: LD_VAR 0 1
31651: PPUSH
31652: LD_STRING D4-Soldier1-FSol1-2
31654: PPUSH
31655: CALL_OW 88
// end ; end else
31659: GO 32537
// if unit = Cyrus then
31661: LD_VAR 0 1
31665: PUSH
31666: LD_EXP 23
31670: EQUAL
31671: IFFALSE 31745
// begin if Cyrus in selected then
31673: LD_EXP 23
31677: PUSH
31678: LD_EXP 3
31682: IN
31683: IFFALSE 31719
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31685: LD_EXP 23
31689: PPUSH
31690: LD_STRING D3-Cyrus-Cyrus-1
31692: PPUSH
31693: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31697: LD_EXP 11
31701: PPUSH
31702: LD_STRING D3-Cyrus-JMM-1
31704: PPUSH
31705: CALL_OW 88
// joined := true ;
31709: LD_ADDR_VAR 0 5
31713: PUSH
31714: LD_INT 1
31716: ST_TO_ADDR
// end else
31717: GO 31743
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31719: LD_EXP 23
31723: PPUSH
31724: LD_STRING D4-Cyrus-Cyrus-1
31726: PPUSH
31727: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31731: LD_EXP 11
31735: PPUSH
31736: LD_STRING D4-Cyrus-JMM-1
31738: PPUSH
31739: CALL_OW 88
// end ; end else
31743: GO 32537
// if unit = Bobby then
31745: LD_VAR 0 1
31749: PUSH
31750: LD_EXP 22
31754: EQUAL
31755: IFFALSE 31841
// begin if Bobby in selected then
31757: LD_EXP 22
31761: PUSH
31762: LD_EXP 3
31766: IN
31767: IFFALSE 31803
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31769: LD_EXP 22
31773: PPUSH
31774: LD_STRING D3-Bobby-Bobby-1
31776: PPUSH
31777: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31781: LD_EXP 11
31785: PPUSH
31786: LD_STRING D3-Bobby-JMM-1
31788: PPUSH
31789: CALL_OW 88
// joined := true ;
31793: LD_ADDR_VAR 0 5
31797: PUSH
31798: LD_INT 1
31800: ST_TO_ADDR
// end else
31801: GO 31839
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31803: LD_EXP 22
31807: PPUSH
31808: LD_STRING D4-Bobby-Bobby-1
31810: PPUSH
31811: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31815: LD_EXP 11
31819: PPUSH
31820: LD_STRING D4-Bobby-JMM-1
31822: PPUSH
31823: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31827: LD_EXP 22
31831: PPUSH
31832: LD_STRING D4-Bobby-Bobby-2
31834: PPUSH
31835: CALL_OW 88
// end ; end else
31839: GO 32537
// if unit = Cornel then
31841: LD_VAR 0 1
31845: PUSH
31846: LD_EXP 28
31850: EQUAL
31851: IFFALSE 31949
// begin if Cornel in selected then
31853: LD_EXP 28
31857: PUSH
31858: LD_EXP 3
31862: IN
31863: IFFALSE 31911
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31865: LD_EXP 28
31869: PPUSH
31870: LD_STRING D3-Mark-Corn-1
31872: PPUSH
31873: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31877: LD_EXP 11
31881: PPUSH
31882: LD_STRING D3-Mark-JMM-1
31884: PPUSH
31885: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31889: LD_EXP 28
31893: PPUSH
31894: LD_STRING D3-Mark-Corn-2
31896: PPUSH
31897: CALL_OW 88
// joined := true ;
31901: LD_ADDR_VAR 0 5
31905: PUSH
31906: LD_INT 1
31908: ST_TO_ADDR
// end else
31909: GO 31947
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31911: LD_EXP 28
31915: PPUSH
31916: LD_STRING D4-Mark-Corn-1
31918: PPUSH
31919: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31923: LD_EXP 11
31927: PPUSH
31928: LD_STRING D3-Joan-JMM-1
31930: PPUSH
31931: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31935: LD_EXP 28
31939: PPUSH
31940: LD_STRING D4-Mark-Corn-2
31942: PPUSH
31943: CALL_OW 88
// end ; end else
31947: GO 32537
// if unit = Gary then
31949: LD_VAR 0 1
31953: PUSH
31954: LD_EXP 29
31958: EQUAL
31959: IFFALSE 32043
// begin if Gary in selected then
31961: LD_EXP 29
31965: PUSH
31966: LD_EXP 3
31970: IN
31971: IFFALSE 32007
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
31973: LD_EXP 29
31977: PPUSH
31978: LD_STRING D3-Gary-Gary-1
31980: PPUSH
31981: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
31985: LD_EXP 11
31989: PPUSH
31990: LD_STRING D3-Gary-JMM-1
31992: PPUSH
31993: CALL_OW 88
// joined := true ;
31997: LD_ADDR_VAR 0 5
32001: PUSH
32002: LD_INT 1
32004: ST_TO_ADDR
// end else
32005: GO 32041
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32007: LD_EXP 29
32011: PPUSH
32012: LD_STRING D4-Gary-Gary-1
32014: PPUSH
32015: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32019: LD_EXP 29
32023: PPUSH
32024: LD_INT 1
32026: PPUSH
32027: CALL_OW 235
// DialogueOff ;
32031: CALL_OW 7
// InGameOff ;
32035: CALL_OW 9
// exit ;
32039: GO 32729
// end ; end else
32041: GO 32537
// if unit = Kikuchi then
32043: LD_VAR 0 1
32047: PUSH
32048: LD_EXP 31
32052: EQUAL
32053: IFFALSE 32137
// begin if Kikuchi in selected then
32055: LD_EXP 31
32059: PUSH
32060: LD_EXP 3
32064: IN
32065: IFFALSE 32101
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32067: LD_EXP 31
32071: PPUSH
32072: LD_STRING D3-Yamako-Yam-1
32074: PPUSH
32075: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32079: LD_EXP 11
32083: PPUSH
32084: LD_STRING D3-Soldier2-JMM-1
32086: PPUSH
32087: CALL_OW 88
// joined := true ;
32091: LD_ADDR_VAR 0 5
32095: PUSH
32096: LD_INT 1
32098: ST_TO_ADDR
// end else
32099: GO 32135
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32101: LD_EXP 31
32105: PPUSH
32106: LD_STRING D4-Yamako-Yam-1
32108: PPUSH
32109: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32113: LD_EXP 31
32117: PPUSH
32118: LD_INT 1
32120: PPUSH
32121: CALL_OW 235
// DialogueOff ;
32125: CALL_OW 7
// InGameOff ;
32129: CALL_OW 9
// exit ;
32133: GO 32729
// end ; end else
32135: GO 32537
// if unit = Gladstone then
32137: LD_VAR 0 1
32141: PUSH
32142: LD_EXP 26
32146: EQUAL
32147: IFFALSE 32221
// begin if Gladstone in selected then
32149: LD_EXP 26
32153: PUSH
32154: LD_EXP 3
32158: IN
32159: IFFALSE 32195
// begin joined := true ;
32161: LD_ADDR_VAR 0 5
32165: PUSH
32166: LD_INT 1
32168: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32169: LD_EXP 11
32173: PPUSH
32174: LD_STRING D3-Tim-JMM-1
32176: PPUSH
32177: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32181: LD_EXP 26
32185: PPUSH
32186: LD_STRING D3-Tim-Glad-1
32188: PPUSH
32189: CALL_OW 88
// end else
32193: GO 32219
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32195: LD_EXP 11
32199: PPUSH
32200: LD_STRING D4-Tim-JMM-1
32202: PPUSH
32203: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32207: LD_EXP 26
32211: PPUSH
32212: LD_STRING D4-Tim-Glad-1
32214: PPUSH
32215: CALL_OW 88
// end ; end else
32219: GO 32537
// if unit = Denis then
32221: LD_VAR 0 1
32225: PUSH
32226: LD_EXP 24
32230: EQUAL
32231: IFFALSE 32267
// begin joined := true ;
32233: LD_ADDR_VAR 0 5
32237: PUSH
32238: LD_INT 1
32240: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32241: LD_EXP 24
32245: PPUSH
32246: LD_STRING D3-Denis-Den-1
32248: PPUSH
32249: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32253: LD_EXP 11
32257: PPUSH
32258: LD_STRING D3-Denis-JMM-1
32260: PPUSH
32261: CALL_OW 88
// end else
32265: GO 32537
// if unit = Simms then
32267: LD_VAR 0 1
32271: PUSH
32272: LD_EXP 32
32276: EQUAL
32277: IFFALSE 32313
// begin joined := true ;
32279: LD_ADDR_VAR 0 5
32283: PUSH
32284: LD_INT 1
32286: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32287: LD_EXP 32
32291: PPUSH
32292: LD_STRING D3-Simms-Sim-1
32294: PPUSH
32295: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32299: LD_EXP 11
32303: PPUSH
32304: LD_STRING D3-Simms-JMM-1
32306: PPUSH
32307: CALL_OW 88
// end else
32311: GO 32537
// if unit = DeltaDoctor then
32313: LD_VAR 0 1
32317: PUSH
32318: LD_EXP 34
32322: EQUAL
32323: IFFALSE 32359
// begin joined := true ;
32325: LD_ADDR_VAR 0 5
32329: PUSH
32330: LD_INT 1
32332: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32333: LD_EXP 34
32337: PPUSH
32338: LD_STRING D3-Soldier1-Sol1-1
32340: PPUSH
32341: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32345: LD_EXP 11
32349: PPUSH
32350: LD_STRING D3-Soldier1-JMM-1
32352: PPUSH
32353: CALL_OW 88
// end else
32357: GO 32537
// begin joined := unit in selected ;
32359: LD_ADDR_VAR 0 5
32363: PUSH
32364: LD_VAR 0 1
32368: PUSH
32369: LD_EXP 3
32373: IN
32374: ST_TO_ADDR
// if joined then
32375: LD_VAR 0 5
32379: IFFALSE 32448
// begin if GetSex ( unit ) = sex_male then
32381: LD_VAR 0 1
32385: PPUSH
32386: CALL_OW 258
32390: PUSH
32391: LD_INT 1
32393: EQUAL
32394: IFFALSE 32422
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32396: LD_VAR 0 1
32400: PPUSH
32401: LD_STRING D3-Soldier1-Sol1-1
32403: PPUSH
32404: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32408: LD_EXP 11
32412: PPUSH
32413: LD_STRING D3-Soldier1-JMM-1
32415: PPUSH
32416: CALL_OW 88
// end else
32420: GO 32446
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32422: LD_VAR 0 1
32426: PPUSH
32427: LD_STRING D3-Soldier2-FSol2-1
32429: PPUSH
32430: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32434: LD_EXP 11
32438: PPUSH
32439: LD_STRING D3-Soldier2-JMM-1
32441: PPUSH
32442: CALL_OW 88
// end ; end else
32446: GO 32537
// begin if GetSex ( unit ) = sex_male then
32448: LD_VAR 0 1
32452: PPUSH
32453: CALL_OW 258
32457: PUSH
32458: LD_INT 1
32460: EQUAL
32461: IFFALSE 32501
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32463: LD_VAR 0 1
32467: PPUSH
32468: LD_STRING D4-Soldier2-Sol1-1
32470: PPUSH
32471: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32475: LD_EXP 11
32479: PPUSH
32480: LD_STRING D4-Soldier2-JMM-1
32482: PPUSH
32483: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32487: LD_VAR 0 1
32491: PPUSH
32492: LD_STRING D4-Soldier2-Sol2-1
32494: PPUSH
32495: CALL_OW 88
// end else
32499: GO 32537
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32501: LD_VAR 0 1
32505: PPUSH
32506: LD_STRING D4-Soldier1-FSol1-1
32508: PPUSH
32509: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32513: LD_EXP 11
32517: PPUSH
32518: LD_STRING D4-Soldier1-JMM-1
32520: PPUSH
32521: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32525: LD_VAR 0 1
32529: PPUSH
32530: LD_STRING D4-Soldier1-FSol1-2
32532: PPUSH
32533: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32537: CALL_OW 7
// InGameOff ;
32541: CALL_OW 9
// if building then
32545: LD_VAR 0 3
32549: IFFALSE 32650
// begin SetSide ( JMM , side ) ;
32551: LD_EXP 11
32555: PPUSH
32556: LD_VAR 0 4
32560: PPUSH
32561: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32565: LD_EXP 11
32569: PPUSH
32570: CALL_OW 122
// if joined then
32574: LD_VAR 0 5
32578: IFFALSE 32617
// begin SetSide ( unit , side ) ;
32580: LD_VAR 0 1
32584: PPUSH
32585: LD_VAR 0 4
32589: PPUSH
32590: CALL_OW 235
// SetSide ( building , 1 ) ;
32594: LD_VAR 0 3
32598: PPUSH
32599: LD_INT 1
32601: PPUSH
32602: CALL_OW 235
// ComExitBuilding ( unit ) ;
32606: LD_VAR 0 1
32610: PPUSH
32611: CALL_OW 122
// end else
32615: GO 32648
// begin wait ( 0 0$10 ) ;
32617: LD_INT 350
32619: PPUSH
32620: CALL_OW 67
// SetSide ( unit , 1 ) ;
32624: LD_VAR 0 1
32628: PPUSH
32629: LD_INT 1
32631: PPUSH
32632: CALL_OW 235
// SetSide ( building , 1 ) ;
32636: LD_VAR 0 3
32640: PPUSH
32641: LD_INT 1
32643: PPUSH
32644: CALL_OW 235
// end ; end else
32648: GO 32729
// begin ComStop ( [ JMM , unit ] ) ;
32650: LD_EXP 11
32654: PUSH
32655: LD_VAR 0 1
32659: PUSH
32660: EMPTY
32661: LIST
32662: LIST
32663: PPUSH
32664: CALL_OW 141
// if joined then
32668: LD_VAR 0 5
32672: IFFALSE 32690
// SetSide ( unit , side ) else
32674: LD_VAR 0 1
32678: PPUSH
32679: LD_VAR 0 4
32683: PPUSH
32684: CALL_OW 235
32688: GO 32729
// begin repeat wait ( 0 0$1 ) ;
32690: LD_INT 35
32692: PPUSH
32693: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32697: LD_EXP 11
32701: PPUSH
32702: LD_VAR 0 1
32706: PPUSH
32707: CALL_OW 296
32711: PUSH
32712: LD_INT 10
32714: GREATER
32715: IFFALSE 32690
// SetSide ( unit , 1 ) ;
32717: LD_VAR 0 1
32721: PPUSH
32722: LD_INT 1
32724: PPUSH
32725: CALL_OW 235
// end ; end ; end ;
32729: LD_VAR 0 2
32733: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32734: LD_EXP 11
32738: PPUSH
32739: CALL_OW 310
32743: PUSH
32744: LD_INT 47
32746: EQUAL
32747: IFFALSE 32815
32749: GO 32751
32751: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32752: LD_STRING M1a
32754: PPUSH
32755: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32759: LD_INT 13
32761: PPUSH
32762: LD_INT 1
32764: PPUSH
32765: LD_INT 2
32767: PPUSH
32768: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32772: LD_INT 29
32774: PPUSH
32775: LD_INT 1
32777: PPUSH
32778: LD_INT 2
32780: PPUSH
32781: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32785: LD_EXP 11
32789: PPUSH
32790: LD_INT 9
32792: PPUSH
32793: CALL_OW 336
// can_escape := true ;
32797: LD_ADDR_EXP 7
32801: PUSH
32802: LD_INT 1
32804: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32805: LD_INT 19
32807: PPUSH
32808: LD_INT 1
32810: PPUSH
32811: CALL_OW 424
// end ;
32815: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32816: LD_INT 22
32818: PUSH
32819: LD_INT 4
32821: PUSH
32822: EMPTY
32823: LIST
32824: LIST
32825: PUSH
32826: LD_INT 34
32828: PUSH
32829: LD_INT 12
32831: PUSH
32832: EMPTY
32833: LIST
32834: LIST
32835: PUSH
32836: EMPTY
32837: LIST
32838: LIST
32839: PPUSH
32840: CALL_OW 69
32844: IFFALSE 32926
32846: GO 32848
32848: DISABLE
32849: LD_INT 0
32851: PPUSH
// begin enable ;
32852: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32853: LD_ADDR_VAR 0 1
32857: PUSH
32858: LD_INT 22
32860: PUSH
32861: LD_INT 4
32863: PUSH
32864: EMPTY
32865: LIST
32866: LIST
32867: PUSH
32868: LD_INT 34
32870: PUSH
32871: LD_INT 12
32873: PUSH
32874: EMPTY
32875: LIST
32876: LIST
32877: PUSH
32878: EMPTY
32879: LIST
32880: LIST
32881: PPUSH
32882: CALL_OW 69
32886: PUSH
32887: FOR_IN
32888: IFFALSE 32924
// if GetDistUnits ( i , JMM ) < 6 then
32890: LD_VAR 0 1
32894: PPUSH
32895: LD_EXP 11
32899: PPUSH
32900: CALL_OW 296
32904: PUSH
32905: LD_INT 6
32907: LESS
32908: IFFALSE 32922
// SetSide ( i , 7 ) ;
32910: LD_VAR 0 1
32914: PPUSH
32915: LD_INT 7
32917: PPUSH
32918: CALL_OW 235
32922: GO 32887
32924: POP
32925: POP
// end ;
32926: PPOPN 1
32928: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32929: LD_EXP 7
32933: PUSH
32934: LD_INT 19
32936: PPUSH
32937: LD_INT 22
32939: PUSH
32940: LD_INT 7
32942: PUSH
32943: EMPTY
32944: LIST
32945: LIST
32946: PUSH
32947: LD_INT 21
32949: PUSH
32950: LD_INT 1
32952: PUSH
32953: EMPTY
32954: LIST
32955: LIST
32956: PUSH
32957: EMPTY
32958: LIST
32959: LIST
32960: PPUSH
32961: CALL_OW 71
32965: NOT
32966: AND
32967: PUSH
32968: LD_INT 3
32970: PPUSH
32971: CALL_OW 469
32975: NOT
32976: AND
32977: PUSH
32978: LD_INT 5
32980: PPUSH
32981: CALL_OW 469
32985: NOT
32986: AND
32987: IFFALSE 34213
32989: GO 32991
32991: DISABLE
32992: LD_INT 0
32994: PPUSH
32995: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
32996: LD_ADDR_VAR 0 1
33000: PUSH
33001: LD_EXP 3
33005: PPUSH
33006: LD_INT 22
33008: PUSH
33009: LD_INT 4
33011: PUSH
33012: EMPTY
33013: LIST
33014: LIST
33015: PUSH
33016: LD_INT 21
33018: PUSH
33019: LD_INT 1
33021: PUSH
33022: EMPTY
33023: LIST
33024: LIST
33025: PUSH
33026: EMPTY
33027: LIST
33028: LIST
33029: PPUSH
33030: CALL_OW 72
33034: PUSH
33035: LD_INT 0
33037: EQUAL
33038: ST_TO_ADDR
// if not all_taken then
33039: LD_VAR 0 1
33043: NOT
33044: IFFALSE 33185
// case query ( Q1 ) of 1 :
33046: LD_STRING Q1
33048: PPUSH
33049: CALL_OW 97
33053: PUSH
33054: LD_INT 1
33056: DOUBLE
33057: EQUAL
33058: IFTRUE 33062
33060: GO 33173
33062: POP
// begin repeat wait ( 0 0$1 ) ;
33063: LD_INT 35
33065: PPUSH
33066: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33070: LD_EXP 3
33074: PPUSH
33075: LD_INT 22
33077: PUSH
33078: LD_INT 4
33080: PUSH
33081: EMPTY
33082: LIST
33083: LIST
33084: PUSH
33085: LD_INT 21
33087: PUSH
33088: LD_INT 1
33090: PUSH
33091: EMPTY
33092: LIST
33093: LIST
33094: PUSH
33095: EMPTY
33096: LIST
33097: LIST
33098: PPUSH
33099: CALL_OW 72
33103: PUSH
33104: LD_INT 0
33106: EQUAL
33107: PUSH
33108: LD_INT 19
33110: PPUSH
33111: LD_INT 22
33113: PUSH
33114: LD_INT 7
33116: PUSH
33117: EMPTY
33118: LIST
33119: LIST
33120: PUSH
33121: LD_INT 21
33123: PUSH
33124: LD_INT 1
33126: PUSH
33127: EMPTY
33128: LIST
33129: LIST
33130: PUSH
33131: EMPTY
33132: LIST
33133: LIST
33134: PPUSH
33135: CALL_OW 71
33139: NOT
33140: AND
33141: PUSH
33142: LD_INT 3
33144: PPUSH
33145: CALL_OW 469
33149: NOT
33150: AND
33151: PUSH
33152: LD_INT 5
33154: PPUSH
33155: CALL_OW 469
33159: NOT
33160: AND
33161: IFFALSE 33063
// all_taken := true ;
33163: LD_ADDR_VAR 0 1
33167: PUSH
33168: LD_INT 1
33170: ST_TO_ADDR
// end ; 2 :
33171: GO 33185
33173: LD_INT 2
33175: DOUBLE
33176: EQUAL
33177: IFTRUE 33181
33179: GO 33184
33181: POP
// ; end ;
33182: GO 33185
33184: POP
// if team_kill_counter then
33185: LD_EXP 9
33189: IFFALSE 33205
// Say ( JMM , D5-JMM-1 ) else
33191: LD_EXP 11
33195: PPUSH
33196: LD_STRING D5-JMM-1
33198: PPUSH
33199: CALL_OW 88
33203: GO 33217
// Say ( JMM , D5-JMM-1a ) ;
33205: LD_EXP 11
33209: PPUSH
33210: LD_STRING D5-JMM-1a
33212: PPUSH
33213: CALL_OW 88
// if all_taken then
33217: LD_VAR 0 1
33221: IFFALSE 33235
// AddMedal ( All , 1 ) else
33223: LD_STRING All
33225: PPUSH
33226: LD_INT 1
33228: PPUSH
33229: CALL_OW 101
33233: GO 33246
// AddMedal ( All , - 1 ) ;
33235: LD_STRING All
33237: PPUSH
33238: LD_INT 1
33240: NEG
33241: PPUSH
33242: CALL_OW 101
// if team_kill_counter then
33246: LD_EXP 9
33250: IFFALSE 33265
// AddMedal ( Save , - 1 ) else
33252: LD_STRING Save
33254: PPUSH
33255: LD_INT 1
33257: NEG
33258: PPUSH
33259: CALL_OW 101
33263: GO 33275
// AddMedal ( Save , 1 ) ;
33265: LD_STRING Save
33267: PPUSH
33268: LD_INT 1
33270: PPUSH
33271: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33275: LD_EXP 8
33279: PUSH
33280: LD_INT 2
33282: PUSH
33283: LD_INT 1
33285: PUSH
33286: LD_INT 1
33288: PUSH
33289: EMPTY
33290: LIST
33291: LIST
33292: LIST
33293: PUSH
33294: LD_OWVAR 67
33298: ARRAY
33299: GREATEREQUAL
33300: IFFALSE 33315
// AddMedal ( Friendship , - 1 ) else
33302: LD_STRING Friendship
33304: PPUSH
33305: LD_INT 1
33307: NEG
33308: PPUSH
33309: CALL_OW 101
33313: GO 33325
// AddMedal ( Friendship , 1 ) ;
33315: LD_STRING Friendship
33317: PPUSH
33318: LD_INT 1
33320: PPUSH
33321: CALL_OW 101
// GiveMedals ( MAIN ) ;
33325: LD_STRING MAIN
33327: PPUSH
33328: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33332: LD_ADDR_VAR 0 2
33336: PUSH
33337: LD_INT 22
33339: PUSH
33340: LD_INT 7
33342: PUSH
33343: EMPTY
33344: LIST
33345: LIST
33346: PUSH
33347: LD_INT 2
33349: PUSH
33350: LD_INT 25
33352: PUSH
33353: LD_INT 1
33355: PUSH
33356: EMPTY
33357: LIST
33358: LIST
33359: PUSH
33360: LD_INT 25
33362: PUSH
33363: LD_INT 2
33365: PUSH
33366: EMPTY
33367: LIST
33368: LIST
33369: PUSH
33370: LD_INT 25
33372: PUSH
33373: LD_INT 3
33375: PUSH
33376: EMPTY
33377: LIST
33378: LIST
33379: PUSH
33380: LD_INT 25
33382: PUSH
33383: LD_INT 4
33385: PUSH
33386: EMPTY
33387: LIST
33388: LIST
33389: PUSH
33390: LD_INT 25
33392: PUSH
33393: LD_INT 5
33395: PUSH
33396: EMPTY
33397: LIST
33398: LIST
33399: PUSH
33400: LD_INT 25
33402: PUSH
33403: LD_INT 8
33405: PUSH
33406: EMPTY
33407: LIST
33408: LIST
33409: PUSH
33410: LD_INT 25
33412: PUSH
33413: LD_INT 9
33415: PUSH
33416: EMPTY
33417: LIST
33418: LIST
33419: PUSH
33420: EMPTY
33421: LIST
33422: LIST
33423: LIST
33424: LIST
33425: LIST
33426: LIST
33427: LIST
33428: LIST
33429: PUSH
33430: EMPTY
33431: LIST
33432: LIST
33433: PUSH
33434: EMPTY
33435: LIST
33436: PPUSH
33437: CALL_OW 69
33441: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33442: LD_VAR 0 2
33446: PUSH
33447: LD_EXP 12
33451: UNION
33452: PPUSH
33453: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33457: LD_EXP 11
33461: PPUSH
33462: LD_STRING 12a_JMM
33464: PPUSH
33465: CALL_OW 38
// if IsLive ( Roth ) then
33469: LD_EXP 12
33473: PPUSH
33474: CALL_OW 300
33478: IFFALSE 33492
// SaveCharacters ( Roth , 12a_Roth ) ;
33480: LD_EXP 12
33484: PPUSH
33485: LD_STRING 12a_Roth
33487: PPUSH
33488: CALL_OW 38
// if Lisa in tmp then
33492: LD_EXP 20
33496: PUSH
33497: LD_VAR 0 2
33501: IN
33502: IFFALSE 33518
// SaveCharacters ( Lisa , 12a_Lisa ) else
33504: LD_EXP 20
33508: PPUSH
33509: LD_STRING 12a_Lisa
33511: PPUSH
33512: CALL_OW 38
33516: GO 33536
// if Lisa then
33518: LD_EXP 20
33522: IFFALSE 33536
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33524: LD_EXP 20
33528: PPUSH
33529: LD_STRING 12p_Lisa
33531: PPUSH
33532: CALL_OW 38
// if Donaldson in tmp then
33536: LD_EXP 21
33540: PUSH
33541: LD_VAR 0 2
33545: IN
33546: IFFALSE 33562
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33548: LD_EXP 21
33552: PPUSH
33553: LD_STRING 12a_Donaldson
33555: PPUSH
33556: CALL_OW 38
33560: GO 33580
// if Donaldson then
33562: LD_EXP 21
33566: IFFALSE 33580
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33568: LD_EXP 21
33572: PPUSH
33573: LD_STRING 12p_Donaldson
33575: PPUSH
33576: CALL_OW 38
// if Bobby in tmp then
33580: LD_EXP 22
33584: PUSH
33585: LD_VAR 0 2
33589: IN
33590: IFFALSE 33606
// SaveCharacters ( Bobby , 12a_Bobby ) else
33592: LD_EXP 22
33596: PPUSH
33597: LD_STRING 12a_Bobby
33599: PPUSH
33600: CALL_OW 38
33604: GO 33624
// if Bobby then
33606: LD_EXP 22
33610: IFFALSE 33624
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33612: LD_EXP 22
33616: PPUSH
33617: LD_STRING 12p_Bobby
33619: PPUSH
33620: CALL_OW 38
// if Cyrus in tmp then
33624: LD_EXP 23
33628: PUSH
33629: LD_VAR 0 2
33633: IN
33634: IFFALSE 33650
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33636: LD_EXP 23
33640: PPUSH
33641: LD_STRING 12a_Cyrus
33643: PPUSH
33644: CALL_OW 38
33648: GO 33668
// if Cyrus then
33650: LD_EXP 23
33654: IFFALSE 33668
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33656: LD_EXP 23
33660: PPUSH
33661: LD_STRING 12p_Cyrus
33663: PPUSH
33664: CALL_OW 38
// if Denis in tmp then
33668: LD_EXP 24
33672: PUSH
33673: LD_VAR 0 2
33677: IN
33678: IFFALSE 33692
// SaveCharacters ( Denis , 12a_Denis ) ;
33680: LD_EXP 24
33684: PPUSH
33685: LD_STRING 12a_Denis
33687: PPUSH
33688: CALL_OW 38
// if Brown in tmp then
33692: LD_EXP 25
33696: PUSH
33697: LD_VAR 0 2
33701: IN
33702: IFFALSE 33718
// SaveCharacters ( Brown , 12a_Brown ) else
33704: LD_EXP 25
33708: PPUSH
33709: LD_STRING 12a_Brown
33711: PPUSH
33712: CALL_OW 38
33716: GO 33742
// if Brown in tmp then
33718: LD_EXP 25
33722: PUSH
33723: LD_VAR 0 2
33727: IN
33728: IFFALSE 33742
// SaveCharacters ( Brown , 12p_Brown ) ;
33730: LD_EXP 25
33734: PPUSH
33735: LD_STRING 12p_Brown
33737: PPUSH
33738: CALL_OW 38
// if Gladstone in tmp then
33742: LD_EXP 26
33746: PUSH
33747: LD_VAR 0 2
33751: IN
33752: IFFALSE 33768
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33754: LD_EXP 26
33758: PPUSH
33759: LD_STRING 12a_Gladstone
33761: PPUSH
33762: CALL_OW 38
33766: GO 33786
// if Gladstone then
33768: LD_EXP 26
33772: IFFALSE 33786
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33774: LD_EXP 26
33778: PPUSH
33779: LD_STRING 12p_Gladstone
33781: PPUSH
33782: CALL_OW 38
// if Houten in tmp then
33786: LD_EXP 27
33790: PUSH
33791: LD_VAR 0 2
33795: IN
33796: IFFALSE 33812
// SaveCharacters ( Houten , 12a_Houten ) else
33798: LD_EXP 27
33802: PPUSH
33803: LD_STRING 12a_Houten
33805: PPUSH
33806: CALL_OW 38
33810: GO 33830
// if Houten then
33812: LD_EXP 27
33816: IFFALSE 33830
// SaveCharacters ( Houten , 12p_Houten ) ;
33818: LD_EXP 27
33822: PPUSH
33823: LD_STRING 12p_Houten
33825: PPUSH
33826: CALL_OW 38
// if Cornel in tmp then
33830: LD_EXP 28
33834: PUSH
33835: LD_VAR 0 2
33839: IN
33840: IFFALSE 33856
// SaveCharacters ( Cornel , 12a_Cornel ) else
33842: LD_EXP 28
33846: PPUSH
33847: LD_STRING 12a_Cornel
33849: PPUSH
33850: CALL_OW 38
33854: GO 33874
// if Cornel then
33856: LD_EXP 28
33860: IFFALSE 33874
// SaveCharacters ( Cornel , 12p_Cornel ) ;
33862: LD_EXP 28
33866: PPUSH
33867: LD_STRING 12p_Cornel
33869: PPUSH
33870: CALL_OW 38
// if Gary in tmp then
33874: LD_EXP 29
33878: PUSH
33879: LD_VAR 0 2
33883: IN
33884: IFFALSE 33900
// SaveCharacters ( Gary , 12a_Gary ) else
33886: LD_EXP 29
33890: PPUSH
33891: LD_STRING 12a_Gary
33893: PPUSH
33894: CALL_OW 38
33898: GO 33918
// if Gary then
33900: LD_EXP 29
33904: IFFALSE 33918
// SaveCharacters ( Gary , 12p_Gary ) ;
33906: LD_EXP 29
33910: PPUSH
33911: LD_STRING 12p_Gary
33913: PPUSH
33914: CALL_OW 38
// if Frank in tmp then
33918: LD_EXP 30
33922: PUSH
33923: LD_VAR 0 2
33927: IN
33928: IFFALSE 33942
// SaveCharacters ( Frank , 12a_Frank ) ;
33930: LD_EXP 30
33934: PPUSH
33935: LD_STRING 12a_Frank
33937: PPUSH
33938: CALL_OW 38
// if Kikuchi in tmp then
33942: LD_EXP 31
33946: PUSH
33947: LD_VAR 0 2
33951: IN
33952: IFFALSE 33968
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33954: LD_EXP 31
33958: PPUSH
33959: LD_STRING 12a_Kikuchi
33961: PPUSH
33962: CALL_OW 38
33966: GO 33986
// if Kikuchi then
33968: LD_EXP 31
33972: IFFALSE 33986
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
33974: LD_EXP 31
33978: PPUSH
33979: LD_STRING 12p_Kikuchi
33981: PPUSH
33982: CALL_OW 38
// if Simms in tmp then
33986: LD_EXP 32
33990: PUSH
33991: LD_VAR 0 2
33995: IN
33996: IFFALSE 34010
// SaveCharacters ( Simms , 12a_Simms ) ;
33998: LD_EXP 32
34002: PPUSH
34003: LD_STRING 12a_Simms
34005: PPUSH
34006: CALL_OW 38
// if Joan in tmp then
34010: LD_EXP 33
34014: PUSH
34015: LD_VAR 0 2
34019: IN
34020: IFFALSE 34034
// SaveCharacters ( Joan , 12a_Joan ) ;
34022: LD_EXP 33
34026: PPUSH
34027: LD_STRING 12a_Joan
34029: PPUSH
34030: CALL_OW 38
// if DeltaDoctor in tmp then
34034: LD_EXP 34
34038: PUSH
34039: LD_VAR 0 2
34043: IN
34044: IFFALSE 34058
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34046: LD_EXP 34
34050: PPUSH
34051: LD_STRING 12a_DeltaDoctor
34053: PPUSH
34054: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34058: LD_ADDR_VAR 0 2
34062: PUSH
34063: LD_VAR 0 2
34067: PUSH
34068: LD_EXP 11
34072: PUSH
34073: LD_EXP 12
34077: PUSH
34078: LD_EXP 20
34082: PUSH
34083: LD_EXP 21
34087: PUSH
34088: LD_EXP 22
34092: PUSH
34093: LD_EXP 23
34097: PUSH
34098: LD_EXP 24
34102: PUSH
34103: LD_EXP 25
34107: PUSH
34108: LD_EXP 26
34112: PUSH
34113: LD_EXP 27
34117: PUSH
34118: LD_EXP 28
34122: PUSH
34123: LD_EXP 29
34127: PUSH
34128: LD_EXP 30
34132: PUSH
34133: LD_EXP 31
34137: PUSH
34138: LD_EXP 32
34142: PUSH
34143: LD_EXP 33
34147: PUSH
34148: LD_EXP 34
34152: PUSH
34153: EMPTY
34154: LIST
34155: LIST
34156: LIST
34157: LIST
34158: LIST
34159: LIST
34160: LIST
34161: LIST
34162: LIST
34163: LIST
34164: LIST
34165: LIST
34166: LIST
34167: LIST
34168: LIST
34169: LIST
34170: LIST
34171: DIFF
34172: ST_TO_ADDR
// if tmp then
34173: LD_VAR 0 2
34177: IFFALSE 34191
// SaveCharacters ( tmp , 12a_others ) ;
34179: LD_VAR 0 2
34183: PPUSH
34184: LD_STRING 12a_others
34186: PPUSH
34187: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
34191: LD_EXP 5
34195: PUSH
34196: LD_VAR 0 2
34200: DIFF
34201: PPUSH
34202: LD_STRING 12p_others
34204: PPUSH
34205: CALL_OW 38
// YouWin ;
34209: CALL_OW 103
// end ; end_of_file
34213: PPOPN 2
34215: END
// on SailEvent ( event ) do var tmp ;
34216: LD_INT 0
34218: PPUSH
// begin if event = 1 then
34219: LD_VAR 0 1
34223: PUSH
34224: LD_INT 1
34226: EQUAL
34227: IFFALSE 34300
// begin if not mobile_patrol then
34229: LD_EXP 14
34233: NOT
34234: IFFALSE 34238
// exit ;
34236: GO 34300
// tmp := mobile_patrol [ mobile_patrol ] ;
34238: LD_ADDR_VAR 0 2
34242: PUSH
34243: LD_EXP 14
34247: PUSH
34248: LD_EXP 14
34252: ARRAY
34253: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34254: LD_ADDR_EXP 14
34258: PUSH
34259: LD_EXP 14
34263: PPUSH
34264: LD_EXP 14
34268: PPUSH
34269: CALL_OW 3
34273: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34274: LD_VAR 0 2
34278: PPUSH
34279: LD_EXP 15
34283: PUSH
34284: LD_EXP 14
34288: PUSH
34289: LD_INT 1
34291: PLUS
34292: ARRAY
34293: PPUSH
34294: EMPTY
34295: PPUSH
34296: CALL 6185 0 3
// end ; end ;
34300: PPOPN 2
34302: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34303: LD_VAR 0 1
34307: PUSH
34308: LD_EXP 11
34312: EQUAL
34313: IFFALSE 34322
// YouLost ( JMM ) ;
34315: LD_STRING JMM
34317: PPUSH
34318: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34322: LD_VAR 0 1
34326: PPUSH
34327: CALL_OW 255
34331: PUSH
34332: LD_INT 7
34334: EQUAL
34335: PUSH
34336: LD_VAR 0 1
34340: PPUSH
34341: CALL_OW 264
34345: PUSH
34346: LD_INT 12
34348: EQUAL
34349: AND
34350: IFFALSE 34359
// YouLost ( Artifact ) ;
34352: LD_STRING Artifact
34354: PPUSH
34355: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
34359: LD_VAR 0 1
34363: PPUSH
34364: CALL_OW 255
34368: PUSH
34369: LD_INT 7
34371: EQUAL
34372: PUSH
34373: LD_VAR 0 1
34377: PPUSH
34378: CALL_OW 247
34382: PUSH
34383: LD_INT 1
34385: EQUAL
34386: AND
34387: IFFALSE 34403
// team_kill_counter := team_kill_counter + 1 ;
34389: LD_ADDR_EXP 9
34393: PUSH
34394: LD_EXP 9
34398: PUSH
34399: LD_INT 1
34401: PLUS
34402: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34403: LD_VAR 0 1
34407: PPUSH
34408: CALL_OW 255
34412: PUSH
34413: LD_INT 1
34415: EQUAL
34416: PUSH
34417: LD_VAR 0 1
34421: PPUSH
34422: CALL_OW 247
34426: PUSH
34427: LD_INT 1
34429: EQUAL
34430: AND
34431: IFFALSE 34447
// friends_kill_counter := friends_kill_counter + 1 ;
34433: LD_ADDR_EXP 8
34437: PUSH
34438: LD_EXP 8
34442: PUSH
34443: LD_INT 1
34445: PLUS
34446: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34447: LD_VAR 0 1
34451: PPUSH
34452: CALL_OW 255
34456: PUSH
34457: LD_INT 1
34459: NONEQUAL
34460: IFFALSE 34464
// exit ;
34462: GO 34541
// if GetControl ( un ) = control_remote then
34464: LD_VAR 0 1
34468: PPUSH
34469: CALL_OW 263
34473: PUSH
34474: LD_INT 2
34476: EQUAL
34477: IFFALSE 34495
// defenders := defenders diff un ;
34479: LD_ADDR_EXP 17
34483: PUSH
34484: LD_EXP 17
34488: PUSH
34489: LD_VAR 0 1
34493: DIFF
34494: ST_TO_ADDR
// if not un in defenders then
34495: LD_VAR 0 1
34499: PUSH
34500: LD_EXP 17
34504: IN
34505: NOT
34506: IFFALSE 34541
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34508: LD_ADDR_EXP 18
34512: PUSH
34513: LD_VAR 0 1
34517: PPUSH
34518: CALL_OW 250
34522: PUSH
34523: LD_VAR 0 1
34527: PPUSH
34528: CALL_OW 251
34532: PUSH
34533: EMPTY
34534: LIST
34535: LIST
34536: ST_TO_ADDR
// Defend ;
34537: CALL 2405 0 0
// end ; end ;
34541: PPOPN 1
34543: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34544: LD_VAR 0 1
34548: PPUSH
34549: CALL_OW 255
34553: PUSH
34554: LD_INT 1
34556: NONEQUAL
34557: IFFALSE 34561
// exit ;
34559: GO 34585
// if GetControl ( veh ) = control_remote then
34561: LD_VAR 0 1
34565: PPUSH
34566: CALL_OW 263
34570: PUSH
34571: LD_INT 2
34573: EQUAL
34574: IFFALSE 34585
// Connect ( veh ) ;
34576: LD_VAR 0 1
34580: PPUSH
34581: CALL 5380 0 1
// end ;
34585: PPOPN 2
34587: END
// on UnitGoesToRed ( un ) do var i , veh ;
34588: LD_INT 0
34590: PPUSH
34591: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34592: LD_VAR 0 1
34596: PPUSH
34597: CALL_OW 255
34601: PUSH
34602: LD_INT 1
34604: EQUAL
34605: PUSH
34606: LD_VAR 0 1
34610: PPUSH
34611: CALL_OW 263
34615: PUSH
34616: LD_INT 2
34618: EQUAL
34619: AND
34620: IFFALSE 34631
// ComUnlink ( un ) ;
34622: LD_VAR 0 1
34626: PPUSH
34627: CALL_OW 136
// if un = ambar0 then
34631: LD_VAR 0 1
34635: PUSH
34636: LD_INT 18
34638: EQUAL
34639: IFFALSE 34749
// begin uc_side := 1 ;
34641: LD_ADDR_OWVAR 20
34645: PUSH
34646: LD_INT 1
34648: ST_TO_ADDR
// uc_nation := 1 ;
34649: LD_ADDR_OWVAR 21
34653: PUSH
34654: LD_INT 1
34656: ST_TO_ADDR
// for i = 1 to 6 do
34657: LD_ADDR_VAR 0 2
34661: PUSH
34662: DOUBLE
34663: LD_INT 1
34665: DEC
34666: ST_TO_ADDR
34667: LD_INT 6
34669: PUSH
34670: FOR_TO
34671: IFFALSE 34747
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34673: LD_INT 3
34675: PPUSH
34676: LD_INT 1
34678: PPUSH
34679: LD_INT 3
34681: PPUSH
34682: LD_INT 4
34684: PPUSH
34685: LD_INT 100
34687: PPUSH
34688: CALL 5144 0 5
// veh := CreateVehicle ;
34692: LD_ADDR_VAR 0 3
34696: PUSH
34697: CALL_OW 45
34701: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34702: LD_VAR 0 3
34706: PPUSH
34707: LD_INT 1
34709: PPUSH
34710: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34714: LD_VAR 0 3
34718: PPUSH
34719: LD_INT 25
34721: PPUSH
34722: LD_INT 0
34724: PPUSH
34725: CALL_OW 49
// defenders := defenders ^ veh ;
34729: LD_ADDR_EXP 17
34733: PUSH
34734: LD_EXP 17
34738: PUSH
34739: LD_VAR 0 3
34743: ADD
34744: ST_TO_ADDR
// end ;
34745: GO 34670
34747: POP
34748: POP
// end ; end ;
34749: PPOPN 3
34751: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
34752: LD_VAR 0 2
34756: PUSH
34757: LD_EXP 13
34761: EQUAL
34762: IFFALSE 34773
// RemoveUnit ( Powell ) ;
34764: LD_EXP 13
34768: PPUSH
34769: CALL_OW 64
// end ;
34773: PPOPN 2
34775: END
