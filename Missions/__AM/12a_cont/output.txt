// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29657 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2785 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30082 0 0
// PreparePatrol ;
 103: CALL 889 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 5081 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 5144 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 0
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defcon_wave := 0 ;
 556: LD_ADDR_EXP 19
 560: PUSH
 561: LD_INT 0
 563: ST_TO_ADDR
// defenders := [ ] ;
 564: LD_ADDR_EXP 17
 568: PUSH
 569: EMPTY
 570: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 571: LD_INT 5
 573: PPUSH
 574: LD_STRING alpha
 576: PPUSH
 577: CALL_OW 500
// uc_side := 1 ;
 581: LD_ADDR_OWVAR 20
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// uc_nation := 1 ;
 589: LD_ADDR_OWVAR 21
 593: PUSH
 594: LD_INT 1
 596: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 597: LD_ADDR_EXP 13
 601: PUSH
 602: LD_STRING Powell
 604: PPUSH
 605: CALL_OW 25
 609: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 610: LD_EXP 13
 614: PPUSH
 615: LD_INT 110
 617: PPUSH
 618: LD_INT 26
 620: PPUSH
 621: LD_INT 0
 623: PPUSH
 624: CALL_OW 48
// ComHold ( Powell ) ;
 628: LD_EXP 13
 632: PPUSH
 633: CALL_OW 140
// for i = 1 to 5 do
 637: LD_ADDR_VAR 0 2
 641: PUSH
 642: DOUBLE
 643: LD_INT 1
 645: DEC
 646: ST_TO_ADDR
 647: LD_INT 5
 649: PUSH
 650: FOR_TO
 651: IFFALSE 707
// begin PrepareHuman ( false , 1 , 10 ) ;
 653: LD_INT 0
 655: PPUSH
 656: LD_INT 1
 658: PPUSH
 659: LD_INT 10
 661: PPUSH
 662: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 666: LD_ADDR_EXP 16
 670: PUSH
 671: LD_EXP 16
 675: PPUSH
 676: LD_INT 1
 678: PPUSH
 679: CALL_OW 44
 683: PPUSH
 684: CALL_OW 2
 688: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 689: LD_EXP 16
 693: PUSH
 694: LD_INT 1
 696: ARRAY
 697: PPUSH
 698: LD_INT 18
 700: PPUSH
 701: CALL_OW 52
// end ;
 705: GO 650
 707: POP
 708: POP
// if Difficulty > 2 then
 709: LD_OWVAR 67
 713: PUSH
 714: LD_INT 2
 716: GREATER
 717: IFFALSE 766
// begin bc_type := b_turret ;
 719: LD_ADDR_OWVAR 42
 723: PUSH
 724: LD_INT 33
 726: ST_TO_ADDR
// bc_level := 7 ;
 727: LD_ADDR_OWVAR 43
 731: PUSH
 732: LD_INT 7
 734: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 735: LD_ADDR_VAR 0 4
 739: PUSH
 740: LD_INT 107
 742: PPUSH
 743: LD_INT 55
 745: PPUSH
 746: LD_INT 5
 748: PPUSH
 749: CALL_OW 47
 753: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 754: LD_VAR 0 4
 758: PPUSH
 759: LD_INT 7
 761: PPUSH
 762: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 766: LD_ADDR_VAR 0 2
 770: PUSH
 771: LD_INT 22
 773: PUSH
 774: LD_INT 1
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: PUSH
 781: LD_INT 30
 783: PUSH
 784: LD_INT 3
 786: PUSH
 787: EMPTY
 788: LIST
 789: LIST
 790: PUSH
 791: EMPTY
 792: LIST
 793: LIST
 794: PPUSH
 795: CALL_OW 69
 799: PUSH
 800: LD_INT 22
 802: PUSH
 803: LD_INT 1
 805: PUSH
 806: EMPTY
 807: LIST
 808: LIST
 809: PUSH
 810: LD_INT 30
 812: PUSH
 813: LD_INT 36
 815: PUSH
 816: EMPTY
 817: LIST
 818: LIST
 819: PUSH
 820: EMPTY
 821: LIST
 822: LIST
 823: PPUSH
 824: CALL_OW 69
 828: ADD
 829: PUSH
 830: FOR_IN
 831: IFFALSE 882
// for j = 1 to 3 do
 833: LD_ADDR_VAR 0 3
 837: PUSH
 838: DOUBLE
 839: LD_INT 1
 841: DEC
 842: ST_TO_ADDR
 843: LD_INT 3
 845: PUSH
 846: FOR_TO
 847: IFFALSE 878
// begin PrepareHuman ( false , 3 , 6 ) ;
 849: LD_INT 0
 851: PPUSH
 852: LD_INT 3
 854: PPUSH
 855: LD_INT 6
 857: PPUSH
 858: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 862: CALL_OW 44
 866: PPUSH
 867: LD_VAR 0 2
 871: PPUSH
 872: CALL_OW 52
// end ;
 876: GO 846
 878: POP
 879: POP
 880: GO 830
 882: POP
 883: POP
// end ;
 884: LD_VAR 0 1
 888: RET
// export function PreparePatrol ; var i , un ; begin
 889: LD_INT 0
 891: PPUSH
 892: PPUSH
 893: PPUSH
// uc_side := 1 ;
 894: LD_ADDR_OWVAR 20
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// uc_nation := 1 ;
 902: LD_ADDR_OWVAR 21
 906: PUSH
 907: LD_INT 1
 909: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 910: LD_ADDR_EXP 15
 914: PUSH
 915: LD_INT 99
 917: PUSH
 918: LD_INT 55
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PUSH
 925: LD_INT 113
 927: PUSH
 928: LD_INT 67
 930: PUSH
 931: EMPTY
 932: LIST
 933: LIST
 934: PUSH
 935: LD_INT 129
 937: PUSH
 938: LD_INT 68
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PUSH
 945: LD_INT 135
 947: PUSH
 948: LD_INT 62
 950: PUSH
 951: EMPTY
 952: LIST
 953: LIST
 954: PUSH
 955: LD_INT 103
 957: PUSH
 958: LD_INT 41
 960: PUSH
 961: EMPTY
 962: LIST
 963: LIST
 964: PUSH
 965: EMPTY
 966: LIST
 967: LIST
 968: LIST
 969: LIST
 970: LIST
 971: PUSH
 972: LD_INT 27
 974: PUSH
 975: LD_INT 49
 977: PUSH
 978: EMPTY
 979: LIST
 980: LIST
 981: PUSH
 982: LD_INT 46
 984: PUSH
 985: LD_INT 49
 987: PUSH
 988: EMPTY
 989: LIST
 990: LIST
 991: PUSH
 992: LD_INT 87
 994: PUSH
 995: LD_INT 70
 997: PUSH
 998: EMPTY
 999: LIST
1000: LIST
1001: PUSH
1002: LD_INT 99
1004: PUSH
1005: LD_INT 79
1007: PUSH
1008: EMPTY
1009: LIST
1010: LIST
1011: PUSH
1012: LD_INT 118
1014: PUSH
1015: LD_INT 111
1017: PUSH
1018: EMPTY
1019: LIST
1020: LIST
1021: PUSH
1022: LD_INT 99
1024: PUSH
1025: LD_INT 79
1027: PUSH
1028: EMPTY
1029: LIST
1030: LIST
1031: PUSH
1032: LD_INT 87
1034: PUSH
1035: LD_INT 70
1037: PUSH
1038: EMPTY
1039: LIST
1040: LIST
1041: PUSH
1042: LD_INT 46
1044: PUSH
1045: LD_INT 49
1047: PUSH
1048: EMPTY
1049: LIST
1050: LIST
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: LIST
1056: LIST
1057: LIST
1058: LIST
1059: LIST
1060: LIST
1061: PUSH
1062: LD_INT 200
1064: PUSH
1065: LD_INT 88
1067: PUSH
1068: EMPTY
1069: LIST
1070: LIST
1071: PUSH
1072: LD_INT 175
1074: PUSH
1075: LD_INT 80
1077: PUSH
1078: EMPTY
1079: LIST
1080: LIST
1081: PUSH
1082: LD_INT 135
1084: PUSH
1085: LD_INT 62
1087: PUSH
1088: EMPTY
1089: LIST
1090: LIST
1091: PUSH
1092: LD_INT 117
1094: PUSH
1095: LD_INT 53
1097: PUSH
1098: EMPTY
1099: LIST
1100: LIST
1101: PUSH
1102: LD_INT 103
1104: PUSH
1105: LD_INT 41
1107: PUSH
1108: EMPTY
1109: LIST
1110: LIST
1111: PUSH
1112: LD_INT 99
1114: PUSH
1115: LD_INT 24
1117: PUSH
1118: EMPTY
1119: LIST
1120: LIST
1121: PUSH
1122: LD_INT 85
1124: PUSH
1125: LD_INT 3
1127: PUSH
1128: EMPTY
1129: LIST
1130: LIST
1131: PUSH
1132: LD_INT 99
1134: PUSH
1135: LD_INT 24
1137: PUSH
1138: EMPTY
1139: LIST
1140: LIST
1141: PUSH
1142: LD_INT 103
1144: PUSH
1145: LD_INT 41
1147: PUSH
1148: EMPTY
1149: LIST
1150: LIST
1151: PUSH
1152: LD_INT 98
1154: PUSH
1155: LD_INT 47
1157: PUSH
1158: EMPTY
1159: LIST
1160: LIST
1161: PUSH
1162: LD_INT 99
1164: PUSH
1165: LD_INT 56
1167: PUSH
1168: EMPTY
1169: LIST
1170: LIST
1171: PUSH
1172: LD_INT 96
1174: PUSH
1175: LD_INT 66
1177: PUSH
1178: EMPTY
1179: LIST
1180: LIST
1181: PUSH
1182: LD_INT 99
1184: PUSH
1185: LD_INT 56
1187: PUSH
1188: EMPTY
1189: LIST
1190: LIST
1191: PUSH
1192: LD_INT 112
1194: PUSH
1195: LD_INT 66
1197: PUSH
1198: EMPTY
1199: LIST
1200: LIST
1201: PUSH
1202: LD_INT 129
1204: PUSH
1205: LD_INT 68
1207: PUSH
1208: EMPTY
1209: LIST
1210: LIST
1211: PUSH
1212: LD_INT 135
1214: PUSH
1215: LD_INT 62
1217: PUSH
1218: EMPTY
1219: LIST
1220: LIST
1221: PUSH
1222: LD_INT 156
1224: PUSH
1225: LD_INT 71
1227: PUSH
1228: EMPTY
1229: LIST
1230: LIST
1231: PUSH
1232: LD_INT 168
1234: PUSH
1235: LD_INT 76
1237: PUSH
1238: EMPTY
1239: LIST
1240: LIST
1241: PUSH
1242: LD_INT 168
1244: PUSH
1245: LD_INT 61
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: PUSH
1252: LD_INT 168
1254: PUSH
1255: LD_INT 75
1257: PUSH
1258: EMPTY
1259: LIST
1260: LIST
1261: PUSH
1262: LD_INT 185
1264: PUSH
1265: LD_INT 85
1267: PUSH
1268: EMPTY
1269: LIST
1270: LIST
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: LIST
1287: LIST
1288: LIST
1289: LIST
1290: LIST
1291: LIST
1292: LIST
1293: LIST
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: ST_TO_ADDR
// mobile_patrol := [ ] ;
1300: LD_ADDR_EXP 14
1304: PUSH
1305: EMPTY
1306: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1307: LD_INT 3
1309: PPUSH
1310: LD_INT 1
1312: PPUSH
1313: LD_INT 3
1315: PPUSH
1316: LD_INT 4
1318: PPUSH
1319: LD_INT 100
1321: PPUSH
1322: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1326: LD_ADDR_EXP 14
1330: PUSH
1331: LD_EXP 14
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: CALL_OW 45
1343: PPUSH
1344: CALL_OW 2
1348: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1349: LD_EXP 14
1353: PUSH
1354: LD_INT 1
1356: ARRAY
1357: PPUSH
1358: LD_INT 99
1360: PPUSH
1361: LD_INT 55
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1371: LD_INT 2
1373: PPUSH
1374: LD_INT 1
1376: PPUSH
1377: LD_INT 3
1379: PPUSH
1380: LD_INT 4
1382: PPUSH
1383: LD_INT 100
1385: PPUSH
1386: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1390: LD_ADDR_EXP 14
1394: PUSH
1395: LD_EXP 14
1399: PPUSH
1400: LD_INT 2
1402: PPUSH
1403: CALL_OW 45
1407: PPUSH
1408: CALL_OW 2
1412: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1413: LD_EXP 14
1417: PUSH
1418: LD_INT 2
1420: ARRAY
1421: PPUSH
1422: LD_INT 27
1424: PPUSH
1425: LD_INT 49
1427: PPUSH
1428: LD_INT 0
1430: PPUSH
1431: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1435: LD_INT 3
1437: PPUSH
1438: LD_INT 1
1440: PPUSH
1441: LD_INT 3
1443: PPUSH
1444: LD_INT 7
1446: PPUSH
1447: LD_INT 100
1449: PPUSH
1450: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1454: LD_ADDR_EXP 14
1458: PUSH
1459: LD_EXP 14
1463: PPUSH
1464: LD_INT 3
1466: PPUSH
1467: CALL_OW 45
1471: PPUSH
1472: CALL_OW 2
1476: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1477: LD_EXP 14
1481: PUSH
1482: LD_INT 3
1484: ARRAY
1485: PPUSH
1486: LD_INT 200
1488: PPUSH
1489: LD_INT 88
1491: PPUSH
1492: LD_INT 0
1494: PPUSH
1495: CALL_OW 48
// for i = mobile_patrol downto 1 do
1499: LD_ADDR_VAR 0 2
1503: PUSH
1504: DOUBLE
1505: LD_EXP 14
1509: INC
1510: ST_TO_ADDR
1511: LD_INT 1
1513: PUSH
1514: FOR_DOWNTO
1515: IFFALSE 1526
// RaiseSailEvent ( 1 ) ;
1517: LD_INT 1
1519: PPUSH
1520: CALL_OW 427
1524: GO 1514
1526: POP
1527: POP
// end ;
1528: LD_VAR 0 1
1532: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1533: LD_INT 0
1535: PPUSH
1536: PPUSH
1537: PPUSH
1538: PPUSH
1539: PPUSH
1540: PPUSH
1541: PPUSH
1542: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1543: LD_ADDR_VAR 0 5
1547: PUSH
1548: LD_INT 20
1550: PUSH
1551: LD_INT 4
1553: PUSH
1554: EMPTY
1555: LIST
1556: LIST
1557: PUSH
1558: LD_INT 21
1560: PUSH
1561: LD_INT 5
1563: PUSH
1564: EMPTY
1565: LIST
1566: LIST
1567: PUSH
1568: LD_INT 22
1570: PUSH
1571: LD_INT 1
1573: PUSH
1574: EMPTY
1575: LIST
1576: LIST
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: LIST
1582: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1583: LD_ADDR_VAR 0 6
1587: PUSH
1588: LD_INT 176
1590: PUSH
1591: LD_INT 81
1593: PUSH
1594: LD_INT 135
1596: PUSH
1597: LD_INT 62
1599: PUSH
1600: LD_INT 114
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 93
1608: PUSH
1609: LD_INT 71
1611: PUSH
1612: LD_INT 76
1614: PUSH
1615: LD_INT 67
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: LIST
1622: LIST
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: PUSH
1630: LD_INT 107
1632: PUSH
1633: LD_INT 92
1635: PUSH
1636: LD_INT 92
1638: PUSH
1639: LD_INT 72
1641: PUSH
1642: LD_INT 77
1644: PUSH
1645: LD_INT 68
1647: PUSH
1648: EMPTY
1649: LIST
1650: LIST
1651: LIST
1652: LIST
1653: LIST
1654: LIST
1655: PUSH
1656: LD_INT 45
1658: PUSH
1659: LD_INT 49
1661: PUSH
1662: LD_INT 67
1664: PUSH
1665: LD_INT 59
1667: PUSH
1668: LD_INT 77
1670: PUSH
1671: LD_INT 68
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: LIST
1679: LIST
1680: LIST
1681: PUSH
1682: EMPTY
1683: LIST
1684: LIST
1685: LIST
1686: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1687: LD_ADDR_VAR 0 4
1691: PUSH
1692: LD_INT 1
1694: PPUSH
1695: LD_VAR 0 5
1699: PPUSH
1700: CALL_OW 12
1704: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1705: LD_ADDR_VAR 0 3
1709: PUSH
1710: LD_INT 1
1712: PPUSH
1713: LD_INT 2
1715: PPUSH
1716: CALL_OW 12
1720: ST_TO_ADDR
// uc_side := 1 ;
1721: LD_ADDR_OWVAR 20
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// uc_nation := 1 ;
1729: LD_ADDR_OWVAR 21
1733: PUSH
1734: LD_INT 1
1736: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1737: LD_INT 2
1739: PPUSH
1740: LD_INT 3
1742: PPUSH
1743: LD_INT 3
1745: PPUSH
1746: LD_INT 12
1748: PPUSH
1749: LD_INT 100
1751: PPUSH
1752: CALL 5144 0 5
// veh := CreateVehicle ;
1756: LD_ADDR_VAR 0 8
1760: PUSH
1761: CALL_OW 45
1765: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1766: LD_VAR 0 8
1770: PPUSH
1771: LD_VAR 0 5
1775: PUSH
1776: LD_VAR 0 4
1780: ARRAY
1781: PUSH
1782: LD_INT 2
1784: ARRAY
1785: PPUSH
1786: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1790: LD_VAR 0 8
1794: PPUSH
1795: LD_VAR 0 5
1799: PUSH
1800: LD_VAR 0 4
1804: ARRAY
1805: PUSH
1806: LD_INT 1
1808: ARRAY
1809: PPUSH
1810: LD_INT 0
1812: PPUSH
1813: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1817: LD_VAR 0 8
1821: PPUSH
1822: LD_INT 1
1824: PUSH
1825: LD_INT 3
1827: PUSH
1828: EMPTY
1829: LIST
1830: LIST
1831: PUSH
1832: LD_VAR 0 3
1836: ARRAY
1837: PPUSH
1838: LD_INT 100
1840: PPUSH
1841: CALL_OW 290
// tmp := road [ k ] ;
1845: LD_ADDR_VAR 0 7
1849: PUSH
1850: LD_VAR 0 6
1854: PUSH
1855: LD_VAR 0 4
1859: ARRAY
1860: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1861: LD_ADDR_VAR 0 2
1865: PUSH
1866: DOUBLE
1867: LD_INT 1
1869: DEC
1870: ST_TO_ADDR
1871: LD_VAR 0 7
1875: PUSH
1876: LD_INT 2
1878: DIV
1879: PUSH
1880: FOR_TO
1881: IFFALSE 1928
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_VAR 0 7
1892: PUSH
1893: LD_VAR 0 2
1897: PUSH
1898: LD_INT 2
1900: MUL
1901: PUSH
1902: LD_INT 1
1904: MINUS
1905: ARRAY
1906: PPUSH
1907: LD_VAR 0 7
1911: PUSH
1912: LD_VAR 0 2
1916: PUSH
1917: LD_INT 2
1919: MUL
1920: ARRAY
1921: PPUSH
1922: CALL_OW 171
1926: GO 1880
1928: POP
1929: POP
// AddComGive ( veh , alfa ) ;
1930: LD_VAR 0 8
1934: PPUSH
1935: LD_INT 5
1937: PPUSH
1938: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1942: LD_VAR 0 8
1946: PPUSH
1947: LD_INT 70
1949: PPUSH
1950: CALL_OW 202
// for i = tmp div 2 downto 1 do
1954: LD_ADDR_VAR 0 2
1958: PUSH
1959: DOUBLE
1960: LD_VAR 0 7
1964: PUSH
1965: LD_INT 2
1967: DIV
1968: INC
1969: ST_TO_ADDR
1970: LD_INT 1
1972: PUSH
1973: FOR_DOWNTO
1974: IFFALSE 2021
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1976: LD_VAR 0 8
1980: PPUSH
1981: LD_VAR 0 7
1985: PUSH
1986: LD_VAR 0 2
1990: PUSH
1991: LD_INT 2
1993: MUL
1994: PUSH
1995: LD_INT 1
1997: MINUS
1998: ARRAY
1999: PPUSH
2000: LD_VAR 0 7
2004: PUSH
2005: LD_VAR 0 2
2009: PUSH
2010: LD_INT 2
2012: MUL
2013: ARRAY
2014: PPUSH
2015: CALL_OW 171
2019: GO 1973
2021: POP
2022: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2023: LD_VAR 0 8
2027: PPUSH
2028: LD_VAR 0 5
2032: PUSH
2033: LD_VAR 0 4
2037: ARRAY
2038: PUSH
2039: LD_INT 1
2041: ARRAY
2042: PPUSH
2043: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2047: LD_INT 35
2049: PPUSH
2050: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2054: LD_VAR 0 8
2058: PPUSH
2059: LD_VAR 0 5
2063: PUSH
2064: LD_VAR 0 4
2068: ARRAY
2069: PUSH
2070: LD_INT 1
2072: ARRAY
2073: PPUSH
2074: CALL_OW 308
2078: PUSH
2079: LD_VAR 0 8
2083: PPUSH
2084: LD_VAR 0 3
2088: PPUSH
2089: CALL_OW 289
2093: PUSH
2094: LD_INT 0
2096: EQUAL
2097: AND
2098: IFFALSE 2047
// RemoveUnit ( veh ) ;
2100: LD_VAR 0 8
2104: PPUSH
2105: CALL_OW 64
// end ;
2109: LD_VAR 0 1
2113: RET
// every 3 3$00 do
2114: GO 2116
2116: DISABLE
// begin enable ;
2117: ENABLE
// SpawnCargo ;
2118: CALL 1533 0 0
// end ;
2122: END
// export function PrepareDefenders ; var i , tmp ; begin
2123: LD_INT 0
2125: PPUSH
2126: PPUSH
2127: PPUSH
// if defenders then
2128: LD_EXP 17
2132: IFFALSE 2136
// exit ;
2134: GO 2400
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2136: LD_ADDR_VAR 0 2
2140: PUSH
2141: DOUBLE
2142: LD_INT 1
2144: DEC
2145: ST_TO_ADDR
2146: LD_INT 4
2148: PUSH
2149: LD_INT 5
2151: PUSH
2152: LD_INT 6
2154: PUSH
2155: EMPTY
2156: LIST
2157: LIST
2158: LIST
2159: PUSH
2160: LD_OWVAR 67
2164: ARRAY
2165: PUSH
2166: FOR_TO
2167: IFFALSE 2306
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2169: LD_ADDR_VAR 0 3
2173: PUSH
2174: LD_INT 6
2176: PPUSH
2177: LD_INT 2
2179: PUSH
2180: LD_INT 3
2182: PUSH
2183: EMPTY
2184: LIST
2185: LIST
2186: PUSH
2187: LD_INT 1
2189: PPUSH
2190: LD_INT 2
2192: PPUSH
2193: CALL_OW 12
2197: ARRAY
2198: PPUSH
2199: LD_INT 1
2201: PUSH
2202: LD_INT 3
2204: PUSH
2205: EMPTY
2206: LIST
2207: LIST
2208: PUSH
2209: LD_INT 1
2211: PPUSH
2212: LD_INT 2
2214: PPUSH
2215: CALL_OW 12
2219: ARRAY
2220: PPUSH
2221: LD_INT 2
2223: PPUSH
2224: LD_INT 4
2226: PUSH
2227: LD_INT 5
2229: PUSH
2230: LD_INT 9
2232: PUSH
2233: EMPTY
2234: LIST
2235: LIST
2236: LIST
2237: PUSH
2238: LD_INT 1
2240: PPUSH
2241: LD_INT 3
2243: PPUSH
2244: CALL_OW 12
2248: ARRAY
2249: PPUSH
2250: CALL 27839 0 5
2254: ST_TO_ADDR
// if tmp then
2255: LD_VAR 0 3
2259: IFFALSE 2304
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2261: LD_INT 6
2263: PPUSH
2264: LD_VAR 0 3
2268: PUSH
2269: LD_INT 1
2271: ARRAY
2272: PPUSH
2273: LD_VAR 0 3
2277: PUSH
2278: LD_INT 2
2280: ARRAY
2281: PPUSH
2282: LD_VAR 0 3
2286: PUSH
2287: LD_INT 3
2289: ARRAY
2290: PPUSH
2291: LD_VAR 0 3
2295: PUSH
2296: LD_INT 4
2298: ARRAY
2299: PPUSH
2300: CALL_OW 185
// end ;
2304: GO 2166
2306: POP
2307: POP
// repeat wait ( 0 0$1 ) ;
2308: LD_INT 35
2310: PPUSH
2311: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2315: LD_INT 22
2317: PUSH
2318: LD_INT 1
2320: PUSH
2321: EMPTY
2322: LIST
2323: LIST
2324: PUSH
2325: LD_INT 33
2327: PUSH
2328: LD_INT 2
2330: PUSH
2331: EMPTY
2332: LIST
2333: LIST
2334: PUSH
2335: EMPTY
2336: LIST
2337: LIST
2338: PPUSH
2339: CALL_OW 69
2343: PUSH
2344: LD_INT 4
2346: PUSH
2347: LD_INT 5
2349: PUSH
2350: LD_INT 6
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: LIST
2357: PUSH
2358: LD_OWVAR 67
2362: ARRAY
2363: GREATEREQUAL
2364: IFFALSE 2308
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2366: LD_ADDR_EXP 17
2370: PUSH
2371: LD_INT 22
2373: PUSH
2374: LD_INT 1
2376: PUSH
2377: EMPTY
2378: LIST
2379: LIST
2380: PUSH
2381: LD_INT 33
2383: PUSH
2384: LD_INT 2
2386: PUSH
2387: EMPTY
2388: LIST
2389: LIST
2390: PUSH
2391: EMPTY
2392: LIST
2393: LIST
2394: PPUSH
2395: CALL_OW 69
2399: ST_TO_ADDR
// end ;
2400: LD_VAR 0 1
2404: RET
// export function Defend ; var i , un , veh , tmp ; begin
2405: LD_INT 0
2407: PPUSH
2408: PPUSH
2409: PPUSH
2410: PPUSH
2411: PPUSH
// defcon_wave := defcon_wave + 1 ;
2412: LD_ADDR_EXP 19
2416: PUSH
2417: LD_EXP 19
2421: PUSH
2422: LD_INT 1
2424: PLUS
2425: ST_TO_ADDR
// if not defenders then
2426: LD_EXP 17
2430: NOT
2431: IFFALSE 2437
// PrepareDefenders ;
2433: CALL 2123 0 0
// if defcon_wave > 1 then
2437: LD_EXP 19
2441: PUSH
2442: LD_INT 1
2444: GREATER
2445: IFFALSE 2671
// begin for i = 1 to defcon_wave + 2 do
2447: LD_ADDR_VAR 0 2
2451: PUSH
2452: DOUBLE
2453: LD_INT 1
2455: DEC
2456: ST_TO_ADDR
2457: LD_EXP 19
2461: PUSH
2462: LD_INT 2
2464: PLUS
2465: PUSH
2466: FOR_TO
2467: IFFALSE 2593
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2469: LD_INT 4
2471: PPUSH
2472: LD_INT 3
2474: PPUSH
2475: LD_INT 1
2477: PPUSH
2478: LD_INT 4
2480: PUSH
2481: LD_INT 6
2483: PUSH
2484: LD_INT 7
2486: PUSH
2487: EMPTY
2488: LIST
2489: LIST
2490: LIST
2491: PUSH
2492: LD_INT 1
2494: PPUSH
2495: LD_INT 3
2497: PPUSH
2498: CALL_OW 12
2502: ARRAY
2503: PPUSH
2504: LD_INT 100
2506: PPUSH
2507: CALL 5144 0 5
// veh := CreateVehicle ;
2511: LD_ADDR_VAR 0 4
2515: PUSH
2516: CALL_OW 45
2520: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2521: LD_VAR 0 4
2525: PPUSH
2526: LD_INT 1
2528: PPUSH
2529: CALL_OW 233
// defenders := defenders ^ veh ;
2533: LD_ADDR_EXP 17
2537: PUSH
2538: LD_EXP 17
2542: PUSH
2543: LD_VAR 0 4
2547: ADD
2548: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2549: LD_INT 0
2551: PPUSH
2552: LD_INT 3
2554: PPUSH
2555: LD_INT 9
2557: PPUSH
2558: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2562: CALL_OW 44
2566: PPUSH
2567: LD_VAR 0 4
2571: PPUSH
2572: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2576: LD_VAR 0 4
2580: PPUSH
2581: LD_INT 25
2583: PPUSH
2584: LD_INT 0
2586: PPUSH
2587: CALL_OW 49
// end ;
2591: GO 2466
2593: POP
2594: POP
// for i = 1 to defcon_wave do
2595: LD_ADDR_VAR 0 2
2599: PUSH
2600: DOUBLE
2601: LD_INT 1
2603: DEC
2604: ST_TO_ADDR
2605: LD_EXP 19
2609: PUSH
2610: FOR_TO
2611: IFFALSE 2669
// begin PrepareHuman ( false , 5 , 9 ) ;
2613: LD_INT 0
2615: PPUSH
2616: LD_INT 5
2618: PPUSH
2619: LD_INT 9
2621: PPUSH
2622: CALL_OW 380
// un := CreateHuman ;
2626: LD_ADDR_VAR 0 3
2630: PUSH
2631: CALL_OW 44
2635: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2636: LD_VAR 0 3
2640: PPUSH
2641: LD_INT 25
2643: PPUSH
2644: LD_INT 0
2646: PPUSH
2647: CALL_OW 49
// defenders := defenders ^ un ;
2651: LD_ADDR_EXP 17
2655: PUSH
2656: LD_EXP 17
2660: PUSH
2661: LD_VAR 0 3
2665: ADD
2666: ST_TO_ADDR
// end ;
2667: GO 2610
2669: POP
2670: POP
// end ; repeat wait ( 0 0$1 ) ;
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 67
// for i in defenders do
2678: LD_ADDR_VAR 0 2
2682: PUSH
2683: LD_EXP 17
2687: PUSH
2688: FOR_IN
2689: IFFALSE 2771
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2691: LD_EXP 18
2695: PUSH
2696: LD_VAR 0 2
2700: PPUSH
2701: LD_EXP 18
2705: PUSH
2706: LD_INT 1
2708: ARRAY
2709: PPUSH
2710: LD_EXP 18
2714: PUSH
2715: LD_INT 2
2717: ARRAY
2718: PPUSH
2719: CALL_OW 297
2723: PUSH
2724: LD_INT 10
2726: GREATER
2727: AND
2728: PUSH
2729: LD_VAR 0 2
2733: PPUSH
2734: CALL_OW 314
2738: NOT
2739: AND
2740: IFFALSE 2769
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2742: LD_VAR 0 2
2746: PPUSH
2747: LD_EXP 18
2751: PUSH
2752: LD_INT 1
2754: ARRAY
2755: PPUSH
2756: LD_EXP 18
2760: PUSH
2761: LD_INT 2
2763: ARRAY
2764: PPUSH
2765: CALL_OW 114
// end ;
2769: GO 2688
2771: POP
2772: POP
// until not defenders ;
2773: LD_EXP 17
2777: NOT
2778: IFFALSE 2671
// end ; end_of_file
2780: LD_VAR 0 1
2784: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2785: LD_INT 0
2787: PPUSH
2788: PPUSH
2789: PPUSH
2790: PPUSH
2791: PPUSH
2792: PPUSH
2793: PPUSH
// uc_side := 4 ;
2794: LD_ADDR_OWVAR 20
2798: PUSH
2799: LD_INT 4
2801: ST_TO_ADDR
// uc_nation := 1 ;
2802: LD_ADDR_OWVAR 21
2806: PUSH
2807: LD_INT 1
2809: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2810: LD_ADDR_EXP 34
2814: PUSH
2815: LD_STRING DeltaDoctor
2817: PPUSH
2818: LD_EXP 1
2822: NOT
2823: PPUSH
2824: LD_STRING 10c_
2826: PPUSH
2827: CALL 5081 0 3
2831: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2832: LD_ADDR_EXP 33
2836: PUSH
2837: LD_STRING Joan
2839: PPUSH
2840: LD_EXP 1
2844: NOT
2845: PPUSH
2846: LD_STRING 10c_
2848: PPUSH
2849: CALL 5081 0 3
2853: ST_TO_ADDR
// if Joan then
2854: LD_EXP 33
2858: IFFALSE 2889
// friends := Insert ( friends , friends + 1 , Joan ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_EXP 4
2869: PPUSH
2870: LD_EXP 4
2874: PUSH
2875: LD_INT 1
2877: PLUS
2878: PPUSH
2879: LD_EXP 33
2883: PPUSH
2884: CALL_OW 2
2888: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2889: LD_ADDR_EXP 32
2893: PUSH
2894: LD_STRING Simms
2896: PPUSH
2897: LD_EXP 1
2901: NOT
2902: PPUSH
2903: LD_STRING 10c_
2905: PPUSH
2906: CALL 5081 0 3
2910: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2911: LD_ADDR_EXP 31
2915: PUSH
2916: LD_STRING Kikuchi
2918: PPUSH
2919: LD_EXP 1
2923: NOT
2924: PPUSH
2925: LD_STRING 11_
2927: PPUSH
2928: CALL 5081 0 3
2932: ST_TO_ADDR
// if Kikuchi then
2933: LD_EXP 31
2937: IFFALSE 2968
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2939: LD_ADDR_EXP 4
2943: PUSH
2944: LD_EXP 4
2948: PPUSH
2949: LD_EXP 4
2953: PUSH
2954: LD_INT 1
2956: PLUS
2957: PPUSH
2958: LD_EXP 31
2962: PPUSH
2963: CALL_OW 2
2967: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2968: LD_ADDR_EXP 30
2972: PUSH
2973: LD_STRING Frank
2975: PPUSH
2976: LD_EXP 1
2980: NOT
2981: PPUSH
2982: LD_STRING 11_
2984: PPUSH
2985: CALL 5081 0 3
2989: ST_TO_ADDR
// if Frank then
2990: LD_EXP 30
2994: IFFALSE 3025
// friends := Insert ( friends , friends + 1 , Frank ) ;
2996: LD_ADDR_EXP 4
3000: PUSH
3001: LD_EXP 4
3005: PPUSH
3006: LD_EXP 4
3010: PUSH
3011: LD_INT 1
3013: PLUS
3014: PPUSH
3015: LD_EXP 30
3019: PPUSH
3020: CALL_OW 2
3024: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3025: LD_ADDR_EXP 29
3029: PUSH
3030: LD_STRING Gary
3032: PPUSH
3033: LD_EXP 1
3037: NOT
3038: PPUSH
3039: LD_STRING 11_
3041: PPUSH
3042: CALL 5081 0 3
3046: ST_TO_ADDR
// if Gary then
3047: LD_EXP 29
3051: IFFALSE 3082
// friends := Insert ( friends , friends + 1 , Gary ) ;
3053: LD_ADDR_EXP 4
3057: PUSH
3058: LD_EXP 4
3062: PPUSH
3063: LD_EXP 4
3067: PUSH
3068: LD_INT 1
3070: PLUS
3071: PPUSH
3072: LD_EXP 29
3076: PPUSH
3077: CALL_OW 2
3081: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
3082: LD_ADDR_EXP 28
3086: PUSH
3087: LD_STRING Cornel
3089: PPUSH
3090: LD_EXP 1
3094: NOT
3095: PPUSH
3096: LD_STRING 11_
3098: PPUSH
3099: CALL 5081 0 3
3103: ST_TO_ADDR
// if Cornel then
3104: LD_EXP 28
3108: IFFALSE 3139
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3110: LD_ADDR_EXP 4
3114: PUSH
3115: LD_EXP 4
3119: PPUSH
3120: LD_EXP 4
3124: PUSH
3125: LD_INT 1
3127: PLUS
3128: PPUSH
3129: LD_EXP 28
3133: PPUSH
3134: CALL_OW 2
3138: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3139: LD_ADDR_EXP 27
3143: PUSH
3144: LD_STRING Houten
3146: PPUSH
3147: LD_EXP 1
3151: NOT
3152: PPUSH
3153: LD_STRING 11_
3155: PPUSH
3156: CALL 5081 0 3
3160: ST_TO_ADDR
// if Houten then
3161: LD_EXP 27
3165: IFFALSE 3196
// friends := Insert ( friends , friends + 1 , Houten ) ;
3167: LD_ADDR_EXP 4
3171: PUSH
3172: LD_EXP 4
3176: PPUSH
3177: LD_EXP 4
3181: PUSH
3182: LD_INT 1
3184: PLUS
3185: PPUSH
3186: LD_EXP 27
3190: PPUSH
3191: CALL_OW 2
3195: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3196: LD_ADDR_EXP 26
3200: PUSH
3201: LD_STRING Gladstone
3203: PPUSH
3204: LD_EXP 1
3208: NOT
3209: PPUSH
3210: LD_STRING 11_
3212: PPUSH
3213: CALL 5081 0 3
3217: ST_TO_ADDR
// if Gladstone then
3218: LD_EXP 26
3222: IFFALSE 3253
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3224: LD_ADDR_EXP 4
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: LD_EXP 4
3238: PUSH
3239: LD_INT 1
3241: PLUS
3242: PPUSH
3243: LD_EXP 26
3247: PPUSH
3248: CALL_OW 2
3252: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3253: LD_ADDR_EXP 20
3257: PUSH
3258: LD_STRING Lisa
3260: PPUSH
3261: LD_EXP 1
3265: NOT
3266: PPUSH
3267: LD_STRING 11_
3269: PPUSH
3270: CALL 5081 0 3
3274: ST_TO_ADDR
// if Lisa then
3275: LD_EXP 20
3279: IFFALSE 3304
// friends := Insert ( friends , 1 , Lisa ) ;
3281: LD_ADDR_EXP 4
3285: PUSH
3286: LD_EXP 4
3290: PPUSH
3291: LD_INT 1
3293: PPUSH
3294: LD_EXP 20
3298: PPUSH
3299: CALL_OW 2
3303: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3304: LD_ADDR_EXP 21
3308: PUSH
3309: LD_STRING Donaldson
3311: PPUSH
3312: LD_EXP 1
3316: NOT
3317: PPUSH
3318: LD_STRING 11_
3320: PPUSH
3321: CALL 5081 0 3
3325: ST_TO_ADDR
// if Donaldson then
3326: LD_EXP 21
3330: IFFALSE 3361
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: LD_EXP 21
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3361: LD_ADDR_EXP 22
3365: PUSH
3366: LD_STRING Bobby
3368: PPUSH
3369: LD_EXP 1
3373: NOT
3374: PPUSH
3375: LD_STRING 11_
3377: PPUSH
3378: CALL 5081 0 3
3382: ST_TO_ADDR
// if Bobby then
3383: LD_EXP 22
3387: IFFALSE 3418
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3389: LD_ADDR_EXP 4
3393: PUSH
3394: LD_EXP 4
3398: PPUSH
3399: LD_EXP 4
3403: PUSH
3404: LD_INT 1
3406: PLUS
3407: PPUSH
3408: LD_EXP 22
3412: PPUSH
3413: CALL_OW 2
3417: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3418: LD_ADDR_EXP 23
3422: PUSH
3423: LD_STRING Cyrus
3425: PPUSH
3426: LD_EXP 1
3430: NOT
3431: PPUSH
3432: LD_STRING 11_
3434: PPUSH
3435: CALL 5081 0 3
3439: ST_TO_ADDR
// if Cyrus then
3440: LD_EXP 23
3444: IFFALSE 3475
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3446: LD_ADDR_EXP 4
3450: PUSH
3451: LD_EXP 4
3455: PPUSH
3456: LD_EXP 4
3460: PUSH
3461: LD_INT 1
3463: PLUS
3464: PPUSH
3465: LD_EXP 23
3469: PPUSH
3470: CALL_OW 2
3474: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3475: LD_ADDR_EXP 24
3479: PUSH
3480: LD_STRING Denis
3482: PPUSH
3483: LD_EXP 1
3487: NOT
3488: PPUSH
3489: LD_STRING 11_
3491: PPUSH
3492: CALL 5081 0 3
3496: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3497: LD_ADDR_EXP 25
3501: PUSH
3502: LD_STRING Brown
3504: PPUSH
3505: LD_EXP 1
3509: NOT
3510: PPUSH
3511: LD_STRING 11_
3513: PPUSH
3514: CALL 5081 0 3
3518: ST_TO_ADDR
// if Brown then
3519: LD_EXP 25
3523: IFFALSE 3554
// friends := Insert ( friends , friends + 1 , Brown ) ;
3525: LD_ADDR_EXP 4
3529: PUSH
3530: LD_EXP 4
3534: PPUSH
3535: LD_EXP 4
3539: PUSH
3540: LD_INT 1
3542: PLUS
3543: PPUSH
3544: LD_EXP 25
3548: PPUSH
3549: CALL_OW 2
3553: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
3554: LD_ADDR_EXP 4
3558: PUSH
3559: LD_EXP 4
3563: PUSH
3564: LD_STRING 11c_others
3566: PPUSH
3567: CALL_OW 31
3571: ADD
3572: PUSH
3573: LD_STRING 11_others
3575: PPUSH
3576: CALL_OW 31
3580: ADD
3581: ST_TO_ADDR
// if friends < 10 then
3582: LD_EXP 4
3586: PUSH
3587: LD_INT 10
3589: LESS
3590: IFFALSE 3662
// for i = 1 to 10 do
3592: LD_ADDR_VAR 0 2
3596: PUSH
3597: DOUBLE
3598: LD_INT 1
3600: DEC
3601: ST_TO_ADDR
3602: LD_INT 10
3604: PUSH
3605: FOR_TO
3606: IFFALSE 3660
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3608: LD_INT 0
3610: PPUSH
3611: LD_INT 1
3613: PPUSH
3614: LD_INT 4
3616: PPUSH
3617: CALL_OW 12
3621: PPUSH
3622: LD_INT 7
3624: PPUSH
3625: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3629: LD_ADDR_EXP 4
3633: PUSH
3634: LD_EXP 4
3638: PPUSH
3639: LD_EXP 4
3643: PUSH
3644: LD_INT 1
3646: PLUS
3647: PPUSH
3648: CALL_OW 44
3652: PPUSH
3653: CALL_OW 2
3657: ST_TO_ADDR
// end ;
3658: GO 3605
3660: POP
3661: POP
// for i in friends do
3662: LD_ADDR_VAR 0 2
3666: PUSH
3667: LD_EXP 4
3671: PUSH
3672: FOR_IN
3673: IFFALSE 3731
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3675: LD_VAR 0 2
3679: PPUSH
3680: LD_INT 1
3682: PPUSH
3683: CALL_OW 259
3687: PUSH
3688: LD_VAR 0 2
3692: PPUSH
3693: LD_INT 4
3695: PPUSH
3696: CALL_OW 259
3700: GREATEREQUAL
3701: IFFALSE 3717
// SetClass ( i , class_soldier ) else
3703: LD_VAR 0 2
3707: PPUSH
3708: LD_INT 1
3710: PPUSH
3711: CALL_OW 336
3715: GO 3729
// SetClass ( i , class_scientistic ) ;
3717: LD_VAR 0 2
3721: PPUSH
3722: LD_INT 4
3724: PPUSH
3725: CALL_OW 336
3729: GO 3672
3731: POP
3732: POP
// if Frank then
3733: LD_EXP 30
3737: IFFALSE 3751
// SetClass ( Frank , class_sniper ) ;
3739: LD_EXP 30
3743: PPUSH
3744: LD_INT 5
3746: PPUSH
3747: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3751: LD_EXP 33
3755: PUSH
3756: LD_EXP 24
3760: PUSH
3761: LD_EXP 34
3765: PUSH
3766: LD_EXP 32
3770: PUSH
3771: EMPTY
3772: LIST
3773: LIST
3774: LIST
3775: LIST
3776: PPUSH
3777: LD_INT 4
3779: PPUSH
3780: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
3784: LD_ADDR_EXP 3
3788: PUSH
3789: LD_STRING 
3791: PPUSH
3792: LD_INT 7
3794: PPUSH
3795: LD_INT 7
3797: PPUSH
3798: LD_INT -6
3800: PUSH
3801: LD_EXP 11
3805: PUSH
3806: LD_EXP 12
3810: PUSH
3811: LD_EXP 32
3815: PUSH
3816: LD_EXP 24
3820: PUSH
3821: LD_EXP 34
3825: PUSH
3826: LD_INT -2
3828: PUSH
3829: LD_INT -3
3831: PUSH
3832: LD_INT -5
3834: PUSH
3835: EMPTY
3836: LIST
3837: LIST
3838: LIST
3839: LIST
3840: LIST
3841: LIST
3842: LIST
3843: LIST
3844: LIST
3845: PUSH
3846: LD_EXP 4
3850: ADD
3851: PPUSH
3852: LD_INT 1
3854: PUSH
3855: LD_INT 4
3857: PUSH
3858: LD_INT 2
3860: PUSH
3861: EMPTY
3862: LIST
3863: LIST
3864: PUSH
3865: LD_INT 5
3867: PUSH
3868: LD_INT 0
3870: PUSH
3871: LD_INT 3
3873: PUSH
3874: EMPTY
3875: LIST
3876: LIST
3877: LIST
3878: PUSH
3879: EMPTY
3880: LIST
3881: LIST
3882: LIST
3883: PPUSH
3884: CALL_OW 42
3888: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3889: LD_ADDR_EXP 3
3893: PUSH
3894: LD_EXP 3
3898: PUSH
3899: LD_EXP 24
3903: PUSH
3904: LD_EXP 32
3908: PUSH
3909: EMPTY
3910: LIST
3911: LIST
3912: UNION
3913: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3914: LD_ADDR_EXP 5
3918: PUSH
3919: LD_EXP 4
3923: PUSH
3924: LD_EXP 11
3928: PUSH
3929: LD_EXP 12
3933: PUSH
3934: LD_EXP 20
3938: PUSH
3939: LD_EXP 21
3943: PUSH
3944: LD_EXP 22
3948: PUSH
3949: LD_EXP 23
3953: PUSH
3954: LD_EXP 24
3958: PUSH
3959: LD_EXP 25
3963: PUSH
3964: LD_EXP 26
3968: PUSH
3969: LD_EXP 27
3973: PUSH
3974: LD_EXP 28
3978: PUSH
3979: LD_EXP 29
3983: PUSH
3984: LD_EXP 30
3988: PUSH
3989: LD_EXP 31
3993: PUSH
3994: LD_EXP 32
3998: PUSH
3999: LD_EXP 33
4003: PUSH
4004: LD_EXP 34
4008: PUSH
4009: EMPTY
4010: LIST
4011: LIST
4012: LIST
4013: LIST
4014: LIST
4015: LIST
4016: LIST
4017: LIST
4018: LIST
4019: LIST
4020: LIST
4021: LIST
4022: LIST
4023: LIST
4024: LIST
4025: LIST
4026: LIST
4027: PUSH
4028: LD_EXP 3
4032: ADD
4033: DIFF
4034: ST_TO_ADDR
// friends := friends diff others ;
4035: LD_ADDR_EXP 4
4039: PUSH
4040: LD_EXP 4
4044: PUSH
4045: LD_EXP 5
4049: DIFF
4050: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4051: LD_ADDR_VAR 0 4
4055: PUSH
4056: LD_INT 111
4058: PUSH
4059: LD_INT 137
4061: PUSH
4062: LD_INT 51
4064: PUSH
4065: EMPTY
4066: LIST
4067: LIST
4068: LIST
4069: PUSH
4070: LD_INT 147
4072: PUSH
4073: LD_INT 129
4075: PUSH
4076: LD_INT 25
4078: PUSH
4079: EMPTY
4080: LIST
4081: LIST
4082: LIST
4083: PUSH
4084: EMPTY
4085: LIST
4086: LIST
4087: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4088: LD_ADDR_VAR 0 5
4092: PUSH
4093: LD_INT 5
4095: PUSH
4096: LD_INT 6
4098: PUSH
4099: LD_INT 7
4101: PUSH
4102: LD_INT 8
4104: PUSH
4105: LD_INT 17
4107: PUSH
4108: LD_INT 18
4110: PUSH
4111: EMPTY
4112: LIST
4113: LIST
4114: LIST
4115: LIST
4116: LIST
4117: LIST
4118: ST_TO_ADDR
// for i in buildings do
4119: LD_ADDR_VAR 0 2
4123: PUSH
4124: LD_VAR 0 4
4128: PUSH
4129: FOR_IN
4130: IFFALSE 4146
// SetSide ( i , 4 ) ;
4132: LD_VAR 0 2
4136: PPUSH
4137: LD_INT 4
4139: PPUSH
4140: CALL_OW 235
4144: GO 4129
4146: POP
4147: POP
// for i in selected do
4148: LD_ADDR_VAR 0 2
4152: PUSH
4153: LD_EXP 3
4157: PUSH
4158: FOR_IN
4159: IFFALSE 4421
// begin if GetClass ( i ) in [ 1 , 5 ] then
4161: LD_VAR 0 2
4165: PPUSH
4166: CALL_OW 257
4170: PUSH
4171: LD_INT 1
4173: PUSH
4174: LD_INT 5
4176: PUSH
4177: EMPTY
4178: LIST
4179: LIST
4180: IN
4181: IFFALSE 4302
// begin if buildings [ 1 ] then
4183: LD_VAR 0 4
4187: PUSH
4188: LD_INT 1
4190: ARRAY
4191: IFFALSE 4252
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4193: LD_VAR 0 2
4197: PPUSH
4198: LD_VAR 0 4
4202: PUSH
4203: LD_INT 1
4205: ARRAY
4206: PUSH
4207: LD_INT 1
4209: ARRAY
4210: PPUSH
4211: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4215: LD_ADDR_VAR 0 4
4219: PUSH
4220: LD_VAR 0 4
4224: PPUSH
4225: LD_INT 1
4227: PPUSH
4228: LD_VAR 0 4
4232: PUSH
4233: LD_INT 1
4235: ARRAY
4236: PPUSH
4237: LD_INT 1
4239: PPUSH
4240: CALL_OW 3
4244: PPUSH
4245: CALL_OW 1
4249: ST_TO_ADDR
// end else
4250: GO 4300
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4252: LD_VAR 0 2
4256: PPUSH
4257: LD_VAR 0 5
4261: PUSH
4262: LD_INT 1
4264: ARRAY
4265: PPUSH
4266: LD_INT 0
4268: PPUSH
4269: CALL_OW 49
// ComHold ( i ) ;
4273: LD_VAR 0 2
4277: PPUSH
4278: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4282: LD_ADDR_VAR 0 5
4286: PUSH
4287: LD_VAR 0 5
4291: PPUSH
4292: LD_INT 1
4294: PPUSH
4295: CALL_OW 3
4299: ST_TO_ADDR
// end ; end else
4300: GO 4419
// begin if buildings [ 2 ] then
4302: LD_VAR 0 4
4306: PUSH
4307: LD_INT 2
4309: ARRAY
4310: IFFALSE 4371
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4312: LD_VAR 0 2
4316: PPUSH
4317: LD_VAR 0 4
4321: PUSH
4322: LD_INT 2
4324: ARRAY
4325: PUSH
4326: LD_INT 1
4328: ARRAY
4329: PPUSH
4330: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4334: LD_ADDR_VAR 0 4
4338: PUSH
4339: LD_VAR 0 4
4343: PPUSH
4344: LD_INT 2
4346: PPUSH
4347: LD_VAR 0 4
4351: PUSH
4352: LD_INT 2
4354: ARRAY
4355: PPUSH
4356: LD_INT 1
4358: PPUSH
4359: CALL_OW 3
4363: PPUSH
4364: CALL_OW 1
4368: ST_TO_ADDR
// end else
4369: GO 4419
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4371: LD_VAR 0 2
4375: PPUSH
4376: LD_VAR 0 5
4380: PUSH
4381: LD_INT 1
4383: ARRAY
4384: PPUSH
4385: LD_INT 0
4387: PPUSH
4388: CALL_OW 49
// ComHold ( i ) ;
4392: LD_VAR 0 2
4396: PPUSH
4397: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4401: LD_ADDR_VAR 0 5
4405: PUSH
4406: LD_VAR 0 5
4410: PPUSH
4411: LD_INT 1
4413: PPUSH
4414: CALL_OW 3
4418: ST_TO_ADDR
// end ; end ; end ;
4419: GO 4158
4421: POP
4422: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4423: LD_ADDR_VAR 0 6
4427: PUSH
4428: LD_INT 22
4430: PUSH
4431: LD_INT 1
4433: PUSH
4434: EMPTY
4435: LIST
4436: LIST
4437: PUSH
4438: LD_INT 30
4440: PUSH
4441: LD_INT 32
4443: PUSH
4444: EMPTY
4445: LIST
4446: LIST
4447: PUSH
4448: EMPTY
4449: LIST
4450: LIST
4451: PPUSH
4452: CALL_OW 69
4456: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4457: LD_ADDR_VAR 0 2
4461: PUSH
4462: DOUBLE
4463: LD_VAR 0 6
4467: PUSH
4468: LD_EXP 5
4472: MINUS
4473: INC
4474: ST_TO_ADDR
4475: LD_INT 1
4477: PUSH
4478: FOR_DOWNTO
4479: IFFALSE 4542
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4481: LD_INT 0
4483: PPUSH
4484: LD_INT 1
4486: PPUSH
4487: LD_INT 7
4489: PUSH
4490: LD_INT 8
4492: PUSH
4493: LD_INT 9
4495: PUSH
4496: EMPTY
4497: LIST
4498: LIST
4499: LIST
4500: PUSH
4501: LD_OWVAR 67
4505: ARRAY
4506: PPUSH
4507: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4511: LD_ADDR_EXP 5
4515: PUSH
4516: LD_EXP 5
4520: PPUSH
4521: LD_EXP 5
4525: PUSH
4526: LD_INT 1
4528: PLUS
4529: PPUSH
4530: CALL_OW 44
4534: PPUSH
4535: CALL_OW 2
4539: ST_TO_ADDR
// end ;
4540: GO 4478
4542: POP
4543: POP
// if others then
4544: LD_EXP 5
4548: IFFALSE 4654
// for i = 1 to bunkers do
4550: LD_ADDR_VAR 0 2
4554: PUSH
4555: DOUBLE
4556: LD_INT 1
4558: DEC
4559: ST_TO_ADDR
4560: LD_VAR 0 6
4564: PUSH
4565: FOR_TO
4566: IFFALSE 4652
// begin SetSide ( others [ others ] , 1 ) ;
4568: LD_EXP 5
4572: PUSH
4573: LD_EXP 5
4577: ARRAY
4578: PPUSH
4579: LD_INT 1
4581: PPUSH
4582: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4586: LD_EXP 5
4590: PUSH
4591: LD_EXP 5
4595: ARRAY
4596: PPUSH
4597: LD_INT 1
4599: PPUSH
4600: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4604: LD_EXP 5
4608: PUSH
4609: LD_EXP 5
4613: ARRAY
4614: PPUSH
4615: LD_VAR 0 6
4619: PUSH
4620: LD_VAR 0 2
4624: ARRAY
4625: PPUSH
4626: CALL_OW 52
// others := Delete ( others , others ) ;
4630: LD_ADDR_EXP 5
4634: PUSH
4635: LD_EXP 5
4639: PPUSH
4640: LD_EXP 5
4644: PPUSH
4645: CALL_OW 3
4649: ST_TO_ADDR
// end ;
4650: GO 4565
4652: POP
4653: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4654: LD_ADDR_VAR 0 5
4658: PUSH
4659: LD_VAR 0 5
4663: PUSH
4664: LD_INT 9
4666: PUSH
4667: LD_INT 10
4669: PUSH
4670: LD_INT 11
4672: PUSH
4673: LD_INT 12
4675: PUSH
4676: LD_INT 13
4678: PUSH
4679: LD_INT 14
4681: PUSH
4682: LD_INT 15
4684: PUSH
4685: LD_INT 16
4687: PUSH
4688: EMPTY
4689: LIST
4690: LIST
4691: LIST
4692: LIST
4693: LIST
4694: LIST
4695: LIST
4696: LIST
4697: UNION
4698: ST_TO_ADDR
// for i in friends ^ others do
4699: LD_ADDR_VAR 0 2
4703: PUSH
4704: LD_EXP 4
4708: PUSH
4709: LD_EXP 5
4713: ADD
4714: PUSH
4715: FOR_IN
4716: IFFALSE 5056
// begin SetTag ( i , 2 ) ;
4718: LD_VAR 0 2
4722: PPUSH
4723: LD_INT 2
4725: PPUSH
4726: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4730: LD_VAR 0 2
4734: PUSH
4735: LD_EXP 4
4739: IN
4740: PUSH
4741: LD_VAR 0 2
4745: PPUSH
4746: CALL_OW 257
4750: PUSH
4751: LD_INT 1
4753: EQUAL
4754: AND
4755: PUSH
4756: LD_VAR 0 2
4760: PUSH
4761: LD_EXP 5
4765: IN
4766: OR
4767: PUSH
4768: LD_VAR 0 4
4772: PUSH
4773: LD_INT 1
4775: ARRAY
4776: AND
4777: IFFALSE 4850
// begin SetClass ( i , 1 ) ;
4779: LD_VAR 0 2
4783: PPUSH
4784: LD_INT 1
4786: PPUSH
4787: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4791: LD_VAR 0 2
4795: PPUSH
4796: LD_VAR 0 4
4800: PUSH
4801: LD_INT 1
4803: ARRAY
4804: PUSH
4805: LD_INT 1
4807: ARRAY
4808: PPUSH
4809: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4813: LD_ADDR_VAR 0 4
4817: PUSH
4818: LD_VAR 0 4
4822: PPUSH
4823: LD_INT 1
4825: PPUSH
4826: LD_VAR 0 4
4830: PUSH
4831: LD_INT 1
4833: ARRAY
4834: PPUSH
4835: LD_INT 1
4837: PPUSH
4838: CALL_OW 3
4842: PPUSH
4843: CALL_OW 1
4847: ST_TO_ADDR
// continue ;
4848: GO 4715
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4850: LD_VAR 0 2
4854: PUSH
4855: LD_EXP 4
4859: IN
4860: PUSH
4861: LD_VAR 0 2
4865: PPUSH
4866: CALL_OW 257
4870: PUSH
4871: LD_INT 4
4873: EQUAL
4874: AND
4875: PUSH
4876: LD_VAR 0 2
4880: PUSH
4881: LD_EXP 5
4885: IN
4886: OR
4887: PUSH
4888: LD_VAR 0 4
4892: PUSH
4893: LD_INT 2
4895: ARRAY
4896: AND
4897: IFFALSE 4970
// begin SetClass ( i , 4 ) ;
4899: LD_VAR 0 2
4903: PPUSH
4904: LD_INT 4
4906: PPUSH
4907: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4911: LD_VAR 0 2
4915: PPUSH
4916: LD_VAR 0 4
4920: PUSH
4921: LD_INT 2
4923: ARRAY
4924: PUSH
4925: LD_INT 1
4927: ARRAY
4928: PPUSH
4929: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4933: LD_ADDR_VAR 0 4
4937: PUSH
4938: LD_VAR 0 4
4942: PPUSH
4943: LD_INT 2
4945: PPUSH
4946: LD_VAR 0 4
4950: PUSH
4951: LD_INT 2
4953: ARRAY
4954: PPUSH
4955: LD_INT 1
4957: PPUSH
4958: CALL_OW 3
4962: PPUSH
4963: CALL_OW 1
4967: ST_TO_ADDR
// continue ;
4968: GO 4715
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4970: LD_VAR 0 2
4974: PPUSH
4975: LD_VAR 0 5
4979: PUSH
4980: LD_INT 1
4982: ARRAY
4983: PPUSH
4984: LD_INT 0
4986: PPUSH
4987: CALL_OW 49
// if GetClass ( i ) <> 4 then
4991: LD_VAR 0 2
4995: PPUSH
4996: CALL_OW 257
5000: PUSH
5001: LD_INT 4
5003: NONEQUAL
5004: IFFALSE 5018
// SetClass ( i , 1 ) ;
5006: LD_VAR 0 2
5010: PPUSH
5011: LD_INT 1
5013: PPUSH
5014: CALL_OW 336
// ComHold ( i ) ;
5018: LD_VAR 0 2
5022: PPUSH
5023: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5027: LD_ADDR_VAR 0 5
5031: PUSH
5032: LD_VAR 0 5
5036: PPUSH
5037: LD_INT 1
5039: PPUSH
5040: CALL_OW 3
5044: ST_TO_ADDR
// if not areas then
5045: LD_VAR 0 5
5049: NOT
5050: IFFALSE 5054
// break ;
5052: GO 5056
// end ;
5054: GO 4715
5056: POP
5057: POP
// if Frank then
5058: LD_EXP 30
5062: IFFALSE 5076
// SetClass ( Frank , class_sniper ) ;
5064: LD_EXP 30
5068: PPUSH
5069: LD_INT 5
5071: PPUSH
5072: CALL_OW 336
// end ; end_of_file
5076: LD_VAR 0 1
5080: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5081: LD_INT 0
5083: PPUSH
5084: PPUSH
// if exist_mode then
5085: LD_VAR 0 2
5089: IFFALSE 5114
// unit := CreateCharacter ( prefix & ident ) else
5091: LD_ADDR_VAR 0 5
5095: PUSH
5096: LD_VAR 0 3
5100: PUSH
5101: LD_VAR 0 1
5105: STR
5106: PPUSH
5107: CALL_OW 34
5111: ST_TO_ADDR
5112: GO 5129
// unit := NewCharacter ( ident ) ;
5114: LD_ADDR_VAR 0 5
5118: PUSH
5119: LD_VAR 0 1
5123: PPUSH
5124: CALL_OW 25
5128: ST_TO_ADDR
// result := unit ;
5129: LD_ADDR_VAR 0 4
5133: PUSH
5134: LD_VAR 0 5
5138: ST_TO_ADDR
// end ;
5139: LD_VAR 0 4
5143: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5144: LD_INT 0
5146: PPUSH
// vc_chassis := chassis ;
5147: LD_ADDR_OWVAR 37
5151: PUSH
5152: LD_VAR 0 1
5156: ST_TO_ADDR
// vc_engine := engine ;
5157: LD_ADDR_OWVAR 39
5161: PUSH
5162: LD_VAR 0 2
5166: ST_TO_ADDR
// vc_control := control ;
5167: LD_ADDR_OWVAR 38
5171: PUSH
5172: LD_VAR 0 3
5176: ST_TO_ADDR
// vc_weapon := weapon ;
5177: LD_ADDR_OWVAR 40
5181: PUSH
5182: LD_VAR 0 4
5186: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5187: LD_ADDR_OWVAR 41
5191: PUSH
5192: LD_VAR 0 5
5196: ST_TO_ADDR
// end ;
5197: LD_VAR 0 6
5201: RET
// export function CanSayRand ( side ) ; begin
5202: LD_INT 0
5204: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5205: LD_ADDR_VAR 0 2
5209: PUSH
5210: LD_INT 52
5212: PUSH
5213: EMPTY
5214: LIST
5215: PUSH
5216: LD_INT 22
5218: PUSH
5219: LD_VAR 0 1
5223: PUSH
5224: EMPTY
5225: LIST
5226: LIST
5227: PUSH
5228: LD_INT 2
5230: PUSH
5231: LD_INT 25
5233: PUSH
5234: LD_INT 1
5236: PUSH
5237: EMPTY
5238: LIST
5239: LIST
5240: PUSH
5241: LD_INT 25
5243: PUSH
5244: LD_INT 2
5246: PUSH
5247: EMPTY
5248: LIST
5249: LIST
5250: PUSH
5251: LD_INT 25
5253: PUSH
5254: LD_INT 3
5256: PUSH
5257: EMPTY
5258: LIST
5259: LIST
5260: PUSH
5261: LD_INT 25
5263: PUSH
5264: LD_INT 4
5266: PUSH
5267: EMPTY
5268: LIST
5269: LIST
5270: PUSH
5271: EMPTY
5272: LIST
5273: LIST
5274: LIST
5275: LIST
5276: LIST
5277: PUSH
5278: EMPTY
5279: LIST
5280: LIST
5281: LIST
5282: PPUSH
5283: CALL_OW 69
5287: PUSH
5288: LD_EXP 11
5292: PUSH
5293: LD_EXP 30
5297: PUSH
5298: LD_EXP 20
5302: PUSH
5303: LD_EXP 21
5307: PUSH
5308: LD_EXP 22
5312: PUSH
5313: LD_EXP 23
5317: PUSH
5318: LD_EXP 24
5322: PUSH
5323: LD_EXP 25
5327: PUSH
5328: LD_EXP 26
5332: PUSH
5333: LD_EXP 27
5337: PUSH
5338: LD_EXP 13
5342: PUSH
5343: LD_EXP 28
5347: PUSH
5348: LD_EXP 29
5352: PUSH
5353: LD_EXP 31
5357: PUSH
5358: EMPTY
5359: LIST
5360: LIST
5361: LIST
5362: LIST
5363: LIST
5364: LIST
5365: LIST
5366: LIST
5367: LIST
5368: LIST
5369: LIST
5370: LIST
5371: LIST
5372: LIST
5373: DIFF
5374: ST_TO_ADDR
// end ;
5375: LD_VAR 0 2
5379: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5380: LD_INT 0
5382: PPUSH
5383: PPUSH
5384: PPUSH
5385: PPUSH
5386: PPUSH
5387: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5388: LD_VAR 0 1
5392: NOT
5393: PUSH
5394: LD_VAR 0 1
5398: PPUSH
5399: CALL_OW 263
5403: PUSH
5404: LD_INT 2
5406: EQUAL
5407: NOT
5408: OR
5409: IFFALSE 5413
// exit ;
5411: GO 5729
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5413: LD_ADDR_VAR 0 6
5417: PUSH
5418: LD_INT 22
5420: PUSH
5421: LD_VAR 0 1
5425: PPUSH
5426: CALL_OW 255
5430: PUSH
5431: EMPTY
5432: LIST
5433: LIST
5434: PUSH
5435: LD_INT 2
5437: PUSH
5438: LD_INT 30
5440: PUSH
5441: LD_INT 36
5443: PUSH
5444: EMPTY
5445: LIST
5446: LIST
5447: PUSH
5448: LD_INT 34
5450: PUSH
5451: LD_INT 31
5453: PUSH
5454: EMPTY
5455: LIST
5456: LIST
5457: PUSH
5458: EMPTY
5459: LIST
5460: LIST
5461: LIST
5462: PUSH
5463: EMPTY
5464: LIST
5465: LIST
5466: PPUSH
5467: CALL_OW 69
5471: ST_TO_ADDR
// if not tmp then
5472: LD_VAR 0 6
5476: NOT
5477: IFFALSE 5481
// exit ;
5479: GO 5729
// result := [ ] ;
5481: LD_ADDR_VAR 0 2
5485: PUSH
5486: EMPTY
5487: ST_TO_ADDR
// for i in tmp do
5488: LD_ADDR_VAR 0 3
5492: PUSH
5493: LD_VAR 0 6
5497: PUSH
5498: FOR_IN
5499: IFFALSE 5570
// begin t := UnitsInside ( i ) ;
5501: LD_ADDR_VAR 0 4
5505: PUSH
5506: LD_VAR 0 3
5510: PPUSH
5511: CALL_OW 313
5515: ST_TO_ADDR
// if t then
5516: LD_VAR 0 4
5520: IFFALSE 5568
// for j in t do
5522: LD_ADDR_VAR 0 7
5526: PUSH
5527: LD_VAR 0 4
5531: PUSH
5532: FOR_IN
5533: IFFALSE 5566
// result := Insert ( result , result + 1 , j ) ;
5535: LD_ADDR_VAR 0 2
5539: PUSH
5540: LD_VAR 0 2
5544: PPUSH
5545: LD_VAR 0 2
5549: PUSH
5550: LD_INT 1
5552: PLUS
5553: PPUSH
5554: LD_VAR 0 7
5558: PPUSH
5559: CALL_OW 2
5563: ST_TO_ADDR
5564: GO 5532
5566: POP
5567: POP
// end ;
5568: GO 5498
5570: POP
5571: POP
// if not result then
5572: LD_VAR 0 2
5576: NOT
5577: IFFALSE 5581
// exit ;
5579: GO 5729
// mech := result [ 1 ] ;
5581: LD_ADDR_VAR 0 5
5585: PUSH
5586: LD_VAR 0 2
5590: PUSH
5591: LD_INT 1
5593: ARRAY
5594: ST_TO_ADDR
// if result > 1 then
5595: LD_VAR 0 2
5599: PUSH
5600: LD_INT 1
5602: GREATER
5603: IFFALSE 5715
// for i = 2 to result do
5605: LD_ADDR_VAR 0 3
5609: PUSH
5610: DOUBLE
5611: LD_INT 2
5613: DEC
5614: ST_TO_ADDR
5615: LD_VAR 0 2
5619: PUSH
5620: FOR_TO
5621: IFFALSE 5713
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5623: LD_ADDR_VAR 0 4
5627: PUSH
5628: LD_VAR 0 2
5632: PUSH
5633: LD_VAR 0 3
5637: ARRAY
5638: PPUSH
5639: LD_INT 3
5641: PPUSH
5642: CALL_OW 259
5646: PUSH
5647: LD_VAR 0 2
5651: PUSH
5652: LD_VAR 0 3
5656: ARRAY
5657: PPUSH
5658: CALL_OW 432
5662: MINUS
5663: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5664: LD_VAR 0 4
5668: PUSH
5669: LD_VAR 0 5
5673: PPUSH
5674: LD_INT 3
5676: PPUSH
5677: CALL_OW 259
5681: PUSH
5682: LD_VAR 0 5
5686: PPUSH
5687: CALL_OW 432
5691: MINUS
5692: GREATEREQUAL
5693: IFFALSE 5711
// mech := result [ i ] ;
5695: LD_ADDR_VAR 0 5
5699: PUSH
5700: LD_VAR 0 2
5704: PUSH
5705: LD_VAR 0 3
5709: ARRAY
5710: ST_TO_ADDR
// end ;
5711: GO 5620
5713: POP
5714: POP
// ComLinkTo ( vehicle , mech ) ;
5715: LD_VAR 0 1
5719: PPUSH
5720: LD_VAR 0 5
5724: PPUSH
5725: CALL_OW 135
// end ;
5729: LD_VAR 0 2
5733: RET
// export function SayRand ( sex , dial ) ; begin
5734: LD_INT 0
5736: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5737: LD_ADDR_VAR 0 3
5741: PUSH
5742: LD_INT 52
5744: PUSH
5745: EMPTY
5746: LIST
5747: PUSH
5748: LD_INT 22
5750: PUSH
5751: LD_INT 1
5753: PUSH
5754: EMPTY
5755: LIST
5756: LIST
5757: PUSH
5758: LD_INT 26
5760: PUSH
5761: LD_VAR 0 1
5765: PUSH
5766: EMPTY
5767: LIST
5768: LIST
5769: PUSH
5770: LD_INT 2
5772: PUSH
5773: LD_INT 25
5775: PUSH
5776: LD_INT 1
5778: PUSH
5779: EMPTY
5780: LIST
5781: LIST
5782: PUSH
5783: LD_INT 25
5785: PUSH
5786: LD_INT 2
5788: PUSH
5789: EMPTY
5790: LIST
5791: LIST
5792: PUSH
5793: LD_INT 25
5795: PUSH
5796: LD_INT 3
5798: PUSH
5799: EMPTY
5800: LIST
5801: LIST
5802: PUSH
5803: LD_INT 25
5805: PUSH
5806: LD_INT 4
5808: PUSH
5809: EMPTY
5810: LIST
5811: LIST
5812: PUSH
5813: EMPTY
5814: LIST
5815: LIST
5816: LIST
5817: LIST
5818: LIST
5819: PUSH
5820: EMPTY
5821: LIST
5822: LIST
5823: LIST
5824: LIST
5825: PPUSH
5826: CALL_OW 69
5830: PUSH
5831: LD_EXP 11
5835: PUSH
5836: LD_EXP 30
5840: PUSH
5841: LD_EXP 20
5845: PUSH
5846: LD_EXP 21
5850: PUSH
5851: LD_EXP 22
5855: PUSH
5856: LD_EXP 23
5860: PUSH
5861: LD_EXP 24
5865: PUSH
5866: LD_EXP 25
5870: PUSH
5871: LD_EXP 26
5875: PUSH
5876: LD_EXP 27
5880: PUSH
5881: LD_EXP 13
5885: PUSH
5886: LD_EXP 28
5890: PUSH
5891: LD_EXP 29
5895: PUSH
5896: LD_EXP 31
5900: PUSH
5901: EMPTY
5902: LIST
5903: LIST
5904: LIST
5905: LIST
5906: LIST
5907: LIST
5908: LIST
5909: LIST
5910: LIST
5911: LIST
5912: LIST
5913: LIST
5914: LIST
5915: LIST
5916: DIFF
5917: ST_TO_ADDR
// if not result then
5918: LD_VAR 0 3
5922: NOT
5923: IFFALSE 5927
// exit ;
5925: GO 5955
// result := result [ 1 ] ;
5927: LD_ADDR_VAR 0 3
5931: PUSH
5932: LD_VAR 0 3
5936: PUSH
5937: LD_INT 1
5939: ARRAY
5940: ST_TO_ADDR
// Say ( result , dial ) ;
5941: LD_VAR 0 3
5945: PPUSH
5946: LD_VAR 0 2
5950: PPUSH
5951: CALL_OW 88
// end ;
5955: LD_VAR 0 3
5959: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5960: LD_INT 0
5962: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5963: LD_ADDR_VAR 0 4
5967: PUSH
5968: LD_INT 22
5970: PUSH
5971: LD_INT 1
5973: PUSH
5974: EMPTY
5975: LIST
5976: LIST
5977: PUSH
5978: LD_INT 26
5980: PUSH
5981: LD_VAR 0 1
5985: PUSH
5986: EMPTY
5987: LIST
5988: LIST
5989: PUSH
5990: LD_INT 2
5992: PUSH
5993: LD_INT 25
5995: PUSH
5996: LD_INT 1
5998: PUSH
5999: EMPTY
6000: LIST
6001: LIST
6002: PUSH
6003: LD_INT 25
6005: PUSH
6006: LD_INT 2
6008: PUSH
6009: EMPTY
6010: LIST
6011: LIST
6012: PUSH
6013: LD_INT 25
6015: PUSH
6016: LD_INT 3
6018: PUSH
6019: EMPTY
6020: LIST
6021: LIST
6022: PUSH
6023: LD_INT 25
6025: PUSH
6026: LD_INT 4
6028: PUSH
6029: EMPTY
6030: LIST
6031: LIST
6032: PUSH
6033: EMPTY
6034: LIST
6035: LIST
6036: LIST
6037: LIST
6038: LIST
6039: PUSH
6040: EMPTY
6041: LIST
6042: LIST
6043: LIST
6044: PPUSH
6045: CALL_OW 69
6049: PUSH
6050: LD_EXP 11
6054: PUSH
6055: LD_EXP 30
6059: PUSH
6060: LD_EXP 20
6064: PUSH
6065: LD_EXP 21
6069: PUSH
6070: LD_EXP 22
6074: PUSH
6075: LD_EXP 23
6079: PUSH
6080: LD_EXP 24
6084: PUSH
6085: LD_EXP 25
6089: PUSH
6090: LD_EXP 26
6094: PUSH
6095: LD_EXP 27
6099: PUSH
6100: LD_EXP 13
6104: PUSH
6105: LD_EXP 28
6109: PUSH
6110: LD_EXP 29
6114: PUSH
6115: LD_EXP 31
6119: PUSH
6120: EMPTY
6121: LIST
6122: LIST
6123: LIST
6124: LIST
6125: LIST
6126: LIST
6127: LIST
6128: LIST
6129: LIST
6130: LIST
6131: LIST
6132: LIST
6133: LIST
6134: LIST
6135: PUSH
6136: LD_VAR 0 3
6140: ADD
6141: DIFF
6142: ST_TO_ADDR
// if not result then
6143: LD_VAR 0 4
6147: NOT
6148: IFFALSE 6152
// exit ;
6150: GO 6180
// result := result [ 1 ] ;
6152: LD_ADDR_VAR 0 4
6156: PUSH
6157: LD_VAR 0 4
6161: PUSH
6162: LD_INT 1
6164: ARRAY
6165: ST_TO_ADDR
// Say ( result , dial ) ;
6166: LD_VAR 0 4
6170: PPUSH
6171: LD_VAR 0 2
6175: PPUSH
6176: CALL_OW 88
// end ;
6180: LD_VAR 0 4
6184: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6185: LD_INT 0
6187: PPUSH
6188: PPUSH
6189: PPUSH
6190: PPUSH
6191: PPUSH
6192: PPUSH
6193: PPUSH
6194: PPUSH
6195: PPUSH
6196: PPUSH
6197: PPUSH
6198: PPUSH
6199: PPUSH
6200: PPUSH
6201: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6202: LD_VAR 0 1
6206: NOT
6207: PUSH
6208: LD_VAR 0 2
6212: NOT
6213: OR
6214: PUSH
6215: LD_VAR 0 1
6219: PPUSH
6220: CALL_OW 247
6224: PUSH
6225: LD_INT 3
6227: EQUAL
6228: OR
6229: IFFALSE 6233
// exit ;
6231: GO 7772
// for i = path downto 1 do
6233: LD_ADDR_VAR 0 5
6237: PUSH
6238: DOUBLE
6239: LD_VAR 0 2
6243: INC
6244: ST_TO_ADDR
6245: LD_INT 1
6247: PUSH
6248: FOR_DOWNTO
6249: IFFALSE 6310
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6251: LD_VAR 0 2
6255: PUSH
6256: LD_VAR 0 5
6260: ARRAY
6261: PUSH
6262: LD_INT 1
6264: ARRAY
6265: PPUSH
6266: LD_VAR 0 2
6270: PUSH
6271: LD_VAR 0 5
6275: ARRAY
6276: PUSH
6277: LD_INT 2
6279: ARRAY
6280: PPUSH
6281: CALL_OW 488
6285: NOT
6286: IFFALSE 6308
// path = Delete ( path , i ) ;
6288: LD_ADDR_VAR 0 2
6292: PUSH
6293: LD_VAR 0 2
6297: PPUSH
6298: LD_VAR 0 5
6302: PPUSH
6303: CALL_OW 3
6307: ST_TO_ADDR
// end ;
6308: GO 6248
6310: POP
6311: POP
// if not path then
6312: LD_VAR 0 2
6316: NOT
6317: IFFALSE 6321
// exit ;
6319: GO 7772
// tmp_path := [ ] ;
6321: LD_ADDR_VAR 0 11
6325: PUSH
6326: EMPTY
6327: ST_TO_ADDR
// if flags then
6328: LD_VAR 0 3
6332: IFFALSE 6406
// begin if flags [ 1 ] then
6334: LD_VAR 0 3
6338: PUSH
6339: LD_INT 1
6341: ARRAY
6342: IFFALSE 6358
// safe_place = flags [ 1 ] ;
6344: LD_ADDR_VAR 0 16
6348: PUSH
6349: LD_VAR 0 3
6353: PUSH
6354: LD_INT 1
6356: ARRAY
6357: ST_TO_ADDR
// if flags [ 2 ] then
6358: LD_VAR 0 3
6362: PUSH
6363: LD_INT 2
6365: ARRAY
6366: IFFALSE 6382
// spot_dist = flags [ 2 ] ;
6368: LD_ADDR_VAR 0 15
6372: PUSH
6373: LD_VAR 0 3
6377: PUSH
6378: LD_INT 2
6380: ARRAY
6381: ST_TO_ADDR
// if flags [ 3 ] then
6382: LD_VAR 0 3
6386: PUSH
6387: LD_INT 3
6389: ARRAY
6390: IFFALSE 6406
// chase_range = flags [ 3 ] ;
6392: LD_ADDR_VAR 0 17
6396: PUSH
6397: LD_VAR 0 3
6401: PUSH
6402: LD_INT 3
6404: ARRAY
6405: ST_TO_ADDR
// end ; if not chase_range then
6406: LD_VAR 0 17
6410: NOT
6411: IFFALSE 6421
// chase_range = 8 ;
6413: LD_ADDR_VAR 0 17
6417: PUSH
6418: LD_INT 8
6420: ST_TO_ADDR
// if not spot_dist then
6421: LD_VAR 0 15
6425: NOT
6426: IFFALSE 6436
// spot_dist := 8 ;
6428: LD_ADDR_VAR 0 15
6432: PUSH
6433: LD_INT 8
6435: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6436: LD_ADDR_VAR 0 18
6440: PUSH
6441: LD_VAR 0 1
6445: PPUSH
6446: CALL_OW 247
6450: PUSH
6451: LD_INT 2
6453: EQUAL
6454: PUSH
6455: LD_VAR 0 1
6459: PPUSH
6460: CALL_OW 262
6464: PUSH
6465: LD_INT 3
6467: NONEQUAL
6468: AND
6469: ST_TO_ADDR
// status = 1 ;
6470: LD_ADDR_VAR 0 12
6474: PUSH
6475: LD_INT 1
6477: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6478: LD_ADDR_VAR 0 11
6482: PUSH
6483: LD_INT 1
6485: PUSH
6486: LD_VAR 0 2
6490: PUSH
6491: LD_INT 1
6493: ARRAY
6494: PUSH
6495: EMPTY
6496: LIST
6497: LIST
6498: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6499: LD_INT 35
6501: PPUSH
6502: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6506: LD_VAR 0 18
6510: PUSH
6511: LD_VAR 0 1
6515: PPUSH
6516: CALL_OW 261
6520: PUSH
6521: LD_INT 20
6523: LESS
6524: AND
6525: IFFALSE 6718
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6527: LD_ADDR_VAR 0 10
6531: PUSH
6532: LD_INT 22
6534: PUSH
6535: LD_VAR 0 1
6539: PPUSH
6540: CALL_OW 255
6544: PUSH
6545: EMPTY
6546: LIST
6547: LIST
6548: PUSH
6549: LD_INT 2
6551: PUSH
6552: LD_INT 30
6554: PUSH
6555: LD_INT 0
6557: PUSH
6558: EMPTY
6559: LIST
6560: LIST
6561: PUSH
6562: LD_INT 30
6564: PUSH
6565: LD_INT 1
6567: PUSH
6568: EMPTY
6569: LIST
6570: LIST
6571: PUSH
6572: LD_INT 30
6574: PUSH
6575: LD_INT 29
6577: PUSH
6578: EMPTY
6579: LIST
6580: LIST
6581: PUSH
6582: LD_INT 30
6584: PUSH
6585: LD_INT 3
6587: PUSH
6588: EMPTY
6589: LIST
6590: LIST
6591: PUSH
6592: EMPTY
6593: LIST
6594: LIST
6595: LIST
6596: LIST
6597: LIST
6598: PUSH
6599: EMPTY
6600: LIST
6601: LIST
6602: PPUSH
6603: CALL_OW 69
6607: ST_TO_ADDR
// if not station then
6608: LD_VAR 0 10
6612: NOT
6613: IFFALSE 6629
// begin SetFuel ( unit , 40 ) ;
6615: LD_VAR 0 1
6619: PPUSH
6620: LD_INT 40
6622: PPUSH
6623: CALL_OW 240
// continue ;
6627: GO 6499
// end ; status := 6 ;
6629: LD_ADDR_VAR 0 12
6633: PUSH
6634: LD_INT 6
6636: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6637: LD_ADDR_VAR 0 10
6641: PUSH
6642: LD_VAR 0 10
6646: PPUSH
6647: LD_VAR 0 1
6651: PPUSH
6652: CALL_OW 74
6656: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6657: LD_INT 35
6659: PPUSH
6660: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6664: LD_VAR 0 1
6668: PPUSH
6669: LD_VAR 0 10
6673: PPUSH
6674: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6678: LD_VAR 0 1
6682: PPUSH
6683: LD_VAR 0 10
6687: PPUSH
6688: CALL_OW 296
6692: PUSH
6693: LD_INT 6
6695: LESS
6696: IFFALSE 6657
// SetFuel ( unit , 100 ) ;
6698: LD_VAR 0 1
6702: PPUSH
6703: LD_INT 100
6705: PPUSH
6706: CALL_OW 240
// status := 5 ;
6710: LD_ADDR_VAR 0 12
6714: PUSH
6715: LD_INT 5
6717: ST_TO_ADDR
// end ; if status = 1 then
6718: LD_VAR 0 12
6722: PUSH
6723: LD_INT 1
6725: EQUAL
6726: IFFALSE 7102
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6728: LD_ADDR_VAR 0 13
6732: PUSH
6733: LD_INT 81
6735: PUSH
6736: LD_VAR 0 1
6740: PPUSH
6741: CALL_OW 255
6745: PUSH
6746: EMPTY
6747: LIST
6748: LIST
6749: PUSH
6750: LD_INT 3
6752: PUSH
6753: LD_INT 21
6755: PUSH
6756: LD_INT 3
6758: PUSH
6759: EMPTY
6760: LIST
6761: LIST
6762: PUSH
6763: EMPTY
6764: LIST
6765: LIST
6766: PUSH
6767: LD_INT 91
6769: PUSH
6770: LD_VAR 0 1
6774: PUSH
6775: LD_VAR 0 15
6779: PUSH
6780: EMPTY
6781: LIST
6782: LIST
6783: LIST
6784: PUSH
6785: LD_INT 101
6787: PUSH
6788: LD_INT 1
6790: PUSH
6791: EMPTY
6792: LIST
6793: LIST
6794: PUSH
6795: EMPTY
6796: LIST
6797: LIST
6798: LIST
6799: LIST
6800: PPUSH
6801: CALL_OW 69
6805: ST_TO_ADDR
// for i in enemy do
6806: LD_ADDR_VAR 0 5
6810: PUSH
6811: LD_VAR 0 13
6815: PUSH
6816: FOR_IN
6817: IFFALSE 6848
// if IsInvisible ( i ) then
6819: LD_VAR 0 5
6823: PPUSH
6824: CALL_OW 571
6828: IFFALSE 6846
// enemy := enemy diff i ;
6830: LD_ADDR_VAR 0 13
6834: PUSH
6835: LD_VAR 0 13
6839: PUSH
6840: LD_VAR 0 5
6844: DIFF
6845: ST_TO_ADDR
6846: GO 6816
6848: POP
6849: POP
// if enemy then
6850: LD_VAR 0 13
6854: IFFALSE 6904
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6856: LD_VAR 0 1
6860: PPUSH
6861: LD_VAR 0 1
6865: PPUSH
6866: CALL_OW 250
6870: PPUSH
6871: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6875: LD_VAR 0 1
6879: PPUSH
6880: LD_VAR 0 1
6884: PPUSH
6885: CALL_OW 251
6889: PPUSH
6890: CALL_OW 232
// status = 2 ;
6894: LD_ADDR_VAR 0 12
6898: PUSH
6899: LD_INT 2
6901: ST_TO_ADDR
// end else
6902: GO 7102
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6904: LD_VAR 0 1
6908: PPUSH
6909: LD_VAR 0 11
6913: PUSH
6914: LD_INT 2
6916: ARRAY
6917: PUSH
6918: LD_INT 1
6920: ARRAY
6921: PPUSH
6922: LD_VAR 0 11
6926: PUSH
6927: LD_INT 2
6929: ARRAY
6930: PUSH
6931: LD_INT 2
6933: ARRAY
6934: PPUSH
6935: CALL_OW 307
6939: PUSH
6940: LD_VAR 0 1
6944: PPUSH
6945: CALL_OW 314
6949: NOT
6950: OR
6951: IFFALSE 7102
// begin wait ( 0 0$2 ) ;
6953: LD_INT 70
6955: PPUSH
6956: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6960: LD_VAR 0 11
6964: PUSH
6965: LD_INT 1
6967: ARRAY
6968: PUSH
6969: LD_INT 1
6971: PLUS
6972: PUSH
6973: LD_VAR 0 2
6977: GREATER
6978: IFFALSE 7003
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6980: LD_ADDR_VAR 0 11
6984: PUSH
6985: LD_VAR 0 11
6989: PPUSH
6990: LD_INT 1
6992: PPUSH
6993: LD_INT 1
6995: PPUSH
6996: CALL_OW 1
7000: ST_TO_ADDR
7001: GO 7034
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7003: LD_ADDR_VAR 0 11
7007: PUSH
7008: LD_VAR 0 11
7012: PPUSH
7013: LD_INT 1
7015: PPUSH
7016: LD_VAR 0 11
7020: PUSH
7021: LD_INT 1
7023: ARRAY
7024: PUSH
7025: LD_INT 1
7027: PLUS
7028: PPUSH
7029: CALL_OW 1
7033: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7034: LD_ADDR_VAR 0 11
7038: PUSH
7039: LD_VAR 0 11
7043: PPUSH
7044: LD_INT 2
7046: PPUSH
7047: LD_VAR 0 2
7051: PUSH
7052: LD_VAR 0 11
7056: PUSH
7057: LD_INT 1
7059: ARRAY
7060: ARRAY
7061: PPUSH
7062: CALL_OW 1
7066: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7067: LD_VAR 0 1
7071: PPUSH
7072: LD_VAR 0 11
7076: PUSH
7077: LD_INT 2
7079: ARRAY
7080: PUSH
7081: LD_INT 1
7083: ARRAY
7084: PPUSH
7085: LD_VAR 0 11
7089: PUSH
7090: LD_INT 2
7092: ARRAY
7093: PUSH
7094: LD_INT 2
7096: ARRAY
7097: PPUSH
7098: CALL_OW 114
// end ; end ; end ; if status = 2 then
7102: LD_VAR 0 12
7106: PUSH
7107: LD_INT 2
7109: EQUAL
7110: IFFALSE 7331
// begin if GetLives ( unit ) < 650 and safe_place then
7112: LD_VAR 0 1
7116: PPUSH
7117: CALL_OW 256
7121: PUSH
7122: LD_INT 650
7124: LESS
7125: PUSH
7126: LD_VAR 0 16
7130: AND
7131: IFFALSE 7143
// begin status = 3 ;
7133: LD_ADDR_VAR 0 12
7137: PUSH
7138: LD_INT 3
7140: ST_TO_ADDR
// continue ;
7141: GO 6499
// end ; x := GetRememberedX ( unit ) ;
7143: LD_ADDR_VAR 0 6
7147: PUSH
7148: LD_VAR 0 1
7152: PPUSH
7153: CALL_OW 252
7157: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7158: LD_ADDR_VAR 0 7
7162: PUSH
7163: LD_VAR 0 1
7167: PPUSH
7168: CALL_OW 253
7172: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7173: LD_ADDR_VAR 0 13
7177: PUSH
7178: LD_INT 81
7180: PUSH
7181: LD_VAR 0 1
7185: PPUSH
7186: CALL_OW 255
7190: PUSH
7191: EMPTY
7192: LIST
7193: LIST
7194: PUSH
7195: LD_INT 92
7197: PUSH
7198: LD_VAR 0 6
7202: PUSH
7203: LD_VAR 0 7
7207: PUSH
7208: LD_VAR 0 15
7212: PUSH
7213: EMPTY
7214: LIST
7215: LIST
7216: LIST
7217: LIST
7218: PUSH
7219: LD_INT 101
7221: PUSH
7222: LD_INT 1
7224: PUSH
7225: EMPTY
7226: LIST
7227: LIST
7228: PUSH
7229: EMPTY
7230: LIST
7231: LIST
7232: LIST
7233: PPUSH
7234: CALL_OW 69
7238: ST_TO_ADDR
// if enemy then
7239: LD_VAR 0 13
7243: IFFALSE 7314
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7245: LD_ADDR_VAR 0 14
7249: PUSH
7250: LD_VAR 0 13
7254: PPUSH
7255: LD_VAR 0 1
7259: PPUSH
7260: CALL_OW 74
7264: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7265: LD_VAR 0 14
7269: PPUSH
7270: LD_VAR 0 6
7274: PPUSH
7275: LD_VAR 0 7
7279: PPUSH
7280: CALL_OW 297
7284: PUSH
7285: LD_VAR 0 15
7289: PUSH
7290: LD_VAR 0 17
7294: PLUS
7295: LESS
7296: IFFALSE 7312
// ComAttackUnit ( unit , e ) ;
7298: LD_VAR 0 1
7302: PPUSH
7303: LD_VAR 0 14
7307: PPUSH
7308: CALL_OW 115
// end else
7312: GO 7331
// begin ComStop ( unit ) ;
7314: LD_VAR 0 1
7318: PPUSH
7319: CALL_OW 141
// status = 5 ;
7323: LD_ADDR_VAR 0 12
7327: PUSH
7328: LD_INT 5
7330: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7331: LD_VAR 0 12
7335: PUSH
7336: LD_INT 3
7338: EQUAL
7339: PUSH
7340: LD_VAR 0 16
7344: AND
7345: IFFALSE 7431
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7347: LD_VAR 0 1
7351: PPUSH
7352: LD_VAR 0 16
7356: PUSH
7357: LD_INT 1
7359: ARRAY
7360: PPUSH
7361: LD_VAR 0 16
7365: PUSH
7366: LD_INT 2
7368: ARRAY
7369: PPUSH
7370: CALL_OW 111
// wait ( 0 0$1 ) ;
7374: LD_INT 35
7376: PPUSH
7377: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7381: LD_VAR 0 1
7385: PPUSH
7386: LD_VAR 0 16
7390: PUSH
7391: LD_INT 1
7393: ARRAY
7394: PPUSH
7395: LD_VAR 0 16
7399: PUSH
7400: LD_INT 2
7402: ARRAY
7403: PPUSH
7404: CALL_OW 297
7408: PUSH
7409: LD_INT 4
7411: LESS
7412: IFFALSE 7347
// ComStop ( unit ) ;
7414: LD_VAR 0 1
7418: PPUSH
7419: CALL_OW 141
// status = 4 ;
7423: LD_ADDR_VAR 0 12
7427: PUSH
7428: LD_INT 4
7430: ST_TO_ADDR
// end ; if status = 4 then
7431: LD_VAR 0 12
7435: PUSH
7436: LD_INT 4
7438: EQUAL
7439: IFFALSE 7471
// begin repeat wait ( 0 0$1 ) ;
7441: LD_INT 35
7443: PPUSH
7444: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7448: LD_VAR 0 1
7452: PPUSH
7453: CALL_OW 256
7457: PUSH
7458: LD_INT 1000
7460: EQUAL
7461: IFFALSE 7441
// status = 5 ;
7463: LD_ADDR_VAR 0 12
7467: PUSH
7468: LD_INT 5
7470: ST_TO_ADDR
// end ; if status = 5 then
7471: LD_VAR 0 12
7475: PUSH
7476: LD_INT 5
7478: EQUAL
7479: IFFALSE 7761
// begin p := 999 ;
7481: LD_ADDR_VAR 0 9
7485: PUSH
7486: LD_INT 999
7488: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7489: LD_ADDR_VAR 0 14
7493: PUSH
7494: LD_VAR 0 11
7498: PUSH
7499: LD_INT 2
7501: ARRAY
7502: PUSH
7503: LD_INT 1
7505: ARRAY
7506: PUSH
7507: LD_VAR 0 11
7511: PUSH
7512: LD_INT 2
7514: ARRAY
7515: PUSH
7516: LD_INT 2
7518: ARRAY
7519: PUSH
7520: EMPTY
7521: LIST
7522: LIST
7523: ST_TO_ADDR
// c := 1 ;
7524: LD_ADDR_VAR 0 8
7528: PUSH
7529: LD_INT 1
7531: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7532: LD_ADDR_VAR 0 5
7536: PUSH
7537: DOUBLE
7538: LD_INT 1
7540: DEC
7541: ST_TO_ADDR
7542: LD_VAR 0 11
7546: PUSH
7547: LD_INT 2
7549: ARRAY
7550: PUSH
7551: LD_INT 2
7553: DIV
7554: PUSH
7555: FOR_TO
7556: IFFALSE 7688
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7558: LD_ADDR_VAR 0 6
7562: PUSH
7563: LD_VAR 0 1
7567: PPUSH
7568: LD_VAR 0 11
7572: PUSH
7573: LD_INT 2
7575: ARRAY
7576: PUSH
7577: LD_VAR 0 8
7581: ARRAY
7582: PPUSH
7583: LD_VAR 0 11
7587: PUSH
7588: LD_INT 2
7590: ARRAY
7591: PUSH
7592: LD_VAR 0 8
7596: PUSH
7597: LD_INT 1
7599: PLUS
7600: ARRAY
7601: PPUSH
7602: CALL_OW 297
7606: ST_TO_ADDR
// if x < p then
7607: LD_VAR 0 6
7611: PUSH
7612: LD_VAR 0 9
7616: LESS
7617: IFFALSE 7672
// begin p := x ;
7619: LD_ADDR_VAR 0 9
7623: PUSH
7624: LD_VAR 0 6
7628: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7629: LD_ADDR_VAR 0 14
7633: PUSH
7634: LD_VAR 0 11
7638: PUSH
7639: LD_INT 2
7641: ARRAY
7642: PUSH
7643: LD_VAR 0 8
7647: ARRAY
7648: PUSH
7649: LD_VAR 0 11
7653: PUSH
7654: LD_INT 2
7656: ARRAY
7657: PUSH
7658: LD_VAR 0 8
7662: PUSH
7663: LD_INT 1
7665: PLUS
7666: ARRAY
7667: PUSH
7668: EMPTY
7669: LIST
7670: LIST
7671: ST_TO_ADDR
// end ; c = c + 2 ;
7672: LD_ADDR_VAR 0 8
7676: PUSH
7677: LD_VAR 0 8
7681: PUSH
7682: LD_INT 2
7684: PLUS
7685: ST_TO_ADDR
// end ;
7686: GO 7555
7688: POP
7689: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7690: LD_VAR 0 1
7694: PPUSH
7695: LD_VAR 0 14
7699: PUSH
7700: LD_INT 1
7702: ARRAY
7703: PPUSH
7704: LD_VAR 0 14
7708: PUSH
7709: LD_INT 2
7711: ARRAY
7712: PPUSH
7713: CALL_OW 111
// wait ( 0 0$1 ) ;
7717: LD_INT 35
7719: PPUSH
7720: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7724: LD_VAR 0 1
7728: PPUSH
7729: LD_VAR 0 14
7733: PUSH
7734: LD_INT 1
7736: ARRAY
7737: PPUSH
7738: LD_VAR 0 14
7742: PUSH
7743: LD_INT 2
7745: ARRAY
7746: PPUSH
7747: CALL_OW 307
7751: IFFALSE 7690
// status = 1 ;
7753: LD_ADDR_VAR 0 12
7757: PUSH
7758: LD_INT 1
7760: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7761: LD_VAR 0 1
7765: PPUSH
7766: CALL_OW 301
7770: IFFALSE 6499
// end ;
7772: LD_VAR 0 4
7776: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7777: LD_INT 0
7779: PPUSH
7780: PPUSH
7781: PPUSH
7782: PPUSH
7783: PPUSH
7784: PPUSH
7785: PPUSH
7786: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7787: LD_VAR 0 1
7791: NOT
7792: PUSH
7793: LD_VAR 0 3
7797: NOT
7798: OR
7799: PUSH
7800: LD_VAR 0 4
7804: PUSH
7805: LD_INT 1
7807: PUSH
7808: LD_INT 2
7810: PUSH
7811: LD_INT 0
7813: PUSH
7814: EMPTY
7815: LIST
7816: LIST
7817: LIST
7818: IN
7819: NOT
7820: OR
7821: PUSH
7822: LD_VAR 0 6
7826: NOT
7827: OR
7828: PUSH
7829: LD_VAR 0 7
7833: NOT
7834: OR
7835: IFFALSE 7839
// exit ;
7837: GO 8230
// sex_id :=  ;
7839: LD_ADDR_VAR 0 14
7843: PUSH
7844: LD_STRING 
7846: ST_TO_ADDR
// case class of 1 :
7847: LD_VAR 0 5
7851: PUSH
7852: LD_INT 1
7854: DOUBLE
7855: EQUAL
7856: IFTRUE 7860
7858: GO 7871
7860: POP
// class_id := Sol ; 2 :
7861: LD_ADDR_VAR 0 15
7865: PUSH
7866: LD_STRING Sol
7868: ST_TO_ADDR
7869: GO 7929
7871: LD_INT 2
7873: DOUBLE
7874: EQUAL
7875: IFTRUE 7879
7877: GO 7890
7879: POP
// class_id := Eng ; 3 :
7880: LD_ADDR_VAR 0 15
7884: PUSH
7885: LD_STRING Eng
7887: ST_TO_ADDR
7888: GO 7929
7890: LD_INT 3
7892: DOUBLE
7893: EQUAL
7894: IFTRUE 7898
7896: GO 7909
7898: POP
// class_id := Mech ; 4 :
7899: LD_ADDR_VAR 0 15
7903: PUSH
7904: LD_STRING Mech
7906: ST_TO_ADDR
7907: GO 7929
7909: LD_INT 4
7911: DOUBLE
7912: EQUAL
7913: IFTRUE 7917
7915: GO 7928
7917: POP
// class_id := Sci ; end ;
7918: LD_ADDR_VAR 0 15
7922: PUSH
7923: LD_STRING Sci
7925: ST_TO_ADDR
7926: GO 7929
7928: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7929: LD_ADDR_VAR 0 11
7933: PUSH
7934: LD_VAR 0 1
7938: PPUSH
7939: LD_INT 25
7941: PUSH
7942: LD_VAR 0 5
7946: PUSH
7947: EMPTY
7948: LIST
7949: LIST
7950: PPUSH
7951: CALL_OW 72
7955: ST_TO_ADDR
// if tmp then
7956: LD_VAR 0 11
7960: IFFALSE 7972
// units := tmp ;
7962: LD_ADDR_VAR 0 1
7966: PUSH
7967: LD_VAR 0 11
7971: ST_TO_ADDR
// if sex then
7972: LD_VAR 0 4
7976: IFFALSE 8032
// begin if sex = sex_female then
7978: LD_VAR 0 4
7982: PUSH
7983: LD_INT 2
7985: EQUAL
7986: IFFALSE 7996
// sex_id := F ;
7988: LD_ADDR_VAR 0 14
7992: PUSH
7993: LD_STRING F
7995: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7996: LD_ADDR_VAR 0 1
8000: PUSH
8001: LD_VAR 0 1
8005: PPUSH
8006: LD_INT 26
8008: PUSH
8009: LD_VAR 0 4
8013: PUSH
8014: EMPTY
8015: LIST
8016: LIST
8017: PPUSH
8018: CALL_OW 72
8022: ST_TO_ADDR
// if not units then
8023: LD_VAR 0 1
8027: NOT
8028: IFFALSE 8032
// exit ;
8030: GO 8230
// end ; unit_id := id ;
8032: LD_ADDR_VAR 0 12
8036: PUSH
8037: LD_VAR 0 6
8041: ST_TO_ADDR
// if unit_id > units then
8042: LD_VAR 0 12
8046: PUSH
8047: LD_VAR 0 1
8051: GREATER
8052: IFFALSE 8062
// unit_id := 1 ;
8054: LD_ADDR_VAR 0 12
8058: PUSH
8059: LD_INT 1
8061: ST_TO_ADDR
// if not units [ unit_id ] then
8062: LD_VAR 0 1
8066: PUSH
8067: LD_VAR 0 12
8071: ARRAY
8072: NOT
8073: IFFALSE 8077
// exit ;
8075: GO 8230
// unit := units [ unit_id ] ;
8077: LD_ADDR_VAR 0 10
8081: PUSH
8082: LD_VAR 0 1
8086: PUSH
8087: LD_VAR 0 12
8091: ARRAY
8092: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8093: LD_ADDR_VAR 0 13
8097: PUSH
8098: LD_STRING D
8100: PUSH
8101: LD_VAR 0 3
8105: STR
8106: PUSH
8107: LD_STRING -
8109: STR
8110: PUSH
8111: LD_VAR 0 14
8115: STR
8116: PUSH
8117: LD_VAR 0 15
8121: STR
8122: PUSH
8123: LD_VAR 0 6
8127: STR
8128: PUSH
8129: LD_STRING -
8131: STR
8132: PUSH
8133: LD_VAR 0 7
8137: STR
8138: ST_TO_ADDR
// case type of 0 :
8139: LD_VAR 0 2
8143: PUSH
8144: LD_INT 0
8146: DOUBLE
8147: EQUAL
8148: IFTRUE 8152
8150: GO 8169
8152: POP
// Say ( unit , dialog_id ) ; 1 :
8153: LD_VAR 0 10
8157: PPUSH
8158: LD_VAR 0 13
8162: PPUSH
8163: CALL_OW 88
8167: GO 8220
8169: LD_INT 1
8171: DOUBLE
8172: EQUAL
8173: IFTRUE 8177
8175: GO 8194
8177: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8178: LD_VAR 0 10
8182: PPUSH
8183: LD_VAR 0 13
8187: PPUSH
8188: CALL_OW 94
8192: GO 8220
8194: LD_INT 2
8196: DOUBLE
8197: EQUAL
8198: IFTRUE 8202
8200: GO 8219
8202: POP
// ForceSay ( unit , dialog_id ) ; end ;
8203: LD_VAR 0 10
8207: PPUSH
8208: LD_VAR 0 13
8212: PPUSH
8213: CALL_OW 91
8217: GO 8220
8219: POP
// result := unit ;
8220: LD_ADDR_VAR 0 8
8224: PUSH
8225: LD_VAR 0 10
8229: ST_TO_ADDR
// end ;
8230: LD_VAR 0 8
8234: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8235: LD_INT 0
8237: PPUSH
8238: PPUSH
8239: PPUSH
8240: PPUSH
8241: PPUSH
8242: PPUSH
8243: PPUSH
// result := array ;
8244: LD_ADDR_VAR 0 5
8248: PUSH
8249: LD_VAR 0 1
8253: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8254: LD_VAR 0 1
8258: NOT
8259: PUSH
8260: LD_VAR 0 2
8264: NOT
8265: OR
8266: PUSH
8267: LD_VAR 0 3
8271: NOT
8272: OR
8273: PUSH
8274: LD_VAR 0 2
8278: PUSH
8279: LD_VAR 0 1
8283: GREATER
8284: OR
8285: PUSH
8286: LD_VAR 0 3
8290: PUSH
8291: LD_VAR 0 1
8295: GREATER
8296: OR
8297: IFFALSE 8301
// exit ;
8299: GO 8597
// if direction then
8301: LD_VAR 0 4
8305: IFFALSE 8369
// begin d := 1 ;
8307: LD_ADDR_VAR 0 9
8311: PUSH
8312: LD_INT 1
8314: ST_TO_ADDR
// if i_from > i_to then
8315: LD_VAR 0 2
8319: PUSH
8320: LD_VAR 0 3
8324: GREATER
8325: IFFALSE 8351
// length := ( array - i_from ) + i_to else
8327: LD_ADDR_VAR 0 11
8331: PUSH
8332: LD_VAR 0 1
8336: PUSH
8337: LD_VAR 0 2
8341: MINUS
8342: PUSH
8343: LD_VAR 0 3
8347: PLUS
8348: ST_TO_ADDR
8349: GO 8367
// length := i_to - i_from ;
8351: LD_ADDR_VAR 0 11
8355: PUSH
8356: LD_VAR 0 3
8360: PUSH
8361: LD_VAR 0 2
8365: MINUS
8366: ST_TO_ADDR
// end else
8367: GO 8430
// begin d := - 1 ;
8369: LD_ADDR_VAR 0 9
8373: PUSH
8374: LD_INT 1
8376: NEG
8377: ST_TO_ADDR
// if i_from > i_to then
8378: LD_VAR 0 2
8382: PUSH
8383: LD_VAR 0 3
8387: GREATER
8388: IFFALSE 8408
// length := i_from - i_to else
8390: LD_ADDR_VAR 0 11
8394: PUSH
8395: LD_VAR 0 2
8399: PUSH
8400: LD_VAR 0 3
8404: MINUS
8405: ST_TO_ADDR
8406: GO 8430
// length := ( array - i_to ) + i_from ;
8408: LD_ADDR_VAR 0 11
8412: PUSH
8413: LD_VAR 0 1
8417: PUSH
8418: LD_VAR 0 3
8422: MINUS
8423: PUSH
8424: LD_VAR 0 2
8428: PLUS
8429: ST_TO_ADDR
// end ; if not length then
8430: LD_VAR 0 11
8434: NOT
8435: IFFALSE 8439
// exit ;
8437: GO 8597
// tmp := array ;
8439: LD_ADDR_VAR 0 10
8443: PUSH
8444: LD_VAR 0 1
8448: ST_TO_ADDR
// for i = 1 to length do
8449: LD_ADDR_VAR 0 6
8453: PUSH
8454: DOUBLE
8455: LD_INT 1
8457: DEC
8458: ST_TO_ADDR
8459: LD_VAR 0 11
8463: PUSH
8464: FOR_TO
8465: IFFALSE 8585
// begin for j = 1 to array do
8467: LD_ADDR_VAR 0 7
8471: PUSH
8472: DOUBLE
8473: LD_INT 1
8475: DEC
8476: ST_TO_ADDR
8477: LD_VAR 0 1
8481: PUSH
8482: FOR_TO
8483: IFFALSE 8571
// begin k := j + d ;
8485: LD_ADDR_VAR 0 8
8489: PUSH
8490: LD_VAR 0 7
8494: PUSH
8495: LD_VAR 0 9
8499: PLUS
8500: ST_TO_ADDR
// if k > array then
8501: LD_VAR 0 8
8505: PUSH
8506: LD_VAR 0 1
8510: GREATER
8511: IFFALSE 8521
// k := 1 ;
8513: LD_ADDR_VAR 0 8
8517: PUSH
8518: LD_INT 1
8520: ST_TO_ADDR
// if not k then
8521: LD_VAR 0 8
8525: NOT
8526: IFFALSE 8538
// k := array ;
8528: LD_ADDR_VAR 0 8
8532: PUSH
8533: LD_VAR 0 1
8537: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8538: LD_ADDR_VAR 0 10
8542: PUSH
8543: LD_VAR 0 10
8547: PPUSH
8548: LD_VAR 0 8
8552: PPUSH
8553: LD_VAR 0 1
8557: PUSH
8558: LD_VAR 0 7
8562: ARRAY
8563: PPUSH
8564: CALL_OW 1
8568: ST_TO_ADDR
// end ;
8569: GO 8482
8571: POP
8572: POP
// array := tmp ;
8573: LD_ADDR_VAR 0 1
8577: PUSH
8578: LD_VAR 0 10
8582: ST_TO_ADDR
// end ;
8583: GO 8464
8585: POP
8586: POP
// result := array ;
8587: LD_ADDR_VAR 0 5
8591: PUSH
8592: LD_VAR 0 1
8596: ST_TO_ADDR
// end ;
8597: LD_VAR 0 5
8601: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8602: LD_INT 0
8604: PPUSH
8605: PPUSH
8606: PPUSH
8607: PPUSH
8608: PPUSH
8609: PPUSH
8610: PPUSH
8611: PPUSH
8612: PPUSH
8613: PPUSH
8614: PPUSH
8615: PPUSH
8616: PPUSH
8617: PPUSH
8618: PPUSH
8619: PPUSH
8620: PPUSH
8621: PPUSH
8622: PPUSH
8623: PPUSH
8624: PPUSH
8625: PPUSH
8626: PPUSH
8627: PPUSH
8628: PPUSH
8629: PPUSH
8630: PPUSH
8631: PPUSH
8632: PPUSH
8633: PPUSH
8634: PPUSH
8635: PPUSH
8636: PPUSH
8637: PPUSH
8638: PPUSH
8639: PPUSH
8640: PPUSH
8641: PPUSH
8642: PPUSH
8643: PPUSH
8644: PPUSH
8645: PPUSH
8646: PPUSH
8647: PPUSH
8648: PPUSH
8649: PPUSH
8650: PPUSH
8651: PPUSH
8652: PPUSH
8653: PPUSH
8654: PPUSH
8655: PPUSH
8656: PPUSH
8657: PPUSH
8658: PPUSH
8659: PPUSH
8660: PPUSH
8661: PPUSH
// result = [ ] ;
8662: LD_ADDR_VAR 0 7
8666: PUSH
8667: EMPTY
8668: ST_TO_ADDR
// temp_list = [ ] ;
8669: LD_ADDR_VAR 0 9
8673: PUSH
8674: EMPTY
8675: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8676: LD_VAR 0 4
8680: PUSH
8681: LD_INT 0
8683: PUSH
8684: LD_INT 1
8686: PUSH
8687: LD_INT 2
8689: PUSH
8690: LD_INT 3
8692: PUSH
8693: LD_INT 4
8695: PUSH
8696: LD_INT 5
8698: PUSH
8699: EMPTY
8700: LIST
8701: LIST
8702: LIST
8703: LIST
8704: LIST
8705: LIST
8706: IN
8707: NOT
8708: PUSH
8709: LD_VAR 0 1
8713: PUSH
8714: LD_INT 0
8716: PUSH
8717: LD_INT 1
8719: PUSH
8720: EMPTY
8721: LIST
8722: LIST
8723: IN
8724: PUSH
8725: LD_VAR 0 5
8729: PUSH
8730: LD_INT 1
8732: PUSH
8733: LD_INT 2
8735: PUSH
8736: LD_INT 3
8738: PUSH
8739: EMPTY
8740: LIST
8741: LIST
8742: LIST
8743: IN
8744: NOT
8745: AND
8746: OR
8747: IFFALSE 8751
// exit ;
8749: GO 27136
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8751: LD_VAR 0 1
8755: PUSH
8756: LD_INT 6
8758: PUSH
8759: LD_INT 7
8761: PUSH
8762: LD_INT 8
8764: PUSH
8765: LD_INT 13
8767: PUSH
8768: LD_INT 12
8770: PUSH
8771: LD_INT 15
8773: PUSH
8774: LD_INT 11
8776: PUSH
8777: LD_INT 14
8779: PUSH
8780: LD_INT 10
8782: PUSH
8783: EMPTY
8784: LIST
8785: LIST
8786: LIST
8787: LIST
8788: LIST
8789: LIST
8790: LIST
8791: LIST
8792: LIST
8793: IN
8794: IFFALSE 8804
// btype = b_lab ;
8796: LD_ADDR_VAR 0 1
8800: PUSH
8801: LD_INT 6
8803: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8804: LD_VAR 0 6
8808: PUSH
8809: LD_INT 0
8811: PUSH
8812: LD_INT 1
8814: PUSH
8815: LD_INT 2
8817: PUSH
8818: EMPTY
8819: LIST
8820: LIST
8821: LIST
8822: IN
8823: NOT
8824: PUSH
8825: LD_VAR 0 1
8829: PUSH
8830: LD_INT 0
8832: PUSH
8833: LD_INT 1
8835: PUSH
8836: LD_INT 2
8838: PUSH
8839: LD_INT 3
8841: PUSH
8842: LD_INT 6
8844: PUSH
8845: LD_INT 36
8847: PUSH
8848: LD_INT 4
8850: PUSH
8851: LD_INT 5
8853: PUSH
8854: LD_INT 31
8856: PUSH
8857: LD_INT 32
8859: PUSH
8860: LD_INT 33
8862: PUSH
8863: EMPTY
8864: LIST
8865: LIST
8866: LIST
8867: LIST
8868: LIST
8869: LIST
8870: LIST
8871: LIST
8872: LIST
8873: LIST
8874: LIST
8875: IN
8876: NOT
8877: PUSH
8878: LD_VAR 0 6
8882: PUSH
8883: LD_INT 1
8885: EQUAL
8886: AND
8887: OR
8888: PUSH
8889: LD_VAR 0 1
8893: PUSH
8894: LD_INT 2
8896: PUSH
8897: LD_INT 3
8899: PUSH
8900: EMPTY
8901: LIST
8902: LIST
8903: IN
8904: NOT
8905: PUSH
8906: LD_VAR 0 6
8910: PUSH
8911: LD_INT 2
8913: EQUAL
8914: AND
8915: OR
8916: IFFALSE 8926
// mode = 0 ;
8918: LD_ADDR_VAR 0 6
8922: PUSH
8923: LD_INT 0
8925: ST_TO_ADDR
// case mode of 0 :
8926: LD_VAR 0 6
8930: PUSH
8931: LD_INT 0
8933: DOUBLE
8934: EQUAL
8935: IFTRUE 8939
8937: GO 20392
8939: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8940: LD_ADDR_VAR 0 11
8944: PUSH
8945: LD_INT 0
8947: PUSH
8948: LD_INT 0
8950: PUSH
8951: EMPTY
8952: LIST
8953: LIST
8954: PUSH
8955: LD_INT 0
8957: PUSH
8958: LD_INT 1
8960: NEG
8961: PUSH
8962: EMPTY
8963: LIST
8964: LIST
8965: PUSH
8966: LD_INT 1
8968: PUSH
8969: LD_INT 0
8971: PUSH
8972: EMPTY
8973: LIST
8974: LIST
8975: PUSH
8976: LD_INT 1
8978: PUSH
8979: LD_INT 1
8981: PUSH
8982: EMPTY
8983: LIST
8984: LIST
8985: PUSH
8986: LD_INT 0
8988: PUSH
8989: LD_INT 1
8991: PUSH
8992: EMPTY
8993: LIST
8994: LIST
8995: PUSH
8996: LD_INT 1
8998: NEG
8999: PUSH
9000: LD_INT 0
9002: PUSH
9003: EMPTY
9004: LIST
9005: LIST
9006: PUSH
9007: LD_INT 1
9009: NEG
9010: PUSH
9011: LD_INT 1
9013: NEG
9014: PUSH
9015: EMPTY
9016: LIST
9017: LIST
9018: PUSH
9019: LD_INT 1
9021: NEG
9022: PUSH
9023: LD_INT 2
9025: NEG
9026: PUSH
9027: EMPTY
9028: LIST
9029: LIST
9030: PUSH
9031: LD_INT 0
9033: PUSH
9034: LD_INT 2
9036: NEG
9037: PUSH
9038: EMPTY
9039: LIST
9040: LIST
9041: PUSH
9042: LD_INT 1
9044: PUSH
9045: LD_INT 1
9047: NEG
9048: PUSH
9049: EMPTY
9050: LIST
9051: LIST
9052: PUSH
9053: LD_INT 1
9055: PUSH
9056: LD_INT 2
9058: PUSH
9059: EMPTY
9060: LIST
9061: LIST
9062: PUSH
9063: LD_INT 0
9065: PUSH
9066: LD_INT 2
9068: PUSH
9069: EMPTY
9070: LIST
9071: LIST
9072: PUSH
9073: LD_INT 1
9075: NEG
9076: PUSH
9077: LD_INT 1
9079: PUSH
9080: EMPTY
9081: LIST
9082: LIST
9083: PUSH
9084: LD_INT 1
9086: PUSH
9087: LD_INT 3
9089: PUSH
9090: EMPTY
9091: LIST
9092: LIST
9093: PUSH
9094: LD_INT 0
9096: PUSH
9097: LD_INT 3
9099: PUSH
9100: EMPTY
9101: LIST
9102: LIST
9103: PUSH
9104: LD_INT 1
9106: NEG
9107: PUSH
9108: LD_INT 2
9110: PUSH
9111: EMPTY
9112: LIST
9113: LIST
9114: PUSH
9115: EMPTY
9116: LIST
9117: LIST
9118: LIST
9119: LIST
9120: LIST
9121: LIST
9122: LIST
9123: LIST
9124: LIST
9125: LIST
9126: LIST
9127: LIST
9128: LIST
9129: LIST
9130: LIST
9131: LIST
9132: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9133: LD_ADDR_VAR 0 12
9137: PUSH
9138: LD_INT 0
9140: PUSH
9141: LD_INT 0
9143: PUSH
9144: EMPTY
9145: LIST
9146: LIST
9147: PUSH
9148: LD_INT 0
9150: PUSH
9151: LD_INT 1
9153: NEG
9154: PUSH
9155: EMPTY
9156: LIST
9157: LIST
9158: PUSH
9159: LD_INT 1
9161: PUSH
9162: LD_INT 0
9164: PUSH
9165: EMPTY
9166: LIST
9167: LIST
9168: PUSH
9169: LD_INT 1
9171: PUSH
9172: LD_INT 1
9174: PUSH
9175: EMPTY
9176: LIST
9177: LIST
9178: PUSH
9179: LD_INT 0
9181: PUSH
9182: LD_INT 1
9184: PUSH
9185: EMPTY
9186: LIST
9187: LIST
9188: PUSH
9189: LD_INT 1
9191: NEG
9192: PUSH
9193: LD_INT 0
9195: PUSH
9196: EMPTY
9197: LIST
9198: LIST
9199: PUSH
9200: LD_INT 1
9202: NEG
9203: PUSH
9204: LD_INT 1
9206: NEG
9207: PUSH
9208: EMPTY
9209: LIST
9210: LIST
9211: PUSH
9212: LD_INT 1
9214: PUSH
9215: LD_INT 1
9217: NEG
9218: PUSH
9219: EMPTY
9220: LIST
9221: LIST
9222: PUSH
9223: LD_INT 2
9225: PUSH
9226: LD_INT 0
9228: PUSH
9229: EMPTY
9230: LIST
9231: LIST
9232: PUSH
9233: LD_INT 2
9235: PUSH
9236: LD_INT 1
9238: PUSH
9239: EMPTY
9240: LIST
9241: LIST
9242: PUSH
9243: LD_INT 1
9245: NEG
9246: PUSH
9247: LD_INT 1
9249: PUSH
9250: EMPTY
9251: LIST
9252: LIST
9253: PUSH
9254: LD_INT 2
9256: NEG
9257: PUSH
9258: LD_INT 0
9260: PUSH
9261: EMPTY
9262: LIST
9263: LIST
9264: PUSH
9265: LD_INT 2
9267: NEG
9268: PUSH
9269: LD_INT 1
9271: NEG
9272: PUSH
9273: EMPTY
9274: LIST
9275: LIST
9276: PUSH
9277: LD_INT 2
9279: NEG
9280: PUSH
9281: LD_INT 1
9283: PUSH
9284: EMPTY
9285: LIST
9286: LIST
9287: PUSH
9288: LD_INT 3
9290: NEG
9291: PUSH
9292: LD_INT 0
9294: PUSH
9295: EMPTY
9296: LIST
9297: LIST
9298: PUSH
9299: LD_INT 3
9301: NEG
9302: PUSH
9303: LD_INT 1
9305: NEG
9306: PUSH
9307: EMPTY
9308: LIST
9309: LIST
9310: PUSH
9311: EMPTY
9312: LIST
9313: LIST
9314: LIST
9315: LIST
9316: LIST
9317: LIST
9318: LIST
9319: LIST
9320: LIST
9321: LIST
9322: LIST
9323: LIST
9324: LIST
9325: LIST
9326: LIST
9327: LIST
9328: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9329: LD_ADDR_VAR 0 13
9333: PUSH
9334: LD_INT 0
9336: PUSH
9337: LD_INT 0
9339: PUSH
9340: EMPTY
9341: LIST
9342: LIST
9343: PUSH
9344: LD_INT 0
9346: PUSH
9347: LD_INT 1
9349: NEG
9350: PUSH
9351: EMPTY
9352: LIST
9353: LIST
9354: PUSH
9355: LD_INT 1
9357: PUSH
9358: LD_INT 0
9360: PUSH
9361: EMPTY
9362: LIST
9363: LIST
9364: PUSH
9365: LD_INT 1
9367: PUSH
9368: LD_INT 1
9370: PUSH
9371: EMPTY
9372: LIST
9373: LIST
9374: PUSH
9375: LD_INT 0
9377: PUSH
9378: LD_INT 1
9380: PUSH
9381: EMPTY
9382: LIST
9383: LIST
9384: PUSH
9385: LD_INT 1
9387: NEG
9388: PUSH
9389: LD_INT 0
9391: PUSH
9392: EMPTY
9393: LIST
9394: LIST
9395: PUSH
9396: LD_INT 1
9398: NEG
9399: PUSH
9400: LD_INT 1
9402: NEG
9403: PUSH
9404: EMPTY
9405: LIST
9406: LIST
9407: PUSH
9408: LD_INT 1
9410: NEG
9411: PUSH
9412: LD_INT 2
9414: NEG
9415: PUSH
9416: EMPTY
9417: LIST
9418: LIST
9419: PUSH
9420: LD_INT 2
9422: PUSH
9423: LD_INT 1
9425: PUSH
9426: EMPTY
9427: LIST
9428: LIST
9429: PUSH
9430: LD_INT 2
9432: PUSH
9433: LD_INT 2
9435: PUSH
9436: EMPTY
9437: LIST
9438: LIST
9439: PUSH
9440: LD_INT 1
9442: PUSH
9443: LD_INT 2
9445: PUSH
9446: EMPTY
9447: LIST
9448: LIST
9449: PUSH
9450: LD_INT 2
9452: NEG
9453: PUSH
9454: LD_INT 1
9456: NEG
9457: PUSH
9458: EMPTY
9459: LIST
9460: LIST
9461: PUSH
9462: LD_INT 2
9464: NEG
9465: PUSH
9466: LD_INT 2
9468: NEG
9469: PUSH
9470: EMPTY
9471: LIST
9472: LIST
9473: PUSH
9474: LD_INT 2
9476: NEG
9477: PUSH
9478: LD_INT 3
9480: NEG
9481: PUSH
9482: EMPTY
9483: LIST
9484: LIST
9485: PUSH
9486: LD_INT 3
9488: NEG
9489: PUSH
9490: LD_INT 2
9492: NEG
9493: PUSH
9494: EMPTY
9495: LIST
9496: LIST
9497: PUSH
9498: LD_INT 3
9500: NEG
9501: PUSH
9502: LD_INT 3
9504: NEG
9505: PUSH
9506: EMPTY
9507: LIST
9508: LIST
9509: PUSH
9510: EMPTY
9511: LIST
9512: LIST
9513: LIST
9514: LIST
9515: LIST
9516: LIST
9517: LIST
9518: LIST
9519: LIST
9520: LIST
9521: LIST
9522: LIST
9523: LIST
9524: LIST
9525: LIST
9526: LIST
9527: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9528: LD_ADDR_VAR 0 14
9532: PUSH
9533: LD_INT 0
9535: PUSH
9536: LD_INT 0
9538: PUSH
9539: EMPTY
9540: LIST
9541: LIST
9542: PUSH
9543: LD_INT 0
9545: PUSH
9546: LD_INT 1
9548: NEG
9549: PUSH
9550: EMPTY
9551: LIST
9552: LIST
9553: PUSH
9554: LD_INT 1
9556: PUSH
9557: LD_INT 0
9559: PUSH
9560: EMPTY
9561: LIST
9562: LIST
9563: PUSH
9564: LD_INT 1
9566: PUSH
9567: LD_INT 1
9569: PUSH
9570: EMPTY
9571: LIST
9572: LIST
9573: PUSH
9574: LD_INT 0
9576: PUSH
9577: LD_INT 1
9579: PUSH
9580: EMPTY
9581: LIST
9582: LIST
9583: PUSH
9584: LD_INT 1
9586: NEG
9587: PUSH
9588: LD_INT 0
9590: PUSH
9591: EMPTY
9592: LIST
9593: LIST
9594: PUSH
9595: LD_INT 1
9597: NEG
9598: PUSH
9599: LD_INT 1
9601: NEG
9602: PUSH
9603: EMPTY
9604: LIST
9605: LIST
9606: PUSH
9607: LD_INT 1
9609: NEG
9610: PUSH
9611: LD_INT 2
9613: NEG
9614: PUSH
9615: EMPTY
9616: LIST
9617: LIST
9618: PUSH
9619: LD_INT 0
9621: PUSH
9622: LD_INT 2
9624: NEG
9625: PUSH
9626: EMPTY
9627: LIST
9628: LIST
9629: PUSH
9630: LD_INT 1
9632: PUSH
9633: LD_INT 1
9635: NEG
9636: PUSH
9637: EMPTY
9638: LIST
9639: LIST
9640: PUSH
9641: LD_INT 1
9643: PUSH
9644: LD_INT 2
9646: PUSH
9647: EMPTY
9648: LIST
9649: LIST
9650: PUSH
9651: LD_INT 0
9653: PUSH
9654: LD_INT 2
9656: PUSH
9657: EMPTY
9658: LIST
9659: LIST
9660: PUSH
9661: LD_INT 1
9663: NEG
9664: PUSH
9665: LD_INT 1
9667: PUSH
9668: EMPTY
9669: LIST
9670: LIST
9671: PUSH
9672: LD_INT 1
9674: NEG
9675: PUSH
9676: LD_INT 3
9678: NEG
9679: PUSH
9680: EMPTY
9681: LIST
9682: LIST
9683: PUSH
9684: LD_INT 0
9686: PUSH
9687: LD_INT 3
9689: NEG
9690: PUSH
9691: EMPTY
9692: LIST
9693: LIST
9694: PUSH
9695: LD_INT 1
9697: PUSH
9698: LD_INT 2
9700: NEG
9701: PUSH
9702: EMPTY
9703: LIST
9704: LIST
9705: PUSH
9706: EMPTY
9707: LIST
9708: LIST
9709: LIST
9710: LIST
9711: LIST
9712: LIST
9713: LIST
9714: LIST
9715: LIST
9716: LIST
9717: LIST
9718: LIST
9719: LIST
9720: LIST
9721: LIST
9722: LIST
9723: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9724: LD_ADDR_VAR 0 15
9728: PUSH
9729: LD_INT 0
9731: PUSH
9732: LD_INT 0
9734: PUSH
9735: EMPTY
9736: LIST
9737: LIST
9738: PUSH
9739: LD_INT 0
9741: PUSH
9742: LD_INT 1
9744: NEG
9745: PUSH
9746: EMPTY
9747: LIST
9748: LIST
9749: PUSH
9750: LD_INT 1
9752: PUSH
9753: LD_INT 0
9755: PUSH
9756: EMPTY
9757: LIST
9758: LIST
9759: PUSH
9760: LD_INT 1
9762: PUSH
9763: LD_INT 1
9765: PUSH
9766: EMPTY
9767: LIST
9768: LIST
9769: PUSH
9770: LD_INT 0
9772: PUSH
9773: LD_INT 1
9775: PUSH
9776: EMPTY
9777: LIST
9778: LIST
9779: PUSH
9780: LD_INT 1
9782: NEG
9783: PUSH
9784: LD_INT 0
9786: PUSH
9787: EMPTY
9788: LIST
9789: LIST
9790: PUSH
9791: LD_INT 1
9793: NEG
9794: PUSH
9795: LD_INT 1
9797: NEG
9798: PUSH
9799: EMPTY
9800: LIST
9801: LIST
9802: PUSH
9803: LD_INT 1
9805: PUSH
9806: LD_INT 1
9808: NEG
9809: PUSH
9810: EMPTY
9811: LIST
9812: LIST
9813: PUSH
9814: LD_INT 2
9816: PUSH
9817: LD_INT 0
9819: PUSH
9820: EMPTY
9821: LIST
9822: LIST
9823: PUSH
9824: LD_INT 2
9826: PUSH
9827: LD_INT 1
9829: PUSH
9830: EMPTY
9831: LIST
9832: LIST
9833: PUSH
9834: LD_INT 1
9836: NEG
9837: PUSH
9838: LD_INT 1
9840: PUSH
9841: EMPTY
9842: LIST
9843: LIST
9844: PUSH
9845: LD_INT 2
9847: NEG
9848: PUSH
9849: LD_INT 0
9851: PUSH
9852: EMPTY
9853: LIST
9854: LIST
9855: PUSH
9856: LD_INT 2
9858: NEG
9859: PUSH
9860: LD_INT 1
9862: NEG
9863: PUSH
9864: EMPTY
9865: LIST
9866: LIST
9867: PUSH
9868: LD_INT 2
9870: PUSH
9871: LD_INT 1
9873: NEG
9874: PUSH
9875: EMPTY
9876: LIST
9877: LIST
9878: PUSH
9879: LD_INT 3
9881: PUSH
9882: LD_INT 0
9884: PUSH
9885: EMPTY
9886: LIST
9887: LIST
9888: PUSH
9889: LD_INT 3
9891: PUSH
9892: LD_INT 1
9894: PUSH
9895: EMPTY
9896: LIST
9897: LIST
9898: PUSH
9899: EMPTY
9900: LIST
9901: LIST
9902: LIST
9903: LIST
9904: LIST
9905: LIST
9906: LIST
9907: LIST
9908: LIST
9909: LIST
9910: LIST
9911: LIST
9912: LIST
9913: LIST
9914: LIST
9915: LIST
9916: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9917: LD_ADDR_VAR 0 16
9921: PUSH
9922: LD_INT 0
9924: PUSH
9925: LD_INT 0
9927: PUSH
9928: EMPTY
9929: LIST
9930: LIST
9931: PUSH
9932: LD_INT 0
9934: PUSH
9935: LD_INT 1
9937: NEG
9938: PUSH
9939: EMPTY
9940: LIST
9941: LIST
9942: PUSH
9943: LD_INT 1
9945: PUSH
9946: LD_INT 0
9948: PUSH
9949: EMPTY
9950: LIST
9951: LIST
9952: PUSH
9953: LD_INT 1
9955: PUSH
9956: LD_INT 1
9958: PUSH
9959: EMPTY
9960: LIST
9961: LIST
9962: PUSH
9963: LD_INT 0
9965: PUSH
9966: LD_INT 1
9968: PUSH
9969: EMPTY
9970: LIST
9971: LIST
9972: PUSH
9973: LD_INT 1
9975: NEG
9976: PUSH
9977: LD_INT 0
9979: PUSH
9980: EMPTY
9981: LIST
9982: LIST
9983: PUSH
9984: LD_INT 1
9986: NEG
9987: PUSH
9988: LD_INT 1
9990: NEG
9991: PUSH
9992: EMPTY
9993: LIST
9994: LIST
9995: PUSH
9996: LD_INT 1
9998: NEG
9999: PUSH
10000: LD_INT 2
10002: NEG
10003: PUSH
10004: EMPTY
10005: LIST
10006: LIST
10007: PUSH
10008: LD_INT 2
10010: PUSH
10011: LD_INT 1
10013: PUSH
10014: EMPTY
10015: LIST
10016: LIST
10017: PUSH
10018: LD_INT 2
10020: PUSH
10021: LD_INT 2
10023: PUSH
10024: EMPTY
10025: LIST
10026: LIST
10027: PUSH
10028: LD_INT 1
10030: PUSH
10031: LD_INT 2
10033: PUSH
10034: EMPTY
10035: LIST
10036: LIST
10037: PUSH
10038: LD_INT 2
10040: NEG
10041: PUSH
10042: LD_INT 1
10044: NEG
10045: PUSH
10046: EMPTY
10047: LIST
10048: LIST
10049: PUSH
10050: LD_INT 2
10052: NEG
10053: PUSH
10054: LD_INT 2
10056: NEG
10057: PUSH
10058: EMPTY
10059: LIST
10060: LIST
10061: PUSH
10062: LD_INT 3
10064: PUSH
10065: LD_INT 2
10067: PUSH
10068: EMPTY
10069: LIST
10070: LIST
10071: PUSH
10072: LD_INT 3
10074: PUSH
10075: LD_INT 3
10077: PUSH
10078: EMPTY
10079: LIST
10080: LIST
10081: PUSH
10082: LD_INT 2
10084: PUSH
10085: LD_INT 3
10087: PUSH
10088: EMPTY
10089: LIST
10090: LIST
10091: PUSH
10092: EMPTY
10093: LIST
10094: LIST
10095: LIST
10096: LIST
10097: LIST
10098: LIST
10099: LIST
10100: LIST
10101: LIST
10102: LIST
10103: LIST
10104: LIST
10105: LIST
10106: LIST
10107: LIST
10108: LIST
10109: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10110: LD_ADDR_VAR 0 17
10114: PUSH
10115: LD_INT 0
10117: PUSH
10118: LD_INT 0
10120: PUSH
10121: EMPTY
10122: LIST
10123: LIST
10124: PUSH
10125: LD_INT 0
10127: PUSH
10128: LD_INT 1
10130: NEG
10131: PUSH
10132: EMPTY
10133: LIST
10134: LIST
10135: PUSH
10136: LD_INT 1
10138: PUSH
10139: LD_INT 0
10141: PUSH
10142: EMPTY
10143: LIST
10144: LIST
10145: PUSH
10146: LD_INT 1
10148: PUSH
10149: LD_INT 1
10151: PUSH
10152: EMPTY
10153: LIST
10154: LIST
10155: PUSH
10156: LD_INT 0
10158: PUSH
10159: LD_INT 1
10161: PUSH
10162: EMPTY
10163: LIST
10164: LIST
10165: PUSH
10166: LD_INT 1
10168: NEG
10169: PUSH
10170: LD_INT 0
10172: PUSH
10173: EMPTY
10174: LIST
10175: LIST
10176: PUSH
10177: LD_INT 1
10179: NEG
10180: PUSH
10181: LD_INT 1
10183: NEG
10184: PUSH
10185: EMPTY
10186: LIST
10187: LIST
10188: PUSH
10189: LD_INT 1
10191: NEG
10192: PUSH
10193: LD_INT 2
10195: NEG
10196: PUSH
10197: EMPTY
10198: LIST
10199: LIST
10200: PUSH
10201: LD_INT 0
10203: PUSH
10204: LD_INT 2
10206: NEG
10207: PUSH
10208: EMPTY
10209: LIST
10210: LIST
10211: PUSH
10212: LD_INT 1
10214: PUSH
10215: LD_INT 1
10217: NEG
10218: PUSH
10219: EMPTY
10220: LIST
10221: LIST
10222: PUSH
10223: LD_INT 2
10225: PUSH
10226: LD_INT 0
10228: PUSH
10229: EMPTY
10230: LIST
10231: LIST
10232: PUSH
10233: LD_INT 2
10235: PUSH
10236: LD_INT 1
10238: PUSH
10239: EMPTY
10240: LIST
10241: LIST
10242: PUSH
10243: LD_INT 2
10245: PUSH
10246: LD_INT 2
10248: PUSH
10249: EMPTY
10250: LIST
10251: LIST
10252: PUSH
10253: LD_INT 1
10255: PUSH
10256: LD_INT 2
10258: PUSH
10259: EMPTY
10260: LIST
10261: LIST
10262: PUSH
10263: LD_INT 0
10265: PUSH
10266: LD_INT 2
10268: PUSH
10269: EMPTY
10270: LIST
10271: LIST
10272: PUSH
10273: LD_INT 1
10275: NEG
10276: PUSH
10277: LD_INT 1
10279: PUSH
10280: EMPTY
10281: LIST
10282: LIST
10283: PUSH
10284: LD_INT 2
10286: NEG
10287: PUSH
10288: LD_INT 0
10290: PUSH
10291: EMPTY
10292: LIST
10293: LIST
10294: PUSH
10295: LD_INT 2
10297: NEG
10298: PUSH
10299: LD_INT 1
10301: NEG
10302: PUSH
10303: EMPTY
10304: LIST
10305: LIST
10306: PUSH
10307: LD_INT 2
10309: NEG
10310: PUSH
10311: LD_INT 2
10313: NEG
10314: PUSH
10315: EMPTY
10316: LIST
10317: LIST
10318: PUSH
10319: EMPTY
10320: LIST
10321: LIST
10322: LIST
10323: LIST
10324: LIST
10325: LIST
10326: LIST
10327: LIST
10328: LIST
10329: LIST
10330: LIST
10331: LIST
10332: LIST
10333: LIST
10334: LIST
10335: LIST
10336: LIST
10337: LIST
10338: LIST
10339: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10340: LD_ADDR_VAR 0 18
10344: PUSH
10345: LD_INT 0
10347: PUSH
10348: LD_INT 0
10350: PUSH
10351: EMPTY
10352: LIST
10353: LIST
10354: PUSH
10355: LD_INT 0
10357: PUSH
10358: LD_INT 1
10360: NEG
10361: PUSH
10362: EMPTY
10363: LIST
10364: LIST
10365: PUSH
10366: LD_INT 1
10368: PUSH
10369: LD_INT 0
10371: PUSH
10372: EMPTY
10373: LIST
10374: LIST
10375: PUSH
10376: LD_INT 1
10378: PUSH
10379: LD_INT 1
10381: PUSH
10382: EMPTY
10383: LIST
10384: LIST
10385: PUSH
10386: LD_INT 0
10388: PUSH
10389: LD_INT 1
10391: PUSH
10392: EMPTY
10393: LIST
10394: LIST
10395: PUSH
10396: LD_INT 1
10398: NEG
10399: PUSH
10400: LD_INT 0
10402: PUSH
10403: EMPTY
10404: LIST
10405: LIST
10406: PUSH
10407: LD_INT 1
10409: NEG
10410: PUSH
10411: LD_INT 1
10413: NEG
10414: PUSH
10415: EMPTY
10416: LIST
10417: LIST
10418: PUSH
10419: LD_INT 1
10421: NEG
10422: PUSH
10423: LD_INT 2
10425: NEG
10426: PUSH
10427: EMPTY
10428: LIST
10429: LIST
10430: PUSH
10431: LD_INT 0
10433: PUSH
10434: LD_INT 2
10436: NEG
10437: PUSH
10438: EMPTY
10439: LIST
10440: LIST
10441: PUSH
10442: LD_INT 1
10444: PUSH
10445: LD_INT 1
10447: NEG
10448: PUSH
10449: EMPTY
10450: LIST
10451: LIST
10452: PUSH
10453: LD_INT 2
10455: PUSH
10456: LD_INT 0
10458: PUSH
10459: EMPTY
10460: LIST
10461: LIST
10462: PUSH
10463: LD_INT 2
10465: PUSH
10466: LD_INT 1
10468: PUSH
10469: EMPTY
10470: LIST
10471: LIST
10472: PUSH
10473: LD_INT 2
10475: PUSH
10476: LD_INT 2
10478: PUSH
10479: EMPTY
10480: LIST
10481: LIST
10482: PUSH
10483: LD_INT 1
10485: PUSH
10486: LD_INT 2
10488: PUSH
10489: EMPTY
10490: LIST
10491: LIST
10492: PUSH
10493: LD_INT 0
10495: PUSH
10496: LD_INT 2
10498: PUSH
10499: EMPTY
10500: LIST
10501: LIST
10502: PUSH
10503: LD_INT 1
10505: NEG
10506: PUSH
10507: LD_INT 1
10509: PUSH
10510: EMPTY
10511: LIST
10512: LIST
10513: PUSH
10514: LD_INT 2
10516: NEG
10517: PUSH
10518: LD_INT 0
10520: PUSH
10521: EMPTY
10522: LIST
10523: LIST
10524: PUSH
10525: LD_INT 2
10527: NEG
10528: PUSH
10529: LD_INT 1
10531: NEG
10532: PUSH
10533: EMPTY
10534: LIST
10535: LIST
10536: PUSH
10537: LD_INT 2
10539: NEG
10540: PUSH
10541: LD_INT 2
10543: NEG
10544: PUSH
10545: EMPTY
10546: LIST
10547: LIST
10548: PUSH
10549: EMPTY
10550: LIST
10551: LIST
10552: LIST
10553: LIST
10554: LIST
10555: LIST
10556: LIST
10557: LIST
10558: LIST
10559: LIST
10560: LIST
10561: LIST
10562: LIST
10563: LIST
10564: LIST
10565: LIST
10566: LIST
10567: LIST
10568: LIST
10569: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10570: LD_ADDR_VAR 0 19
10574: PUSH
10575: LD_INT 0
10577: PUSH
10578: LD_INT 0
10580: PUSH
10581: EMPTY
10582: LIST
10583: LIST
10584: PUSH
10585: LD_INT 0
10587: PUSH
10588: LD_INT 1
10590: NEG
10591: PUSH
10592: EMPTY
10593: LIST
10594: LIST
10595: PUSH
10596: LD_INT 1
10598: PUSH
10599: LD_INT 0
10601: PUSH
10602: EMPTY
10603: LIST
10604: LIST
10605: PUSH
10606: LD_INT 1
10608: PUSH
10609: LD_INT 1
10611: PUSH
10612: EMPTY
10613: LIST
10614: LIST
10615: PUSH
10616: LD_INT 0
10618: PUSH
10619: LD_INT 1
10621: PUSH
10622: EMPTY
10623: LIST
10624: LIST
10625: PUSH
10626: LD_INT 1
10628: NEG
10629: PUSH
10630: LD_INT 0
10632: PUSH
10633: EMPTY
10634: LIST
10635: LIST
10636: PUSH
10637: LD_INT 1
10639: NEG
10640: PUSH
10641: LD_INT 1
10643: NEG
10644: PUSH
10645: EMPTY
10646: LIST
10647: LIST
10648: PUSH
10649: LD_INT 1
10651: NEG
10652: PUSH
10653: LD_INT 2
10655: NEG
10656: PUSH
10657: EMPTY
10658: LIST
10659: LIST
10660: PUSH
10661: LD_INT 0
10663: PUSH
10664: LD_INT 2
10666: NEG
10667: PUSH
10668: EMPTY
10669: LIST
10670: LIST
10671: PUSH
10672: LD_INT 1
10674: PUSH
10675: LD_INT 1
10677: NEG
10678: PUSH
10679: EMPTY
10680: LIST
10681: LIST
10682: PUSH
10683: LD_INT 2
10685: PUSH
10686: LD_INT 0
10688: PUSH
10689: EMPTY
10690: LIST
10691: LIST
10692: PUSH
10693: LD_INT 2
10695: PUSH
10696: LD_INT 1
10698: PUSH
10699: EMPTY
10700: LIST
10701: LIST
10702: PUSH
10703: LD_INT 2
10705: PUSH
10706: LD_INT 2
10708: PUSH
10709: EMPTY
10710: LIST
10711: LIST
10712: PUSH
10713: LD_INT 1
10715: PUSH
10716: LD_INT 2
10718: PUSH
10719: EMPTY
10720: LIST
10721: LIST
10722: PUSH
10723: LD_INT 0
10725: PUSH
10726: LD_INT 2
10728: PUSH
10729: EMPTY
10730: LIST
10731: LIST
10732: PUSH
10733: LD_INT 1
10735: NEG
10736: PUSH
10737: LD_INT 1
10739: PUSH
10740: EMPTY
10741: LIST
10742: LIST
10743: PUSH
10744: LD_INT 2
10746: NEG
10747: PUSH
10748: LD_INT 0
10750: PUSH
10751: EMPTY
10752: LIST
10753: LIST
10754: PUSH
10755: LD_INT 2
10757: NEG
10758: PUSH
10759: LD_INT 1
10761: NEG
10762: PUSH
10763: EMPTY
10764: LIST
10765: LIST
10766: PUSH
10767: LD_INT 2
10769: NEG
10770: PUSH
10771: LD_INT 2
10773: NEG
10774: PUSH
10775: EMPTY
10776: LIST
10777: LIST
10778: PUSH
10779: EMPTY
10780: LIST
10781: LIST
10782: LIST
10783: LIST
10784: LIST
10785: LIST
10786: LIST
10787: LIST
10788: LIST
10789: LIST
10790: LIST
10791: LIST
10792: LIST
10793: LIST
10794: LIST
10795: LIST
10796: LIST
10797: LIST
10798: LIST
10799: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10800: LD_ADDR_VAR 0 20
10804: PUSH
10805: LD_INT 0
10807: PUSH
10808: LD_INT 0
10810: PUSH
10811: EMPTY
10812: LIST
10813: LIST
10814: PUSH
10815: LD_INT 0
10817: PUSH
10818: LD_INT 1
10820: NEG
10821: PUSH
10822: EMPTY
10823: LIST
10824: LIST
10825: PUSH
10826: LD_INT 1
10828: PUSH
10829: LD_INT 0
10831: PUSH
10832: EMPTY
10833: LIST
10834: LIST
10835: PUSH
10836: LD_INT 1
10838: PUSH
10839: LD_INT 1
10841: PUSH
10842: EMPTY
10843: LIST
10844: LIST
10845: PUSH
10846: LD_INT 0
10848: PUSH
10849: LD_INT 1
10851: PUSH
10852: EMPTY
10853: LIST
10854: LIST
10855: PUSH
10856: LD_INT 1
10858: NEG
10859: PUSH
10860: LD_INT 0
10862: PUSH
10863: EMPTY
10864: LIST
10865: LIST
10866: PUSH
10867: LD_INT 1
10869: NEG
10870: PUSH
10871: LD_INT 1
10873: NEG
10874: PUSH
10875: EMPTY
10876: LIST
10877: LIST
10878: PUSH
10879: LD_INT 1
10881: NEG
10882: PUSH
10883: LD_INT 2
10885: NEG
10886: PUSH
10887: EMPTY
10888: LIST
10889: LIST
10890: PUSH
10891: LD_INT 0
10893: PUSH
10894: LD_INT 2
10896: NEG
10897: PUSH
10898: EMPTY
10899: LIST
10900: LIST
10901: PUSH
10902: LD_INT 1
10904: PUSH
10905: LD_INT 1
10907: NEG
10908: PUSH
10909: EMPTY
10910: LIST
10911: LIST
10912: PUSH
10913: LD_INT 2
10915: PUSH
10916: LD_INT 0
10918: PUSH
10919: EMPTY
10920: LIST
10921: LIST
10922: PUSH
10923: LD_INT 2
10925: PUSH
10926: LD_INT 1
10928: PUSH
10929: EMPTY
10930: LIST
10931: LIST
10932: PUSH
10933: LD_INT 2
10935: PUSH
10936: LD_INT 2
10938: PUSH
10939: EMPTY
10940: LIST
10941: LIST
10942: PUSH
10943: LD_INT 1
10945: PUSH
10946: LD_INT 2
10948: PUSH
10949: EMPTY
10950: LIST
10951: LIST
10952: PUSH
10953: LD_INT 0
10955: PUSH
10956: LD_INT 2
10958: PUSH
10959: EMPTY
10960: LIST
10961: LIST
10962: PUSH
10963: LD_INT 1
10965: NEG
10966: PUSH
10967: LD_INT 1
10969: PUSH
10970: EMPTY
10971: LIST
10972: LIST
10973: PUSH
10974: LD_INT 2
10976: NEG
10977: PUSH
10978: LD_INT 0
10980: PUSH
10981: EMPTY
10982: LIST
10983: LIST
10984: PUSH
10985: LD_INT 2
10987: NEG
10988: PUSH
10989: LD_INT 1
10991: NEG
10992: PUSH
10993: EMPTY
10994: LIST
10995: LIST
10996: PUSH
10997: LD_INT 2
10999: NEG
11000: PUSH
11001: LD_INT 2
11003: NEG
11004: PUSH
11005: EMPTY
11006: LIST
11007: LIST
11008: PUSH
11009: EMPTY
11010: LIST
11011: LIST
11012: LIST
11013: LIST
11014: LIST
11015: LIST
11016: LIST
11017: LIST
11018: LIST
11019: LIST
11020: LIST
11021: LIST
11022: LIST
11023: LIST
11024: LIST
11025: LIST
11026: LIST
11027: LIST
11028: LIST
11029: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11030: LD_ADDR_VAR 0 21
11034: PUSH
11035: LD_INT 0
11037: PUSH
11038: LD_INT 0
11040: PUSH
11041: EMPTY
11042: LIST
11043: LIST
11044: PUSH
11045: LD_INT 0
11047: PUSH
11048: LD_INT 1
11050: NEG
11051: PUSH
11052: EMPTY
11053: LIST
11054: LIST
11055: PUSH
11056: LD_INT 1
11058: PUSH
11059: LD_INT 0
11061: PUSH
11062: EMPTY
11063: LIST
11064: LIST
11065: PUSH
11066: LD_INT 1
11068: PUSH
11069: LD_INT 1
11071: PUSH
11072: EMPTY
11073: LIST
11074: LIST
11075: PUSH
11076: LD_INT 0
11078: PUSH
11079: LD_INT 1
11081: PUSH
11082: EMPTY
11083: LIST
11084: LIST
11085: PUSH
11086: LD_INT 1
11088: NEG
11089: PUSH
11090: LD_INT 0
11092: PUSH
11093: EMPTY
11094: LIST
11095: LIST
11096: PUSH
11097: LD_INT 1
11099: NEG
11100: PUSH
11101: LD_INT 1
11103: NEG
11104: PUSH
11105: EMPTY
11106: LIST
11107: LIST
11108: PUSH
11109: LD_INT 1
11111: NEG
11112: PUSH
11113: LD_INT 2
11115: NEG
11116: PUSH
11117: EMPTY
11118: LIST
11119: LIST
11120: PUSH
11121: LD_INT 0
11123: PUSH
11124: LD_INT 2
11126: NEG
11127: PUSH
11128: EMPTY
11129: LIST
11130: LIST
11131: PUSH
11132: LD_INT 1
11134: PUSH
11135: LD_INT 1
11137: NEG
11138: PUSH
11139: EMPTY
11140: LIST
11141: LIST
11142: PUSH
11143: LD_INT 2
11145: PUSH
11146: LD_INT 0
11148: PUSH
11149: EMPTY
11150: LIST
11151: LIST
11152: PUSH
11153: LD_INT 2
11155: PUSH
11156: LD_INT 1
11158: PUSH
11159: EMPTY
11160: LIST
11161: LIST
11162: PUSH
11163: LD_INT 2
11165: PUSH
11166: LD_INT 2
11168: PUSH
11169: EMPTY
11170: LIST
11171: LIST
11172: PUSH
11173: LD_INT 1
11175: PUSH
11176: LD_INT 2
11178: PUSH
11179: EMPTY
11180: LIST
11181: LIST
11182: PUSH
11183: LD_INT 0
11185: PUSH
11186: LD_INT 2
11188: PUSH
11189: EMPTY
11190: LIST
11191: LIST
11192: PUSH
11193: LD_INT 1
11195: NEG
11196: PUSH
11197: LD_INT 1
11199: PUSH
11200: EMPTY
11201: LIST
11202: LIST
11203: PUSH
11204: LD_INT 2
11206: NEG
11207: PUSH
11208: LD_INT 0
11210: PUSH
11211: EMPTY
11212: LIST
11213: LIST
11214: PUSH
11215: LD_INT 2
11217: NEG
11218: PUSH
11219: LD_INT 1
11221: NEG
11222: PUSH
11223: EMPTY
11224: LIST
11225: LIST
11226: PUSH
11227: LD_INT 2
11229: NEG
11230: PUSH
11231: LD_INT 2
11233: NEG
11234: PUSH
11235: EMPTY
11236: LIST
11237: LIST
11238: PUSH
11239: EMPTY
11240: LIST
11241: LIST
11242: LIST
11243: LIST
11244: LIST
11245: LIST
11246: LIST
11247: LIST
11248: LIST
11249: LIST
11250: LIST
11251: LIST
11252: LIST
11253: LIST
11254: LIST
11255: LIST
11256: LIST
11257: LIST
11258: LIST
11259: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11260: LD_ADDR_VAR 0 22
11264: PUSH
11265: LD_INT 0
11267: PUSH
11268: LD_INT 0
11270: PUSH
11271: EMPTY
11272: LIST
11273: LIST
11274: PUSH
11275: LD_INT 0
11277: PUSH
11278: LD_INT 1
11280: NEG
11281: PUSH
11282: EMPTY
11283: LIST
11284: LIST
11285: PUSH
11286: LD_INT 1
11288: PUSH
11289: LD_INT 0
11291: PUSH
11292: EMPTY
11293: LIST
11294: LIST
11295: PUSH
11296: LD_INT 1
11298: PUSH
11299: LD_INT 1
11301: PUSH
11302: EMPTY
11303: LIST
11304: LIST
11305: PUSH
11306: LD_INT 0
11308: PUSH
11309: LD_INT 1
11311: PUSH
11312: EMPTY
11313: LIST
11314: LIST
11315: PUSH
11316: LD_INT 1
11318: NEG
11319: PUSH
11320: LD_INT 0
11322: PUSH
11323: EMPTY
11324: LIST
11325: LIST
11326: PUSH
11327: LD_INT 1
11329: NEG
11330: PUSH
11331: LD_INT 1
11333: NEG
11334: PUSH
11335: EMPTY
11336: LIST
11337: LIST
11338: PUSH
11339: LD_INT 1
11341: NEG
11342: PUSH
11343: LD_INT 2
11345: NEG
11346: PUSH
11347: EMPTY
11348: LIST
11349: LIST
11350: PUSH
11351: LD_INT 0
11353: PUSH
11354: LD_INT 2
11356: NEG
11357: PUSH
11358: EMPTY
11359: LIST
11360: LIST
11361: PUSH
11362: LD_INT 1
11364: PUSH
11365: LD_INT 1
11367: NEG
11368: PUSH
11369: EMPTY
11370: LIST
11371: LIST
11372: PUSH
11373: LD_INT 2
11375: PUSH
11376: LD_INT 0
11378: PUSH
11379: EMPTY
11380: LIST
11381: LIST
11382: PUSH
11383: LD_INT 2
11385: PUSH
11386: LD_INT 1
11388: PUSH
11389: EMPTY
11390: LIST
11391: LIST
11392: PUSH
11393: LD_INT 2
11395: PUSH
11396: LD_INT 2
11398: PUSH
11399: EMPTY
11400: LIST
11401: LIST
11402: PUSH
11403: LD_INT 1
11405: PUSH
11406: LD_INT 2
11408: PUSH
11409: EMPTY
11410: LIST
11411: LIST
11412: PUSH
11413: LD_INT 0
11415: PUSH
11416: LD_INT 2
11418: PUSH
11419: EMPTY
11420: LIST
11421: LIST
11422: PUSH
11423: LD_INT 1
11425: NEG
11426: PUSH
11427: LD_INT 1
11429: PUSH
11430: EMPTY
11431: LIST
11432: LIST
11433: PUSH
11434: LD_INT 2
11436: NEG
11437: PUSH
11438: LD_INT 0
11440: PUSH
11441: EMPTY
11442: LIST
11443: LIST
11444: PUSH
11445: LD_INT 2
11447: NEG
11448: PUSH
11449: LD_INT 1
11451: NEG
11452: PUSH
11453: EMPTY
11454: LIST
11455: LIST
11456: PUSH
11457: LD_INT 2
11459: NEG
11460: PUSH
11461: LD_INT 2
11463: NEG
11464: PUSH
11465: EMPTY
11466: LIST
11467: LIST
11468: PUSH
11469: EMPTY
11470: LIST
11471: LIST
11472: LIST
11473: LIST
11474: LIST
11475: LIST
11476: LIST
11477: LIST
11478: LIST
11479: LIST
11480: LIST
11481: LIST
11482: LIST
11483: LIST
11484: LIST
11485: LIST
11486: LIST
11487: LIST
11488: LIST
11489: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11490: LD_ADDR_VAR 0 23
11494: PUSH
11495: LD_INT 0
11497: PUSH
11498: LD_INT 0
11500: PUSH
11501: EMPTY
11502: LIST
11503: LIST
11504: PUSH
11505: LD_INT 0
11507: PUSH
11508: LD_INT 1
11510: NEG
11511: PUSH
11512: EMPTY
11513: LIST
11514: LIST
11515: PUSH
11516: LD_INT 1
11518: PUSH
11519: LD_INT 0
11521: PUSH
11522: EMPTY
11523: LIST
11524: LIST
11525: PUSH
11526: LD_INT 1
11528: PUSH
11529: LD_INT 1
11531: PUSH
11532: EMPTY
11533: LIST
11534: LIST
11535: PUSH
11536: LD_INT 0
11538: PUSH
11539: LD_INT 1
11541: PUSH
11542: EMPTY
11543: LIST
11544: LIST
11545: PUSH
11546: LD_INT 1
11548: NEG
11549: PUSH
11550: LD_INT 0
11552: PUSH
11553: EMPTY
11554: LIST
11555: LIST
11556: PUSH
11557: LD_INT 1
11559: NEG
11560: PUSH
11561: LD_INT 1
11563: NEG
11564: PUSH
11565: EMPTY
11566: LIST
11567: LIST
11568: PUSH
11569: LD_INT 1
11571: NEG
11572: PUSH
11573: LD_INT 2
11575: NEG
11576: PUSH
11577: EMPTY
11578: LIST
11579: LIST
11580: PUSH
11581: LD_INT 0
11583: PUSH
11584: LD_INT 2
11586: NEG
11587: PUSH
11588: EMPTY
11589: LIST
11590: LIST
11591: PUSH
11592: LD_INT 1
11594: PUSH
11595: LD_INT 1
11597: NEG
11598: PUSH
11599: EMPTY
11600: LIST
11601: LIST
11602: PUSH
11603: LD_INT 2
11605: PUSH
11606: LD_INT 0
11608: PUSH
11609: EMPTY
11610: LIST
11611: LIST
11612: PUSH
11613: LD_INT 2
11615: PUSH
11616: LD_INT 1
11618: PUSH
11619: EMPTY
11620: LIST
11621: LIST
11622: PUSH
11623: LD_INT 2
11625: PUSH
11626: LD_INT 2
11628: PUSH
11629: EMPTY
11630: LIST
11631: LIST
11632: PUSH
11633: LD_INT 1
11635: PUSH
11636: LD_INT 2
11638: PUSH
11639: EMPTY
11640: LIST
11641: LIST
11642: PUSH
11643: LD_INT 0
11645: PUSH
11646: LD_INT 2
11648: PUSH
11649: EMPTY
11650: LIST
11651: LIST
11652: PUSH
11653: LD_INT 1
11655: NEG
11656: PUSH
11657: LD_INT 1
11659: PUSH
11660: EMPTY
11661: LIST
11662: LIST
11663: PUSH
11664: LD_INT 2
11666: NEG
11667: PUSH
11668: LD_INT 0
11670: PUSH
11671: EMPTY
11672: LIST
11673: LIST
11674: PUSH
11675: LD_INT 2
11677: NEG
11678: PUSH
11679: LD_INT 1
11681: NEG
11682: PUSH
11683: EMPTY
11684: LIST
11685: LIST
11686: PUSH
11687: LD_INT 2
11689: NEG
11690: PUSH
11691: LD_INT 2
11693: NEG
11694: PUSH
11695: EMPTY
11696: LIST
11697: LIST
11698: PUSH
11699: LD_INT 2
11701: NEG
11702: PUSH
11703: LD_INT 3
11705: NEG
11706: PUSH
11707: EMPTY
11708: LIST
11709: LIST
11710: PUSH
11711: LD_INT 1
11713: NEG
11714: PUSH
11715: LD_INT 3
11717: NEG
11718: PUSH
11719: EMPTY
11720: LIST
11721: LIST
11722: PUSH
11723: LD_INT 1
11725: PUSH
11726: LD_INT 2
11728: NEG
11729: PUSH
11730: EMPTY
11731: LIST
11732: LIST
11733: PUSH
11734: LD_INT 2
11736: PUSH
11737: LD_INT 1
11739: NEG
11740: PUSH
11741: EMPTY
11742: LIST
11743: LIST
11744: PUSH
11745: EMPTY
11746: LIST
11747: LIST
11748: LIST
11749: LIST
11750: LIST
11751: LIST
11752: LIST
11753: LIST
11754: LIST
11755: LIST
11756: LIST
11757: LIST
11758: LIST
11759: LIST
11760: LIST
11761: LIST
11762: LIST
11763: LIST
11764: LIST
11765: LIST
11766: LIST
11767: LIST
11768: LIST
11769: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11770: LD_ADDR_VAR 0 24
11774: PUSH
11775: LD_INT 0
11777: PUSH
11778: LD_INT 0
11780: PUSH
11781: EMPTY
11782: LIST
11783: LIST
11784: PUSH
11785: LD_INT 0
11787: PUSH
11788: LD_INT 1
11790: NEG
11791: PUSH
11792: EMPTY
11793: LIST
11794: LIST
11795: PUSH
11796: LD_INT 1
11798: PUSH
11799: LD_INT 0
11801: PUSH
11802: EMPTY
11803: LIST
11804: LIST
11805: PUSH
11806: LD_INT 1
11808: PUSH
11809: LD_INT 1
11811: PUSH
11812: EMPTY
11813: LIST
11814: LIST
11815: PUSH
11816: LD_INT 0
11818: PUSH
11819: LD_INT 1
11821: PUSH
11822: EMPTY
11823: LIST
11824: LIST
11825: PUSH
11826: LD_INT 1
11828: NEG
11829: PUSH
11830: LD_INT 0
11832: PUSH
11833: EMPTY
11834: LIST
11835: LIST
11836: PUSH
11837: LD_INT 1
11839: NEG
11840: PUSH
11841: LD_INT 1
11843: NEG
11844: PUSH
11845: EMPTY
11846: LIST
11847: LIST
11848: PUSH
11849: LD_INT 1
11851: NEG
11852: PUSH
11853: LD_INT 2
11855: NEG
11856: PUSH
11857: EMPTY
11858: LIST
11859: LIST
11860: PUSH
11861: LD_INT 0
11863: PUSH
11864: LD_INT 2
11866: NEG
11867: PUSH
11868: EMPTY
11869: LIST
11870: LIST
11871: PUSH
11872: LD_INT 1
11874: PUSH
11875: LD_INT 1
11877: NEG
11878: PUSH
11879: EMPTY
11880: LIST
11881: LIST
11882: PUSH
11883: LD_INT 2
11885: PUSH
11886: LD_INT 0
11888: PUSH
11889: EMPTY
11890: LIST
11891: LIST
11892: PUSH
11893: LD_INT 2
11895: PUSH
11896: LD_INT 1
11898: PUSH
11899: EMPTY
11900: LIST
11901: LIST
11902: PUSH
11903: LD_INT 2
11905: PUSH
11906: LD_INT 2
11908: PUSH
11909: EMPTY
11910: LIST
11911: LIST
11912: PUSH
11913: LD_INT 1
11915: PUSH
11916: LD_INT 2
11918: PUSH
11919: EMPTY
11920: LIST
11921: LIST
11922: PUSH
11923: LD_INT 0
11925: PUSH
11926: LD_INT 2
11928: PUSH
11929: EMPTY
11930: LIST
11931: LIST
11932: PUSH
11933: LD_INT 1
11935: NEG
11936: PUSH
11937: LD_INT 1
11939: PUSH
11940: EMPTY
11941: LIST
11942: LIST
11943: PUSH
11944: LD_INT 2
11946: NEG
11947: PUSH
11948: LD_INT 0
11950: PUSH
11951: EMPTY
11952: LIST
11953: LIST
11954: PUSH
11955: LD_INT 2
11957: NEG
11958: PUSH
11959: LD_INT 1
11961: NEG
11962: PUSH
11963: EMPTY
11964: LIST
11965: LIST
11966: PUSH
11967: LD_INT 2
11969: NEG
11970: PUSH
11971: LD_INT 2
11973: NEG
11974: PUSH
11975: EMPTY
11976: LIST
11977: LIST
11978: PUSH
11979: LD_INT 1
11981: PUSH
11982: LD_INT 2
11984: NEG
11985: PUSH
11986: EMPTY
11987: LIST
11988: LIST
11989: PUSH
11990: LD_INT 2
11992: PUSH
11993: LD_INT 1
11995: NEG
11996: PUSH
11997: EMPTY
11998: LIST
11999: LIST
12000: PUSH
12001: LD_INT 3
12003: PUSH
12004: LD_INT 1
12006: PUSH
12007: EMPTY
12008: LIST
12009: LIST
12010: PUSH
12011: LD_INT 3
12013: PUSH
12014: LD_INT 2
12016: PUSH
12017: EMPTY
12018: LIST
12019: LIST
12020: PUSH
12021: EMPTY
12022: LIST
12023: LIST
12024: LIST
12025: LIST
12026: LIST
12027: LIST
12028: LIST
12029: LIST
12030: LIST
12031: LIST
12032: LIST
12033: LIST
12034: LIST
12035: LIST
12036: LIST
12037: LIST
12038: LIST
12039: LIST
12040: LIST
12041: LIST
12042: LIST
12043: LIST
12044: LIST
12045: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12046: LD_ADDR_VAR 0 25
12050: PUSH
12051: LD_INT 0
12053: PUSH
12054: LD_INT 0
12056: PUSH
12057: EMPTY
12058: LIST
12059: LIST
12060: PUSH
12061: LD_INT 0
12063: PUSH
12064: LD_INT 1
12066: NEG
12067: PUSH
12068: EMPTY
12069: LIST
12070: LIST
12071: PUSH
12072: LD_INT 1
12074: PUSH
12075: LD_INT 0
12077: PUSH
12078: EMPTY
12079: LIST
12080: LIST
12081: PUSH
12082: LD_INT 1
12084: PUSH
12085: LD_INT 1
12087: PUSH
12088: EMPTY
12089: LIST
12090: LIST
12091: PUSH
12092: LD_INT 0
12094: PUSH
12095: LD_INT 1
12097: PUSH
12098: EMPTY
12099: LIST
12100: LIST
12101: PUSH
12102: LD_INT 1
12104: NEG
12105: PUSH
12106: LD_INT 0
12108: PUSH
12109: EMPTY
12110: LIST
12111: LIST
12112: PUSH
12113: LD_INT 1
12115: NEG
12116: PUSH
12117: LD_INT 1
12119: NEG
12120: PUSH
12121: EMPTY
12122: LIST
12123: LIST
12124: PUSH
12125: LD_INT 1
12127: NEG
12128: PUSH
12129: LD_INT 2
12131: NEG
12132: PUSH
12133: EMPTY
12134: LIST
12135: LIST
12136: PUSH
12137: LD_INT 0
12139: PUSH
12140: LD_INT 2
12142: NEG
12143: PUSH
12144: EMPTY
12145: LIST
12146: LIST
12147: PUSH
12148: LD_INT 1
12150: PUSH
12151: LD_INT 1
12153: NEG
12154: PUSH
12155: EMPTY
12156: LIST
12157: LIST
12158: PUSH
12159: LD_INT 2
12161: PUSH
12162: LD_INT 0
12164: PUSH
12165: EMPTY
12166: LIST
12167: LIST
12168: PUSH
12169: LD_INT 2
12171: PUSH
12172: LD_INT 1
12174: PUSH
12175: EMPTY
12176: LIST
12177: LIST
12178: PUSH
12179: LD_INT 2
12181: PUSH
12182: LD_INT 2
12184: PUSH
12185: EMPTY
12186: LIST
12187: LIST
12188: PUSH
12189: LD_INT 1
12191: PUSH
12192: LD_INT 2
12194: PUSH
12195: EMPTY
12196: LIST
12197: LIST
12198: PUSH
12199: LD_INT 0
12201: PUSH
12202: LD_INT 2
12204: PUSH
12205: EMPTY
12206: LIST
12207: LIST
12208: PUSH
12209: LD_INT 1
12211: NEG
12212: PUSH
12213: LD_INT 1
12215: PUSH
12216: EMPTY
12217: LIST
12218: LIST
12219: PUSH
12220: LD_INT 2
12222: NEG
12223: PUSH
12224: LD_INT 0
12226: PUSH
12227: EMPTY
12228: LIST
12229: LIST
12230: PUSH
12231: LD_INT 2
12233: NEG
12234: PUSH
12235: LD_INT 1
12237: NEG
12238: PUSH
12239: EMPTY
12240: LIST
12241: LIST
12242: PUSH
12243: LD_INT 2
12245: NEG
12246: PUSH
12247: LD_INT 2
12249: NEG
12250: PUSH
12251: EMPTY
12252: LIST
12253: LIST
12254: PUSH
12255: LD_INT 3
12257: PUSH
12258: LD_INT 1
12260: PUSH
12261: EMPTY
12262: LIST
12263: LIST
12264: PUSH
12265: LD_INT 3
12267: PUSH
12268: LD_INT 2
12270: PUSH
12271: EMPTY
12272: LIST
12273: LIST
12274: PUSH
12275: LD_INT 2
12277: PUSH
12278: LD_INT 3
12280: PUSH
12281: EMPTY
12282: LIST
12283: LIST
12284: PUSH
12285: LD_INT 1
12287: PUSH
12288: LD_INT 3
12290: PUSH
12291: EMPTY
12292: LIST
12293: LIST
12294: PUSH
12295: EMPTY
12296: LIST
12297: LIST
12298: LIST
12299: LIST
12300: LIST
12301: LIST
12302: LIST
12303: LIST
12304: LIST
12305: LIST
12306: LIST
12307: LIST
12308: LIST
12309: LIST
12310: LIST
12311: LIST
12312: LIST
12313: LIST
12314: LIST
12315: LIST
12316: LIST
12317: LIST
12318: LIST
12319: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12320: LD_ADDR_VAR 0 26
12324: PUSH
12325: LD_INT 0
12327: PUSH
12328: LD_INT 0
12330: PUSH
12331: EMPTY
12332: LIST
12333: LIST
12334: PUSH
12335: LD_INT 0
12337: PUSH
12338: LD_INT 1
12340: NEG
12341: PUSH
12342: EMPTY
12343: LIST
12344: LIST
12345: PUSH
12346: LD_INT 1
12348: PUSH
12349: LD_INT 0
12351: PUSH
12352: EMPTY
12353: LIST
12354: LIST
12355: PUSH
12356: LD_INT 1
12358: PUSH
12359: LD_INT 1
12361: PUSH
12362: EMPTY
12363: LIST
12364: LIST
12365: PUSH
12366: LD_INT 0
12368: PUSH
12369: LD_INT 1
12371: PUSH
12372: EMPTY
12373: LIST
12374: LIST
12375: PUSH
12376: LD_INT 1
12378: NEG
12379: PUSH
12380: LD_INT 0
12382: PUSH
12383: EMPTY
12384: LIST
12385: LIST
12386: PUSH
12387: LD_INT 1
12389: NEG
12390: PUSH
12391: LD_INT 1
12393: NEG
12394: PUSH
12395: EMPTY
12396: LIST
12397: LIST
12398: PUSH
12399: LD_INT 1
12401: NEG
12402: PUSH
12403: LD_INT 2
12405: NEG
12406: PUSH
12407: EMPTY
12408: LIST
12409: LIST
12410: PUSH
12411: LD_INT 0
12413: PUSH
12414: LD_INT 2
12416: NEG
12417: PUSH
12418: EMPTY
12419: LIST
12420: LIST
12421: PUSH
12422: LD_INT 1
12424: PUSH
12425: LD_INT 1
12427: NEG
12428: PUSH
12429: EMPTY
12430: LIST
12431: LIST
12432: PUSH
12433: LD_INT 2
12435: PUSH
12436: LD_INT 0
12438: PUSH
12439: EMPTY
12440: LIST
12441: LIST
12442: PUSH
12443: LD_INT 2
12445: PUSH
12446: LD_INT 1
12448: PUSH
12449: EMPTY
12450: LIST
12451: LIST
12452: PUSH
12453: LD_INT 2
12455: PUSH
12456: LD_INT 2
12458: PUSH
12459: EMPTY
12460: LIST
12461: LIST
12462: PUSH
12463: LD_INT 1
12465: PUSH
12466: LD_INT 2
12468: PUSH
12469: EMPTY
12470: LIST
12471: LIST
12472: PUSH
12473: LD_INT 0
12475: PUSH
12476: LD_INT 2
12478: PUSH
12479: EMPTY
12480: LIST
12481: LIST
12482: PUSH
12483: LD_INT 1
12485: NEG
12486: PUSH
12487: LD_INT 1
12489: PUSH
12490: EMPTY
12491: LIST
12492: LIST
12493: PUSH
12494: LD_INT 2
12496: NEG
12497: PUSH
12498: LD_INT 0
12500: PUSH
12501: EMPTY
12502: LIST
12503: LIST
12504: PUSH
12505: LD_INT 2
12507: NEG
12508: PUSH
12509: LD_INT 1
12511: NEG
12512: PUSH
12513: EMPTY
12514: LIST
12515: LIST
12516: PUSH
12517: LD_INT 2
12519: NEG
12520: PUSH
12521: LD_INT 2
12523: NEG
12524: PUSH
12525: EMPTY
12526: LIST
12527: LIST
12528: PUSH
12529: LD_INT 2
12531: PUSH
12532: LD_INT 3
12534: PUSH
12535: EMPTY
12536: LIST
12537: LIST
12538: PUSH
12539: LD_INT 1
12541: PUSH
12542: LD_INT 3
12544: PUSH
12545: EMPTY
12546: LIST
12547: LIST
12548: PUSH
12549: LD_INT 1
12551: NEG
12552: PUSH
12553: LD_INT 2
12555: PUSH
12556: EMPTY
12557: LIST
12558: LIST
12559: PUSH
12560: LD_INT 2
12562: NEG
12563: PUSH
12564: LD_INT 1
12566: PUSH
12567: EMPTY
12568: LIST
12569: LIST
12570: PUSH
12571: EMPTY
12572: LIST
12573: LIST
12574: LIST
12575: LIST
12576: LIST
12577: LIST
12578: LIST
12579: LIST
12580: LIST
12581: LIST
12582: LIST
12583: LIST
12584: LIST
12585: LIST
12586: LIST
12587: LIST
12588: LIST
12589: LIST
12590: LIST
12591: LIST
12592: LIST
12593: LIST
12594: LIST
12595: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12596: LD_ADDR_VAR 0 27
12600: PUSH
12601: LD_INT 0
12603: PUSH
12604: LD_INT 0
12606: PUSH
12607: EMPTY
12608: LIST
12609: LIST
12610: PUSH
12611: LD_INT 0
12613: PUSH
12614: LD_INT 1
12616: NEG
12617: PUSH
12618: EMPTY
12619: LIST
12620: LIST
12621: PUSH
12622: LD_INT 1
12624: PUSH
12625: LD_INT 0
12627: PUSH
12628: EMPTY
12629: LIST
12630: LIST
12631: PUSH
12632: LD_INT 1
12634: PUSH
12635: LD_INT 1
12637: PUSH
12638: EMPTY
12639: LIST
12640: LIST
12641: PUSH
12642: LD_INT 0
12644: PUSH
12645: LD_INT 1
12647: PUSH
12648: EMPTY
12649: LIST
12650: LIST
12651: PUSH
12652: LD_INT 1
12654: NEG
12655: PUSH
12656: LD_INT 0
12658: PUSH
12659: EMPTY
12660: LIST
12661: LIST
12662: PUSH
12663: LD_INT 1
12665: NEG
12666: PUSH
12667: LD_INT 1
12669: NEG
12670: PUSH
12671: EMPTY
12672: LIST
12673: LIST
12674: PUSH
12675: LD_INT 1
12677: NEG
12678: PUSH
12679: LD_INT 2
12681: NEG
12682: PUSH
12683: EMPTY
12684: LIST
12685: LIST
12686: PUSH
12687: LD_INT 0
12689: PUSH
12690: LD_INT 2
12692: NEG
12693: PUSH
12694: EMPTY
12695: LIST
12696: LIST
12697: PUSH
12698: LD_INT 1
12700: PUSH
12701: LD_INT 1
12703: NEG
12704: PUSH
12705: EMPTY
12706: LIST
12707: LIST
12708: PUSH
12709: LD_INT 2
12711: PUSH
12712: LD_INT 0
12714: PUSH
12715: EMPTY
12716: LIST
12717: LIST
12718: PUSH
12719: LD_INT 2
12721: PUSH
12722: LD_INT 1
12724: PUSH
12725: EMPTY
12726: LIST
12727: LIST
12728: PUSH
12729: LD_INT 2
12731: PUSH
12732: LD_INT 2
12734: PUSH
12735: EMPTY
12736: LIST
12737: LIST
12738: PUSH
12739: LD_INT 1
12741: PUSH
12742: LD_INT 2
12744: PUSH
12745: EMPTY
12746: LIST
12747: LIST
12748: PUSH
12749: LD_INT 0
12751: PUSH
12752: LD_INT 2
12754: PUSH
12755: EMPTY
12756: LIST
12757: LIST
12758: PUSH
12759: LD_INT 1
12761: NEG
12762: PUSH
12763: LD_INT 1
12765: PUSH
12766: EMPTY
12767: LIST
12768: LIST
12769: PUSH
12770: LD_INT 2
12772: NEG
12773: PUSH
12774: LD_INT 0
12776: PUSH
12777: EMPTY
12778: LIST
12779: LIST
12780: PUSH
12781: LD_INT 2
12783: NEG
12784: PUSH
12785: LD_INT 1
12787: NEG
12788: PUSH
12789: EMPTY
12790: LIST
12791: LIST
12792: PUSH
12793: LD_INT 2
12795: NEG
12796: PUSH
12797: LD_INT 2
12799: NEG
12800: PUSH
12801: EMPTY
12802: LIST
12803: LIST
12804: PUSH
12805: LD_INT 1
12807: NEG
12808: PUSH
12809: LD_INT 2
12811: PUSH
12812: EMPTY
12813: LIST
12814: LIST
12815: PUSH
12816: LD_INT 2
12818: NEG
12819: PUSH
12820: LD_INT 1
12822: PUSH
12823: EMPTY
12824: LIST
12825: LIST
12826: PUSH
12827: LD_INT 3
12829: NEG
12830: PUSH
12831: LD_INT 1
12833: NEG
12834: PUSH
12835: EMPTY
12836: LIST
12837: LIST
12838: PUSH
12839: LD_INT 3
12841: NEG
12842: PUSH
12843: LD_INT 2
12845: NEG
12846: PUSH
12847: EMPTY
12848: LIST
12849: LIST
12850: PUSH
12851: EMPTY
12852: LIST
12853: LIST
12854: LIST
12855: LIST
12856: LIST
12857: LIST
12858: LIST
12859: LIST
12860: LIST
12861: LIST
12862: LIST
12863: LIST
12864: LIST
12865: LIST
12866: LIST
12867: LIST
12868: LIST
12869: LIST
12870: LIST
12871: LIST
12872: LIST
12873: LIST
12874: LIST
12875: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12876: LD_ADDR_VAR 0 28
12880: PUSH
12881: LD_INT 0
12883: PUSH
12884: LD_INT 0
12886: PUSH
12887: EMPTY
12888: LIST
12889: LIST
12890: PUSH
12891: LD_INT 0
12893: PUSH
12894: LD_INT 1
12896: NEG
12897: PUSH
12898: EMPTY
12899: LIST
12900: LIST
12901: PUSH
12902: LD_INT 1
12904: PUSH
12905: LD_INT 0
12907: PUSH
12908: EMPTY
12909: LIST
12910: LIST
12911: PUSH
12912: LD_INT 1
12914: PUSH
12915: LD_INT 1
12917: PUSH
12918: EMPTY
12919: LIST
12920: LIST
12921: PUSH
12922: LD_INT 0
12924: PUSH
12925: LD_INT 1
12927: PUSH
12928: EMPTY
12929: LIST
12930: LIST
12931: PUSH
12932: LD_INT 1
12934: NEG
12935: PUSH
12936: LD_INT 0
12938: PUSH
12939: EMPTY
12940: LIST
12941: LIST
12942: PUSH
12943: LD_INT 1
12945: NEG
12946: PUSH
12947: LD_INT 1
12949: NEG
12950: PUSH
12951: EMPTY
12952: LIST
12953: LIST
12954: PUSH
12955: LD_INT 1
12957: NEG
12958: PUSH
12959: LD_INT 2
12961: NEG
12962: PUSH
12963: EMPTY
12964: LIST
12965: LIST
12966: PUSH
12967: LD_INT 0
12969: PUSH
12970: LD_INT 2
12972: NEG
12973: PUSH
12974: EMPTY
12975: LIST
12976: LIST
12977: PUSH
12978: LD_INT 1
12980: PUSH
12981: LD_INT 1
12983: NEG
12984: PUSH
12985: EMPTY
12986: LIST
12987: LIST
12988: PUSH
12989: LD_INT 2
12991: PUSH
12992: LD_INT 0
12994: PUSH
12995: EMPTY
12996: LIST
12997: LIST
12998: PUSH
12999: LD_INT 2
13001: PUSH
13002: LD_INT 1
13004: PUSH
13005: EMPTY
13006: LIST
13007: LIST
13008: PUSH
13009: LD_INT 2
13011: PUSH
13012: LD_INT 2
13014: PUSH
13015: EMPTY
13016: LIST
13017: LIST
13018: PUSH
13019: LD_INT 1
13021: PUSH
13022: LD_INT 2
13024: PUSH
13025: EMPTY
13026: LIST
13027: LIST
13028: PUSH
13029: LD_INT 0
13031: PUSH
13032: LD_INT 2
13034: PUSH
13035: EMPTY
13036: LIST
13037: LIST
13038: PUSH
13039: LD_INT 1
13041: NEG
13042: PUSH
13043: LD_INT 1
13045: PUSH
13046: EMPTY
13047: LIST
13048: LIST
13049: PUSH
13050: LD_INT 2
13052: NEG
13053: PUSH
13054: LD_INT 0
13056: PUSH
13057: EMPTY
13058: LIST
13059: LIST
13060: PUSH
13061: LD_INT 2
13063: NEG
13064: PUSH
13065: LD_INT 1
13067: NEG
13068: PUSH
13069: EMPTY
13070: LIST
13071: LIST
13072: PUSH
13073: LD_INT 2
13075: NEG
13076: PUSH
13077: LD_INT 2
13079: NEG
13080: PUSH
13081: EMPTY
13082: LIST
13083: LIST
13084: PUSH
13085: LD_INT 2
13087: NEG
13088: PUSH
13089: LD_INT 3
13091: NEG
13092: PUSH
13093: EMPTY
13094: LIST
13095: LIST
13096: PUSH
13097: LD_INT 1
13099: NEG
13100: PUSH
13101: LD_INT 3
13103: NEG
13104: PUSH
13105: EMPTY
13106: LIST
13107: LIST
13108: PUSH
13109: LD_INT 3
13111: NEG
13112: PUSH
13113: LD_INT 1
13115: NEG
13116: PUSH
13117: EMPTY
13118: LIST
13119: LIST
13120: PUSH
13121: LD_INT 3
13123: NEG
13124: PUSH
13125: LD_INT 2
13127: NEG
13128: PUSH
13129: EMPTY
13130: LIST
13131: LIST
13132: PUSH
13133: EMPTY
13134: LIST
13135: LIST
13136: LIST
13137: LIST
13138: LIST
13139: LIST
13140: LIST
13141: LIST
13142: LIST
13143: LIST
13144: LIST
13145: LIST
13146: LIST
13147: LIST
13148: LIST
13149: LIST
13150: LIST
13151: LIST
13152: LIST
13153: LIST
13154: LIST
13155: LIST
13156: LIST
13157: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13158: LD_ADDR_VAR 0 29
13162: PUSH
13163: LD_INT 0
13165: PUSH
13166: LD_INT 0
13168: PUSH
13169: EMPTY
13170: LIST
13171: LIST
13172: PUSH
13173: LD_INT 0
13175: PUSH
13176: LD_INT 1
13178: NEG
13179: PUSH
13180: EMPTY
13181: LIST
13182: LIST
13183: PUSH
13184: LD_INT 1
13186: PUSH
13187: LD_INT 0
13189: PUSH
13190: EMPTY
13191: LIST
13192: LIST
13193: PUSH
13194: LD_INT 1
13196: PUSH
13197: LD_INT 1
13199: PUSH
13200: EMPTY
13201: LIST
13202: LIST
13203: PUSH
13204: LD_INT 0
13206: PUSH
13207: LD_INT 1
13209: PUSH
13210: EMPTY
13211: LIST
13212: LIST
13213: PUSH
13214: LD_INT 1
13216: NEG
13217: PUSH
13218: LD_INT 0
13220: PUSH
13221: EMPTY
13222: LIST
13223: LIST
13224: PUSH
13225: LD_INT 1
13227: NEG
13228: PUSH
13229: LD_INT 1
13231: NEG
13232: PUSH
13233: EMPTY
13234: LIST
13235: LIST
13236: PUSH
13237: LD_INT 1
13239: NEG
13240: PUSH
13241: LD_INT 2
13243: NEG
13244: PUSH
13245: EMPTY
13246: LIST
13247: LIST
13248: PUSH
13249: LD_INT 0
13251: PUSH
13252: LD_INT 2
13254: NEG
13255: PUSH
13256: EMPTY
13257: LIST
13258: LIST
13259: PUSH
13260: LD_INT 1
13262: PUSH
13263: LD_INT 1
13265: NEG
13266: PUSH
13267: EMPTY
13268: LIST
13269: LIST
13270: PUSH
13271: LD_INT 2
13273: PUSH
13274: LD_INT 0
13276: PUSH
13277: EMPTY
13278: LIST
13279: LIST
13280: PUSH
13281: LD_INT 2
13283: PUSH
13284: LD_INT 1
13286: PUSH
13287: EMPTY
13288: LIST
13289: LIST
13290: PUSH
13291: LD_INT 1
13293: PUSH
13294: LD_INT 2
13296: PUSH
13297: EMPTY
13298: LIST
13299: LIST
13300: PUSH
13301: LD_INT 0
13303: PUSH
13304: LD_INT 2
13306: PUSH
13307: EMPTY
13308: LIST
13309: LIST
13310: PUSH
13311: LD_INT 1
13313: NEG
13314: PUSH
13315: LD_INT 1
13317: PUSH
13318: EMPTY
13319: LIST
13320: LIST
13321: PUSH
13322: LD_INT 2
13324: NEG
13325: PUSH
13326: LD_INT 1
13328: NEG
13329: PUSH
13330: EMPTY
13331: LIST
13332: LIST
13333: PUSH
13334: LD_INT 2
13336: NEG
13337: PUSH
13338: LD_INT 2
13340: NEG
13341: PUSH
13342: EMPTY
13343: LIST
13344: LIST
13345: PUSH
13346: LD_INT 2
13348: NEG
13349: PUSH
13350: LD_INT 3
13352: NEG
13353: PUSH
13354: EMPTY
13355: LIST
13356: LIST
13357: PUSH
13358: LD_INT 2
13360: PUSH
13361: LD_INT 1
13363: NEG
13364: PUSH
13365: EMPTY
13366: LIST
13367: LIST
13368: PUSH
13369: LD_INT 3
13371: PUSH
13372: LD_INT 1
13374: PUSH
13375: EMPTY
13376: LIST
13377: LIST
13378: PUSH
13379: LD_INT 1
13381: PUSH
13382: LD_INT 3
13384: PUSH
13385: EMPTY
13386: LIST
13387: LIST
13388: PUSH
13389: LD_INT 1
13391: NEG
13392: PUSH
13393: LD_INT 2
13395: PUSH
13396: EMPTY
13397: LIST
13398: LIST
13399: PUSH
13400: LD_INT 3
13402: NEG
13403: PUSH
13404: LD_INT 2
13406: NEG
13407: PUSH
13408: EMPTY
13409: LIST
13410: LIST
13411: PUSH
13412: EMPTY
13413: LIST
13414: LIST
13415: LIST
13416: LIST
13417: LIST
13418: LIST
13419: LIST
13420: LIST
13421: LIST
13422: LIST
13423: LIST
13424: LIST
13425: LIST
13426: LIST
13427: LIST
13428: LIST
13429: LIST
13430: LIST
13431: LIST
13432: LIST
13433: LIST
13434: LIST
13435: LIST
13436: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13437: LD_ADDR_VAR 0 30
13441: PUSH
13442: LD_INT 0
13444: PUSH
13445: LD_INT 0
13447: PUSH
13448: EMPTY
13449: LIST
13450: LIST
13451: PUSH
13452: LD_INT 0
13454: PUSH
13455: LD_INT 1
13457: NEG
13458: PUSH
13459: EMPTY
13460: LIST
13461: LIST
13462: PUSH
13463: LD_INT 1
13465: PUSH
13466: LD_INT 0
13468: PUSH
13469: EMPTY
13470: LIST
13471: LIST
13472: PUSH
13473: LD_INT 1
13475: PUSH
13476: LD_INT 1
13478: PUSH
13479: EMPTY
13480: LIST
13481: LIST
13482: PUSH
13483: LD_INT 0
13485: PUSH
13486: LD_INT 1
13488: PUSH
13489: EMPTY
13490: LIST
13491: LIST
13492: PUSH
13493: LD_INT 1
13495: NEG
13496: PUSH
13497: LD_INT 0
13499: PUSH
13500: EMPTY
13501: LIST
13502: LIST
13503: PUSH
13504: LD_INT 1
13506: NEG
13507: PUSH
13508: LD_INT 1
13510: NEG
13511: PUSH
13512: EMPTY
13513: LIST
13514: LIST
13515: PUSH
13516: LD_INT 1
13518: NEG
13519: PUSH
13520: LD_INT 2
13522: NEG
13523: PUSH
13524: EMPTY
13525: LIST
13526: LIST
13527: PUSH
13528: LD_INT 0
13530: PUSH
13531: LD_INT 2
13533: NEG
13534: PUSH
13535: EMPTY
13536: LIST
13537: LIST
13538: PUSH
13539: LD_INT 1
13541: PUSH
13542: LD_INT 1
13544: NEG
13545: PUSH
13546: EMPTY
13547: LIST
13548: LIST
13549: PUSH
13550: LD_INT 2
13552: PUSH
13553: LD_INT 0
13555: PUSH
13556: EMPTY
13557: LIST
13558: LIST
13559: PUSH
13560: LD_INT 2
13562: PUSH
13563: LD_INT 1
13565: PUSH
13566: EMPTY
13567: LIST
13568: LIST
13569: PUSH
13570: LD_INT 2
13572: PUSH
13573: LD_INT 2
13575: PUSH
13576: EMPTY
13577: LIST
13578: LIST
13579: PUSH
13580: LD_INT 1
13582: PUSH
13583: LD_INT 2
13585: PUSH
13586: EMPTY
13587: LIST
13588: LIST
13589: PUSH
13590: LD_INT 1
13592: NEG
13593: PUSH
13594: LD_INT 1
13596: PUSH
13597: EMPTY
13598: LIST
13599: LIST
13600: PUSH
13601: LD_INT 2
13603: NEG
13604: PUSH
13605: LD_INT 0
13607: PUSH
13608: EMPTY
13609: LIST
13610: LIST
13611: PUSH
13612: LD_INT 2
13614: NEG
13615: PUSH
13616: LD_INT 1
13618: NEG
13619: PUSH
13620: EMPTY
13621: LIST
13622: LIST
13623: PUSH
13624: LD_INT 1
13626: NEG
13627: PUSH
13628: LD_INT 3
13630: NEG
13631: PUSH
13632: EMPTY
13633: LIST
13634: LIST
13635: PUSH
13636: LD_INT 1
13638: PUSH
13639: LD_INT 2
13641: NEG
13642: PUSH
13643: EMPTY
13644: LIST
13645: LIST
13646: PUSH
13647: LD_INT 3
13649: PUSH
13650: LD_INT 2
13652: PUSH
13653: EMPTY
13654: LIST
13655: LIST
13656: PUSH
13657: LD_INT 2
13659: PUSH
13660: LD_INT 3
13662: PUSH
13663: EMPTY
13664: LIST
13665: LIST
13666: PUSH
13667: LD_INT 2
13669: NEG
13670: PUSH
13671: LD_INT 1
13673: PUSH
13674: EMPTY
13675: LIST
13676: LIST
13677: PUSH
13678: LD_INT 3
13680: NEG
13681: PUSH
13682: LD_INT 1
13684: NEG
13685: PUSH
13686: EMPTY
13687: LIST
13688: LIST
13689: PUSH
13690: EMPTY
13691: LIST
13692: LIST
13693: LIST
13694: LIST
13695: LIST
13696: LIST
13697: LIST
13698: LIST
13699: LIST
13700: LIST
13701: LIST
13702: LIST
13703: LIST
13704: LIST
13705: LIST
13706: LIST
13707: LIST
13708: LIST
13709: LIST
13710: LIST
13711: LIST
13712: LIST
13713: LIST
13714: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13715: LD_ADDR_VAR 0 31
13719: PUSH
13720: LD_INT 0
13722: PUSH
13723: LD_INT 0
13725: PUSH
13726: EMPTY
13727: LIST
13728: LIST
13729: PUSH
13730: LD_INT 0
13732: PUSH
13733: LD_INT 1
13735: NEG
13736: PUSH
13737: EMPTY
13738: LIST
13739: LIST
13740: PUSH
13741: LD_INT 1
13743: PUSH
13744: LD_INT 0
13746: PUSH
13747: EMPTY
13748: LIST
13749: LIST
13750: PUSH
13751: LD_INT 1
13753: PUSH
13754: LD_INT 1
13756: PUSH
13757: EMPTY
13758: LIST
13759: LIST
13760: PUSH
13761: LD_INT 0
13763: PUSH
13764: LD_INT 1
13766: PUSH
13767: EMPTY
13768: LIST
13769: LIST
13770: PUSH
13771: LD_INT 1
13773: NEG
13774: PUSH
13775: LD_INT 0
13777: PUSH
13778: EMPTY
13779: LIST
13780: LIST
13781: PUSH
13782: LD_INT 1
13784: NEG
13785: PUSH
13786: LD_INT 1
13788: NEG
13789: PUSH
13790: EMPTY
13791: LIST
13792: LIST
13793: PUSH
13794: LD_INT 1
13796: NEG
13797: PUSH
13798: LD_INT 2
13800: NEG
13801: PUSH
13802: EMPTY
13803: LIST
13804: LIST
13805: PUSH
13806: LD_INT 1
13808: PUSH
13809: LD_INT 1
13811: NEG
13812: PUSH
13813: EMPTY
13814: LIST
13815: LIST
13816: PUSH
13817: LD_INT 2
13819: PUSH
13820: LD_INT 0
13822: PUSH
13823: EMPTY
13824: LIST
13825: LIST
13826: PUSH
13827: LD_INT 2
13829: PUSH
13830: LD_INT 1
13832: PUSH
13833: EMPTY
13834: LIST
13835: LIST
13836: PUSH
13837: LD_INT 2
13839: PUSH
13840: LD_INT 2
13842: PUSH
13843: EMPTY
13844: LIST
13845: LIST
13846: PUSH
13847: LD_INT 1
13849: PUSH
13850: LD_INT 2
13852: PUSH
13853: EMPTY
13854: LIST
13855: LIST
13856: PUSH
13857: LD_INT 0
13859: PUSH
13860: LD_INT 2
13862: PUSH
13863: EMPTY
13864: LIST
13865: LIST
13866: PUSH
13867: LD_INT 1
13869: NEG
13870: PUSH
13871: LD_INT 1
13873: PUSH
13874: EMPTY
13875: LIST
13876: LIST
13877: PUSH
13878: LD_INT 2
13880: NEG
13881: PUSH
13882: LD_INT 1
13884: NEG
13885: PUSH
13886: EMPTY
13887: LIST
13888: LIST
13889: PUSH
13890: LD_INT 2
13892: NEG
13893: PUSH
13894: LD_INT 2
13896: NEG
13897: PUSH
13898: EMPTY
13899: LIST
13900: LIST
13901: PUSH
13902: LD_INT 2
13904: NEG
13905: PUSH
13906: LD_INT 3
13908: NEG
13909: PUSH
13910: EMPTY
13911: LIST
13912: LIST
13913: PUSH
13914: LD_INT 2
13916: PUSH
13917: LD_INT 1
13919: NEG
13920: PUSH
13921: EMPTY
13922: LIST
13923: LIST
13924: PUSH
13925: LD_INT 3
13927: PUSH
13928: LD_INT 1
13930: PUSH
13931: EMPTY
13932: LIST
13933: LIST
13934: PUSH
13935: LD_INT 1
13937: PUSH
13938: LD_INT 3
13940: PUSH
13941: EMPTY
13942: LIST
13943: LIST
13944: PUSH
13945: LD_INT 1
13947: NEG
13948: PUSH
13949: LD_INT 2
13951: PUSH
13952: EMPTY
13953: LIST
13954: LIST
13955: PUSH
13956: LD_INT 3
13958: NEG
13959: PUSH
13960: LD_INT 2
13962: NEG
13963: PUSH
13964: EMPTY
13965: LIST
13966: LIST
13967: PUSH
13968: EMPTY
13969: LIST
13970: LIST
13971: LIST
13972: LIST
13973: LIST
13974: LIST
13975: LIST
13976: LIST
13977: LIST
13978: LIST
13979: LIST
13980: LIST
13981: LIST
13982: LIST
13983: LIST
13984: LIST
13985: LIST
13986: LIST
13987: LIST
13988: LIST
13989: LIST
13990: LIST
13991: LIST
13992: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13993: LD_ADDR_VAR 0 32
13997: PUSH
13998: LD_INT 0
14000: PUSH
14001: LD_INT 0
14003: PUSH
14004: EMPTY
14005: LIST
14006: LIST
14007: PUSH
14008: LD_INT 0
14010: PUSH
14011: LD_INT 1
14013: NEG
14014: PUSH
14015: EMPTY
14016: LIST
14017: LIST
14018: PUSH
14019: LD_INT 1
14021: PUSH
14022: LD_INT 0
14024: PUSH
14025: EMPTY
14026: LIST
14027: LIST
14028: PUSH
14029: LD_INT 1
14031: PUSH
14032: LD_INT 1
14034: PUSH
14035: EMPTY
14036: LIST
14037: LIST
14038: PUSH
14039: LD_INT 0
14041: PUSH
14042: LD_INT 1
14044: PUSH
14045: EMPTY
14046: LIST
14047: LIST
14048: PUSH
14049: LD_INT 1
14051: NEG
14052: PUSH
14053: LD_INT 0
14055: PUSH
14056: EMPTY
14057: LIST
14058: LIST
14059: PUSH
14060: LD_INT 1
14062: NEG
14063: PUSH
14064: LD_INT 1
14066: NEG
14067: PUSH
14068: EMPTY
14069: LIST
14070: LIST
14071: PUSH
14072: LD_INT 1
14074: NEG
14075: PUSH
14076: LD_INT 2
14078: NEG
14079: PUSH
14080: EMPTY
14081: LIST
14082: LIST
14083: PUSH
14084: LD_INT 0
14086: PUSH
14087: LD_INT 2
14089: NEG
14090: PUSH
14091: EMPTY
14092: LIST
14093: LIST
14094: PUSH
14095: LD_INT 1
14097: PUSH
14098: LD_INT 1
14100: NEG
14101: PUSH
14102: EMPTY
14103: LIST
14104: LIST
14105: PUSH
14106: LD_INT 2
14108: PUSH
14109: LD_INT 1
14111: PUSH
14112: EMPTY
14113: LIST
14114: LIST
14115: PUSH
14116: LD_INT 2
14118: PUSH
14119: LD_INT 2
14121: PUSH
14122: EMPTY
14123: LIST
14124: LIST
14125: PUSH
14126: LD_INT 1
14128: PUSH
14129: LD_INT 2
14131: PUSH
14132: EMPTY
14133: LIST
14134: LIST
14135: PUSH
14136: LD_INT 0
14138: PUSH
14139: LD_INT 2
14141: PUSH
14142: EMPTY
14143: LIST
14144: LIST
14145: PUSH
14146: LD_INT 1
14148: NEG
14149: PUSH
14150: LD_INT 1
14152: PUSH
14153: EMPTY
14154: LIST
14155: LIST
14156: PUSH
14157: LD_INT 2
14159: NEG
14160: PUSH
14161: LD_INT 0
14163: PUSH
14164: EMPTY
14165: LIST
14166: LIST
14167: PUSH
14168: LD_INT 2
14170: NEG
14171: PUSH
14172: LD_INT 1
14174: NEG
14175: PUSH
14176: EMPTY
14177: LIST
14178: LIST
14179: PUSH
14180: LD_INT 1
14182: NEG
14183: PUSH
14184: LD_INT 3
14186: NEG
14187: PUSH
14188: EMPTY
14189: LIST
14190: LIST
14191: PUSH
14192: LD_INT 1
14194: PUSH
14195: LD_INT 2
14197: NEG
14198: PUSH
14199: EMPTY
14200: LIST
14201: LIST
14202: PUSH
14203: LD_INT 3
14205: PUSH
14206: LD_INT 2
14208: PUSH
14209: EMPTY
14210: LIST
14211: LIST
14212: PUSH
14213: LD_INT 2
14215: PUSH
14216: LD_INT 3
14218: PUSH
14219: EMPTY
14220: LIST
14221: LIST
14222: PUSH
14223: LD_INT 2
14225: NEG
14226: PUSH
14227: LD_INT 1
14229: PUSH
14230: EMPTY
14231: LIST
14232: LIST
14233: PUSH
14234: LD_INT 3
14236: NEG
14237: PUSH
14238: LD_INT 1
14240: NEG
14241: PUSH
14242: EMPTY
14243: LIST
14244: LIST
14245: PUSH
14246: EMPTY
14247: LIST
14248: LIST
14249: LIST
14250: LIST
14251: LIST
14252: LIST
14253: LIST
14254: LIST
14255: LIST
14256: LIST
14257: LIST
14258: LIST
14259: LIST
14260: LIST
14261: LIST
14262: LIST
14263: LIST
14264: LIST
14265: LIST
14266: LIST
14267: LIST
14268: LIST
14269: LIST
14270: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14271: LD_ADDR_VAR 0 33
14275: PUSH
14276: LD_INT 0
14278: PUSH
14279: LD_INT 0
14281: PUSH
14282: EMPTY
14283: LIST
14284: LIST
14285: PUSH
14286: LD_INT 0
14288: PUSH
14289: LD_INT 1
14291: NEG
14292: PUSH
14293: EMPTY
14294: LIST
14295: LIST
14296: PUSH
14297: LD_INT 1
14299: PUSH
14300: LD_INT 0
14302: PUSH
14303: EMPTY
14304: LIST
14305: LIST
14306: PUSH
14307: LD_INT 1
14309: PUSH
14310: LD_INT 1
14312: PUSH
14313: EMPTY
14314: LIST
14315: LIST
14316: PUSH
14317: LD_INT 0
14319: PUSH
14320: LD_INT 1
14322: PUSH
14323: EMPTY
14324: LIST
14325: LIST
14326: PUSH
14327: LD_INT 1
14329: NEG
14330: PUSH
14331: LD_INT 0
14333: PUSH
14334: EMPTY
14335: LIST
14336: LIST
14337: PUSH
14338: LD_INT 1
14340: NEG
14341: PUSH
14342: LD_INT 1
14344: NEG
14345: PUSH
14346: EMPTY
14347: LIST
14348: LIST
14349: PUSH
14350: LD_INT 1
14352: NEG
14353: PUSH
14354: LD_INT 2
14356: NEG
14357: PUSH
14358: EMPTY
14359: LIST
14360: LIST
14361: PUSH
14362: LD_INT 1
14364: PUSH
14365: LD_INT 1
14367: NEG
14368: PUSH
14369: EMPTY
14370: LIST
14371: LIST
14372: PUSH
14373: LD_INT 2
14375: PUSH
14376: LD_INT 0
14378: PUSH
14379: EMPTY
14380: LIST
14381: LIST
14382: PUSH
14383: LD_INT 2
14385: PUSH
14386: LD_INT 1
14388: PUSH
14389: EMPTY
14390: LIST
14391: LIST
14392: PUSH
14393: LD_INT 1
14395: PUSH
14396: LD_INT 2
14398: PUSH
14399: EMPTY
14400: LIST
14401: LIST
14402: PUSH
14403: LD_INT 0
14405: PUSH
14406: LD_INT 2
14408: PUSH
14409: EMPTY
14410: LIST
14411: LIST
14412: PUSH
14413: LD_INT 1
14415: NEG
14416: PUSH
14417: LD_INT 1
14419: PUSH
14420: EMPTY
14421: LIST
14422: LIST
14423: PUSH
14424: LD_INT 2
14426: NEG
14427: PUSH
14428: LD_INT 0
14430: PUSH
14431: EMPTY
14432: LIST
14433: LIST
14434: PUSH
14435: LD_INT 2
14437: NEG
14438: PUSH
14439: LD_INT 1
14441: NEG
14442: PUSH
14443: EMPTY
14444: LIST
14445: LIST
14446: PUSH
14447: LD_INT 2
14449: NEG
14450: PUSH
14451: LD_INT 2
14453: NEG
14454: PUSH
14455: EMPTY
14456: LIST
14457: LIST
14458: PUSH
14459: LD_INT 2
14461: NEG
14462: PUSH
14463: LD_INT 3
14465: NEG
14466: PUSH
14467: EMPTY
14468: LIST
14469: LIST
14470: PUSH
14471: LD_INT 2
14473: PUSH
14474: LD_INT 1
14476: NEG
14477: PUSH
14478: EMPTY
14479: LIST
14480: LIST
14481: PUSH
14482: LD_INT 3
14484: PUSH
14485: LD_INT 1
14487: PUSH
14488: EMPTY
14489: LIST
14490: LIST
14491: PUSH
14492: LD_INT 1
14494: PUSH
14495: LD_INT 3
14497: PUSH
14498: EMPTY
14499: LIST
14500: LIST
14501: PUSH
14502: LD_INT 1
14504: NEG
14505: PUSH
14506: LD_INT 2
14508: PUSH
14509: EMPTY
14510: LIST
14511: LIST
14512: PUSH
14513: LD_INT 3
14515: NEG
14516: PUSH
14517: LD_INT 2
14519: NEG
14520: PUSH
14521: EMPTY
14522: LIST
14523: LIST
14524: PUSH
14525: EMPTY
14526: LIST
14527: LIST
14528: LIST
14529: LIST
14530: LIST
14531: LIST
14532: LIST
14533: LIST
14534: LIST
14535: LIST
14536: LIST
14537: LIST
14538: LIST
14539: LIST
14540: LIST
14541: LIST
14542: LIST
14543: LIST
14544: LIST
14545: LIST
14546: LIST
14547: LIST
14548: LIST
14549: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14550: LD_ADDR_VAR 0 34
14554: PUSH
14555: LD_INT 0
14557: PUSH
14558: LD_INT 0
14560: PUSH
14561: EMPTY
14562: LIST
14563: LIST
14564: PUSH
14565: LD_INT 0
14567: PUSH
14568: LD_INT 1
14570: NEG
14571: PUSH
14572: EMPTY
14573: LIST
14574: LIST
14575: PUSH
14576: LD_INT 1
14578: PUSH
14579: LD_INT 0
14581: PUSH
14582: EMPTY
14583: LIST
14584: LIST
14585: PUSH
14586: LD_INT 1
14588: PUSH
14589: LD_INT 1
14591: PUSH
14592: EMPTY
14593: LIST
14594: LIST
14595: PUSH
14596: LD_INT 0
14598: PUSH
14599: LD_INT 1
14601: PUSH
14602: EMPTY
14603: LIST
14604: LIST
14605: PUSH
14606: LD_INT 1
14608: NEG
14609: PUSH
14610: LD_INT 0
14612: PUSH
14613: EMPTY
14614: LIST
14615: LIST
14616: PUSH
14617: LD_INT 1
14619: NEG
14620: PUSH
14621: LD_INT 1
14623: NEG
14624: PUSH
14625: EMPTY
14626: LIST
14627: LIST
14628: PUSH
14629: LD_INT 1
14631: NEG
14632: PUSH
14633: LD_INT 2
14635: NEG
14636: PUSH
14637: EMPTY
14638: LIST
14639: LIST
14640: PUSH
14641: LD_INT 0
14643: PUSH
14644: LD_INT 2
14646: NEG
14647: PUSH
14648: EMPTY
14649: LIST
14650: LIST
14651: PUSH
14652: LD_INT 1
14654: PUSH
14655: LD_INT 1
14657: NEG
14658: PUSH
14659: EMPTY
14660: LIST
14661: LIST
14662: PUSH
14663: LD_INT 2
14665: PUSH
14666: LD_INT 1
14668: PUSH
14669: EMPTY
14670: LIST
14671: LIST
14672: PUSH
14673: LD_INT 2
14675: PUSH
14676: LD_INT 2
14678: PUSH
14679: EMPTY
14680: LIST
14681: LIST
14682: PUSH
14683: LD_INT 1
14685: PUSH
14686: LD_INT 2
14688: PUSH
14689: EMPTY
14690: LIST
14691: LIST
14692: PUSH
14693: LD_INT 1
14695: NEG
14696: PUSH
14697: LD_INT 1
14699: PUSH
14700: EMPTY
14701: LIST
14702: LIST
14703: PUSH
14704: LD_INT 2
14706: NEG
14707: PUSH
14708: LD_INT 0
14710: PUSH
14711: EMPTY
14712: LIST
14713: LIST
14714: PUSH
14715: LD_INT 2
14717: NEG
14718: PUSH
14719: LD_INT 1
14721: NEG
14722: PUSH
14723: EMPTY
14724: LIST
14725: LIST
14726: PUSH
14727: LD_INT 2
14729: NEG
14730: PUSH
14731: LD_INT 2
14733: NEG
14734: PUSH
14735: EMPTY
14736: LIST
14737: LIST
14738: PUSH
14739: LD_INT 1
14741: NEG
14742: PUSH
14743: LD_INT 3
14745: NEG
14746: PUSH
14747: EMPTY
14748: LIST
14749: LIST
14750: PUSH
14751: LD_INT 1
14753: PUSH
14754: LD_INT 2
14756: NEG
14757: PUSH
14758: EMPTY
14759: LIST
14760: LIST
14761: PUSH
14762: LD_INT 3
14764: PUSH
14765: LD_INT 2
14767: PUSH
14768: EMPTY
14769: LIST
14770: LIST
14771: PUSH
14772: LD_INT 2
14774: PUSH
14775: LD_INT 3
14777: PUSH
14778: EMPTY
14779: LIST
14780: LIST
14781: PUSH
14782: LD_INT 2
14784: NEG
14785: PUSH
14786: LD_INT 1
14788: PUSH
14789: EMPTY
14790: LIST
14791: LIST
14792: PUSH
14793: LD_INT 3
14795: NEG
14796: PUSH
14797: LD_INT 1
14799: NEG
14800: PUSH
14801: EMPTY
14802: LIST
14803: LIST
14804: PUSH
14805: EMPTY
14806: LIST
14807: LIST
14808: LIST
14809: LIST
14810: LIST
14811: LIST
14812: LIST
14813: LIST
14814: LIST
14815: LIST
14816: LIST
14817: LIST
14818: LIST
14819: LIST
14820: LIST
14821: LIST
14822: LIST
14823: LIST
14824: LIST
14825: LIST
14826: LIST
14827: LIST
14828: LIST
14829: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14830: LD_ADDR_VAR 0 35
14834: PUSH
14835: LD_INT 0
14837: PUSH
14838: LD_INT 0
14840: PUSH
14841: EMPTY
14842: LIST
14843: LIST
14844: PUSH
14845: LD_INT 0
14847: PUSH
14848: LD_INT 1
14850: NEG
14851: PUSH
14852: EMPTY
14853: LIST
14854: LIST
14855: PUSH
14856: LD_INT 1
14858: PUSH
14859: LD_INT 0
14861: PUSH
14862: EMPTY
14863: LIST
14864: LIST
14865: PUSH
14866: LD_INT 1
14868: PUSH
14869: LD_INT 1
14871: PUSH
14872: EMPTY
14873: LIST
14874: LIST
14875: PUSH
14876: LD_INT 0
14878: PUSH
14879: LD_INT 1
14881: PUSH
14882: EMPTY
14883: LIST
14884: LIST
14885: PUSH
14886: LD_INT 1
14888: NEG
14889: PUSH
14890: LD_INT 0
14892: PUSH
14893: EMPTY
14894: LIST
14895: LIST
14896: PUSH
14897: LD_INT 1
14899: NEG
14900: PUSH
14901: LD_INT 1
14903: NEG
14904: PUSH
14905: EMPTY
14906: LIST
14907: LIST
14908: PUSH
14909: LD_INT 2
14911: PUSH
14912: LD_INT 1
14914: PUSH
14915: EMPTY
14916: LIST
14917: LIST
14918: PUSH
14919: LD_INT 2
14921: NEG
14922: PUSH
14923: LD_INT 1
14925: NEG
14926: PUSH
14927: EMPTY
14928: LIST
14929: LIST
14930: PUSH
14931: EMPTY
14932: LIST
14933: LIST
14934: LIST
14935: LIST
14936: LIST
14937: LIST
14938: LIST
14939: LIST
14940: LIST
14941: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14942: LD_ADDR_VAR 0 36
14946: PUSH
14947: LD_INT 0
14949: PUSH
14950: LD_INT 0
14952: PUSH
14953: EMPTY
14954: LIST
14955: LIST
14956: PUSH
14957: LD_INT 0
14959: PUSH
14960: LD_INT 1
14962: NEG
14963: PUSH
14964: EMPTY
14965: LIST
14966: LIST
14967: PUSH
14968: LD_INT 1
14970: PUSH
14971: LD_INT 0
14973: PUSH
14974: EMPTY
14975: LIST
14976: LIST
14977: PUSH
14978: LD_INT 1
14980: PUSH
14981: LD_INT 1
14983: PUSH
14984: EMPTY
14985: LIST
14986: LIST
14987: PUSH
14988: LD_INT 0
14990: PUSH
14991: LD_INT 1
14993: PUSH
14994: EMPTY
14995: LIST
14996: LIST
14997: PUSH
14998: LD_INT 1
15000: NEG
15001: PUSH
15002: LD_INT 0
15004: PUSH
15005: EMPTY
15006: LIST
15007: LIST
15008: PUSH
15009: LD_INT 1
15011: NEG
15012: PUSH
15013: LD_INT 1
15015: NEG
15016: PUSH
15017: EMPTY
15018: LIST
15019: LIST
15020: PUSH
15021: LD_INT 1
15023: NEG
15024: PUSH
15025: LD_INT 2
15027: NEG
15028: PUSH
15029: EMPTY
15030: LIST
15031: LIST
15032: PUSH
15033: LD_INT 1
15035: PUSH
15036: LD_INT 2
15038: PUSH
15039: EMPTY
15040: LIST
15041: LIST
15042: PUSH
15043: EMPTY
15044: LIST
15045: LIST
15046: LIST
15047: LIST
15048: LIST
15049: LIST
15050: LIST
15051: LIST
15052: LIST
15053: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15054: LD_ADDR_VAR 0 37
15058: PUSH
15059: LD_INT 0
15061: PUSH
15062: LD_INT 0
15064: PUSH
15065: EMPTY
15066: LIST
15067: LIST
15068: PUSH
15069: LD_INT 0
15071: PUSH
15072: LD_INT 1
15074: NEG
15075: PUSH
15076: EMPTY
15077: LIST
15078: LIST
15079: PUSH
15080: LD_INT 1
15082: PUSH
15083: LD_INT 0
15085: PUSH
15086: EMPTY
15087: LIST
15088: LIST
15089: PUSH
15090: LD_INT 1
15092: PUSH
15093: LD_INT 1
15095: PUSH
15096: EMPTY
15097: LIST
15098: LIST
15099: PUSH
15100: LD_INT 0
15102: PUSH
15103: LD_INT 1
15105: PUSH
15106: EMPTY
15107: LIST
15108: LIST
15109: PUSH
15110: LD_INT 1
15112: NEG
15113: PUSH
15114: LD_INT 0
15116: PUSH
15117: EMPTY
15118: LIST
15119: LIST
15120: PUSH
15121: LD_INT 1
15123: NEG
15124: PUSH
15125: LD_INT 1
15127: NEG
15128: PUSH
15129: EMPTY
15130: LIST
15131: LIST
15132: PUSH
15133: LD_INT 1
15135: PUSH
15136: LD_INT 1
15138: NEG
15139: PUSH
15140: EMPTY
15141: LIST
15142: LIST
15143: PUSH
15144: LD_INT 1
15146: NEG
15147: PUSH
15148: LD_INT 1
15150: PUSH
15151: EMPTY
15152: LIST
15153: LIST
15154: PUSH
15155: EMPTY
15156: LIST
15157: LIST
15158: LIST
15159: LIST
15160: LIST
15161: LIST
15162: LIST
15163: LIST
15164: LIST
15165: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15166: LD_ADDR_VAR 0 38
15170: PUSH
15171: LD_INT 0
15173: PUSH
15174: LD_INT 0
15176: PUSH
15177: EMPTY
15178: LIST
15179: LIST
15180: PUSH
15181: LD_INT 0
15183: PUSH
15184: LD_INT 1
15186: NEG
15187: PUSH
15188: EMPTY
15189: LIST
15190: LIST
15191: PUSH
15192: LD_INT 1
15194: PUSH
15195: LD_INT 0
15197: PUSH
15198: EMPTY
15199: LIST
15200: LIST
15201: PUSH
15202: LD_INT 1
15204: PUSH
15205: LD_INT 1
15207: PUSH
15208: EMPTY
15209: LIST
15210: LIST
15211: PUSH
15212: LD_INT 0
15214: PUSH
15215: LD_INT 1
15217: PUSH
15218: EMPTY
15219: LIST
15220: LIST
15221: PUSH
15222: LD_INT 1
15224: NEG
15225: PUSH
15226: LD_INT 0
15228: PUSH
15229: EMPTY
15230: LIST
15231: LIST
15232: PUSH
15233: LD_INT 1
15235: NEG
15236: PUSH
15237: LD_INT 1
15239: NEG
15240: PUSH
15241: EMPTY
15242: LIST
15243: LIST
15244: PUSH
15245: LD_INT 2
15247: PUSH
15248: LD_INT 1
15250: PUSH
15251: EMPTY
15252: LIST
15253: LIST
15254: PUSH
15255: LD_INT 2
15257: NEG
15258: PUSH
15259: LD_INT 1
15261: NEG
15262: PUSH
15263: EMPTY
15264: LIST
15265: LIST
15266: PUSH
15267: EMPTY
15268: LIST
15269: LIST
15270: LIST
15271: LIST
15272: LIST
15273: LIST
15274: LIST
15275: LIST
15276: LIST
15277: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15278: LD_ADDR_VAR 0 39
15282: PUSH
15283: LD_INT 0
15285: PUSH
15286: LD_INT 0
15288: PUSH
15289: EMPTY
15290: LIST
15291: LIST
15292: PUSH
15293: LD_INT 0
15295: PUSH
15296: LD_INT 1
15298: NEG
15299: PUSH
15300: EMPTY
15301: LIST
15302: LIST
15303: PUSH
15304: LD_INT 1
15306: PUSH
15307: LD_INT 0
15309: PUSH
15310: EMPTY
15311: LIST
15312: LIST
15313: PUSH
15314: LD_INT 1
15316: PUSH
15317: LD_INT 1
15319: PUSH
15320: EMPTY
15321: LIST
15322: LIST
15323: PUSH
15324: LD_INT 0
15326: PUSH
15327: LD_INT 1
15329: PUSH
15330: EMPTY
15331: LIST
15332: LIST
15333: PUSH
15334: LD_INT 1
15336: NEG
15337: PUSH
15338: LD_INT 0
15340: PUSH
15341: EMPTY
15342: LIST
15343: LIST
15344: PUSH
15345: LD_INT 1
15347: NEG
15348: PUSH
15349: LD_INT 1
15351: NEG
15352: PUSH
15353: EMPTY
15354: LIST
15355: LIST
15356: PUSH
15357: LD_INT 1
15359: NEG
15360: PUSH
15361: LD_INT 2
15363: NEG
15364: PUSH
15365: EMPTY
15366: LIST
15367: LIST
15368: PUSH
15369: LD_INT 1
15371: PUSH
15372: LD_INT 2
15374: PUSH
15375: EMPTY
15376: LIST
15377: LIST
15378: PUSH
15379: EMPTY
15380: LIST
15381: LIST
15382: LIST
15383: LIST
15384: LIST
15385: LIST
15386: LIST
15387: LIST
15388: LIST
15389: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15390: LD_ADDR_VAR 0 40
15394: PUSH
15395: LD_INT 0
15397: PUSH
15398: LD_INT 0
15400: PUSH
15401: EMPTY
15402: LIST
15403: LIST
15404: PUSH
15405: LD_INT 0
15407: PUSH
15408: LD_INT 1
15410: NEG
15411: PUSH
15412: EMPTY
15413: LIST
15414: LIST
15415: PUSH
15416: LD_INT 1
15418: PUSH
15419: LD_INT 0
15421: PUSH
15422: EMPTY
15423: LIST
15424: LIST
15425: PUSH
15426: LD_INT 1
15428: PUSH
15429: LD_INT 1
15431: PUSH
15432: EMPTY
15433: LIST
15434: LIST
15435: PUSH
15436: LD_INT 0
15438: PUSH
15439: LD_INT 1
15441: PUSH
15442: EMPTY
15443: LIST
15444: LIST
15445: PUSH
15446: LD_INT 1
15448: NEG
15449: PUSH
15450: LD_INT 0
15452: PUSH
15453: EMPTY
15454: LIST
15455: LIST
15456: PUSH
15457: LD_INT 1
15459: NEG
15460: PUSH
15461: LD_INT 1
15463: NEG
15464: PUSH
15465: EMPTY
15466: LIST
15467: LIST
15468: PUSH
15469: LD_INT 1
15471: PUSH
15472: LD_INT 1
15474: NEG
15475: PUSH
15476: EMPTY
15477: LIST
15478: LIST
15479: PUSH
15480: LD_INT 1
15482: NEG
15483: PUSH
15484: LD_INT 1
15486: PUSH
15487: EMPTY
15488: LIST
15489: LIST
15490: PUSH
15491: EMPTY
15492: LIST
15493: LIST
15494: LIST
15495: LIST
15496: LIST
15497: LIST
15498: LIST
15499: LIST
15500: LIST
15501: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15502: LD_ADDR_VAR 0 41
15506: PUSH
15507: LD_INT 0
15509: PUSH
15510: LD_INT 0
15512: PUSH
15513: EMPTY
15514: LIST
15515: LIST
15516: PUSH
15517: LD_INT 0
15519: PUSH
15520: LD_INT 1
15522: NEG
15523: PUSH
15524: EMPTY
15525: LIST
15526: LIST
15527: PUSH
15528: LD_INT 1
15530: PUSH
15531: LD_INT 0
15533: PUSH
15534: EMPTY
15535: LIST
15536: LIST
15537: PUSH
15538: LD_INT 1
15540: PUSH
15541: LD_INT 1
15543: PUSH
15544: EMPTY
15545: LIST
15546: LIST
15547: PUSH
15548: LD_INT 0
15550: PUSH
15551: LD_INT 1
15553: PUSH
15554: EMPTY
15555: LIST
15556: LIST
15557: PUSH
15558: LD_INT 1
15560: NEG
15561: PUSH
15562: LD_INT 0
15564: PUSH
15565: EMPTY
15566: LIST
15567: LIST
15568: PUSH
15569: LD_INT 1
15571: NEG
15572: PUSH
15573: LD_INT 1
15575: NEG
15576: PUSH
15577: EMPTY
15578: LIST
15579: LIST
15580: PUSH
15581: LD_INT 1
15583: NEG
15584: PUSH
15585: LD_INT 2
15587: NEG
15588: PUSH
15589: EMPTY
15590: LIST
15591: LIST
15592: PUSH
15593: LD_INT 1
15595: PUSH
15596: LD_INT 1
15598: NEG
15599: PUSH
15600: EMPTY
15601: LIST
15602: LIST
15603: PUSH
15604: LD_INT 2
15606: PUSH
15607: LD_INT 0
15609: PUSH
15610: EMPTY
15611: LIST
15612: LIST
15613: PUSH
15614: LD_INT 2
15616: PUSH
15617: LD_INT 1
15619: PUSH
15620: EMPTY
15621: LIST
15622: LIST
15623: PUSH
15624: LD_INT 2
15626: PUSH
15627: LD_INT 2
15629: PUSH
15630: EMPTY
15631: LIST
15632: LIST
15633: PUSH
15634: LD_INT 1
15636: PUSH
15637: LD_INT 2
15639: PUSH
15640: EMPTY
15641: LIST
15642: LIST
15643: PUSH
15644: LD_INT 1
15646: NEG
15647: PUSH
15648: LD_INT 1
15650: PUSH
15651: EMPTY
15652: LIST
15653: LIST
15654: PUSH
15655: LD_INT 2
15657: NEG
15658: PUSH
15659: LD_INT 0
15661: PUSH
15662: EMPTY
15663: LIST
15664: LIST
15665: PUSH
15666: LD_INT 2
15668: NEG
15669: PUSH
15670: LD_INT 1
15672: NEG
15673: PUSH
15674: EMPTY
15675: LIST
15676: LIST
15677: PUSH
15678: LD_INT 2
15680: NEG
15681: PUSH
15682: LD_INT 2
15684: NEG
15685: PUSH
15686: EMPTY
15687: LIST
15688: LIST
15689: PUSH
15690: LD_INT 2
15692: NEG
15693: PUSH
15694: LD_INT 3
15696: NEG
15697: PUSH
15698: EMPTY
15699: LIST
15700: LIST
15701: PUSH
15702: LD_INT 2
15704: PUSH
15705: LD_INT 1
15707: NEG
15708: PUSH
15709: EMPTY
15710: LIST
15711: LIST
15712: PUSH
15713: LD_INT 3
15715: PUSH
15716: LD_INT 0
15718: PUSH
15719: EMPTY
15720: LIST
15721: LIST
15722: PUSH
15723: LD_INT 3
15725: PUSH
15726: LD_INT 1
15728: PUSH
15729: EMPTY
15730: LIST
15731: LIST
15732: PUSH
15733: LD_INT 3
15735: PUSH
15736: LD_INT 2
15738: PUSH
15739: EMPTY
15740: LIST
15741: LIST
15742: PUSH
15743: LD_INT 3
15745: PUSH
15746: LD_INT 3
15748: PUSH
15749: EMPTY
15750: LIST
15751: LIST
15752: PUSH
15753: LD_INT 2
15755: PUSH
15756: LD_INT 3
15758: PUSH
15759: EMPTY
15760: LIST
15761: LIST
15762: PUSH
15763: LD_INT 2
15765: NEG
15766: PUSH
15767: LD_INT 1
15769: PUSH
15770: EMPTY
15771: LIST
15772: LIST
15773: PUSH
15774: LD_INT 3
15776: NEG
15777: PUSH
15778: LD_INT 0
15780: PUSH
15781: EMPTY
15782: LIST
15783: LIST
15784: PUSH
15785: LD_INT 3
15787: NEG
15788: PUSH
15789: LD_INT 1
15791: NEG
15792: PUSH
15793: EMPTY
15794: LIST
15795: LIST
15796: PUSH
15797: LD_INT 3
15799: NEG
15800: PUSH
15801: LD_INT 2
15803: NEG
15804: PUSH
15805: EMPTY
15806: LIST
15807: LIST
15808: PUSH
15809: LD_INT 3
15811: NEG
15812: PUSH
15813: LD_INT 3
15815: NEG
15816: PUSH
15817: EMPTY
15818: LIST
15819: LIST
15820: PUSH
15821: EMPTY
15822: LIST
15823: LIST
15824: LIST
15825: LIST
15826: LIST
15827: LIST
15828: LIST
15829: LIST
15830: LIST
15831: LIST
15832: LIST
15833: LIST
15834: LIST
15835: LIST
15836: LIST
15837: LIST
15838: LIST
15839: LIST
15840: LIST
15841: LIST
15842: LIST
15843: LIST
15844: LIST
15845: LIST
15846: LIST
15847: LIST
15848: LIST
15849: LIST
15850: LIST
15851: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15852: LD_ADDR_VAR 0 42
15856: PUSH
15857: LD_INT 0
15859: PUSH
15860: LD_INT 0
15862: PUSH
15863: EMPTY
15864: LIST
15865: LIST
15866: PUSH
15867: LD_INT 0
15869: PUSH
15870: LD_INT 1
15872: NEG
15873: PUSH
15874: EMPTY
15875: LIST
15876: LIST
15877: PUSH
15878: LD_INT 1
15880: PUSH
15881: LD_INT 0
15883: PUSH
15884: EMPTY
15885: LIST
15886: LIST
15887: PUSH
15888: LD_INT 1
15890: PUSH
15891: LD_INT 1
15893: PUSH
15894: EMPTY
15895: LIST
15896: LIST
15897: PUSH
15898: LD_INT 0
15900: PUSH
15901: LD_INT 1
15903: PUSH
15904: EMPTY
15905: LIST
15906: LIST
15907: PUSH
15908: LD_INT 1
15910: NEG
15911: PUSH
15912: LD_INT 0
15914: PUSH
15915: EMPTY
15916: LIST
15917: LIST
15918: PUSH
15919: LD_INT 1
15921: NEG
15922: PUSH
15923: LD_INT 1
15925: NEG
15926: PUSH
15927: EMPTY
15928: LIST
15929: LIST
15930: PUSH
15931: LD_INT 1
15933: NEG
15934: PUSH
15935: LD_INT 2
15937: NEG
15938: PUSH
15939: EMPTY
15940: LIST
15941: LIST
15942: PUSH
15943: LD_INT 0
15945: PUSH
15946: LD_INT 2
15948: NEG
15949: PUSH
15950: EMPTY
15951: LIST
15952: LIST
15953: PUSH
15954: LD_INT 1
15956: PUSH
15957: LD_INT 1
15959: NEG
15960: PUSH
15961: EMPTY
15962: LIST
15963: LIST
15964: PUSH
15965: LD_INT 2
15967: PUSH
15968: LD_INT 1
15970: PUSH
15971: EMPTY
15972: LIST
15973: LIST
15974: PUSH
15975: LD_INT 2
15977: PUSH
15978: LD_INT 2
15980: PUSH
15981: EMPTY
15982: LIST
15983: LIST
15984: PUSH
15985: LD_INT 1
15987: PUSH
15988: LD_INT 2
15990: PUSH
15991: EMPTY
15992: LIST
15993: LIST
15994: PUSH
15995: LD_INT 0
15997: PUSH
15998: LD_INT 2
16000: PUSH
16001: EMPTY
16002: LIST
16003: LIST
16004: PUSH
16005: LD_INT 1
16007: NEG
16008: PUSH
16009: LD_INT 1
16011: PUSH
16012: EMPTY
16013: LIST
16014: LIST
16015: PUSH
16016: LD_INT 2
16018: NEG
16019: PUSH
16020: LD_INT 1
16022: NEG
16023: PUSH
16024: EMPTY
16025: LIST
16026: LIST
16027: PUSH
16028: LD_INT 2
16030: NEG
16031: PUSH
16032: LD_INT 2
16034: NEG
16035: PUSH
16036: EMPTY
16037: LIST
16038: LIST
16039: PUSH
16040: LD_INT 2
16042: NEG
16043: PUSH
16044: LD_INT 3
16046: NEG
16047: PUSH
16048: EMPTY
16049: LIST
16050: LIST
16051: PUSH
16052: LD_INT 1
16054: NEG
16055: PUSH
16056: LD_INT 3
16058: NEG
16059: PUSH
16060: EMPTY
16061: LIST
16062: LIST
16063: PUSH
16064: LD_INT 0
16066: PUSH
16067: LD_INT 3
16069: NEG
16070: PUSH
16071: EMPTY
16072: LIST
16073: LIST
16074: PUSH
16075: LD_INT 1
16077: PUSH
16078: LD_INT 2
16080: NEG
16081: PUSH
16082: EMPTY
16083: LIST
16084: LIST
16085: PUSH
16086: LD_INT 3
16088: PUSH
16089: LD_INT 2
16091: PUSH
16092: EMPTY
16093: LIST
16094: LIST
16095: PUSH
16096: LD_INT 3
16098: PUSH
16099: LD_INT 3
16101: PUSH
16102: EMPTY
16103: LIST
16104: LIST
16105: PUSH
16106: LD_INT 2
16108: PUSH
16109: LD_INT 3
16111: PUSH
16112: EMPTY
16113: LIST
16114: LIST
16115: PUSH
16116: LD_INT 1
16118: PUSH
16119: LD_INT 3
16121: PUSH
16122: EMPTY
16123: LIST
16124: LIST
16125: PUSH
16126: LD_INT 0
16128: PUSH
16129: LD_INT 3
16131: PUSH
16132: EMPTY
16133: LIST
16134: LIST
16135: PUSH
16136: LD_INT 1
16138: NEG
16139: PUSH
16140: LD_INT 2
16142: PUSH
16143: EMPTY
16144: LIST
16145: LIST
16146: PUSH
16147: LD_INT 3
16149: NEG
16150: PUSH
16151: LD_INT 2
16153: NEG
16154: PUSH
16155: EMPTY
16156: LIST
16157: LIST
16158: PUSH
16159: LD_INT 3
16161: NEG
16162: PUSH
16163: LD_INT 3
16165: NEG
16166: PUSH
16167: EMPTY
16168: LIST
16169: LIST
16170: PUSH
16171: EMPTY
16172: LIST
16173: LIST
16174: LIST
16175: LIST
16176: LIST
16177: LIST
16178: LIST
16179: LIST
16180: LIST
16181: LIST
16182: LIST
16183: LIST
16184: LIST
16185: LIST
16186: LIST
16187: LIST
16188: LIST
16189: LIST
16190: LIST
16191: LIST
16192: LIST
16193: LIST
16194: LIST
16195: LIST
16196: LIST
16197: LIST
16198: LIST
16199: LIST
16200: LIST
16201: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16202: LD_ADDR_VAR 0 43
16206: PUSH
16207: LD_INT 0
16209: PUSH
16210: LD_INT 0
16212: PUSH
16213: EMPTY
16214: LIST
16215: LIST
16216: PUSH
16217: LD_INT 0
16219: PUSH
16220: LD_INT 1
16222: NEG
16223: PUSH
16224: EMPTY
16225: LIST
16226: LIST
16227: PUSH
16228: LD_INT 1
16230: PUSH
16231: LD_INT 0
16233: PUSH
16234: EMPTY
16235: LIST
16236: LIST
16237: PUSH
16238: LD_INT 1
16240: PUSH
16241: LD_INT 1
16243: PUSH
16244: EMPTY
16245: LIST
16246: LIST
16247: PUSH
16248: LD_INT 0
16250: PUSH
16251: LD_INT 1
16253: PUSH
16254: EMPTY
16255: LIST
16256: LIST
16257: PUSH
16258: LD_INT 1
16260: NEG
16261: PUSH
16262: LD_INT 0
16264: PUSH
16265: EMPTY
16266: LIST
16267: LIST
16268: PUSH
16269: LD_INT 1
16271: NEG
16272: PUSH
16273: LD_INT 1
16275: NEG
16276: PUSH
16277: EMPTY
16278: LIST
16279: LIST
16280: PUSH
16281: LD_INT 1
16283: NEG
16284: PUSH
16285: LD_INT 2
16287: NEG
16288: PUSH
16289: EMPTY
16290: LIST
16291: LIST
16292: PUSH
16293: LD_INT 0
16295: PUSH
16296: LD_INT 2
16298: NEG
16299: PUSH
16300: EMPTY
16301: LIST
16302: LIST
16303: PUSH
16304: LD_INT 1
16306: PUSH
16307: LD_INT 1
16309: NEG
16310: PUSH
16311: EMPTY
16312: LIST
16313: LIST
16314: PUSH
16315: LD_INT 2
16317: PUSH
16318: LD_INT 0
16320: PUSH
16321: EMPTY
16322: LIST
16323: LIST
16324: PUSH
16325: LD_INT 2
16327: PUSH
16328: LD_INT 1
16330: PUSH
16331: EMPTY
16332: LIST
16333: LIST
16334: PUSH
16335: LD_INT 1
16337: PUSH
16338: LD_INT 2
16340: PUSH
16341: EMPTY
16342: LIST
16343: LIST
16344: PUSH
16345: LD_INT 0
16347: PUSH
16348: LD_INT 2
16350: PUSH
16351: EMPTY
16352: LIST
16353: LIST
16354: PUSH
16355: LD_INT 1
16357: NEG
16358: PUSH
16359: LD_INT 1
16361: PUSH
16362: EMPTY
16363: LIST
16364: LIST
16365: PUSH
16366: LD_INT 2
16368: NEG
16369: PUSH
16370: LD_INT 0
16372: PUSH
16373: EMPTY
16374: LIST
16375: LIST
16376: PUSH
16377: LD_INT 2
16379: NEG
16380: PUSH
16381: LD_INT 1
16383: NEG
16384: PUSH
16385: EMPTY
16386: LIST
16387: LIST
16388: PUSH
16389: LD_INT 1
16391: NEG
16392: PUSH
16393: LD_INT 3
16395: NEG
16396: PUSH
16397: EMPTY
16398: LIST
16399: LIST
16400: PUSH
16401: LD_INT 0
16403: PUSH
16404: LD_INT 3
16406: NEG
16407: PUSH
16408: EMPTY
16409: LIST
16410: LIST
16411: PUSH
16412: LD_INT 1
16414: PUSH
16415: LD_INT 2
16417: NEG
16418: PUSH
16419: EMPTY
16420: LIST
16421: LIST
16422: PUSH
16423: LD_INT 2
16425: PUSH
16426: LD_INT 1
16428: NEG
16429: PUSH
16430: EMPTY
16431: LIST
16432: LIST
16433: PUSH
16434: LD_INT 3
16436: PUSH
16437: LD_INT 0
16439: PUSH
16440: EMPTY
16441: LIST
16442: LIST
16443: PUSH
16444: LD_INT 3
16446: PUSH
16447: LD_INT 1
16449: PUSH
16450: EMPTY
16451: LIST
16452: LIST
16453: PUSH
16454: LD_INT 1
16456: PUSH
16457: LD_INT 3
16459: PUSH
16460: EMPTY
16461: LIST
16462: LIST
16463: PUSH
16464: LD_INT 0
16466: PUSH
16467: LD_INT 3
16469: PUSH
16470: EMPTY
16471: LIST
16472: LIST
16473: PUSH
16474: LD_INT 1
16476: NEG
16477: PUSH
16478: LD_INT 2
16480: PUSH
16481: EMPTY
16482: LIST
16483: LIST
16484: PUSH
16485: LD_INT 2
16487: NEG
16488: PUSH
16489: LD_INT 1
16491: PUSH
16492: EMPTY
16493: LIST
16494: LIST
16495: PUSH
16496: LD_INT 3
16498: NEG
16499: PUSH
16500: LD_INT 0
16502: PUSH
16503: EMPTY
16504: LIST
16505: LIST
16506: PUSH
16507: LD_INT 3
16509: NEG
16510: PUSH
16511: LD_INT 1
16513: NEG
16514: PUSH
16515: EMPTY
16516: LIST
16517: LIST
16518: PUSH
16519: EMPTY
16520: LIST
16521: LIST
16522: LIST
16523: LIST
16524: LIST
16525: LIST
16526: LIST
16527: LIST
16528: LIST
16529: LIST
16530: LIST
16531: LIST
16532: LIST
16533: LIST
16534: LIST
16535: LIST
16536: LIST
16537: LIST
16538: LIST
16539: LIST
16540: LIST
16541: LIST
16542: LIST
16543: LIST
16544: LIST
16545: LIST
16546: LIST
16547: LIST
16548: LIST
16549: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16550: LD_ADDR_VAR 0 44
16554: PUSH
16555: LD_INT 0
16557: PUSH
16558: LD_INT 0
16560: PUSH
16561: EMPTY
16562: LIST
16563: LIST
16564: PUSH
16565: LD_INT 0
16567: PUSH
16568: LD_INT 1
16570: NEG
16571: PUSH
16572: EMPTY
16573: LIST
16574: LIST
16575: PUSH
16576: LD_INT 1
16578: PUSH
16579: LD_INT 0
16581: PUSH
16582: EMPTY
16583: LIST
16584: LIST
16585: PUSH
16586: LD_INT 1
16588: PUSH
16589: LD_INT 1
16591: PUSH
16592: EMPTY
16593: LIST
16594: LIST
16595: PUSH
16596: LD_INT 0
16598: PUSH
16599: LD_INT 1
16601: PUSH
16602: EMPTY
16603: LIST
16604: LIST
16605: PUSH
16606: LD_INT 1
16608: NEG
16609: PUSH
16610: LD_INT 0
16612: PUSH
16613: EMPTY
16614: LIST
16615: LIST
16616: PUSH
16617: LD_INT 1
16619: NEG
16620: PUSH
16621: LD_INT 1
16623: NEG
16624: PUSH
16625: EMPTY
16626: LIST
16627: LIST
16628: PUSH
16629: LD_INT 1
16631: NEG
16632: PUSH
16633: LD_INT 2
16635: NEG
16636: PUSH
16637: EMPTY
16638: LIST
16639: LIST
16640: PUSH
16641: LD_INT 1
16643: PUSH
16644: LD_INT 1
16646: NEG
16647: PUSH
16648: EMPTY
16649: LIST
16650: LIST
16651: PUSH
16652: LD_INT 2
16654: PUSH
16655: LD_INT 0
16657: PUSH
16658: EMPTY
16659: LIST
16660: LIST
16661: PUSH
16662: LD_INT 2
16664: PUSH
16665: LD_INT 1
16667: PUSH
16668: EMPTY
16669: LIST
16670: LIST
16671: PUSH
16672: LD_INT 2
16674: PUSH
16675: LD_INT 2
16677: PUSH
16678: EMPTY
16679: LIST
16680: LIST
16681: PUSH
16682: LD_INT 1
16684: PUSH
16685: LD_INT 2
16687: PUSH
16688: EMPTY
16689: LIST
16690: LIST
16691: PUSH
16692: LD_INT 1
16694: NEG
16695: PUSH
16696: LD_INT 1
16698: PUSH
16699: EMPTY
16700: LIST
16701: LIST
16702: PUSH
16703: LD_INT 2
16705: NEG
16706: PUSH
16707: LD_INT 0
16709: PUSH
16710: EMPTY
16711: LIST
16712: LIST
16713: PUSH
16714: LD_INT 2
16716: NEG
16717: PUSH
16718: LD_INT 1
16720: NEG
16721: PUSH
16722: EMPTY
16723: LIST
16724: LIST
16725: PUSH
16726: LD_INT 2
16728: NEG
16729: PUSH
16730: LD_INT 2
16732: NEG
16733: PUSH
16734: EMPTY
16735: LIST
16736: LIST
16737: PUSH
16738: LD_INT 2
16740: NEG
16741: PUSH
16742: LD_INT 3
16744: NEG
16745: PUSH
16746: EMPTY
16747: LIST
16748: LIST
16749: PUSH
16750: LD_INT 2
16752: PUSH
16753: LD_INT 1
16755: NEG
16756: PUSH
16757: EMPTY
16758: LIST
16759: LIST
16760: PUSH
16761: LD_INT 3
16763: PUSH
16764: LD_INT 0
16766: PUSH
16767: EMPTY
16768: LIST
16769: LIST
16770: PUSH
16771: LD_INT 3
16773: PUSH
16774: LD_INT 1
16776: PUSH
16777: EMPTY
16778: LIST
16779: LIST
16780: PUSH
16781: LD_INT 3
16783: PUSH
16784: LD_INT 2
16786: PUSH
16787: EMPTY
16788: LIST
16789: LIST
16790: PUSH
16791: LD_INT 3
16793: PUSH
16794: LD_INT 3
16796: PUSH
16797: EMPTY
16798: LIST
16799: LIST
16800: PUSH
16801: LD_INT 2
16803: PUSH
16804: LD_INT 3
16806: PUSH
16807: EMPTY
16808: LIST
16809: LIST
16810: PUSH
16811: LD_INT 2
16813: NEG
16814: PUSH
16815: LD_INT 1
16817: PUSH
16818: EMPTY
16819: LIST
16820: LIST
16821: PUSH
16822: LD_INT 3
16824: NEG
16825: PUSH
16826: LD_INT 0
16828: PUSH
16829: EMPTY
16830: LIST
16831: LIST
16832: PUSH
16833: LD_INT 3
16835: NEG
16836: PUSH
16837: LD_INT 1
16839: NEG
16840: PUSH
16841: EMPTY
16842: LIST
16843: LIST
16844: PUSH
16845: LD_INT 3
16847: NEG
16848: PUSH
16849: LD_INT 2
16851: NEG
16852: PUSH
16853: EMPTY
16854: LIST
16855: LIST
16856: PUSH
16857: LD_INT 3
16859: NEG
16860: PUSH
16861: LD_INT 3
16863: NEG
16864: PUSH
16865: EMPTY
16866: LIST
16867: LIST
16868: PUSH
16869: EMPTY
16870: LIST
16871: LIST
16872: LIST
16873: LIST
16874: LIST
16875: LIST
16876: LIST
16877: LIST
16878: LIST
16879: LIST
16880: LIST
16881: LIST
16882: LIST
16883: LIST
16884: LIST
16885: LIST
16886: LIST
16887: LIST
16888: LIST
16889: LIST
16890: LIST
16891: LIST
16892: LIST
16893: LIST
16894: LIST
16895: LIST
16896: LIST
16897: LIST
16898: LIST
16899: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16900: LD_ADDR_VAR 0 45
16904: PUSH
16905: LD_INT 0
16907: PUSH
16908: LD_INT 0
16910: PUSH
16911: EMPTY
16912: LIST
16913: LIST
16914: PUSH
16915: LD_INT 0
16917: PUSH
16918: LD_INT 1
16920: NEG
16921: PUSH
16922: EMPTY
16923: LIST
16924: LIST
16925: PUSH
16926: LD_INT 1
16928: PUSH
16929: LD_INT 0
16931: PUSH
16932: EMPTY
16933: LIST
16934: LIST
16935: PUSH
16936: LD_INT 1
16938: PUSH
16939: LD_INT 1
16941: PUSH
16942: EMPTY
16943: LIST
16944: LIST
16945: PUSH
16946: LD_INT 0
16948: PUSH
16949: LD_INT 1
16951: PUSH
16952: EMPTY
16953: LIST
16954: LIST
16955: PUSH
16956: LD_INT 1
16958: NEG
16959: PUSH
16960: LD_INT 0
16962: PUSH
16963: EMPTY
16964: LIST
16965: LIST
16966: PUSH
16967: LD_INT 1
16969: NEG
16970: PUSH
16971: LD_INT 1
16973: NEG
16974: PUSH
16975: EMPTY
16976: LIST
16977: LIST
16978: PUSH
16979: LD_INT 1
16981: NEG
16982: PUSH
16983: LD_INT 2
16985: NEG
16986: PUSH
16987: EMPTY
16988: LIST
16989: LIST
16990: PUSH
16991: LD_INT 0
16993: PUSH
16994: LD_INT 2
16996: NEG
16997: PUSH
16998: EMPTY
16999: LIST
17000: LIST
17001: PUSH
17002: LD_INT 1
17004: PUSH
17005: LD_INT 1
17007: NEG
17008: PUSH
17009: EMPTY
17010: LIST
17011: LIST
17012: PUSH
17013: LD_INT 2
17015: PUSH
17016: LD_INT 1
17018: PUSH
17019: EMPTY
17020: LIST
17021: LIST
17022: PUSH
17023: LD_INT 2
17025: PUSH
17026: LD_INT 2
17028: PUSH
17029: EMPTY
17030: LIST
17031: LIST
17032: PUSH
17033: LD_INT 1
17035: PUSH
17036: LD_INT 2
17038: PUSH
17039: EMPTY
17040: LIST
17041: LIST
17042: PUSH
17043: LD_INT 0
17045: PUSH
17046: LD_INT 2
17048: PUSH
17049: EMPTY
17050: LIST
17051: LIST
17052: PUSH
17053: LD_INT 1
17055: NEG
17056: PUSH
17057: LD_INT 1
17059: PUSH
17060: EMPTY
17061: LIST
17062: LIST
17063: PUSH
17064: LD_INT 2
17066: NEG
17067: PUSH
17068: LD_INT 1
17070: NEG
17071: PUSH
17072: EMPTY
17073: LIST
17074: LIST
17075: PUSH
17076: LD_INT 2
17078: NEG
17079: PUSH
17080: LD_INT 2
17082: NEG
17083: PUSH
17084: EMPTY
17085: LIST
17086: LIST
17087: PUSH
17088: LD_INT 2
17090: NEG
17091: PUSH
17092: LD_INT 3
17094: NEG
17095: PUSH
17096: EMPTY
17097: LIST
17098: LIST
17099: PUSH
17100: LD_INT 1
17102: NEG
17103: PUSH
17104: LD_INT 3
17106: NEG
17107: PUSH
17108: EMPTY
17109: LIST
17110: LIST
17111: PUSH
17112: LD_INT 0
17114: PUSH
17115: LD_INT 3
17117: NEG
17118: PUSH
17119: EMPTY
17120: LIST
17121: LIST
17122: PUSH
17123: LD_INT 1
17125: PUSH
17126: LD_INT 2
17128: NEG
17129: PUSH
17130: EMPTY
17131: LIST
17132: LIST
17133: PUSH
17134: LD_INT 3
17136: PUSH
17137: LD_INT 2
17139: PUSH
17140: EMPTY
17141: LIST
17142: LIST
17143: PUSH
17144: LD_INT 3
17146: PUSH
17147: LD_INT 3
17149: PUSH
17150: EMPTY
17151: LIST
17152: LIST
17153: PUSH
17154: LD_INT 2
17156: PUSH
17157: LD_INT 3
17159: PUSH
17160: EMPTY
17161: LIST
17162: LIST
17163: PUSH
17164: LD_INT 1
17166: PUSH
17167: LD_INT 3
17169: PUSH
17170: EMPTY
17171: LIST
17172: LIST
17173: PUSH
17174: LD_INT 0
17176: PUSH
17177: LD_INT 3
17179: PUSH
17180: EMPTY
17181: LIST
17182: LIST
17183: PUSH
17184: LD_INT 1
17186: NEG
17187: PUSH
17188: LD_INT 2
17190: PUSH
17191: EMPTY
17192: LIST
17193: LIST
17194: PUSH
17195: LD_INT 3
17197: NEG
17198: PUSH
17199: LD_INT 2
17201: NEG
17202: PUSH
17203: EMPTY
17204: LIST
17205: LIST
17206: PUSH
17207: LD_INT 3
17209: NEG
17210: PUSH
17211: LD_INT 3
17213: NEG
17214: PUSH
17215: EMPTY
17216: LIST
17217: LIST
17218: PUSH
17219: EMPTY
17220: LIST
17221: LIST
17222: LIST
17223: LIST
17224: LIST
17225: LIST
17226: LIST
17227: LIST
17228: LIST
17229: LIST
17230: LIST
17231: LIST
17232: LIST
17233: LIST
17234: LIST
17235: LIST
17236: LIST
17237: LIST
17238: LIST
17239: LIST
17240: LIST
17241: LIST
17242: LIST
17243: LIST
17244: LIST
17245: LIST
17246: LIST
17247: LIST
17248: LIST
17249: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17250: LD_ADDR_VAR 0 46
17254: PUSH
17255: LD_INT 0
17257: PUSH
17258: LD_INT 0
17260: PUSH
17261: EMPTY
17262: LIST
17263: LIST
17264: PUSH
17265: LD_INT 0
17267: PUSH
17268: LD_INT 1
17270: NEG
17271: PUSH
17272: EMPTY
17273: LIST
17274: LIST
17275: PUSH
17276: LD_INT 1
17278: PUSH
17279: LD_INT 0
17281: PUSH
17282: EMPTY
17283: LIST
17284: LIST
17285: PUSH
17286: LD_INT 1
17288: PUSH
17289: LD_INT 1
17291: PUSH
17292: EMPTY
17293: LIST
17294: LIST
17295: PUSH
17296: LD_INT 0
17298: PUSH
17299: LD_INT 1
17301: PUSH
17302: EMPTY
17303: LIST
17304: LIST
17305: PUSH
17306: LD_INT 1
17308: NEG
17309: PUSH
17310: LD_INT 0
17312: PUSH
17313: EMPTY
17314: LIST
17315: LIST
17316: PUSH
17317: LD_INT 1
17319: NEG
17320: PUSH
17321: LD_INT 1
17323: NEG
17324: PUSH
17325: EMPTY
17326: LIST
17327: LIST
17328: PUSH
17329: LD_INT 1
17331: NEG
17332: PUSH
17333: LD_INT 2
17335: NEG
17336: PUSH
17337: EMPTY
17338: LIST
17339: LIST
17340: PUSH
17341: LD_INT 0
17343: PUSH
17344: LD_INT 2
17346: NEG
17347: PUSH
17348: EMPTY
17349: LIST
17350: LIST
17351: PUSH
17352: LD_INT 1
17354: PUSH
17355: LD_INT 1
17357: NEG
17358: PUSH
17359: EMPTY
17360: LIST
17361: LIST
17362: PUSH
17363: LD_INT 2
17365: PUSH
17366: LD_INT 0
17368: PUSH
17369: EMPTY
17370: LIST
17371: LIST
17372: PUSH
17373: LD_INT 2
17375: PUSH
17376: LD_INT 1
17378: PUSH
17379: EMPTY
17380: LIST
17381: LIST
17382: PUSH
17383: LD_INT 1
17385: PUSH
17386: LD_INT 2
17388: PUSH
17389: EMPTY
17390: LIST
17391: LIST
17392: PUSH
17393: LD_INT 0
17395: PUSH
17396: LD_INT 2
17398: PUSH
17399: EMPTY
17400: LIST
17401: LIST
17402: PUSH
17403: LD_INT 1
17405: NEG
17406: PUSH
17407: LD_INT 1
17409: PUSH
17410: EMPTY
17411: LIST
17412: LIST
17413: PUSH
17414: LD_INT 2
17416: NEG
17417: PUSH
17418: LD_INT 0
17420: PUSH
17421: EMPTY
17422: LIST
17423: LIST
17424: PUSH
17425: LD_INT 2
17427: NEG
17428: PUSH
17429: LD_INT 1
17431: NEG
17432: PUSH
17433: EMPTY
17434: LIST
17435: LIST
17436: PUSH
17437: LD_INT 1
17439: NEG
17440: PUSH
17441: LD_INT 3
17443: NEG
17444: PUSH
17445: EMPTY
17446: LIST
17447: LIST
17448: PUSH
17449: LD_INT 0
17451: PUSH
17452: LD_INT 3
17454: NEG
17455: PUSH
17456: EMPTY
17457: LIST
17458: LIST
17459: PUSH
17460: LD_INT 1
17462: PUSH
17463: LD_INT 2
17465: NEG
17466: PUSH
17467: EMPTY
17468: LIST
17469: LIST
17470: PUSH
17471: LD_INT 2
17473: PUSH
17474: LD_INT 1
17476: NEG
17477: PUSH
17478: EMPTY
17479: LIST
17480: LIST
17481: PUSH
17482: LD_INT 3
17484: PUSH
17485: LD_INT 0
17487: PUSH
17488: EMPTY
17489: LIST
17490: LIST
17491: PUSH
17492: LD_INT 3
17494: PUSH
17495: LD_INT 1
17497: PUSH
17498: EMPTY
17499: LIST
17500: LIST
17501: PUSH
17502: LD_INT 1
17504: PUSH
17505: LD_INT 3
17507: PUSH
17508: EMPTY
17509: LIST
17510: LIST
17511: PUSH
17512: LD_INT 0
17514: PUSH
17515: LD_INT 3
17517: PUSH
17518: EMPTY
17519: LIST
17520: LIST
17521: PUSH
17522: LD_INT 1
17524: NEG
17525: PUSH
17526: LD_INT 2
17528: PUSH
17529: EMPTY
17530: LIST
17531: LIST
17532: PUSH
17533: LD_INT 2
17535: NEG
17536: PUSH
17537: LD_INT 1
17539: PUSH
17540: EMPTY
17541: LIST
17542: LIST
17543: PUSH
17544: LD_INT 3
17546: NEG
17547: PUSH
17548: LD_INT 0
17550: PUSH
17551: EMPTY
17552: LIST
17553: LIST
17554: PUSH
17555: LD_INT 3
17557: NEG
17558: PUSH
17559: LD_INT 1
17561: NEG
17562: PUSH
17563: EMPTY
17564: LIST
17565: LIST
17566: PUSH
17567: EMPTY
17568: LIST
17569: LIST
17570: LIST
17571: LIST
17572: LIST
17573: LIST
17574: LIST
17575: LIST
17576: LIST
17577: LIST
17578: LIST
17579: LIST
17580: LIST
17581: LIST
17582: LIST
17583: LIST
17584: LIST
17585: LIST
17586: LIST
17587: LIST
17588: LIST
17589: LIST
17590: LIST
17591: LIST
17592: LIST
17593: LIST
17594: LIST
17595: LIST
17596: LIST
17597: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17598: LD_ADDR_VAR 0 47
17602: PUSH
17603: LD_INT 0
17605: PUSH
17606: LD_INT 0
17608: PUSH
17609: EMPTY
17610: LIST
17611: LIST
17612: PUSH
17613: LD_INT 0
17615: PUSH
17616: LD_INT 1
17618: NEG
17619: PUSH
17620: EMPTY
17621: LIST
17622: LIST
17623: PUSH
17624: LD_INT 1
17626: PUSH
17627: LD_INT 0
17629: PUSH
17630: EMPTY
17631: LIST
17632: LIST
17633: PUSH
17634: LD_INT 1
17636: PUSH
17637: LD_INT 1
17639: PUSH
17640: EMPTY
17641: LIST
17642: LIST
17643: PUSH
17644: LD_INT 0
17646: PUSH
17647: LD_INT 1
17649: PUSH
17650: EMPTY
17651: LIST
17652: LIST
17653: PUSH
17654: LD_INT 1
17656: NEG
17657: PUSH
17658: LD_INT 0
17660: PUSH
17661: EMPTY
17662: LIST
17663: LIST
17664: PUSH
17665: LD_INT 1
17667: NEG
17668: PUSH
17669: LD_INT 1
17671: NEG
17672: PUSH
17673: EMPTY
17674: LIST
17675: LIST
17676: PUSH
17677: LD_INT 1
17679: NEG
17680: PUSH
17681: LD_INT 2
17683: NEG
17684: PUSH
17685: EMPTY
17686: LIST
17687: LIST
17688: PUSH
17689: LD_INT 0
17691: PUSH
17692: LD_INT 2
17694: NEG
17695: PUSH
17696: EMPTY
17697: LIST
17698: LIST
17699: PUSH
17700: LD_INT 1
17702: PUSH
17703: LD_INT 1
17705: NEG
17706: PUSH
17707: EMPTY
17708: LIST
17709: LIST
17710: PUSH
17711: LD_INT 2
17713: NEG
17714: PUSH
17715: LD_INT 1
17717: NEG
17718: PUSH
17719: EMPTY
17720: LIST
17721: LIST
17722: PUSH
17723: LD_INT 2
17725: NEG
17726: PUSH
17727: LD_INT 2
17729: NEG
17730: PUSH
17731: EMPTY
17732: LIST
17733: LIST
17734: PUSH
17735: EMPTY
17736: LIST
17737: LIST
17738: LIST
17739: LIST
17740: LIST
17741: LIST
17742: LIST
17743: LIST
17744: LIST
17745: LIST
17746: LIST
17747: LIST
17748: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17749: LD_ADDR_VAR 0 48
17753: PUSH
17754: LD_INT 0
17756: PUSH
17757: LD_INT 0
17759: PUSH
17760: EMPTY
17761: LIST
17762: LIST
17763: PUSH
17764: LD_INT 0
17766: PUSH
17767: LD_INT 1
17769: NEG
17770: PUSH
17771: EMPTY
17772: LIST
17773: LIST
17774: PUSH
17775: LD_INT 1
17777: PUSH
17778: LD_INT 0
17780: PUSH
17781: EMPTY
17782: LIST
17783: LIST
17784: PUSH
17785: LD_INT 1
17787: PUSH
17788: LD_INT 1
17790: PUSH
17791: EMPTY
17792: LIST
17793: LIST
17794: PUSH
17795: LD_INT 0
17797: PUSH
17798: LD_INT 1
17800: PUSH
17801: EMPTY
17802: LIST
17803: LIST
17804: PUSH
17805: LD_INT 1
17807: NEG
17808: PUSH
17809: LD_INT 0
17811: PUSH
17812: EMPTY
17813: LIST
17814: LIST
17815: PUSH
17816: LD_INT 1
17818: NEG
17819: PUSH
17820: LD_INT 1
17822: NEG
17823: PUSH
17824: EMPTY
17825: LIST
17826: LIST
17827: PUSH
17828: LD_INT 1
17830: NEG
17831: PUSH
17832: LD_INT 2
17834: NEG
17835: PUSH
17836: EMPTY
17837: LIST
17838: LIST
17839: PUSH
17840: LD_INT 0
17842: PUSH
17843: LD_INT 2
17845: NEG
17846: PUSH
17847: EMPTY
17848: LIST
17849: LIST
17850: PUSH
17851: LD_INT 1
17853: PUSH
17854: LD_INT 1
17856: NEG
17857: PUSH
17858: EMPTY
17859: LIST
17860: LIST
17861: PUSH
17862: LD_INT 2
17864: PUSH
17865: LD_INT 0
17867: PUSH
17868: EMPTY
17869: LIST
17870: LIST
17871: PUSH
17872: LD_INT 2
17874: PUSH
17875: LD_INT 1
17877: PUSH
17878: EMPTY
17879: LIST
17880: LIST
17881: PUSH
17882: EMPTY
17883: LIST
17884: LIST
17885: LIST
17886: LIST
17887: LIST
17888: LIST
17889: LIST
17890: LIST
17891: LIST
17892: LIST
17893: LIST
17894: LIST
17895: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17896: LD_ADDR_VAR 0 49
17900: PUSH
17901: LD_INT 0
17903: PUSH
17904: LD_INT 0
17906: PUSH
17907: EMPTY
17908: LIST
17909: LIST
17910: PUSH
17911: LD_INT 0
17913: PUSH
17914: LD_INT 1
17916: NEG
17917: PUSH
17918: EMPTY
17919: LIST
17920: LIST
17921: PUSH
17922: LD_INT 1
17924: PUSH
17925: LD_INT 0
17927: PUSH
17928: EMPTY
17929: LIST
17930: LIST
17931: PUSH
17932: LD_INT 1
17934: PUSH
17935: LD_INT 1
17937: PUSH
17938: EMPTY
17939: LIST
17940: LIST
17941: PUSH
17942: LD_INT 0
17944: PUSH
17945: LD_INT 1
17947: PUSH
17948: EMPTY
17949: LIST
17950: LIST
17951: PUSH
17952: LD_INT 1
17954: NEG
17955: PUSH
17956: LD_INT 0
17958: PUSH
17959: EMPTY
17960: LIST
17961: LIST
17962: PUSH
17963: LD_INT 1
17965: NEG
17966: PUSH
17967: LD_INT 1
17969: NEG
17970: PUSH
17971: EMPTY
17972: LIST
17973: LIST
17974: PUSH
17975: LD_INT 1
17977: PUSH
17978: LD_INT 1
17980: NEG
17981: PUSH
17982: EMPTY
17983: LIST
17984: LIST
17985: PUSH
17986: LD_INT 2
17988: PUSH
17989: LD_INT 0
17991: PUSH
17992: EMPTY
17993: LIST
17994: LIST
17995: PUSH
17996: LD_INT 2
17998: PUSH
17999: LD_INT 1
18001: PUSH
18002: EMPTY
18003: LIST
18004: LIST
18005: PUSH
18006: LD_INT 2
18008: PUSH
18009: LD_INT 2
18011: PUSH
18012: EMPTY
18013: LIST
18014: LIST
18015: PUSH
18016: LD_INT 1
18018: PUSH
18019: LD_INT 2
18021: PUSH
18022: EMPTY
18023: LIST
18024: LIST
18025: PUSH
18026: EMPTY
18027: LIST
18028: LIST
18029: LIST
18030: LIST
18031: LIST
18032: LIST
18033: LIST
18034: LIST
18035: LIST
18036: LIST
18037: LIST
18038: LIST
18039: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18040: LD_ADDR_VAR 0 50
18044: PUSH
18045: LD_INT 0
18047: PUSH
18048: LD_INT 0
18050: PUSH
18051: EMPTY
18052: LIST
18053: LIST
18054: PUSH
18055: LD_INT 0
18057: PUSH
18058: LD_INT 1
18060: NEG
18061: PUSH
18062: EMPTY
18063: LIST
18064: LIST
18065: PUSH
18066: LD_INT 1
18068: PUSH
18069: LD_INT 0
18071: PUSH
18072: EMPTY
18073: LIST
18074: LIST
18075: PUSH
18076: LD_INT 1
18078: PUSH
18079: LD_INT 1
18081: PUSH
18082: EMPTY
18083: LIST
18084: LIST
18085: PUSH
18086: LD_INT 0
18088: PUSH
18089: LD_INT 1
18091: PUSH
18092: EMPTY
18093: LIST
18094: LIST
18095: PUSH
18096: LD_INT 1
18098: NEG
18099: PUSH
18100: LD_INT 0
18102: PUSH
18103: EMPTY
18104: LIST
18105: LIST
18106: PUSH
18107: LD_INT 1
18109: NEG
18110: PUSH
18111: LD_INT 1
18113: NEG
18114: PUSH
18115: EMPTY
18116: LIST
18117: LIST
18118: PUSH
18119: LD_INT 2
18121: PUSH
18122: LD_INT 1
18124: PUSH
18125: EMPTY
18126: LIST
18127: LIST
18128: PUSH
18129: LD_INT 2
18131: PUSH
18132: LD_INT 2
18134: PUSH
18135: EMPTY
18136: LIST
18137: LIST
18138: PUSH
18139: LD_INT 1
18141: PUSH
18142: LD_INT 2
18144: PUSH
18145: EMPTY
18146: LIST
18147: LIST
18148: PUSH
18149: LD_INT 0
18151: PUSH
18152: LD_INT 2
18154: PUSH
18155: EMPTY
18156: LIST
18157: LIST
18158: PUSH
18159: LD_INT 1
18161: NEG
18162: PUSH
18163: LD_INT 1
18165: PUSH
18166: EMPTY
18167: LIST
18168: LIST
18169: PUSH
18170: EMPTY
18171: LIST
18172: LIST
18173: LIST
18174: LIST
18175: LIST
18176: LIST
18177: LIST
18178: LIST
18179: LIST
18180: LIST
18181: LIST
18182: LIST
18183: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18184: LD_ADDR_VAR 0 51
18188: PUSH
18189: LD_INT 0
18191: PUSH
18192: LD_INT 0
18194: PUSH
18195: EMPTY
18196: LIST
18197: LIST
18198: PUSH
18199: LD_INT 0
18201: PUSH
18202: LD_INT 1
18204: NEG
18205: PUSH
18206: EMPTY
18207: LIST
18208: LIST
18209: PUSH
18210: LD_INT 1
18212: PUSH
18213: LD_INT 0
18215: PUSH
18216: EMPTY
18217: LIST
18218: LIST
18219: PUSH
18220: LD_INT 1
18222: PUSH
18223: LD_INT 1
18225: PUSH
18226: EMPTY
18227: LIST
18228: LIST
18229: PUSH
18230: LD_INT 0
18232: PUSH
18233: LD_INT 1
18235: PUSH
18236: EMPTY
18237: LIST
18238: LIST
18239: PUSH
18240: LD_INT 1
18242: NEG
18243: PUSH
18244: LD_INT 0
18246: PUSH
18247: EMPTY
18248: LIST
18249: LIST
18250: PUSH
18251: LD_INT 1
18253: NEG
18254: PUSH
18255: LD_INT 1
18257: NEG
18258: PUSH
18259: EMPTY
18260: LIST
18261: LIST
18262: PUSH
18263: LD_INT 1
18265: PUSH
18266: LD_INT 2
18268: PUSH
18269: EMPTY
18270: LIST
18271: LIST
18272: PUSH
18273: LD_INT 0
18275: PUSH
18276: LD_INT 2
18278: PUSH
18279: EMPTY
18280: LIST
18281: LIST
18282: PUSH
18283: LD_INT 1
18285: NEG
18286: PUSH
18287: LD_INT 1
18289: PUSH
18290: EMPTY
18291: LIST
18292: LIST
18293: PUSH
18294: LD_INT 2
18296: NEG
18297: PUSH
18298: LD_INT 0
18300: PUSH
18301: EMPTY
18302: LIST
18303: LIST
18304: PUSH
18305: LD_INT 2
18307: NEG
18308: PUSH
18309: LD_INT 1
18311: NEG
18312: PUSH
18313: EMPTY
18314: LIST
18315: LIST
18316: PUSH
18317: EMPTY
18318: LIST
18319: LIST
18320: LIST
18321: LIST
18322: LIST
18323: LIST
18324: LIST
18325: LIST
18326: LIST
18327: LIST
18328: LIST
18329: LIST
18330: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18331: LD_ADDR_VAR 0 52
18335: PUSH
18336: LD_INT 0
18338: PUSH
18339: LD_INT 0
18341: PUSH
18342: EMPTY
18343: LIST
18344: LIST
18345: PUSH
18346: LD_INT 0
18348: PUSH
18349: LD_INT 1
18351: NEG
18352: PUSH
18353: EMPTY
18354: LIST
18355: LIST
18356: PUSH
18357: LD_INT 1
18359: PUSH
18360: LD_INT 0
18362: PUSH
18363: EMPTY
18364: LIST
18365: LIST
18366: PUSH
18367: LD_INT 1
18369: PUSH
18370: LD_INT 1
18372: PUSH
18373: EMPTY
18374: LIST
18375: LIST
18376: PUSH
18377: LD_INT 0
18379: PUSH
18380: LD_INT 1
18382: PUSH
18383: EMPTY
18384: LIST
18385: LIST
18386: PUSH
18387: LD_INT 1
18389: NEG
18390: PUSH
18391: LD_INT 0
18393: PUSH
18394: EMPTY
18395: LIST
18396: LIST
18397: PUSH
18398: LD_INT 1
18400: NEG
18401: PUSH
18402: LD_INT 1
18404: NEG
18405: PUSH
18406: EMPTY
18407: LIST
18408: LIST
18409: PUSH
18410: LD_INT 1
18412: NEG
18413: PUSH
18414: LD_INT 2
18416: NEG
18417: PUSH
18418: EMPTY
18419: LIST
18420: LIST
18421: PUSH
18422: LD_INT 1
18424: NEG
18425: PUSH
18426: LD_INT 1
18428: PUSH
18429: EMPTY
18430: LIST
18431: LIST
18432: PUSH
18433: LD_INT 2
18435: NEG
18436: PUSH
18437: LD_INT 0
18439: PUSH
18440: EMPTY
18441: LIST
18442: LIST
18443: PUSH
18444: LD_INT 2
18446: NEG
18447: PUSH
18448: LD_INT 1
18450: NEG
18451: PUSH
18452: EMPTY
18453: LIST
18454: LIST
18455: PUSH
18456: LD_INT 2
18458: NEG
18459: PUSH
18460: LD_INT 2
18462: NEG
18463: PUSH
18464: EMPTY
18465: LIST
18466: LIST
18467: PUSH
18468: EMPTY
18469: LIST
18470: LIST
18471: LIST
18472: LIST
18473: LIST
18474: LIST
18475: LIST
18476: LIST
18477: LIST
18478: LIST
18479: LIST
18480: LIST
18481: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18482: LD_ADDR_VAR 0 53
18486: PUSH
18487: LD_INT 0
18489: PUSH
18490: LD_INT 0
18492: PUSH
18493: EMPTY
18494: LIST
18495: LIST
18496: PUSH
18497: LD_INT 0
18499: PUSH
18500: LD_INT 1
18502: NEG
18503: PUSH
18504: EMPTY
18505: LIST
18506: LIST
18507: PUSH
18508: LD_INT 1
18510: PUSH
18511: LD_INT 0
18513: PUSH
18514: EMPTY
18515: LIST
18516: LIST
18517: PUSH
18518: LD_INT 1
18520: PUSH
18521: LD_INT 1
18523: PUSH
18524: EMPTY
18525: LIST
18526: LIST
18527: PUSH
18528: LD_INT 0
18530: PUSH
18531: LD_INT 1
18533: PUSH
18534: EMPTY
18535: LIST
18536: LIST
18537: PUSH
18538: LD_INT 1
18540: NEG
18541: PUSH
18542: LD_INT 0
18544: PUSH
18545: EMPTY
18546: LIST
18547: LIST
18548: PUSH
18549: LD_INT 1
18551: NEG
18552: PUSH
18553: LD_INT 1
18555: NEG
18556: PUSH
18557: EMPTY
18558: LIST
18559: LIST
18560: PUSH
18561: LD_INT 1
18563: NEG
18564: PUSH
18565: LD_INT 2
18567: NEG
18568: PUSH
18569: EMPTY
18570: LIST
18571: LIST
18572: PUSH
18573: LD_INT 0
18575: PUSH
18576: LD_INT 2
18578: NEG
18579: PUSH
18580: EMPTY
18581: LIST
18582: LIST
18583: PUSH
18584: LD_INT 1
18586: PUSH
18587: LD_INT 1
18589: NEG
18590: PUSH
18591: EMPTY
18592: LIST
18593: LIST
18594: PUSH
18595: LD_INT 2
18597: PUSH
18598: LD_INT 0
18600: PUSH
18601: EMPTY
18602: LIST
18603: LIST
18604: PUSH
18605: LD_INT 2
18607: PUSH
18608: LD_INT 1
18610: PUSH
18611: EMPTY
18612: LIST
18613: LIST
18614: PUSH
18615: LD_INT 2
18617: PUSH
18618: LD_INT 2
18620: PUSH
18621: EMPTY
18622: LIST
18623: LIST
18624: PUSH
18625: LD_INT 1
18627: PUSH
18628: LD_INT 2
18630: PUSH
18631: EMPTY
18632: LIST
18633: LIST
18634: PUSH
18635: LD_INT 0
18637: PUSH
18638: LD_INT 2
18640: PUSH
18641: EMPTY
18642: LIST
18643: LIST
18644: PUSH
18645: LD_INT 1
18647: NEG
18648: PUSH
18649: LD_INT 1
18651: PUSH
18652: EMPTY
18653: LIST
18654: LIST
18655: PUSH
18656: LD_INT 2
18658: NEG
18659: PUSH
18660: LD_INT 0
18662: PUSH
18663: EMPTY
18664: LIST
18665: LIST
18666: PUSH
18667: LD_INT 2
18669: NEG
18670: PUSH
18671: LD_INT 1
18673: NEG
18674: PUSH
18675: EMPTY
18676: LIST
18677: LIST
18678: PUSH
18679: LD_INT 2
18681: NEG
18682: PUSH
18683: LD_INT 2
18685: NEG
18686: PUSH
18687: EMPTY
18688: LIST
18689: LIST
18690: PUSH
18691: EMPTY
18692: LIST
18693: LIST
18694: LIST
18695: LIST
18696: LIST
18697: LIST
18698: LIST
18699: LIST
18700: LIST
18701: LIST
18702: LIST
18703: LIST
18704: LIST
18705: LIST
18706: LIST
18707: LIST
18708: LIST
18709: LIST
18710: LIST
18711: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18712: LD_ADDR_VAR 0 54
18716: PUSH
18717: LD_INT 0
18719: PUSH
18720: LD_INT 0
18722: PUSH
18723: EMPTY
18724: LIST
18725: LIST
18726: PUSH
18727: LD_INT 0
18729: PUSH
18730: LD_INT 1
18732: NEG
18733: PUSH
18734: EMPTY
18735: LIST
18736: LIST
18737: PUSH
18738: LD_INT 1
18740: PUSH
18741: LD_INT 0
18743: PUSH
18744: EMPTY
18745: LIST
18746: LIST
18747: PUSH
18748: LD_INT 1
18750: PUSH
18751: LD_INT 1
18753: PUSH
18754: EMPTY
18755: LIST
18756: LIST
18757: PUSH
18758: LD_INT 0
18760: PUSH
18761: LD_INT 1
18763: PUSH
18764: EMPTY
18765: LIST
18766: LIST
18767: PUSH
18768: LD_INT 1
18770: NEG
18771: PUSH
18772: LD_INT 0
18774: PUSH
18775: EMPTY
18776: LIST
18777: LIST
18778: PUSH
18779: LD_INT 1
18781: NEG
18782: PUSH
18783: LD_INT 1
18785: NEG
18786: PUSH
18787: EMPTY
18788: LIST
18789: LIST
18790: PUSH
18791: LD_INT 1
18793: NEG
18794: PUSH
18795: LD_INT 2
18797: NEG
18798: PUSH
18799: EMPTY
18800: LIST
18801: LIST
18802: PUSH
18803: LD_INT 0
18805: PUSH
18806: LD_INT 2
18808: NEG
18809: PUSH
18810: EMPTY
18811: LIST
18812: LIST
18813: PUSH
18814: LD_INT 1
18816: PUSH
18817: LD_INT 1
18819: NEG
18820: PUSH
18821: EMPTY
18822: LIST
18823: LIST
18824: PUSH
18825: LD_INT 2
18827: PUSH
18828: LD_INT 0
18830: PUSH
18831: EMPTY
18832: LIST
18833: LIST
18834: PUSH
18835: LD_INT 2
18837: PUSH
18838: LD_INT 1
18840: PUSH
18841: EMPTY
18842: LIST
18843: LIST
18844: PUSH
18845: LD_INT 2
18847: PUSH
18848: LD_INT 2
18850: PUSH
18851: EMPTY
18852: LIST
18853: LIST
18854: PUSH
18855: LD_INT 1
18857: PUSH
18858: LD_INT 2
18860: PUSH
18861: EMPTY
18862: LIST
18863: LIST
18864: PUSH
18865: LD_INT 0
18867: PUSH
18868: LD_INT 2
18870: PUSH
18871: EMPTY
18872: LIST
18873: LIST
18874: PUSH
18875: LD_INT 1
18877: NEG
18878: PUSH
18879: LD_INT 1
18881: PUSH
18882: EMPTY
18883: LIST
18884: LIST
18885: PUSH
18886: LD_INT 2
18888: NEG
18889: PUSH
18890: LD_INT 0
18892: PUSH
18893: EMPTY
18894: LIST
18895: LIST
18896: PUSH
18897: LD_INT 2
18899: NEG
18900: PUSH
18901: LD_INT 1
18903: NEG
18904: PUSH
18905: EMPTY
18906: LIST
18907: LIST
18908: PUSH
18909: LD_INT 2
18911: NEG
18912: PUSH
18913: LD_INT 2
18915: NEG
18916: PUSH
18917: EMPTY
18918: LIST
18919: LIST
18920: PUSH
18921: EMPTY
18922: LIST
18923: LIST
18924: LIST
18925: LIST
18926: LIST
18927: LIST
18928: LIST
18929: LIST
18930: LIST
18931: LIST
18932: LIST
18933: LIST
18934: LIST
18935: LIST
18936: LIST
18937: LIST
18938: LIST
18939: LIST
18940: LIST
18941: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18942: LD_ADDR_VAR 0 55
18946: PUSH
18947: LD_INT 0
18949: PUSH
18950: LD_INT 0
18952: PUSH
18953: EMPTY
18954: LIST
18955: LIST
18956: PUSH
18957: LD_INT 0
18959: PUSH
18960: LD_INT 1
18962: NEG
18963: PUSH
18964: EMPTY
18965: LIST
18966: LIST
18967: PUSH
18968: LD_INT 1
18970: PUSH
18971: LD_INT 0
18973: PUSH
18974: EMPTY
18975: LIST
18976: LIST
18977: PUSH
18978: LD_INT 1
18980: PUSH
18981: LD_INT 1
18983: PUSH
18984: EMPTY
18985: LIST
18986: LIST
18987: PUSH
18988: LD_INT 0
18990: PUSH
18991: LD_INT 1
18993: PUSH
18994: EMPTY
18995: LIST
18996: LIST
18997: PUSH
18998: LD_INT 1
19000: NEG
19001: PUSH
19002: LD_INT 0
19004: PUSH
19005: EMPTY
19006: LIST
19007: LIST
19008: PUSH
19009: LD_INT 1
19011: NEG
19012: PUSH
19013: LD_INT 1
19015: NEG
19016: PUSH
19017: EMPTY
19018: LIST
19019: LIST
19020: PUSH
19021: LD_INT 1
19023: NEG
19024: PUSH
19025: LD_INT 2
19027: NEG
19028: PUSH
19029: EMPTY
19030: LIST
19031: LIST
19032: PUSH
19033: LD_INT 0
19035: PUSH
19036: LD_INT 2
19038: NEG
19039: PUSH
19040: EMPTY
19041: LIST
19042: LIST
19043: PUSH
19044: LD_INT 1
19046: PUSH
19047: LD_INT 1
19049: NEG
19050: PUSH
19051: EMPTY
19052: LIST
19053: LIST
19054: PUSH
19055: LD_INT 2
19057: PUSH
19058: LD_INT 0
19060: PUSH
19061: EMPTY
19062: LIST
19063: LIST
19064: PUSH
19065: LD_INT 2
19067: PUSH
19068: LD_INT 1
19070: PUSH
19071: EMPTY
19072: LIST
19073: LIST
19074: PUSH
19075: LD_INT 2
19077: PUSH
19078: LD_INT 2
19080: PUSH
19081: EMPTY
19082: LIST
19083: LIST
19084: PUSH
19085: LD_INT 1
19087: PUSH
19088: LD_INT 2
19090: PUSH
19091: EMPTY
19092: LIST
19093: LIST
19094: PUSH
19095: LD_INT 0
19097: PUSH
19098: LD_INT 2
19100: PUSH
19101: EMPTY
19102: LIST
19103: LIST
19104: PUSH
19105: LD_INT 1
19107: NEG
19108: PUSH
19109: LD_INT 1
19111: PUSH
19112: EMPTY
19113: LIST
19114: LIST
19115: PUSH
19116: LD_INT 2
19118: NEG
19119: PUSH
19120: LD_INT 0
19122: PUSH
19123: EMPTY
19124: LIST
19125: LIST
19126: PUSH
19127: LD_INT 2
19129: NEG
19130: PUSH
19131: LD_INT 1
19133: NEG
19134: PUSH
19135: EMPTY
19136: LIST
19137: LIST
19138: PUSH
19139: LD_INT 2
19141: NEG
19142: PUSH
19143: LD_INT 2
19145: NEG
19146: PUSH
19147: EMPTY
19148: LIST
19149: LIST
19150: PUSH
19151: EMPTY
19152: LIST
19153: LIST
19154: LIST
19155: LIST
19156: LIST
19157: LIST
19158: LIST
19159: LIST
19160: LIST
19161: LIST
19162: LIST
19163: LIST
19164: LIST
19165: LIST
19166: LIST
19167: LIST
19168: LIST
19169: LIST
19170: LIST
19171: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19172: LD_ADDR_VAR 0 56
19176: PUSH
19177: LD_INT 0
19179: PUSH
19180: LD_INT 0
19182: PUSH
19183: EMPTY
19184: LIST
19185: LIST
19186: PUSH
19187: LD_INT 0
19189: PUSH
19190: LD_INT 1
19192: NEG
19193: PUSH
19194: EMPTY
19195: LIST
19196: LIST
19197: PUSH
19198: LD_INT 1
19200: PUSH
19201: LD_INT 0
19203: PUSH
19204: EMPTY
19205: LIST
19206: LIST
19207: PUSH
19208: LD_INT 1
19210: PUSH
19211: LD_INT 1
19213: PUSH
19214: EMPTY
19215: LIST
19216: LIST
19217: PUSH
19218: LD_INT 0
19220: PUSH
19221: LD_INT 1
19223: PUSH
19224: EMPTY
19225: LIST
19226: LIST
19227: PUSH
19228: LD_INT 1
19230: NEG
19231: PUSH
19232: LD_INT 0
19234: PUSH
19235: EMPTY
19236: LIST
19237: LIST
19238: PUSH
19239: LD_INT 1
19241: NEG
19242: PUSH
19243: LD_INT 1
19245: NEG
19246: PUSH
19247: EMPTY
19248: LIST
19249: LIST
19250: PUSH
19251: LD_INT 1
19253: NEG
19254: PUSH
19255: LD_INT 2
19257: NEG
19258: PUSH
19259: EMPTY
19260: LIST
19261: LIST
19262: PUSH
19263: LD_INT 0
19265: PUSH
19266: LD_INT 2
19268: NEG
19269: PUSH
19270: EMPTY
19271: LIST
19272: LIST
19273: PUSH
19274: LD_INT 1
19276: PUSH
19277: LD_INT 1
19279: NEG
19280: PUSH
19281: EMPTY
19282: LIST
19283: LIST
19284: PUSH
19285: LD_INT 2
19287: PUSH
19288: LD_INT 0
19290: PUSH
19291: EMPTY
19292: LIST
19293: LIST
19294: PUSH
19295: LD_INT 2
19297: PUSH
19298: LD_INT 1
19300: PUSH
19301: EMPTY
19302: LIST
19303: LIST
19304: PUSH
19305: LD_INT 2
19307: PUSH
19308: LD_INT 2
19310: PUSH
19311: EMPTY
19312: LIST
19313: LIST
19314: PUSH
19315: LD_INT 1
19317: PUSH
19318: LD_INT 2
19320: PUSH
19321: EMPTY
19322: LIST
19323: LIST
19324: PUSH
19325: LD_INT 0
19327: PUSH
19328: LD_INT 2
19330: PUSH
19331: EMPTY
19332: LIST
19333: LIST
19334: PUSH
19335: LD_INT 1
19337: NEG
19338: PUSH
19339: LD_INT 1
19341: PUSH
19342: EMPTY
19343: LIST
19344: LIST
19345: PUSH
19346: LD_INT 2
19348: NEG
19349: PUSH
19350: LD_INT 0
19352: PUSH
19353: EMPTY
19354: LIST
19355: LIST
19356: PUSH
19357: LD_INT 2
19359: NEG
19360: PUSH
19361: LD_INT 1
19363: NEG
19364: PUSH
19365: EMPTY
19366: LIST
19367: LIST
19368: PUSH
19369: LD_INT 2
19371: NEG
19372: PUSH
19373: LD_INT 2
19375: NEG
19376: PUSH
19377: EMPTY
19378: LIST
19379: LIST
19380: PUSH
19381: EMPTY
19382: LIST
19383: LIST
19384: LIST
19385: LIST
19386: LIST
19387: LIST
19388: LIST
19389: LIST
19390: LIST
19391: LIST
19392: LIST
19393: LIST
19394: LIST
19395: LIST
19396: LIST
19397: LIST
19398: LIST
19399: LIST
19400: LIST
19401: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19402: LD_ADDR_VAR 0 57
19406: PUSH
19407: LD_INT 0
19409: PUSH
19410: LD_INT 0
19412: PUSH
19413: EMPTY
19414: LIST
19415: LIST
19416: PUSH
19417: LD_INT 0
19419: PUSH
19420: LD_INT 1
19422: NEG
19423: PUSH
19424: EMPTY
19425: LIST
19426: LIST
19427: PUSH
19428: LD_INT 1
19430: PUSH
19431: LD_INT 0
19433: PUSH
19434: EMPTY
19435: LIST
19436: LIST
19437: PUSH
19438: LD_INT 1
19440: PUSH
19441: LD_INT 1
19443: PUSH
19444: EMPTY
19445: LIST
19446: LIST
19447: PUSH
19448: LD_INT 0
19450: PUSH
19451: LD_INT 1
19453: PUSH
19454: EMPTY
19455: LIST
19456: LIST
19457: PUSH
19458: LD_INT 1
19460: NEG
19461: PUSH
19462: LD_INT 0
19464: PUSH
19465: EMPTY
19466: LIST
19467: LIST
19468: PUSH
19469: LD_INT 1
19471: NEG
19472: PUSH
19473: LD_INT 1
19475: NEG
19476: PUSH
19477: EMPTY
19478: LIST
19479: LIST
19480: PUSH
19481: LD_INT 1
19483: NEG
19484: PUSH
19485: LD_INT 2
19487: NEG
19488: PUSH
19489: EMPTY
19490: LIST
19491: LIST
19492: PUSH
19493: LD_INT 0
19495: PUSH
19496: LD_INT 2
19498: NEG
19499: PUSH
19500: EMPTY
19501: LIST
19502: LIST
19503: PUSH
19504: LD_INT 1
19506: PUSH
19507: LD_INT 1
19509: NEG
19510: PUSH
19511: EMPTY
19512: LIST
19513: LIST
19514: PUSH
19515: LD_INT 2
19517: PUSH
19518: LD_INT 0
19520: PUSH
19521: EMPTY
19522: LIST
19523: LIST
19524: PUSH
19525: LD_INT 2
19527: PUSH
19528: LD_INT 1
19530: PUSH
19531: EMPTY
19532: LIST
19533: LIST
19534: PUSH
19535: LD_INT 2
19537: PUSH
19538: LD_INT 2
19540: PUSH
19541: EMPTY
19542: LIST
19543: LIST
19544: PUSH
19545: LD_INT 1
19547: PUSH
19548: LD_INT 2
19550: PUSH
19551: EMPTY
19552: LIST
19553: LIST
19554: PUSH
19555: LD_INT 0
19557: PUSH
19558: LD_INT 2
19560: PUSH
19561: EMPTY
19562: LIST
19563: LIST
19564: PUSH
19565: LD_INT 1
19567: NEG
19568: PUSH
19569: LD_INT 1
19571: PUSH
19572: EMPTY
19573: LIST
19574: LIST
19575: PUSH
19576: LD_INT 2
19578: NEG
19579: PUSH
19580: LD_INT 0
19582: PUSH
19583: EMPTY
19584: LIST
19585: LIST
19586: PUSH
19587: LD_INT 2
19589: NEG
19590: PUSH
19591: LD_INT 1
19593: NEG
19594: PUSH
19595: EMPTY
19596: LIST
19597: LIST
19598: PUSH
19599: LD_INT 2
19601: NEG
19602: PUSH
19603: LD_INT 2
19605: NEG
19606: PUSH
19607: EMPTY
19608: LIST
19609: LIST
19610: PUSH
19611: EMPTY
19612: LIST
19613: LIST
19614: LIST
19615: LIST
19616: LIST
19617: LIST
19618: LIST
19619: LIST
19620: LIST
19621: LIST
19622: LIST
19623: LIST
19624: LIST
19625: LIST
19626: LIST
19627: LIST
19628: LIST
19629: LIST
19630: LIST
19631: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19632: LD_ADDR_VAR 0 58
19636: PUSH
19637: LD_INT 0
19639: PUSH
19640: LD_INT 0
19642: PUSH
19643: EMPTY
19644: LIST
19645: LIST
19646: PUSH
19647: LD_INT 0
19649: PUSH
19650: LD_INT 1
19652: NEG
19653: PUSH
19654: EMPTY
19655: LIST
19656: LIST
19657: PUSH
19658: LD_INT 1
19660: PUSH
19661: LD_INT 0
19663: PUSH
19664: EMPTY
19665: LIST
19666: LIST
19667: PUSH
19668: LD_INT 1
19670: PUSH
19671: LD_INT 1
19673: PUSH
19674: EMPTY
19675: LIST
19676: LIST
19677: PUSH
19678: LD_INT 0
19680: PUSH
19681: LD_INT 1
19683: PUSH
19684: EMPTY
19685: LIST
19686: LIST
19687: PUSH
19688: LD_INT 1
19690: NEG
19691: PUSH
19692: LD_INT 0
19694: PUSH
19695: EMPTY
19696: LIST
19697: LIST
19698: PUSH
19699: LD_INT 1
19701: NEG
19702: PUSH
19703: LD_INT 1
19705: NEG
19706: PUSH
19707: EMPTY
19708: LIST
19709: LIST
19710: PUSH
19711: LD_INT 1
19713: NEG
19714: PUSH
19715: LD_INT 2
19717: NEG
19718: PUSH
19719: EMPTY
19720: LIST
19721: LIST
19722: PUSH
19723: LD_INT 0
19725: PUSH
19726: LD_INT 2
19728: NEG
19729: PUSH
19730: EMPTY
19731: LIST
19732: LIST
19733: PUSH
19734: LD_INT 1
19736: PUSH
19737: LD_INT 1
19739: NEG
19740: PUSH
19741: EMPTY
19742: LIST
19743: LIST
19744: PUSH
19745: LD_INT 2
19747: PUSH
19748: LD_INT 0
19750: PUSH
19751: EMPTY
19752: LIST
19753: LIST
19754: PUSH
19755: LD_INT 2
19757: PUSH
19758: LD_INT 1
19760: PUSH
19761: EMPTY
19762: LIST
19763: LIST
19764: PUSH
19765: LD_INT 2
19767: PUSH
19768: LD_INT 2
19770: PUSH
19771: EMPTY
19772: LIST
19773: LIST
19774: PUSH
19775: LD_INT 1
19777: PUSH
19778: LD_INT 2
19780: PUSH
19781: EMPTY
19782: LIST
19783: LIST
19784: PUSH
19785: LD_INT 0
19787: PUSH
19788: LD_INT 2
19790: PUSH
19791: EMPTY
19792: LIST
19793: LIST
19794: PUSH
19795: LD_INT 1
19797: NEG
19798: PUSH
19799: LD_INT 1
19801: PUSH
19802: EMPTY
19803: LIST
19804: LIST
19805: PUSH
19806: LD_INT 2
19808: NEG
19809: PUSH
19810: LD_INT 0
19812: PUSH
19813: EMPTY
19814: LIST
19815: LIST
19816: PUSH
19817: LD_INT 2
19819: NEG
19820: PUSH
19821: LD_INT 1
19823: NEG
19824: PUSH
19825: EMPTY
19826: LIST
19827: LIST
19828: PUSH
19829: LD_INT 2
19831: NEG
19832: PUSH
19833: LD_INT 2
19835: NEG
19836: PUSH
19837: EMPTY
19838: LIST
19839: LIST
19840: PUSH
19841: EMPTY
19842: LIST
19843: LIST
19844: LIST
19845: LIST
19846: LIST
19847: LIST
19848: LIST
19849: LIST
19850: LIST
19851: LIST
19852: LIST
19853: LIST
19854: LIST
19855: LIST
19856: LIST
19857: LIST
19858: LIST
19859: LIST
19860: LIST
19861: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19862: LD_ADDR_VAR 0 59
19866: PUSH
19867: LD_INT 0
19869: PUSH
19870: LD_INT 0
19872: PUSH
19873: EMPTY
19874: LIST
19875: LIST
19876: PUSH
19877: LD_INT 0
19879: PUSH
19880: LD_INT 1
19882: NEG
19883: PUSH
19884: EMPTY
19885: LIST
19886: LIST
19887: PUSH
19888: LD_INT 1
19890: PUSH
19891: LD_INT 0
19893: PUSH
19894: EMPTY
19895: LIST
19896: LIST
19897: PUSH
19898: LD_INT 1
19900: PUSH
19901: LD_INT 1
19903: PUSH
19904: EMPTY
19905: LIST
19906: LIST
19907: PUSH
19908: LD_INT 0
19910: PUSH
19911: LD_INT 1
19913: PUSH
19914: EMPTY
19915: LIST
19916: LIST
19917: PUSH
19918: LD_INT 1
19920: NEG
19921: PUSH
19922: LD_INT 0
19924: PUSH
19925: EMPTY
19926: LIST
19927: LIST
19928: PUSH
19929: LD_INT 1
19931: NEG
19932: PUSH
19933: LD_INT 1
19935: NEG
19936: PUSH
19937: EMPTY
19938: LIST
19939: LIST
19940: PUSH
19941: EMPTY
19942: LIST
19943: LIST
19944: LIST
19945: LIST
19946: LIST
19947: LIST
19948: LIST
19949: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19950: LD_ADDR_VAR 0 60
19954: PUSH
19955: LD_INT 0
19957: PUSH
19958: LD_INT 0
19960: PUSH
19961: EMPTY
19962: LIST
19963: LIST
19964: PUSH
19965: LD_INT 0
19967: PUSH
19968: LD_INT 1
19970: NEG
19971: PUSH
19972: EMPTY
19973: LIST
19974: LIST
19975: PUSH
19976: LD_INT 1
19978: PUSH
19979: LD_INT 0
19981: PUSH
19982: EMPTY
19983: LIST
19984: LIST
19985: PUSH
19986: LD_INT 1
19988: PUSH
19989: LD_INT 1
19991: PUSH
19992: EMPTY
19993: LIST
19994: LIST
19995: PUSH
19996: LD_INT 0
19998: PUSH
19999: LD_INT 1
20001: PUSH
20002: EMPTY
20003: LIST
20004: LIST
20005: PUSH
20006: LD_INT 1
20008: NEG
20009: PUSH
20010: LD_INT 0
20012: PUSH
20013: EMPTY
20014: LIST
20015: LIST
20016: PUSH
20017: LD_INT 1
20019: NEG
20020: PUSH
20021: LD_INT 1
20023: NEG
20024: PUSH
20025: EMPTY
20026: LIST
20027: LIST
20028: PUSH
20029: EMPTY
20030: LIST
20031: LIST
20032: LIST
20033: LIST
20034: LIST
20035: LIST
20036: LIST
20037: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20038: LD_ADDR_VAR 0 61
20042: PUSH
20043: LD_INT 0
20045: PUSH
20046: LD_INT 0
20048: PUSH
20049: EMPTY
20050: LIST
20051: LIST
20052: PUSH
20053: LD_INT 0
20055: PUSH
20056: LD_INT 1
20058: NEG
20059: PUSH
20060: EMPTY
20061: LIST
20062: LIST
20063: PUSH
20064: LD_INT 1
20066: PUSH
20067: LD_INT 0
20069: PUSH
20070: EMPTY
20071: LIST
20072: LIST
20073: PUSH
20074: LD_INT 1
20076: PUSH
20077: LD_INT 1
20079: PUSH
20080: EMPTY
20081: LIST
20082: LIST
20083: PUSH
20084: LD_INT 0
20086: PUSH
20087: LD_INT 1
20089: PUSH
20090: EMPTY
20091: LIST
20092: LIST
20093: PUSH
20094: LD_INT 1
20096: NEG
20097: PUSH
20098: LD_INT 0
20100: PUSH
20101: EMPTY
20102: LIST
20103: LIST
20104: PUSH
20105: LD_INT 1
20107: NEG
20108: PUSH
20109: LD_INT 1
20111: NEG
20112: PUSH
20113: EMPTY
20114: LIST
20115: LIST
20116: PUSH
20117: EMPTY
20118: LIST
20119: LIST
20120: LIST
20121: LIST
20122: LIST
20123: LIST
20124: LIST
20125: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20126: LD_ADDR_VAR 0 62
20130: PUSH
20131: LD_INT 0
20133: PUSH
20134: LD_INT 0
20136: PUSH
20137: EMPTY
20138: LIST
20139: LIST
20140: PUSH
20141: LD_INT 0
20143: PUSH
20144: LD_INT 1
20146: NEG
20147: PUSH
20148: EMPTY
20149: LIST
20150: LIST
20151: PUSH
20152: LD_INT 1
20154: PUSH
20155: LD_INT 0
20157: PUSH
20158: EMPTY
20159: LIST
20160: LIST
20161: PUSH
20162: LD_INT 1
20164: PUSH
20165: LD_INT 1
20167: PUSH
20168: EMPTY
20169: LIST
20170: LIST
20171: PUSH
20172: LD_INT 0
20174: PUSH
20175: LD_INT 1
20177: PUSH
20178: EMPTY
20179: LIST
20180: LIST
20181: PUSH
20182: LD_INT 1
20184: NEG
20185: PUSH
20186: LD_INT 0
20188: PUSH
20189: EMPTY
20190: LIST
20191: LIST
20192: PUSH
20193: LD_INT 1
20195: NEG
20196: PUSH
20197: LD_INT 1
20199: NEG
20200: PUSH
20201: EMPTY
20202: LIST
20203: LIST
20204: PUSH
20205: EMPTY
20206: LIST
20207: LIST
20208: LIST
20209: LIST
20210: LIST
20211: LIST
20212: LIST
20213: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20214: LD_ADDR_VAR 0 63
20218: PUSH
20219: LD_INT 0
20221: PUSH
20222: LD_INT 0
20224: PUSH
20225: EMPTY
20226: LIST
20227: LIST
20228: PUSH
20229: LD_INT 0
20231: PUSH
20232: LD_INT 1
20234: NEG
20235: PUSH
20236: EMPTY
20237: LIST
20238: LIST
20239: PUSH
20240: LD_INT 1
20242: PUSH
20243: LD_INT 0
20245: PUSH
20246: EMPTY
20247: LIST
20248: LIST
20249: PUSH
20250: LD_INT 1
20252: PUSH
20253: LD_INT 1
20255: PUSH
20256: EMPTY
20257: LIST
20258: LIST
20259: PUSH
20260: LD_INT 0
20262: PUSH
20263: LD_INT 1
20265: PUSH
20266: EMPTY
20267: LIST
20268: LIST
20269: PUSH
20270: LD_INT 1
20272: NEG
20273: PUSH
20274: LD_INT 0
20276: PUSH
20277: EMPTY
20278: LIST
20279: LIST
20280: PUSH
20281: LD_INT 1
20283: NEG
20284: PUSH
20285: LD_INT 1
20287: NEG
20288: PUSH
20289: EMPTY
20290: LIST
20291: LIST
20292: PUSH
20293: EMPTY
20294: LIST
20295: LIST
20296: LIST
20297: LIST
20298: LIST
20299: LIST
20300: LIST
20301: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20302: LD_ADDR_VAR 0 64
20306: PUSH
20307: LD_INT 0
20309: PUSH
20310: LD_INT 0
20312: PUSH
20313: EMPTY
20314: LIST
20315: LIST
20316: PUSH
20317: LD_INT 0
20319: PUSH
20320: LD_INT 1
20322: NEG
20323: PUSH
20324: EMPTY
20325: LIST
20326: LIST
20327: PUSH
20328: LD_INT 1
20330: PUSH
20331: LD_INT 0
20333: PUSH
20334: EMPTY
20335: LIST
20336: LIST
20337: PUSH
20338: LD_INT 1
20340: PUSH
20341: LD_INT 1
20343: PUSH
20344: EMPTY
20345: LIST
20346: LIST
20347: PUSH
20348: LD_INT 0
20350: PUSH
20351: LD_INT 1
20353: PUSH
20354: EMPTY
20355: LIST
20356: LIST
20357: PUSH
20358: LD_INT 1
20360: NEG
20361: PUSH
20362: LD_INT 0
20364: PUSH
20365: EMPTY
20366: LIST
20367: LIST
20368: PUSH
20369: LD_INT 1
20371: NEG
20372: PUSH
20373: LD_INT 1
20375: NEG
20376: PUSH
20377: EMPTY
20378: LIST
20379: LIST
20380: PUSH
20381: EMPTY
20382: LIST
20383: LIST
20384: LIST
20385: LIST
20386: LIST
20387: LIST
20388: LIST
20389: ST_TO_ADDR
// end ; 1 :
20390: GO 26287
20392: LD_INT 1
20394: DOUBLE
20395: EQUAL
20396: IFTRUE 20400
20398: GO 23023
20400: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20401: LD_ADDR_VAR 0 11
20405: PUSH
20406: LD_INT 1
20408: NEG
20409: PUSH
20410: LD_INT 3
20412: NEG
20413: PUSH
20414: EMPTY
20415: LIST
20416: LIST
20417: PUSH
20418: LD_INT 0
20420: PUSH
20421: LD_INT 3
20423: NEG
20424: PUSH
20425: EMPTY
20426: LIST
20427: LIST
20428: PUSH
20429: LD_INT 1
20431: PUSH
20432: LD_INT 2
20434: NEG
20435: PUSH
20436: EMPTY
20437: LIST
20438: LIST
20439: PUSH
20440: EMPTY
20441: LIST
20442: LIST
20443: LIST
20444: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20445: LD_ADDR_VAR 0 12
20449: PUSH
20450: LD_INT 2
20452: PUSH
20453: LD_INT 1
20455: NEG
20456: PUSH
20457: EMPTY
20458: LIST
20459: LIST
20460: PUSH
20461: LD_INT 3
20463: PUSH
20464: LD_INT 0
20466: PUSH
20467: EMPTY
20468: LIST
20469: LIST
20470: PUSH
20471: LD_INT 3
20473: PUSH
20474: LD_INT 1
20476: PUSH
20477: EMPTY
20478: LIST
20479: LIST
20480: PUSH
20481: EMPTY
20482: LIST
20483: LIST
20484: LIST
20485: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20486: LD_ADDR_VAR 0 13
20490: PUSH
20491: LD_INT 3
20493: PUSH
20494: LD_INT 2
20496: PUSH
20497: EMPTY
20498: LIST
20499: LIST
20500: PUSH
20501: LD_INT 3
20503: PUSH
20504: LD_INT 3
20506: PUSH
20507: EMPTY
20508: LIST
20509: LIST
20510: PUSH
20511: LD_INT 2
20513: PUSH
20514: LD_INT 3
20516: PUSH
20517: EMPTY
20518: LIST
20519: LIST
20520: PUSH
20521: EMPTY
20522: LIST
20523: LIST
20524: LIST
20525: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20526: LD_ADDR_VAR 0 14
20530: PUSH
20531: LD_INT 1
20533: PUSH
20534: LD_INT 3
20536: PUSH
20537: EMPTY
20538: LIST
20539: LIST
20540: PUSH
20541: LD_INT 0
20543: PUSH
20544: LD_INT 3
20546: PUSH
20547: EMPTY
20548: LIST
20549: LIST
20550: PUSH
20551: LD_INT 1
20553: NEG
20554: PUSH
20555: LD_INT 2
20557: PUSH
20558: EMPTY
20559: LIST
20560: LIST
20561: PUSH
20562: EMPTY
20563: LIST
20564: LIST
20565: LIST
20566: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20567: LD_ADDR_VAR 0 15
20571: PUSH
20572: LD_INT 2
20574: NEG
20575: PUSH
20576: LD_INT 1
20578: PUSH
20579: EMPTY
20580: LIST
20581: LIST
20582: PUSH
20583: LD_INT 3
20585: NEG
20586: PUSH
20587: LD_INT 0
20589: PUSH
20590: EMPTY
20591: LIST
20592: LIST
20593: PUSH
20594: LD_INT 3
20596: NEG
20597: PUSH
20598: LD_INT 1
20600: NEG
20601: PUSH
20602: EMPTY
20603: LIST
20604: LIST
20605: PUSH
20606: EMPTY
20607: LIST
20608: LIST
20609: LIST
20610: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20611: LD_ADDR_VAR 0 16
20615: PUSH
20616: LD_INT 2
20618: NEG
20619: PUSH
20620: LD_INT 3
20622: NEG
20623: PUSH
20624: EMPTY
20625: LIST
20626: LIST
20627: PUSH
20628: LD_INT 3
20630: NEG
20631: PUSH
20632: LD_INT 2
20634: NEG
20635: PUSH
20636: EMPTY
20637: LIST
20638: LIST
20639: PUSH
20640: LD_INT 3
20642: NEG
20643: PUSH
20644: LD_INT 3
20646: NEG
20647: PUSH
20648: EMPTY
20649: LIST
20650: LIST
20651: PUSH
20652: EMPTY
20653: LIST
20654: LIST
20655: LIST
20656: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20657: LD_ADDR_VAR 0 17
20661: PUSH
20662: LD_INT 1
20664: NEG
20665: PUSH
20666: LD_INT 3
20668: NEG
20669: PUSH
20670: EMPTY
20671: LIST
20672: LIST
20673: PUSH
20674: LD_INT 0
20676: PUSH
20677: LD_INT 3
20679: NEG
20680: PUSH
20681: EMPTY
20682: LIST
20683: LIST
20684: PUSH
20685: LD_INT 1
20687: PUSH
20688: LD_INT 2
20690: NEG
20691: PUSH
20692: EMPTY
20693: LIST
20694: LIST
20695: PUSH
20696: EMPTY
20697: LIST
20698: LIST
20699: LIST
20700: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20701: LD_ADDR_VAR 0 18
20705: PUSH
20706: LD_INT 2
20708: PUSH
20709: LD_INT 1
20711: NEG
20712: PUSH
20713: EMPTY
20714: LIST
20715: LIST
20716: PUSH
20717: LD_INT 3
20719: PUSH
20720: LD_INT 0
20722: PUSH
20723: EMPTY
20724: LIST
20725: LIST
20726: PUSH
20727: LD_INT 3
20729: PUSH
20730: LD_INT 1
20732: PUSH
20733: EMPTY
20734: LIST
20735: LIST
20736: PUSH
20737: EMPTY
20738: LIST
20739: LIST
20740: LIST
20741: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20742: LD_ADDR_VAR 0 19
20746: PUSH
20747: LD_INT 3
20749: PUSH
20750: LD_INT 2
20752: PUSH
20753: EMPTY
20754: LIST
20755: LIST
20756: PUSH
20757: LD_INT 3
20759: PUSH
20760: LD_INT 3
20762: PUSH
20763: EMPTY
20764: LIST
20765: LIST
20766: PUSH
20767: LD_INT 2
20769: PUSH
20770: LD_INT 3
20772: PUSH
20773: EMPTY
20774: LIST
20775: LIST
20776: PUSH
20777: EMPTY
20778: LIST
20779: LIST
20780: LIST
20781: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20782: LD_ADDR_VAR 0 20
20786: PUSH
20787: LD_INT 1
20789: PUSH
20790: LD_INT 3
20792: PUSH
20793: EMPTY
20794: LIST
20795: LIST
20796: PUSH
20797: LD_INT 0
20799: PUSH
20800: LD_INT 3
20802: PUSH
20803: EMPTY
20804: LIST
20805: LIST
20806: PUSH
20807: LD_INT 1
20809: NEG
20810: PUSH
20811: LD_INT 2
20813: PUSH
20814: EMPTY
20815: LIST
20816: LIST
20817: PUSH
20818: EMPTY
20819: LIST
20820: LIST
20821: LIST
20822: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20823: LD_ADDR_VAR 0 21
20827: PUSH
20828: LD_INT 2
20830: NEG
20831: PUSH
20832: LD_INT 1
20834: PUSH
20835: EMPTY
20836: LIST
20837: LIST
20838: PUSH
20839: LD_INT 3
20841: NEG
20842: PUSH
20843: LD_INT 0
20845: PUSH
20846: EMPTY
20847: LIST
20848: LIST
20849: PUSH
20850: LD_INT 3
20852: NEG
20853: PUSH
20854: LD_INT 1
20856: NEG
20857: PUSH
20858: EMPTY
20859: LIST
20860: LIST
20861: PUSH
20862: EMPTY
20863: LIST
20864: LIST
20865: LIST
20866: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20867: LD_ADDR_VAR 0 22
20871: PUSH
20872: LD_INT 2
20874: NEG
20875: PUSH
20876: LD_INT 3
20878: NEG
20879: PUSH
20880: EMPTY
20881: LIST
20882: LIST
20883: PUSH
20884: LD_INT 3
20886: NEG
20887: PUSH
20888: LD_INT 2
20890: NEG
20891: PUSH
20892: EMPTY
20893: LIST
20894: LIST
20895: PUSH
20896: LD_INT 3
20898: NEG
20899: PUSH
20900: LD_INT 3
20902: NEG
20903: PUSH
20904: EMPTY
20905: LIST
20906: LIST
20907: PUSH
20908: EMPTY
20909: LIST
20910: LIST
20911: LIST
20912: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20913: LD_ADDR_VAR 0 23
20917: PUSH
20918: LD_INT 0
20920: PUSH
20921: LD_INT 3
20923: NEG
20924: PUSH
20925: EMPTY
20926: LIST
20927: LIST
20928: PUSH
20929: LD_INT 1
20931: NEG
20932: PUSH
20933: LD_INT 4
20935: NEG
20936: PUSH
20937: EMPTY
20938: LIST
20939: LIST
20940: PUSH
20941: LD_INT 1
20943: PUSH
20944: LD_INT 3
20946: NEG
20947: PUSH
20948: EMPTY
20949: LIST
20950: LIST
20951: PUSH
20952: EMPTY
20953: LIST
20954: LIST
20955: LIST
20956: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20957: LD_ADDR_VAR 0 24
20961: PUSH
20962: LD_INT 3
20964: PUSH
20965: LD_INT 0
20967: PUSH
20968: EMPTY
20969: LIST
20970: LIST
20971: PUSH
20972: LD_INT 3
20974: PUSH
20975: LD_INT 1
20977: NEG
20978: PUSH
20979: EMPTY
20980: LIST
20981: LIST
20982: PUSH
20983: LD_INT 4
20985: PUSH
20986: LD_INT 1
20988: PUSH
20989: EMPTY
20990: LIST
20991: LIST
20992: PUSH
20993: EMPTY
20994: LIST
20995: LIST
20996: LIST
20997: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20998: LD_ADDR_VAR 0 25
21002: PUSH
21003: LD_INT 3
21005: PUSH
21006: LD_INT 3
21008: PUSH
21009: EMPTY
21010: LIST
21011: LIST
21012: PUSH
21013: LD_INT 4
21015: PUSH
21016: LD_INT 3
21018: PUSH
21019: EMPTY
21020: LIST
21021: LIST
21022: PUSH
21023: LD_INT 3
21025: PUSH
21026: LD_INT 4
21028: PUSH
21029: EMPTY
21030: LIST
21031: LIST
21032: PUSH
21033: EMPTY
21034: LIST
21035: LIST
21036: LIST
21037: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21038: LD_ADDR_VAR 0 26
21042: PUSH
21043: LD_INT 0
21045: PUSH
21046: LD_INT 3
21048: PUSH
21049: EMPTY
21050: LIST
21051: LIST
21052: PUSH
21053: LD_INT 1
21055: PUSH
21056: LD_INT 4
21058: PUSH
21059: EMPTY
21060: LIST
21061: LIST
21062: PUSH
21063: LD_INT 1
21065: NEG
21066: PUSH
21067: LD_INT 3
21069: PUSH
21070: EMPTY
21071: LIST
21072: LIST
21073: PUSH
21074: EMPTY
21075: LIST
21076: LIST
21077: LIST
21078: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21079: LD_ADDR_VAR 0 27
21083: PUSH
21084: LD_INT 3
21086: NEG
21087: PUSH
21088: LD_INT 0
21090: PUSH
21091: EMPTY
21092: LIST
21093: LIST
21094: PUSH
21095: LD_INT 3
21097: NEG
21098: PUSH
21099: LD_INT 1
21101: PUSH
21102: EMPTY
21103: LIST
21104: LIST
21105: PUSH
21106: LD_INT 4
21108: NEG
21109: PUSH
21110: LD_INT 1
21112: NEG
21113: PUSH
21114: EMPTY
21115: LIST
21116: LIST
21117: PUSH
21118: EMPTY
21119: LIST
21120: LIST
21121: LIST
21122: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21123: LD_ADDR_VAR 0 28
21127: PUSH
21128: LD_INT 3
21130: NEG
21131: PUSH
21132: LD_INT 3
21134: NEG
21135: PUSH
21136: EMPTY
21137: LIST
21138: LIST
21139: PUSH
21140: LD_INT 3
21142: NEG
21143: PUSH
21144: LD_INT 4
21146: NEG
21147: PUSH
21148: EMPTY
21149: LIST
21150: LIST
21151: PUSH
21152: LD_INT 4
21154: NEG
21155: PUSH
21156: LD_INT 3
21158: NEG
21159: PUSH
21160: EMPTY
21161: LIST
21162: LIST
21163: PUSH
21164: EMPTY
21165: LIST
21166: LIST
21167: LIST
21168: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21169: LD_ADDR_VAR 0 29
21173: PUSH
21174: LD_INT 1
21176: NEG
21177: PUSH
21178: LD_INT 3
21180: NEG
21181: PUSH
21182: EMPTY
21183: LIST
21184: LIST
21185: PUSH
21186: LD_INT 0
21188: PUSH
21189: LD_INT 3
21191: NEG
21192: PUSH
21193: EMPTY
21194: LIST
21195: LIST
21196: PUSH
21197: LD_INT 1
21199: PUSH
21200: LD_INT 2
21202: NEG
21203: PUSH
21204: EMPTY
21205: LIST
21206: LIST
21207: PUSH
21208: LD_INT 1
21210: NEG
21211: PUSH
21212: LD_INT 4
21214: NEG
21215: PUSH
21216: EMPTY
21217: LIST
21218: LIST
21219: PUSH
21220: LD_INT 0
21222: PUSH
21223: LD_INT 4
21225: NEG
21226: PUSH
21227: EMPTY
21228: LIST
21229: LIST
21230: PUSH
21231: LD_INT 1
21233: PUSH
21234: LD_INT 3
21236: NEG
21237: PUSH
21238: EMPTY
21239: LIST
21240: LIST
21241: PUSH
21242: LD_INT 1
21244: NEG
21245: PUSH
21246: LD_INT 5
21248: NEG
21249: PUSH
21250: EMPTY
21251: LIST
21252: LIST
21253: PUSH
21254: LD_INT 0
21256: PUSH
21257: LD_INT 5
21259: NEG
21260: PUSH
21261: EMPTY
21262: LIST
21263: LIST
21264: PUSH
21265: LD_INT 1
21267: PUSH
21268: LD_INT 4
21270: NEG
21271: PUSH
21272: EMPTY
21273: LIST
21274: LIST
21275: PUSH
21276: LD_INT 1
21278: NEG
21279: PUSH
21280: LD_INT 6
21282: NEG
21283: PUSH
21284: EMPTY
21285: LIST
21286: LIST
21287: PUSH
21288: LD_INT 0
21290: PUSH
21291: LD_INT 6
21293: NEG
21294: PUSH
21295: EMPTY
21296: LIST
21297: LIST
21298: PUSH
21299: LD_INT 1
21301: PUSH
21302: LD_INT 5
21304: NEG
21305: PUSH
21306: EMPTY
21307: LIST
21308: LIST
21309: PUSH
21310: EMPTY
21311: LIST
21312: LIST
21313: LIST
21314: LIST
21315: LIST
21316: LIST
21317: LIST
21318: LIST
21319: LIST
21320: LIST
21321: LIST
21322: LIST
21323: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21324: LD_ADDR_VAR 0 30
21328: PUSH
21329: LD_INT 2
21331: PUSH
21332: LD_INT 1
21334: NEG
21335: PUSH
21336: EMPTY
21337: LIST
21338: LIST
21339: PUSH
21340: LD_INT 3
21342: PUSH
21343: LD_INT 0
21345: PUSH
21346: EMPTY
21347: LIST
21348: LIST
21349: PUSH
21350: LD_INT 3
21352: PUSH
21353: LD_INT 1
21355: PUSH
21356: EMPTY
21357: LIST
21358: LIST
21359: PUSH
21360: LD_INT 3
21362: PUSH
21363: LD_INT 1
21365: NEG
21366: PUSH
21367: EMPTY
21368: LIST
21369: LIST
21370: PUSH
21371: LD_INT 4
21373: PUSH
21374: LD_INT 0
21376: PUSH
21377: EMPTY
21378: LIST
21379: LIST
21380: PUSH
21381: LD_INT 4
21383: PUSH
21384: LD_INT 1
21386: PUSH
21387: EMPTY
21388: LIST
21389: LIST
21390: PUSH
21391: LD_INT 4
21393: PUSH
21394: LD_INT 1
21396: NEG
21397: PUSH
21398: EMPTY
21399: LIST
21400: LIST
21401: PUSH
21402: LD_INT 5
21404: PUSH
21405: LD_INT 0
21407: PUSH
21408: EMPTY
21409: LIST
21410: LIST
21411: PUSH
21412: LD_INT 5
21414: PUSH
21415: LD_INT 1
21417: PUSH
21418: EMPTY
21419: LIST
21420: LIST
21421: PUSH
21422: LD_INT 5
21424: PUSH
21425: LD_INT 1
21427: NEG
21428: PUSH
21429: EMPTY
21430: LIST
21431: LIST
21432: PUSH
21433: LD_INT 6
21435: PUSH
21436: LD_INT 0
21438: PUSH
21439: EMPTY
21440: LIST
21441: LIST
21442: PUSH
21443: LD_INT 6
21445: PUSH
21446: LD_INT 1
21448: PUSH
21449: EMPTY
21450: LIST
21451: LIST
21452: PUSH
21453: EMPTY
21454: LIST
21455: LIST
21456: LIST
21457: LIST
21458: LIST
21459: LIST
21460: LIST
21461: LIST
21462: LIST
21463: LIST
21464: LIST
21465: LIST
21466: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21467: LD_ADDR_VAR 0 31
21471: PUSH
21472: LD_INT 3
21474: PUSH
21475: LD_INT 2
21477: PUSH
21478: EMPTY
21479: LIST
21480: LIST
21481: PUSH
21482: LD_INT 3
21484: PUSH
21485: LD_INT 3
21487: PUSH
21488: EMPTY
21489: LIST
21490: LIST
21491: PUSH
21492: LD_INT 2
21494: PUSH
21495: LD_INT 3
21497: PUSH
21498: EMPTY
21499: LIST
21500: LIST
21501: PUSH
21502: LD_INT 4
21504: PUSH
21505: LD_INT 3
21507: PUSH
21508: EMPTY
21509: LIST
21510: LIST
21511: PUSH
21512: LD_INT 4
21514: PUSH
21515: LD_INT 4
21517: PUSH
21518: EMPTY
21519: LIST
21520: LIST
21521: PUSH
21522: LD_INT 3
21524: PUSH
21525: LD_INT 4
21527: PUSH
21528: EMPTY
21529: LIST
21530: LIST
21531: PUSH
21532: LD_INT 5
21534: PUSH
21535: LD_INT 4
21537: PUSH
21538: EMPTY
21539: LIST
21540: LIST
21541: PUSH
21542: LD_INT 5
21544: PUSH
21545: LD_INT 5
21547: PUSH
21548: EMPTY
21549: LIST
21550: LIST
21551: PUSH
21552: LD_INT 4
21554: PUSH
21555: LD_INT 5
21557: PUSH
21558: EMPTY
21559: LIST
21560: LIST
21561: PUSH
21562: LD_INT 6
21564: PUSH
21565: LD_INT 5
21567: PUSH
21568: EMPTY
21569: LIST
21570: LIST
21571: PUSH
21572: LD_INT 6
21574: PUSH
21575: LD_INT 6
21577: PUSH
21578: EMPTY
21579: LIST
21580: LIST
21581: PUSH
21582: LD_INT 5
21584: PUSH
21585: LD_INT 6
21587: PUSH
21588: EMPTY
21589: LIST
21590: LIST
21591: PUSH
21592: EMPTY
21593: LIST
21594: LIST
21595: LIST
21596: LIST
21597: LIST
21598: LIST
21599: LIST
21600: LIST
21601: LIST
21602: LIST
21603: LIST
21604: LIST
21605: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21606: LD_ADDR_VAR 0 32
21610: PUSH
21611: LD_INT 1
21613: PUSH
21614: LD_INT 3
21616: PUSH
21617: EMPTY
21618: LIST
21619: LIST
21620: PUSH
21621: LD_INT 0
21623: PUSH
21624: LD_INT 3
21626: PUSH
21627: EMPTY
21628: LIST
21629: LIST
21630: PUSH
21631: LD_INT 1
21633: NEG
21634: PUSH
21635: LD_INT 2
21637: PUSH
21638: EMPTY
21639: LIST
21640: LIST
21641: PUSH
21642: LD_INT 1
21644: PUSH
21645: LD_INT 4
21647: PUSH
21648: EMPTY
21649: LIST
21650: LIST
21651: PUSH
21652: LD_INT 0
21654: PUSH
21655: LD_INT 4
21657: PUSH
21658: EMPTY
21659: LIST
21660: LIST
21661: PUSH
21662: LD_INT 1
21664: NEG
21665: PUSH
21666: LD_INT 3
21668: PUSH
21669: EMPTY
21670: LIST
21671: LIST
21672: PUSH
21673: LD_INT 1
21675: PUSH
21676: LD_INT 5
21678: PUSH
21679: EMPTY
21680: LIST
21681: LIST
21682: PUSH
21683: LD_INT 0
21685: PUSH
21686: LD_INT 5
21688: PUSH
21689: EMPTY
21690: LIST
21691: LIST
21692: PUSH
21693: LD_INT 1
21695: NEG
21696: PUSH
21697: LD_INT 4
21699: PUSH
21700: EMPTY
21701: LIST
21702: LIST
21703: PUSH
21704: LD_INT 1
21706: PUSH
21707: LD_INT 6
21709: PUSH
21710: EMPTY
21711: LIST
21712: LIST
21713: PUSH
21714: LD_INT 0
21716: PUSH
21717: LD_INT 6
21719: PUSH
21720: EMPTY
21721: LIST
21722: LIST
21723: PUSH
21724: LD_INT 1
21726: NEG
21727: PUSH
21728: LD_INT 5
21730: PUSH
21731: EMPTY
21732: LIST
21733: LIST
21734: PUSH
21735: EMPTY
21736: LIST
21737: LIST
21738: LIST
21739: LIST
21740: LIST
21741: LIST
21742: LIST
21743: LIST
21744: LIST
21745: LIST
21746: LIST
21747: LIST
21748: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21749: LD_ADDR_VAR 0 33
21753: PUSH
21754: LD_INT 2
21756: NEG
21757: PUSH
21758: LD_INT 1
21760: PUSH
21761: EMPTY
21762: LIST
21763: LIST
21764: PUSH
21765: LD_INT 3
21767: NEG
21768: PUSH
21769: LD_INT 0
21771: PUSH
21772: EMPTY
21773: LIST
21774: LIST
21775: PUSH
21776: LD_INT 3
21778: NEG
21779: PUSH
21780: LD_INT 1
21782: NEG
21783: PUSH
21784: EMPTY
21785: LIST
21786: LIST
21787: PUSH
21788: LD_INT 3
21790: NEG
21791: PUSH
21792: LD_INT 1
21794: PUSH
21795: EMPTY
21796: LIST
21797: LIST
21798: PUSH
21799: LD_INT 4
21801: NEG
21802: PUSH
21803: LD_INT 0
21805: PUSH
21806: EMPTY
21807: LIST
21808: LIST
21809: PUSH
21810: LD_INT 4
21812: NEG
21813: PUSH
21814: LD_INT 1
21816: NEG
21817: PUSH
21818: EMPTY
21819: LIST
21820: LIST
21821: PUSH
21822: LD_INT 4
21824: NEG
21825: PUSH
21826: LD_INT 1
21828: PUSH
21829: EMPTY
21830: LIST
21831: LIST
21832: PUSH
21833: LD_INT 5
21835: NEG
21836: PUSH
21837: LD_INT 0
21839: PUSH
21840: EMPTY
21841: LIST
21842: LIST
21843: PUSH
21844: LD_INT 5
21846: NEG
21847: PUSH
21848: LD_INT 1
21850: NEG
21851: PUSH
21852: EMPTY
21853: LIST
21854: LIST
21855: PUSH
21856: LD_INT 5
21858: NEG
21859: PUSH
21860: LD_INT 1
21862: PUSH
21863: EMPTY
21864: LIST
21865: LIST
21866: PUSH
21867: LD_INT 6
21869: NEG
21870: PUSH
21871: LD_INT 0
21873: PUSH
21874: EMPTY
21875: LIST
21876: LIST
21877: PUSH
21878: LD_INT 6
21880: NEG
21881: PUSH
21882: LD_INT 1
21884: NEG
21885: PUSH
21886: EMPTY
21887: LIST
21888: LIST
21889: PUSH
21890: EMPTY
21891: LIST
21892: LIST
21893: LIST
21894: LIST
21895: LIST
21896: LIST
21897: LIST
21898: LIST
21899: LIST
21900: LIST
21901: LIST
21902: LIST
21903: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21904: LD_ADDR_VAR 0 34
21908: PUSH
21909: LD_INT 2
21911: NEG
21912: PUSH
21913: LD_INT 3
21915: NEG
21916: PUSH
21917: EMPTY
21918: LIST
21919: LIST
21920: PUSH
21921: LD_INT 3
21923: NEG
21924: PUSH
21925: LD_INT 2
21927: NEG
21928: PUSH
21929: EMPTY
21930: LIST
21931: LIST
21932: PUSH
21933: LD_INT 3
21935: NEG
21936: PUSH
21937: LD_INT 3
21939: NEG
21940: PUSH
21941: EMPTY
21942: LIST
21943: LIST
21944: PUSH
21945: LD_INT 3
21947: NEG
21948: PUSH
21949: LD_INT 4
21951: NEG
21952: PUSH
21953: EMPTY
21954: LIST
21955: LIST
21956: PUSH
21957: LD_INT 4
21959: NEG
21960: PUSH
21961: LD_INT 3
21963: NEG
21964: PUSH
21965: EMPTY
21966: LIST
21967: LIST
21968: PUSH
21969: LD_INT 4
21971: NEG
21972: PUSH
21973: LD_INT 4
21975: NEG
21976: PUSH
21977: EMPTY
21978: LIST
21979: LIST
21980: PUSH
21981: LD_INT 4
21983: NEG
21984: PUSH
21985: LD_INT 5
21987: NEG
21988: PUSH
21989: EMPTY
21990: LIST
21991: LIST
21992: PUSH
21993: LD_INT 5
21995: NEG
21996: PUSH
21997: LD_INT 4
21999: NEG
22000: PUSH
22001: EMPTY
22002: LIST
22003: LIST
22004: PUSH
22005: LD_INT 5
22007: NEG
22008: PUSH
22009: LD_INT 5
22011: NEG
22012: PUSH
22013: EMPTY
22014: LIST
22015: LIST
22016: PUSH
22017: LD_INT 5
22019: NEG
22020: PUSH
22021: LD_INT 6
22023: NEG
22024: PUSH
22025: EMPTY
22026: LIST
22027: LIST
22028: PUSH
22029: LD_INT 6
22031: NEG
22032: PUSH
22033: LD_INT 5
22035: NEG
22036: PUSH
22037: EMPTY
22038: LIST
22039: LIST
22040: PUSH
22041: LD_INT 6
22043: NEG
22044: PUSH
22045: LD_INT 6
22047: NEG
22048: PUSH
22049: EMPTY
22050: LIST
22051: LIST
22052: PUSH
22053: EMPTY
22054: LIST
22055: LIST
22056: LIST
22057: LIST
22058: LIST
22059: LIST
22060: LIST
22061: LIST
22062: LIST
22063: LIST
22064: LIST
22065: LIST
22066: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22067: LD_ADDR_VAR 0 41
22071: PUSH
22072: LD_INT 0
22074: PUSH
22075: LD_INT 2
22077: NEG
22078: PUSH
22079: EMPTY
22080: LIST
22081: LIST
22082: PUSH
22083: LD_INT 1
22085: NEG
22086: PUSH
22087: LD_INT 3
22089: NEG
22090: PUSH
22091: EMPTY
22092: LIST
22093: LIST
22094: PUSH
22095: LD_INT 1
22097: PUSH
22098: LD_INT 2
22100: NEG
22101: PUSH
22102: EMPTY
22103: LIST
22104: LIST
22105: PUSH
22106: EMPTY
22107: LIST
22108: LIST
22109: LIST
22110: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22111: LD_ADDR_VAR 0 42
22115: PUSH
22116: LD_INT 2
22118: PUSH
22119: LD_INT 0
22121: PUSH
22122: EMPTY
22123: LIST
22124: LIST
22125: PUSH
22126: LD_INT 2
22128: PUSH
22129: LD_INT 1
22131: NEG
22132: PUSH
22133: EMPTY
22134: LIST
22135: LIST
22136: PUSH
22137: LD_INT 3
22139: PUSH
22140: LD_INT 1
22142: PUSH
22143: EMPTY
22144: LIST
22145: LIST
22146: PUSH
22147: EMPTY
22148: LIST
22149: LIST
22150: LIST
22151: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22152: LD_ADDR_VAR 0 43
22156: PUSH
22157: LD_INT 2
22159: PUSH
22160: LD_INT 2
22162: PUSH
22163: EMPTY
22164: LIST
22165: LIST
22166: PUSH
22167: LD_INT 3
22169: PUSH
22170: LD_INT 2
22172: PUSH
22173: EMPTY
22174: LIST
22175: LIST
22176: PUSH
22177: LD_INT 2
22179: PUSH
22180: LD_INT 3
22182: PUSH
22183: EMPTY
22184: LIST
22185: LIST
22186: PUSH
22187: EMPTY
22188: LIST
22189: LIST
22190: LIST
22191: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22192: LD_ADDR_VAR 0 44
22196: PUSH
22197: LD_INT 0
22199: PUSH
22200: LD_INT 2
22202: PUSH
22203: EMPTY
22204: LIST
22205: LIST
22206: PUSH
22207: LD_INT 1
22209: PUSH
22210: LD_INT 3
22212: PUSH
22213: EMPTY
22214: LIST
22215: LIST
22216: PUSH
22217: LD_INT 1
22219: NEG
22220: PUSH
22221: LD_INT 2
22223: PUSH
22224: EMPTY
22225: LIST
22226: LIST
22227: PUSH
22228: EMPTY
22229: LIST
22230: LIST
22231: LIST
22232: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22233: LD_ADDR_VAR 0 45
22237: PUSH
22238: LD_INT 2
22240: NEG
22241: PUSH
22242: LD_INT 0
22244: PUSH
22245: EMPTY
22246: LIST
22247: LIST
22248: PUSH
22249: LD_INT 2
22251: NEG
22252: PUSH
22253: LD_INT 1
22255: PUSH
22256: EMPTY
22257: LIST
22258: LIST
22259: PUSH
22260: LD_INT 3
22262: NEG
22263: PUSH
22264: LD_INT 1
22266: NEG
22267: PUSH
22268: EMPTY
22269: LIST
22270: LIST
22271: PUSH
22272: EMPTY
22273: LIST
22274: LIST
22275: LIST
22276: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22277: LD_ADDR_VAR 0 46
22281: PUSH
22282: LD_INT 2
22284: NEG
22285: PUSH
22286: LD_INT 2
22288: NEG
22289: PUSH
22290: EMPTY
22291: LIST
22292: LIST
22293: PUSH
22294: LD_INT 2
22296: NEG
22297: PUSH
22298: LD_INT 3
22300: NEG
22301: PUSH
22302: EMPTY
22303: LIST
22304: LIST
22305: PUSH
22306: LD_INT 3
22308: NEG
22309: PUSH
22310: LD_INT 2
22312: NEG
22313: PUSH
22314: EMPTY
22315: LIST
22316: LIST
22317: PUSH
22318: EMPTY
22319: LIST
22320: LIST
22321: LIST
22322: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22323: LD_ADDR_VAR 0 47
22327: PUSH
22328: LD_INT 2
22330: NEG
22331: PUSH
22332: LD_INT 3
22334: NEG
22335: PUSH
22336: EMPTY
22337: LIST
22338: LIST
22339: PUSH
22340: LD_INT 1
22342: NEG
22343: PUSH
22344: LD_INT 3
22346: NEG
22347: PUSH
22348: EMPTY
22349: LIST
22350: LIST
22351: PUSH
22352: EMPTY
22353: LIST
22354: LIST
22355: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22356: LD_ADDR_VAR 0 48
22360: PUSH
22361: LD_INT 1
22363: PUSH
22364: LD_INT 2
22366: NEG
22367: PUSH
22368: EMPTY
22369: LIST
22370: LIST
22371: PUSH
22372: LD_INT 2
22374: PUSH
22375: LD_INT 1
22377: NEG
22378: PUSH
22379: EMPTY
22380: LIST
22381: LIST
22382: PUSH
22383: EMPTY
22384: LIST
22385: LIST
22386: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22387: LD_ADDR_VAR 0 49
22391: PUSH
22392: LD_INT 3
22394: PUSH
22395: LD_INT 1
22397: PUSH
22398: EMPTY
22399: LIST
22400: LIST
22401: PUSH
22402: LD_INT 3
22404: PUSH
22405: LD_INT 2
22407: PUSH
22408: EMPTY
22409: LIST
22410: LIST
22411: PUSH
22412: EMPTY
22413: LIST
22414: LIST
22415: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22416: LD_ADDR_VAR 0 50
22420: PUSH
22421: LD_INT 2
22423: PUSH
22424: LD_INT 3
22426: PUSH
22427: EMPTY
22428: LIST
22429: LIST
22430: PUSH
22431: LD_INT 1
22433: PUSH
22434: LD_INT 3
22436: PUSH
22437: EMPTY
22438: LIST
22439: LIST
22440: PUSH
22441: EMPTY
22442: LIST
22443: LIST
22444: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22445: LD_ADDR_VAR 0 51
22449: PUSH
22450: LD_INT 1
22452: NEG
22453: PUSH
22454: LD_INT 2
22456: PUSH
22457: EMPTY
22458: LIST
22459: LIST
22460: PUSH
22461: LD_INT 2
22463: NEG
22464: PUSH
22465: LD_INT 1
22467: PUSH
22468: EMPTY
22469: LIST
22470: LIST
22471: PUSH
22472: EMPTY
22473: LIST
22474: LIST
22475: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22476: LD_ADDR_VAR 0 52
22480: PUSH
22481: LD_INT 3
22483: NEG
22484: PUSH
22485: LD_INT 1
22487: NEG
22488: PUSH
22489: EMPTY
22490: LIST
22491: LIST
22492: PUSH
22493: LD_INT 3
22495: NEG
22496: PUSH
22497: LD_INT 2
22499: NEG
22500: PUSH
22501: EMPTY
22502: LIST
22503: LIST
22504: PUSH
22505: EMPTY
22506: LIST
22507: LIST
22508: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22509: LD_ADDR_VAR 0 53
22513: PUSH
22514: LD_INT 1
22516: NEG
22517: PUSH
22518: LD_INT 3
22520: NEG
22521: PUSH
22522: EMPTY
22523: LIST
22524: LIST
22525: PUSH
22526: LD_INT 0
22528: PUSH
22529: LD_INT 3
22531: NEG
22532: PUSH
22533: EMPTY
22534: LIST
22535: LIST
22536: PUSH
22537: LD_INT 1
22539: PUSH
22540: LD_INT 2
22542: NEG
22543: PUSH
22544: EMPTY
22545: LIST
22546: LIST
22547: PUSH
22548: EMPTY
22549: LIST
22550: LIST
22551: LIST
22552: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22553: LD_ADDR_VAR 0 54
22557: PUSH
22558: LD_INT 2
22560: PUSH
22561: LD_INT 1
22563: NEG
22564: PUSH
22565: EMPTY
22566: LIST
22567: LIST
22568: PUSH
22569: LD_INT 3
22571: PUSH
22572: LD_INT 0
22574: PUSH
22575: EMPTY
22576: LIST
22577: LIST
22578: PUSH
22579: LD_INT 3
22581: PUSH
22582: LD_INT 1
22584: PUSH
22585: EMPTY
22586: LIST
22587: LIST
22588: PUSH
22589: EMPTY
22590: LIST
22591: LIST
22592: LIST
22593: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22594: LD_ADDR_VAR 0 55
22598: PUSH
22599: LD_INT 3
22601: PUSH
22602: LD_INT 2
22604: PUSH
22605: EMPTY
22606: LIST
22607: LIST
22608: PUSH
22609: LD_INT 3
22611: PUSH
22612: LD_INT 3
22614: PUSH
22615: EMPTY
22616: LIST
22617: LIST
22618: PUSH
22619: LD_INT 2
22621: PUSH
22622: LD_INT 3
22624: PUSH
22625: EMPTY
22626: LIST
22627: LIST
22628: PUSH
22629: EMPTY
22630: LIST
22631: LIST
22632: LIST
22633: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22634: LD_ADDR_VAR 0 56
22638: PUSH
22639: LD_INT 1
22641: PUSH
22642: LD_INT 3
22644: PUSH
22645: EMPTY
22646: LIST
22647: LIST
22648: PUSH
22649: LD_INT 0
22651: PUSH
22652: LD_INT 3
22654: PUSH
22655: EMPTY
22656: LIST
22657: LIST
22658: PUSH
22659: LD_INT 1
22661: NEG
22662: PUSH
22663: LD_INT 2
22665: PUSH
22666: EMPTY
22667: LIST
22668: LIST
22669: PUSH
22670: EMPTY
22671: LIST
22672: LIST
22673: LIST
22674: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22675: LD_ADDR_VAR 0 57
22679: PUSH
22680: LD_INT 2
22682: NEG
22683: PUSH
22684: LD_INT 1
22686: PUSH
22687: EMPTY
22688: LIST
22689: LIST
22690: PUSH
22691: LD_INT 3
22693: NEG
22694: PUSH
22695: LD_INT 0
22697: PUSH
22698: EMPTY
22699: LIST
22700: LIST
22701: PUSH
22702: LD_INT 3
22704: NEG
22705: PUSH
22706: LD_INT 1
22708: NEG
22709: PUSH
22710: EMPTY
22711: LIST
22712: LIST
22713: PUSH
22714: EMPTY
22715: LIST
22716: LIST
22717: LIST
22718: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22719: LD_ADDR_VAR 0 58
22723: PUSH
22724: LD_INT 2
22726: NEG
22727: PUSH
22728: LD_INT 3
22730: NEG
22731: PUSH
22732: EMPTY
22733: LIST
22734: LIST
22735: PUSH
22736: LD_INT 3
22738: NEG
22739: PUSH
22740: LD_INT 2
22742: NEG
22743: PUSH
22744: EMPTY
22745: LIST
22746: LIST
22747: PUSH
22748: LD_INT 3
22750: NEG
22751: PUSH
22752: LD_INT 3
22754: NEG
22755: PUSH
22756: EMPTY
22757: LIST
22758: LIST
22759: PUSH
22760: EMPTY
22761: LIST
22762: LIST
22763: LIST
22764: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22765: LD_ADDR_VAR 0 59
22769: PUSH
22770: LD_INT 1
22772: NEG
22773: PUSH
22774: LD_INT 2
22776: NEG
22777: PUSH
22778: EMPTY
22779: LIST
22780: LIST
22781: PUSH
22782: LD_INT 0
22784: PUSH
22785: LD_INT 2
22787: NEG
22788: PUSH
22789: EMPTY
22790: LIST
22791: LIST
22792: PUSH
22793: LD_INT 1
22795: PUSH
22796: LD_INT 1
22798: NEG
22799: PUSH
22800: EMPTY
22801: LIST
22802: LIST
22803: PUSH
22804: EMPTY
22805: LIST
22806: LIST
22807: LIST
22808: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22809: LD_ADDR_VAR 0 60
22813: PUSH
22814: LD_INT 1
22816: PUSH
22817: LD_INT 1
22819: NEG
22820: PUSH
22821: EMPTY
22822: LIST
22823: LIST
22824: PUSH
22825: LD_INT 2
22827: PUSH
22828: LD_INT 0
22830: PUSH
22831: EMPTY
22832: LIST
22833: LIST
22834: PUSH
22835: LD_INT 2
22837: PUSH
22838: LD_INT 1
22840: PUSH
22841: EMPTY
22842: LIST
22843: LIST
22844: PUSH
22845: EMPTY
22846: LIST
22847: LIST
22848: LIST
22849: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22850: LD_ADDR_VAR 0 61
22854: PUSH
22855: LD_INT 2
22857: PUSH
22858: LD_INT 1
22860: PUSH
22861: EMPTY
22862: LIST
22863: LIST
22864: PUSH
22865: LD_INT 2
22867: PUSH
22868: LD_INT 2
22870: PUSH
22871: EMPTY
22872: LIST
22873: LIST
22874: PUSH
22875: LD_INT 1
22877: PUSH
22878: LD_INT 2
22880: PUSH
22881: EMPTY
22882: LIST
22883: LIST
22884: PUSH
22885: EMPTY
22886: LIST
22887: LIST
22888: LIST
22889: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22890: LD_ADDR_VAR 0 62
22894: PUSH
22895: LD_INT 1
22897: PUSH
22898: LD_INT 2
22900: PUSH
22901: EMPTY
22902: LIST
22903: LIST
22904: PUSH
22905: LD_INT 0
22907: PUSH
22908: LD_INT 2
22910: PUSH
22911: EMPTY
22912: LIST
22913: LIST
22914: PUSH
22915: LD_INT 1
22917: NEG
22918: PUSH
22919: LD_INT 1
22921: PUSH
22922: EMPTY
22923: LIST
22924: LIST
22925: PUSH
22926: EMPTY
22927: LIST
22928: LIST
22929: LIST
22930: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22931: LD_ADDR_VAR 0 63
22935: PUSH
22936: LD_INT 1
22938: NEG
22939: PUSH
22940: LD_INT 1
22942: PUSH
22943: EMPTY
22944: LIST
22945: LIST
22946: PUSH
22947: LD_INT 2
22949: NEG
22950: PUSH
22951: LD_INT 0
22953: PUSH
22954: EMPTY
22955: LIST
22956: LIST
22957: PUSH
22958: LD_INT 2
22960: NEG
22961: PUSH
22962: LD_INT 1
22964: NEG
22965: PUSH
22966: EMPTY
22967: LIST
22968: LIST
22969: PUSH
22970: EMPTY
22971: LIST
22972: LIST
22973: LIST
22974: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22975: LD_ADDR_VAR 0 64
22979: PUSH
22980: LD_INT 1
22982: NEG
22983: PUSH
22984: LD_INT 2
22986: NEG
22987: PUSH
22988: EMPTY
22989: LIST
22990: LIST
22991: PUSH
22992: LD_INT 2
22994: NEG
22995: PUSH
22996: LD_INT 1
22998: NEG
22999: PUSH
23000: EMPTY
23001: LIST
23002: LIST
23003: PUSH
23004: LD_INT 2
23006: NEG
23007: PUSH
23008: LD_INT 2
23010: NEG
23011: PUSH
23012: EMPTY
23013: LIST
23014: LIST
23015: PUSH
23016: EMPTY
23017: LIST
23018: LIST
23019: LIST
23020: ST_TO_ADDR
// end ; 2 :
23021: GO 26287
23023: LD_INT 2
23025: DOUBLE
23026: EQUAL
23027: IFTRUE 23031
23029: GO 26286
23031: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23032: LD_ADDR_VAR 0 29
23036: PUSH
23037: LD_INT 4
23039: PUSH
23040: LD_INT 0
23042: PUSH
23043: EMPTY
23044: LIST
23045: LIST
23046: PUSH
23047: LD_INT 4
23049: PUSH
23050: LD_INT 1
23052: NEG
23053: PUSH
23054: EMPTY
23055: LIST
23056: LIST
23057: PUSH
23058: LD_INT 5
23060: PUSH
23061: LD_INT 0
23063: PUSH
23064: EMPTY
23065: LIST
23066: LIST
23067: PUSH
23068: LD_INT 5
23070: PUSH
23071: LD_INT 1
23073: PUSH
23074: EMPTY
23075: LIST
23076: LIST
23077: PUSH
23078: LD_INT 4
23080: PUSH
23081: LD_INT 1
23083: PUSH
23084: EMPTY
23085: LIST
23086: LIST
23087: PUSH
23088: LD_INT 3
23090: PUSH
23091: LD_INT 0
23093: PUSH
23094: EMPTY
23095: LIST
23096: LIST
23097: PUSH
23098: LD_INT 3
23100: PUSH
23101: LD_INT 1
23103: NEG
23104: PUSH
23105: EMPTY
23106: LIST
23107: LIST
23108: PUSH
23109: LD_INT 3
23111: PUSH
23112: LD_INT 2
23114: NEG
23115: PUSH
23116: EMPTY
23117: LIST
23118: LIST
23119: PUSH
23120: LD_INT 5
23122: PUSH
23123: LD_INT 2
23125: PUSH
23126: EMPTY
23127: LIST
23128: LIST
23129: PUSH
23130: LD_INT 3
23132: PUSH
23133: LD_INT 3
23135: PUSH
23136: EMPTY
23137: LIST
23138: LIST
23139: PUSH
23140: LD_INT 3
23142: PUSH
23143: LD_INT 2
23145: PUSH
23146: EMPTY
23147: LIST
23148: LIST
23149: PUSH
23150: LD_INT 4
23152: PUSH
23153: LD_INT 3
23155: PUSH
23156: EMPTY
23157: LIST
23158: LIST
23159: PUSH
23160: LD_INT 4
23162: PUSH
23163: LD_INT 4
23165: PUSH
23166: EMPTY
23167: LIST
23168: LIST
23169: PUSH
23170: LD_INT 3
23172: PUSH
23173: LD_INT 4
23175: PUSH
23176: EMPTY
23177: LIST
23178: LIST
23179: PUSH
23180: LD_INT 2
23182: PUSH
23183: LD_INT 3
23185: PUSH
23186: EMPTY
23187: LIST
23188: LIST
23189: PUSH
23190: LD_INT 2
23192: PUSH
23193: LD_INT 2
23195: PUSH
23196: EMPTY
23197: LIST
23198: LIST
23199: PUSH
23200: LD_INT 4
23202: PUSH
23203: LD_INT 2
23205: PUSH
23206: EMPTY
23207: LIST
23208: LIST
23209: PUSH
23210: LD_INT 2
23212: PUSH
23213: LD_INT 4
23215: PUSH
23216: EMPTY
23217: LIST
23218: LIST
23219: PUSH
23220: LD_INT 0
23222: PUSH
23223: LD_INT 4
23225: PUSH
23226: EMPTY
23227: LIST
23228: LIST
23229: PUSH
23230: LD_INT 0
23232: PUSH
23233: LD_INT 3
23235: PUSH
23236: EMPTY
23237: LIST
23238: LIST
23239: PUSH
23240: LD_INT 1
23242: PUSH
23243: LD_INT 4
23245: PUSH
23246: EMPTY
23247: LIST
23248: LIST
23249: PUSH
23250: LD_INT 1
23252: PUSH
23253: LD_INT 5
23255: PUSH
23256: EMPTY
23257: LIST
23258: LIST
23259: PUSH
23260: LD_INT 0
23262: PUSH
23263: LD_INT 5
23265: PUSH
23266: EMPTY
23267: LIST
23268: LIST
23269: PUSH
23270: LD_INT 1
23272: NEG
23273: PUSH
23274: LD_INT 4
23276: PUSH
23277: EMPTY
23278: LIST
23279: LIST
23280: PUSH
23281: LD_INT 1
23283: NEG
23284: PUSH
23285: LD_INT 3
23287: PUSH
23288: EMPTY
23289: LIST
23290: LIST
23291: PUSH
23292: LD_INT 2
23294: PUSH
23295: LD_INT 5
23297: PUSH
23298: EMPTY
23299: LIST
23300: LIST
23301: PUSH
23302: LD_INT 2
23304: NEG
23305: PUSH
23306: LD_INT 3
23308: PUSH
23309: EMPTY
23310: LIST
23311: LIST
23312: PUSH
23313: LD_INT 3
23315: NEG
23316: PUSH
23317: LD_INT 0
23319: PUSH
23320: EMPTY
23321: LIST
23322: LIST
23323: PUSH
23324: LD_INT 3
23326: NEG
23327: PUSH
23328: LD_INT 1
23330: NEG
23331: PUSH
23332: EMPTY
23333: LIST
23334: LIST
23335: PUSH
23336: LD_INT 2
23338: NEG
23339: PUSH
23340: LD_INT 0
23342: PUSH
23343: EMPTY
23344: LIST
23345: LIST
23346: PUSH
23347: LD_INT 2
23349: NEG
23350: PUSH
23351: LD_INT 1
23353: PUSH
23354: EMPTY
23355: LIST
23356: LIST
23357: PUSH
23358: LD_INT 3
23360: NEG
23361: PUSH
23362: LD_INT 1
23364: PUSH
23365: EMPTY
23366: LIST
23367: LIST
23368: PUSH
23369: LD_INT 4
23371: NEG
23372: PUSH
23373: LD_INT 0
23375: PUSH
23376: EMPTY
23377: LIST
23378: LIST
23379: PUSH
23380: LD_INT 4
23382: NEG
23383: PUSH
23384: LD_INT 1
23386: NEG
23387: PUSH
23388: EMPTY
23389: LIST
23390: LIST
23391: PUSH
23392: LD_INT 4
23394: NEG
23395: PUSH
23396: LD_INT 2
23398: NEG
23399: PUSH
23400: EMPTY
23401: LIST
23402: LIST
23403: PUSH
23404: LD_INT 2
23406: NEG
23407: PUSH
23408: LD_INT 2
23410: PUSH
23411: EMPTY
23412: LIST
23413: LIST
23414: PUSH
23415: LD_INT 4
23417: NEG
23418: PUSH
23419: LD_INT 4
23421: NEG
23422: PUSH
23423: EMPTY
23424: LIST
23425: LIST
23426: PUSH
23427: LD_INT 4
23429: NEG
23430: PUSH
23431: LD_INT 5
23433: NEG
23434: PUSH
23435: EMPTY
23436: LIST
23437: LIST
23438: PUSH
23439: LD_INT 3
23441: NEG
23442: PUSH
23443: LD_INT 4
23445: NEG
23446: PUSH
23447: EMPTY
23448: LIST
23449: LIST
23450: PUSH
23451: LD_INT 3
23453: NEG
23454: PUSH
23455: LD_INT 3
23457: NEG
23458: PUSH
23459: EMPTY
23460: LIST
23461: LIST
23462: PUSH
23463: LD_INT 4
23465: NEG
23466: PUSH
23467: LD_INT 3
23469: NEG
23470: PUSH
23471: EMPTY
23472: LIST
23473: LIST
23474: PUSH
23475: LD_INT 5
23477: NEG
23478: PUSH
23479: LD_INT 4
23481: NEG
23482: PUSH
23483: EMPTY
23484: LIST
23485: LIST
23486: PUSH
23487: LD_INT 5
23489: NEG
23490: PUSH
23491: LD_INT 5
23493: NEG
23494: PUSH
23495: EMPTY
23496: LIST
23497: LIST
23498: PUSH
23499: LD_INT 3
23501: NEG
23502: PUSH
23503: LD_INT 5
23505: NEG
23506: PUSH
23507: EMPTY
23508: LIST
23509: LIST
23510: PUSH
23511: LD_INT 5
23513: NEG
23514: PUSH
23515: LD_INT 3
23517: NEG
23518: PUSH
23519: EMPTY
23520: LIST
23521: LIST
23522: PUSH
23523: EMPTY
23524: LIST
23525: LIST
23526: LIST
23527: LIST
23528: LIST
23529: LIST
23530: LIST
23531: LIST
23532: LIST
23533: LIST
23534: LIST
23535: LIST
23536: LIST
23537: LIST
23538: LIST
23539: LIST
23540: LIST
23541: LIST
23542: LIST
23543: LIST
23544: LIST
23545: LIST
23546: LIST
23547: LIST
23548: LIST
23549: LIST
23550: LIST
23551: LIST
23552: LIST
23553: LIST
23554: LIST
23555: LIST
23556: LIST
23557: LIST
23558: LIST
23559: LIST
23560: LIST
23561: LIST
23562: LIST
23563: LIST
23564: LIST
23565: LIST
23566: LIST
23567: LIST
23568: LIST
23569: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23570: LD_ADDR_VAR 0 30
23574: PUSH
23575: LD_INT 4
23577: PUSH
23578: LD_INT 4
23580: PUSH
23581: EMPTY
23582: LIST
23583: LIST
23584: PUSH
23585: LD_INT 4
23587: PUSH
23588: LD_INT 3
23590: PUSH
23591: EMPTY
23592: LIST
23593: LIST
23594: PUSH
23595: LD_INT 5
23597: PUSH
23598: LD_INT 4
23600: PUSH
23601: EMPTY
23602: LIST
23603: LIST
23604: PUSH
23605: LD_INT 5
23607: PUSH
23608: LD_INT 5
23610: PUSH
23611: EMPTY
23612: LIST
23613: LIST
23614: PUSH
23615: LD_INT 4
23617: PUSH
23618: LD_INT 5
23620: PUSH
23621: EMPTY
23622: LIST
23623: LIST
23624: PUSH
23625: LD_INT 3
23627: PUSH
23628: LD_INT 4
23630: PUSH
23631: EMPTY
23632: LIST
23633: LIST
23634: PUSH
23635: LD_INT 3
23637: PUSH
23638: LD_INT 3
23640: PUSH
23641: EMPTY
23642: LIST
23643: LIST
23644: PUSH
23645: LD_INT 5
23647: PUSH
23648: LD_INT 3
23650: PUSH
23651: EMPTY
23652: LIST
23653: LIST
23654: PUSH
23655: LD_INT 3
23657: PUSH
23658: LD_INT 5
23660: PUSH
23661: EMPTY
23662: LIST
23663: LIST
23664: PUSH
23665: LD_INT 0
23667: PUSH
23668: LD_INT 3
23670: PUSH
23671: EMPTY
23672: LIST
23673: LIST
23674: PUSH
23675: LD_INT 0
23677: PUSH
23678: LD_INT 2
23680: PUSH
23681: EMPTY
23682: LIST
23683: LIST
23684: PUSH
23685: LD_INT 1
23687: PUSH
23688: LD_INT 3
23690: PUSH
23691: EMPTY
23692: LIST
23693: LIST
23694: PUSH
23695: LD_INT 1
23697: PUSH
23698: LD_INT 4
23700: PUSH
23701: EMPTY
23702: LIST
23703: LIST
23704: PUSH
23705: LD_INT 0
23707: PUSH
23708: LD_INT 4
23710: PUSH
23711: EMPTY
23712: LIST
23713: LIST
23714: PUSH
23715: LD_INT 1
23717: NEG
23718: PUSH
23719: LD_INT 3
23721: PUSH
23722: EMPTY
23723: LIST
23724: LIST
23725: PUSH
23726: LD_INT 1
23728: NEG
23729: PUSH
23730: LD_INT 2
23732: PUSH
23733: EMPTY
23734: LIST
23735: LIST
23736: PUSH
23737: LD_INT 2
23739: PUSH
23740: LD_INT 4
23742: PUSH
23743: EMPTY
23744: LIST
23745: LIST
23746: PUSH
23747: LD_INT 2
23749: NEG
23750: PUSH
23751: LD_INT 2
23753: PUSH
23754: EMPTY
23755: LIST
23756: LIST
23757: PUSH
23758: LD_INT 4
23760: NEG
23761: PUSH
23762: LD_INT 0
23764: PUSH
23765: EMPTY
23766: LIST
23767: LIST
23768: PUSH
23769: LD_INT 4
23771: NEG
23772: PUSH
23773: LD_INT 1
23775: NEG
23776: PUSH
23777: EMPTY
23778: LIST
23779: LIST
23780: PUSH
23781: LD_INT 3
23783: NEG
23784: PUSH
23785: LD_INT 0
23787: PUSH
23788: EMPTY
23789: LIST
23790: LIST
23791: PUSH
23792: LD_INT 3
23794: NEG
23795: PUSH
23796: LD_INT 1
23798: PUSH
23799: EMPTY
23800: LIST
23801: LIST
23802: PUSH
23803: LD_INT 4
23805: NEG
23806: PUSH
23807: LD_INT 1
23809: PUSH
23810: EMPTY
23811: LIST
23812: LIST
23813: PUSH
23814: LD_INT 5
23816: NEG
23817: PUSH
23818: LD_INT 0
23820: PUSH
23821: EMPTY
23822: LIST
23823: LIST
23824: PUSH
23825: LD_INT 5
23827: NEG
23828: PUSH
23829: LD_INT 1
23831: NEG
23832: PUSH
23833: EMPTY
23834: LIST
23835: LIST
23836: PUSH
23837: LD_INT 5
23839: NEG
23840: PUSH
23841: LD_INT 2
23843: NEG
23844: PUSH
23845: EMPTY
23846: LIST
23847: LIST
23848: PUSH
23849: LD_INT 3
23851: NEG
23852: PUSH
23853: LD_INT 2
23855: PUSH
23856: EMPTY
23857: LIST
23858: LIST
23859: PUSH
23860: LD_INT 3
23862: NEG
23863: PUSH
23864: LD_INT 3
23866: NEG
23867: PUSH
23868: EMPTY
23869: LIST
23870: LIST
23871: PUSH
23872: LD_INT 3
23874: NEG
23875: PUSH
23876: LD_INT 4
23878: NEG
23879: PUSH
23880: EMPTY
23881: LIST
23882: LIST
23883: PUSH
23884: LD_INT 2
23886: NEG
23887: PUSH
23888: LD_INT 3
23890: NEG
23891: PUSH
23892: EMPTY
23893: LIST
23894: LIST
23895: PUSH
23896: LD_INT 2
23898: NEG
23899: PUSH
23900: LD_INT 2
23902: NEG
23903: PUSH
23904: EMPTY
23905: LIST
23906: LIST
23907: PUSH
23908: LD_INT 3
23910: NEG
23911: PUSH
23912: LD_INT 2
23914: NEG
23915: PUSH
23916: EMPTY
23917: LIST
23918: LIST
23919: PUSH
23920: LD_INT 4
23922: NEG
23923: PUSH
23924: LD_INT 3
23926: NEG
23927: PUSH
23928: EMPTY
23929: LIST
23930: LIST
23931: PUSH
23932: LD_INT 4
23934: NEG
23935: PUSH
23936: LD_INT 4
23938: NEG
23939: PUSH
23940: EMPTY
23941: LIST
23942: LIST
23943: PUSH
23944: LD_INT 2
23946: NEG
23947: PUSH
23948: LD_INT 4
23950: NEG
23951: PUSH
23952: EMPTY
23953: LIST
23954: LIST
23955: PUSH
23956: LD_INT 4
23958: NEG
23959: PUSH
23960: LD_INT 2
23962: NEG
23963: PUSH
23964: EMPTY
23965: LIST
23966: LIST
23967: PUSH
23968: LD_INT 0
23970: PUSH
23971: LD_INT 4
23973: NEG
23974: PUSH
23975: EMPTY
23976: LIST
23977: LIST
23978: PUSH
23979: LD_INT 0
23981: PUSH
23982: LD_INT 5
23984: NEG
23985: PUSH
23986: EMPTY
23987: LIST
23988: LIST
23989: PUSH
23990: LD_INT 1
23992: PUSH
23993: LD_INT 4
23995: NEG
23996: PUSH
23997: EMPTY
23998: LIST
23999: LIST
24000: PUSH
24001: LD_INT 1
24003: PUSH
24004: LD_INT 3
24006: NEG
24007: PUSH
24008: EMPTY
24009: LIST
24010: LIST
24011: PUSH
24012: LD_INT 0
24014: PUSH
24015: LD_INT 3
24017: NEG
24018: PUSH
24019: EMPTY
24020: LIST
24021: LIST
24022: PUSH
24023: LD_INT 1
24025: NEG
24026: PUSH
24027: LD_INT 4
24029: NEG
24030: PUSH
24031: EMPTY
24032: LIST
24033: LIST
24034: PUSH
24035: LD_INT 1
24037: NEG
24038: PUSH
24039: LD_INT 5
24041: NEG
24042: PUSH
24043: EMPTY
24044: LIST
24045: LIST
24046: PUSH
24047: LD_INT 2
24049: PUSH
24050: LD_INT 3
24052: NEG
24053: PUSH
24054: EMPTY
24055: LIST
24056: LIST
24057: PUSH
24058: LD_INT 2
24060: NEG
24061: PUSH
24062: LD_INT 5
24064: NEG
24065: PUSH
24066: EMPTY
24067: LIST
24068: LIST
24069: PUSH
24070: EMPTY
24071: LIST
24072: LIST
24073: LIST
24074: LIST
24075: LIST
24076: LIST
24077: LIST
24078: LIST
24079: LIST
24080: LIST
24081: LIST
24082: LIST
24083: LIST
24084: LIST
24085: LIST
24086: LIST
24087: LIST
24088: LIST
24089: LIST
24090: LIST
24091: LIST
24092: LIST
24093: LIST
24094: LIST
24095: LIST
24096: LIST
24097: LIST
24098: LIST
24099: LIST
24100: LIST
24101: LIST
24102: LIST
24103: LIST
24104: LIST
24105: LIST
24106: LIST
24107: LIST
24108: LIST
24109: LIST
24110: LIST
24111: LIST
24112: LIST
24113: LIST
24114: LIST
24115: LIST
24116: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24117: LD_ADDR_VAR 0 31
24121: PUSH
24122: LD_INT 0
24124: PUSH
24125: LD_INT 4
24127: PUSH
24128: EMPTY
24129: LIST
24130: LIST
24131: PUSH
24132: LD_INT 0
24134: PUSH
24135: LD_INT 3
24137: PUSH
24138: EMPTY
24139: LIST
24140: LIST
24141: PUSH
24142: LD_INT 1
24144: PUSH
24145: LD_INT 4
24147: PUSH
24148: EMPTY
24149: LIST
24150: LIST
24151: PUSH
24152: LD_INT 1
24154: PUSH
24155: LD_INT 5
24157: PUSH
24158: EMPTY
24159: LIST
24160: LIST
24161: PUSH
24162: LD_INT 0
24164: PUSH
24165: LD_INT 5
24167: PUSH
24168: EMPTY
24169: LIST
24170: LIST
24171: PUSH
24172: LD_INT 1
24174: NEG
24175: PUSH
24176: LD_INT 4
24178: PUSH
24179: EMPTY
24180: LIST
24181: LIST
24182: PUSH
24183: LD_INT 1
24185: NEG
24186: PUSH
24187: LD_INT 3
24189: PUSH
24190: EMPTY
24191: LIST
24192: LIST
24193: PUSH
24194: LD_INT 2
24196: PUSH
24197: LD_INT 5
24199: PUSH
24200: EMPTY
24201: LIST
24202: LIST
24203: PUSH
24204: LD_INT 2
24206: NEG
24207: PUSH
24208: LD_INT 3
24210: PUSH
24211: EMPTY
24212: LIST
24213: LIST
24214: PUSH
24215: LD_INT 3
24217: NEG
24218: PUSH
24219: LD_INT 0
24221: PUSH
24222: EMPTY
24223: LIST
24224: LIST
24225: PUSH
24226: LD_INT 3
24228: NEG
24229: PUSH
24230: LD_INT 1
24232: NEG
24233: PUSH
24234: EMPTY
24235: LIST
24236: LIST
24237: PUSH
24238: LD_INT 2
24240: NEG
24241: PUSH
24242: LD_INT 0
24244: PUSH
24245: EMPTY
24246: LIST
24247: LIST
24248: PUSH
24249: LD_INT 2
24251: NEG
24252: PUSH
24253: LD_INT 1
24255: PUSH
24256: EMPTY
24257: LIST
24258: LIST
24259: PUSH
24260: LD_INT 3
24262: NEG
24263: PUSH
24264: LD_INT 1
24266: PUSH
24267: EMPTY
24268: LIST
24269: LIST
24270: PUSH
24271: LD_INT 4
24273: NEG
24274: PUSH
24275: LD_INT 0
24277: PUSH
24278: EMPTY
24279: LIST
24280: LIST
24281: PUSH
24282: LD_INT 4
24284: NEG
24285: PUSH
24286: LD_INT 1
24288: NEG
24289: PUSH
24290: EMPTY
24291: LIST
24292: LIST
24293: PUSH
24294: LD_INT 4
24296: NEG
24297: PUSH
24298: LD_INT 2
24300: NEG
24301: PUSH
24302: EMPTY
24303: LIST
24304: LIST
24305: PUSH
24306: LD_INT 2
24308: NEG
24309: PUSH
24310: LD_INT 2
24312: PUSH
24313: EMPTY
24314: LIST
24315: LIST
24316: PUSH
24317: LD_INT 4
24319: NEG
24320: PUSH
24321: LD_INT 4
24323: NEG
24324: PUSH
24325: EMPTY
24326: LIST
24327: LIST
24328: PUSH
24329: LD_INT 4
24331: NEG
24332: PUSH
24333: LD_INT 5
24335: NEG
24336: PUSH
24337: EMPTY
24338: LIST
24339: LIST
24340: PUSH
24341: LD_INT 3
24343: NEG
24344: PUSH
24345: LD_INT 4
24347: NEG
24348: PUSH
24349: EMPTY
24350: LIST
24351: LIST
24352: PUSH
24353: LD_INT 3
24355: NEG
24356: PUSH
24357: LD_INT 3
24359: NEG
24360: PUSH
24361: EMPTY
24362: LIST
24363: LIST
24364: PUSH
24365: LD_INT 4
24367: NEG
24368: PUSH
24369: LD_INT 3
24371: NEG
24372: PUSH
24373: EMPTY
24374: LIST
24375: LIST
24376: PUSH
24377: LD_INT 5
24379: NEG
24380: PUSH
24381: LD_INT 4
24383: NEG
24384: PUSH
24385: EMPTY
24386: LIST
24387: LIST
24388: PUSH
24389: LD_INT 5
24391: NEG
24392: PUSH
24393: LD_INT 5
24395: NEG
24396: PUSH
24397: EMPTY
24398: LIST
24399: LIST
24400: PUSH
24401: LD_INT 3
24403: NEG
24404: PUSH
24405: LD_INT 5
24407: NEG
24408: PUSH
24409: EMPTY
24410: LIST
24411: LIST
24412: PUSH
24413: LD_INT 5
24415: NEG
24416: PUSH
24417: LD_INT 3
24419: NEG
24420: PUSH
24421: EMPTY
24422: LIST
24423: LIST
24424: PUSH
24425: LD_INT 0
24427: PUSH
24428: LD_INT 3
24430: NEG
24431: PUSH
24432: EMPTY
24433: LIST
24434: LIST
24435: PUSH
24436: LD_INT 0
24438: PUSH
24439: LD_INT 4
24441: NEG
24442: PUSH
24443: EMPTY
24444: LIST
24445: LIST
24446: PUSH
24447: LD_INT 1
24449: PUSH
24450: LD_INT 3
24452: NEG
24453: PUSH
24454: EMPTY
24455: LIST
24456: LIST
24457: PUSH
24458: LD_INT 1
24460: PUSH
24461: LD_INT 2
24463: NEG
24464: PUSH
24465: EMPTY
24466: LIST
24467: LIST
24468: PUSH
24469: LD_INT 0
24471: PUSH
24472: LD_INT 2
24474: NEG
24475: PUSH
24476: EMPTY
24477: LIST
24478: LIST
24479: PUSH
24480: LD_INT 1
24482: NEG
24483: PUSH
24484: LD_INT 3
24486: NEG
24487: PUSH
24488: EMPTY
24489: LIST
24490: LIST
24491: PUSH
24492: LD_INT 1
24494: NEG
24495: PUSH
24496: LD_INT 4
24498: NEG
24499: PUSH
24500: EMPTY
24501: LIST
24502: LIST
24503: PUSH
24504: LD_INT 2
24506: PUSH
24507: LD_INT 2
24509: NEG
24510: PUSH
24511: EMPTY
24512: LIST
24513: LIST
24514: PUSH
24515: LD_INT 2
24517: NEG
24518: PUSH
24519: LD_INT 4
24521: NEG
24522: PUSH
24523: EMPTY
24524: LIST
24525: LIST
24526: PUSH
24527: LD_INT 4
24529: PUSH
24530: LD_INT 0
24532: PUSH
24533: EMPTY
24534: LIST
24535: LIST
24536: PUSH
24537: LD_INT 4
24539: PUSH
24540: LD_INT 1
24542: NEG
24543: PUSH
24544: EMPTY
24545: LIST
24546: LIST
24547: PUSH
24548: LD_INT 5
24550: PUSH
24551: LD_INT 0
24553: PUSH
24554: EMPTY
24555: LIST
24556: LIST
24557: PUSH
24558: LD_INT 5
24560: PUSH
24561: LD_INT 1
24563: PUSH
24564: EMPTY
24565: LIST
24566: LIST
24567: PUSH
24568: LD_INT 4
24570: PUSH
24571: LD_INT 1
24573: PUSH
24574: EMPTY
24575: LIST
24576: LIST
24577: PUSH
24578: LD_INT 3
24580: PUSH
24581: LD_INT 0
24583: PUSH
24584: EMPTY
24585: LIST
24586: LIST
24587: PUSH
24588: LD_INT 3
24590: PUSH
24591: LD_INT 1
24593: NEG
24594: PUSH
24595: EMPTY
24596: LIST
24597: LIST
24598: PUSH
24599: LD_INT 3
24601: PUSH
24602: LD_INT 2
24604: NEG
24605: PUSH
24606: EMPTY
24607: LIST
24608: LIST
24609: PUSH
24610: LD_INT 5
24612: PUSH
24613: LD_INT 2
24615: PUSH
24616: EMPTY
24617: LIST
24618: LIST
24619: PUSH
24620: EMPTY
24621: LIST
24622: LIST
24623: LIST
24624: LIST
24625: LIST
24626: LIST
24627: LIST
24628: LIST
24629: LIST
24630: LIST
24631: LIST
24632: LIST
24633: LIST
24634: LIST
24635: LIST
24636: LIST
24637: LIST
24638: LIST
24639: LIST
24640: LIST
24641: LIST
24642: LIST
24643: LIST
24644: LIST
24645: LIST
24646: LIST
24647: LIST
24648: LIST
24649: LIST
24650: LIST
24651: LIST
24652: LIST
24653: LIST
24654: LIST
24655: LIST
24656: LIST
24657: LIST
24658: LIST
24659: LIST
24660: LIST
24661: LIST
24662: LIST
24663: LIST
24664: LIST
24665: LIST
24666: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24667: LD_ADDR_VAR 0 32
24671: PUSH
24672: LD_INT 4
24674: NEG
24675: PUSH
24676: LD_INT 0
24678: PUSH
24679: EMPTY
24680: LIST
24681: LIST
24682: PUSH
24683: LD_INT 4
24685: NEG
24686: PUSH
24687: LD_INT 1
24689: NEG
24690: PUSH
24691: EMPTY
24692: LIST
24693: LIST
24694: PUSH
24695: LD_INT 3
24697: NEG
24698: PUSH
24699: LD_INT 0
24701: PUSH
24702: EMPTY
24703: LIST
24704: LIST
24705: PUSH
24706: LD_INT 3
24708: NEG
24709: PUSH
24710: LD_INT 1
24712: PUSH
24713: EMPTY
24714: LIST
24715: LIST
24716: PUSH
24717: LD_INT 4
24719: NEG
24720: PUSH
24721: LD_INT 1
24723: PUSH
24724: EMPTY
24725: LIST
24726: LIST
24727: PUSH
24728: LD_INT 5
24730: NEG
24731: PUSH
24732: LD_INT 0
24734: PUSH
24735: EMPTY
24736: LIST
24737: LIST
24738: PUSH
24739: LD_INT 5
24741: NEG
24742: PUSH
24743: LD_INT 1
24745: NEG
24746: PUSH
24747: EMPTY
24748: LIST
24749: LIST
24750: PUSH
24751: LD_INT 5
24753: NEG
24754: PUSH
24755: LD_INT 2
24757: NEG
24758: PUSH
24759: EMPTY
24760: LIST
24761: LIST
24762: PUSH
24763: LD_INT 3
24765: NEG
24766: PUSH
24767: LD_INT 2
24769: PUSH
24770: EMPTY
24771: LIST
24772: LIST
24773: PUSH
24774: LD_INT 3
24776: NEG
24777: PUSH
24778: LD_INT 3
24780: NEG
24781: PUSH
24782: EMPTY
24783: LIST
24784: LIST
24785: PUSH
24786: LD_INT 3
24788: NEG
24789: PUSH
24790: LD_INT 4
24792: NEG
24793: PUSH
24794: EMPTY
24795: LIST
24796: LIST
24797: PUSH
24798: LD_INT 2
24800: NEG
24801: PUSH
24802: LD_INT 3
24804: NEG
24805: PUSH
24806: EMPTY
24807: LIST
24808: LIST
24809: PUSH
24810: LD_INT 2
24812: NEG
24813: PUSH
24814: LD_INT 2
24816: NEG
24817: PUSH
24818: EMPTY
24819: LIST
24820: LIST
24821: PUSH
24822: LD_INT 3
24824: NEG
24825: PUSH
24826: LD_INT 2
24828: NEG
24829: PUSH
24830: EMPTY
24831: LIST
24832: LIST
24833: PUSH
24834: LD_INT 4
24836: NEG
24837: PUSH
24838: LD_INT 3
24840: NEG
24841: PUSH
24842: EMPTY
24843: LIST
24844: LIST
24845: PUSH
24846: LD_INT 4
24848: NEG
24849: PUSH
24850: LD_INT 4
24852: NEG
24853: PUSH
24854: EMPTY
24855: LIST
24856: LIST
24857: PUSH
24858: LD_INT 2
24860: NEG
24861: PUSH
24862: LD_INT 4
24864: NEG
24865: PUSH
24866: EMPTY
24867: LIST
24868: LIST
24869: PUSH
24870: LD_INT 4
24872: NEG
24873: PUSH
24874: LD_INT 2
24876: NEG
24877: PUSH
24878: EMPTY
24879: LIST
24880: LIST
24881: PUSH
24882: LD_INT 0
24884: PUSH
24885: LD_INT 4
24887: NEG
24888: PUSH
24889: EMPTY
24890: LIST
24891: LIST
24892: PUSH
24893: LD_INT 0
24895: PUSH
24896: LD_INT 5
24898: NEG
24899: PUSH
24900: EMPTY
24901: LIST
24902: LIST
24903: PUSH
24904: LD_INT 1
24906: PUSH
24907: LD_INT 4
24909: NEG
24910: PUSH
24911: EMPTY
24912: LIST
24913: LIST
24914: PUSH
24915: LD_INT 1
24917: PUSH
24918: LD_INT 3
24920: NEG
24921: PUSH
24922: EMPTY
24923: LIST
24924: LIST
24925: PUSH
24926: LD_INT 0
24928: PUSH
24929: LD_INT 3
24931: NEG
24932: PUSH
24933: EMPTY
24934: LIST
24935: LIST
24936: PUSH
24937: LD_INT 1
24939: NEG
24940: PUSH
24941: LD_INT 4
24943: NEG
24944: PUSH
24945: EMPTY
24946: LIST
24947: LIST
24948: PUSH
24949: LD_INT 1
24951: NEG
24952: PUSH
24953: LD_INT 5
24955: NEG
24956: PUSH
24957: EMPTY
24958: LIST
24959: LIST
24960: PUSH
24961: LD_INT 2
24963: PUSH
24964: LD_INT 3
24966: NEG
24967: PUSH
24968: EMPTY
24969: LIST
24970: LIST
24971: PUSH
24972: LD_INT 2
24974: NEG
24975: PUSH
24976: LD_INT 5
24978: NEG
24979: PUSH
24980: EMPTY
24981: LIST
24982: LIST
24983: PUSH
24984: LD_INT 3
24986: PUSH
24987: LD_INT 0
24989: PUSH
24990: EMPTY
24991: LIST
24992: LIST
24993: PUSH
24994: LD_INT 3
24996: PUSH
24997: LD_INT 1
24999: NEG
25000: PUSH
25001: EMPTY
25002: LIST
25003: LIST
25004: PUSH
25005: LD_INT 4
25007: PUSH
25008: LD_INT 0
25010: PUSH
25011: EMPTY
25012: LIST
25013: LIST
25014: PUSH
25015: LD_INT 4
25017: PUSH
25018: LD_INT 1
25020: PUSH
25021: EMPTY
25022: LIST
25023: LIST
25024: PUSH
25025: LD_INT 3
25027: PUSH
25028: LD_INT 1
25030: PUSH
25031: EMPTY
25032: LIST
25033: LIST
25034: PUSH
25035: LD_INT 2
25037: PUSH
25038: LD_INT 0
25040: PUSH
25041: EMPTY
25042: LIST
25043: LIST
25044: PUSH
25045: LD_INT 2
25047: PUSH
25048: LD_INT 1
25050: NEG
25051: PUSH
25052: EMPTY
25053: LIST
25054: LIST
25055: PUSH
25056: LD_INT 2
25058: PUSH
25059: LD_INT 2
25061: NEG
25062: PUSH
25063: EMPTY
25064: LIST
25065: LIST
25066: PUSH
25067: LD_INT 4
25069: PUSH
25070: LD_INT 2
25072: PUSH
25073: EMPTY
25074: LIST
25075: LIST
25076: PUSH
25077: LD_INT 4
25079: PUSH
25080: LD_INT 4
25082: PUSH
25083: EMPTY
25084: LIST
25085: LIST
25086: PUSH
25087: LD_INT 4
25089: PUSH
25090: LD_INT 3
25092: PUSH
25093: EMPTY
25094: LIST
25095: LIST
25096: PUSH
25097: LD_INT 5
25099: PUSH
25100: LD_INT 4
25102: PUSH
25103: EMPTY
25104: LIST
25105: LIST
25106: PUSH
25107: LD_INT 5
25109: PUSH
25110: LD_INT 5
25112: PUSH
25113: EMPTY
25114: LIST
25115: LIST
25116: PUSH
25117: LD_INT 4
25119: PUSH
25120: LD_INT 5
25122: PUSH
25123: EMPTY
25124: LIST
25125: LIST
25126: PUSH
25127: LD_INT 3
25129: PUSH
25130: LD_INT 4
25132: PUSH
25133: EMPTY
25134: LIST
25135: LIST
25136: PUSH
25137: LD_INT 3
25139: PUSH
25140: LD_INT 3
25142: PUSH
25143: EMPTY
25144: LIST
25145: LIST
25146: PUSH
25147: LD_INT 5
25149: PUSH
25150: LD_INT 3
25152: PUSH
25153: EMPTY
25154: LIST
25155: LIST
25156: PUSH
25157: LD_INT 3
25159: PUSH
25160: LD_INT 5
25162: PUSH
25163: EMPTY
25164: LIST
25165: LIST
25166: PUSH
25167: EMPTY
25168: LIST
25169: LIST
25170: LIST
25171: LIST
25172: LIST
25173: LIST
25174: LIST
25175: LIST
25176: LIST
25177: LIST
25178: LIST
25179: LIST
25180: LIST
25181: LIST
25182: LIST
25183: LIST
25184: LIST
25185: LIST
25186: LIST
25187: LIST
25188: LIST
25189: LIST
25190: LIST
25191: LIST
25192: LIST
25193: LIST
25194: LIST
25195: LIST
25196: LIST
25197: LIST
25198: LIST
25199: LIST
25200: LIST
25201: LIST
25202: LIST
25203: LIST
25204: LIST
25205: LIST
25206: LIST
25207: LIST
25208: LIST
25209: LIST
25210: LIST
25211: LIST
25212: LIST
25213: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25214: LD_ADDR_VAR 0 33
25218: PUSH
25219: LD_INT 4
25221: NEG
25222: PUSH
25223: LD_INT 4
25225: NEG
25226: PUSH
25227: EMPTY
25228: LIST
25229: LIST
25230: PUSH
25231: LD_INT 4
25233: NEG
25234: PUSH
25235: LD_INT 5
25237: NEG
25238: PUSH
25239: EMPTY
25240: LIST
25241: LIST
25242: PUSH
25243: LD_INT 3
25245: NEG
25246: PUSH
25247: LD_INT 4
25249: NEG
25250: PUSH
25251: EMPTY
25252: LIST
25253: LIST
25254: PUSH
25255: LD_INT 3
25257: NEG
25258: PUSH
25259: LD_INT 3
25261: NEG
25262: PUSH
25263: EMPTY
25264: LIST
25265: LIST
25266: PUSH
25267: LD_INT 4
25269: NEG
25270: PUSH
25271: LD_INT 3
25273: NEG
25274: PUSH
25275: EMPTY
25276: LIST
25277: LIST
25278: PUSH
25279: LD_INT 5
25281: NEG
25282: PUSH
25283: LD_INT 4
25285: NEG
25286: PUSH
25287: EMPTY
25288: LIST
25289: LIST
25290: PUSH
25291: LD_INT 5
25293: NEG
25294: PUSH
25295: LD_INT 5
25297: NEG
25298: PUSH
25299: EMPTY
25300: LIST
25301: LIST
25302: PUSH
25303: LD_INT 3
25305: NEG
25306: PUSH
25307: LD_INT 5
25309: NEG
25310: PUSH
25311: EMPTY
25312: LIST
25313: LIST
25314: PUSH
25315: LD_INT 5
25317: NEG
25318: PUSH
25319: LD_INT 3
25321: NEG
25322: PUSH
25323: EMPTY
25324: LIST
25325: LIST
25326: PUSH
25327: LD_INT 0
25329: PUSH
25330: LD_INT 3
25332: NEG
25333: PUSH
25334: EMPTY
25335: LIST
25336: LIST
25337: PUSH
25338: LD_INT 0
25340: PUSH
25341: LD_INT 4
25343: NEG
25344: PUSH
25345: EMPTY
25346: LIST
25347: LIST
25348: PUSH
25349: LD_INT 1
25351: PUSH
25352: LD_INT 3
25354: NEG
25355: PUSH
25356: EMPTY
25357: LIST
25358: LIST
25359: PUSH
25360: LD_INT 1
25362: PUSH
25363: LD_INT 2
25365: NEG
25366: PUSH
25367: EMPTY
25368: LIST
25369: LIST
25370: PUSH
25371: LD_INT 0
25373: PUSH
25374: LD_INT 2
25376: NEG
25377: PUSH
25378: EMPTY
25379: LIST
25380: LIST
25381: PUSH
25382: LD_INT 1
25384: NEG
25385: PUSH
25386: LD_INT 3
25388: NEG
25389: PUSH
25390: EMPTY
25391: LIST
25392: LIST
25393: PUSH
25394: LD_INT 1
25396: NEG
25397: PUSH
25398: LD_INT 4
25400: NEG
25401: PUSH
25402: EMPTY
25403: LIST
25404: LIST
25405: PUSH
25406: LD_INT 2
25408: PUSH
25409: LD_INT 2
25411: NEG
25412: PUSH
25413: EMPTY
25414: LIST
25415: LIST
25416: PUSH
25417: LD_INT 2
25419: NEG
25420: PUSH
25421: LD_INT 4
25423: NEG
25424: PUSH
25425: EMPTY
25426: LIST
25427: LIST
25428: PUSH
25429: LD_INT 4
25431: PUSH
25432: LD_INT 0
25434: PUSH
25435: EMPTY
25436: LIST
25437: LIST
25438: PUSH
25439: LD_INT 4
25441: PUSH
25442: LD_INT 1
25444: NEG
25445: PUSH
25446: EMPTY
25447: LIST
25448: LIST
25449: PUSH
25450: LD_INT 5
25452: PUSH
25453: LD_INT 0
25455: PUSH
25456: EMPTY
25457: LIST
25458: LIST
25459: PUSH
25460: LD_INT 5
25462: PUSH
25463: LD_INT 1
25465: PUSH
25466: EMPTY
25467: LIST
25468: LIST
25469: PUSH
25470: LD_INT 4
25472: PUSH
25473: LD_INT 1
25475: PUSH
25476: EMPTY
25477: LIST
25478: LIST
25479: PUSH
25480: LD_INT 3
25482: PUSH
25483: LD_INT 0
25485: PUSH
25486: EMPTY
25487: LIST
25488: LIST
25489: PUSH
25490: LD_INT 3
25492: PUSH
25493: LD_INT 1
25495: NEG
25496: PUSH
25497: EMPTY
25498: LIST
25499: LIST
25500: PUSH
25501: LD_INT 3
25503: PUSH
25504: LD_INT 2
25506: NEG
25507: PUSH
25508: EMPTY
25509: LIST
25510: LIST
25511: PUSH
25512: LD_INT 5
25514: PUSH
25515: LD_INT 2
25517: PUSH
25518: EMPTY
25519: LIST
25520: LIST
25521: PUSH
25522: LD_INT 3
25524: PUSH
25525: LD_INT 3
25527: PUSH
25528: EMPTY
25529: LIST
25530: LIST
25531: PUSH
25532: LD_INT 3
25534: PUSH
25535: LD_INT 2
25537: PUSH
25538: EMPTY
25539: LIST
25540: LIST
25541: PUSH
25542: LD_INT 4
25544: PUSH
25545: LD_INT 3
25547: PUSH
25548: EMPTY
25549: LIST
25550: LIST
25551: PUSH
25552: LD_INT 4
25554: PUSH
25555: LD_INT 4
25557: PUSH
25558: EMPTY
25559: LIST
25560: LIST
25561: PUSH
25562: LD_INT 3
25564: PUSH
25565: LD_INT 4
25567: PUSH
25568: EMPTY
25569: LIST
25570: LIST
25571: PUSH
25572: LD_INT 2
25574: PUSH
25575: LD_INT 3
25577: PUSH
25578: EMPTY
25579: LIST
25580: LIST
25581: PUSH
25582: LD_INT 2
25584: PUSH
25585: LD_INT 2
25587: PUSH
25588: EMPTY
25589: LIST
25590: LIST
25591: PUSH
25592: LD_INT 4
25594: PUSH
25595: LD_INT 2
25597: PUSH
25598: EMPTY
25599: LIST
25600: LIST
25601: PUSH
25602: LD_INT 2
25604: PUSH
25605: LD_INT 4
25607: PUSH
25608: EMPTY
25609: LIST
25610: LIST
25611: PUSH
25612: LD_INT 0
25614: PUSH
25615: LD_INT 4
25617: PUSH
25618: EMPTY
25619: LIST
25620: LIST
25621: PUSH
25622: LD_INT 0
25624: PUSH
25625: LD_INT 3
25627: PUSH
25628: EMPTY
25629: LIST
25630: LIST
25631: PUSH
25632: LD_INT 1
25634: PUSH
25635: LD_INT 4
25637: PUSH
25638: EMPTY
25639: LIST
25640: LIST
25641: PUSH
25642: LD_INT 1
25644: PUSH
25645: LD_INT 5
25647: PUSH
25648: EMPTY
25649: LIST
25650: LIST
25651: PUSH
25652: LD_INT 0
25654: PUSH
25655: LD_INT 5
25657: PUSH
25658: EMPTY
25659: LIST
25660: LIST
25661: PUSH
25662: LD_INT 1
25664: NEG
25665: PUSH
25666: LD_INT 4
25668: PUSH
25669: EMPTY
25670: LIST
25671: LIST
25672: PUSH
25673: LD_INT 1
25675: NEG
25676: PUSH
25677: LD_INT 3
25679: PUSH
25680: EMPTY
25681: LIST
25682: LIST
25683: PUSH
25684: LD_INT 2
25686: PUSH
25687: LD_INT 5
25689: PUSH
25690: EMPTY
25691: LIST
25692: LIST
25693: PUSH
25694: LD_INT 2
25696: NEG
25697: PUSH
25698: LD_INT 3
25700: PUSH
25701: EMPTY
25702: LIST
25703: LIST
25704: PUSH
25705: EMPTY
25706: LIST
25707: LIST
25708: LIST
25709: LIST
25710: LIST
25711: LIST
25712: LIST
25713: LIST
25714: LIST
25715: LIST
25716: LIST
25717: LIST
25718: LIST
25719: LIST
25720: LIST
25721: LIST
25722: LIST
25723: LIST
25724: LIST
25725: LIST
25726: LIST
25727: LIST
25728: LIST
25729: LIST
25730: LIST
25731: LIST
25732: LIST
25733: LIST
25734: LIST
25735: LIST
25736: LIST
25737: LIST
25738: LIST
25739: LIST
25740: LIST
25741: LIST
25742: LIST
25743: LIST
25744: LIST
25745: LIST
25746: LIST
25747: LIST
25748: LIST
25749: LIST
25750: LIST
25751: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25752: LD_ADDR_VAR 0 34
25756: PUSH
25757: LD_INT 0
25759: PUSH
25760: LD_INT 4
25762: NEG
25763: PUSH
25764: EMPTY
25765: LIST
25766: LIST
25767: PUSH
25768: LD_INT 0
25770: PUSH
25771: LD_INT 5
25773: NEG
25774: PUSH
25775: EMPTY
25776: LIST
25777: LIST
25778: PUSH
25779: LD_INT 1
25781: PUSH
25782: LD_INT 4
25784: NEG
25785: PUSH
25786: EMPTY
25787: LIST
25788: LIST
25789: PUSH
25790: LD_INT 1
25792: PUSH
25793: LD_INT 3
25795: NEG
25796: PUSH
25797: EMPTY
25798: LIST
25799: LIST
25800: PUSH
25801: LD_INT 0
25803: PUSH
25804: LD_INT 3
25806: NEG
25807: PUSH
25808: EMPTY
25809: LIST
25810: LIST
25811: PUSH
25812: LD_INT 1
25814: NEG
25815: PUSH
25816: LD_INT 4
25818: NEG
25819: PUSH
25820: EMPTY
25821: LIST
25822: LIST
25823: PUSH
25824: LD_INT 1
25826: NEG
25827: PUSH
25828: LD_INT 5
25830: NEG
25831: PUSH
25832: EMPTY
25833: LIST
25834: LIST
25835: PUSH
25836: LD_INT 2
25838: PUSH
25839: LD_INT 3
25841: NEG
25842: PUSH
25843: EMPTY
25844: LIST
25845: LIST
25846: PUSH
25847: LD_INT 2
25849: NEG
25850: PUSH
25851: LD_INT 5
25853: NEG
25854: PUSH
25855: EMPTY
25856: LIST
25857: LIST
25858: PUSH
25859: LD_INT 3
25861: PUSH
25862: LD_INT 0
25864: PUSH
25865: EMPTY
25866: LIST
25867: LIST
25868: PUSH
25869: LD_INT 3
25871: PUSH
25872: LD_INT 1
25874: NEG
25875: PUSH
25876: EMPTY
25877: LIST
25878: LIST
25879: PUSH
25880: LD_INT 4
25882: PUSH
25883: LD_INT 0
25885: PUSH
25886: EMPTY
25887: LIST
25888: LIST
25889: PUSH
25890: LD_INT 4
25892: PUSH
25893: LD_INT 1
25895: PUSH
25896: EMPTY
25897: LIST
25898: LIST
25899: PUSH
25900: LD_INT 3
25902: PUSH
25903: LD_INT 1
25905: PUSH
25906: EMPTY
25907: LIST
25908: LIST
25909: PUSH
25910: LD_INT 2
25912: PUSH
25913: LD_INT 0
25915: PUSH
25916: EMPTY
25917: LIST
25918: LIST
25919: PUSH
25920: LD_INT 2
25922: PUSH
25923: LD_INT 1
25925: NEG
25926: PUSH
25927: EMPTY
25928: LIST
25929: LIST
25930: PUSH
25931: LD_INT 2
25933: PUSH
25934: LD_INT 2
25936: NEG
25937: PUSH
25938: EMPTY
25939: LIST
25940: LIST
25941: PUSH
25942: LD_INT 4
25944: PUSH
25945: LD_INT 2
25947: PUSH
25948: EMPTY
25949: LIST
25950: LIST
25951: PUSH
25952: LD_INT 4
25954: PUSH
25955: LD_INT 4
25957: PUSH
25958: EMPTY
25959: LIST
25960: LIST
25961: PUSH
25962: LD_INT 4
25964: PUSH
25965: LD_INT 3
25967: PUSH
25968: EMPTY
25969: LIST
25970: LIST
25971: PUSH
25972: LD_INT 5
25974: PUSH
25975: LD_INT 4
25977: PUSH
25978: EMPTY
25979: LIST
25980: LIST
25981: PUSH
25982: LD_INT 5
25984: PUSH
25985: LD_INT 5
25987: PUSH
25988: EMPTY
25989: LIST
25990: LIST
25991: PUSH
25992: LD_INT 4
25994: PUSH
25995: LD_INT 5
25997: PUSH
25998: EMPTY
25999: LIST
26000: LIST
26001: PUSH
26002: LD_INT 3
26004: PUSH
26005: LD_INT 4
26007: PUSH
26008: EMPTY
26009: LIST
26010: LIST
26011: PUSH
26012: LD_INT 3
26014: PUSH
26015: LD_INT 3
26017: PUSH
26018: EMPTY
26019: LIST
26020: LIST
26021: PUSH
26022: LD_INT 5
26024: PUSH
26025: LD_INT 3
26027: PUSH
26028: EMPTY
26029: LIST
26030: LIST
26031: PUSH
26032: LD_INT 3
26034: PUSH
26035: LD_INT 5
26037: PUSH
26038: EMPTY
26039: LIST
26040: LIST
26041: PUSH
26042: LD_INT 0
26044: PUSH
26045: LD_INT 3
26047: PUSH
26048: EMPTY
26049: LIST
26050: LIST
26051: PUSH
26052: LD_INT 0
26054: PUSH
26055: LD_INT 2
26057: PUSH
26058: EMPTY
26059: LIST
26060: LIST
26061: PUSH
26062: LD_INT 1
26064: PUSH
26065: LD_INT 3
26067: PUSH
26068: EMPTY
26069: LIST
26070: LIST
26071: PUSH
26072: LD_INT 1
26074: PUSH
26075: LD_INT 4
26077: PUSH
26078: EMPTY
26079: LIST
26080: LIST
26081: PUSH
26082: LD_INT 0
26084: PUSH
26085: LD_INT 4
26087: PUSH
26088: EMPTY
26089: LIST
26090: LIST
26091: PUSH
26092: LD_INT 1
26094: NEG
26095: PUSH
26096: LD_INT 3
26098: PUSH
26099: EMPTY
26100: LIST
26101: LIST
26102: PUSH
26103: LD_INT 1
26105: NEG
26106: PUSH
26107: LD_INT 2
26109: PUSH
26110: EMPTY
26111: LIST
26112: LIST
26113: PUSH
26114: LD_INT 2
26116: PUSH
26117: LD_INT 4
26119: PUSH
26120: EMPTY
26121: LIST
26122: LIST
26123: PUSH
26124: LD_INT 2
26126: NEG
26127: PUSH
26128: LD_INT 2
26130: PUSH
26131: EMPTY
26132: LIST
26133: LIST
26134: PUSH
26135: LD_INT 4
26137: NEG
26138: PUSH
26139: LD_INT 0
26141: PUSH
26142: EMPTY
26143: LIST
26144: LIST
26145: PUSH
26146: LD_INT 4
26148: NEG
26149: PUSH
26150: LD_INT 1
26152: NEG
26153: PUSH
26154: EMPTY
26155: LIST
26156: LIST
26157: PUSH
26158: LD_INT 3
26160: NEG
26161: PUSH
26162: LD_INT 0
26164: PUSH
26165: EMPTY
26166: LIST
26167: LIST
26168: PUSH
26169: LD_INT 3
26171: NEG
26172: PUSH
26173: LD_INT 1
26175: PUSH
26176: EMPTY
26177: LIST
26178: LIST
26179: PUSH
26180: LD_INT 4
26182: NEG
26183: PUSH
26184: LD_INT 1
26186: PUSH
26187: EMPTY
26188: LIST
26189: LIST
26190: PUSH
26191: LD_INT 5
26193: NEG
26194: PUSH
26195: LD_INT 0
26197: PUSH
26198: EMPTY
26199: LIST
26200: LIST
26201: PUSH
26202: LD_INT 5
26204: NEG
26205: PUSH
26206: LD_INT 1
26208: NEG
26209: PUSH
26210: EMPTY
26211: LIST
26212: LIST
26213: PUSH
26214: LD_INT 5
26216: NEG
26217: PUSH
26218: LD_INT 2
26220: NEG
26221: PUSH
26222: EMPTY
26223: LIST
26224: LIST
26225: PUSH
26226: LD_INT 3
26228: NEG
26229: PUSH
26230: LD_INT 2
26232: PUSH
26233: EMPTY
26234: LIST
26235: LIST
26236: PUSH
26237: EMPTY
26238: LIST
26239: LIST
26240: LIST
26241: LIST
26242: LIST
26243: LIST
26244: LIST
26245: LIST
26246: LIST
26247: LIST
26248: LIST
26249: LIST
26250: LIST
26251: LIST
26252: LIST
26253: LIST
26254: LIST
26255: LIST
26256: LIST
26257: LIST
26258: LIST
26259: LIST
26260: LIST
26261: LIST
26262: LIST
26263: LIST
26264: LIST
26265: LIST
26266: LIST
26267: LIST
26268: LIST
26269: LIST
26270: LIST
26271: LIST
26272: LIST
26273: LIST
26274: LIST
26275: LIST
26276: LIST
26277: LIST
26278: LIST
26279: LIST
26280: LIST
26281: LIST
26282: LIST
26283: ST_TO_ADDR
// end ; end ;
26284: GO 26287
26286: POP
// case btype of b_depot , b_warehouse :
26287: LD_VAR 0 1
26291: PUSH
26292: LD_INT 0
26294: DOUBLE
26295: EQUAL
26296: IFTRUE 26306
26298: LD_INT 1
26300: DOUBLE
26301: EQUAL
26302: IFTRUE 26306
26304: GO 26507
26306: POP
// case nation of nation_american :
26307: LD_VAR 0 5
26311: PUSH
26312: LD_INT 1
26314: DOUBLE
26315: EQUAL
26316: IFTRUE 26320
26318: GO 26376
26320: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26321: LD_ADDR_VAR 0 9
26325: PUSH
26326: LD_VAR 0 11
26330: PUSH
26331: LD_VAR 0 12
26335: PUSH
26336: LD_VAR 0 13
26340: PUSH
26341: LD_VAR 0 14
26345: PUSH
26346: LD_VAR 0 15
26350: PUSH
26351: LD_VAR 0 16
26355: PUSH
26356: EMPTY
26357: LIST
26358: LIST
26359: LIST
26360: LIST
26361: LIST
26362: LIST
26363: PUSH
26364: LD_VAR 0 4
26368: PUSH
26369: LD_INT 1
26371: PLUS
26372: ARRAY
26373: ST_TO_ADDR
26374: GO 26505
26376: LD_INT 2
26378: DOUBLE
26379: EQUAL
26380: IFTRUE 26384
26382: GO 26440
26384: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26385: LD_ADDR_VAR 0 9
26389: PUSH
26390: LD_VAR 0 17
26394: PUSH
26395: LD_VAR 0 18
26399: PUSH
26400: LD_VAR 0 19
26404: PUSH
26405: LD_VAR 0 20
26409: PUSH
26410: LD_VAR 0 21
26414: PUSH
26415: LD_VAR 0 22
26419: PUSH
26420: EMPTY
26421: LIST
26422: LIST
26423: LIST
26424: LIST
26425: LIST
26426: LIST
26427: PUSH
26428: LD_VAR 0 4
26432: PUSH
26433: LD_INT 1
26435: PLUS
26436: ARRAY
26437: ST_TO_ADDR
26438: GO 26505
26440: LD_INT 3
26442: DOUBLE
26443: EQUAL
26444: IFTRUE 26448
26446: GO 26504
26448: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26449: LD_ADDR_VAR 0 9
26453: PUSH
26454: LD_VAR 0 23
26458: PUSH
26459: LD_VAR 0 24
26463: PUSH
26464: LD_VAR 0 25
26468: PUSH
26469: LD_VAR 0 26
26473: PUSH
26474: LD_VAR 0 27
26478: PUSH
26479: LD_VAR 0 28
26483: PUSH
26484: EMPTY
26485: LIST
26486: LIST
26487: LIST
26488: LIST
26489: LIST
26490: LIST
26491: PUSH
26492: LD_VAR 0 4
26496: PUSH
26497: LD_INT 1
26499: PLUS
26500: ARRAY
26501: ST_TO_ADDR
26502: GO 26505
26504: POP
26505: GO 27054
26507: LD_INT 2
26509: DOUBLE
26510: EQUAL
26511: IFTRUE 26521
26513: LD_INT 3
26515: DOUBLE
26516: EQUAL
26517: IFTRUE 26521
26519: GO 26577
26521: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26522: LD_ADDR_VAR 0 9
26526: PUSH
26527: LD_VAR 0 29
26531: PUSH
26532: LD_VAR 0 30
26536: PUSH
26537: LD_VAR 0 31
26541: PUSH
26542: LD_VAR 0 32
26546: PUSH
26547: LD_VAR 0 33
26551: PUSH
26552: LD_VAR 0 34
26556: PUSH
26557: EMPTY
26558: LIST
26559: LIST
26560: LIST
26561: LIST
26562: LIST
26563: LIST
26564: PUSH
26565: LD_VAR 0 4
26569: PUSH
26570: LD_INT 1
26572: PLUS
26573: ARRAY
26574: ST_TO_ADDR
26575: GO 27054
26577: LD_INT 16
26579: DOUBLE
26580: EQUAL
26581: IFTRUE 26633
26583: LD_INT 17
26585: DOUBLE
26586: EQUAL
26587: IFTRUE 26633
26589: LD_INT 18
26591: DOUBLE
26592: EQUAL
26593: IFTRUE 26633
26595: LD_INT 19
26597: DOUBLE
26598: EQUAL
26599: IFTRUE 26633
26601: LD_INT 20
26603: DOUBLE
26604: EQUAL
26605: IFTRUE 26633
26607: LD_INT 21
26609: DOUBLE
26610: EQUAL
26611: IFTRUE 26633
26613: LD_INT 23
26615: DOUBLE
26616: EQUAL
26617: IFTRUE 26633
26619: LD_INT 24
26621: DOUBLE
26622: EQUAL
26623: IFTRUE 26633
26625: LD_INT 25
26627: DOUBLE
26628: EQUAL
26629: IFTRUE 26633
26631: GO 26689
26633: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26634: LD_ADDR_VAR 0 9
26638: PUSH
26639: LD_VAR 0 35
26643: PUSH
26644: LD_VAR 0 36
26648: PUSH
26649: LD_VAR 0 37
26653: PUSH
26654: LD_VAR 0 38
26658: PUSH
26659: LD_VAR 0 39
26663: PUSH
26664: LD_VAR 0 40
26668: PUSH
26669: EMPTY
26670: LIST
26671: LIST
26672: LIST
26673: LIST
26674: LIST
26675: LIST
26676: PUSH
26677: LD_VAR 0 4
26681: PUSH
26682: LD_INT 1
26684: PLUS
26685: ARRAY
26686: ST_TO_ADDR
26687: GO 27054
26689: LD_INT 6
26691: DOUBLE
26692: EQUAL
26693: IFTRUE 26745
26695: LD_INT 7
26697: DOUBLE
26698: EQUAL
26699: IFTRUE 26745
26701: LD_INT 8
26703: DOUBLE
26704: EQUAL
26705: IFTRUE 26745
26707: LD_INT 13
26709: DOUBLE
26710: EQUAL
26711: IFTRUE 26745
26713: LD_INT 12
26715: DOUBLE
26716: EQUAL
26717: IFTRUE 26745
26719: LD_INT 15
26721: DOUBLE
26722: EQUAL
26723: IFTRUE 26745
26725: LD_INT 11
26727: DOUBLE
26728: EQUAL
26729: IFTRUE 26745
26731: LD_INT 14
26733: DOUBLE
26734: EQUAL
26735: IFTRUE 26745
26737: LD_INT 10
26739: DOUBLE
26740: EQUAL
26741: IFTRUE 26745
26743: GO 26801
26745: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26746: LD_ADDR_VAR 0 9
26750: PUSH
26751: LD_VAR 0 41
26755: PUSH
26756: LD_VAR 0 42
26760: PUSH
26761: LD_VAR 0 43
26765: PUSH
26766: LD_VAR 0 44
26770: PUSH
26771: LD_VAR 0 45
26775: PUSH
26776: LD_VAR 0 46
26780: PUSH
26781: EMPTY
26782: LIST
26783: LIST
26784: LIST
26785: LIST
26786: LIST
26787: LIST
26788: PUSH
26789: LD_VAR 0 4
26793: PUSH
26794: LD_INT 1
26796: PLUS
26797: ARRAY
26798: ST_TO_ADDR
26799: GO 27054
26801: LD_INT 36
26803: DOUBLE
26804: EQUAL
26805: IFTRUE 26809
26807: GO 26865
26809: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26810: LD_ADDR_VAR 0 9
26814: PUSH
26815: LD_VAR 0 47
26819: PUSH
26820: LD_VAR 0 48
26824: PUSH
26825: LD_VAR 0 49
26829: PUSH
26830: LD_VAR 0 50
26834: PUSH
26835: LD_VAR 0 51
26839: PUSH
26840: LD_VAR 0 52
26844: PUSH
26845: EMPTY
26846: LIST
26847: LIST
26848: LIST
26849: LIST
26850: LIST
26851: LIST
26852: PUSH
26853: LD_VAR 0 4
26857: PUSH
26858: LD_INT 1
26860: PLUS
26861: ARRAY
26862: ST_TO_ADDR
26863: GO 27054
26865: LD_INT 4
26867: DOUBLE
26868: EQUAL
26869: IFTRUE 26891
26871: LD_INT 5
26873: DOUBLE
26874: EQUAL
26875: IFTRUE 26891
26877: LD_INT 34
26879: DOUBLE
26880: EQUAL
26881: IFTRUE 26891
26883: LD_INT 37
26885: DOUBLE
26886: EQUAL
26887: IFTRUE 26891
26889: GO 26947
26891: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26892: LD_ADDR_VAR 0 9
26896: PUSH
26897: LD_VAR 0 53
26901: PUSH
26902: LD_VAR 0 54
26906: PUSH
26907: LD_VAR 0 55
26911: PUSH
26912: LD_VAR 0 56
26916: PUSH
26917: LD_VAR 0 57
26921: PUSH
26922: LD_VAR 0 58
26926: PUSH
26927: EMPTY
26928: LIST
26929: LIST
26930: LIST
26931: LIST
26932: LIST
26933: LIST
26934: PUSH
26935: LD_VAR 0 4
26939: PUSH
26940: LD_INT 1
26942: PLUS
26943: ARRAY
26944: ST_TO_ADDR
26945: GO 27054
26947: LD_INT 31
26949: DOUBLE
26950: EQUAL
26951: IFTRUE 26997
26953: LD_INT 32
26955: DOUBLE
26956: EQUAL
26957: IFTRUE 26997
26959: LD_INT 33
26961: DOUBLE
26962: EQUAL
26963: IFTRUE 26997
26965: LD_INT 27
26967: DOUBLE
26968: EQUAL
26969: IFTRUE 26997
26971: LD_INT 26
26973: DOUBLE
26974: EQUAL
26975: IFTRUE 26997
26977: LD_INT 28
26979: DOUBLE
26980: EQUAL
26981: IFTRUE 26997
26983: LD_INT 29
26985: DOUBLE
26986: EQUAL
26987: IFTRUE 26997
26989: LD_INT 30
26991: DOUBLE
26992: EQUAL
26993: IFTRUE 26997
26995: GO 27053
26997: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26998: LD_ADDR_VAR 0 9
27002: PUSH
27003: LD_VAR 0 59
27007: PUSH
27008: LD_VAR 0 60
27012: PUSH
27013: LD_VAR 0 61
27017: PUSH
27018: LD_VAR 0 62
27022: PUSH
27023: LD_VAR 0 63
27027: PUSH
27028: LD_VAR 0 64
27032: PUSH
27033: EMPTY
27034: LIST
27035: LIST
27036: LIST
27037: LIST
27038: LIST
27039: LIST
27040: PUSH
27041: LD_VAR 0 4
27045: PUSH
27046: LD_INT 1
27048: PLUS
27049: ARRAY
27050: ST_TO_ADDR
27051: GO 27054
27053: POP
// temp_list2 = [ ] ;
27054: LD_ADDR_VAR 0 10
27058: PUSH
27059: EMPTY
27060: ST_TO_ADDR
// for i in temp_list do
27061: LD_ADDR_VAR 0 8
27065: PUSH
27066: LD_VAR 0 9
27070: PUSH
27071: FOR_IN
27072: IFFALSE 27124
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27074: LD_ADDR_VAR 0 10
27078: PUSH
27079: LD_VAR 0 10
27083: PUSH
27084: LD_VAR 0 8
27088: PUSH
27089: LD_INT 1
27091: ARRAY
27092: PUSH
27093: LD_VAR 0 2
27097: PLUS
27098: PUSH
27099: LD_VAR 0 8
27103: PUSH
27104: LD_INT 2
27106: ARRAY
27107: PUSH
27108: LD_VAR 0 3
27112: PLUS
27113: PUSH
27114: EMPTY
27115: LIST
27116: LIST
27117: PUSH
27118: EMPTY
27119: LIST
27120: ADD
27121: ST_TO_ADDR
27122: GO 27071
27124: POP
27125: POP
// result = temp_list2 ;
27126: LD_ADDR_VAR 0 7
27130: PUSH
27131: LD_VAR 0 10
27135: ST_TO_ADDR
// end ;
27136: LD_VAR 0 7
27140: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27141: LD_INT 0
27143: PPUSH
27144: PPUSH
27145: PPUSH
// result := false ;
27146: LD_ADDR_VAR 0 4
27150: PUSH
27151: LD_INT 0
27153: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27154: LD_VAR 0 1
27158: NOT
27159: PUSH
27160: LD_VAR 0 2
27164: NOT
27165: OR
27166: PUSH
27167: LD_VAR 0 1
27171: PPUSH
27172: CALL_OW 310
27176: OR
27177: IFFALSE 27181
// exit ;
27179: GO 27385
// if distance < 0 then
27181: LD_VAR 0 3
27185: PUSH
27186: LD_INT 0
27188: LESS
27189: IFFALSE 27199
// distance := 0 ;
27191: LD_ADDR_VAR 0 3
27195: PUSH
27196: LD_INT 0
27198: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27199: LD_ADDR_VAR 0 6
27203: PUSH
27204: LD_VAR 0 2
27208: PPUSH
27209: CALL_OW 266
27213: PPUSH
27214: LD_VAR 0 2
27218: PPUSH
27219: CALL_OW 250
27223: PPUSH
27224: LD_VAR 0 2
27228: PPUSH
27229: CALL_OW 251
27233: PPUSH
27234: LD_VAR 0 2
27238: PPUSH
27239: CALL_OW 254
27243: PPUSH
27244: LD_VAR 0 2
27248: PPUSH
27249: CALL_OW 248
27253: PPUSH
27254: LD_INT 1
27256: PPUSH
27257: CALL 8602 0 6
27261: ST_TO_ADDR
// if not entrance then
27262: LD_VAR 0 6
27266: NOT
27267: IFFALSE 27271
// exit ;
27269: GO 27385
// for i in entrance do
27271: LD_ADDR_VAR 0 5
27275: PUSH
27276: LD_VAR 0 6
27280: PUSH
27281: FOR_IN
27282: IFFALSE 27383
// begin if not distance then
27284: LD_VAR 0 3
27288: NOT
27289: IFFALSE 27334
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27291: LD_VAR 0 1
27295: PPUSH
27296: LD_VAR 0 5
27300: PUSH
27301: LD_INT 1
27303: ARRAY
27304: PPUSH
27305: LD_VAR 0 5
27309: PUSH
27310: LD_INT 2
27312: ARRAY
27313: PPUSH
27314: CALL_OW 307
27318: IFFALSE 27332
// begin result := true ;
27320: LD_ADDR_VAR 0 4
27324: PUSH
27325: LD_INT 1
27327: ST_TO_ADDR
// exit ;
27328: POP
27329: POP
27330: GO 27385
// end ; end else
27332: GO 27381
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27334: LD_VAR 0 1
27338: PPUSH
27339: LD_VAR 0 5
27343: PUSH
27344: LD_INT 1
27346: ARRAY
27347: PPUSH
27348: LD_VAR 0 5
27352: PUSH
27353: LD_INT 2
27355: ARRAY
27356: PPUSH
27357: CALL_OW 297
27361: PUSH
27362: LD_VAR 0 3
27366: LESSEQUAL
27367: IFFALSE 27381
// begin result := true ;
27369: LD_ADDR_VAR 0 4
27373: PUSH
27374: LD_INT 1
27376: ST_TO_ADDR
// exit ;
27377: POP
27378: POP
27379: GO 27385
// end ; end ; end ;
27381: GO 27281
27383: POP
27384: POP
// end ;
27385: LD_VAR 0 4
27389: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27390: LD_INT 0
27392: PPUSH
27393: PPUSH
27394: PPUSH
// result := false ;
27395: LD_ADDR_VAR 0 3
27399: PUSH
27400: LD_INT 0
27402: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27403: LD_VAR 0 1
27407: NOT
27408: PUSH
27409: LD_VAR 0 2
27413: NOT
27414: OR
27415: PUSH
27416: LD_VAR 0 1
27420: PPUSH
27421: CALL_OW 302
27425: NOT
27426: OR
27427: PUSH
27428: LD_VAR 0 2
27432: PPUSH
27433: CALL_OW 302
27437: NOT
27438: OR
27439: IFFALSE 27443
// exit ;
27441: GO 27604
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27443: LD_VAR 0 1
27447: PPUSH
27448: LD_INT 81
27450: PUSH
27451: LD_VAR 0 1
27455: PPUSH
27456: CALL_OW 255
27460: PUSH
27461: EMPTY
27462: LIST
27463: LIST
27464: PUSH
27465: LD_INT 3
27467: PUSH
27468: LD_INT 21
27470: PUSH
27471: LD_INT 3
27473: PUSH
27474: EMPTY
27475: LIST
27476: LIST
27477: PUSH
27478: EMPTY
27479: LIST
27480: LIST
27481: PUSH
27482: EMPTY
27483: LIST
27484: LIST
27485: PPUSH
27486: CALL_OW 69
27490: PPUSH
27491: LD_VAR 0 1
27495: PPUSH
27496: CALL_OW 74
27500: PPUSH
27501: CALL_OW 296
27505: PUSH
27506: LD_INT 8
27508: LESS
27509: IFFALSE 27513
// exit ;
27511: GO 27604
// building := IsInUnit ( unit2 ) ;
27513: LD_ADDR_VAR 0 5
27517: PUSH
27518: LD_VAR 0 2
27522: PPUSH
27523: CALL_OW 310
27527: ST_TO_ADDR
// if building then
27528: LD_VAR 0 5
27532: IFFALSE 27559
// result := IsNearbyEntrance ( unit , building , 2 ) else
27534: LD_ADDR_VAR 0 3
27538: PUSH
27539: LD_VAR 0 1
27543: PPUSH
27544: LD_VAR 0 5
27548: PPUSH
27549: LD_INT 2
27551: PPUSH
27552: CALL 27141 0 3
27556: ST_TO_ADDR
27557: GO 27604
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27559: LD_ADDR_VAR 0 3
27563: PUSH
27564: LD_VAR 0 1
27568: PPUSH
27569: LD_VAR 0 2
27573: PPUSH
27574: CALL_OW 296
27578: PUSH
27579: LD_INT 6
27581: LESS
27582: PUSH
27583: LD_VAR 0 2
27587: PPUSH
27588: CALL_OW 255
27592: PPUSH
27593: LD_VAR 0 1
27597: PPUSH
27598: CALL_OW 292
27602: AND
27603: ST_TO_ADDR
// end ;
27604: LD_VAR 0 3
27608: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27609: LD_INT 0
27611: PPUSH
27612: PPUSH
27613: PPUSH
27614: PPUSH
// tmp := [ ] ;
27615: LD_ADDR_VAR 0 3
27619: PUSH
27620: EMPTY
27621: ST_TO_ADDR
// list := [ ] ;
27622: LD_ADDR_VAR 0 5
27626: PUSH
27627: EMPTY
27628: ST_TO_ADDR
// for i = 16 to 25 do
27629: LD_ADDR_VAR 0 4
27633: PUSH
27634: DOUBLE
27635: LD_INT 16
27637: DEC
27638: ST_TO_ADDR
27639: LD_INT 25
27641: PUSH
27642: FOR_TO
27643: IFFALSE 27716
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27645: LD_ADDR_VAR 0 3
27649: PUSH
27650: LD_VAR 0 3
27654: PUSH
27655: LD_INT 22
27657: PUSH
27658: LD_VAR 0 1
27662: PPUSH
27663: CALL_OW 255
27667: PUSH
27668: EMPTY
27669: LIST
27670: LIST
27671: PUSH
27672: LD_INT 91
27674: PUSH
27675: LD_VAR 0 1
27679: PUSH
27680: LD_INT 6
27682: PUSH
27683: EMPTY
27684: LIST
27685: LIST
27686: LIST
27687: PUSH
27688: LD_INT 30
27690: PUSH
27691: LD_VAR 0 4
27695: PUSH
27696: EMPTY
27697: LIST
27698: LIST
27699: PUSH
27700: EMPTY
27701: LIST
27702: LIST
27703: LIST
27704: PUSH
27705: EMPTY
27706: LIST
27707: PPUSH
27708: CALL_OW 69
27712: ADD
27713: ST_TO_ADDR
27714: GO 27642
27716: POP
27717: POP
// for i = 1 to tmp do
27718: LD_ADDR_VAR 0 4
27722: PUSH
27723: DOUBLE
27724: LD_INT 1
27726: DEC
27727: ST_TO_ADDR
27728: LD_VAR 0 3
27732: PUSH
27733: FOR_TO
27734: IFFALSE 27822
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27736: LD_ADDR_VAR 0 5
27740: PUSH
27741: LD_VAR 0 5
27745: PUSH
27746: LD_VAR 0 3
27750: PUSH
27751: LD_VAR 0 4
27755: ARRAY
27756: PPUSH
27757: CALL_OW 266
27761: PUSH
27762: LD_VAR 0 3
27766: PUSH
27767: LD_VAR 0 4
27771: ARRAY
27772: PPUSH
27773: CALL_OW 250
27777: PUSH
27778: LD_VAR 0 3
27782: PUSH
27783: LD_VAR 0 4
27787: ARRAY
27788: PPUSH
27789: CALL_OW 251
27793: PUSH
27794: LD_VAR 0 3
27798: PUSH
27799: LD_VAR 0 4
27803: ARRAY
27804: PPUSH
27805: CALL_OW 254
27809: PUSH
27810: EMPTY
27811: LIST
27812: LIST
27813: LIST
27814: LIST
27815: PUSH
27816: EMPTY
27817: LIST
27818: ADD
27819: ST_TO_ADDR
27820: GO 27733
27822: POP
27823: POP
// result := list ;
27824: LD_ADDR_VAR 0 2
27828: PUSH
27829: LD_VAR 0 5
27833: ST_TO_ADDR
// end ;
27834: LD_VAR 0 2
27838: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27839: LD_INT 0
27841: PPUSH
27842: PPUSH
27843: PPUSH
27844: PPUSH
27845: PPUSH
27846: PPUSH
27847: PPUSH
// if not factory then
27848: LD_VAR 0 1
27852: NOT
27853: IFFALSE 27857
// exit ;
27855: GO 28382
// if control = control_apeman then
27857: LD_VAR 0 4
27861: PUSH
27862: LD_INT 5
27864: EQUAL
27865: IFFALSE 27974
// begin tmp := UnitsInside ( factory ) ;
27867: LD_ADDR_VAR 0 8
27871: PUSH
27872: LD_VAR 0 1
27876: PPUSH
27877: CALL_OW 313
27881: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27882: LD_VAR 0 8
27886: PPUSH
27887: LD_INT 25
27889: PUSH
27890: LD_INT 12
27892: PUSH
27893: EMPTY
27894: LIST
27895: LIST
27896: PPUSH
27897: CALL_OW 72
27901: NOT
27902: IFFALSE 27912
// control := control_manual ;
27904: LD_ADDR_VAR 0 4
27908: PUSH
27909: LD_INT 1
27911: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27912: LD_ADDR_VAR 0 8
27916: PUSH
27917: LD_VAR 0 1
27921: PPUSH
27922: CALL 27609 0 1
27926: ST_TO_ADDR
// if tmp then
27927: LD_VAR 0 8
27931: IFFALSE 27974
// begin for i in tmp do
27933: LD_ADDR_VAR 0 7
27937: PUSH
27938: LD_VAR 0 8
27942: PUSH
27943: FOR_IN
27944: IFFALSE 27972
// if i [ 1 ] = b_ext_radar then
27946: LD_VAR 0 7
27950: PUSH
27951: LD_INT 1
27953: ARRAY
27954: PUSH
27955: LD_INT 20
27957: EQUAL
27958: IFFALSE 27970
// begin control := control_remote ;
27960: LD_ADDR_VAR 0 4
27964: PUSH
27965: LD_INT 2
27967: ST_TO_ADDR
// break ;
27968: GO 27972
// end ;
27970: GO 27943
27972: POP
27973: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27974: LD_VAR 0 1
27978: PPUSH
27979: LD_VAR 0 2
27983: PPUSH
27984: LD_VAR 0 3
27988: PPUSH
27989: LD_VAR 0 4
27993: PPUSH
27994: LD_VAR 0 5
27998: PPUSH
27999: CALL_OW 448
28003: IFFALSE 28038
// begin result := [ chassis , engine , control , weapon ] ;
28005: LD_ADDR_VAR 0 6
28009: PUSH
28010: LD_VAR 0 2
28014: PUSH
28015: LD_VAR 0 3
28019: PUSH
28020: LD_VAR 0 4
28024: PUSH
28025: LD_VAR 0 5
28029: PUSH
28030: EMPTY
28031: LIST
28032: LIST
28033: LIST
28034: LIST
28035: ST_TO_ADDR
// exit ;
28036: GO 28382
// end ; _chassis := AvailableChassisList ( factory ) ;
28038: LD_ADDR_VAR 0 9
28042: PUSH
28043: LD_VAR 0 1
28047: PPUSH
28048: CALL_OW 475
28052: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28053: LD_ADDR_VAR 0 11
28057: PUSH
28058: LD_VAR 0 1
28062: PPUSH
28063: CALL_OW 476
28067: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28068: LD_ADDR_VAR 0 12
28072: PUSH
28073: LD_VAR 0 1
28077: PPUSH
28078: CALL_OW 477
28082: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28083: LD_ADDR_VAR 0 10
28087: PUSH
28088: LD_VAR 0 1
28092: PPUSH
28093: CALL_OW 478
28097: ST_TO_ADDR
// if not chassis in _chassis then
28098: LD_VAR 0 2
28102: PUSH
28103: LD_VAR 0 9
28107: IN
28108: NOT
28109: IFFALSE 28135
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28111: LD_ADDR_VAR 0 2
28115: PUSH
28116: LD_VAR 0 9
28120: PUSH
28121: LD_INT 1
28123: PPUSH
28124: LD_VAR 0 9
28128: PPUSH
28129: CALL_OW 12
28133: ARRAY
28134: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28135: LD_VAR 0 2
28139: PPUSH
28140: LD_VAR 0 3
28144: PPUSH
28145: CALL 28387 0 2
28149: NOT
28150: IFFALSE 28209
// repeat engine := _engine [ 1 ] ;
28152: LD_ADDR_VAR 0 3
28156: PUSH
28157: LD_VAR 0 11
28161: PUSH
28162: LD_INT 1
28164: ARRAY
28165: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28166: LD_ADDR_VAR 0 11
28170: PUSH
28171: LD_VAR 0 11
28175: PPUSH
28176: LD_INT 1
28178: PPUSH
28179: CALL_OW 3
28183: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28184: LD_VAR 0 2
28188: PPUSH
28189: LD_VAR 0 3
28193: PPUSH
28194: CALL 28387 0 2
28198: PUSH
28199: LD_VAR 0 11
28203: PUSH
28204: EMPTY
28205: EQUAL
28206: OR
28207: IFFALSE 28152
// if not control in _control then
28209: LD_VAR 0 4
28213: PUSH
28214: LD_VAR 0 12
28218: IN
28219: NOT
28220: IFFALSE 28246
// control := _control [ rand ( 1 , _control ) ] ;
28222: LD_ADDR_VAR 0 4
28226: PUSH
28227: LD_VAR 0 12
28231: PUSH
28232: LD_INT 1
28234: PPUSH
28235: LD_VAR 0 12
28239: PPUSH
28240: CALL_OW 12
28244: ARRAY
28245: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28246: LD_VAR 0 2
28250: PPUSH
28251: LD_VAR 0 5
28255: PPUSH
28256: CALL 28607 0 2
28260: NOT
28261: IFFALSE 28320
// repeat weapon := _weapon [ 1 ] ;
28263: LD_ADDR_VAR 0 5
28267: PUSH
28268: LD_VAR 0 10
28272: PUSH
28273: LD_INT 1
28275: ARRAY
28276: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28277: LD_ADDR_VAR 0 10
28281: PUSH
28282: LD_VAR 0 10
28286: PPUSH
28287: LD_INT 1
28289: PPUSH
28290: CALL_OW 3
28294: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28295: LD_VAR 0 2
28299: PPUSH
28300: LD_VAR 0 5
28304: PPUSH
28305: CALL 28607 0 2
28309: PUSH
28310: LD_VAR 0 10
28314: PUSH
28315: EMPTY
28316: EQUAL
28317: OR
28318: IFFALSE 28263
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28320: LD_VAR 0 1
28324: PPUSH
28325: LD_VAR 0 2
28329: PPUSH
28330: LD_VAR 0 3
28334: PPUSH
28335: LD_VAR 0 4
28339: PPUSH
28340: LD_VAR 0 5
28344: PPUSH
28345: CALL_OW 448
28349: IFFALSE 28382
// result := [ chassis , engine , control , weapon ] ;
28351: LD_ADDR_VAR 0 6
28355: PUSH
28356: LD_VAR 0 2
28360: PUSH
28361: LD_VAR 0 3
28365: PUSH
28366: LD_VAR 0 4
28370: PUSH
28371: LD_VAR 0 5
28375: PUSH
28376: EMPTY
28377: LIST
28378: LIST
28379: LIST
28380: LIST
28381: ST_TO_ADDR
// end ;
28382: LD_VAR 0 6
28386: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28387: LD_INT 0
28389: PPUSH
// if not chassis or not engine then
28390: LD_VAR 0 1
28394: NOT
28395: PUSH
28396: LD_VAR 0 2
28400: NOT
28401: OR
28402: IFFALSE 28406
// exit ;
28404: GO 28602
// case engine of engine_solar :
28406: LD_VAR 0 2
28410: PUSH
28411: LD_INT 2
28413: DOUBLE
28414: EQUAL
28415: IFTRUE 28419
28417: GO 28457
28419: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28420: LD_ADDR_VAR 0 3
28424: PUSH
28425: LD_INT 11
28427: PUSH
28428: LD_INT 12
28430: PUSH
28431: LD_INT 13
28433: PUSH
28434: LD_INT 14
28436: PUSH
28437: LD_INT 1
28439: PUSH
28440: LD_INT 2
28442: PUSH
28443: LD_INT 3
28445: PUSH
28446: EMPTY
28447: LIST
28448: LIST
28449: LIST
28450: LIST
28451: LIST
28452: LIST
28453: LIST
28454: ST_TO_ADDR
28455: GO 28586
28457: LD_INT 1
28459: DOUBLE
28460: EQUAL
28461: IFTRUE 28465
28463: GO 28527
28465: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28466: LD_ADDR_VAR 0 3
28470: PUSH
28471: LD_INT 11
28473: PUSH
28474: LD_INT 12
28476: PUSH
28477: LD_INT 13
28479: PUSH
28480: LD_INT 14
28482: PUSH
28483: LD_INT 1
28485: PUSH
28486: LD_INT 2
28488: PUSH
28489: LD_INT 3
28491: PUSH
28492: LD_INT 4
28494: PUSH
28495: LD_INT 5
28497: PUSH
28498: LD_INT 21
28500: PUSH
28501: LD_INT 23
28503: PUSH
28504: LD_INT 22
28506: PUSH
28507: LD_INT 24
28509: PUSH
28510: EMPTY
28511: LIST
28512: LIST
28513: LIST
28514: LIST
28515: LIST
28516: LIST
28517: LIST
28518: LIST
28519: LIST
28520: LIST
28521: LIST
28522: LIST
28523: LIST
28524: ST_TO_ADDR
28525: GO 28586
28527: LD_INT 3
28529: DOUBLE
28530: EQUAL
28531: IFTRUE 28535
28533: GO 28585
28535: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28536: LD_ADDR_VAR 0 3
28540: PUSH
28541: LD_INT 13
28543: PUSH
28544: LD_INT 14
28546: PUSH
28547: LD_INT 2
28549: PUSH
28550: LD_INT 3
28552: PUSH
28553: LD_INT 4
28555: PUSH
28556: LD_INT 5
28558: PUSH
28559: LD_INT 21
28561: PUSH
28562: LD_INT 22
28564: PUSH
28565: LD_INT 23
28567: PUSH
28568: LD_INT 24
28570: PUSH
28571: EMPTY
28572: LIST
28573: LIST
28574: LIST
28575: LIST
28576: LIST
28577: LIST
28578: LIST
28579: LIST
28580: LIST
28581: LIST
28582: ST_TO_ADDR
28583: GO 28586
28585: POP
// result := ( chassis in result ) ;
28586: LD_ADDR_VAR 0 3
28590: PUSH
28591: LD_VAR 0 1
28595: PUSH
28596: LD_VAR 0 3
28600: IN
28601: ST_TO_ADDR
// end ;
28602: LD_VAR 0 3
28606: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28607: LD_INT 0
28609: PPUSH
// if not chassis or not weapon then
28610: LD_VAR 0 1
28614: NOT
28615: PUSH
28616: LD_VAR 0 2
28620: NOT
28621: OR
28622: IFFALSE 28626
// exit ;
28624: GO 29652
// case weapon of us_machine_gun :
28626: LD_VAR 0 2
28630: PUSH
28631: LD_INT 2
28633: DOUBLE
28634: EQUAL
28635: IFTRUE 28639
28637: GO 28669
28639: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28640: LD_ADDR_VAR 0 3
28644: PUSH
28645: LD_INT 1
28647: PUSH
28648: LD_INT 2
28650: PUSH
28651: LD_INT 3
28653: PUSH
28654: LD_INT 4
28656: PUSH
28657: LD_INT 5
28659: PUSH
28660: EMPTY
28661: LIST
28662: LIST
28663: LIST
28664: LIST
28665: LIST
28666: ST_TO_ADDR
28667: GO 29636
28669: LD_INT 3
28671: DOUBLE
28672: EQUAL
28673: IFTRUE 28677
28675: GO 28707
28677: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28678: LD_ADDR_VAR 0 3
28682: PUSH
28683: LD_INT 1
28685: PUSH
28686: LD_INT 2
28688: PUSH
28689: LD_INT 3
28691: PUSH
28692: LD_INT 4
28694: PUSH
28695: LD_INT 5
28697: PUSH
28698: EMPTY
28699: LIST
28700: LIST
28701: LIST
28702: LIST
28703: LIST
28704: ST_TO_ADDR
28705: GO 29636
28707: LD_INT 11
28709: DOUBLE
28710: EQUAL
28711: IFTRUE 28715
28713: GO 28745
28715: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28716: LD_ADDR_VAR 0 3
28720: PUSH
28721: LD_INT 1
28723: PUSH
28724: LD_INT 2
28726: PUSH
28727: LD_INT 3
28729: PUSH
28730: LD_INT 4
28732: PUSH
28733: LD_INT 5
28735: PUSH
28736: EMPTY
28737: LIST
28738: LIST
28739: LIST
28740: LIST
28741: LIST
28742: ST_TO_ADDR
28743: GO 29636
28745: LD_INT 4
28747: DOUBLE
28748: EQUAL
28749: IFTRUE 28753
28751: GO 28779
28753: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28754: LD_ADDR_VAR 0 3
28758: PUSH
28759: LD_INT 2
28761: PUSH
28762: LD_INT 3
28764: PUSH
28765: LD_INT 4
28767: PUSH
28768: LD_INT 5
28770: PUSH
28771: EMPTY
28772: LIST
28773: LIST
28774: LIST
28775: LIST
28776: ST_TO_ADDR
28777: GO 29636
28779: LD_INT 5
28781: DOUBLE
28782: EQUAL
28783: IFTRUE 28787
28785: GO 28813
28787: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28788: LD_ADDR_VAR 0 3
28792: PUSH
28793: LD_INT 2
28795: PUSH
28796: LD_INT 3
28798: PUSH
28799: LD_INT 4
28801: PUSH
28802: LD_INT 5
28804: PUSH
28805: EMPTY
28806: LIST
28807: LIST
28808: LIST
28809: LIST
28810: ST_TO_ADDR
28811: GO 29636
28813: LD_INT 9
28815: DOUBLE
28816: EQUAL
28817: IFTRUE 28821
28819: GO 28847
28821: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28822: LD_ADDR_VAR 0 3
28826: PUSH
28827: LD_INT 2
28829: PUSH
28830: LD_INT 3
28832: PUSH
28833: LD_INT 4
28835: PUSH
28836: LD_INT 5
28838: PUSH
28839: EMPTY
28840: LIST
28841: LIST
28842: LIST
28843: LIST
28844: ST_TO_ADDR
28845: GO 29636
28847: LD_INT 7
28849: DOUBLE
28850: EQUAL
28851: IFTRUE 28855
28853: GO 28881
28855: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28856: LD_ADDR_VAR 0 3
28860: PUSH
28861: LD_INT 2
28863: PUSH
28864: LD_INT 3
28866: PUSH
28867: LD_INT 4
28869: PUSH
28870: LD_INT 5
28872: PUSH
28873: EMPTY
28874: LIST
28875: LIST
28876: LIST
28877: LIST
28878: ST_TO_ADDR
28879: GO 29636
28881: LD_INT 12
28883: DOUBLE
28884: EQUAL
28885: IFTRUE 28889
28887: GO 28915
28889: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28890: LD_ADDR_VAR 0 3
28894: PUSH
28895: LD_INT 2
28897: PUSH
28898: LD_INT 3
28900: PUSH
28901: LD_INT 4
28903: PUSH
28904: LD_INT 5
28906: PUSH
28907: EMPTY
28908: LIST
28909: LIST
28910: LIST
28911: LIST
28912: ST_TO_ADDR
28913: GO 29636
28915: LD_INT 13
28917: DOUBLE
28918: EQUAL
28919: IFTRUE 28923
28921: GO 28949
28923: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28924: LD_ADDR_VAR 0 3
28928: PUSH
28929: LD_INT 2
28931: PUSH
28932: LD_INT 3
28934: PUSH
28935: LD_INT 4
28937: PUSH
28938: LD_INT 5
28940: PUSH
28941: EMPTY
28942: LIST
28943: LIST
28944: LIST
28945: LIST
28946: ST_TO_ADDR
28947: GO 29636
28949: LD_INT 14
28951: DOUBLE
28952: EQUAL
28953: IFTRUE 28957
28955: GO 28975
28957: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28958: LD_ADDR_VAR 0 3
28962: PUSH
28963: LD_INT 4
28965: PUSH
28966: LD_INT 5
28968: PUSH
28969: EMPTY
28970: LIST
28971: LIST
28972: ST_TO_ADDR
28973: GO 29636
28975: LD_INT 6
28977: DOUBLE
28978: EQUAL
28979: IFTRUE 28983
28981: GO 29001
28983: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28984: LD_ADDR_VAR 0 3
28988: PUSH
28989: LD_INT 4
28991: PUSH
28992: LD_INT 5
28994: PUSH
28995: EMPTY
28996: LIST
28997: LIST
28998: ST_TO_ADDR
28999: GO 29636
29001: LD_INT 10
29003: DOUBLE
29004: EQUAL
29005: IFTRUE 29009
29007: GO 29027
29009: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29010: LD_ADDR_VAR 0 3
29014: PUSH
29015: LD_INT 4
29017: PUSH
29018: LD_INT 5
29020: PUSH
29021: EMPTY
29022: LIST
29023: LIST
29024: ST_TO_ADDR
29025: GO 29636
29027: LD_INT 22
29029: DOUBLE
29030: EQUAL
29031: IFTRUE 29035
29033: GO 29061
29035: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29036: LD_ADDR_VAR 0 3
29040: PUSH
29041: LD_INT 11
29043: PUSH
29044: LD_INT 12
29046: PUSH
29047: LD_INT 13
29049: PUSH
29050: LD_INT 14
29052: PUSH
29053: EMPTY
29054: LIST
29055: LIST
29056: LIST
29057: LIST
29058: ST_TO_ADDR
29059: GO 29636
29061: LD_INT 23
29063: DOUBLE
29064: EQUAL
29065: IFTRUE 29069
29067: GO 29095
29069: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29070: LD_ADDR_VAR 0 3
29074: PUSH
29075: LD_INT 11
29077: PUSH
29078: LD_INT 12
29080: PUSH
29081: LD_INT 13
29083: PUSH
29084: LD_INT 14
29086: PUSH
29087: EMPTY
29088: LIST
29089: LIST
29090: LIST
29091: LIST
29092: ST_TO_ADDR
29093: GO 29636
29095: LD_INT 24
29097: DOUBLE
29098: EQUAL
29099: IFTRUE 29103
29101: GO 29129
29103: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29104: LD_ADDR_VAR 0 3
29108: PUSH
29109: LD_INT 11
29111: PUSH
29112: LD_INT 12
29114: PUSH
29115: LD_INT 13
29117: PUSH
29118: LD_INT 14
29120: PUSH
29121: EMPTY
29122: LIST
29123: LIST
29124: LIST
29125: LIST
29126: ST_TO_ADDR
29127: GO 29636
29129: LD_INT 30
29131: DOUBLE
29132: EQUAL
29133: IFTRUE 29137
29135: GO 29163
29137: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29138: LD_ADDR_VAR 0 3
29142: PUSH
29143: LD_INT 11
29145: PUSH
29146: LD_INT 12
29148: PUSH
29149: LD_INT 13
29151: PUSH
29152: LD_INT 14
29154: PUSH
29155: EMPTY
29156: LIST
29157: LIST
29158: LIST
29159: LIST
29160: ST_TO_ADDR
29161: GO 29636
29163: LD_INT 25
29165: DOUBLE
29166: EQUAL
29167: IFTRUE 29171
29169: GO 29189
29171: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29172: LD_ADDR_VAR 0 3
29176: PUSH
29177: LD_INT 13
29179: PUSH
29180: LD_INT 14
29182: PUSH
29183: EMPTY
29184: LIST
29185: LIST
29186: ST_TO_ADDR
29187: GO 29636
29189: LD_INT 27
29191: DOUBLE
29192: EQUAL
29193: IFTRUE 29197
29195: GO 29215
29197: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29198: LD_ADDR_VAR 0 3
29202: PUSH
29203: LD_INT 13
29205: PUSH
29206: LD_INT 14
29208: PUSH
29209: EMPTY
29210: LIST
29211: LIST
29212: ST_TO_ADDR
29213: GO 29636
29215: LD_INT 28
29217: DOUBLE
29218: EQUAL
29219: IFTRUE 29223
29221: GO 29241
29223: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29224: LD_ADDR_VAR 0 3
29228: PUSH
29229: LD_INT 13
29231: PUSH
29232: LD_INT 14
29234: PUSH
29235: EMPTY
29236: LIST
29237: LIST
29238: ST_TO_ADDR
29239: GO 29636
29241: LD_INT 29
29243: DOUBLE
29244: EQUAL
29245: IFTRUE 29249
29247: GO 29267
29249: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29250: LD_ADDR_VAR 0 3
29254: PUSH
29255: LD_INT 13
29257: PUSH
29258: LD_INT 14
29260: PUSH
29261: EMPTY
29262: LIST
29263: LIST
29264: ST_TO_ADDR
29265: GO 29636
29267: LD_INT 31
29269: DOUBLE
29270: EQUAL
29271: IFTRUE 29275
29273: GO 29293
29275: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29276: LD_ADDR_VAR 0 3
29280: PUSH
29281: LD_INT 13
29283: PUSH
29284: LD_INT 14
29286: PUSH
29287: EMPTY
29288: LIST
29289: LIST
29290: ST_TO_ADDR
29291: GO 29636
29293: LD_INT 26
29295: DOUBLE
29296: EQUAL
29297: IFTRUE 29301
29299: GO 29319
29301: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29302: LD_ADDR_VAR 0 3
29306: PUSH
29307: LD_INT 13
29309: PUSH
29310: LD_INT 14
29312: PUSH
29313: EMPTY
29314: LIST
29315: LIST
29316: ST_TO_ADDR
29317: GO 29636
29319: LD_INT 42
29321: DOUBLE
29322: EQUAL
29323: IFTRUE 29327
29325: GO 29353
29327: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29328: LD_ADDR_VAR 0 3
29332: PUSH
29333: LD_INT 21
29335: PUSH
29336: LD_INT 22
29338: PUSH
29339: LD_INT 23
29341: PUSH
29342: LD_INT 24
29344: PUSH
29345: EMPTY
29346: LIST
29347: LIST
29348: LIST
29349: LIST
29350: ST_TO_ADDR
29351: GO 29636
29353: LD_INT 43
29355: DOUBLE
29356: EQUAL
29357: IFTRUE 29361
29359: GO 29387
29361: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29362: LD_ADDR_VAR 0 3
29366: PUSH
29367: LD_INT 21
29369: PUSH
29370: LD_INT 22
29372: PUSH
29373: LD_INT 23
29375: PUSH
29376: LD_INT 24
29378: PUSH
29379: EMPTY
29380: LIST
29381: LIST
29382: LIST
29383: LIST
29384: ST_TO_ADDR
29385: GO 29636
29387: LD_INT 44
29389: DOUBLE
29390: EQUAL
29391: IFTRUE 29395
29393: GO 29421
29395: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29396: LD_ADDR_VAR 0 3
29400: PUSH
29401: LD_INT 21
29403: PUSH
29404: LD_INT 22
29406: PUSH
29407: LD_INT 23
29409: PUSH
29410: LD_INT 24
29412: PUSH
29413: EMPTY
29414: LIST
29415: LIST
29416: LIST
29417: LIST
29418: ST_TO_ADDR
29419: GO 29636
29421: LD_INT 45
29423: DOUBLE
29424: EQUAL
29425: IFTRUE 29429
29427: GO 29455
29429: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29430: LD_ADDR_VAR 0 3
29434: PUSH
29435: LD_INT 21
29437: PUSH
29438: LD_INT 22
29440: PUSH
29441: LD_INT 23
29443: PUSH
29444: LD_INT 24
29446: PUSH
29447: EMPTY
29448: LIST
29449: LIST
29450: LIST
29451: LIST
29452: ST_TO_ADDR
29453: GO 29636
29455: LD_INT 49
29457: DOUBLE
29458: EQUAL
29459: IFTRUE 29463
29461: GO 29489
29463: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29464: LD_ADDR_VAR 0 3
29468: PUSH
29469: LD_INT 21
29471: PUSH
29472: LD_INT 22
29474: PUSH
29475: LD_INT 23
29477: PUSH
29478: LD_INT 24
29480: PUSH
29481: EMPTY
29482: LIST
29483: LIST
29484: LIST
29485: LIST
29486: ST_TO_ADDR
29487: GO 29636
29489: LD_INT 51
29491: DOUBLE
29492: EQUAL
29493: IFTRUE 29497
29495: GO 29523
29497: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29498: LD_ADDR_VAR 0 3
29502: PUSH
29503: LD_INT 21
29505: PUSH
29506: LD_INT 22
29508: PUSH
29509: LD_INT 23
29511: PUSH
29512: LD_INT 24
29514: PUSH
29515: EMPTY
29516: LIST
29517: LIST
29518: LIST
29519: LIST
29520: ST_TO_ADDR
29521: GO 29636
29523: LD_INT 52
29525: DOUBLE
29526: EQUAL
29527: IFTRUE 29531
29529: GO 29557
29531: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29532: LD_ADDR_VAR 0 3
29536: PUSH
29537: LD_INT 21
29539: PUSH
29540: LD_INT 22
29542: PUSH
29543: LD_INT 23
29545: PUSH
29546: LD_INT 24
29548: PUSH
29549: EMPTY
29550: LIST
29551: LIST
29552: LIST
29553: LIST
29554: ST_TO_ADDR
29555: GO 29636
29557: LD_INT 53
29559: DOUBLE
29560: EQUAL
29561: IFTRUE 29565
29563: GO 29583
29565: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29566: LD_ADDR_VAR 0 3
29570: PUSH
29571: LD_INT 23
29573: PUSH
29574: LD_INT 24
29576: PUSH
29577: EMPTY
29578: LIST
29579: LIST
29580: ST_TO_ADDR
29581: GO 29636
29583: LD_INT 46
29585: DOUBLE
29586: EQUAL
29587: IFTRUE 29591
29589: GO 29609
29591: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29592: LD_ADDR_VAR 0 3
29596: PUSH
29597: LD_INT 23
29599: PUSH
29600: LD_INT 24
29602: PUSH
29603: EMPTY
29604: LIST
29605: LIST
29606: ST_TO_ADDR
29607: GO 29636
29609: LD_INT 47
29611: DOUBLE
29612: EQUAL
29613: IFTRUE 29617
29615: GO 29635
29617: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29618: LD_ADDR_VAR 0 3
29622: PUSH
29623: LD_INT 23
29625: PUSH
29626: LD_INT 24
29628: PUSH
29629: EMPTY
29630: LIST
29631: LIST
29632: ST_TO_ADDR
29633: GO 29636
29635: POP
// result := ( chassis in result ) ;
29636: LD_ADDR_VAR 0 3
29640: PUSH
29641: LD_VAR 0 1
29645: PUSH
29646: LD_VAR 0 3
29650: IN
29651: ST_TO_ADDR
// end ;
29652: LD_VAR 0 3
29656: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29657: LD_INT 0
29659: PPUSH
29660: PPUSH
29661: PPUSH
29662: PPUSH
// uc_side = 0 ;
29663: LD_ADDR_OWVAR 20
29667: PUSH
29668: LD_INT 0
29670: ST_TO_ADDR
// uc_nation = 0 ;
29671: LD_ADDR_OWVAR 21
29675: PUSH
29676: LD_INT 0
29678: ST_TO_ADDR
// nat_area := nature_area ;
29679: LD_ADDR_VAR 0 4
29683: PUSH
29684: LD_INT 24
29686: ST_TO_ADDR
// InitHc ;
29687: CALL_OW 19
// for i = 1 to 4 do
29691: LD_ADDR_VAR 0 2
29695: PUSH
29696: DOUBLE
29697: LD_INT 1
29699: DEC
29700: ST_TO_ADDR
29701: LD_INT 4
29703: PUSH
29704: FOR_TO
29705: IFFALSE 29752
// begin hc_class = 18 ;
29707: LD_ADDR_OWVAR 28
29711: PUSH
29712: LD_INT 18
29714: ST_TO_ADDR
// hc_gallery =  ;
29715: LD_ADDR_OWVAR 33
29719: PUSH
29720: LD_STRING 
29722: ST_TO_ADDR
// animal := CreateHuman ;
29723: LD_ADDR_VAR 0 3
29727: PUSH
29728: CALL_OW 44
29732: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29733: LD_VAR 0 3
29737: PPUSH
29738: LD_VAR 0 4
29742: PPUSH
29743: LD_INT 0
29745: PPUSH
29746: CALL_OW 49
// end ;
29750: GO 29704
29752: POP
29753: POP
// for i = 1 to 3 do
29754: LD_ADDR_VAR 0 2
29758: PUSH
29759: DOUBLE
29760: LD_INT 1
29762: DEC
29763: ST_TO_ADDR
29764: LD_INT 3
29766: PUSH
29767: FOR_TO
29768: IFFALSE 29832
// begin hc_class = class_tiger ;
29770: LD_ADDR_OWVAR 28
29774: PUSH
29775: LD_INT 14
29777: ST_TO_ADDR
// hc_gallery =  ;
29778: LD_ADDR_OWVAR 33
29782: PUSH
29783: LD_STRING 
29785: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29786: LD_ADDR_OWVAR 35
29790: PUSH
29791: LD_INT 5
29793: NEG
29794: PPUSH
29795: LD_INT 5
29797: PPUSH
29798: CALL_OW 12
29802: ST_TO_ADDR
// animal := CreateHuman ;
29803: LD_ADDR_VAR 0 3
29807: PUSH
29808: CALL_OW 44
29812: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29813: LD_VAR 0 3
29817: PPUSH
29818: LD_VAR 0 4
29822: PPUSH
29823: LD_INT 0
29825: PPUSH
29826: CALL_OW 49
// end ;
29830: GO 29767
29832: POP
29833: POP
// for i = 1 to 3 do
29834: LD_ADDR_VAR 0 2
29838: PUSH
29839: DOUBLE
29840: LD_INT 1
29842: DEC
29843: ST_TO_ADDR
29844: LD_INT 3
29846: PUSH
29847: FOR_TO
29848: IFFALSE 29951
// begin hc_class = class_apeman ;
29850: LD_ADDR_OWVAR 28
29854: PUSH
29855: LD_INT 12
29857: ST_TO_ADDR
// hc_gallery =  ;
29858: LD_ADDR_OWVAR 33
29862: PUSH
29863: LD_STRING 
29865: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29866: LD_ADDR_OWVAR 35
29870: PUSH
29871: LD_INT 2
29873: NEG
29874: PPUSH
29875: LD_INT 2
29877: PPUSH
29878: CALL_OW 12
29882: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29883: LD_ADDR_OWVAR 31
29887: PUSH
29888: LD_INT 1
29890: PPUSH
29891: LD_INT 3
29893: PPUSH
29894: CALL_OW 12
29898: PUSH
29899: LD_INT 1
29901: PPUSH
29902: LD_INT 3
29904: PPUSH
29905: CALL_OW 12
29909: PUSH
29910: LD_INT 0
29912: PUSH
29913: LD_INT 0
29915: PUSH
29916: EMPTY
29917: LIST
29918: LIST
29919: LIST
29920: LIST
29921: ST_TO_ADDR
// animal := CreateHuman ;
29922: LD_ADDR_VAR 0 3
29926: PUSH
29927: CALL_OW 44
29931: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29932: LD_VAR 0 3
29936: PPUSH
29937: LD_VAR 0 4
29941: PPUSH
29942: LD_INT 0
29944: PPUSH
29945: CALL_OW 49
// end ;
29949: GO 29847
29951: POP
29952: POP
// for i = 1 to 3 do
29953: LD_ADDR_VAR 0 2
29957: PUSH
29958: DOUBLE
29959: LD_INT 1
29961: DEC
29962: ST_TO_ADDR
29963: LD_INT 3
29965: PUSH
29966: FOR_TO
29967: IFFALSE 30014
// begin hc_class = 13 ;
29969: LD_ADDR_OWVAR 28
29973: PUSH
29974: LD_INT 13
29976: ST_TO_ADDR
// hc_gallery =  ;
29977: LD_ADDR_OWVAR 33
29981: PUSH
29982: LD_STRING 
29984: ST_TO_ADDR
// animal := CreateHuman ;
29985: LD_ADDR_VAR 0 3
29989: PUSH
29990: CALL_OW 44
29994: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29995: LD_VAR 0 3
29999: PPUSH
30000: LD_VAR 0 4
30004: PPUSH
30005: LD_INT 0
30007: PPUSH
30008: CALL_OW 49
// end ;
30012: GO 29966
30014: POP
30015: POP
// for i = 1 to 3 do
30016: LD_ADDR_VAR 0 2
30020: PUSH
30021: DOUBLE
30022: LD_INT 1
30024: DEC
30025: ST_TO_ADDR
30026: LD_INT 3
30028: PUSH
30029: FOR_TO
30030: IFFALSE 30075
// begin hc_class = 20 ;
30032: LD_ADDR_OWVAR 28
30036: PUSH
30037: LD_INT 20
30039: ST_TO_ADDR
// hc_gallery =  ;
30040: LD_ADDR_OWVAR 33
30044: PUSH
30045: LD_STRING 
30047: ST_TO_ADDR
// animal := CreateHuman ;
30048: LD_ADDR_VAR 0 3
30052: PUSH
30053: CALL_OW 44
30057: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30058: LD_VAR 0 3
30062: PPUSH
30063: LD_INT 4
30065: PPUSH
30066: LD_INT 0
30068: PPUSH
30069: CALL_OW 49
// end ;
30073: GO 30029
30075: POP
30076: POP
// end ; end_of_file
30077: LD_VAR 0 1
30081: RET
// export function Action ; begin
30082: LD_INT 0
30084: PPUSH
// InGameOn ;
30085: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30089: LD_EXP 11
30093: PPUSH
30094: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30098: LD_EXP 11
30102: PPUSH
30103: LD_STRING D1-JMM-1
30105: PPUSH
30106: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30110: LD_EXP 12
30114: PPUSH
30115: LD_STRING D1-Roth-1
30117: PPUSH
30118: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30122: LD_EXP 11
30126: PPUSH
30127: LD_STRING D1-JMM-2
30129: PPUSH
30130: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30134: LD_EXP 12
30138: PPUSH
30139: LD_STRING D1-Roth-2
30141: PPUSH
30142: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30146: LD_EXP 11
30150: PPUSH
30151: LD_STRING D1-JMM-3
30153: PPUSH
30154: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30158: LD_EXP 12
30162: PPUSH
30163: LD_STRING D1-Roth-3
30165: PPUSH
30166: CALL_OW 88
// ComInvisible ( Roth ) ;
30170: LD_EXP 12
30174: PPUSH
30175: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30179: LD_INT 46
30181: PPUSH
30182: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30186: LD_EXP 11
30190: PPUSH
30191: LD_STRING D1-JMM-4
30193: PPUSH
30194: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30198: LD_INT 10
30200: PPUSH
30201: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30205: LD_EXP 12
30209: PPUSH
30210: LD_EXP 11
30214: PPUSH
30215: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30219: LD_EXP 11
30223: PPUSH
30224: LD_STRING D1-JMM-4a
30226: PPUSH
30227: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30231: LD_EXP 12
30235: PPUSH
30236: LD_STRING D1-Roth-4
30238: PPUSH
30239: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30243: LD_EXP 11
30247: PPUSH
30248: LD_STRING D1-JMM-5
30250: PPUSH
30251: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30255: LD_EXP 12
30259: PPUSH
30260: LD_STRING D1-Roth-5
30262: PPUSH
30263: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30267: LD_EXP 11
30271: PPUSH
30272: LD_STRING D1-JMM-6
30274: PPUSH
30275: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30279: LD_EXP 12
30283: PPUSH
30284: LD_STRING D1-Roth-6
30286: PPUSH
30287: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30291: LD_EXP 11
30295: PPUSH
30296: LD_STRING D1-JMM-7
30298: PPUSH
30299: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30303: LD_EXP 13
30307: PPUSH
30308: LD_EXP 11
30312: PPUSH
30313: CALL_OW 250
30317: PPUSH
30318: LD_EXP 11
30322: PPUSH
30323: CALL_OW 251
30327: PPUSH
30328: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30332: LD_EXP 12
30336: PPUSH
30337: LD_STRING D1-Roth-7
30339: PPUSH
30340: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30344: LD_INT 10
30346: PPUSH
30347: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30351: LD_EXP 13
30355: PPUSH
30356: LD_EXP 11
30360: PPUSH
30361: CALL_OW 296
30365: PUSH
30366: LD_INT 6
30368: LESS
30369: IFFALSE 30344
// ComTurnUnit ( Powell , JMM ) ;
30371: LD_EXP 13
30375: PPUSH
30376: LD_EXP 11
30380: PPUSH
30381: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30385: LD_EXP 13
30389: PPUSH
30390: LD_STRING D1-Pow-7
30392: PPUSH
30393: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30397: LD_EXP 11
30401: PPUSH
30402: LD_EXP 13
30406: PPUSH
30407: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30411: LD_EXP 12
30415: PPUSH
30416: LD_EXP 13
30420: PPUSH
30421: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30425: LD_EXP 11
30429: PPUSH
30430: LD_STRING D1-JMM-8
30432: PPUSH
30433: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30437: LD_EXP 13
30441: PPUSH
30442: LD_STRING D1-Pow-8
30444: PPUSH
30445: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30449: LD_EXP 11
30453: PPUSH
30454: LD_STRING D1-JMM-9
30456: PPUSH
30457: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30461: LD_EXP 13
30465: PPUSH
30466: LD_INT 124
30468: PPUSH
30469: LD_INT 61
30471: PPUSH
30472: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30476: LD_INT 35
30478: PPUSH
30479: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30483: LD_EXP 11
30487: PPUSH
30488: LD_EXP 13
30492: PPUSH
30493: CALL_OW 296
30497: PUSH
30498: LD_INT 6
30500: GREATER
30501: IFFALSE 30476
// SayRadio ( Powell , D1-Pow-9 ) ;
30503: LD_EXP 13
30507: PPUSH
30508: LD_STRING D1-Pow-9
30510: PPUSH
30511: CALL_OW 94
// RemoveUnit ( Powell ) ;
30515: LD_EXP 13
30519: PPUSH
30520: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30524: LD_EXP 13
30528: PPUSH
30529: LD_INT 18
30531: PPUSH
30532: CALL_OW 52
// if Joan and not Joan in selected then
30536: LD_EXP 33
30540: PUSH
30541: LD_EXP 33
30545: PUSH
30546: LD_EXP 3
30550: IN
30551: NOT
30552: AND
30553: IFFALSE 30567
// SayRadio ( Joan , D1-Joan-9 ) ;
30555: LD_EXP 33
30559: PPUSH
30560: LD_STRING D1-Joan-9
30562: PPUSH
30563: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30567: LD_EXP 12
30571: PPUSH
30572: LD_EXP 11
30576: PPUSH
30577: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30581: LD_EXP 11
30585: PPUSH
30586: LD_EXP 12
30590: PPUSH
30591: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30595: LD_EXP 12
30599: PPUSH
30600: LD_STRING D1-Roth-9
30602: PPUSH
30603: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30607: LD_EXP 11
30611: PPUSH
30612: LD_STRING D1-JMM-10
30614: PPUSH
30615: CALL_OW 88
// InGameOff ;
30619: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30623: LD_STRING M1
30625: PPUSH
30626: CALL_OW 337
// SaveForQuickRestart ;
30630: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30634: LD_INT 7
30636: PPUSH
30637: LD_INT 1
30639: PPUSH
30640: LD_INT 2
30642: PPUSH
30643: LD_INT 1
30645: PPUSH
30646: CALL_OW 80
// wait ( 0 0$3 ) ;
30650: LD_INT 105
30652: PPUSH
30653: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30657: LD_EXP 12
30661: PPUSH
30662: LD_INT 124
30664: PPUSH
30665: LD_INT 18
30667: PPUSH
30668: CALL_OW 111
// AddComInvisible ( Roth ) ;
30672: LD_EXP 12
30676: PPUSH
30677: CALL_OW 212
// wait ( 0 0$30 ) ;
30681: LD_INT 1050
30683: PPUSH
30684: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
30688: LD_EXP 12
30692: PPUSH
30693: LD_INT 2100
30695: PPUSH
30696: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30700: LD_EXP 12
30704: PPUSH
30705: LD_INT 156
30707: PPUSH
30708: LD_INT 20
30710: PPUSH
30711: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30715: LD_EXP 12
30719: PPUSH
30720: LD_INT 178
30722: PPUSH
30723: LD_INT 42
30725: PPUSH
30726: CALL_OW 171
// AddComInvisible ( Roth ) ;
30730: LD_EXP 12
30734: PPUSH
30735: CALL_OW 212
// end ;
30739: LD_VAR 0 1
30743: RET
// every 0 0$1 do var i , tmp ;
30744: GO 30746
30746: DISABLE
30747: LD_INT 0
30749: PPUSH
30750: PPUSH
// begin tmp := selected union friends union others ;
30751: LD_ADDR_VAR 0 2
30755: PUSH
30756: LD_EXP 3
30760: PUSH
30761: LD_EXP 4
30765: UNION
30766: PUSH
30767: LD_EXP 5
30771: UNION
30772: ST_TO_ADDR
// if not tmp then
30773: LD_VAR 0 2
30777: NOT
30778: IFFALSE 30782
// exit ;
30780: GO 30854
// repeat wait ( 0 0$1 ) ;
30782: LD_INT 35
30784: PPUSH
30785: CALL_OW 67
// for i in tmp do
30789: LD_ADDR_VAR 0 1
30793: PUSH
30794: LD_VAR 0 2
30798: PUSH
30799: FOR_IN
30800: IFFALSE 30845
// if CanSpot ( JMM , i ) then
30802: LD_EXP 11
30806: PPUSH
30807: LD_VAR 0 1
30811: PPUSH
30812: CALL 27390 0 2
30816: IFFALSE 30843
// begin tmp := tmp diff i ;
30818: LD_ADDR_VAR 0 2
30822: PUSH
30823: LD_VAR 0 2
30827: PUSH
30828: LD_VAR 0 1
30832: DIFF
30833: ST_TO_ADDR
// Spot ( i ) ;
30834: LD_VAR 0 1
30838: PPUSH
30839: CALL 30857 0 1
// end ;
30843: GO 30799
30845: POP
30846: POP
// until not tmp ;
30847: LD_VAR 0 2
30851: NOT
30852: IFFALSE 30782
// end ;
30854: PPOPN 2
30856: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30857: LD_INT 0
30859: PPUSH
30860: PPUSH
30861: PPUSH
30862: PPUSH
// if not unit then
30863: LD_VAR 0 1
30867: NOT
30868: IFFALSE 30872
// exit ;
30870: GO 32761
// InGameOn ;
30872: CALL_OW 8
// side := GetSide ( JMM ) ;
30876: LD_ADDR_VAR 0 4
30880: PUSH
30881: LD_EXP 11
30885: PPUSH
30886: CALL_OW 255
30890: ST_TO_ADDR
// joined := false ;
30891: LD_ADDR_VAR 0 5
30895: PUSH
30896: LD_INT 0
30898: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30899: LD_ADDR_VAR 0 3
30903: PUSH
30904: LD_VAR 0 1
30908: PPUSH
30909: CALL_OW 310
30913: ST_TO_ADDR
// if building then
30914: LD_VAR 0 3
30918: IFFALSE 30977
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30920: LD_EXP 11
30924: PPUSH
30925: LD_VAR 0 1
30929: PPUSH
30930: CALL_OW 255
30934: PPUSH
30935: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30939: LD_EXP 11
30943: PPUSH
30944: LD_VAR 0 3
30948: PPUSH
30949: CALL_OW 120
// repeat wait ( 3 ) ;
30953: LD_INT 3
30955: PPUSH
30956: CALL_OW 67
// until IsInUnit ( JMM ) ;
30960: LD_EXP 11
30964: PPUSH
30965: CALL_OW 310
30969: IFFALSE 30953
// DialogueOn ;
30971: CALL_OW 6
// end else
30975: GO 31009
// begin ComTurnUnit ( JMM , unit ) ;
30977: LD_EXP 11
30981: PPUSH
30982: LD_VAR 0 1
30986: PPUSH
30987: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30991: LD_VAR 0 1
30995: PPUSH
30996: LD_EXP 11
31000: PPUSH
31001: CALL_OW 119
// DialogueOn ;
31005: CALL_OW 6
// end ; if unit = Joan then
31009: LD_VAR 0 1
31013: PUSH
31014: LD_EXP 33
31018: EQUAL
31019: IFFALSE 31129
// begin joined := true ;
31021: LD_ADDR_VAR 0 5
31025: PUSH
31026: LD_INT 1
31028: ST_TO_ADDR
// if Joan in selected then
31029: LD_EXP 33
31033: PUSH
31034: LD_EXP 3
31038: IN
31039: IFFALSE 31067
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31041: LD_EXP 33
31045: PPUSH
31046: LD_STRING D3-Joan-Joan-1
31048: PPUSH
31049: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31053: LD_EXP 11
31057: PPUSH
31058: LD_STRING D3-Joan-JMM-1
31060: PPUSH
31061: CALL_OW 88
// end else
31065: GO 31127
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31067: LD_EXP 33
31071: PPUSH
31072: LD_STRING D4-Joan-Joan-1
31074: PPUSH
31075: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31079: LD_EXP 11
31083: PPUSH
31084: LD_STRING D4-Joan-JMM-1
31086: PPUSH
31087: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31091: LD_EXP 33
31095: PPUSH
31096: LD_STRING D4-Joan-Joan-2
31098: PPUSH
31099: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31103: LD_EXP 11
31107: PPUSH
31108: LD_STRING D4-Joan-JMM-2
31110: PPUSH
31111: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31115: LD_EXP 33
31119: PPUSH
31120: LD_STRING D4-Joan-Joan-3
31122: PPUSH
31123: CALL_OW 88
// end ; end else
31127: GO 32569
// if unit = Lisa then
31129: LD_VAR 0 1
31133: PUSH
31134: LD_EXP 20
31138: EQUAL
31139: IFFALSE 31331
// begin if Lisa in selected then
31141: LD_EXP 20
31145: PUSH
31146: LD_EXP 3
31150: IN
31151: IFFALSE 31264
// begin if GetSide ( Joan ) = 7 then
31153: LD_EXP 33
31157: PPUSH
31158: CALL_OW 255
31162: PUSH
31163: LD_INT 7
31165: EQUAL
31166: IFFALSE 31230
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31168: LD_EXP 20
31172: PPUSH
31173: LD_STRING D3-LisaJ-Lisa-1
31175: PPUSH
31176: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31180: LD_EXP 11
31184: PPUSH
31185: LD_STRING D3-LisaJ-JMM-1
31187: PPUSH
31188: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31192: LD_EXP 20
31196: PPUSH
31197: LD_STRING D3-LisaJ-Lisa-2
31199: PPUSH
31200: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31204: LD_EXP 11
31208: PPUSH
31209: LD_STRING D3-LisaJ-JMM-2
31211: PPUSH
31212: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31216: LD_EXP 20
31220: PPUSH
31221: LD_STRING D3-LisaJ-Lisa-3
31223: PPUSH
31224: CALL_OW 88
// end else
31228: GO 31262
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31230: LD_EXP 20
31234: PPUSH
31235: LD_STRING D3-LisaL-Lisa-1
31237: PPUSH
31238: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31242: LD_EXP 11
31246: PPUSH
31247: LD_STRING D3-LisaL-JMM-1
31249: PPUSH
31250: CALL_OW 88
// joined := true ;
31254: LD_ADDR_VAR 0 5
31258: PUSH
31259: LD_INT 1
31261: ST_TO_ADDR
// end ; end else
31262: GO 31329
// begin if GetSide ( Joan ) = 7 then
31264: LD_EXP 33
31268: PPUSH
31269: CALL_OW 255
31273: PUSH
31274: LD_INT 7
31276: EQUAL
31277: IFFALSE 31317
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31279: LD_EXP 20
31283: PPUSH
31284: LD_STRING D4-LisaJ-Lisa-1
31286: PPUSH
31287: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31291: LD_EXP 11
31295: PPUSH
31296: LD_STRING D4-LisaJ-JMM-1
31298: PPUSH
31299: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31303: LD_EXP 20
31307: PPUSH
31308: LD_STRING D4-LisaJ-Lisa-2
31310: PPUSH
31311: CALL_OW 88
// end else
31315: GO 31329
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31317: LD_EXP 20
31321: PPUSH
31322: LD_STRING D4-LisaL-Lisa-1
31324: PPUSH
31325: CALL_OW 88
// end ; end ; end else
31329: GO 32569
// if unit = Frank then
31331: LD_VAR 0 1
31335: PUSH
31336: LD_EXP 30
31340: EQUAL
31341: IFFALSE 31481
// begin joined := true ;
31343: LD_ADDR_VAR 0 5
31347: PUSH
31348: LD_INT 1
31350: ST_TO_ADDR
// if Frank in selected then
31351: LD_EXP 30
31355: PUSH
31356: LD_EXP 3
31360: IN
31361: IFFALSE 31431
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31363: LD_EXP 30
31367: PPUSH
31368: LD_STRING D3-Frank-Frank-1
31370: PPUSH
31371: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31375: LD_EXP 11
31379: PPUSH
31380: LD_STRING D3-Frank-JMM-1
31382: PPUSH
31383: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31387: LD_EXP 30
31391: PPUSH
31392: LD_STRING D3-Frank-Frank-2
31394: PPUSH
31395: CALL_OW 88
// if reached_lab then
31399: LD_EXP 6
31403: IFFALSE 31429
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31405: LD_EXP 11
31409: PPUSH
31410: LD_STRING D3-Frank-JMM-2
31412: PPUSH
31413: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31417: LD_EXP 30
31421: PPUSH
31422: LD_STRING D3-Frank-Frank-3
31424: PPUSH
31425: CALL_OW 88
// end ; end else
31429: GO 31479
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31431: LD_EXP 30
31435: PPUSH
31436: LD_STRING D4-Frank-Frank-1
31438: PPUSH
31439: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31443: LD_EXP 11
31447: PPUSH
31448: LD_STRING D4-Frank-JMM-1
31450: PPUSH
31451: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31455: LD_EXP 30
31459: PPUSH
31460: LD_STRING D4-Frank-Frank-2
31462: PPUSH
31463: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31467: LD_EXP 11
31471: PPUSH
31472: LD_STRING D4-Frank-JMM-2
31474: PPUSH
31475: CALL_OW 88
// end ; end else
31479: GO 32569
// if unit = Brown then
31481: LD_VAR 0 1
31485: PUSH
31486: LD_EXP 25
31490: EQUAL
31491: IFFALSE 31587
// begin if Brown in selected or gamma_commander = 2 then
31493: LD_EXP 25
31497: PUSH
31498: LD_EXP 3
31502: IN
31503: PUSH
31504: LD_EXP 10
31508: PUSH
31509: LD_INT 2
31511: EQUAL
31512: OR
31513: IFFALSE 31549
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31515: LD_EXP 25
31519: PPUSH
31520: LD_STRING D3-Soldier1-Sol1-1
31522: PPUSH
31523: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31527: LD_EXP 11
31531: PPUSH
31532: LD_STRING D3-Soldier1-JMM-1
31534: PPUSH
31535: CALL_OW 88
// joined := true ;
31539: LD_ADDR_VAR 0 5
31543: PUSH
31544: LD_INT 1
31546: ST_TO_ADDR
// end else
31547: GO 31585
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31549: LD_EXP 25
31553: PPUSH
31554: LD_STRING D4-Soldier1-Sol1-1
31556: PPUSH
31557: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31561: LD_EXP 11
31565: PPUSH
31566: LD_STRING D4-Soldier1-JMM-1
31568: PPUSH
31569: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31573: LD_EXP 25
31577: PPUSH
31578: LD_STRING D4-Soldier1-Sol1-2
31580: PPUSH
31581: CALL_OW 88
// end ; end else
31585: GO 32569
// if unit = Donaldson then
31587: LD_VAR 0 1
31591: PUSH
31592: LD_EXP 21
31596: EQUAL
31597: IFFALSE 31693
// begin if Donaldson in selected or gamma_commander = 1 then
31599: LD_EXP 21
31603: PUSH
31604: LD_EXP 3
31608: IN
31609: PUSH
31610: LD_EXP 10
31614: PUSH
31615: LD_INT 1
31617: EQUAL
31618: OR
31619: IFFALSE 31655
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31621: LD_EXP 21
31625: PPUSH
31626: LD_STRING D3-Soldier2-FSol2-1
31628: PPUSH
31629: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31633: LD_EXP 11
31637: PPUSH
31638: LD_STRING D3-Soldier2-JMM-1
31640: PPUSH
31641: CALL_OW 88
// joined := true ;
31645: LD_ADDR_VAR 0 5
31649: PUSH
31650: LD_INT 1
31652: ST_TO_ADDR
// end else
31653: GO 31691
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31655: LD_VAR 0 1
31659: PPUSH
31660: LD_STRING D4-Soldier1-FSol1-1
31662: PPUSH
31663: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31667: LD_EXP 11
31671: PPUSH
31672: LD_STRING D4-Soldier1-JMM-1
31674: PPUSH
31675: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31679: LD_VAR 0 1
31683: PPUSH
31684: LD_STRING D4-Soldier1-FSol1-2
31686: PPUSH
31687: CALL_OW 88
// end ; end else
31691: GO 32569
// if unit = Cyrus then
31693: LD_VAR 0 1
31697: PUSH
31698: LD_EXP 23
31702: EQUAL
31703: IFFALSE 31777
// begin if Cyrus in selected then
31705: LD_EXP 23
31709: PUSH
31710: LD_EXP 3
31714: IN
31715: IFFALSE 31751
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31717: LD_EXP 23
31721: PPUSH
31722: LD_STRING D3-Cyrus-Cyrus-1
31724: PPUSH
31725: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31729: LD_EXP 11
31733: PPUSH
31734: LD_STRING D3-Cyrus-JMM-1
31736: PPUSH
31737: CALL_OW 88
// joined := true ;
31741: LD_ADDR_VAR 0 5
31745: PUSH
31746: LD_INT 1
31748: ST_TO_ADDR
// end else
31749: GO 31775
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31751: LD_EXP 23
31755: PPUSH
31756: LD_STRING D4-Cyrus-Cyrus-1
31758: PPUSH
31759: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31763: LD_EXP 11
31767: PPUSH
31768: LD_STRING D4-Cyrus-JMM-1
31770: PPUSH
31771: CALL_OW 88
// end ; end else
31775: GO 32569
// if unit = Bobby then
31777: LD_VAR 0 1
31781: PUSH
31782: LD_EXP 22
31786: EQUAL
31787: IFFALSE 31873
// begin if Bobby in selected then
31789: LD_EXP 22
31793: PUSH
31794: LD_EXP 3
31798: IN
31799: IFFALSE 31835
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31801: LD_EXP 22
31805: PPUSH
31806: LD_STRING D3-Bobby-Bobby-1
31808: PPUSH
31809: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31813: LD_EXP 11
31817: PPUSH
31818: LD_STRING D3-Bobby-JMM-1
31820: PPUSH
31821: CALL_OW 88
// joined := true ;
31825: LD_ADDR_VAR 0 5
31829: PUSH
31830: LD_INT 1
31832: ST_TO_ADDR
// end else
31833: GO 31871
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31835: LD_EXP 22
31839: PPUSH
31840: LD_STRING D4-Bobby-Bobby-1
31842: PPUSH
31843: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31847: LD_EXP 11
31851: PPUSH
31852: LD_STRING D4-Bobby-JMM-1
31854: PPUSH
31855: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31859: LD_EXP 22
31863: PPUSH
31864: LD_STRING D4-Bobby-Bobby-2
31866: PPUSH
31867: CALL_OW 88
// end ; end else
31871: GO 32569
// if unit = Cornel then
31873: LD_VAR 0 1
31877: PUSH
31878: LD_EXP 28
31882: EQUAL
31883: IFFALSE 31981
// begin if Cornel in selected then
31885: LD_EXP 28
31889: PUSH
31890: LD_EXP 3
31894: IN
31895: IFFALSE 31943
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31897: LD_EXP 28
31901: PPUSH
31902: LD_STRING D3-Mark-Corn-1
31904: PPUSH
31905: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31909: LD_EXP 11
31913: PPUSH
31914: LD_STRING D3-Mark-JMM-1
31916: PPUSH
31917: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31921: LD_EXP 28
31925: PPUSH
31926: LD_STRING D3-Mark-Corn-2
31928: PPUSH
31929: CALL_OW 88
// joined := true ;
31933: LD_ADDR_VAR 0 5
31937: PUSH
31938: LD_INT 1
31940: ST_TO_ADDR
// end else
31941: GO 31979
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31943: LD_EXP 28
31947: PPUSH
31948: LD_STRING D4-Mark-Corn-1
31950: PPUSH
31951: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31955: LD_EXP 11
31959: PPUSH
31960: LD_STRING D3-Joan-JMM-1
31962: PPUSH
31963: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31967: LD_EXP 28
31971: PPUSH
31972: LD_STRING D4-Mark-Corn-2
31974: PPUSH
31975: CALL_OW 88
// end ; end else
31979: GO 32569
// if unit = Gary then
31981: LD_VAR 0 1
31985: PUSH
31986: LD_EXP 29
31990: EQUAL
31991: IFFALSE 32075
// begin if Gary in selected then
31993: LD_EXP 29
31997: PUSH
31998: LD_EXP 3
32002: IN
32003: IFFALSE 32039
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32005: LD_EXP 29
32009: PPUSH
32010: LD_STRING D3-Gary-Gary-1
32012: PPUSH
32013: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32017: LD_EXP 11
32021: PPUSH
32022: LD_STRING D3-Gary-JMM-1
32024: PPUSH
32025: CALL_OW 88
// joined := true ;
32029: LD_ADDR_VAR 0 5
32033: PUSH
32034: LD_INT 1
32036: ST_TO_ADDR
// end else
32037: GO 32073
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32039: LD_EXP 29
32043: PPUSH
32044: LD_STRING D4-Gary-Gary-1
32046: PPUSH
32047: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32051: LD_EXP 29
32055: PPUSH
32056: LD_INT 1
32058: PPUSH
32059: CALL_OW 235
// DialogueOff ;
32063: CALL_OW 7
// InGameOff ;
32067: CALL_OW 9
// exit ;
32071: GO 32761
// end ; end else
32073: GO 32569
// if unit = Kikuchi then
32075: LD_VAR 0 1
32079: PUSH
32080: LD_EXP 31
32084: EQUAL
32085: IFFALSE 32169
// begin if Kikuchi in selected then
32087: LD_EXP 31
32091: PUSH
32092: LD_EXP 3
32096: IN
32097: IFFALSE 32133
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32099: LD_EXP 31
32103: PPUSH
32104: LD_STRING D3-Yamako-Yam-1
32106: PPUSH
32107: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32111: LD_EXP 11
32115: PPUSH
32116: LD_STRING D3-Soldier2-JMM-1
32118: PPUSH
32119: CALL_OW 88
// joined := true ;
32123: LD_ADDR_VAR 0 5
32127: PUSH
32128: LD_INT 1
32130: ST_TO_ADDR
// end else
32131: GO 32167
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32133: LD_EXP 31
32137: PPUSH
32138: LD_STRING D4-Yamako-Yam-1
32140: PPUSH
32141: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32145: LD_EXP 31
32149: PPUSH
32150: LD_INT 1
32152: PPUSH
32153: CALL_OW 235
// DialogueOff ;
32157: CALL_OW 7
// InGameOff ;
32161: CALL_OW 9
// exit ;
32165: GO 32761
// end ; end else
32167: GO 32569
// if unit = Gladstone then
32169: LD_VAR 0 1
32173: PUSH
32174: LD_EXP 26
32178: EQUAL
32179: IFFALSE 32253
// begin if Gladstone in selected then
32181: LD_EXP 26
32185: PUSH
32186: LD_EXP 3
32190: IN
32191: IFFALSE 32227
// begin joined := true ;
32193: LD_ADDR_VAR 0 5
32197: PUSH
32198: LD_INT 1
32200: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32201: LD_EXP 11
32205: PPUSH
32206: LD_STRING D3-Tim-JMM-1
32208: PPUSH
32209: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32213: LD_EXP 26
32217: PPUSH
32218: LD_STRING D3-Tim-Glad-1
32220: PPUSH
32221: CALL_OW 88
// end else
32225: GO 32251
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32227: LD_EXP 11
32231: PPUSH
32232: LD_STRING D4-Tim-JMM-1
32234: PPUSH
32235: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32239: LD_EXP 26
32243: PPUSH
32244: LD_STRING D4-Tim-Glad-1
32246: PPUSH
32247: CALL_OW 88
// end ; end else
32251: GO 32569
// if unit = Denis then
32253: LD_VAR 0 1
32257: PUSH
32258: LD_EXP 24
32262: EQUAL
32263: IFFALSE 32299
// begin joined := true ;
32265: LD_ADDR_VAR 0 5
32269: PUSH
32270: LD_INT 1
32272: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32273: LD_EXP 24
32277: PPUSH
32278: LD_STRING D3-Denis-Den-1
32280: PPUSH
32281: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32285: LD_EXP 11
32289: PPUSH
32290: LD_STRING D3-Denis-JMM-1
32292: PPUSH
32293: CALL_OW 88
// end else
32297: GO 32569
// if unit = Simms then
32299: LD_VAR 0 1
32303: PUSH
32304: LD_EXP 32
32308: EQUAL
32309: IFFALSE 32345
// begin joined := true ;
32311: LD_ADDR_VAR 0 5
32315: PUSH
32316: LD_INT 1
32318: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32319: LD_EXP 32
32323: PPUSH
32324: LD_STRING D3-Simms-Sim-1
32326: PPUSH
32327: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32331: LD_EXP 11
32335: PPUSH
32336: LD_STRING D3-Simms-JMM-1
32338: PPUSH
32339: CALL_OW 88
// end else
32343: GO 32569
// if unit = DeltaDoctor then
32345: LD_VAR 0 1
32349: PUSH
32350: LD_EXP 34
32354: EQUAL
32355: IFFALSE 32391
// begin joined := true ;
32357: LD_ADDR_VAR 0 5
32361: PUSH
32362: LD_INT 1
32364: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32365: LD_EXP 34
32369: PPUSH
32370: LD_STRING D3-Soldier1-Sol1-1
32372: PPUSH
32373: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32377: LD_EXP 11
32381: PPUSH
32382: LD_STRING D3-Soldier1-JMM-1
32384: PPUSH
32385: CALL_OW 88
// end else
32389: GO 32569
// begin joined := unit in selected ;
32391: LD_ADDR_VAR 0 5
32395: PUSH
32396: LD_VAR 0 1
32400: PUSH
32401: LD_EXP 3
32405: IN
32406: ST_TO_ADDR
// if joined then
32407: LD_VAR 0 5
32411: IFFALSE 32480
// begin if GetSex ( unit ) = sex_male then
32413: LD_VAR 0 1
32417: PPUSH
32418: CALL_OW 258
32422: PUSH
32423: LD_INT 1
32425: EQUAL
32426: IFFALSE 32454
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32428: LD_VAR 0 1
32432: PPUSH
32433: LD_STRING D3-Soldier1-Sol1-1
32435: PPUSH
32436: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32440: LD_EXP 11
32444: PPUSH
32445: LD_STRING D3-Soldier1-JMM-1
32447: PPUSH
32448: CALL_OW 88
// end else
32452: GO 32478
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32454: LD_VAR 0 1
32458: PPUSH
32459: LD_STRING D3-Soldier2-FSol2-1
32461: PPUSH
32462: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32466: LD_EXP 11
32470: PPUSH
32471: LD_STRING D3-Soldier2-JMM-1
32473: PPUSH
32474: CALL_OW 88
// end ; end else
32478: GO 32569
// begin if GetSex ( unit ) = sex_male then
32480: LD_VAR 0 1
32484: PPUSH
32485: CALL_OW 258
32489: PUSH
32490: LD_INT 1
32492: EQUAL
32493: IFFALSE 32533
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32495: LD_VAR 0 1
32499: PPUSH
32500: LD_STRING D4-Soldier2-Sol1-1
32502: PPUSH
32503: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32507: LD_EXP 11
32511: PPUSH
32512: LD_STRING D4-Soldier2-JMM-1
32514: PPUSH
32515: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32519: LD_VAR 0 1
32523: PPUSH
32524: LD_STRING D4-Soldier2-Sol2-1
32526: PPUSH
32527: CALL_OW 88
// end else
32531: GO 32569
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32533: LD_VAR 0 1
32537: PPUSH
32538: LD_STRING D4-Soldier1-FSol1-1
32540: PPUSH
32541: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32545: LD_EXP 11
32549: PPUSH
32550: LD_STRING D4-Soldier1-JMM-1
32552: PPUSH
32553: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32557: LD_VAR 0 1
32561: PPUSH
32562: LD_STRING D4-Soldier1-FSol1-2
32564: PPUSH
32565: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32569: CALL_OW 7
// InGameOff ;
32573: CALL_OW 9
// if building then
32577: LD_VAR 0 3
32581: IFFALSE 32682
// begin SetSide ( JMM , side ) ;
32583: LD_EXP 11
32587: PPUSH
32588: LD_VAR 0 4
32592: PPUSH
32593: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32597: LD_EXP 11
32601: PPUSH
32602: CALL_OW 122
// if joined then
32606: LD_VAR 0 5
32610: IFFALSE 32649
// begin SetSide ( unit , side ) ;
32612: LD_VAR 0 1
32616: PPUSH
32617: LD_VAR 0 4
32621: PPUSH
32622: CALL_OW 235
// SetSide ( building , 1 ) ;
32626: LD_VAR 0 3
32630: PPUSH
32631: LD_INT 1
32633: PPUSH
32634: CALL_OW 235
// ComExitBuilding ( unit ) ;
32638: LD_VAR 0 1
32642: PPUSH
32643: CALL_OW 122
// end else
32647: GO 32680
// begin wait ( 0 0$10 ) ;
32649: LD_INT 350
32651: PPUSH
32652: CALL_OW 67
// SetSide ( unit , 1 ) ;
32656: LD_VAR 0 1
32660: PPUSH
32661: LD_INT 1
32663: PPUSH
32664: CALL_OW 235
// SetSide ( building , 1 ) ;
32668: LD_VAR 0 3
32672: PPUSH
32673: LD_INT 1
32675: PPUSH
32676: CALL_OW 235
// end ; end else
32680: GO 32761
// begin ComStop ( [ JMM , unit ] ) ;
32682: LD_EXP 11
32686: PUSH
32687: LD_VAR 0 1
32691: PUSH
32692: EMPTY
32693: LIST
32694: LIST
32695: PPUSH
32696: CALL_OW 141
// if joined then
32700: LD_VAR 0 5
32704: IFFALSE 32722
// SetSide ( unit , side ) else
32706: LD_VAR 0 1
32710: PPUSH
32711: LD_VAR 0 4
32715: PPUSH
32716: CALL_OW 235
32720: GO 32761
// begin repeat wait ( 0 0$1 ) ;
32722: LD_INT 35
32724: PPUSH
32725: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32729: LD_EXP 11
32733: PPUSH
32734: LD_VAR 0 1
32738: PPUSH
32739: CALL_OW 296
32743: PUSH
32744: LD_INT 10
32746: GREATER
32747: IFFALSE 32722
// SetSide ( unit , 1 ) ;
32749: LD_VAR 0 1
32753: PPUSH
32754: LD_INT 1
32756: PPUSH
32757: CALL_OW 235
// end ; end ; end ;
32761: LD_VAR 0 2
32765: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32766: LD_EXP 11
32770: PPUSH
32771: CALL_OW 310
32775: PUSH
32776: LD_INT 47
32778: EQUAL
32779: IFFALSE 32847
32781: GO 32783
32783: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32784: LD_STRING M1a
32786: PPUSH
32787: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32791: LD_INT 13
32793: PPUSH
32794: LD_INT 1
32796: PPUSH
32797: LD_INT 2
32799: PPUSH
32800: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32804: LD_INT 29
32806: PPUSH
32807: LD_INT 1
32809: PPUSH
32810: LD_INT 2
32812: PPUSH
32813: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32817: LD_EXP 11
32821: PPUSH
32822: LD_INT 9
32824: PPUSH
32825: CALL_OW 336
// can_escape := true ;
32829: LD_ADDR_EXP 7
32833: PUSH
32834: LD_INT 1
32836: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32837: LD_INT 19
32839: PPUSH
32840: LD_INT 1
32842: PPUSH
32843: CALL_OW 424
// end ;
32847: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32848: LD_INT 22
32850: PUSH
32851: LD_INT 4
32853: PUSH
32854: EMPTY
32855: LIST
32856: LIST
32857: PUSH
32858: LD_INT 34
32860: PUSH
32861: LD_INT 12
32863: PUSH
32864: EMPTY
32865: LIST
32866: LIST
32867: PUSH
32868: EMPTY
32869: LIST
32870: LIST
32871: PPUSH
32872: CALL_OW 69
32876: IFFALSE 32958
32878: GO 32880
32880: DISABLE
32881: LD_INT 0
32883: PPUSH
// begin enable ;
32884: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32885: LD_ADDR_VAR 0 1
32889: PUSH
32890: LD_INT 22
32892: PUSH
32893: LD_INT 4
32895: PUSH
32896: EMPTY
32897: LIST
32898: LIST
32899: PUSH
32900: LD_INT 34
32902: PUSH
32903: LD_INT 12
32905: PUSH
32906: EMPTY
32907: LIST
32908: LIST
32909: PUSH
32910: EMPTY
32911: LIST
32912: LIST
32913: PPUSH
32914: CALL_OW 69
32918: PUSH
32919: FOR_IN
32920: IFFALSE 32956
// if GetDistUnits ( i , JMM ) < 6 then
32922: LD_VAR 0 1
32926: PPUSH
32927: LD_EXP 11
32931: PPUSH
32932: CALL_OW 296
32936: PUSH
32937: LD_INT 6
32939: LESS
32940: IFFALSE 32954
// SetSide ( i , 7 ) ;
32942: LD_VAR 0 1
32946: PPUSH
32947: LD_INT 7
32949: PPUSH
32950: CALL_OW 235
32954: GO 32919
32956: POP
32957: POP
// end ;
32958: PPOPN 1
32960: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32961: LD_EXP 7
32965: PUSH
32966: LD_INT 19
32968: PPUSH
32969: LD_INT 22
32971: PUSH
32972: LD_INT 7
32974: PUSH
32975: EMPTY
32976: LIST
32977: LIST
32978: PUSH
32979: LD_INT 21
32981: PUSH
32982: LD_INT 1
32984: PUSH
32985: EMPTY
32986: LIST
32987: LIST
32988: PUSH
32989: EMPTY
32990: LIST
32991: LIST
32992: PPUSH
32993: CALL_OW 71
32997: NOT
32998: AND
32999: PUSH
33000: LD_INT 3
33002: PPUSH
33003: CALL_OW 469
33007: NOT
33008: AND
33009: PUSH
33010: LD_INT 5
33012: PPUSH
33013: CALL_OW 469
33017: NOT
33018: AND
33019: IFFALSE 34245
33021: GO 33023
33023: DISABLE
33024: LD_INT 0
33026: PPUSH
33027: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33028: LD_ADDR_VAR 0 1
33032: PUSH
33033: LD_EXP 3
33037: PPUSH
33038: LD_INT 22
33040: PUSH
33041: LD_INT 4
33043: PUSH
33044: EMPTY
33045: LIST
33046: LIST
33047: PUSH
33048: LD_INT 21
33050: PUSH
33051: LD_INT 1
33053: PUSH
33054: EMPTY
33055: LIST
33056: LIST
33057: PUSH
33058: EMPTY
33059: LIST
33060: LIST
33061: PPUSH
33062: CALL_OW 72
33066: PUSH
33067: LD_INT 0
33069: EQUAL
33070: ST_TO_ADDR
// if not all_taken then
33071: LD_VAR 0 1
33075: NOT
33076: IFFALSE 33217
// case query ( Q1 ) of 1 :
33078: LD_STRING Q1
33080: PPUSH
33081: CALL_OW 97
33085: PUSH
33086: LD_INT 1
33088: DOUBLE
33089: EQUAL
33090: IFTRUE 33094
33092: GO 33205
33094: POP
// begin repeat wait ( 0 0$1 ) ;
33095: LD_INT 35
33097: PPUSH
33098: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33102: LD_EXP 3
33106: PPUSH
33107: LD_INT 22
33109: PUSH
33110: LD_INT 4
33112: PUSH
33113: EMPTY
33114: LIST
33115: LIST
33116: PUSH
33117: LD_INT 21
33119: PUSH
33120: LD_INT 1
33122: PUSH
33123: EMPTY
33124: LIST
33125: LIST
33126: PUSH
33127: EMPTY
33128: LIST
33129: LIST
33130: PPUSH
33131: CALL_OW 72
33135: PUSH
33136: LD_INT 0
33138: EQUAL
33139: PUSH
33140: LD_INT 19
33142: PPUSH
33143: LD_INT 22
33145: PUSH
33146: LD_INT 7
33148: PUSH
33149: EMPTY
33150: LIST
33151: LIST
33152: PUSH
33153: LD_INT 21
33155: PUSH
33156: LD_INT 1
33158: PUSH
33159: EMPTY
33160: LIST
33161: LIST
33162: PUSH
33163: EMPTY
33164: LIST
33165: LIST
33166: PPUSH
33167: CALL_OW 71
33171: NOT
33172: AND
33173: PUSH
33174: LD_INT 3
33176: PPUSH
33177: CALL_OW 469
33181: NOT
33182: AND
33183: PUSH
33184: LD_INT 5
33186: PPUSH
33187: CALL_OW 469
33191: NOT
33192: AND
33193: IFFALSE 33095
// all_taken := true ;
33195: LD_ADDR_VAR 0 1
33199: PUSH
33200: LD_INT 1
33202: ST_TO_ADDR
// end ; 2 :
33203: GO 33217
33205: LD_INT 2
33207: DOUBLE
33208: EQUAL
33209: IFTRUE 33213
33211: GO 33216
33213: POP
// ; end ;
33214: GO 33217
33216: POP
// if team_kill_counter then
33217: LD_EXP 9
33221: IFFALSE 33237
// Say ( JMM , D5-JMM-1 ) else
33223: LD_EXP 11
33227: PPUSH
33228: LD_STRING D5-JMM-1
33230: PPUSH
33231: CALL_OW 88
33235: GO 33249
// Say ( JMM , D5-JMM-1a ) ;
33237: LD_EXP 11
33241: PPUSH
33242: LD_STRING D5-JMM-1a
33244: PPUSH
33245: CALL_OW 88
// if all_taken then
33249: LD_VAR 0 1
33253: IFFALSE 33267
// AddMedal ( All , 1 ) else
33255: LD_STRING All
33257: PPUSH
33258: LD_INT 1
33260: PPUSH
33261: CALL_OW 101
33265: GO 33278
// AddMedal ( All , - 1 ) ;
33267: LD_STRING All
33269: PPUSH
33270: LD_INT 1
33272: NEG
33273: PPUSH
33274: CALL_OW 101
// if team_kill_counter then
33278: LD_EXP 9
33282: IFFALSE 33297
// AddMedal ( Save , - 1 ) else
33284: LD_STRING Save
33286: PPUSH
33287: LD_INT 1
33289: NEG
33290: PPUSH
33291: CALL_OW 101
33295: GO 33307
// AddMedal ( Save , 1 ) ;
33297: LD_STRING Save
33299: PPUSH
33300: LD_INT 1
33302: PPUSH
33303: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33307: LD_EXP 8
33311: PUSH
33312: LD_INT 2
33314: PUSH
33315: LD_INT 1
33317: PUSH
33318: LD_INT 1
33320: PUSH
33321: EMPTY
33322: LIST
33323: LIST
33324: LIST
33325: PUSH
33326: LD_OWVAR 67
33330: ARRAY
33331: GREATEREQUAL
33332: IFFALSE 33347
// AddMedal ( Friendship , - 1 ) else
33334: LD_STRING Friendship
33336: PPUSH
33337: LD_INT 1
33339: NEG
33340: PPUSH
33341: CALL_OW 101
33345: GO 33357
// AddMedal ( Friendship , 1 ) ;
33347: LD_STRING Friendship
33349: PPUSH
33350: LD_INT 1
33352: PPUSH
33353: CALL_OW 101
// GiveMedals ( MAIN ) ;
33357: LD_STRING MAIN
33359: PPUSH
33360: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33364: LD_ADDR_VAR 0 2
33368: PUSH
33369: LD_INT 22
33371: PUSH
33372: LD_INT 7
33374: PUSH
33375: EMPTY
33376: LIST
33377: LIST
33378: PUSH
33379: LD_INT 2
33381: PUSH
33382: LD_INT 25
33384: PUSH
33385: LD_INT 1
33387: PUSH
33388: EMPTY
33389: LIST
33390: LIST
33391: PUSH
33392: LD_INT 25
33394: PUSH
33395: LD_INT 2
33397: PUSH
33398: EMPTY
33399: LIST
33400: LIST
33401: PUSH
33402: LD_INT 25
33404: PUSH
33405: LD_INT 3
33407: PUSH
33408: EMPTY
33409: LIST
33410: LIST
33411: PUSH
33412: LD_INT 25
33414: PUSH
33415: LD_INT 4
33417: PUSH
33418: EMPTY
33419: LIST
33420: LIST
33421: PUSH
33422: LD_INT 25
33424: PUSH
33425: LD_INT 5
33427: PUSH
33428: EMPTY
33429: LIST
33430: LIST
33431: PUSH
33432: LD_INT 25
33434: PUSH
33435: LD_INT 8
33437: PUSH
33438: EMPTY
33439: LIST
33440: LIST
33441: PUSH
33442: LD_INT 25
33444: PUSH
33445: LD_INT 9
33447: PUSH
33448: EMPTY
33449: LIST
33450: LIST
33451: PUSH
33452: EMPTY
33453: LIST
33454: LIST
33455: LIST
33456: LIST
33457: LIST
33458: LIST
33459: LIST
33460: LIST
33461: PUSH
33462: EMPTY
33463: LIST
33464: LIST
33465: PUSH
33466: EMPTY
33467: LIST
33468: PPUSH
33469: CALL_OW 69
33473: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33474: LD_VAR 0 2
33478: PUSH
33479: LD_EXP 12
33483: UNION
33484: PPUSH
33485: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33489: LD_EXP 11
33493: PPUSH
33494: LD_STRING 12a_JMM
33496: PPUSH
33497: CALL_OW 38
// if IsLive ( Roth ) then
33501: LD_EXP 12
33505: PPUSH
33506: CALL_OW 300
33510: IFFALSE 33524
// SaveCharacters ( Roth , 12a_Roth ) ;
33512: LD_EXP 12
33516: PPUSH
33517: LD_STRING 12a_Roth
33519: PPUSH
33520: CALL_OW 38
// if Lisa in tmp then
33524: LD_EXP 20
33528: PUSH
33529: LD_VAR 0 2
33533: IN
33534: IFFALSE 33550
// SaveCharacters ( Lisa , 12a_Lisa ) else
33536: LD_EXP 20
33540: PPUSH
33541: LD_STRING 12a_Lisa
33543: PPUSH
33544: CALL_OW 38
33548: GO 33568
// if Lisa then
33550: LD_EXP 20
33554: IFFALSE 33568
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33556: LD_EXP 20
33560: PPUSH
33561: LD_STRING 12p_Lisa
33563: PPUSH
33564: CALL_OW 38
// if Donaldson in tmp then
33568: LD_EXP 21
33572: PUSH
33573: LD_VAR 0 2
33577: IN
33578: IFFALSE 33594
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33580: LD_EXP 21
33584: PPUSH
33585: LD_STRING 12a_Donaldson
33587: PPUSH
33588: CALL_OW 38
33592: GO 33612
// if Donaldson then
33594: LD_EXP 21
33598: IFFALSE 33612
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33600: LD_EXP 21
33604: PPUSH
33605: LD_STRING 12p_Donaldson
33607: PPUSH
33608: CALL_OW 38
// if Bobby in tmp then
33612: LD_EXP 22
33616: PUSH
33617: LD_VAR 0 2
33621: IN
33622: IFFALSE 33638
// SaveCharacters ( Bobby , 12a_Bobby ) else
33624: LD_EXP 22
33628: PPUSH
33629: LD_STRING 12a_Bobby
33631: PPUSH
33632: CALL_OW 38
33636: GO 33656
// if Bobby then
33638: LD_EXP 22
33642: IFFALSE 33656
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33644: LD_EXP 22
33648: PPUSH
33649: LD_STRING 12p_Bobby
33651: PPUSH
33652: CALL_OW 38
// if Cyrus in tmp then
33656: LD_EXP 23
33660: PUSH
33661: LD_VAR 0 2
33665: IN
33666: IFFALSE 33682
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33668: LD_EXP 23
33672: PPUSH
33673: LD_STRING 12a_Cyrus
33675: PPUSH
33676: CALL_OW 38
33680: GO 33700
// if Cyrus then
33682: LD_EXP 23
33686: IFFALSE 33700
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33688: LD_EXP 23
33692: PPUSH
33693: LD_STRING 12p_Cyrus
33695: PPUSH
33696: CALL_OW 38
// if Denis in tmp then
33700: LD_EXP 24
33704: PUSH
33705: LD_VAR 0 2
33709: IN
33710: IFFALSE 33724
// SaveCharacters ( Denis , 12a_Denis ) ;
33712: LD_EXP 24
33716: PPUSH
33717: LD_STRING 12a_Denis
33719: PPUSH
33720: CALL_OW 38
// if Brown in tmp then
33724: LD_EXP 25
33728: PUSH
33729: LD_VAR 0 2
33733: IN
33734: IFFALSE 33750
// SaveCharacters ( Brown , 12a_Brown ) else
33736: LD_EXP 25
33740: PPUSH
33741: LD_STRING 12a_Brown
33743: PPUSH
33744: CALL_OW 38
33748: GO 33774
// if Brown in tmp then
33750: LD_EXP 25
33754: PUSH
33755: LD_VAR 0 2
33759: IN
33760: IFFALSE 33774
// SaveCharacters ( Brown , 12p_Brown ) ;
33762: LD_EXP 25
33766: PPUSH
33767: LD_STRING 12p_Brown
33769: PPUSH
33770: CALL_OW 38
// if Gladstone in tmp then
33774: LD_EXP 26
33778: PUSH
33779: LD_VAR 0 2
33783: IN
33784: IFFALSE 33800
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33786: LD_EXP 26
33790: PPUSH
33791: LD_STRING 12a_Gladstone
33793: PPUSH
33794: CALL_OW 38
33798: GO 33818
// if Gladstone then
33800: LD_EXP 26
33804: IFFALSE 33818
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33806: LD_EXP 26
33810: PPUSH
33811: LD_STRING 12p_Gladstone
33813: PPUSH
33814: CALL_OW 38
// if Houten in tmp then
33818: LD_EXP 27
33822: PUSH
33823: LD_VAR 0 2
33827: IN
33828: IFFALSE 33844
// SaveCharacters ( Houten , 12a_Houten ) else
33830: LD_EXP 27
33834: PPUSH
33835: LD_STRING 12a_Houten
33837: PPUSH
33838: CALL_OW 38
33842: GO 33862
// if Houten then
33844: LD_EXP 27
33848: IFFALSE 33862
// SaveCharacters ( Houten , 12p_Houten ) ;
33850: LD_EXP 27
33854: PPUSH
33855: LD_STRING 12p_Houten
33857: PPUSH
33858: CALL_OW 38
// if Cornel in tmp then
33862: LD_EXP 28
33866: PUSH
33867: LD_VAR 0 2
33871: IN
33872: IFFALSE 33888
// SaveCharacters ( Cornel , 12a_Cornel ) else
33874: LD_EXP 28
33878: PPUSH
33879: LD_STRING 12a_Cornel
33881: PPUSH
33882: CALL_OW 38
33886: GO 33906
// if Cornel then
33888: LD_EXP 28
33892: IFFALSE 33906
// SaveCharacters ( Cornel , 12p_Cornel ) ;
33894: LD_EXP 28
33898: PPUSH
33899: LD_STRING 12p_Cornel
33901: PPUSH
33902: CALL_OW 38
// if Gary in tmp then
33906: LD_EXP 29
33910: PUSH
33911: LD_VAR 0 2
33915: IN
33916: IFFALSE 33932
// SaveCharacters ( Gary , 12a_Gary ) else
33918: LD_EXP 29
33922: PPUSH
33923: LD_STRING 12a_Gary
33925: PPUSH
33926: CALL_OW 38
33930: GO 33950
// if Gary then
33932: LD_EXP 29
33936: IFFALSE 33950
// SaveCharacters ( Gary , 12p_Gary ) ;
33938: LD_EXP 29
33942: PPUSH
33943: LD_STRING 12p_Gary
33945: PPUSH
33946: CALL_OW 38
// if Frank in tmp then
33950: LD_EXP 30
33954: PUSH
33955: LD_VAR 0 2
33959: IN
33960: IFFALSE 33974
// SaveCharacters ( Frank , 12a_Frank ) ;
33962: LD_EXP 30
33966: PPUSH
33967: LD_STRING 12a_Frank
33969: PPUSH
33970: CALL_OW 38
// if Kikuchi in tmp then
33974: LD_EXP 31
33978: PUSH
33979: LD_VAR 0 2
33983: IN
33984: IFFALSE 34000
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33986: LD_EXP 31
33990: PPUSH
33991: LD_STRING 12a_Kikuchi
33993: PPUSH
33994: CALL_OW 38
33998: GO 34018
// if Kikuchi then
34000: LD_EXP 31
34004: IFFALSE 34018
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34006: LD_EXP 31
34010: PPUSH
34011: LD_STRING 12p_Kikuchi
34013: PPUSH
34014: CALL_OW 38
// if Simms in tmp then
34018: LD_EXP 32
34022: PUSH
34023: LD_VAR 0 2
34027: IN
34028: IFFALSE 34042
// SaveCharacters ( Simms , 12a_Simms ) ;
34030: LD_EXP 32
34034: PPUSH
34035: LD_STRING 12a_Simms
34037: PPUSH
34038: CALL_OW 38
// if Joan in tmp then
34042: LD_EXP 33
34046: PUSH
34047: LD_VAR 0 2
34051: IN
34052: IFFALSE 34066
// SaveCharacters ( Joan , 12a_Joan ) ;
34054: LD_EXP 33
34058: PPUSH
34059: LD_STRING 12a_Joan
34061: PPUSH
34062: CALL_OW 38
// if DeltaDoctor in tmp then
34066: LD_EXP 34
34070: PUSH
34071: LD_VAR 0 2
34075: IN
34076: IFFALSE 34090
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34078: LD_EXP 34
34082: PPUSH
34083: LD_STRING 12a_DeltaDoctor
34085: PPUSH
34086: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34090: LD_ADDR_VAR 0 2
34094: PUSH
34095: LD_VAR 0 2
34099: PUSH
34100: LD_EXP 11
34104: PUSH
34105: LD_EXP 12
34109: PUSH
34110: LD_EXP 20
34114: PUSH
34115: LD_EXP 21
34119: PUSH
34120: LD_EXP 22
34124: PUSH
34125: LD_EXP 23
34129: PUSH
34130: LD_EXP 24
34134: PUSH
34135: LD_EXP 25
34139: PUSH
34140: LD_EXP 26
34144: PUSH
34145: LD_EXP 27
34149: PUSH
34150: LD_EXP 28
34154: PUSH
34155: LD_EXP 29
34159: PUSH
34160: LD_EXP 30
34164: PUSH
34165: LD_EXP 31
34169: PUSH
34170: LD_EXP 32
34174: PUSH
34175: LD_EXP 33
34179: PUSH
34180: LD_EXP 34
34184: PUSH
34185: EMPTY
34186: LIST
34187: LIST
34188: LIST
34189: LIST
34190: LIST
34191: LIST
34192: LIST
34193: LIST
34194: LIST
34195: LIST
34196: LIST
34197: LIST
34198: LIST
34199: LIST
34200: LIST
34201: LIST
34202: LIST
34203: DIFF
34204: ST_TO_ADDR
// if tmp then
34205: LD_VAR 0 2
34209: IFFALSE 34223
// SaveCharacters ( tmp , 12a_others ) ;
34211: LD_VAR 0 2
34215: PPUSH
34216: LD_STRING 12a_others
34218: PPUSH
34219: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
34223: LD_EXP 5
34227: PUSH
34228: LD_VAR 0 2
34232: DIFF
34233: PPUSH
34234: LD_STRING 12p_others
34236: PPUSH
34237: CALL_OW 38
// YouWin ;
34241: CALL_OW 103
// end ; end_of_file
34245: PPOPN 2
34247: END
// on SailEvent ( event ) do var tmp ;
34248: LD_INT 0
34250: PPUSH
// begin if event = 1 then
34251: LD_VAR 0 1
34255: PUSH
34256: LD_INT 1
34258: EQUAL
34259: IFFALSE 34332
// begin if not mobile_patrol then
34261: LD_EXP 14
34265: NOT
34266: IFFALSE 34270
// exit ;
34268: GO 34332
// tmp := mobile_patrol [ mobile_patrol ] ;
34270: LD_ADDR_VAR 0 2
34274: PUSH
34275: LD_EXP 14
34279: PUSH
34280: LD_EXP 14
34284: ARRAY
34285: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34286: LD_ADDR_EXP 14
34290: PUSH
34291: LD_EXP 14
34295: PPUSH
34296: LD_EXP 14
34300: PPUSH
34301: CALL_OW 3
34305: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34306: LD_VAR 0 2
34310: PPUSH
34311: LD_EXP 15
34315: PUSH
34316: LD_EXP 14
34320: PUSH
34321: LD_INT 1
34323: PLUS
34324: ARRAY
34325: PPUSH
34326: EMPTY
34327: PPUSH
34328: CALL 6185 0 3
// end ; end ;
34332: PPOPN 2
34334: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34335: LD_VAR 0 1
34339: PUSH
34340: LD_EXP 11
34344: EQUAL
34345: IFFALSE 34354
// YouLost ( JMM ) ;
34347: LD_STRING JMM
34349: PPUSH
34350: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34354: LD_VAR 0 1
34358: PPUSH
34359: CALL_OW 255
34363: PUSH
34364: LD_INT 7
34366: EQUAL
34367: PUSH
34368: LD_VAR 0 1
34372: PPUSH
34373: CALL_OW 264
34377: PUSH
34378: LD_INT 12
34380: EQUAL
34381: AND
34382: IFFALSE 34391
// YouLost ( Artifact ) ;
34384: LD_STRING Artifact
34386: PPUSH
34387: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
34391: LD_VAR 0 1
34395: PPUSH
34396: CALL_OW 255
34400: PUSH
34401: LD_INT 7
34403: EQUAL
34404: PUSH
34405: LD_VAR 0 1
34409: PPUSH
34410: CALL_OW 247
34414: PUSH
34415: LD_INT 1
34417: EQUAL
34418: AND
34419: IFFALSE 34435
// team_kill_counter := team_kill_counter + 1 ;
34421: LD_ADDR_EXP 9
34425: PUSH
34426: LD_EXP 9
34430: PUSH
34431: LD_INT 1
34433: PLUS
34434: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34435: LD_VAR 0 1
34439: PPUSH
34440: CALL_OW 255
34444: PUSH
34445: LD_INT 1
34447: EQUAL
34448: PUSH
34449: LD_VAR 0 1
34453: PPUSH
34454: CALL_OW 247
34458: PUSH
34459: LD_INT 1
34461: EQUAL
34462: AND
34463: IFFALSE 34479
// friends_kill_counter := friends_kill_counter + 1 ;
34465: LD_ADDR_EXP 8
34469: PUSH
34470: LD_EXP 8
34474: PUSH
34475: LD_INT 1
34477: PLUS
34478: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34479: LD_VAR 0 1
34483: PPUSH
34484: CALL_OW 255
34488: PUSH
34489: LD_INT 1
34491: NONEQUAL
34492: IFFALSE 34496
// exit ;
34494: GO 34573
// if GetControl ( un ) = control_remote then
34496: LD_VAR 0 1
34500: PPUSH
34501: CALL_OW 263
34505: PUSH
34506: LD_INT 2
34508: EQUAL
34509: IFFALSE 34527
// defenders := defenders diff un ;
34511: LD_ADDR_EXP 17
34515: PUSH
34516: LD_EXP 17
34520: PUSH
34521: LD_VAR 0 1
34525: DIFF
34526: ST_TO_ADDR
// if not un in defenders then
34527: LD_VAR 0 1
34531: PUSH
34532: LD_EXP 17
34536: IN
34537: NOT
34538: IFFALSE 34573
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34540: LD_ADDR_EXP 18
34544: PUSH
34545: LD_VAR 0 1
34549: PPUSH
34550: CALL_OW 250
34554: PUSH
34555: LD_VAR 0 1
34559: PPUSH
34560: CALL_OW 251
34564: PUSH
34565: EMPTY
34566: LIST
34567: LIST
34568: ST_TO_ADDR
// Defend ;
34569: CALL 2405 0 0
// end ; end ;
34573: PPOPN 1
34575: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34576: LD_VAR 0 1
34580: PPUSH
34581: CALL_OW 255
34585: PUSH
34586: LD_INT 1
34588: NONEQUAL
34589: IFFALSE 34593
// exit ;
34591: GO 34617
// if GetControl ( veh ) = control_remote then
34593: LD_VAR 0 1
34597: PPUSH
34598: CALL_OW 263
34602: PUSH
34603: LD_INT 2
34605: EQUAL
34606: IFFALSE 34617
// Connect ( veh ) ;
34608: LD_VAR 0 1
34612: PPUSH
34613: CALL 5380 0 1
// end ;
34617: PPOPN 2
34619: END
// on UnitGoesToRed ( un ) do var i , veh ;
34620: LD_INT 0
34622: PPUSH
34623: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34624: LD_VAR 0 1
34628: PPUSH
34629: CALL_OW 255
34633: PUSH
34634: LD_INT 1
34636: EQUAL
34637: PUSH
34638: LD_VAR 0 1
34642: PPUSH
34643: CALL_OW 263
34647: PUSH
34648: LD_INT 2
34650: EQUAL
34651: AND
34652: IFFALSE 34663
// ComUnlink ( un ) ;
34654: LD_VAR 0 1
34658: PPUSH
34659: CALL_OW 136
// if un = ambar0 then
34663: LD_VAR 0 1
34667: PUSH
34668: LD_INT 18
34670: EQUAL
34671: IFFALSE 34781
// begin uc_side := 1 ;
34673: LD_ADDR_OWVAR 20
34677: PUSH
34678: LD_INT 1
34680: ST_TO_ADDR
// uc_nation := 1 ;
34681: LD_ADDR_OWVAR 21
34685: PUSH
34686: LD_INT 1
34688: ST_TO_ADDR
// for i = 1 to 6 do
34689: LD_ADDR_VAR 0 2
34693: PUSH
34694: DOUBLE
34695: LD_INT 1
34697: DEC
34698: ST_TO_ADDR
34699: LD_INT 6
34701: PUSH
34702: FOR_TO
34703: IFFALSE 34779
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34705: LD_INT 3
34707: PPUSH
34708: LD_INT 1
34710: PPUSH
34711: LD_INT 3
34713: PPUSH
34714: LD_INT 4
34716: PPUSH
34717: LD_INT 100
34719: PPUSH
34720: CALL 5144 0 5
// veh := CreateVehicle ;
34724: LD_ADDR_VAR 0 3
34728: PUSH
34729: CALL_OW 45
34733: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34734: LD_VAR 0 3
34738: PPUSH
34739: LD_INT 1
34741: PPUSH
34742: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34746: LD_VAR 0 3
34750: PPUSH
34751: LD_INT 25
34753: PPUSH
34754: LD_INT 0
34756: PPUSH
34757: CALL_OW 49
// defenders := defenders ^ veh ;
34761: LD_ADDR_EXP 17
34765: PUSH
34766: LD_EXP 17
34770: PUSH
34771: LD_VAR 0 3
34775: ADD
34776: ST_TO_ADDR
// end ;
34777: GO 34702
34779: POP
34780: POP
// end ; end ;
34781: PPOPN 3
34783: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
34784: LD_VAR 0 2
34788: PUSH
34789: LD_EXP 13
34793: EQUAL
34794: IFFALSE 34805
// RemoveUnit ( Powell ) ;
34796: LD_EXP 13
34800: PPUSH
34801: CALL_OW 64
// end ;
34805: PPOPN 2
34807: END
