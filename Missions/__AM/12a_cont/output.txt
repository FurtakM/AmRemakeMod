// starting begin ResetFog ;
   0: CALL_OW 335
// FogOff ( 7 ) ;
   4: LD_INT 7
   6: PPUSH
   7: CALL_OW 344
// InitVariables ;
  11: CALL 93 0 0
// PrepareNature ;
  15: CALL 29284 0 0
// PrepareAlliance ;
  19: CALL 163 0 0
// PrepareFriends ;
  23: CALL 2476 0 0
// PrepareAmerican ;
  27: CALL 490 0 0
// if debug then
  31: LD_EXP 1
  35: IFFALSE 76
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  37: LD_INT 1
  39: PPUSH
  40: LD_INT 7
  42: PPUSH
  43: LD_INT 2
  45: PPUSH
  46: LD_INT 1
  48: PPUSH
  49: CALL_OW 80
// RemoveUnit ( Powell ) ;
  53: LD_EXP 12
  57: PPUSH
  58: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  62: LD_INT 1
  64: PPUSH
  65: LD_EXP 10
  69: PPUSH
  70: CALL_OW 471
// end else
  74: GO 80
// Action ;
  76: CALL 29709 0 0
// PreparePatrol ;
  80: CALL 830 0 0
// game := true ;
  84: LD_ADDR_EXP 2
  88: PUSH
  89: LD_INT 1
  91: ST_TO_ADDR
// end ;
  92: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter ; export function InitVariables ; begin
  93: LD_INT 0
  95: PPUSH
// debug := 1 ;
  96: LD_ADDR_EXP 1
 100: PUSH
 101: LD_INT 1
 103: ST_TO_ADDR
// friends := [ ] ;
 104: LD_ADDR_EXP 4
 108: PUSH
 109: EMPTY
 110: ST_TO_ADDR
// selected := [ ] ;
 111: LD_ADDR_EXP 3
 115: PUSH
 116: EMPTY
 117: ST_TO_ADDR
// reached_lab := false ;
 118: LD_ADDR_EXP 6
 122: PUSH
 123: LD_INT 0
 125: ST_TO_ADDR
// can_escape := false ;
 126: LD_ADDR_EXP 7
 130: PUSH
 131: LD_INT 0
 133: ST_TO_ADDR
// game := false ;
 134: LD_ADDR_EXP 2
 138: PUSH
 139: LD_INT 0
 141: ST_TO_ADDR
// friends_kill_counter := 0 ;
 142: LD_ADDR_EXP 8
 146: PUSH
 147: LD_INT 0
 149: ST_TO_ADDR
// team_kill_counter := 0 ;
 150: LD_ADDR_EXP 9
 154: PUSH
 155: LD_INT 0
 157: ST_TO_ADDR
// end ; end_of_file
 158: LD_VAR 0 1
 162: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 163: LD_INT 0
 165: PPUSH
 166: PPUSH
// uc_side := 7 ;
 167: LD_ADDR_OWVAR 20
 171: PUSH
 172: LD_INT 7
 174: ST_TO_ADDR
// uc_nation := 1 ;
 175: LD_ADDR_OWVAR 21
 179: PUSH
 180: LD_INT 1
 182: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 183: LD_ADDR_EXP 10
 187: PUSH
 188: LD_STRING JMM
 190: PPUSH
 191: LD_EXP 1
 195: NOT
 196: PPUSH
 197: LD_STRING 11_
 199: PPUSH
 200: CALL 4770 0 3
 204: ST_TO_ADDR
// uc_side := 4 ;
 205: LD_ADDR_OWVAR 20
 209: PUSH
 210: LD_INT 4
 212: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 213: LD_ADDR_EXP 11
 217: PUSH
 218: LD_STRING Roth
 220: PPUSH
 221: CALL_OW 25
 225: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 226: LD_EXP 10
 230: PPUSH
 231: LD_INT 1
 233: PPUSH
 234: CALL_OW 233
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 238: LD_EXP 10
 242: PPUSH
 243: LD_INT 105
 245: PPUSH
 246: LD_INT 10
 248: PPUSH
 249: LD_INT 0
 251: PPUSH
 252: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 256: LD_EXP 11
 260: PPUSH
 261: LD_INT 4
 263: PPUSH
 264: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 268: LD_EXP 11
 272: PPUSH
 273: LD_INT 109
 275: PPUSH
 276: LD_INT 10
 278: PPUSH
 279: LD_INT 0
 281: PPUSH
 282: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 286: LD_EXP 10
 290: PPUSH
 291: LD_EXP 11
 295: PPUSH
 296: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 300: LD_EXP 11
 304: PPUSH
 305: LD_EXP 10
 309: PPUSH
 310: CALL_OW 119
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 314: LD_INT 2
 316: PPUSH
 317: LD_INT 3
 319: PPUSH
 320: LD_INT 3
 322: PPUSH
 323: LD_INT 12
 325: PPUSH
 326: LD_INT 100
 328: PPUSH
 329: CALL 4833 0 5
// cargo := CreateVehicle ;
 333: LD_ADDR_VAR 0 2
 337: PUSH
 338: CALL_OW 45
 342: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 343: LD_VAR 0 2
 347: PPUSH
 348: LD_INT 1
 350: PPUSH
 351: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 355: LD_VAR 0 2
 359: PPUSH
 360: LD_INT 179
 362: PPUSH
 363: LD_INT 45
 365: PPUSH
 366: LD_INT 0
 368: PPUSH
 369: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 373: LD_VAR 0 2
 377: PPUSH
 378: LD_INT 4
 380: PPUSH
 381: LD_INT 30
 383: PPUSH
 384: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , true ) then
 388: LD_STRING 11_artifact_captured
 390: PPUSH
 391: LD_INT 1
 393: PPUSH
 394: CALL_OW 30
 398: IFFALSE 455
// begin cargo := CreateVehicle ;
 400: LD_ADDR_VAR 0 2
 404: PUSH
 405: CALL_OW 45
 409: ST_TO_ADDR
// SetDir ( cargo , 2 ) ;
 410: LD_VAR 0 2
 414: PPUSH
 415: LD_INT 2
 417: PPUSH
 418: CALL_OW 233
// PlaceUnitXY ( cargo , 141 , 76 , false ) ;
 422: LD_VAR 0 2
 426: PPUSH
 427: LD_INT 141
 429: PPUSH
 430: LD_INT 76
 432: PPUSH
 433: LD_INT 0
 435: PPUSH
 436: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 440: LD_VAR 0 2
 444: PPUSH
 445: LD_INT 4
 447: PPUSH
 448: LD_INT 50
 450: PPUSH
 451: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 455: LD_INT 47
 457: PPUSH
 458: LD_INT 7
 460: PPUSH
 461: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 465: LD_INT 1
 467: PPUSH
 468: LD_INT 47
 470: PPUSH
 471: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 475: LD_INT 7
 477: PPUSH
 478: LD_INT 4
 480: PPUSH
 481: CALL_OW 343
// end ; end_of_file
 485: LD_VAR 0 1
 489: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon ; export function PrepareAmerican ; var i , j , b , un ; begin
 490: LD_INT 0
 492: PPUSH
 493: PPUSH
 494: PPUSH
 495: PPUSH
 496: PPUSH
// defcon := 0 ;
 497: LD_ADDR_EXP 17
 501: PUSH
 502: LD_INT 0
 504: ST_TO_ADDR
// defenders := [ ] ;
 505: LD_ADDR_EXP 16
 509: PUSH
 510: EMPTY
 511: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 512: LD_INT 5
 514: PPUSH
 515: LD_STRING alpha
 517: PPUSH
 518: CALL_OW 500
// uc_side := 1 ;
 522: LD_ADDR_OWVAR 20
 526: PUSH
 527: LD_INT 1
 529: ST_TO_ADDR
// uc_nation := 1 ;
 530: LD_ADDR_OWVAR 21
 534: PUSH
 535: LD_INT 1
 537: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 538: LD_ADDR_EXP 12
 542: PUSH
 543: LD_STRING Powell
 545: PPUSH
 546: CALL_OW 25
 550: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 551: LD_EXP 12
 555: PPUSH
 556: LD_INT 110
 558: PPUSH
 559: LD_INT 26
 561: PPUSH
 562: LD_INT 0
 564: PPUSH
 565: CALL_OW 48
// ComHold ( Powell ) ;
 569: LD_EXP 12
 573: PPUSH
 574: CALL_OW 140
// for i = 1 to 5 do
 578: LD_ADDR_VAR 0 2
 582: PUSH
 583: DOUBLE
 584: LD_INT 1
 586: DEC
 587: ST_TO_ADDR
 588: LD_INT 5
 590: PUSH
 591: FOR_TO
 592: IFFALSE 648
// begin PrepareHuman ( false , 1 , 10 ) ;
 594: LD_INT 0
 596: PPUSH
 597: LD_INT 1
 599: PPUSH
 600: LD_INT 10
 602: PPUSH
 603: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 607: LD_ADDR_EXP 15
 611: PUSH
 612: LD_EXP 15
 616: PPUSH
 617: LD_INT 1
 619: PPUSH
 620: CALL_OW 44
 624: PPUSH
 625: CALL_OW 2
 629: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 630: LD_EXP 15
 634: PUSH
 635: LD_INT 1
 637: ARRAY
 638: PPUSH
 639: LD_INT 18
 641: PPUSH
 642: CALL_OW 52
// end ;
 646: GO 591
 648: POP
 649: POP
// if Difficulty > 2 then
 650: LD_OWVAR 67
 654: PUSH
 655: LD_INT 2
 657: GREATER
 658: IFFALSE 707
// begin bc_type := b_turret ;
 660: LD_ADDR_OWVAR 42
 664: PUSH
 665: LD_INT 33
 667: ST_TO_ADDR
// bc_level := 7 ;
 668: LD_ADDR_OWVAR 43
 672: PUSH
 673: LD_INT 7
 675: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 676: LD_ADDR_VAR 0 4
 680: PUSH
 681: LD_INT 107
 683: PPUSH
 684: LD_INT 55
 686: PPUSH
 687: LD_INT 5
 689: PPUSH
 690: CALL_OW 47
 694: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 695: LD_VAR 0 4
 699: PPUSH
 700: LD_INT 7
 702: PPUSH
 703: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 707: LD_ADDR_VAR 0 2
 711: PUSH
 712: LD_INT 22
 714: PUSH
 715: LD_INT 1
 717: PUSH
 718: EMPTY
 719: LIST
 720: LIST
 721: PUSH
 722: LD_INT 30
 724: PUSH
 725: LD_INT 3
 727: PUSH
 728: EMPTY
 729: LIST
 730: LIST
 731: PUSH
 732: EMPTY
 733: LIST
 734: LIST
 735: PPUSH
 736: CALL_OW 69
 740: PUSH
 741: LD_INT 22
 743: PUSH
 744: LD_INT 1
 746: PUSH
 747: EMPTY
 748: LIST
 749: LIST
 750: PUSH
 751: LD_INT 30
 753: PUSH
 754: LD_INT 36
 756: PUSH
 757: EMPTY
 758: LIST
 759: LIST
 760: PUSH
 761: EMPTY
 762: LIST
 763: LIST
 764: PPUSH
 765: CALL_OW 69
 769: ADD
 770: PUSH
 771: FOR_IN
 772: IFFALSE 823
// for j = 1 to 3 do
 774: LD_ADDR_VAR 0 3
 778: PUSH
 779: DOUBLE
 780: LD_INT 1
 782: DEC
 783: ST_TO_ADDR
 784: LD_INT 3
 786: PUSH
 787: FOR_TO
 788: IFFALSE 819
// begin PrepareHuman ( false , 3 , 6 ) ;
 790: LD_INT 0
 792: PPUSH
 793: LD_INT 3
 795: PPUSH
 796: LD_INT 6
 798: PPUSH
 799: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 803: CALL_OW 44
 807: PPUSH
 808: LD_VAR 0 2
 812: PPUSH
 813: CALL_OW 52
// end ;
 817: GO 787
 819: POP
 820: POP
 821: GO 771
 823: POP
 824: POP
// end ;
 825: LD_VAR 0 1
 829: RET
// export function PreparePatrol ; var i , un ; begin
 830: LD_INT 0
 832: PPUSH
 833: PPUSH
 834: PPUSH
// uc_side := 1 ;
 835: LD_ADDR_OWVAR 20
 839: PUSH
 840: LD_INT 1
 842: ST_TO_ADDR
// uc_nation := 1 ;
 843: LD_ADDR_OWVAR 21
 847: PUSH
 848: LD_INT 1
 850: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 851: LD_ADDR_EXP 14
 855: PUSH
 856: LD_INT 99
 858: PUSH
 859: LD_INT 55
 861: PUSH
 862: EMPTY
 863: LIST
 864: LIST
 865: PUSH
 866: LD_INT 113
 868: PUSH
 869: LD_INT 67
 871: PUSH
 872: EMPTY
 873: LIST
 874: LIST
 875: PUSH
 876: LD_INT 129
 878: PUSH
 879: LD_INT 68
 881: PUSH
 882: EMPTY
 883: LIST
 884: LIST
 885: PUSH
 886: LD_INT 135
 888: PUSH
 889: LD_INT 62
 891: PUSH
 892: EMPTY
 893: LIST
 894: LIST
 895: PUSH
 896: LD_INT 103
 898: PUSH
 899: LD_INT 41
 901: PUSH
 902: EMPTY
 903: LIST
 904: LIST
 905: PUSH
 906: EMPTY
 907: LIST
 908: LIST
 909: LIST
 910: LIST
 911: LIST
 912: PUSH
 913: LD_INT 27
 915: PUSH
 916: LD_INT 49
 918: PUSH
 919: EMPTY
 920: LIST
 921: LIST
 922: PUSH
 923: LD_INT 46
 925: PUSH
 926: LD_INT 49
 928: PUSH
 929: EMPTY
 930: LIST
 931: LIST
 932: PUSH
 933: LD_INT 87
 935: PUSH
 936: LD_INT 70
 938: PUSH
 939: EMPTY
 940: LIST
 941: LIST
 942: PUSH
 943: LD_INT 99
 945: PUSH
 946: LD_INT 79
 948: PUSH
 949: EMPTY
 950: LIST
 951: LIST
 952: PUSH
 953: LD_INT 118
 955: PUSH
 956: LD_INT 111
 958: PUSH
 959: EMPTY
 960: LIST
 961: LIST
 962: PUSH
 963: LD_INT 99
 965: PUSH
 966: LD_INT 79
 968: PUSH
 969: EMPTY
 970: LIST
 971: LIST
 972: PUSH
 973: LD_INT 87
 975: PUSH
 976: LD_INT 70
 978: PUSH
 979: EMPTY
 980: LIST
 981: LIST
 982: PUSH
 983: LD_INT 46
 985: PUSH
 986: LD_INT 49
 988: PUSH
 989: EMPTY
 990: LIST
 991: LIST
 992: PUSH
 993: EMPTY
 994: LIST
 995: LIST
 996: LIST
 997: LIST
 998: LIST
 999: LIST
1000: LIST
1001: LIST
1002: PUSH
1003: LD_INT 200
1005: PUSH
1006: LD_INT 88
1008: PUSH
1009: EMPTY
1010: LIST
1011: LIST
1012: PUSH
1013: LD_INT 175
1015: PUSH
1016: LD_INT 80
1018: PUSH
1019: EMPTY
1020: LIST
1021: LIST
1022: PUSH
1023: LD_INT 135
1025: PUSH
1026: LD_INT 62
1028: PUSH
1029: EMPTY
1030: LIST
1031: LIST
1032: PUSH
1033: LD_INT 117
1035: PUSH
1036: LD_INT 53
1038: PUSH
1039: EMPTY
1040: LIST
1041: LIST
1042: PUSH
1043: LD_INT 103
1045: PUSH
1046: LD_INT 41
1048: PUSH
1049: EMPTY
1050: LIST
1051: LIST
1052: PUSH
1053: LD_INT 99
1055: PUSH
1056: LD_INT 24
1058: PUSH
1059: EMPTY
1060: LIST
1061: LIST
1062: PUSH
1063: LD_INT 85
1065: PUSH
1066: LD_INT 3
1068: PUSH
1069: EMPTY
1070: LIST
1071: LIST
1072: PUSH
1073: LD_INT 99
1075: PUSH
1076: LD_INT 24
1078: PUSH
1079: EMPTY
1080: LIST
1081: LIST
1082: PUSH
1083: LD_INT 103
1085: PUSH
1086: LD_INT 41
1088: PUSH
1089: EMPTY
1090: LIST
1091: LIST
1092: PUSH
1093: LD_INT 98
1095: PUSH
1096: LD_INT 47
1098: PUSH
1099: EMPTY
1100: LIST
1101: LIST
1102: PUSH
1103: LD_INT 99
1105: PUSH
1106: LD_INT 56
1108: PUSH
1109: EMPTY
1110: LIST
1111: LIST
1112: PUSH
1113: LD_INT 96
1115: PUSH
1116: LD_INT 66
1118: PUSH
1119: EMPTY
1120: LIST
1121: LIST
1122: PUSH
1123: LD_INT 99
1125: PUSH
1126: LD_INT 56
1128: PUSH
1129: EMPTY
1130: LIST
1131: LIST
1132: PUSH
1133: LD_INT 112
1135: PUSH
1136: LD_INT 66
1138: PUSH
1139: EMPTY
1140: LIST
1141: LIST
1142: PUSH
1143: LD_INT 129
1145: PUSH
1146: LD_INT 68
1148: PUSH
1149: EMPTY
1150: LIST
1151: LIST
1152: PUSH
1153: LD_INT 135
1155: PUSH
1156: LD_INT 62
1158: PUSH
1159: EMPTY
1160: LIST
1161: LIST
1162: PUSH
1163: LD_INT 156
1165: PUSH
1166: LD_INT 71
1168: PUSH
1169: EMPTY
1170: LIST
1171: LIST
1172: PUSH
1173: LD_INT 168
1175: PUSH
1176: LD_INT 76
1178: PUSH
1179: EMPTY
1180: LIST
1181: LIST
1182: PUSH
1183: LD_INT 168
1185: PUSH
1186: LD_INT 61
1188: PUSH
1189: EMPTY
1190: LIST
1191: LIST
1192: PUSH
1193: LD_INT 168
1195: PUSH
1196: LD_INT 75
1198: PUSH
1199: EMPTY
1200: LIST
1201: LIST
1202: PUSH
1203: LD_INT 185
1205: PUSH
1206: LD_INT 85
1208: PUSH
1209: EMPTY
1210: LIST
1211: LIST
1212: PUSH
1213: EMPTY
1214: LIST
1215: LIST
1216: LIST
1217: LIST
1218: LIST
1219: LIST
1220: LIST
1221: LIST
1222: LIST
1223: LIST
1224: LIST
1225: LIST
1226: LIST
1227: LIST
1228: LIST
1229: LIST
1230: LIST
1231: LIST
1232: LIST
1233: LIST
1234: LIST
1235: PUSH
1236: EMPTY
1237: LIST
1238: LIST
1239: LIST
1240: ST_TO_ADDR
// mobile_patrol := [ ] ;
1241: LD_ADDR_EXP 13
1245: PUSH
1246: EMPTY
1247: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1248: LD_INT 3
1250: PPUSH
1251: LD_INT 1
1253: PPUSH
1254: LD_INT 3
1256: PPUSH
1257: LD_INT 4
1259: PPUSH
1260: LD_INT 100
1262: PPUSH
1263: CALL 4833 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1267: LD_ADDR_EXP 13
1271: PUSH
1272: LD_EXP 13
1276: PPUSH
1277: LD_INT 1
1279: PPUSH
1280: CALL_OW 45
1284: PPUSH
1285: CALL_OW 2
1289: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1290: LD_EXP 13
1294: PUSH
1295: LD_INT 1
1297: ARRAY
1298: PPUSH
1299: LD_INT 99
1301: PPUSH
1302: LD_INT 55
1304: PPUSH
1305: LD_INT 0
1307: PPUSH
1308: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1312: LD_INT 2
1314: PPUSH
1315: LD_INT 1
1317: PPUSH
1318: LD_INT 3
1320: PPUSH
1321: LD_INT 4
1323: PPUSH
1324: LD_INT 100
1326: PPUSH
1327: CALL 4833 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1331: LD_ADDR_EXP 13
1335: PUSH
1336: LD_EXP 13
1340: PPUSH
1341: LD_INT 2
1343: PPUSH
1344: CALL_OW 45
1348: PPUSH
1349: CALL_OW 2
1353: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1354: LD_EXP 13
1358: PUSH
1359: LD_INT 2
1361: ARRAY
1362: PPUSH
1363: LD_INT 27
1365: PPUSH
1366: LD_INT 49
1368: PPUSH
1369: LD_INT 0
1371: PPUSH
1372: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1376: LD_INT 3
1378: PPUSH
1379: LD_INT 1
1381: PPUSH
1382: LD_INT 3
1384: PPUSH
1385: LD_INT 7
1387: PPUSH
1388: LD_INT 100
1390: PPUSH
1391: CALL 4833 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1395: LD_ADDR_EXP 13
1399: PUSH
1400: LD_EXP 13
1404: PPUSH
1405: LD_INT 3
1407: PPUSH
1408: CALL_OW 45
1412: PPUSH
1413: CALL_OW 2
1417: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1418: LD_EXP 13
1422: PUSH
1423: LD_INT 3
1425: ARRAY
1426: PPUSH
1427: LD_INT 200
1429: PPUSH
1430: LD_INT 88
1432: PPUSH
1433: LD_INT 0
1435: PPUSH
1436: CALL_OW 48
// for i = mobile_patrol downto 1 do
1440: LD_ADDR_VAR 0 2
1444: PUSH
1445: DOUBLE
1446: LD_EXP 13
1450: INC
1451: ST_TO_ADDR
1452: LD_INT 1
1454: PUSH
1455: FOR_DOWNTO
1456: IFFALSE 1467
// RaiseSailEvent ( 1 ) ;
1458: LD_INT 1
1460: PPUSH
1461: CALL_OW 427
1465: GO 1455
1467: POP
1468: POP
// end ;
1469: LD_VAR 0 1
1473: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1474: LD_INT 0
1476: PPUSH
1477: PPUSH
1478: PPUSH
1479: PPUSH
1480: PPUSH
1481: PPUSH
1482: PPUSH
1483: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1484: LD_ADDR_VAR 0 5
1488: PUSH
1489: LD_INT 20
1491: PUSH
1492: LD_INT 4
1494: PUSH
1495: EMPTY
1496: LIST
1497: LIST
1498: PUSH
1499: LD_INT 21
1501: PUSH
1502: LD_INT 5
1504: PUSH
1505: EMPTY
1506: LIST
1507: LIST
1508: PUSH
1509: LD_INT 22
1511: PUSH
1512: LD_INT 1
1514: PUSH
1515: EMPTY
1516: LIST
1517: LIST
1518: PUSH
1519: EMPTY
1520: LIST
1521: LIST
1522: LIST
1523: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1524: LD_ADDR_VAR 0 6
1528: PUSH
1529: LD_INT 176
1531: PUSH
1532: LD_INT 81
1534: PUSH
1535: LD_INT 135
1537: PUSH
1538: LD_INT 62
1540: PUSH
1541: LD_INT 114
1543: PUSH
1544: LD_INT 67
1546: PUSH
1547: LD_INT 93
1549: PUSH
1550: LD_INT 71
1552: PUSH
1553: LD_INT 76
1555: PUSH
1556: LD_INT 67
1558: PUSH
1559: EMPTY
1560: LIST
1561: LIST
1562: LIST
1563: LIST
1564: LIST
1565: LIST
1566: LIST
1567: LIST
1568: LIST
1569: LIST
1570: PUSH
1571: LD_INT 107
1573: PUSH
1574: LD_INT 92
1576: PUSH
1577: LD_INT 92
1579: PUSH
1580: LD_INT 72
1582: PUSH
1583: LD_INT 77
1585: PUSH
1586: LD_INT 68
1588: PUSH
1589: EMPTY
1590: LIST
1591: LIST
1592: LIST
1593: LIST
1594: LIST
1595: LIST
1596: PUSH
1597: LD_INT 45
1599: PUSH
1600: LD_INT 49
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 59
1608: PUSH
1609: LD_INT 77
1611: PUSH
1612: LD_INT 68
1614: PUSH
1615: EMPTY
1616: LIST
1617: LIST
1618: LIST
1619: LIST
1620: LIST
1621: LIST
1622: PUSH
1623: EMPTY
1624: LIST
1625: LIST
1626: LIST
1627: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1628: LD_ADDR_VAR 0 4
1632: PUSH
1633: LD_INT 1
1635: PPUSH
1636: LD_VAR 0 5
1640: PPUSH
1641: CALL_OW 12
1645: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1646: LD_ADDR_VAR 0 3
1650: PUSH
1651: LD_INT 1
1653: PPUSH
1654: LD_INT 2
1656: PPUSH
1657: CALL_OW 12
1661: ST_TO_ADDR
// uc_side := 1 ;
1662: LD_ADDR_OWVAR 20
1666: PUSH
1667: LD_INT 1
1669: ST_TO_ADDR
// uc_nation := 1 ;
1670: LD_ADDR_OWVAR 21
1674: PUSH
1675: LD_INT 1
1677: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1678: LD_INT 2
1680: PPUSH
1681: LD_INT 3
1683: PPUSH
1684: LD_INT 3
1686: PPUSH
1687: LD_INT 12
1689: PPUSH
1690: LD_INT 100
1692: PPUSH
1693: CALL 4833 0 5
// veh := CreateVehicle ;
1697: LD_ADDR_VAR 0 8
1701: PUSH
1702: CALL_OW 45
1706: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1707: LD_VAR 0 8
1711: PPUSH
1712: LD_VAR 0 5
1716: PUSH
1717: LD_VAR 0 4
1721: ARRAY
1722: PUSH
1723: LD_INT 2
1725: ARRAY
1726: PPUSH
1727: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1731: LD_VAR 0 8
1735: PPUSH
1736: LD_VAR 0 5
1740: PUSH
1741: LD_VAR 0 4
1745: ARRAY
1746: PUSH
1747: LD_INT 1
1749: ARRAY
1750: PPUSH
1751: LD_INT 0
1753: PPUSH
1754: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1758: LD_VAR 0 8
1762: PPUSH
1763: LD_INT 1
1765: PUSH
1766: LD_INT 3
1768: PUSH
1769: EMPTY
1770: LIST
1771: LIST
1772: PUSH
1773: LD_VAR 0 3
1777: ARRAY
1778: PPUSH
1779: LD_INT 100
1781: PPUSH
1782: CALL_OW 290
// tmp := road [ k ] ;
1786: LD_ADDR_VAR 0 7
1790: PUSH
1791: LD_VAR 0 6
1795: PUSH
1796: LD_VAR 0 4
1800: ARRAY
1801: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1802: LD_ADDR_VAR 0 2
1806: PUSH
1807: DOUBLE
1808: LD_INT 1
1810: DEC
1811: ST_TO_ADDR
1812: LD_VAR 0 7
1816: PUSH
1817: LD_INT 2
1819: DIV
1820: PUSH
1821: FOR_TO
1822: IFFALSE 1869
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1824: LD_VAR 0 8
1828: PPUSH
1829: LD_VAR 0 7
1833: PUSH
1834: LD_VAR 0 2
1838: PUSH
1839: LD_INT 2
1841: MUL
1842: PUSH
1843: LD_INT 1
1845: MINUS
1846: ARRAY
1847: PPUSH
1848: LD_VAR 0 7
1852: PUSH
1853: LD_VAR 0 2
1857: PUSH
1858: LD_INT 2
1860: MUL
1861: ARRAY
1862: PPUSH
1863: CALL_OW 171
1867: GO 1821
1869: POP
1870: POP
// AddComGive ( veh , alfa ) ;
1871: LD_VAR 0 8
1875: PPUSH
1876: LD_INT 5
1878: PPUSH
1879: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_INT 70
1890: PPUSH
1891: CALL_OW 202
// for i = tmp div 2 downto 1 do
1895: LD_ADDR_VAR 0 2
1899: PUSH
1900: DOUBLE
1901: LD_VAR 0 7
1905: PUSH
1906: LD_INT 2
1908: DIV
1909: INC
1910: ST_TO_ADDR
1911: LD_INT 1
1913: PUSH
1914: FOR_DOWNTO
1915: IFFALSE 1962
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1917: LD_VAR 0 8
1921: PPUSH
1922: LD_VAR 0 7
1926: PUSH
1927: LD_VAR 0 2
1931: PUSH
1932: LD_INT 2
1934: MUL
1935: PUSH
1936: LD_INT 1
1938: MINUS
1939: ARRAY
1940: PPUSH
1941: LD_VAR 0 7
1945: PUSH
1946: LD_VAR 0 2
1950: PUSH
1951: LD_INT 2
1953: MUL
1954: ARRAY
1955: PPUSH
1956: CALL_OW 171
1960: GO 1914
1962: POP
1963: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
1964: LD_VAR 0 8
1968: PPUSH
1969: LD_VAR 0 5
1973: PUSH
1974: LD_VAR 0 4
1978: ARRAY
1979: PUSH
1980: LD_INT 1
1982: ARRAY
1983: PPUSH
1984: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
1988: LD_INT 35
1990: PPUSH
1991: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
1995: LD_VAR 0 8
1999: PPUSH
2000: LD_VAR 0 5
2004: PUSH
2005: LD_VAR 0 4
2009: ARRAY
2010: PUSH
2011: LD_INT 1
2013: ARRAY
2014: PPUSH
2015: CALL_OW 308
2019: PUSH
2020: LD_VAR 0 8
2024: PPUSH
2025: LD_VAR 0 3
2029: PPUSH
2030: CALL_OW 289
2034: PUSH
2035: LD_INT 0
2037: EQUAL
2038: AND
2039: IFFALSE 1988
// RemoveUnit ( veh ) ;
2041: LD_VAR 0 8
2045: PPUSH
2046: CALL_OW 64
// end ;
2050: LD_VAR 0 1
2054: RET
// every 3 3$00 do
2055: GO 2057
2057: DISABLE
// begin enable ;
2058: ENABLE
// SpawnCargo ;
2059: CALL 1474 0 0
// end ;
2063: END
// export function PrepareDefenders ; var i , tmp ; begin
2064: LD_INT 0
2066: PPUSH
2067: PPUSH
2068: PPUSH
// if defenders then
2069: LD_EXP 16
2073: IFFALSE 2077
// exit ;
2075: GO 2341
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2077: LD_ADDR_VAR 0 2
2081: PUSH
2082: DOUBLE
2083: LD_INT 1
2085: DEC
2086: ST_TO_ADDR
2087: LD_INT 4
2089: PUSH
2090: LD_INT 5
2092: PUSH
2093: LD_INT 6
2095: PUSH
2096: EMPTY
2097: LIST
2098: LIST
2099: LIST
2100: PUSH
2101: LD_OWVAR 67
2105: ARRAY
2106: PUSH
2107: FOR_TO
2108: IFFALSE 2247
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2110: LD_ADDR_VAR 0 3
2114: PUSH
2115: LD_INT 6
2117: PPUSH
2118: LD_INT 2
2120: PUSH
2121: LD_INT 3
2123: PUSH
2124: EMPTY
2125: LIST
2126: LIST
2127: PUSH
2128: LD_INT 1
2130: PPUSH
2131: LD_INT 2
2133: PPUSH
2134: CALL_OW 12
2138: ARRAY
2139: PPUSH
2140: LD_INT 1
2142: PUSH
2143: LD_INT 3
2145: PUSH
2146: EMPTY
2147: LIST
2148: LIST
2149: PUSH
2150: LD_INT 1
2152: PPUSH
2153: LD_INT 2
2155: PPUSH
2156: CALL_OW 12
2160: ARRAY
2161: PPUSH
2162: LD_INT 2
2164: PPUSH
2165: LD_INT 4
2167: PUSH
2168: LD_INT 5
2170: PUSH
2171: LD_INT 9
2173: PUSH
2174: EMPTY
2175: LIST
2176: LIST
2177: LIST
2178: PUSH
2179: LD_INT 1
2181: PPUSH
2182: LD_INT 3
2184: PPUSH
2185: CALL_OW 12
2189: ARRAY
2190: PPUSH
2191: CALL 27466 0 5
2195: ST_TO_ADDR
// if tmp then
2196: LD_VAR 0 3
2200: IFFALSE 2245
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2202: LD_INT 6
2204: PPUSH
2205: LD_VAR 0 3
2209: PUSH
2210: LD_INT 1
2212: ARRAY
2213: PPUSH
2214: LD_VAR 0 3
2218: PUSH
2219: LD_INT 2
2221: ARRAY
2222: PPUSH
2223: LD_VAR 0 3
2227: PUSH
2228: LD_INT 3
2230: ARRAY
2231: PPUSH
2232: LD_VAR 0 3
2236: PUSH
2237: LD_INT 4
2239: ARRAY
2240: PPUSH
2241: CALL_OW 185
// end ;
2245: GO 2107
2247: POP
2248: POP
// repeat wait ( 0 0$1 ) ;
2249: LD_INT 35
2251: PPUSH
2252: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2256: LD_INT 22
2258: PUSH
2259: LD_INT 1
2261: PUSH
2262: EMPTY
2263: LIST
2264: LIST
2265: PUSH
2266: LD_INT 33
2268: PUSH
2269: LD_INT 2
2271: PUSH
2272: EMPTY
2273: LIST
2274: LIST
2275: PUSH
2276: EMPTY
2277: LIST
2278: LIST
2279: PPUSH
2280: CALL_OW 69
2284: PUSH
2285: LD_INT 4
2287: PUSH
2288: LD_INT 5
2290: PUSH
2291: LD_INT 6
2293: PUSH
2294: EMPTY
2295: LIST
2296: LIST
2297: LIST
2298: PUSH
2299: LD_OWVAR 67
2303: ARRAY
2304: GREATEREQUAL
2305: IFFALSE 2249
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2307: LD_ADDR_EXP 16
2311: PUSH
2312: LD_INT 22
2314: PUSH
2315: LD_INT 1
2317: PUSH
2318: EMPTY
2319: LIST
2320: LIST
2321: PUSH
2322: LD_INT 33
2324: PUSH
2325: LD_INT 2
2327: PUSH
2328: EMPTY
2329: LIST
2330: LIST
2331: PUSH
2332: EMPTY
2333: LIST
2334: LIST
2335: PPUSH
2336: CALL_OW 69
2340: ST_TO_ADDR
// end ;
2341: LD_VAR 0 1
2345: RET
// export function Defend ; var i , tmp ; begin
2346: LD_INT 0
2348: PPUSH
2349: PPUSH
2350: PPUSH
// if not defenders then
2351: LD_EXP 16
2355: NOT
2356: IFFALSE 2362
// PrepareDefenders ;
2358: CALL 2064 0 0
// repeat wait ( 0 0$1 ) ;
2362: LD_INT 35
2364: PPUSH
2365: CALL_OW 67
// for i in defenders do
2369: LD_ADDR_VAR 0 2
2373: PUSH
2374: LD_EXP 16
2378: PUSH
2379: FOR_IN
2380: IFFALSE 2462
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2382: LD_EXP 17
2386: PUSH
2387: LD_VAR 0 2
2391: PPUSH
2392: LD_EXP 17
2396: PUSH
2397: LD_INT 1
2399: ARRAY
2400: PPUSH
2401: LD_EXP 17
2405: PUSH
2406: LD_INT 2
2408: ARRAY
2409: PPUSH
2410: CALL_OW 297
2414: PUSH
2415: LD_INT 10
2417: GREATER
2418: AND
2419: PUSH
2420: LD_VAR 0 2
2424: PPUSH
2425: CALL_OW 314
2429: NOT
2430: AND
2431: IFFALSE 2460
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2433: LD_VAR 0 2
2437: PPUSH
2438: LD_EXP 17
2442: PUSH
2443: LD_INT 1
2445: ARRAY
2446: PPUSH
2447: LD_EXP 17
2451: PUSH
2452: LD_INT 2
2454: ARRAY
2455: PPUSH
2456: CALL_OW 114
// end ;
2460: GO 2379
2462: POP
2463: POP
// until not defenders ;
2464: LD_EXP 16
2468: NOT
2469: IFFALSE 2362
// end ; end_of_file
2471: LD_VAR 0 1
2475: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2476: LD_INT 0
2478: PPUSH
2479: PPUSH
2480: PPUSH
2481: PPUSH
2482: PPUSH
2483: PPUSH
2484: PPUSH
// uc_side := 4 ;
2485: LD_ADDR_OWVAR 20
2489: PUSH
2490: LD_INT 4
2492: ST_TO_ADDR
// uc_nation := 1 ;
2493: LD_ADDR_OWVAR 21
2497: PUSH
2498: LD_INT 1
2500: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2501: LD_ADDR_EXP 32
2505: PUSH
2506: LD_STRING DeltaDoctor
2508: PPUSH
2509: LD_EXP 1
2513: NOT
2514: PPUSH
2515: LD_STRING 10c_
2517: PPUSH
2518: CALL 4770 0 3
2522: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2523: LD_ADDR_EXP 31
2527: PUSH
2528: LD_STRING Joan
2530: PPUSH
2531: LD_EXP 1
2535: NOT
2536: PPUSH
2537: LD_STRING 10c_
2539: PPUSH
2540: CALL 4770 0 3
2544: ST_TO_ADDR
// if Joan then
2545: LD_EXP 31
2549: IFFALSE 2580
// friends := Insert ( friends , friends + 1 , Joan ) ;
2551: LD_ADDR_EXP 4
2555: PUSH
2556: LD_EXP 4
2560: PPUSH
2561: LD_EXP 4
2565: PUSH
2566: LD_INT 1
2568: PLUS
2569: PPUSH
2570: LD_EXP 31
2574: PPUSH
2575: CALL_OW 2
2579: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2580: LD_ADDR_EXP 30
2584: PUSH
2585: LD_STRING Simms
2587: PPUSH
2588: LD_EXP 1
2592: NOT
2593: PPUSH
2594: LD_STRING 10c_
2596: PPUSH
2597: CALL 4770 0 3
2601: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2602: LD_ADDR_EXP 29
2606: PUSH
2607: LD_STRING Kikuchi
2609: PPUSH
2610: LD_EXP 1
2614: NOT
2615: PPUSH
2616: LD_STRING 11_
2618: PPUSH
2619: CALL 4770 0 3
2623: ST_TO_ADDR
// if Kikuchi then
2624: LD_EXP 29
2628: IFFALSE 2659
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2630: LD_ADDR_EXP 4
2634: PUSH
2635: LD_EXP 4
2639: PPUSH
2640: LD_EXP 4
2644: PUSH
2645: LD_INT 1
2647: PLUS
2648: PPUSH
2649: LD_EXP 29
2653: PPUSH
2654: CALL_OW 2
2658: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2659: LD_ADDR_EXP 28
2663: PUSH
2664: LD_STRING Frank
2666: PPUSH
2667: LD_EXP 1
2671: NOT
2672: PPUSH
2673: LD_STRING 11_
2675: PPUSH
2676: CALL 4770 0 3
2680: ST_TO_ADDR
// if Frank then
2681: LD_EXP 28
2685: IFFALSE 2716
// friends := Insert ( friends , friends + 1 , Frank ) ;
2687: LD_ADDR_EXP 4
2691: PUSH
2692: LD_EXP 4
2696: PPUSH
2697: LD_EXP 4
2701: PUSH
2702: LD_INT 1
2704: PLUS
2705: PPUSH
2706: LD_EXP 28
2710: PPUSH
2711: CALL_OW 2
2715: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
2716: LD_ADDR_EXP 27
2720: PUSH
2721: LD_STRING Gary
2723: PPUSH
2724: LD_EXP 1
2728: NOT
2729: PPUSH
2730: LD_STRING 11_
2732: PPUSH
2733: CALL 4770 0 3
2737: ST_TO_ADDR
// if Gary then
2738: LD_EXP 27
2742: IFFALSE 2773
// friends := Insert ( friends , friends + 1 , Gary ) ;
2744: LD_ADDR_EXP 4
2748: PUSH
2749: LD_EXP 4
2753: PPUSH
2754: LD_EXP 4
2758: PUSH
2759: LD_INT 1
2761: PLUS
2762: PPUSH
2763: LD_EXP 27
2767: PPUSH
2768: CALL_OW 2
2772: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
2773: LD_ADDR_EXP 26
2777: PUSH
2778: LD_STRING Cornel
2780: PPUSH
2781: LD_EXP 1
2785: NOT
2786: PPUSH
2787: LD_STRING 11_
2789: PPUSH
2790: CALL 4770 0 3
2794: ST_TO_ADDR
// if Cornel then
2795: LD_EXP 26
2799: IFFALSE 2830
// friends := Insert ( friends , friends + 1 , Cornel ) ;
2801: LD_ADDR_EXP 4
2805: PUSH
2806: LD_EXP 4
2810: PPUSH
2811: LD_EXP 4
2815: PUSH
2816: LD_INT 1
2818: PLUS
2819: PPUSH
2820: LD_EXP 26
2824: PPUSH
2825: CALL_OW 2
2829: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
2830: LD_ADDR_EXP 25
2834: PUSH
2835: LD_STRING Houten
2837: PPUSH
2838: LD_EXP 1
2842: NOT
2843: PPUSH
2844: LD_STRING 11_
2846: PPUSH
2847: CALL 4770 0 3
2851: ST_TO_ADDR
// if Houten then
2852: LD_EXP 25
2856: IFFALSE 2887
// friends := Insert ( friends , friends + 1 , Houten ) ;
2858: LD_ADDR_EXP 4
2862: PUSH
2863: LD_EXP 4
2867: PPUSH
2868: LD_EXP 4
2872: PUSH
2873: LD_INT 1
2875: PLUS
2876: PPUSH
2877: LD_EXP 25
2881: PPUSH
2882: CALL_OW 2
2886: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
2887: LD_ADDR_EXP 24
2891: PUSH
2892: LD_STRING Gladstone
2894: PPUSH
2895: LD_EXP 1
2899: NOT
2900: PPUSH
2901: LD_STRING 11_
2903: PPUSH
2904: CALL 4770 0 3
2908: ST_TO_ADDR
// if Gladstone then
2909: LD_EXP 24
2913: IFFALSE 2944
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
2915: LD_ADDR_EXP 4
2919: PUSH
2920: LD_EXP 4
2924: PPUSH
2925: LD_EXP 4
2929: PUSH
2930: LD_INT 1
2932: PLUS
2933: PPUSH
2934: LD_EXP 24
2938: PPUSH
2939: CALL_OW 2
2943: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
2944: LD_ADDR_EXP 18
2948: PUSH
2949: LD_STRING Lisa
2951: PPUSH
2952: LD_EXP 1
2956: NOT
2957: PPUSH
2958: LD_STRING 11_
2960: PPUSH
2961: CALL 4770 0 3
2965: ST_TO_ADDR
// if Lisa then
2966: LD_EXP 18
2970: IFFALSE 2995
// friends := Insert ( friends , 1 , Lisa ) ;
2972: LD_ADDR_EXP 4
2976: PUSH
2977: LD_EXP 4
2981: PPUSH
2982: LD_INT 1
2984: PPUSH
2985: LD_EXP 18
2989: PPUSH
2990: CALL_OW 2
2994: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
2995: LD_ADDR_EXP 19
2999: PUSH
3000: LD_STRING Donaldson
3002: PPUSH
3003: LD_EXP 1
3007: NOT
3008: PPUSH
3009: LD_STRING 11_
3011: PPUSH
3012: CALL 4770 0 3
3016: ST_TO_ADDR
// if Donaldson then
3017: LD_EXP 19
3021: IFFALSE 3052
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3023: LD_ADDR_EXP 4
3027: PUSH
3028: LD_EXP 4
3032: PPUSH
3033: LD_EXP 4
3037: PUSH
3038: LD_INT 1
3040: PLUS
3041: PPUSH
3042: LD_EXP 19
3046: PPUSH
3047: CALL_OW 2
3051: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3052: LD_ADDR_EXP 20
3056: PUSH
3057: LD_STRING Bobby
3059: PPUSH
3060: LD_EXP 1
3064: NOT
3065: PPUSH
3066: LD_STRING 11_
3068: PPUSH
3069: CALL 4770 0 3
3073: ST_TO_ADDR
// if Bobby then
3074: LD_EXP 20
3078: IFFALSE 3109
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3080: LD_ADDR_EXP 4
3084: PUSH
3085: LD_EXP 4
3089: PPUSH
3090: LD_EXP 4
3094: PUSH
3095: LD_INT 1
3097: PLUS
3098: PPUSH
3099: LD_EXP 20
3103: PPUSH
3104: CALL_OW 2
3108: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3109: LD_ADDR_EXP 21
3113: PUSH
3114: LD_STRING Cyrus
3116: PPUSH
3117: LD_EXP 1
3121: NOT
3122: PPUSH
3123: LD_STRING 11_
3125: PPUSH
3126: CALL 4770 0 3
3130: ST_TO_ADDR
// if Cyrus then
3131: LD_EXP 21
3135: IFFALSE 3166
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3137: LD_ADDR_EXP 4
3141: PUSH
3142: LD_EXP 4
3146: PPUSH
3147: LD_EXP 4
3151: PUSH
3152: LD_INT 1
3154: PLUS
3155: PPUSH
3156: LD_EXP 21
3160: PPUSH
3161: CALL_OW 2
3165: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3166: LD_ADDR_EXP 22
3170: PUSH
3171: LD_STRING Denis
3173: PPUSH
3174: LD_EXP 1
3178: NOT
3179: PPUSH
3180: LD_STRING 11_
3182: PPUSH
3183: CALL 4770 0 3
3187: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3188: LD_ADDR_EXP 23
3192: PUSH
3193: LD_STRING Brown
3195: PPUSH
3196: LD_EXP 1
3200: NOT
3201: PPUSH
3202: LD_STRING 11_
3204: PPUSH
3205: CALL 4770 0 3
3209: ST_TO_ADDR
// if Brown then
3210: LD_EXP 23
3214: IFFALSE 3245
// friends := Insert ( friends , friends + 1 , Brown ) ;
3216: LD_ADDR_EXP 4
3220: PUSH
3221: LD_EXP 4
3225: PPUSH
3226: LD_EXP 4
3230: PUSH
3231: LD_INT 1
3233: PLUS
3234: PPUSH
3235: LD_EXP 23
3239: PPUSH
3240: CALL_OW 2
3244: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ;
3245: LD_ADDR_EXP 4
3249: PUSH
3250: LD_EXP 4
3254: PUSH
3255: LD_STRING 11c_others
3257: PPUSH
3258: CALL_OW 31
3262: ADD
3263: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11_others ) ;
3264: LD_ADDR_EXP 4
3268: PUSH
3269: LD_EXP 4
3273: PUSH
3274: LD_STRING 11_others
3276: PPUSH
3277: CALL_OW 31
3281: ADD
3282: ST_TO_ADDR
// if friends < 10 then
3283: LD_EXP 4
3287: PUSH
3288: LD_INT 10
3290: LESS
3291: IFFALSE 3363
// for i = 1 to 10 do
3293: LD_ADDR_VAR 0 2
3297: PUSH
3298: DOUBLE
3299: LD_INT 1
3301: DEC
3302: ST_TO_ADDR
3303: LD_INT 10
3305: PUSH
3306: FOR_TO
3307: IFFALSE 3361
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3309: LD_INT 0
3311: PPUSH
3312: LD_INT 1
3314: PPUSH
3315: LD_INT 4
3317: PPUSH
3318: CALL_OW 12
3322: PPUSH
3323: LD_INT 7
3325: PPUSH
3326: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3330: LD_ADDR_EXP 4
3334: PUSH
3335: LD_EXP 4
3339: PPUSH
3340: LD_EXP 4
3344: PUSH
3345: LD_INT 1
3347: PLUS
3348: PPUSH
3349: CALL_OW 44
3353: PPUSH
3354: CALL_OW 2
3358: ST_TO_ADDR
// end ;
3359: GO 3306
3361: POP
3362: POP
// for i in friends do
3363: LD_ADDR_VAR 0 2
3367: PUSH
3368: LD_EXP 4
3372: PUSH
3373: FOR_IN
3374: IFFALSE 3432
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3376: LD_VAR 0 2
3380: PPUSH
3381: LD_INT 1
3383: PPUSH
3384: CALL_OW 259
3388: PUSH
3389: LD_VAR 0 2
3393: PPUSH
3394: LD_INT 4
3396: PPUSH
3397: CALL_OW 259
3401: GREATEREQUAL
3402: IFFALSE 3418
// SetClass ( i , class_soldier ) else
3404: LD_VAR 0 2
3408: PPUSH
3409: LD_INT 1
3411: PPUSH
3412: CALL_OW 336
3416: GO 3430
// SetClass ( i , class_scientistic ) ;
3418: LD_VAR 0 2
3422: PPUSH
3423: LD_INT 4
3425: PPUSH
3426: CALL_OW 336
3430: GO 3373
3432: POP
3433: POP
// if Frank then
3434: LD_EXP 28
3438: IFFALSE 3452
// SetClass ( Frank , class_sniper ) ;
3440: LD_EXP 28
3444: PPUSH
3445: LD_INT 5
3447: PPUSH
3448: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3452: LD_EXP 31
3456: PUSH
3457: LD_EXP 22
3461: PUSH
3462: LD_EXP 32
3466: PUSH
3467: LD_EXP 30
3471: PUSH
3472: EMPTY
3473: LIST
3474: LIST
3475: LIST
3476: LIST
3477: PPUSH
3478: LD_INT 4
3480: PPUSH
3481: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 3 ] , [ class_sniper , 0 , 3 ] ] ) ;
3485: LD_ADDR_EXP 3
3489: PUSH
3490: LD_STRING 
3492: PPUSH
3493: LD_INT 7
3495: PPUSH
3496: LD_INT 7
3498: PPUSH
3499: LD_INT -6
3501: PUSH
3502: LD_EXP 10
3506: PUSH
3507: LD_EXP 11
3511: PUSH
3512: LD_EXP 30
3516: PUSH
3517: LD_EXP 22
3521: PUSH
3522: LD_EXP 32
3526: PUSH
3527: LD_INT -2
3529: PUSH
3530: LD_INT -3
3532: PUSH
3533: LD_INT -5
3535: PUSH
3536: EMPTY
3537: LIST
3538: LIST
3539: LIST
3540: LIST
3541: LIST
3542: LIST
3543: LIST
3544: LIST
3545: LIST
3546: PUSH
3547: LD_EXP 4
3551: ADD
3552: PPUSH
3553: LD_INT 1
3555: PUSH
3556: LD_INT 4
3558: PUSH
3559: LD_INT 3
3561: PUSH
3562: EMPTY
3563: LIST
3564: LIST
3565: PUSH
3566: LD_INT 5
3568: PUSH
3569: LD_INT 0
3571: PUSH
3572: LD_INT 3
3574: PUSH
3575: EMPTY
3576: LIST
3577: LIST
3578: LIST
3579: PUSH
3580: EMPTY
3581: LIST
3582: LIST
3583: LIST
3584: PPUSH
3585: CALL_OW 42
3589: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3590: LD_ADDR_EXP 3
3594: PUSH
3595: LD_EXP 3
3599: PUSH
3600: LD_EXP 22
3604: PUSH
3605: LD_EXP 30
3609: PUSH
3610: EMPTY
3611: LIST
3612: LIST
3613: UNION
3614: ST_TO_ADDR
// others := friends diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3615: LD_ADDR_EXP 5
3619: PUSH
3620: LD_EXP 4
3624: PUSH
3625: LD_EXP 18
3629: PUSH
3630: LD_EXP 19
3634: PUSH
3635: LD_EXP 20
3639: PUSH
3640: LD_EXP 21
3644: PUSH
3645: LD_EXP 22
3649: PUSH
3650: LD_EXP 23
3654: PUSH
3655: LD_EXP 24
3659: PUSH
3660: LD_EXP 25
3664: PUSH
3665: LD_EXP 26
3669: PUSH
3670: LD_EXP 27
3674: PUSH
3675: LD_EXP 28
3679: PUSH
3680: LD_EXP 29
3684: PUSH
3685: LD_EXP 30
3689: PUSH
3690: LD_EXP 31
3694: PUSH
3695: LD_EXP 32
3699: PUSH
3700: EMPTY
3701: LIST
3702: LIST
3703: LIST
3704: LIST
3705: LIST
3706: LIST
3707: LIST
3708: LIST
3709: LIST
3710: LIST
3711: LIST
3712: LIST
3713: LIST
3714: LIST
3715: LIST
3716: PUSH
3717: LD_EXP 3
3721: ADD
3722: DIFF
3723: ST_TO_ADDR
// friends := friends diff others ;
3724: LD_ADDR_EXP 4
3728: PUSH
3729: LD_EXP 4
3733: PUSH
3734: LD_EXP 5
3738: DIFF
3739: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
3740: LD_ADDR_VAR 0 4
3744: PUSH
3745: LD_INT 111
3747: PUSH
3748: LD_INT 137
3750: PUSH
3751: LD_INT 51
3753: PUSH
3754: EMPTY
3755: LIST
3756: LIST
3757: LIST
3758: PUSH
3759: LD_INT 147
3761: PUSH
3762: LD_INT 129
3764: PUSH
3765: LD_INT 25
3767: PUSH
3768: EMPTY
3769: LIST
3770: LIST
3771: LIST
3772: PUSH
3773: EMPTY
3774: LIST
3775: LIST
3776: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
3777: LD_ADDR_VAR 0 5
3781: PUSH
3782: LD_INT 5
3784: PUSH
3785: LD_INT 6
3787: PUSH
3788: LD_INT 7
3790: PUSH
3791: LD_INT 8
3793: PUSH
3794: LD_INT 17
3796: PUSH
3797: LD_INT 18
3799: PUSH
3800: EMPTY
3801: LIST
3802: LIST
3803: LIST
3804: LIST
3805: LIST
3806: LIST
3807: ST_TO_ADDR
// for i in buildings do
3808: LD_ADDR_VAR 0 2
3812: PUSH
3813: LD_VAR 0 4
3817: PUSH
3818: FOR_IN
3819: IFFALSE 3835
// SetSide ( i , 4 ) ;
3821: LD_VAR 0 2
3825: PPUSH
3826: LD_INT 4
3828: PPUSH
3829: CALL_OW 235
3833: GO 3818
3835: POP
3836: POP
// for i in selected do
3837: LD_ADDR_VAR 0 2
3841: PUSH
3842: LD_EXP 3
3846: PUSH
3847: FOR_IN
3848: IFFALSE 4110
// begin if GetClass ( i ) in [ 1 , 5 ] then
3850: LD_VAR 0 2
3854: PPUSH
3855: CALL_OW 257
3859: PUSH
3860: LD_INT 1
3862: PUSH
3863: LD_INT 5
3865: PUSH
3866: EMPTY
3867: LIST
3868: LIST
3869: IN
3870: IFFALSE 3991
// begin if buildings [ 1 ] then
3872: LD_VAR 0 4
3876: PUSH
3877: LD_INT 1
3879: ARRAY
3880: IFFALSE 3941
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
3882: LD_VAR 0 2
3886: PPUSH
3887: LD_VAR 0 4
3891: PUSH
3892: LD_INT 1
3894: ARRAY
3895: PUSH
3896: LD_INT 1
3898: ARRAY
3899: PPUSH
3900: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
3904: LD_ADDR_VAR 0 4
3908: PUSH
3909: LD_VAR 0 4
3913: PPUSH
3914: LD_INT 1
3916: PPUSH
3917: LD_VAR 0 4
3921: PUSH
3922: LD_INT 1
3924: ARRAY
3925: PPUSH
3926: LD_INT 1
3928: PPUSH
3929: CALL_OW 3
3933: PPUSH
3934: CALL_OW 1
3938: ST_TO_ADDR
// end else
3939: GO 3989
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
3941: LD_VAR 0 2
3945: PPUSH
3946: LD_VAR 0 5
3950: PUSH
3951: LD_INT 1
3953: ARRAY
3954: PPUSH
3955: LD_INT 0
3957: PPUSH
3958: CALL_OW 49
// ComHold ( i ) ;
3962: LD_VAR 0 2
3966: PPUSH
3967: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
3971: LD_ADDR_VAR 0 5
3975: PUSH
3976: LD_VAR 0 5
3980: PPUSH
3981: LD_INT 1
3983: PPUSH
3984: CALL_OW 3
3988: ST_TO_ADDR
// end ; end else
3989: GO 4108
// begin if buildings [ 2 ] then
3991: LD_VAR 0 4
3995: PUSH
3996: LD_INT 2
3998: ARRAY
3999: IFFALSE 4060
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4001: LD_VAR 0 2
4005: PPUSH
4006: LD_VAR 0 4
4010: PUSH
4011: LD_INT 2
4013: ARRAY
4014: PUSH
4015: LD_INT 1
4017: ARRAY
4018: PPUSH
4019: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4023: LD_ADDR_VAR 0 4
4027: PUSH
4028: LD_VAR 0 4
4032: PPUSH
4033: LD_INT 2
4035: PPUSH
4036: LD_VAR 0 4
4040: PUSH
4041: LD_INT 2
4043: ARRAY
4044: PPUSH
4045: LD_INT 1
4047: PPUSH
4048: CALL_OW 3
4052: PPUSH
4053: CALL_OW 1
4057: ST_TO_ADDR
// end else
4058: GO 4108
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4060: LD_VAR 0 2
4064: PPUSH
4065: LD_VAR 0 5
4069: PUSH
4070: LD_INT 1
4072: ARRAY
4073: PPUSH
4074: LD_INT 0
4076: PPUSH
4077: CALL_OW 49
// ComHold ( i ) ;
4081: LD_VAR 0 2
4085: PPUSH
4086: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4090: LD_ADDR_VAR 0 5
4094: PUSH
4095: LD_VAR 0 5
4099: PPUSH
4100: LD_INT 1
4102: PPUSH
4103: CALL_OW 3
4107: ST_TO_ADDR
// end ; end ; end ;
4108: GO 3847
4110: POP
4111: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4112: LD_ADDR_VAR 0 6
4116: PUSH
4117: LD_INT 22
4119: PUSH
4120: LD_INT 1
4122: PUSH
4123: EMPTY
4124: LIST
4125: LIST
4126: PUSH
4127: LD_INT 30
4129: PUSH
4130: LD_INT 32
4132: PUSH
4133: EMPTY
4134: LIST
4135: LIST
4136: PUSH
4137: EMPTY
4138: LIST
4139: LIST
4140: PPUSH
4141: CALL_OW 69
4145: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4146: LD_ADDR_VAR 0 2
4150: PUSH
4151: DOUBLE
4152: LD_VAR 0 6
4156: PUSH
4157: LD_EXP 5
4161: MINUS
4162: INC
4163: ST_TO_ADDR
4164: LD_INT 1
4166: PUSH
4167: FOR_DOWNTO
4168: IFFALSE 4231
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4170: LD_INT 0
4172: PPUSH
4173: LD_INT 1
4175: PPUSH
4176: LD_INT 7
4178: PUSH
4179: LD_INT 8
4181: PUSH
4182: LD_INT 9
4184: PUSH
4185: EMPTY
4186: LIST
4187: LIST
4188: LIST
4189: PUSH
4190: LD_OWVAR 67
4194: ARRAY
4195: PPUSH
4196: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4200: LD_ADDR_EXP 5
4204: PUSH
4205: LD_EXP 5
4209: PPUSH
4210: LD_EXP 5
4214: PUSH
4215: LD_INT 1
4217: PLUS
4218: PPUSH
4219: CALL_OW 44
4223: PPUSH
4224: CALL_OW 2
4228: ST_TO_ADDR
// end ;
4229: GO 4167
4231: POP
4232: POP
// if others then
4233: LD_EXP 5
4237: IFFALSE 4343
// for i = 1 to bunkers do
4239: LD_ADDR_VAR 0 2
4243: PUSH
4244: DOUBLE
4245: LD_INT 1
4247: DEC
4248: ST_TO_ADDR
4249: LD_VAR 0 6
4253: PUSH
4254: FOR_TO
4255: IFFALSE 4341
// begin SetSide ( others [ others ] , 1 ) ;
4257: LD_EXP 5
4261: PUSH
4262: LD_EXP 5
4266: ARRAY
4267: PPUSH
4268: LD_INT 1
4270: PPUSH
4271: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4275: LD_EXP 5
4279: PUSH
4280: LD_EXP 5
4284: ARRAY
4285: PPUSH
4286: LD_INT 1
4288: PPUSH
4289: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4293: LD_EXP 5
4297: PUSH
4298: LD_EXP 5
4302: ARRAY
4303: PPUSH
4304: LD_VAR 0 6
4308: PUSH
4309: LD_VAR 0 2
4313: ARRAY
4314: PPUSH
4315: CALL_OW 52
// others := Delete ( others , others ) ;
4319: LD_ADDR_EXP 5
4323: PUSH
4324: LD_EXP 5
4328: PPUSH
4329: LD_EXP 5
4333: PPUSH
4334: CALL_OW 3
4338: ST_TO_ADDR
// end ;
4339: GO 4254
4341: POP
4342: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4343: LD_ADDR_VAR 0 5
4347: PUSH
4348: LD_VAR 0 5
4352: PUSH
4353: LD_INT 9
4355: PUSH
4356: LD_INT 10
4358: PUSH
4359: LD_INT 11
4361: PUSH
4362: LD_INT 12
4364: PUSH
4365: LD_INT 13
4367: PUSH
4368: LD_INT 14
4370: PUSH
4371: LD_INT 15
4373: PUSH
4374: LD_INT 16
4376: PUSH
4377: EMPTY
4378: LIST
4379: LIST
4380: LIST
4381: LIST
4382: LIST
4383: LIST
4384: LIST
4385: LIST
4386: UNION
4387: ST_TO_ADDR
// for i in friends ^ others do
4388: LD_ADDR_VAR 0 2
4392: PUSH
4393: LD_EXP 4
4397: PUSH
4398: LD_EXP 5
4402: ADD
4403: PUSH
4404: FOR_IN
4405: IFFALSE 4745
// begin SetTag ( i , 2 ) ;
4407: LD_VAR 0 2
4411: PPUSH
4412: LD_INT 2
4414: PPUSH
4415: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4419: LD_VAR 0 2
4423: PUSH
4424: LD_EXP 4
4428: IN
4429: PUSH
4430: LD_VAR 0 2
4434: PPUSH
4435: CALL_OW 257
4439: PUSH
4440: LD_INT 1
4442: EQUAL
4443: AND
4444: PUSH
4445: LD_VAR 0 2
4449: PUSH
4450: LD_EXP 5
4454: IN
4455: OR
4456: PUSH
4457: LD_VAR 0 4
4461: PUSH
4462: LD_INT 1
4464: ARRAY
4465: AND
4466: IFFALSE 4539
// begin SetClass ( i , 1 ) ;
4468: LD_VAR 0 2
4472: PPUSH
4473: LD_INT 1
4475: PPUSH
4476: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4480: LD_VAR 0 2
4484: PPUSH
4485: LD_VAR 0 4
4489: PUSH
4490: LD_INT 1
4492: ARRAY
4493: PUSH
4494: LD_INT 1
4496: ARRAY
4497: PPUSH
4498: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4502: LD_ADDR_VAR 0 4
4506: PUSH
4507: LD_VAR 0 4
4511: PPUSH
4512: LD_INT 1
4514: PPUSH
4515: LD_VAR 0 4
4519: PUSH
4520: LD_INT 1
4522: ARRAY
4523: PPUSH
4524: LD_INT 1
4526: PPUSH
4527: CALL_OW 3
4531: PPUSH
4532: CALL_OW 1
4536: ST_TO_ADDR
// continue ;
4537: GO 4404
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4539: LD_VAR 0 2
4543: PUSH
4544: LD_EXP 4
4548: IN
4549: PUSH
4550: LD_VAR 0 2
4554: PPUSH
4555: CALL_OW 257
4559: PUSH
4560: LD_INT 4
4562: EQUAL
4563: AND
4564: PUSH
4565: LD_VAR 0 2
4569: PUSH
4570: LD_EXP 5
4574: IN
4575: OR
4576: PUSH
4577: LD_VAR 0 4
4581: PUSH
4582: LD_INT 2
4584: ARRAY
4585: AND
4586: IFFALSE 4659
// begin SetClass ( i , 4 ) ;
4588: LD_VAR 0 2
4592: PPUSH
4593: LD_INT 4
4595: PPUSH
4596: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4600: LD_VAR 0 2
4604: PPUSH
4605: LD_VAR 0 4
4609: PUSH
4610: LD_INT 2
4612: ARRAY
4613: PUSH
4614: LD_INT 1
4616: ARRAY
4617: PPUSH
4618: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4622: LD_ADDR_VAR 0 4
4626: PUSH
4627: LD_VAR 0 4
4631: PPUSH
4632: LD_INT 2
4634: PPUSH
4635: LD_VAR 0 4
4639: PUSH
4640: LD_INT 2
4642: ARRAY
4643: PPUSH
4644: LD_INT 1
4646: PPUSH
4647: CALL_OW 3
4651: PPUSH
4652: CALL_OW 1
4656: ST_TO_ADDR
// continue ;
4657: GO 4404
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4659: LD_VAR 0 2
4663: PPUSH
4664: LD_VAR 0 5
4668: PUSH
4669: LD_INT 1
4671: ARRAY
4672: PPUSH
4673: LD_INT 0
4675: PPUSH
4676: CALL_OW 49
// if GetClass ( i ) <> 4 then
4680: LD_VAR 0 2
4684: PPUSH
4685: CALL_OW 257
4689: PUSH
4690: LD_INT 4
4692: NONEQUAL
4693: IFFALSE 4707
// SetClass ( i , 1 ) ;
4695: LD_VAR 0 2
4699: PPUSH
4700: LD_INT 1
4702: PPUSH
4703: CALL_OW 336
// ComHold ( i ) ;
4707: LD_VAR 0 2
4711: PPUSH
4712: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4716: LD_ADDR_VAR 0 5
4720: PUSH
4721: LD_VAR 0 5
4725: PPUSH
4726: LD_INT 1
4728: PPUSH
4729: CALL_OW 3
4733: ST_TO_ADDR
// if not areas then
4734: LD_VAR 0 5
4738: NOT
4739: IFFALSE 4743
// break ;
4741: GO 4745
// end ;
4743: GO 4404
4745: POP
4746: POP
// if Frank then
4747: LD_EXP 28
4751: IFFALSE 4765
// SetClass ( Frank , class_sniper ) ;
4753: LD_EXP 28
4757: PPUSH
4758: LD_INT 5
4760: PPUSH
4761: CALL_OW 336
// end ; end_of_file
4765: LD_VAR 0 1
4769: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
4770: LD_INT 0
4772: PPUSH
4773: PPUSH
// if exist_mode then
4774: LD_VAR 0 2
4778: IFFALSE 4803
// unit := CreateCharacter ( prefix & ident ) else
4780: LD_ADDR_VAR 0 5
4784: PUSH
4785: LD_VAR 0 3
4789: PUSH
4790: LD_VAR 0 1
4794: STR
4795: PPUSH
4796: CALL_OW 34
4800: ST_TO_ADDR
4801: GO 4818
// unit := NewCharacter ( ident ) ;
4803: LD_ADDR_VAR 0 5
4807: PUSH
4808: LD_VAR 0 1
4812: PPUSH
4813: CALL_OW 25
4817: ST_TO_ADDR
// result := unit ;
4818: LD_ADDR_VAR 0 4
4822: PUSH
4823: LD_VAR 0 5
4827: ST_TO_ADDR
// end ;
4828: LD_VAR 0 4
4832: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
4833: LD_INT 0
4835: PPUSH
// vc_chassis := chassis ;
4836: LD_ADDR_OWVAR 37
4840: PUSH
4841: LD_VAR 0 1
4845: ST_TO_ADDR
// vc_engine := engine ;
4846: LD_ADDR_OWVAR 39
4850: PUSH
4851: LD_VAR 0 2
4855: ST_TO_ADDR
// vc_control := control ;
4856: LD_ADDR_OWVAR 38
4860: PUSH
4861: LD_VAR 0 3
4865: ST_TO_ADDR
// vc_weapon := weapon ;
4866: LD_ADDR_OWVAR 40
4870: PUSH
4871: LD_VAR 0 4
4875: ST_TO_ADDR
// vc_fuel_battery := fuel ;
4876: LD_ADDR_OWVAR 41
4880: PUSH
4881: LD_VAR 0 5
4885: ST_TO_ADDR
// end ;
4886: LD_VAR 0 6
4890: RET
// export function CanSayRand ( side ) ; begin
4891: LD_INT 0
4893: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
4894: LD_ADDR_VAR 0 2
4898: PUSH
4899: LD_INT 52
4901: PUSH
4902: EMPTY
4903: LIST
4904: PUSH
4905: LD_INT 22
4907: PUSH
4908: LD_VAR 0 1
4912: PUSH
4913: EMPTY
4914: LIST
4915: LIST
4916: PUSH
4917: LD_INT 2
4919: PUSH
4920: LD_INT 25
4922: PUSH
4923: LD_INT 1
4925: PUSH
4926: EMPTY
4927: LIST
4928: LIST
4929: PUSH
4930: LD_INT 25
4932: PUSH
4933: LD_INT 2
4935: PUSH
4936: EMPTY
4937: LIST
4938: LIST
4939: PUSH
4940: LD_INT 25
4942: PUSH
4943: LD_INT 3
4945: PUSH
4946: EMPTY
4947: LIST
4948: LIST
4949: PUSH
4950: LD_INT 25
4952: PUSH
4953: LD_INT 4
4955: PUSH
4956: EMPTY
4957: LIST
4958: LIST
4959: PUSH
4960: EMPTY
4961: LIST
4962: LIST
4963: LIST
4964: LIST
4965: LIST
4966: PUSH
4967: EMPTY
4968: LIST
4969: LIST
4970: LIST
4971: PPUSH
4972: CALL_OW 69
4976: PUSH
4977: LD_EXP 10
4981: PUSH
4982: LD_EXP 28
4986: PUSH
4987: LD_EXP 18
4991: PUSH
4992: LD_EXP 19
4996: PUSH
4997: LD_EXP 20
5001: PUSH
5002: LD_EXP 21
5006: PUSH
5007: LD_EXP 22
5011: PUSH
5012: LD_EXP 23
5016: PUSH
5017: LD_EXP 24
5021: PUSH
5022: LD_EXP 25
5026: PUSH
5027: LD_EXP 12
5031: PUSH
5032: LD_EXP 26
5036: PUSH
5037: LD_EXP 27
5041: PUSH
5042: LD_EXP 29
5046: PUSH
5047: EMPTY
5048: LIST
5049: LIST
5050: LIST
5051: LIST
5052: LIST
5053: LIST
5054: LIST
5055: LIST
5056: LIST
5057: LIST
5058: LIST
5059: LIST
5060: LIST
5061: LIST
5062: DIFF
5063: ST_TO_ADDR
// end ;
5064: LD_VAR 0 2
5068: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5069: LD_INT 0
5071: PPUSH
5072: PPUSH
5073: PPUSH
5074: PPUSH
5075: PPUSH
5076: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5077: LD_VAR 0 1
5081: NOT
5082: PUSH
5083: LD_VAR 0 1
5087: PPUSH
5088: CALL_OW 263
5092: PUSH
5093: LD_INT 2
5095: EQUAL
5096: NOT
5097: OR
5098: IFFALSE 5102
// exit ;
5100: GO 5418
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5102: LD_ADDR_VAR 0 6
5106: PUSH
5107: LD_INT 22
5109: PUSH
5110: LD_VAR 0 1
5114: PPUSH
5115: CALL_OW 255
5119: PUSH
5120: EMPTY
5121: LIST
5122: LIST
5123: PUSH
5124: LD_INT 2
5126: PUSH
5127: LD_INT 30
5129: PUSH
5130: LD_INT 36
5132: PUSH
5133: EMPTY
5134: LIST
5135: LIST
5136: PUSH
5137: LD_INT 34
5139: PUSH
5140: LD_INT 31
5142: PUSH
5143: EMPTY
5144: LIST
5145: LIST
5146: PUSH
5147: EMPTY
5148: LIST
5149: LIST
5150: LIST
5151: PUSH
5152: EMPTY
5153: LIST
5154: LIST
5155: PPUSH
5156: CALL_OW 69
5160: ST_TO_ADDR
// if not tmp then
5161: LD_VAR 0 6
5165: NOT
5166: IFFALSE 5170
// exit ;
5168: GO 5418
// result := [ ] ;
5170: LD_ADDR_VAR 0 2
5174: PUSH
5175: EMPTY
5176: ST_TO_ADDR
// for i in tmp do
5177: LD_ADDR_VAR 0 3
5181: PUSH
5182: LD_VAR 0 6
5186: PUSH
5187: FOR_IN
5188: IFFALSE 5259
// begin t := UnitsInside ( i ) ;
5190: LD_ADDR_VAR 0 4
5194: PUSH
5195: LD_VAR 0 3
5199: PPUSH
5200: CALL_OW 313
5204: ST_TO_ADDR
// if t then
5205: LD_VAR 0 4
5209: IFFALSE 5257
// for j in t do
5211: LD_ADDR_VAR 0 7
5215: PUSH
5216: LD_VAR 0 4
5220: PUSH
5221: FOR_IN
5222: IFFALSE 5255
// result := Insert ( result , result + 1 , j ) ;
5224: LD_ADDR_VAR 0 2
5228: PUSH
5229: LD_VAR 0 2
5233: PPUSH
5234: LD_VAR 0 2
5238: PUSH
5239: LD_INT 1
5241: PLUS
5242: PPUSH
5243: LD_VAR 0 7
5247: PPUSH
5248: CALL_OW 2
5252: ST_TO_ADDR
5253: GO 5221
5255: POP
5256: POP
// end ;
5257: GO 5187
5259: POP
5260: POP
// if not result then
5261: LD_VAR 0 2
5265: NOT
5266: IFFALSE 5270
// exit ;
5268: GO 5418
// mech := result [ 1 ] ;
5270: LD_ADDR_VAR 0 5
5274: PUSH
5275: LD_VAR 0 2
5279: PUSH
5280: LD_INT 1
5282: ARRAY
5283: ST_TO_ADDR
// if result > 1 then
5284: LD_VAR 0 2
5288: PUSH
5289: LD_INT 1
5291: GREATER
5292: IFFALSE 5404
// for i = 2 to result do
5294: LD_ADDR_VAR 0 3
5298: PUSH
5299: DOUBLE
5300: LD_INT 2
5302: DEC
5303: ST_TO_ADDR
5304: LD_VAR 0 2
5308: PUSH
5309: FOR_TO
5310: IFFALSE 5402
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5312: LD_ADDR_VAR 0 4
5316: PUSH
5317: LD_VAR 0 2
5321: PUSH
5322: LD_VAR 0 3
5326: ARRAY
5327: PPUSH
5328: LD_INT 3
5330: PPUSH
5331: CALL_OW 259
5335: PUSH
5336: LD_VAR 0 2
5340: PUSH
5341: LD_VAR 0 3
5345: ARRAY
5346: PPUSH
5347: CALL_OW 432
5351: MINUS
5352: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5353: LD_VAR 0 4
5357: PUSH
5358: LD_VAR 0 5
5362: PPUSH
5363: LD_INT 3
5365: PPUSH
5366: CALL_OW 259
5370: PUSH
5371: LD_VAR 0 5
5375: PPUSH
5376: CALL_OW 432
5380: MINUS
5381: GREATEREQUAL
5382: IFFALSE 5400
// mech := result [ i ] ;
5384: LD_ADDR_VAR 0 5
5388: PUSH
5389: LD_VAR 0 2
5393: PUSH
5394: LD_VAR 0 3
5398: ARRAY
5399: ST_TO_ADDR
// end ;
5400: GO 5309
5402: POP
5403: POP
// ComLinkTo ( vehicle , mech ) ;
5404: LD_VAR 0 1
5408: PPUSH
5409: LD_VAR 0 5
5413: PPUSH
5414: CALL_OW 135
// end ;
5418: LD_VAR 0 2
5422: RET
// export function SayRand ( sex , dial ) ; begin
5423: LD_INT 0
5425: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5426: LD_ADDR_VAR 0 3
5430: PUSH
5431: LD_INT 52
5433: PUSH
5434: EMPTY
5435: LIST
5436: PUSH
5437: LD_INT 22
5439: PUSH
5440: LD_INT 1
5442: PUSH
5443: EMPTY
5444: LIST
5445: LIST
5446: PUSH
5447: LD_INT 26
5449: PUSH
5450: LD_VAR 0 1
5454: PUSH
5455: EMPTY
5456: LIST
5457: LIST
5458: PUSH
5459: LD_INT 2
5461: PUSH
5462: LD_INT 25
5464: PUSH
5465: LD_INT 1
5467: PUSH
5468: EMPTY
5469: LIST
5470: LIST
5471: PUSH
5472: LD_INT 25
5474: PUSH
5475: LD_INT 2
5477: PUSH
5478: EMPTY
5479: LIST
5480: LIST
5481: PUSH
5482: LD_INT 25
5484: PUSH
5485: LD_INT 3
5487: PUSH
5488: EMPTY
5489: LIST
5490: LIST
5491: PUSH
5492: LD_INT 25
5494: PUSH
5495: LD_INT 4
5497: PUSH
5498: EMPTY
5499: LIST
5500: LIST
5501: PUSH
5502: EMPTY
5503: LIST
5504: LIST
5505: LIST
5506: LIST
5507: LIST
5508: PUSH
5509: EMPTY
5510: LIST
5511: LIST
5512: LIST
5513: LIST
5514: PPUSH
5515: CALL_OW 69
5519: PUSH
5520: LD_EXP 10
5524: PUSH
5525: LD_EXP 28
5529: PUSH
5530: LD_EXP 18
5534: PUSH
5535: LD_EXP 19
5539: PUSH
5540: LD_EXP 20
5544: PUSH
5545: LD_EXP 21
5549: PUSH
5550: LD_EXP 22
5554: PUSH
5555: LD_EXP 23
5559: PUSH
5560: LD_EXP 24
5564: PUSH
5565: LD_EXP 25
5569: PUSH
5570: LD_EXP 12
5574: PUSH
5575: LD_EXP 26
5579: PUSH
5580: LD_EXP 27
5584: PUSH
5585: LD_EXP 29
5589: PUSH
5590: EMPTY
5591: LIST
5592: LIST
5593: LIST
5594: LIST
5595: LIST
5596: LIST
5597: LIST
5598: LIST
5599: LIST
5600: LIST
5601: LIST
5602: LIST
5603: LIST
5604: LIST
5605: DIFF
5606: ST_TO_ADDR
// if not result then
5607: LD_VAR 0 3
5611: NOT
5612: IFFALSE 5616
// exit ;
5614: GO 5644
// result := result [ 1 ] ;
5616: LD_ADDR_VAR 0 3
5620: PUSH
5621: LD_VAR 0 3
5625: PUSH
5626: LD_INT 1
5628: ARRAY
5629: ST_TO_ADDR
// Say ( result , dial ) ;
5630: LD_VAR 0 3
5634: PPUSH
5635: LD_VAR 0 2
5639: PPUSH
5640: CALL_OW 88
// end ;
5644: LD_VAR 0 3
5648: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5649: LD_INT 0
5651: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5652: LD_ADDR_VAR 0 4
5656: PUSH
5657: LD_INT 22
5659: PUSH
5660: LD_INT 1
5662: PUSH
5663: EMPTY
5664: LIST
5665: LIST
5666: PUSH
5667: LD_INT 26
5669: PUSH
5670: LD_VAR 0 1
5674: PUSH
5675: EMPTY
5676: LIST
5677: LIST
5678: PUSH
5679: LD_INT 2
5681: PUSH
5682: LD_INT 25
5684: PUSH
5685: LD_INT 1
5687: PUSH
5688: EMPTY
5689: LIST
5690: LIST
5691: PUSH
5692: LD_INT 25
5694: PUSH
5695: LD_INT 2
5697: PUSH
5698: EMPTY
5699: LIST
5700: LIST
5701: PUSH
5702: LD_INT 25
5704: PUSH
5705: LD_INT 3
5707: PUSH
5708: EMPTY
5709: LIST
5710: LIST
5711: PUSH
5712: LD_INT 25
5714: PUSH
5715: LD_INT 4
5717: PUSH
5718: EMPTY
5719: LIST
5720: LIST
5721: PUSH
5722: EMPTY
5723: LIST
5724: LIST
5725: LIST
5726: LIST
5727: LIST
5728: PUSH
5729: EMPTY
5730: LIST
5731: LIST
5732: LIST
5733: PPUSH
5734: CALL_OW 69
5738: PUSH
5739: LD_EXP 10
5743: PUSH
5744: LD_EXP 28
5748: PUSH
5749: LD_EXP 18
5753: PUSH
5754: LD_EXP 19
5758: PUSH
5759: LD_EXP 20
5763: PUSH
5764: LD_EXP 21
5768: PUSH
5769: LD_EXP 22
5773: PUSH
5774: LD_EXP 23
5778: PUSH
5779: LD_EXP 24
5783: PUSH
5784: LD_EXP 25
5788: PUSH
5789: LD_EXP 12
5793: PUSH
5794: LD_EXP 26
5798: PUSH
5799: LD_EXP 27
5803: PUSH
5804: LD_EXP 29
5808: PUSH
5809: EMPTY
5810: LIST
5811: LIST
5812: LIST
5813: LIST
5814: LIST
5815: LIST
5816: LIST
5817: LIST
5818: LIST
5819: LIST
5820: LIST
5821: LIST
5822: LIST
5823: LIST
5824: PUSH
5825: LD_VAR 0 3
5829: ADD
5830: DIFF
5831: ST_TO_ADDR
// if not result then
5832: LD_VAR 0 4
5836: NOT
5837: IFFALSE 5841
// exit ;
5839: GO 5869
// result := result [ 1 ] ;
5841: LD_ADDR_VAR 0 4
5845: PUSH
5846: LD_VAR 0 4
5850: PUSH
5851: LD_INT 1
5853: ARRAY
5854: ST_TO_ADDR
// Say ( result , dial ) ;
5855: LD_VAR 0 4
5859: PPUSH
5860: LD_VAR 0 2
5864: PPUSH
5865: CALL_OW 88
// end ;
5869: LD_VAR 0 4
5873: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
5874: LD_INT 0
5876: PPUSH
5877: PPUSH
5878: PPUSH
5879: PPUSH
5880: PPUSH
5881: PPUSH
5882: PPUSH
5883: PPUSH
5884: PPUSH
5885: PPUSH
5886: PPUSH
5887: PPUSH
5888: PPUSH
5889: PPUSH
5890: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
5891: LD_VAR 0 1
5895: NOT
5896: PUSH
5897: LD_VAR 0 2
5901: NOT
5902: OR
5903: PUSH
5904: LD_VAR 0 1
5908: PPUSH
5909: CALL_OW 247
5913: PUSH
5914: LD_INT 3
5916: EQUAL
5917: OR
5918: IFFALSE 5922
// exit ;
5920: GO 7399
// for i = path downto 1 do
5922: LD_ADDR_VAR 0 5
5926: PUSH
5927: DOUBLE
5928: LD_VAR 0 2
5932: INC
5933: ST_TO_ADDR
5934: LD_INT 1
5936: PUSH
5937: FOR_DOWNTO
5938: IFFALSE 5999
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
5940: LD_VAR 0 2
5944: PUSH
5945: LD_VAR 0 5
5949: ARRAY
5950: PUSH
5951: LD_INT 1
5953: ARRAY
5954: PPUSH
5955: LD_VAR 0 2
5959: PUSH
5960: LD_VAR 0 5
5964: ARRAY
5965: PUSH
5966: LD_INT 2
5968: ARRAY
5969: PPUSH
5970: CALL_OW 488
5974: NOT
5975: IFFALSE 5997
// path = Delete ( path , i ) ;
5977: LD_ADDR_VAR 0 2
5981: PUSH
5982: LD_VAR 0 2
5986: PPUSH
5987: LD_VAR 0 5
5991: PPUSH
5992: CALL_OW 3
5996: ST_TO_ADDR
// end ;
5997: GO 5937
5999: POP
6000: POP
// if not path then
6001: LD_VAR 0 2
6005: NOT
6006: IFFALSE 6010
// exit ;
6008: GO 7399
// tmp_path := [ ] ;
6010: LD_ADDR_VAR 0 11
6014: PUSH
6015: EMPTY
6016: ST_TO_ADDR
// if flags then
6017: LD_VAR 0 3
6021: IFFALSE 6095
// begin if flags [ 1 ] then
6023: LD_VAR 0 3
6027: PUSH
6028: LD_INT 1
6030: ARRAY
6031: IFFALSE 6047
// safe_place = flags [ 1 ] ;
6033: LD_ADDR_VAR 0 16
6037: PUSH
6038: LD_VAR 0 3
6042: PUSH
6043: LD_INT 1
6045: ARRAY
6046: ST_TO_ADDR
// if flags [ 2 ] then
6047: LD_VAR 0 3
6051: PUSH
6052: LD_INT 2
6054: ARRAY
6055: IFFALSE 6071
// spot_dist = flags [ 2 ] ;
6057: LD_ADDR_VAR 0 15
6061: PUSH
6062: LD_VAR 0 3
6066: PUSH
6067: LD_INT 2
6069: ARRAY
6070: ST_TO_ADDR
// if flags [ 3 ] then
6071: LD_VAR 0 3
6075: PUSH
6076: LD_INT 3
6078: ARRAY
6079: IFFALSE 6095
// chase_range = flags [ 3 ] ;
6081: LD_ADDR_VAR 0 17
6085: PUSH
6086: LD_VAR 0 3
6090: PUSH
6091: LD_INT 3
6093: ARRAY
6094: ST_TO_ADDR
// end ; if not chase_range then
6095: LD_VAR 0 17
6099: NOT
6100: IFFALSE 6110
// chase_range = 8 ;
6102: LD_ADDR_VAR 0 17
6106: PUSH
6107: LD_INT 8
6109: ST_TO_ADDR
// if not spot_dist then
6110: LD_VAR 0 15
6114: NOT
6115: IFFALSE 6125
// spot_dist := 8 ;
6117: LD_ADDR_VAR 0 15
6121: PUSH
6122: LD_INT 8
6124: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6125: LD_ADDR_VAR 0 18
6129: PUSH
6130: LD_VAR 0 1
6134: PPUSH
6135: CALL_OW 247
6139: PUSH
6140: LD_INT 2
6142: EQUAL
6143: PUSH
6144: LD_VAR 0 1
6148: PPUSH
6149: CALL_OW 262
6153: PUSH
6154: LD_INT 3
6156: NONEQUAL
6157: AND
6158: ST_TO_ADDR
// status = 1 ;
6159: LD_ADDR_VAR 0 12
6163: PUSH
6164: LD_INT 1
6166: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6167: LD_ADDR_VAR 0 11
6171: PUSH
6172: LD_INT 1
6174: PUSH
6175: LD_VAR 0 2
6179: PUSH
6180: LD_INT 1
6182: ARRAY
6183: PUSH
6184: EMPTY
6185: LIST
6186: LIST
6187: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6188: LD_INT 35
6190: PPUSH
6191: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6195: LD_VAR 0 18
6199: PUSH
6200: LD_VAR 0 1
6204: PPUSH
6205: CALL_OW 261
6209: PUSH
6210: LD_INT 20
6212: LESS
6213: AND
6214: IFFALSE 6407
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6216: LD_ADDR_VAR 0 10
6220: PUSH
6221: LD_INT 22
6223: PUSH
6224: LD_VAR 0 1
6228: PPUSH
6229: CALL_OW 255
6233: PUSH
6234: EMPTY
6235: LIST
6236: LIST
6237: PUSH
6238: LD_INT 2
6240: PUSH
6241: LD_INT 30
6243: PUSH
6244: LD_INT 0
6246: PUSH
6247: EMPTY
6248: LIST
6249: LIST
6250: PUSH
6251: LD_INT 30
6253: PUSH
6254: LD_INT 1
6256: PUSH
6257: EMPTY
6258: LIST
6259: LIST
6260: PUSH
6261: LD_INT 30
6263: PUSH
6264: LD_INT 29
6266: PUSH
6267: EMPTY
6268: LIST
6269: LIST
6270: PUSH
6271: LD_INT 30
6273: PUSH
6274: LD_INT 3
6276: PUSH
6277: EMPTY
6278: LIST
6279: LIST
6280: PUSH
6281: EMPTY
6282: LIST
6283: LIST
6284: LIST
6285: LIST
6286: LIST
6287: PUSH
6288: EMPTY
6289: LIST
6290: LIST
6291: PPUSH
6292: CALL_OW 69
6296: ST_TO_ADDR
// if not station then
6297: LD_VAR 0 10
6301: NOT
6302: IFFALSE 6318
// begin SetFuel ( unit , 40 ) ;
6304: LD_VAR 0 1
6308: PPUSH
6309: LD_INT 40
6311: PPUSH
6312: CALL_OW 240
// continue ;
6316: GO 6188
// end ; status := 6 ;
6318: LD_ADDR_VAR 0 12
6322: PUSH
6323: LD_INT 6
6325: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6326: LD_ADDR_VAR 0 10
6330: PUSH
6331: LD_VAR 0 10
6335: PPUSH
6336: LD_VAR 0 1
6340: PPUSH
6341: CALL_OW 74
6345: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6346: LD_INT 35
6348: PPUSH
6349: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6353: LD_VAR 0 1
6357: PPUSH
6358: LD_VAR 0 10
6362: PPUSH
6363: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6367: LD_VAR 0 1
6371: PPUSH
6372: LD_VAR 0 10
6376: PPUSH
6377: CALL_OW 296
6381: PUSH
6382: LD_INT 6
6384: LESS
6385: IFFALSE 6346
// SetFuel ( unit , 100 ) ;
6387: LD_VAR 0 1
6391: PPUSH
6392: LD_INT 100
6394: PPUSH
6395: CALL_OW 240
// status := 5 ;
6399: LD_ADDR_VAR 0 12
6403: PUSH
6404: LD_INT 5
6406: ST_TO_ADDR
// end ; if status = 1 then
6407: LD_VAR 0 12
6411: PUSH
6412: LD_INT 1
6414: EQUAL
6415: IFFALSE 6729
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6417: LD_ADDR_VAR 0 13
6421: PUSH
6422: LD_INT 81
6424: PUSH
6425: LD_VAR 0 1
6429: PPUSH
6430: CALL_OW 255
6434: PUSH
6435: EMPTY
6436: LIST
6437: LIST
6438: PUSH
6439: LD_INT 91
6441: PUSH
6442: LD_VAR 0 1
6446: PUSH
6447: LD_VAR 0 15
6451: PUSH
6452: EMPTY
6453: LIST
6454: LIST
6455: LIST
6456: PUSH
6457: LD_INT 101
6459: PUSH
6460: LD_INT 1
6462: PUSH
6463: EMPTY
6464: LIST
6465: LIST
6466: PUSH
6467: EMPTY
6468: LIST
6469: LIST
6470: LIST
6471: PPUSH
6472: CALL_OW 69
6476: ST_TO_ADDR
// if ( enemy ) then
6477: LD_VAR 0 13
6481: IFFALSE 6531
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6483: LD_VAR 0 1
6487: PPUSH
6488: LD_VAR 0 1
6492: PPUSH
6493: CALL_OW 250
6497: PPUSH
6498: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6502: LD_VAR 0 1
6506: PPUSH
6507: LD_VAR 0 1
6511: PPUSH
6512: CALL_OW 251
6516: PPUSH
6517: CALL_OW 232
// status = 2 ;
6521: LD_ADDR_VAR 0 12
6525: PUSH
6526: LD_INT 2
6528: ST_TO_ADDR
// end else
6529: GO 6729
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6531: LD_VAR 0 1
6535: PPUSH
6536: LD_VAR 0 11
6540: PUSH
6541: LD_INT 2
6543: ARRAY
6544: PUSH
6545: LD_INT 1
6547: ARRAY
6548: PPUSH
6549: LD_VAR 0 11
6553: PUSH
6554: LD_INT 2
6556: ARRAY
6557: PUSH
6558: LD_INT 2
6560: ARRAY
6561: PPUSH
6562: CALL_OW 307
6566: PUSH
6567: LD_VAR 0 1
6571: PPUSH
6572: CALL_OW 314
6576: NOT
6577: OR
6578: IFFALSE 6729
// begin wait ( 0 0$2 ) ;
6580: LD_INT 70
6582: PPUSH
6583: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6587: LD_VAR 0 11
6591: PUSH
6592: LD_INT 1
6594: ARRAY
6595: PUSH
6596: LD_INT 1
6598: PLUS
6599: PUSH
6600: LD_VAR 0 2
6604: GREATER
6605: IFFALSE 6630
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6607: LD_ADDR_VAR 0 11
6611: PUSH
6612: LD_VAR 0 11
6616: PPUSH
6617: LD_INT 1
6619: PPUSH
6620: LD_INT 1
6622: PPUSH
6623: CALL_OW 1
6627: ST_TO_ADDR
6628: GO 6661
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
6630: LD_ADDR_VAR 0 11
6634: PUSH
6635: LD_VAR 0 11
6639: PPUSH
6640: LD_INT 1
6642: PPUSH
6643: LD_VAR 0 11
6647: PUSH
6648: LD_INT 1
6650: ARRAY
6651: PUSH
6652: LD_INT 1
6654: PLUS
6655: PPUSH
6656: CALL_OW 1
6660: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
6661: LD_ADDR_VAR 0 11
6665: PUSH
6666: LD_VAR 0 11
6670: PPUSH
6671: LD_INT 2
6673: PPUSH
6674: LD_VAR 0 2
6678: PUSH
6679: LD_VAR 0 11
6683: PUSH
6684: LD_INT 1
6686: ARRAY
6687: ARRAY
6688: PPUSH
6689: CALL_OW 1
6693: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
6694: LD_VAR 0 1
6698: PPUSH
6699: LD_VAR 0 11
6703: PUSH
6704: LD_INT 2
6706: ARRAY
6707: PUSH
6708: LD_INT 1
6710: ARRAY
6711: PPUSH
6712: LD_VAR 0 11
6716: PUSH
6717: LD_INT 2
6719: ARRAY
6720: PUSH
6721: LD_INT 2
6723: ARRAY
6724: PPUSH
6725: CALL_OW 114
// end ; end ; end ; if status = 2 then
6729: LD_VAR 0 12
6733: PUSH
6734: LD_INT 2
6736: EQUAL
6737: IFFALSE 6958
// begin if GetLives ( unit ) < 650 and safe_place then
6739: LD_VAR 0 1
6743: PPUSH
6744: CALL_OW 256
6748: PUSH
6749: LD_INT 650
6751: LESS
6752: PUSH
6753: LD_VAR 0 16
6757: AND
6758: IFFALSE 6770
// begin status = 3 ;
6760: LD_ADDR_VAR 0 12
6764: PUSH
6765: LD_INT 3
6767: ST_TO_ADDR
// continue ;
6768: GO 6188
// end ; x := GetRememberedX ( unit ) ;
6770: LD_ADDR_VAR 0 6
6774: PUSH
6775: LD_VAR 0 1
6779: PPUSH
6780: CALL_OW 252
6784: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
6785: LD_ADDR_VAR 0 7
6789: PUSH
6790: LD_VAR 0 1
6794: PPUSH
6795: CALL_OW 253
6799: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
6800: LD_ADDR_VAR 0 13
6804: PUSH
6805: LD_INT 81
6807: PUSH
6808: LD_VAR 0 1
6812: PPUSH
6813: CALL_OW 255
6817: PUSH
6818: EMPTY
6819: LIST
6820: LIST
6821: PUSH
6822: LD_INT 92
6824: PUSH
6825: LD_VAR 0 6
6829: PUSH
6830: LD_VAR 0 7
6834: PUSH
6835: LD_VAR 0 15
6839: PUSH
6840: EMPTY
6841: LIST
6842: LIST
6843: LIST
6844: LIST
6845: PUSH
6846: LD_INT 101
6848: PUSH
6849: LD_INT 1
6851: PUSH
6852: EMPTY
6853: LIST
6854: LIST
6855: PUSH
6856: EMPTY
6857: LIST
6858: LIST
6859: LIST
6860: PPUSH
6861: CALL_OW 69
6865: ST_TO_ADDR
// if enemy then
6866: LD_VAR 0 13
6870: IFFALSE 6941
// begin e := NearestUnitToUnit ( enemy , unit ) ;
6872: LD_ADDR_VAR 0 14
6876: PUSH
6877: LD_VAR 0 13
6881: PPUSH
6882: LD_VAR 0 1
6886: PPUSH
6887: CALL_OW 74
6891: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
6892: LD_VAR 0 14
6896: PPUSH
6897: LD_VAR 0 6
6901: PPUSH
6902: LD_VAR 0 7
6906: PPUSH
6907: CALL_OW 297
6911: PUSH
6912: LD_VAR 0 15
6916: PUSH
6917: LD_VAR 0 17
6921: PLUS
6922: LESS
6923: IFFALSE 6939
// ComAttackUnit ( unit , e ) ;
6925: LD_VAR 0 1
6929: PPUSH
6930: LD_VAR 0 14
6934: PPUSH
6935: CALL_OW 115
// end else
6939: GO 6958
// begin ComStop ( unit ) ;
6941: LD_VAR 0 1
6945: PPUSH
6946: CALL_OW 141
// status = 5 ;
6950: LD_ADDR_VAR 0 12
6954: PUSH
6955: LD_INT 5
6957: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
6958: LD_VAR 0 12
6962: PUSH
6963: LD_INT 3
6965: EQUAL
6966: PUSH
6967: LD_VAR 0 16
6971: AND
6972: IFFALSE 7058
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
6974: LD_VAR 0 1
6978: PPUSH
6979: LD_VAR 0 16
6983: PUSH
6984: LD_INT 1
6986: ARRAY
6987: PPUSH
6988: LD_VAR 0 16
6992: PUSH
6993: LD_INT 2
6995: ARRAY
6996: PPUSH
6997: CALL_OW 111
// wait ( 0 0$1 ) ;
7001: LD_INT 35
7003: PPUSH
7004: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7008: LD_VAR 0 1
7012: PPUSH
7013: LD_VAR 0 16
7017: PUSH
7018: LD_INT 1
7020: ARRAY
7021: PPUSH
7022: LD_VAR 0 16
7026: PUSH
7027: LD_INT 2
7029: ARRAY
7030: PPUSH
7031: CALL_OW 297
7035: PUSH
7036: LD_INT 4
7038: LESS
7039: IFFALSE 6974
// ComStop ( unit ) ;
7041: LD_VAR 0 1
7045: PPUSH
7046: CALL_OW 141
// status = 4 ;
7050: LD_ADDR_VAR 0 12
7054: PUSH
7055: LD_INT 4
7057: ST_TO_ADDR
// end ; if status = 4 then
7058: LD_VAR 0 12
7062: PUSH
7063: LD_INT 4
7065: EQUAL
7066: IFFALSE 7098
// begin repeat wait ( 0 0$1 ) ;
7068: LD_INT 35
7070: PPUSH
7071: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7075: LD_VAR 0 1
7079: PPUSH
7080: CALL_OW 256
7084: PUSH
7085: LD_INT 1000
7087: EQUAL
7088: IFFALSE 7068
// status = 5 ;
7090: LD_ADDR_VAR 0 12
7094: PUSH
7095: LD_INT 5
7097: ST_TO_ADDR
// end ; if status = 5 then
7098: LD_VAR 0 12
7102: PUSH
7103: LD_INT 5
7105: EQUAL
7106: IFFALSE 7388
// begin p := 999 ;
7108: LD_ADDR_VAR 0 9
7112: PUSH
7113: LD_INT 999
7115: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7116: LD_ADDR_VAR 0 14
7120: PUSH
7121: LD_VAR 0 11
7125: PUSH
7126: LD_INT 2
7128: ARRAY
7129: PUSH
7130: LD_INT 1
7132: ARRAY
7133: PUSH
7134: LD_VAR 0 11
7138: PUSH
7139: LD_INT 2
7141: ARRAY
7142: PUSH
7143: LD_INT 2
7145: ARRAY
7146: PUSH
7147: EMPTY
7148: LIST
7149: LIST
7150: ST_TO_ADDR
// c := 1 ;
7151: LD_ADDR_VAR 0 8
7155: PUSH
7156: LD_INT 1
7158: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7159: LD_ADDR_VAR 0 5
7163: PUSH
7164: DOUBLE
7165: LD_INT 1
7167: DEC
7168: ST_TO_ADDR
7169: LD_VAR 0 11
7173: PUSH
7174: LD_INT 2
7176: ARRAY
7177: PUSH
7178: LD_INT 2
7180: DIV
7181: PUSH
7182: FOR_TO
7183: IFFALSE 7315
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7185: LD_ADDR_VAR 0 6
7189: PUSH
7190: LD_VAR 0 1
7194: PPUSH
7195: LD_VAR 0 11
7199: PUSH
7200: LD_INT 2
7202: ARRAY
7203: PUSH
7204: LD_VAR 0 8
7208: ARRAY
7209: PPUSH
7210: LD_VAR 0 11
7214: PUSH
7215: LD_INT 2
7217: ARRAY
7218: PUSH
7219: LD_VAR 0 8
7223: PUSH
7224: LD_INT 1
7226: PLUS
7227: ARRAY
7228: PPUSH
7229: CALL_OW 297
7233: ST_TO_ADDR
// if x < p then
7234: LD_VAR 0 6
7238: PUSH
7239: LD_VAR 0 9
7243: LESS
7244: IFFALSE 7299
// begin p := x ;
7246: LD_ADDR_VAR 0 9
7250: PUSH
7251: LD_VAR 0 6
7255: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7256: LD_ADDR_VAR 0 14
7260: PUSH
7261: LD_VAR 0 11
7265: PUSH
7266: LD_INT 2
7268: ARRAY
7269: PUSH
7270: LD_VAR 0 8
7274: ARRAY
7275: PUSH
7276: LD_VAR 0 11
7280: PUSH
7281: LD_INT 2
7283: ARRAY
7284: PUSH
7285: LD_VAR 0 8
7289: PUSH
7290: LD_INT 1
7292: PLUS
7293: ARRAY
7294: PUSH
7295: EMPTY
7296: LIST
7297: LIST
7298: ST_TO_ADDR
// end ; c = c + 2 ;
7299: LD_ADDR_VAR 0 8
7303: PUSH
7304: LD_VAR 0 8
7308: PUSH
7309: LD_INT 2
7311: PLUS
7312: ST_TO_ADDR
// end ;
7313: GO 7182
7315: POP
7316: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7317: LD_VAR 0 1
7321: PPUSH
7322: LD_VAR 0 14
7326: PUSH
7327: LD_INT 1
7329: ARRAY
7330: PPUSH
7331: LD_VAR 0 14
7335: PUSH
7336: LD_INT 2
7338: ARRAY
7339: PPUSH
7340: CALL_OW 111
// wait ( 0 0$1 ) ;
7344: LD_INT 35
7346: PPUSH
7347: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7351: LD_VAR 0 1
7355: PPUSH
7356: LD_VAR 0 14
7360: PUSH
7361: LD_INT 1
7363: ARRAY
7364: PPUSH
7365: LD_VAR 0 14
7369: PUSH
7370: LD_INT 2
7372: ARRAY
7373: PPUSH
7374: CALL_OW 307
7378: IFFALSE 7317
// status = 1 ;
7380: LD_ADDR_VAR 0 12
7384: PUSH
7385: LD_INT 1
7387: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7388: LD_VAR 0 1
7392: PPUSH
7393: CALL_OW 301
7397: IFFALSE 6188
// end ;
7399: LD_VAR 0 4
7403: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7404: LD_INT 0
7406: PPUSH
7407: PPUSH
7408: PPUSH
7409: PPUSH
7410: PPUSH
7411: PPUSH
7412: PPUSH
7413: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7414: LD_VAR 0 1
7418: NOT
7419: PUSH
7420: LD_VAR 0 3
7424: NOT
7425: OR
7426: PUSH
7427: LD_VAR 0 4
7431: PUSH
7432: LD_INT 1
7434: PUSH
7435: LD_INT 2
7437: PUSH
7438: LD_INT 0
7440: PUSH
7441: EMPTY
7442: LIST
7443: LIST
7444: LIST
7445: IN
7446: NOT
7447: OR
7448: PUSH
7449: LD_VAR 0 6
7453: NOT
7454: OR
7455: PUSH
7456: LD_VAR 0 7
7460: NOT
7461: OR
7462: IFFALSE 7466
// exit ;
7464: GO 7857
// sex_id :=  ;
7466: LD_ADDR_VAR 0 14
7470: PUSH
7471: LD_STRING 
7473: ST_TO_ADDR
// case class of 1 :
7474: LD_VAR 0 5
7478: PUSH
7479: LD_INT 1
7481: DOUBLE
7482: EQUAL
7483: IFTRUE 7487
7485: GO 7498
7487: POP
// class_id := Sol ; 2 :
7488: LD_ADDR_VAR 0 15
7492: PUSH
7493: LD_STRING Sol
7495: ST_TO_ADDR
7496: GO 7556
7498: LD_INT 2
7500: DOUBLE
7501: EQUAL
7502: IFTRUE 7506
7504: GO 7517
7506: POP
// class_id := Eng ; 3 :
7507: LD_ADDR_VAR 0 15
7511: PUSH
7512: LD_STRING Eng
7514: ST_TO_ADDR
7515: GO 7556
7517: LD_INT 3
7519: DOUBLE
7520: EQUAL
7521: IFTRUE 7525
7523: GO 7536
7525: POP
// class_id := Mech ; 4 :
7526: LD_ADDR_VAR 0 15
7530: PUSH
7531: LD_STRING Mech
7533: ST_TO_ADDR
7534: GO 7556
7536: LD_INT 4
7538: DOUBLE
7539: EQUAL
7540: IFTRUE 7544
7542: GO 7555
7544: POP
// class_id := Sci ; end ;
7545: LD_ADDR_VAR 0 15
7549: PUSH
7550: LD_STRING Sci
7552: ST_TO_ADDR
7553: GO 7556
7555: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7556: LD_ADDR_VAR 0 11
7560: PUSH
7561: LD_VAR 0 1
7565: PPUSH
7566: LD_INT 25
7568: PUSH
7569: LD_VAR 0 5
7573: PUSH
7574: EMPTY
7575: LIST
7576: LIST
7577: PPUSH
7578: CALL_OW 72
7582: ST_TO_ADDR
// if tmp then
7583: LD_VAR 0 11
7587: IFFALSE 7599
// units := tmp ;
7589: LD_ADDR_VAR 0 1
7593: PUSH
7594: LD_VAR 0 11
7598: ST_TO_ADDR
// if sex then
7599: LD_VAR 0 4
7603: IFFALSE 7659
// begin if sex = sex_female then
7605: LD_VAR 0 4
7609: PUSH
7610: LD_INT 2
7612: EQUAL
7613: IFFALSE 7623
// sex_id := F ;
7615: LD_ADDR_VAR 0 14
7619: PUSH
7620: LD_STRING F
7622: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7623: LD_ADDR_VAR 0 1
7627: PUSH
7628: LD_VAR 0 1
7632: PPUSH
7633: LD_INT 26
7635: PUSH
7636: LD_VAR 0 4
7640: PUSH
7641: EMPTY
7642: LIST
7643: LIST
7644: PPUSH
7645: CALL_OW 72
7649: ST_TO_ADDR
// if not units then
7650: LD_VAR 0 1
7654: NOT
7655: IFFALSE 7659
// exit ;
7657: GO 7857
// end ; unit_id := id ;
7659: LD_ADDR_VAR 0 12
7663: PUSH
7664: LD_VAR 0 6
7668: ST_TO_ADDR
// if unit_id > units then
7669: LD_VAR 0 12
7673: PUSH
7674: LD_VAR 0 1
7678: GREATER
7679: IFFALSE 7689
// unit_id := 1 ;
7681: LD_ADDR_VAR 0 12
7685: PUSH
7686: LD_INT 1
7688: ST_TO_ADDR
// if not units [ unit_id ] then
7689: LD_VAR 0 1
7693: PUSH
7694: LD_VAR 0 12
7698: ARRAY
7699: NOT
7700: IFFALSE 7704
// exit ;
7702: GO 7857
// unit := units [ unit_id ] ;
7704: LD_ADDR_VAR 0 10
7708: PUSH
7709: LD_VAR 0 1
7713: PUSH
7714: LD_VAR 0 12
7718: ARRAY
7719: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
7720: LD_ADDR_VAR 0 13
7724: PUSH
7725: LD_STRING D
7727: PUSH
7728: LD_VAR 0 3
7732: STR
7733: PUSH
7734: LD_STRING -
7736: STR
7737: PUSH
7738: LD_VAR 0 14
7742: STR
7743: PUSH
7744: LD_VAR 0 15
7748: STR
7749: PUSH
7750: LD_VAR 0 6
7754: STR
7755: PUSH
7756: LD_STRING -
7758: STR
7759: PUSH
7760: LD_VAR 0 7
7764: STR
7765: ST_TO_ADDR
// case type of 0 :
7766: LD_VAR 0 2
7770: PUSH
7771: LD_INT 0
7773: DOUBLE
7774: EQUAL
7775: IFTRUE 7779
7777: GO 7796
7779: POP
// Say ( unit , dialog_id ) ; 1 :
7780: LD_VAR 0 10
7784: PPUSH
7785: LD_VAR 0 13
7789: PPUSH
7790: CALL_OW 88
7794: GO 7847
7796: LD_INT 1
7798: DOUBLE
7799: EQUAL
7800: IFTRUE 7804
7802: GO 7821
7804: POP
// SayRadio ( unit , dialog_id ) ; 2 :
7805: LD_VAR 0 10
7809: PPUSH
7810: LD_VAR 0 13
7814: PPUSH
7815: CALL_OW 94
7819: GO 7847
7821: LD_INT 2
7823: DOUBLE
7824: EQUAL
7825: IFTRUE 7829
7827: GO 7846
7829: POP
// ForceSay ( unit , dialog_id ) ; end ;
7830: LD_VAR 0 10
7834: PPUSH
7835: LD_VAR 0 13
7839: PPUSH
7840: CALL_OW 91
7844: GO 7847
7846: POP
// result := unit ;
7847: LD_ADDR_VAR 0 8
7851: PUSH
7852: LD_VAR 0 10
7856: ST_TO_ADDR
// end ;
7857: LD_VAR 0 8
7861: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
7862: LD_INT 0
7864: PPUSH
7865: PPUSH
7866: PPUSH
7867: PPUSH
7868: PPUSH
7869: PPUSH
7870: PPUSH
// result := array ;
7871: LD_ADDR_VAR 0 5
7875: PUSH
7876: LD_VAR 0 1
7880: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
7881: LD_VAR 0 1
7885: NOT
7886: PUSH
7887: LD_VAR 0 2
7891: NOT
7892: OR
7893: PUSH
7894: LD_VAR 0 3
7898: NOT
7899: OR
7900: PUSH
7901: LD_VAR 0 2
7905: PUSH
7906: LD_VAR 0 1
7910: GREATER
7911: OR
7912: PUSH
7913: LD_VAR 0 3
7917: PUSH
7918: LD_VAR 0 1
7922: GREATER
7923: OR
7924: IFFALSE 7928
// exit ;
7926: GO 8224
// if direction then
7928: LD_VAR 0 4
7932: IFFALSE 7996
// begin d := 1 ;
7934: LD_ADDR_VAR 0 9
7938: PUSH
7939: LD_INT 1
7941: ST_TO_ADDR
// if i_from > i_to then
7942: LD_VAR 0 2
7946: PUSH
7947: LD_VAR 0 3
7951: GREATER
7952: IFFALSE 7978
// length := ( array - i_from ) + i_to else
7954: LD_ADDR_VAR 0 11
7958: PUSH
7959: LD_VAR 0 1
7963: PUSH
7964: LD_VAR 0 2
7968: MINUS
7969: PUSH
7970: LD_VAR 0 3
7974: PLUS
7975: ST_TO_ADDR
7976: GO 7994
// length := i_to - i_from ;
7978: LD_ADDR_VAR 0 11
7982: PUSH
7983: LD_VAR 0 3
7987: PUSH
7988: LD_VAR 0 2
7992: MINUS
7993: ST_TO_ADDR
// end else
7994: GO 8057
// begin d := - 1 ;
7996: LD_ADDR_VAR 0 9
8000: PUSH
8001: LD_INT 1
8003: NEG
8004: ST_TO_ADDR
// if i_from > i_to then
8005: LD_VAR 0 2
8009: PUSH
8010: LD_VAR 0 3
8014: GREATER
8015: IFFALSE 8035
// length := i_from - i_to else
8017: LD_ADDR_VAR 0 11
8021: PUSH
8022: LD_VAR 0 2
8026: PUSH
8027: LD_VAR 0 3
8031: MINUS
8032: ST_TO_ADDR
8033: GO 8057
// length := ( array - i_to ) + i_from ;
8035: LD_ADDR_VAR 0 11
8039: PUSH
8040: LD_VAR 0 1
8044: PUSH
8045: LD_VAR 0 3
8049: MINUS
8050: PUSH
8051: LD_VAR 0 2
8055: PLUS
8056: ST_TO_ADDR
// end ; if not length then
8057: LD_VAR 0 11
8061: NOT
8062: IFFALSE 8066
// exit ;
8064: GO 8224
// tmp := array ;
8066: LD_ADDR_VAR 0 10
8070: PUSH
8071: LD_VAR 0 1
8075: ST_TO_ADDR
// for i = 1 to length do
8076: LD_ADDR_VAR 0 6
8080: PUSH
8081: DOUBLE
8082: LD_INT 1
8084: DEC
8085: ST_TO_ADDR
8086: LD_VAR 0 11
8090: PUSH
8091: FOR_TO
8092: IFFALSE 8212
// begin for j = 1 to array do
8094: LD_ADDR_VAR 0 7
8098: PUSH
8099: DOUBLE
8100: LD_INT 1
8102: DEC
8103: ST_TO_ADDR
8104: LD_VAR 0 1
8108: PUSH
8109: FOR_TO
8110: IFFALSE 8198
// begin k := j + d ;
8112: LD_ADDR_VAR 0 8
8116: PUSH
8117: LD_VAR 0 7
8121: PUSH
8122: LD_VAR 0 9
8126: PLUS
8127: ST_TO_ADDR
// if k > array then
8128: LD_VAR 0 8
8132: PUSH
8133: LD_VAR 0 1
8137: GREATER
8138: IFFALSE 8148
// k := 1 ;
8140: LD_ADDR_VAR 0 8
8144: PUSH
8145: LD_INT 1
8147: ST_TO_ADDR
// if not k then
8148: LD_VAR 0 8
8152: NOT
8153: IFFALSE 8165
// k := array ;
8155: LD_ADDR_VAR 0 8
8159: PUSH
8160: LD_VAR 0 1
8164: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8165: LD_ADDR_VAR 0 10
8169: PUSH
8170: LD_VAR 0 10
8174: PPUSH
8175: LD_VAR 0 8
8179: PPUSH
8180: LD_VAR 0 1
8184: PUSH
8185: LD_VAR 0 7
8189: ARRAY
8190: PPUSH
8191: CALL_OW 1
8195: ST_TO_ADDR
// end ;
8196: GO 8109
8198: POP
8199: POP
// array := tmp ;
8200: LD_ADDR_VAR 0 1
8204: PUSH
8205: LD_VAR 0 10
8209: ST_TO_ADDR
// end ;
8210: GO 8091
8212: POP
8213: POP
// result := array ;
8214: LD_ADDR_VAR 0 5
8218: PUSH
8219: LD_VAR 0 1
8223: ST_TO_ADDR
// end ;
8224: LD_VAR 0 5
8228: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8229: LD_INT 0
8231: PPUSH
8232: PPUSH
8233: PPUSH
8234: PPUSH
8235: PPUSH
8236: PPUSH
8237: PPUSH
8238: PPUSH
8239: PPUSH
8240: PPUSH
8241: PPUSH
8242: PPUSH
8243: PPUSH
8244: PPUSH
8245: PPUSH
8246: PPUSH
8247: PPUSH
8248: PPUSH
8249: PPUSH
8250: PPUSH
8251: PPUSH
8252: PPUSH
8253: PPUSH
8254: PPUSH
8255: PPUSH
8256: PPUSH
8257: PPUSH
8258: PPUSH
8259: PPUSH
8260: PPUSH
8261: PPUSH
8262: PPUSH
8263: PPUSH
8264: PPUSH
8265: PPUSH
8266: PPUSH
8267: PPUSH
8268: PPUSH
8269: PPUSH
8270: PPUSH
8271: PPUSH
8272: PPUSH
8273: PPUSH
8274: PPUSH
8275: PPUSH
8276: PPUSH
8277: PPUSH
8278: PPUSH
8279: PPUSH
8280: PPUSH
8281: PPUSH
8282: PPUSH
8283: PPUSH
8284: PPUSH
8285: PPUSH
8286: PPUSH
8287: PPUSH
8288: PPUSH
// result = [ ] ;
8289: LD_ADDR_VAR 0 7
8293: PUSH
8294: EMPTY
8295: ST_TO_ADDR
// temp_list = [ ] ;
8296: LD_ADDR_VAR 0 9
8300: PUSH
8301: EMPTY
8302: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8303: LD_VAR 0 4
8307: PUSH
8308: LD_INT 0
8310: PUSH
8311: LD_INT 1
8313: PUSH
8314: LD_INT 2
8316: PUSH
8317: LD_INT 3
8319: PUSH
8320: LD_INT 4
8322: PUSH
8323: LD_INT 5
8325: PUSH
8326: EMPTY
8327: LIST
8328: LIST
8329: LIST
8330: LIST
8331: LIST
8332: LIST
8333: IN
8334: NOT
8335: PUSH
8336: LD_VAR 0 1
8340: PUSH
8341: LD_INT 0
8343: PUSH
8344: LD_INT 1
8346: PUSH
8347: EMPTY
8348: LIST
8349: LIST
8350: IN
8351: PUSH
8352: LD_VAR 0 5
8356: PUSH
8357: LD_INT 1
8359: PUSH
8360: LD_INT 2
8362: PUSH
8363: LD_INT 3
8365: PUSH
8366: EMPTY
8367: LIST
8368: LIST
8369: LIST
8370: IN
8371: NOT
8372: AND
8373: OR
8374: IFFALSE 8378
// exit ;
8376: GO 26763
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8378: LD_VAR 0 1
8382: PUSH
8383: LD_INT 6
8385: PUSH
8386: LD_INT 7
8388: PUSH
8389: LD_INT 8
8391: PUSH
8392: LD_INT 13
8394: PUSH
8395: LD_INT 12
8397: PUSH
8398: LD_INT 15
8400: PUSH
8401: LD_INT 11
8403: PUSH
8404: LD_INT 14
8406: PUSH
8407: LD_INT 10
8409: PUSH
8410: EMPTY
8411: LIST
8412: LIST
8413: LIST
8414: LIST
8415: LIST
8416: LIST
8417: LIST
8418: LIST
8419: LIST
8420: IN
8421: IFFALSE 8431
// btype = b_lab ;
8423: LD_ADDR_VAR 0 1
8427: PUSH
8428: LD_INT 6
8430: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8431: LD_VAR 0 6
8435: PUSH
8436: LD_INT 0
8438: PUSH
8439: LD_INT 1
8441: PUSH
8442: LD_INT 2
8444: PUSH
8445: EMPTY
8446: LIST
8447: LIST
8448: LIST
8449: IN
8450: NOT
8451: PUSH
8452: LD_VAR 0 1
8456: PUSH
8457: LD_INT 0
8459: PUSH
8460: LD_INT 1
8462: PUSH
8463: LD_INT 2
8465: PUSH
8466: LD_INT 3
8468: PUSH
8469: LD_INT 6
8471: PUSH
8472: LD_INT 36
8474: PUSH
8475: LD_INT 4
8477: PUSH
8478: LD_INT 5
8480: PUSH
8481: LD_INT 31
8483: PUSH
8484: LD_INT 32
8486: PUSH
8487: LD_INT 33
8489: PUSH
8490: EMPTY
8491: LIST
8492: LIST
8493: LIST
8494: LIST
8495: LIST
8496: LIST
8497: LIST
8498: LIST
8499: LIST
8500: LIST
8501: LIST
8502: IN
8503: NOT
8504: PUSH
8505: LD_VAR 0 6
8509: PUSH
8510: LD_INT 1
8512: EQUAL
8513: AND
8514: OR
8515: PUSH
8516: LD_VAR 0 1
8520: PUSH
8521: LD_INT 2
8523: PUSH
8524: LD_INT 3
8526: PUSH
8527: EMPTY
8528: LIST
8529: LIST
8530: IN
8531: NOT
8532: PUSH
8533: LD_VAR 0 6
8537: PUSH
8538: LD_INT 2
8540: EQUAL
8541: AND
8542: OR
8543: IFFALSE 8553
// mode = 0 ;
8545: LD_ADDR_VAR 0 6
8549: PUSH
8550: LD_INT 0
8552: ST_TO_ADDR
// case mode of 0 :
8553: LD_VAR 0 6
8557: PUSH
8558: LD_INT 0
8560: DOUBLE
8561: EQUAL
8562: IFTRUE 8566
8564: GO 20019
8566: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8567: LD_ADDR_VAR 0 11
8571: PUSH
8572: LD_INT 0
8574: PUSH
8575: LD_INT 0
8577: PUSH
8578: EMPTY
8579: LIST
8580: LIST
8581: PUSH
8582: LD_INT 0
8584: PUSH
8585: LD_INT 1
8587: NEG
8588: PUSH
8589: EMPTY
8590: LIST
8591: LIST
8592: PUSH
8593: LD_INT 1
8595: PUSH
8596: LD_INT 0
8598: PUSH
8599: EMPTY
8600: LIST
8601: LIST
8602: PUSH
8603: LD_INT 1
8605: PUSH
8606: LD_INT 1
8608: PUSH
8609: EMPTY
8610: LIST
8611: LIST
8612: PUSH
8613: LD_INT 0
8615: PUSH
8616: LD_INT 1
8618: PUSH
8619: EMPTY
8620: LIST
8621: LIST
8622: PUSH
8623: LD_INT 1
8625: NEG
8626: PUSH
8627: LD_INT 0
8629: PUSH
8630: EMPTY
8631: LIST
8632: LIST
8633: PUSH
8634: LD_INT 1
8636: NEG
8637: PUSH
8638: LD_INT 1
8640: NEG
8641: PUSH
8642: EMPTY
8643: LIST
8644: LIST
8645: PUSH
8646: LD_INT 1
8648: NEG
8649: PUSH
8650: LD_INT 2
8652: NEG
8653: PUSH
8654: EMPTY
8655: LIST
8656: LIST
8657: PUSH
8658: LD_INT 0
8660: PUSH
8661: LD_INT 2
8663: NEG
8664: PUSH
8665: EMPTY
8666: LIST
8667: LIST
8668: PUSH
8669: LD_INT 1
8671: PUSH
8672: LD_INT 1
8674: NEG
8675: PUSH
8676: EMPTY
8677: LIST
8678: LIST
8679: PUSH
8680: LD_INT 1
8682: PUSH
8683: LD_INT 2
8685: PUSH
8686: EMPTY
8687: LIST
8688: LIST
8689: PUSH
8690: LD_INT 0
8692: PUSH
8693: LD_INT 2
8695: PUSH
8696: EMPTY
8697: LIST
8698: LIST
8699: PUSH
8700: LD_INT 1
8702: NEG
8703: PUSH
8704: LD_INT 1
8706: PUSH
8707: EMPTY
8708: LIST
8709: LIST
8710: PUSH
8711: LD_INT 1
8713: PUSH
8714: LD_INT 3
8716: PUSH
8717: EMPTY
8718: LIST
8719: LIST
8720: PUSH
8721: LD_INT 0
8723: PUSH
8724: LD_INT 3
8726: PUSH
8727: EMPTY
8728: LIST
8729: LIST
8730: PUSH
8731: LD_INT 1
8733: NEG
8734: PUSH
8735: LD_INT 2
8737: PUSH
8738: EMPTY
8739: LIST
8740: LIST
8741: PUSH
8742: EMPTY
8743: LIST
8744: LIST
8745: LIST
8746: LIST
8747: LIST
8748: LIST
8749: LIST
8750: LIST
8751: LIST
8752: LIST
8753: LIST
8754: LIST
8755: LIST
8756: LIST
8757: LIST
8758: LIST
8759: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
8760: LD_ADDR_VAR 0 12
8764: PUSH
8765: LD_INT 0
8767: PUSH
8768: LD_INT 0
8770: PUSH
8771: EMPTY
8772: LIST
8773: LIST
8774: PUSH
8775: LD_INT 0
8777: PUSH
8778: LD_INT 1
8780: NEG
8781: PUSH
8782: EMPTY
8783: LIST
8784: LIST
8785: PUSH
8786: LD_INT 1
8788: PUSH
8789: LD_INT 0
8791: PUSH
8792: EMPTY
8793: LIST
8794: LIST
8795: PUSH
8796: LD_INT 1
8798: PUSH
8799: LD_INT 1
8801: PUSH
8802: EMPTY
8803: LIST
8804: LIST
8805: PUSH
8806: LD_INT 0
8808: PUSH
8809: LD_INT 1
8811: PUSH
8812: EMPTY
8813: LIST
8814: LIST
8815: PUSH
8816: LD_INT 1
8818: NEG
8819: PUSH
8820: LD_INT 0
8822: PUSH
8823: EMPTY
8824: LIST
8825: LIST
8826: PUSH
8827: LD_INT 1
8829: NEG
8830: PUSH
8831: LD_INT 1
8833: NEG
8834: PUSH
8835: EMPTY
8836: LIST
8837: LIST
8838: PUSH
8839: LD_INT 1
8841: PUSH
8842: LD_INT 1
8844: NEG
8845: PUSH
8846: EMPTY
8847: LIST
8848: LIST
8849: PUSH
8850: LD_INT 2
8852: PUSH
8853: LD_INT 0
8855: PUSH
8856: EMPTY
8857: LIST
8858: LIST
8859: PUSH
8860: LD_INT 2
8862: PUSH
8863: LD_INT 1
8865: PUSH
8866: EMPTY
8867: LIST
8868: LIST
8869: PUSH
8870: LD_INT 1
8872: NEG
8873: PUSH
8874: LD_INT 1
8876: PUSH
8877: EMPTY
8878: LIST
8879: LIST
8880: PUSH
8881: LD_INT 2
8883: NEG
8884: PUSH
8885: LD_INT 0
8887: PUSH
8888: EMPTY
8889: LIST
8890: LIST
8891: PUSH
8892: LD_INT 2
8894: NEG
8895: PUSH
8896: LD_INT 1
8898: NEG
8899: PUSH
8900: EMPTY
8901: LIST
8902: LIST
8903: PUSH
8904: LD_INT 2
8906: NEG
8907: PUSH
8908: LD_INT 1
8910: PUSH
8911: EMPTY
8912: LIST
8913: LIST
8914: PUSH
8915: LD_INT 3
8917: NEG
8918: PUSH
8919: LD_INT 0
8921: PUSH
8922: EMPTY
8923: LIST
8924: LIST
8925: PUSH
8926: LD_INT 3
8928: NEG
8929: PUSH
8930: LD_INT 1
8932: NEG
8933: PUSH
8934: EMPTY
8935: LIST
8936: LIST
8937: PUSH
8938: EMPTY
8939: LIST
8940: LIST
8941: LIST
8942: LIST
8943: LIST
8944: LIST
8945: LIST
8946: LIST
8947: LIST
8948: LIST
8949: LIST
8950: LIST
8951: LIST
8952: LIST
8953: LIST
8954: LIST
8955: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
8956: LD_ADDR_VAR 0 13
8960: PUSH
8961: LD_INT 0
8963: PUSH
8964: LD_INT 0
8966: PUSH
8967: EMPTY
8968: LIST
8969: LIST
8970: PUSH
8971: LD_INT 0
8973: PUSH
8974: LD_INT 1
8976: NEG
8977: PUSH
8978: EMPTY
8979: LIST
8980: LIST
8981: PUSH
8982: LD_INT 1
8984: PUSH
8985: LD_INT 0
8987: PUSH
8988: EMPTY
8989: LIST
8990: LIST
8991: PUSH
8992: LD_INT 1
8994: PUSH
8995: LD_INT 1
8997: PUSH
8998: EMPTY
8999: LIST
9000: LIST
9001: PUSH
9002: LD_INT 0
9004: PUSH
9005: LD_INT 1
9007: PUSH
9008: EMPTY
9009: LIST
9010: LIST
9011: PUSH
9012: LD_INT 1
9014: NEG
9015: PUSH
9016: LD_INT 0
9018: PUSH
9019: EMPTY
9020: LIST
9021: LIST
9022: PUSH
9023: LD_INT 1
9025: NEG
9026: PUSH
9027: LD_INT 1
9029: NEG
9030: PUSH
9031: EMPTY
9032: LIST
9033: LIST
9034: PUSH
9035: LD_INT 1
9037: NEG
9038: PUSH
9039: LD_INT 2
9041: NEG
9042: PUSH
9043: EMPTY
9044: LIST
9045: LIST
9046: PUSH
9047: LD_INT 2
9049: PUSH
9050: LD_INT 1
9052: PUSH
9053: EMPTY
9054: LIST
9055: LIST
9056: PUSH
9057: LD_INT 2
9059: PUSH
9060: LD_INT 2
9062: PUSH
9063: EMPTY
9064: LIST
9065: LIST
9066: PUSH
9067: LD_INT 1
9069: PUSH
9070: LD_INT 2
9072: PUSH
9073: EMPTY
9074: LIST
9075: LIST
9076: PUSH
9077: LD_INT 2
9079: NEG
9080: PUSH
9081: LD_INT 1
9083: NEG
9084: PUSH
9085: EMPTY
9086: LIST
9087: LIST
9088: PUSH
9089: LD_INT 2
9091: NEG
9092: PUSH
9093: LD_INT 2
9095: NEG
9096: PUSH
9097: EMPTY
9098: LIST
9099: LIST
9100: PUSH
9101: LD_INT 2
9103: NEG
9104: PUSH
9105: LD_INT 3
9107: NEG
9108: PUSH
9109: EMPTY
9110: LIST
9111: LIST
9112: PUSH
9113: LD_INT 3
9115: NEG
9116: PUSH
9117: LD_INT 2
9119: NEG
9120: PUSH
9121: EMPTY
9122: LIST
9123: LIST
9124: PUSH
9125: LD_INT 3
9127: NEG
9128: PUSH
9129: LD_INT 3
9131: NEG
9132: PUSH
9133: EMPTY
9134: LIST
9135: LIST
9136: PUSH
9137: EMPTY
9138: LIST
9139: LIST
9140: LIST
9141: LIST
9142: LIST
9143: LIST
9144: LIST
9145: LIST
9146: LIST
9147: LIST
9148: LIST
9149: LIST
9150: LIST
9151: LIST
9152: LIST
9153: LIST
9154: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9155: LD_ADDR_VAR 0 14
9159: PUSH
9160: LD_INT 0
9162: PUSH
9163: LD_INT 0
9165: PUSH
9166: EMPTY
9167: LIST
9168: LIST
9169: PUSH
9170: LD_INT 0
9172: PUSH
9173: LD_INT 1
9175: NEG
9176: PUSH
9177: EMPTY
9178: LIST
9179: LIST
9180: PUSH
9181: LD_INT 1
9183: PUSH
9184: LD_INT 0
9186: PUSH
9187: EMPTY
9188: LIST
9189: LIST
9190: PUSH
9191: LD_INT 1
9193: PUSH
9194: LD_INT 1
9196: PUSH
9197: EMPTY
9198: LIST
9199: LIST
9200: PUSH
9201: LD_INT 0
9203: PUSH
9204: LD_INT 1
9206: PUSH
9207: EMPTY
9208: LIST
9209: LIST
9210: PUSH
9211: LD_INT 1
9213: NEG
9214: PUSH
9215: LD_INT 0
9217: PUSH
9218: EMPTY
9219: LIST
9220: LIST
9221: PUSH
9222: LD_INT 1
9224: NEG
9225: PUSH
9226: LD_INT 1
9228: NEG
9229: PUSH
9230: EMPTY
9231: LIST
9232: LIST
9233: PUSH
9234: LD_INT 1
9236: NEG
9237: PUSH
9238: LD_INT 2
9240: NEG
9241: PUSH
9242: EMPTY
9243: LIST
9244: LIST
9245: PUSH
9246: LD_INT 0
9248: PUSH
9249: LD_INT 2
9251: NEG
9252: PUSH
9253: EMPTY
9254: LIST
9255: LIST
9256: PUSH
9257: LD_INT 1
9259: PUSH
9260: LD_INT 1
9262: NEG
9263: PUSH
9264: EMPTY
9265: LIST
9266: LIST
9267: PUSH
9268: LD_INT 1
9270: PUSH
9271: LD_INT 2
9273: PUSH
9274: EMPTY
9275: LIST
9276: LIST
9277: PUSH
9278: LD_INT 0
9280: PUSH
9281: LD_INT 2
9283: PUSH
9284: EMPTY
9285: LIST
9286: LIST
9287: PUSH
9288: LD_INT 1
9290: NEG
9291: PUSH
9292: LD_INT 1
9294: PUSH
9295: EMPTY
9296: LIST
9297: LIST
9298: PUSH
9299: LD_INT 1
9301: NEG
9302: PUSH
9303: LD_INT 3
9305: NEG
9306: PUSH
9307: EMPTY
9308: LIST
9309: LIST
9310: PUSH
9311: LD_INT 0
9313: PUSH
9314: LD_INT 3
9316: NEG
9317: PUSH
9318: EMPTY
9319: LIST
9320: LIST
9321: PUSH
9322: LD_INT 1
9324: PUSH
9325: LD_INT 2
9327: NEG
9328: PUSH
9329: EMPTY
9330: LIST
9331: LIST
9332: PUSH
9333: EMPTY
9334: LIST
9335: LIST
9336: LIST
9337: LIST
9338: LIST
9339: LIST
9340: LIST
9341: LIST
9342: LIST
9343: LIST
9344: LIST
9345: LIST
9346: LIST
9347: LIST
9348: LIST
9349: LIST
9350: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9351: LD_ADDR_VAR 0 15
9355: PUSH
9356: LD_INT 0
9358: PUSH
9359: LD_INT 0
9361: PUSH
9362: EMPTY
9363: LIST
9364: LIST
9365: PUSH
9366: LD_INT 0
9368: PUSH
9369: LD_INT 1
9371: NEG
9372: PUSH
9373: EMPTY
9374: LIST
9375: LIST
9376: PUSH
9377: LD_INT 1
9379: PUSH
9380: LD_INT 0
9382: PUSH
9383: EMPTY
9384: LIST
9385: LIST
9386: PUSH
9387: LD_INT 1
9389: PUSH
9390: LD_INT 1
9392: PUSH
9393: EMPTY
9394: LIST
9395: LIST
9396: PUSH
9397: LD_INT 0
9399: PUSH
9400: LD_INT 1
9402: PUSH
9403: EMPTY
9404: LIST
9405: LIST
9406: PUSH
9407: LD_INT 1
9409: NEG
9410: PUSH
9411: LD_INT 0
9413: PUSH
9414: EMPTY
9415: LIST
9416: LIST
9417: PUSH
9418: LD_INT 1
9420: NEG
9421: PUSH
9422: LD_INT 1
9424: NEG
9425: PUSH
9426: EMPTY
9427: LIST
9428: LIST
9429: PUSH
9430: LD_INT 1
9432: PUSH
9433: LD_INT 1
9435: NEG
9436: PUSH
9437: EMPTY
9438: LIST
9439: LIST
9440: PUSH
9441: LD_INT 2
9443: PUSH
9444: LD_INT 0
9446: PUSH
9447: EMPTY
9448: LIST
9449: LIST
9450: PUSH
9451: LD_INT 2
9453: PUSH
9454: LD_INT 1
9456: PUSH
9457: EMPTY
9458: LIST
9459: LIST
9460: PUSH
9461: LD_INT 1
9463: NEG
9464: PUSH
9465: LD_INT 1
9467: PUSH
9468: EMPTY
9469: LIST
9470: LIST
9471: PUSH
9472: LD_INT 2
9474: NEG
9475: PUSH
9476: LD_INT 0
9478: PUSH
9479: EMPTY
9480: LIST
9481: LIST
9482: PUSH
9483: LD_INT 2
9485: NEG
9486: PUSH
9487: LD_INT 1
9489: NEG
9490: PUSH
9491: EMPTY
9492: LIST
9493: LIST
9494: PUSH
9495: LD_INT 2
9497: PUSH
9498: LD_INT 1
9500: NEG
9501: PUSH
9502: EMPTY
9503: LIST
9504: LIST
9505: PUSH
9506: LD_INT 3
9508: PUSH
9509: LD_INT 0
9511: PUSH
9512: EMPTY
9513: LIST
9514: LIST
9515: PUSH
9516: LD_INT 3
9518: PUSH
9519: LD_INT 1
9521: PUSH
9522: EMPTY
9523: LIST
9524: LIST
9525: PUSH
9526: EMPTY
9527: LIST
9528: LIST
9529: LIST
9530: LIST
9531: LIST
9532: LIST
9533: LIST
9534: LIST
9535: LIST
9536: LIST
9537: LIST
9538: LIST
9539: LIST
9540: LIST
9541: LIST
9542: LIST
9543: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9544: LD_ADDR_VAR 0 16
9548: PUSH
9549: LD_INT 0
9551: PUSH
9552: LD_INT 0
9554: PUSH
9555: EMPTY
9556: LIST
9557: LIST
9558: PUSH
9559: LD_INT 0
9561: PUSH
9562: LD_INT 1
9564: NEG
9565: PUSH
9566: EMPTY
9567: LIST
9568: LIST
9569: PUSH
9570: LD_INT 1
9572: PUSH
9573: LD_INT 0
9575: PUSH
9576: EMPTY
9577: LIST
9578: LIST
9579: PUSH
9580: LD_INT 1
9582: PUSH
9583: LD_INT 1
9585: PUSH
9586: EMPTY
9587: LIST
9588: LIST
9589: PUSH
9590: LD_INT 0
9592: PUSH
9593: LD_INT 1
9595: PUSH
9596: EMPTY
9597: LIST
9598: LIST
9599: PUSH
9600: LD_INT 1
9602: NEG
9603: PUSH
9604: LD_INT 0
9606: PUSH
9607: EMPTY
9608: LIST
9609: LIST
9610: PUSH
9611: LD_INT 1
9613: NEG
9614: PUSH
9615: LD_INT 1
9617: NEG
9618: PUSH
9619: EMPTY
9620: LIST
9621: LIST
9622: PUSH
9623: LD_INT 1
9625: NEG
9626: PUSH
9627: LD_INT 2
9629: NEG
9630: PUSH
9631: EMPTY
9632: LIST
9633: LIST
9634: PUSH
9635: LD_INT 2
9637: PUSH
9638: LD_INT 1
9640: PUSH
9641: EMPTY
9642: LIST
9643: LIST
9644: PUSH
9645: LD_INT 2
9647: PUSH
9648: LD_INT 2
9650: PUSH
9651: EMPTY
9652: LIST
9653: LIST
9654: PUSH
9655: LD_INT 1
9657: PUSH
9658: LD_INT 2
9660: PUSH
9661: EMPTY
9662: LIST
9663: LIST
9664: PUSH
9665: LD_INT 2
9667: NEG
9668: PUSH
9669: LD_INT 1
9671: NEG
9672: PUSH
9673: EMPTY
9674: LIST
9675: LIST
9676: PUSH
9677: LD_INT 2
9679: NEG
9680: PUSH
9681: LD_INT 2
9683: NEG
9684: PUSH
9685: EMPTY
9686: LIST
9687: LIST
9688: PUSH
9689: LD_INT 3
9691: PUSH
9692: LD_INT 2
9694: PUSH
9695: EMPTY
9696: LIST
9697: LIST
9698: PUSH
9699: LD_INT 3
9701: PUSH
9702: LD_INT 3
9704: PUSH
9705: EMPTY
9706: LIST
9707: LIST
9708: PUSH
9709: LD_INT 2
9711: PUSH
9712: LD_INT 3
9714: PUSH
9715: EMPTY
9716: LIST
9717: LIST
9718: PUSH
9719: EMPTY
9720: LIST
9721: LIST
9722: LIST
9723: LIST
9724: LIST
9725: LIST
9726: LIST
9727: LIST
9728: LIST
9729: LIST
9730: LIST
9731: LIST
9732: LIST
9733: LIST
9734: LIST
9735: LIST
9736: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
9737: LD_ADDR_VAR 0 17
9741: PUSH
9742: LD_INT 0
9744: PUSH
9745: LD_INT 0
9747: PUSH
9748: EMPTY
9749: LIST
9750: LIST
9751: PUSH
9752: LD_INT 0
9754: PUSH
9755: LD_INT 1
9757: NEG
9758: PUSH
9759: EMPTY
9760: LIST
9761: LIST
9762: PUSH
9763: LD_INT 1
9765: PUSH
9766: LD_INT 0
9768: PUSH
9769: EMPTY
9770: LIST
9771: LIST
9772: PUSH
9773: LD_INT 1
9775: PUSH
9776: LD_INT 1
9778: PUSH
9779: EMPTY
9780: LIST
9781: LIST
9782: PUSH
9783: LD_INT 0
9785: PUSH
9786: LD_INT 1
9788: PUSH
9789: EMPTY
9790: LIST
9791: LIST
9792: PUSH
9793: LD_INT 1
9795: NEG
9796: PUSH
9797: LD_INT 0
9799: PUSH
9800: EMPTY
9801: LIST
9802: LIST
9803: PUSH
9804: LD_INT 1
9806: NEG
9807: PUSH
9808: LD_INT 1
9810: NEG
9811: PUSH
9812: EMPTY
9813: LIST
9814: LIST
9815: PUSH
9816: LD_INT 1
9818: NEG
9819: PUSH
9820: LD_INT 2
9822: NEG
9823: PUSH
9824: EMPTY
9825: LIST
9826: LIST
9827: PUSH
9828: LD_INT 0
9830: PUSH
9831: LD_INT 2
9833: NEG
9834: PUSH
9835: EMPTY
9836: LIST
9837: LIST
9838: PUSH
9839: LD_INT 1
9841: PUSH
9842: LD_INT 1
9844: NEG
9845: PUSH
9846: EMPTY
9847: LIST
9848: LIST
9849: PUSH
9850: LD_INT 2
9852: PUSH
9853: LD_INT 0
9855: PUSH
9856: EMPTY
9857: LIST
9858: LIST
9859: PUSH
9860: LD_INT 2
9862: PUSH
9863: LD_INT 1
9865: PUSH
9866: EMPTY
9867: LIST
9868: LIST
9869: PUSH
9870: LD_INT 2
9872: PUSH
9873: LD_INT 2
9875: PUSH
9876: EMPTY
9877: LIST
9878: LIST
9879: PUSH
9880: LD_INT 1
9882: PUSH
9883: LD_INT 2
9885: PUSH
9886: EMPTY
9887: LIST
9888: LIST
9889: PUSH
9890: LD_INT 0
9892: PUSH
9893: LD_INT 2
9895: PUSH
9896: EMPTY
9897: LIST
9898: LIST
9899: PUSH
9900: LD_INT 1
9902: NEG
9903: PUSH
9904: LD_INT 1
9906: PUSH
9907: EMPTY
9908: LIST
9909: LIST
9910: PUSH
9911: LD_INT 2
9913: NEG
9914: PUSH
9915: LD_INT 0
9917: PUSH
9918: EMPTY
9919: LIST
9920: LIST
9921: PUSH
9922: LD_INT 2
9924: NEG
9925: PUSH
9926: LD_INT 1
9928: NEG
9929: PUSH
9930: EMPTY
9931: LIST
9932: LIST
9933: PUSH
9934: LD_INT 2
9936: NEG
9937: PUSH
9938: LD_INT 2
9940: NEG
9941: PUSH
9942: EMPTY
9943: LIST
9944: LIST
9945: PUSH
9946: EMPTY
9947: LIST
9948: LIST
9949: LIST
9950: LIST
9951: LIST
9952: LIST
9953: LIST
9954: LIST
9955: LIST
9956: LIST
9957: LIST
9958: LIST
9959: LIST
9960: LIST
9961: LIST
9962: LIST
9963: LIST
9964: LIST
9965: LIST
9966: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
9967: LD_ADDR_VAR 0 18
9971: PUSH
9972: LD_INT 0
9974: PUSH
9975: LD_INT 0
9977: PUSH
9978: EMPTY
9979: LIST
9980: LIST
9981: PUSH
9982: LD_INT 0
9984: PUSH
9985: LD_INT 1
9987: NEG
9988: PUSH
9989: EMPTY
9990: LIST
9991: LIST
9992: PUSH
9993: LD_INT 1
9995: PUSH
9996: LD_INT 0
9998: PUSH
9999: EMPTY
10000: LIST
10001: LIST
10002: PUSH
10003: LD_INT 1
10005: PUSH
10006: LD_INT 1
10008: PUSH
10009: EMPTY
10010: LIST
10011: LIST
10012: PUSH
10013: LD_INT 0
10015: PUSH
10016: LD_INT 1
10018: PUSH
10019: EMPTY
10020: LIST
10021: LIST
10022: PUSH
10023: LD_INT 1
10025: NEG
10026: PUSH
10027: LD_INT 0
10029: PUSH
10030: EMPTY
10031: LIST
10032: LIST
10033: PUSH
10034: LD_INT 1
10036: NEG
10037: PUSH
10038: LD_INT 1
10040: NEG
10041: PUSH
10042: EMPTY
10043: LIST
10044: LIST
10045: PUSH
10046: LD_INT 1
10048: NEG
10049: PUSH
10050: LD_INT 2
10052: NEG
10053: PUSH
10054: EMPTY
10055: LIST
10056: LIST
10057: PUSH
10058: LD_INT 0
10060: PUSH
10061: LD_INT 2
10063: NEG
10064: PUSH
10065: EMPTY
10066: LIST
10067: LIST
10068: PUSH
10069: LD_INT 1
10071: PUSH
10072: LD_INT 1
10074: NEG
10075: PUSH
10076: EMPTY
10077: LIST
10078: LIST
10079: PUSH
10080: LD_INT 2
10082: PUSH
10083: LD_INT 0
10085: PUSH
10086: EMPTY
10087: LIST
10088: LIST
10089: PUSH
10090: LD_INT 2
10092: PUSH
10093: LD_INT 1
10095: PUSH
10096: EMPTY
10097: LIST
10098: LIST
10099: PUSH
10100: LD_INT 2
10102: PUSH
10103: LD_INT 2
10105: PUSH
10106: EMPTY
10107: LIST
10108: LIST
10109: PUSH
10110: LD_INT 1
10112: PUSH
10113: LD_INT 2
10115: PUSH
10116: EMPTY
10117: LIST
10118: LIST
10119: PUSH
10120: LD_INT 0
10122: PUSH
10123: LD_INT 2
10125: PUSH
10126: EMPTY
10127: LIST
10128: LIST
10129: PUSH
10130: LD_INT 1
10132: NEG
10133: PUSH
10134: LD_INT 1
10136: PUSH
10137: EMPTY
10138: LIST
10139: LIST
10140: PUSH
10141: LD_INT 2
10143: NEG
10144: PUSH
10145: LD_INT 0
10147: PUSH
10148: EMPTY
10149: LIST
10150: LIST
10151: PUSH
10152: LD_INT 2
10154: NEG
10155: PUSH
10156: LD_INT 1
10158: NEG
10159: PUSH
10160: EMPTY
10161: LIST
10162: LIST
10163: PUSH
10164: LD_INT 2
10166: NEG
10167: PUSH
10168: LD_INT 2
10170: NEG
10171: PUSH
10172: EMPTY
10173: LIST
10174: LIST
10175: PUSH
10176: EMPTY
10177: LIST
10178: LIST
10179: LIST
10180: LIST
10181: LIST
10182: LIST
10183: LIST
10184: LIST
10185: LIST
10186: LIST
10187: LIST
10188: LIST
10189: LIST
10190: LIST
10191: LIST
10192: LIST
10193: LIST
10194: LIST
10195: LIST
10196: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10197: LD_ADDR_VAR 0 19
10201: PUSH
10202: LD_INT 0
10204: PUSH
10205: LD_INT 0
10207: PUSH
10208: EMPTY
10209: LIST
10210: LIST
10211: PUSH
10212: LD_INT 0
10214: PUSH
10215: LD_INT 1
10217: NEG
10218: PUSH
10219: EMPTY
10220: LIST
10221: LIST
10222: PUSH
10223: LD_INT 1
10225: PUSH
10226: LD_INT 0
10228: PUSH
10229: EMPTY
10230: LIST
10231: LIST
10232: PUSH
10233: LD_INT 1
10235: PUSH
10236: LD_INT 1
10238: PUSH
10239: EMPTY
10240: LIST
10241: LIST
10242: PUSH
10243: LD_INT 0
10245: PUSH
10246: LD_INT 1
10248: PUSH
10249: EMPTY
10250: LIST
10251: LIST
10252: PUSH
10253: LD_INT 1
10255: NEG
10256: PUSH
10257: LD_INT 0
10259: PUSH
10260: EMPTY
10261: LIST
10262: LIST
10263: PUSH
10264: LD_INT 1
10266: NEG
10267: PUSH
10268: LD_INT 1
10270: NEG
10271: PUSH
10272: EMPTY
10273: LIST
10274: LIST
10275: PUSH
10276: LD_INT 1
10278: NEG
10279: PUSH
10280: LD_INT 2
10282: NEG
10283: PUSH
10284: EMPTY
10285: LIST
10286: LIST
10287: PUSH
10288: LD_INT 0
10290: PUSH
10291: LD_INT 2
10293: NEG
10294: PUSH
10295: EMPTY
10296: LIST
10297: LIST
10298: PUSH
10299: LD_INT 1
10301: PUSH
10302: LD_INT 1
10304: NEG
10305: PUSH
10306: EMPTY
10307: LIST
10308: LIST
10309: PUSH
10310: LD_INT 2
10312: PUSH
10313: LD_INT 0
10315: PUSH
10316: EMPTY
10317: LIST
10318: LIST
10319: PUSH
10320: LD_INT 2
10322: PUSH
10323: LD_INT 1
10325: PUSH
10326: EMPTY
10327: LIST
10328: LIST
10329: PUSH
10330: LD_INT 2
10332: PUSH
10333: LD_INT 2
10335: PUSH
10336: EMPTY
10337: LIST
10338: LIST
10339: PUSH
10340: LD_INT 1
10342: PUSH
10343: LD_INT 2
10345: PUSH
10346: EMPTY
10347: LIST
10348: LIST
10349: PUSH
10350: LD_INT 0
10352: PUSH
10353: LD_INT 2
10355: PUSH
10356: EMPTY
10357: LIST
10358: LIST
10359: PUSH
10360: LD_INT 1
10362: NEG
10363: PUSH
10364: LD_INT 1
10366: PUSH
10367: EMPTY
10368: LIST
10369: LIST
10370: PUSH
10371: LD_INT 2
10373: NEG
10374: PUSH
10375: LD_INT 0
10377: PUSH
10378: EMPTY
10379: LIST
10380: LIST
10381: PUSH
10382: LD_INT 2
10384: NEG
10385: PUSH
10386: LD_INT 1
10388: NEG
10389: PUSH
10390: EMPTY
10391: LIST
10392: LIST
10393: PUSH
10394: LD_INT 2
10396: NEG
10397: PUSH
10398: LD_INT 2
10400: NEG
10401: PUSH
10402: EMPTY
10403: LIST
10404: LIST
10405: PUSH
10406: EMPTY
10407: LIST
10408: LIST
10409: LIST
10410: LIST
10411: LIST
10412: LIST
10413: LIST
10414: LIST
10415: LIST
10416: LIST
10417: LIST
10418: LIST
10419: LIST
10420: LIST
10421: LIST
10422: LIST
10423: LIST
10424: LIST
10425: LIST
10426: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10427: LD_ADDR_VAR 0 20
10431: PUSH
10432: LD_INT 0
10434: PUSH
10435: LD_INT 0
10437: PUSH
10438: EMPTY
10439: LIST
10440: LIST
10441: PUSH
10442: LD_INT 0
10444: PUSH
10445: LD_INT 1
10447: NEG
10448: PUSH
10449: EMPTY
10450: LIST
10451: LIST
10452: PUSH
10453: LD_INT 1
10455: PUSH
10456: LD_INT 0
10458: PUSH
10459: EMPTY
10460: LIST
10461: LIST
10462: PUSH
10463: LD_INT 1
10465: PUSH
10466: LD_INT 1
10468: PUSH
10469: EMPTY
10470: LIST
10471: LIST
10472: PUSH
10473: LD_INT 0
10475: PUSH
10476: LD_INT 1
10478: PUSH
10479: EMPTY
10480: LIST
10481: LIST
10482: PUSH
10483: LD_INT 1
10485: NEG
10486: PUSH
10487: LD_INT 0
10489: PUSH
10490: EMPTY
10491: LIST
10492: LIST
10493: PUSH
10494: LD_INT 1
10496: NEG
10497: PUSH
10498: LD_INT 1
10500: NEG
10501: PUSH
10502: EMPTY
10503: LIST
10504: LIST
10505: PUSH
10506: LD_INT 1
10508: NEG
10509: PUSH
10510: LD_INT 2
10512: NEG
10513: PUSH
10514: EMPTY
10515: LIST
10516: LIST
10517: PUSH
10518: LD_INT 0
10520: PUSH
10521: LD_INT 2
10523: NEG
10524: PUSH
10525: EMPTY
10526: LIST
10527: LIST
10528: PUSH
10529: LD_INT 1
10531: PUSH
10532: LD_INT 1
10534: NEG
10535: PUSH
10536: EMPTY
10537: LIST
10538: LIST
10539: PUSH
10540: LD_INT 2
10542: PUSH
10543: LD_INT 0
10545: PUSH
10546: EMPTY
10547: LIST
10548: LIST
10549: PUSH
10550: LD_INT 2
10552: PUSH
10553: LD_INT 1
10555: PUSH
10556: EMPTY
10557: LIST
10558: LIST
10559: PUSH
10560: LD_INT 2
10562: PUSH
10563: LD_INT 2
10565: PUSH
10566: EMPTY
10567: LIST
10568: LIST
10569: PUSH
10570: LD_INT 1
10572: PUSH
10573: LD_INT 2
10575: PUSH
10576: EMPTY
10577: LIST
10578: LIST
10579: PUSH
10580: LD_INT 0
10582: PUSH
10583: LD_INT 2
10585: PUSH
10586: EMPTY
10587: LIST
10588: LIST
10589: PUSH
10590: LD_INT 1
10592: NEG
10593: PUSH
10594: LD_INT 1
10596: PUSH
10597: EMPTY
10598: LIST
10599: LIST
10600: PUSH
10601: LD_INT 2
10603: NEG
10604: PUSH
10605: LD_INT 0
10607: PUSH
10608: EMPTY
10609: LIST
10610: LIST
10611: PUSH
10612: LD_INT 2
10614: NEG
10615: PUSH
10616: LD_INT 1
10618: NEG
10619: PUSH
10620: EMPTY
10621: LIST
10622: LIST
10623: PUSH
10624: LD_INT 2
10626: NEG
10627: PUSH
10628: LD_INT 2
10630: NEG
10631: PUSH
10632: EMPTY
10633: LIST
10634: LIST
10635: PUSH
10636: EMPTY
10637: LIST
10638: LIST
10639: LIST
10640: LIST
10641: LIST
10642: LIST
10643: LIST
10644: LIST
10645: LIST
10646: LIST
10647: LIST
10648: LIST
10649: LIST
10650: LIST
10651: LIST
10652: LIST
10653: LIST
10654: LIST
10655: LIST
10656: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10657: LD_ADDR_VAR 0 21
10661: PUSH
10662: LD_INT 0
10664: PUSH
10665: LD_INT 0
10667: PUSH
10668: EMPTY
10669: LIST
10670: LIST
10671: PUSH
10672: LD_INT 0
10674: PUSH
10675: LD_INT 1
10677: NEG
10678: PUSH
10679: EMPTY
10680: LIST
10681: LIST
10682: PUSH
10683: LD_INT 1
10685: PUSH
10686: LD_INT 0
10688: PUSH
10689: EMPTY
10690: LIST
10691: LIST
10692: PUSH
10693: LD_INT 1
10695: PUSH
10696: LD_INT 1
10698: PUSH
10699: EMPTY
10700: LIST
10701: LIST
10702: PUSH
10703: LD_INT 0
10705: PUSH
10706: LD_INT 1
10708: PUSH
10709: EMPTY
10710: LIST
10711: LIST
10712: PUSH
10713: LD_INT 1
10715: NEG
10716: PUSH
10717: LD_INT 0
10719: PUSH
10720: EMPTY
10721: LIST
10722: LIST
10723: PUSH
10724: LD_INT 1
10726: NEG
10727: PUSH
10728: LD_INT 1
10730: NEG
10731: PUSH
10732: EMPTY
10733: LIST
10734: LIST
10735: PUSH
10736: LD_INT 1
10738: NEG
10739: PUSH
10740: LD_INT 2
10742: NEG
10743: PUSH
10744: EMPTY
10745: LIST
10746: LIST
10747: PUSH
10748: LD_INT 0
10750: PUSH
10751: LD_INT 2
10753: NEG
10754: PUSH
10755: EMPTY
10756: LIST
10757: LIST
10758: PUSH
10759: LD_INT 1
10761: PUSH
10762: LD_INT 1
10764: NEG
10765: PUSH
10766: EMPTY
10767: LIST
10768: LIST
10769: PUSH
10770: LD_INT 2
10772: PUSH
10773: LD_INT 0
10775: PUSH
10776: EMPTY
10777: LIST
10778: LIST
10779: PUSH
10780: LD_INT 2
10782: PUSH
10783: LD_INT 1
10785: PUSH
10786: EMPTY
10787: LIST
10788: LIST
10789: PUSH
10790: LD_INT 2
10792: PUSH
10793: LD_INT 2
10795: PUSH
10796: EMPTY
10797: LIST
10798: LIST
10799: PUSH
10800: LD_INT 1
10802: PUSH
10803: LD_INT 2
10805: PUSH
10806: EMPTY
10807: LIST
10808: LIST
10809: PUSH
10810: LD_INT 0
10812: PUSH
10813: LD_INT 2
10815: PUSH
10816: EMPTY
10817: LIST
10818: LIST
10819: PUSH
10820: LD_INT 1
10822: NEG
10823: PUSH
10824: LD_INT 1
10826: PUSH
10827: EMPTY
10828: LIST
10829: LIST
10830: PUSH
10831: LD_INT 2
10833: NEG
10834: PUSH
10835: LD_INT 0
10837: PUSH
10838: EMPTY
10839: LIST
10840: LIST
10841: PUSH
10842: LD_INT 2
10844: NEG
10845: PUSH
10846: LD_INT 1
10848: NEG
10849: PUSH
10850: EMPTY
10851: LIST
10852: LIST
10853: PUSH
10854: LD_INT 2
10856: NEG
10857: PUSH
10858: LD_INT 2
10860: NEG
10861: PUSH
10862: EMPTY
10863: LIST
10864: LIST
10865: PUSH
10866: EMPTY
10867: LIST
10868: LIST
10869: LIST
10870: LIST
10871: LIST
10872: LIST
10873: LIST
10874: LIST
10875: LIST
10876: LIST
10877: LIST
10878: LIST
10879: LIST
10880: LIST
10881: LIST
10882: LIST
10883: LIST
10884: LIST
10885: LIST
10886: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10887: LD_ADDR_VAR 0 22
10891: PUSH
10892: LD_INT 0
10894: PUSH
10895: LD_INT 0
10897: PUSH
10898: EMPTY
10899: LIST
10900: LIST
10901: PUSH
10902: LD_INT 0
10904: PUSH
10905: LD_INT 1
10907: NEG
10908: PUSH
10909: EMPTY
10910: LIST
10911: LIST
10912: PUSH
10913: LD_INT 1
10915: PUSH
10916: LD_INT 0
10918: PUSH
10919: EMPTY
10920: LIST
10921: LIST
10922: PUSH
10923: LD_INT 1
10925: PUSH
10926: LD_INT 1
10928: PUSH
10929: EMPTY
10930: LIST
10931: LIST
10932: PUSH
10933: LD_INT 0
10935: PUSH
10936: LD_INT 1
10938: PUSH
10939: EMPTY
10940: LIST
10941: LIST
10942: PUSH
10943: LD_INT 1
10945: NEG
10946: PUSH
10947: LD_INT 0
10949: PUSH
10950: EMPTY
10951: LIST
10952: LIST
10953: PUSH
10954: LD_INT 1
10956: NEG
10957: PUSH
10958: LD_INT 1
10960: NEG
10961: PUSH
10962: EMPTY
10963: LIST
10964: LIST
10965: PUSH
10966: LD_INT 1
10968: NEG
10969: PUSH
10970: LD_INT 2
10972: NEG
10973: PUSH
10974: EMPTY
10975: LIST
10976: LIST
10977: PUSH
10978: LD_INT 0
10980: PUSH
10981: LD_INT 2
10983: NEG
10984: PUSH
10985: EMPTY
10986: LIST
10987: LIST
10988: PUSH
10989: LD_INT 1
10991: PUSH
10992: LD_INT 1
10994: NEG
10995: PUSH
10996: EMPTY
10997: LIST
10998: LIST
10999: PUSH
11000: LD_INT 2
11002: PUSH
11003: LD_INT 0
11005: PUSH
11006: EMPTY
11007: LIST
11008: LIST
11009: PUSH
11010: LD_INT 2
11012: PUSH
11013: LD_INT 1
11015: PUSH
11016: EMPTY
11017: LIST
11018: LIST
11019: PUSH
11020: LD_INT 2
11022: PUSH
11023: LD_INT 2
11025: PUSH
11026: EMPTY
11027: LIST
11028: LIST
11029: PUSH
11030: LD_INT 1
11032: PUSH
11033: LD_INT 2
11035: PUSH
11036: EMPTY
11037: LIST
11038: LIST
11039: PUSH
11040: LD_INT 0
11042: PUSH
11043: LD_INT 2
11045: PUSH
11046: EMPTY
11047: LIST
11048: LIST
11049: PUSH
11050: LD_INT 1
11052: NEG
11053: PUSH
11054: LD_INT 1
11056: PUSH
11057: EMPTY
11058: LIST
11059: LIST
11060: PUSH
11061: LD_INT 2
11063: NEG
11064: PUSH
11065: LD_INT 0
11067: PUSH
11068: EMPTY
11069: LIST
11070: LIST
11071: PUSH
11072: LD_INT 2
11074: NEG
11075: PUSH
11076: LD_INT 1
11078: NEG
11079: PUSH
11080: EMPTY
11081: LIST
11082: LIST
11083: PUSH
11084: LD_INT 2
11086: NEG
11087: PUSH
11088: LD_INT 2
11090: NEG
11091: PUSH
11092: EMPTY
11093: LIST
11094: LIST
11095: PUSH
11096: EMPTY
11097: LIST
11098: LIST
11099: LIST
11100: LIST
11101: LIST
11102: LIST
11103: LIST
11104: LIST
11105: LIST
11106: LIST
11107: LIST
11108: LIST
11109: LIST
11110: LIST
11111: LIST
11112: LIST
11113: LIST
11114: LIST
11115: LIST
11116: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11117: LD_ADDR_VAR 0 23
11121: PUSH
11122: LD_INT 0
11124: PUSH
11125: LD_INT 0
11127: PUSH
11128: EMPTY
11129: LIST
11130: LIST
11131: PUSH
11132: LD_INT 0
11134: PUSH
11135: LD_INT 1
11137: NEG
11138: PUSH
11139: EMPTY
11140: LIST
11141: LIST
11142: PUSH
11143: LD_INT 1
11145: PUSH
11146: LD_INT 0
11148: PUSH
11149: EMPTY
11150: LIST
11151: LIST
11152: PUSH
11153: LD_INT 1
11155: PUSH
11156: LD_INT 1
11158: PUSH
11159: EMPTY
11160: LIST
11161: LIST
11162: PUSH
11163: LD_INT 0
11165: PUSH
11166: LD_INT 1
11168: PUSH
11169: EMPTY
11170: LIST
11171: LIST
11172: PUSH
11173: LD_INT 1
11175: NEG
11176: PUSH
11177: LD_INT 0
11179: PUSH
11180: EMPTY
11181: LIST
11182: LIST
11183: PUSH
11184: LD_INT 1
11186: NEG
11187: PUSH
11188: LD_INT 1
11190: NEG
11191: PUSH
11192: EMPTY
11193: LIST
11194: LIST
11195: PUSH
11196: LD_INT 1
11198: NEG
11199: PUSH
11200: LD_INT 2
11202: NEG
11203: PUSH
11204: EMPTY
11205: LIST
11206: LIST
11207: PUSH
11208: LD_INT 0
11210: PUSH
11211: LD_INT 2
11213: NEG
11214: PUSH
11215: EMPTY
11216: LIST
11217: LIST
11218: PUSH
11219: LD_INT 1
11221: PUSH
11222: LD_INT 1
11224: NEG
11225: PUSH
11226: EMPTY
11227: LIST
11228: LIST
11229: PUSH
11230: LD_INT 2
11232: PUSH
11233: LD_INT 0
11235: PUSH
11236: EMPTY
11237: LIST
11238: LIST
11239: PUSH
11240: LD_INT 2
11242: PUSH
11243: LD_INT 1
11245: PUSH
11246: EMPTY
11247: LIST
11248: LIST
11249: PUSH
11250: LD_INT 2
11252: PUSH
11253: LD_INT 2
11255: PUSH
11256: EMPTY
11257: LIST
11258: LIST
11259: PUSH
11260: LD_INT 1
11262: PUSH
11263: LD_INT 2
11265: PUSH
11266: EMPTY
11267: LIST
11268: LIST
11269: PUSH
11270: LD_INT 0
11272: PUSH
11273: LD_INT 2
11275: PUSH
11276: EMPTY
11277: LIST
11278: LIST
11279: PUSH
11280: LD_INT 1
11282: NEG
11283: PUSH
11284: LD_INT 1
11286: PUSH
11287: EMPTY
11288: LIST
11289: LIST
11290: PUSH
11291: LD_INT 2
11293: NEG
11294: PUSH
11295: LD_INT 0
11297: PUSH
11298: EMPTY
11299: LIST
11300: LIST
11301: PUSH
11302: LD_INT 2
11304: NEG
11305: PUSH
11306: LD_INT 1
11308: NEG
11309: PUSH
11310: EMPTY
11311: LIST
11312: LIST
11313: PUSH
11314: LD_INT 2
11316: NEG
11317: PUSH
11318: LD_INT 2
11320: NEG
11321: PUSH
11322: EMPTY
11323: LIST
11324: LIST
11325: PUSH
11326: LD_INT 2
11328: NEG
11329: PUSH
11330: LD_INT 3
11332: NEG
11333: PUSH
11334: EMPTY
11335: LIST
11336: LIST
11337: PUSH
11338: LD_INT 1
11340: NEG
11341: PUSH
11342: LD_INT 3
11344: NEG
11345: PUSH
11346: EMPTY
11347: LIST
11348: LIST
11349: PUSH
11350: LD_INT 1
11352: PUSH
11353: LD_INT 2
11355: NEG
11356: PUSH
11357: EMPTY
11358: LIST
11359: LIST
11360: PUSH
11361: LD_INT 2
11363: PUSH
11364: LD_INT 1
11366: NEG
11367: PUSH
11368: EMPTY
11369: LIST
11370: LIST
11371: PUSH
11372: EMPTY
11373: LIST
11374: LIST
11375: LIST
11376: LIST
11377: LIST
11378: LIST
11379: LIST
11380: LIST
11381: LIST
11382: LIST
11383: LIST
11384: LIST
11385: LIST
11386: LIST
11387: LIST
11388: LIST
11389: LIST
11390: LIST
11391: LIST
11392: LIST
11393: LIST
11394: LIST
11395: LIST
11396: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11397: LD_ADDR_VAR 0 24
11401: PUSH
11402: LD_INT 0
11404: PUSH
11405: LD_INT 0
11407: PUSH
11408: EMPTY
11409: LIST
11410: LIST
11411: PUSH
11412: LD_INT 0
11414: PUSH
11415: LD_INT 1
11417: NEG
11418: PUSH
11419: EMPTY
11420: LIST
11421: LIST
11422: PUSH
11423: LD_INT 1
11425: PUSH
11426: LD_INT 0
11428: PUSH
11429: EMPTY
11430: LIST
11431: LIST
11432: PUSH
11433: LD_INT 1
11435: PUSH
11436: LD_INT 1
11438: PUSH
11439: EMPTY
11440: LIST
11441: LIST
11442: PUSH
11443: LD_INT 0
11445: PUSH
11446: LD_INT 1
11448: PUSH
11449: EMPTY
11450: LIST
11451: LIST
11452: PUSH
11453: LD_INT 1
11455: NEG
11456: PUSH
11457: LD_INT 0
11459: PUSH
11460: EMPTY
11461: LIST
11462: LIST
11463: PUSH
11464: LD_INT 1
11466: NEG
11467: PUSH
11468: LD_INT 1
11470: NEG
11471: PUSH
11472: EMPTY
11473: LIST
11474: LIST
11475: PUSH
11476: LD_INT 1
11478: NEG
11479: PUSH
11480: LD_INT 2
11482: NEG
11483: PUSH
11484: EMPTY
11485: LIST
11486: LIST
11487: PUSH
11488: LD_INT 0
11490: PUSH
11491: LD_INT 2
11493: NEG
11494: PUSH
11495: EMPTY
11496: LIST
11497: LIST
11498: PUSH
11499: LD_INT 1
11501: PUSH
11502: LD_INT 1
11504: NEG
11505: PUSH
11506: EMPTY
11507: LIST
11508: LIST
11509: PUSH
11510: LD_INT 2
11512: PUSH
11513: LD_INT 0
11515: PUSH
11516: EMPTY
11517: LIST
11518: LIST
11519: PUSH
11520: LD_INT 2
11522: PUSH
11523: LD_INT 1
11525: PUSH
11526: EMPTY
11527: LIST
11528: LIST
11529: PUSH
11530: LD_INT 2
11532: PUSH
11533: LD_INT 2
11535: PUSH
11536: EMPTY
11537: LIST
11538: LIST
11539: PUSH
11540: LD_INT 1
11542: PUSH
11543: LD_INT 2
11545: PUSH
11546: EMPTY
11547: LIST
11548: LIST
11549: PUSH
11550: LD_INT 0
11552: PUSH
11553: LD_INT 2
11555: PUSH
11556: EMPTY
11557: LIST
11558: LIST
11559: PUSH
11560: LD_INT 1
11562: NEG
11563: PUSH
11564: LD_INT 1
11566: PUSH
11567: EMPTY
11568: LIST
11569: LIST
11570: PUSH
11571: LD_INT 2
11573: NEG
11574: PUSH
11575: LD_INT 0
11577: PUSH
11578: EMPTY
11579: LIST
11580: LIST
11581: PUSH
11582: LD_INT 2
11584: NEG
11585: PUSH
11586: LD_INT 1
11588: NEG
11589: PUSH
11590: EMPTY
11591: LIST
11592: LIST
11593: PUSH
11594: LD_INT 2
11596: NEG
11597: PUSH
11598: LD_INT 2
11600: NEG
11601: PUSH
11602: EMPTY
11603: LIST
11604: LIST
11605: PUSH
11606: LD_INT 1
11608: PUSH
11609: LD_INT 2
11611: NEG
11612: PUSH
11613: EMPTY
11614: LIST
11615: LIST
11616: PUSH
11617: LD_INT 2
11619: PUSH
11620: LD_INT 1
11622: NEG
11623: PUSH
11624: EMPTY
11625: LIST
11626: LIST
11627: PUSH
11628: LD_INT 3
11630: PUSH
11631: LD_INT 1
11633: PUSH
11634: EMPTY
11635: LIST
11636: LIST
11637: PUSH
11638: LD_INT 3
11640: PUSH
11641: LD_INT 2
11643: PUSH
11644: EMPTY
11645: LIST
11646: LIST
11647: PUSH
11648: EMPTY
11649: LIST
11650: LIST
11651: LIST
11652: LIST
11653: LIST
11654: LIST
11655: LIST
11656: LIST
11657: LIST
11658: LIST
11659: LIST
11660: LIST
11661: LIST
11662: LIST
11663: LIST
11664: LIST
11665: LIST
11666: LIST
11667: LIST
11668: LIST
11669: LIST
11670: LIST
11671: LIST
11672: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
11673: LD_ADDR_VAR 0 25
11677: PUSH
11678: LD_INT 0
11680: PUSH
11681: LD_INT 0
11683: PUSH
11684: EMPTY
11685: LIST
11686: LIST
11687: PUSH
11688: LD_INT 0
11690: PUSH
11691: LD_INT 1
11693: NEG
11694: PUSH
11695: EMPTY
11696: LIST
11697: LIST
11698: PUSH
11699: LD_INT 1
11701: PUSH
11702: LD_INT 0
11704: PUSH
11705: EMPTY
11706: LIST
11707: LIST
11708: PUSH
11709: LD_INT 1
11711: PUSH
11712: LD_INT 1
11714: PUSH
11715: EMPTY
11716: LIST
11717: LIST
11718: PUSH
11719: LD_INT 0
11721: PUSH
11722: LD_INT 1
11724: PUSH
11725: EMPTY
11726: LIST
11727: LIST
11728: PUSH
11729: LD_INT 1
11731: NEG
11732: PUSH
11733: LD_INT 0
11735: PUSH
11736: EMPTY
11737: LIST
11738: LIST
11739: PUSH
11740: LD_INT 1
11742: NEG
11743: PUSH
11744: LD_INT 1
11746: NEG
11747: PUSH
11748: EMPTY
11749: LIST
11750: LIST
11751: PUSH
11752: LD_INT 1
11754: NEG
11755: PUSH
11756: LD_INT 2
11758: NEG
11759: PUSH
11760: EMPTY
11761: LIST
11762: LIST
11763: PUSH
11764: LD_INT 0
11766: PUSH
11767: LD_INT 2
11769: NEG
11770: PUSH
11771: EMPTY
11772: LIST
11773: LIST
11774: PUSH
11775: LD_INT 1
11777: PUSH
11778: LD_INT 1
11780: NEG
11781: PUSH
11782: EMPTY
11783: LIST
11784: LIST
11785: PUSH
11786: LD_INT 2
11788: PUSH
11789: LD_INT 0
11791: PUSH
11792: EMPTY
11793: LIST
11794: LIST
11795: PUSH
11796: LD_INT 2
11798: PUSH
11799: LD_INT 1
11801: PUSH
11802: EMPTY
11803: LIST
11804: LIST
11805: PUSH
11806: LD_INT 2
11808: PUSH
11809: LD_INT 2
11811: PUSH
11812: EMPTY
11813: LIST
11814: LIST
11815: PUSH
11816: LD_INT 1
11818: PUSH
11819: LD_INT 2
11821: PUSH
11822: EMPTY
11823: LIST
11824: LIST
11825: PUSH
11826: LD_INT 0
11828: PUSH
11829: LD_INT 2
11831: PUSH
11832: EMPTY
11833: LIST
11834: LIST
11835: PUSH
11836: LD_INT 1
11838: NEG
11839: PUSH
11840: LD_INT 1
11842: PUSH
11843: EMPTY
11844: LIST
11845: LIST
11846: PUSH
11847: LD_INT 2
11849: NEG
11850: PUSH
11851: LD_INT 0
11853: PUSH
11854: EMPTY
11855: LIST
11856: LIST
11857: PUSH
11858: LD_INT 2
11860: NEG
11861: PUSH
11862: LD_INT 1
11864: NEG
11865: PUSH
11866: EMPTY
11867: LIST
11868: LIST
11869: PUSH
11870: LD_INT 2
11872: NEG
11873: PUSH
11874: LD_INT 2
11876: NEG
11877: PUSH
11878: EMPTY
11879: LIST
11880: LIST
11881: PUSH
11882: LD_INT 3
11884: PUSH
11885: LD_INT 1
11887: PUSH
11888: EMPTY
11889: LIST
11890: LIST
11891: PUSH
11892: LD_INT 3
11894: PUSH
11895: LD_INT 2
11897: PUSH
11898: EMPTY
11899: LIST
11900: LIST
11901: PUSH
11902: LD_INT 2
11904: PUSH
11905: LD_INT 3
11907: PUSH
11908: EMPTY
11909: LIST
11910: LIST
11911: PUSH
11912: LD_INT 1
11914: PUSH
11915: LD_INT 3
11917: PUSH
11918: EMPTY
11919: LIST
11920: LIST
11921: PUSH
11922: EMPTY
11923: LIST
11924: LIST
11925: LIST
11926: LIST
11927: LIST
11928: LIST
11929: LIST
11930: LIST
11931: LIST
11932: LIST
11933: LIST
11934: LIST
11935: LIST
11936: LIST
11937: LIST
11938: LIST
11939: LIST
11940: LIST
11941: LIST
11942: LIST
11943: LIST
11944: LIST
11945: LIST
11946: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
11947: LD_ADDR_VAR 0 26
11951: PUSH
11952: LD_INT 0
11954: PUSH
11955: LD_INT 0
11957: PUSH
11958: EMPTY
11959: LIST
11960: LIST
11961: PUSH
11962: LD_INT 0
11964: PUSH
11965: LD_INT 1
11967: NEG
11968: PUSH
11969: EMPTY
11970: LIST
11971: LIST
11972: PUSH
11973: LD_INT 1
11975: PUSH
11976: LD_INT 0
11978: PUSH
11979: EMPTY
11980: LIST
11981: LIST
11982: PUSH
11983: LD_INT 1
11985: PUSH
11986: LD_INT 1
11988: PUSH
11989: EMPTY
11990: LIST
11991: LIST
11992: PUSH
11993: LD_INT 0
11995: PUSH
11996: LD_INT 1
11998: PUSH
11999: EMPTY
12000: LIST
12001: LIST
12002: PUSH
12003: LD_INT 1
12005: NEG
12006: PUSH
12007: LD_INT 0
12009: PUSH
12010: EMPTY
12011: LIST
12012: LIST
12013: PUSH
12014: LD_INT 1
12016: NEG
12017: PUSH
12018: LD_INT 1
12020: NEG
12021: PUSH
12022: EMPTY
12023: LIST
12024: LIST
12025: PUSH
12026: LD_INT 1
12028: NEG
12029: PUSH
12030: LD_INT 2
12032: NEG
12033: PUSH
12034: EMPTY
12035: LIST
12036: LIST
12037: PUSH
12038: LD_INT 0
12040: PUSH
12041: LD_INT 2
12043: NEG
12044: PUSH
12045: EMPTY
12046: LIST
12047: LIST
12048: PUSH
12049: LD_INT 1
12051: PUSH
12052: LD_INT 1
12054: NEG
12055: PUSH
12056: EMPTY
12057: LIST
12058: LIST
12059: PUSH
12060: LD_INT 2
12062: PUSH
12063: LD_INT 0
12065: PUSH
12066: EMPTY
12067: LIST
12068: LIST
12069: PUSH
12070: LD_INT 2
12072: PUSH
12073: LD_INT 1
12075: PUSH
12076: EMPTY
12077: LIST
12078: LIST
12079: PUSH
12080: LD_INT 2
12082: PUSH
12083: LD_INT 2
12085: PUSH
12086: EMPTY
12087: LIST
12088: LIST
12089: PUSH
12090: LD_INT 1
12092: PUSH
12093: LD_INT 2
12095: PUSH
12096: EMPTY
12097: LIST
12098: LIST
12099: PUSH
12100: LD_INT 0
12102: PUSH
12103: LD_INT 2
12105: PUSH
12106: EMPTY
12107: LIST
12108: LIST
12109: PUSH
12110: LD_INT 1
12112: NEG
12113: PUSH
12114: LD_INT 1
12116: PUSH
12117: EMPTY
12118: LIST
12119: LIST
12120: PUSH
12121: LD_INT 2
12123: NEG
12124: PUSH
12125: LD_INT 0
12127: PUSH
12128: EMPTY
12129: LIST
12130: LIST
12131: PUSH
12132: LD_INT 2
12134: NEG
12135: PUSH
12136: LD_INT 1
12138: NEG
12139: PUSH
12140: EMPTY
12141: LIST
12142: LIST
12143: PUSH
12144: LD_INT 2
12146: NEG
12147: PUSH
12148: LD_INT 2
12150: NEG
12151: PUSH
12152: EMPTY
12153: LIST
12154: LIST
12155: PUSH
12156: LD_INT 2
12158: PUSH
12159: LD_INT 3
12161: PUSH
12162: EMPTY
12163: LIST
12164: LIST
12165: PUSH
12166: LD_INT 1
12168: PUSH
12169: LD_INT 3
12171: PUSH
12172: EMPTY
12173: LIST
12174: LIST
12175: PUSH
12176: LD_INT 1
12178: NEG
12179: PUSH
12180: LD_INT 2
12182: PUSH
12183: EMPTY
12184: LIST
12185: LIST
12186: PUSH
12187: LD_INT 2
12189: NEG
12190: PUSH
12191: LD_INT 1
12193: PUSH
12194: EMPTY
12195: LIST
12196: LIST
12197: PUSH
12198: EMPTY
12199: LIST
12200: LIST
12201: LIST
12202: LIST
12203: LIST
12204: LIST
12205: LIST
12206: LIST
12207: LIST
12208: LIST
12209: LIST
12210: LIST
12211: LIST
12212: LIST
12213: LIST
12214: LIST
12215: LIST
12216: LIST
12217: LIST
12218: LIST
12219: LIST
12220: LIST
12221: LIST
12222: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12223: LD_ADDR_VAR 0 27
12227: PUSH
12228: LD_INT 0
12230: PUSH
12231: LD_INT 0
12233: PUSH
12234: EMPTY
12235: LIST
12236: LIST
12237: PUSH
12238: LD_INT 0
12240: PUSH
12241: LD_INT 1
12243: NEG
12244: PUSH
12245: EMPTY
12246: LIST
12247: LIST
12248: PUSH
12249: LD_INT 1
12251: PUSH
12252: LD_INT 0
12254: PUSH
12255: EMPTY
12256: LIST
12257: LIST
12258: PUSH
12259: LD_INT 1
12261: PUSH
12262: LD_INT 1
12264: PUSH
12265: EMPTY
12266: LIST
12267: LIST
12268: PUSH
12269: LD_INT 0
12271: PUSH
12272: LD_INT 1
12274: PUSH
12275: EMPTY
12276: LIST
12277: LIST
12278: PUSH
12279: LD_INT 1
12281: NEG
12282: PUSH
12283: LD_INT 0
12285: PUSH
12286: EMPTY
12287: LIST
12288: LIST
12289: PUSH
12290: LD_INT 1
12292: NEG
12293: PUSH
12294: LD_INT 1
12296: NEG
12297: PUSH
12298: EMPTY
12299: LIST
12300: LIST
12301: PUSH
12302: LD_INT 1
12304: NEG
12305: PUSH
12306: LD_INT 2
12308: NEG
12309: PUSH
12310: EMPTY
12311: LIST
12312: LIST
12313: PUSH
12314: LD_INT 0
12316: PUSH
12317: LD_INT 2
12319: NEG
12320: PUSH
12321: EMPTY
12322: LIST
12323: LIST
12324: PUSH
12325: LD_INT 1
12327: PUSH
12328: LD_INT 1
12330: NEG
12331: PUSH
12332: EMPTY
12333: LIST
12334: LIST
12335: PUSH
12336: LD_INT 2
12338: PUSH
12339: LD_INT 0
12341: PUSH
12342: EMPTY
12343: LIST
12344: LIST
12345: PUSH
12346: LD_INT 2
12348: PUSH
12349: LD_INT 1
12351: PUSH
12352: EMPTY
12353: LIST
12354: LIST
12355: PUSH
12356: LD_INT 2
12358: PUSH
12359: LD_INT 2
12361: PUSH
12362: EMPTY
12363: LIST
12364: LIST
12365: PUSH
12366: LD_INT 1
12368: PUSH
12369: LD_INT 2
12371: PUSH
12372: EMPTY
12373: LIST
12374: LIST
12375: PUSH
12376: LD_INT 0
12378: PUSH
12379: LD_INT 2
12381: PUSH
12382: EMPTY
12383: LIST
12384: LIST
12385: PUSH
12386: LD_INT 1
12388: NEG
12389: PUSH
12390: LD_INT 1
12392: PUSH
12393: EMPTY
12394: LIST
12395: LIST
12396: PUSH
12397: LD_INT 2
12399: NEG
12400: PUSH
12401: LD_INT 0
12403: PUSH
12404: EMPTY
12405: LIST
12406: LIST
12407: PUSH
12408: LD_INT 2
12410: NEG
12411: PUSH
12412: LD_INT 1
12414: NEG
12415: PUSH
12416: EMPTY
12417: LIST
12418: LIST
12419: PUSH
12420: LD_INT 2
12422: NEG
12423: PUSH
12424: LD_INT 2
12426: NEG
12427: PUSH
12428: EMPTY
12429: LIST
12430: LIST
12431: PUSH
12432: LD_INT 1
12434: NEG
12435: PUSH
12436: LD_INT 2
12438: PUSH
12439: EMPTY
12440: LIST
12441: LIST
12442: PUSH
12443: LD_INT 2
12445: NEG
12446: PUSH
12447: LD_INT 1
12449: PUSH
12450: EMPTY
12451: LIST
12452: LIST
12453: PUSH
12454: LD_INT 3
12456: NEG
12457: PUSH
12458: LD_INT 1
12460: NEG
12461: PUSH
12462: EMPTY
12463: LIST
12464: LIST
12465: PUSH
12466: LD_INT 3
12468: NEG
12469: PUSH
12470: LD_INT 2
12472: NEG
12473: PUSH
12474: EMPTY
12475: LIST
12476: LIST
12477: PUSH
12478: EMPTY
12479: LIST
12480: LIST
12481: LIST
12482: LIST
12483: LIST
12484: LIST
12485: LIST
12486: LIST
12487: LIST
12488: LIST
12489: LIST
12490: LIST
12491: LIST
12492: LIST
12493: LIST
12494: LIST
12495: LIST
12496: LIST
12497: LIST
12498: LIST
12499: LIST
12500: LIST
12501: LIST
12502: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12503: LD_ADDR_VAR 0 28
12507: PUSH
12508: LD_INT 0
12510: PUSH
12511: LD_INT 0
12513: PUSH
12514: EMPTY
12515: LIST
12516: LIST
12517: PUSH
12518: LD_INT 0
12520: PUSH
12521: LD_INT 1
12523: NEG
12524: PUSH
12525: EMPTY
12526: LIST
12527: LIST
12528: PUSH
12529: LD_INT 1
12531: PUSH
12532: LD_INT 0
12534: PUSH
12535: EMPTY
12536: LIST
12537: LIST
12538: PUSH
12539: LD_INT 1
12541: PUSH
12542: LD_INT 1
12544: PUSH
12545: EMPTY
12546: LIST
12547: LIST
12548: PUSH
12549: LD_INT 0
12551: PUSH
12552: LD_INT 1
12554: PUSH
12555: EMPTY
12556: LIST
12557: LIST
12558: PUSH
12559: LD_INT 1
12561: NEG
12562: PUSH
12563: LD_INT 0
12565: PUSH
12566: EMPTY
12567: LIST
12568: LIST
12569: PUSH
12570: LD_INT 1
12572: NEG
12573: PUSH
12574: LD_INT 1
12576: NEG
12577: PUSH
12578: EMPTY
12579: LIST
12580: LIST
12581: PUSH
12582: LD_INT 1
12584: NEG
12585: PUSH
12586: LD_INT 2
12588: NEG
12589: PUSH
12590: EMPTY
12591: LIST
12592: LIST
12593: PUSH
12594: LD_INT 0
12596: PUSH
12597: LD_INT 2
12599: NEG
12600: PUSH
12601: EMPTY
12602: LIST
12603: LIST
12604: PUSH
12605: LD_INT 1
12607: PUSH
12608: LD_INT 1
12610: NEG
12611: PUSH
12612: EMPTY
12613: LIST
12614: LIST
12615: PUSH
12616: LD_INT 2
12618: PUSH
12619: LD_INT 0
12621: PUSH
12622: EMPTY
12623: LIST
12624: LIST
12625: PUSH
12626: LD_INT 2
12628: PUSH
12629: LD_INT 1
12631: PUSH
12632: EMPTY
12633: LIST
12634: LIST
12635: PUSH
12636: LD_INT 2
12638: PUSH
12639: LD_INT 2
12641: PUSH
12642: EMPTY
12643: LIST
12644: LIST
12645: PUSH
12646: LD_INT 1
12648: PUSH
12649: LD_INT 2
12651: PUSH
12652: EMPTY
12653: LIST
12654: LIST
12655: PUSH
12656: LD_INT 0
12658: PUSH
12659: LD_INT 2
12661: PUSH
12662: EMPTY
12663: LIST
12664: LIST
12665: PUSH
12666: LD_INT 1
12668: NEG
12669: PUSH
12670: LD_INT 1
12672: PUSH
12673: EMPTY
12674: LIST
12675: LIST
12676: PUSH
12677: LD_INT 2
12679: NEG
12680: PUSH
12681: LD_INT 0
12683: PUSH
12684: EMPTY
12685: LIST
12686: LIST
12687: PUSH
12688: LD_INT 2
12690: NEG
12691: PUSH
12692: LD_INT 1
12694: NEG
12695: PUSH
12696: EMPTY
12697: LIST
12698: LIST
12699: PUSH
12700: LD_INT 2
12702: NEG
12703: PUSH
12704: LD_INT 2
12706: NEG
12707: PUSH
12708: EMPTY
12709: LIST
12710: LIST
12711: PUSH
12712: LD_INT 2
12714: NEG
12715: PUSH
12716: LD_INT 3
12718: NEG
12719: PUSH
12720: EMPTY
12721: LIST
12722: LIST
12723: PUSH
12724: LD_INT 1
12726: NEG
12727: PUSH
12728: LD_INT 3
12730: NEG
12731: PUSH
12732: EMPTY
12733: LIST
12734: LIST
12735: PUSH
12736: LD_INT 3
12738: NEG
12739: PUSH
12740: LD_INT 1
12742: NEG
12743: PUSH
12744: EMPTY
12745: LIST
12746: LIST
12747: PUSH
12748: LD_INT 3
12750: NEG
12751: PUSH
12752: LD_INT 2
12754: NEG
12755: PUSH
12756: EMPTY
12757: LIST
12758: LIST
12759: PUSH
12760: EMPTY
12761: LIST
12762: LIST
12763: LIST
12764: LIST
12765: LIST
12766: LIST
12767: LIST
12768: LIST
12769: LIST
12770: LIST
12771: LIST
12772: LIST
12773: LIST
12774: LIST
12775: LIST
12776: LIST
12777: LIST
12778: LIST
12779: LIST
12780: LIST
12781: LIST
12782: LIST
12783: LIST
12784: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
12785: LD_ADDR_VAR 0 29
12789: PUSH
12790: LD_INT 0
12792: PUSH
12793: LD_INT 0
12795: PUSH
12796: EMPTY
12797: LIST
12798: LIST
12799: PUSH
12800: LD_INT 0
12802: PUSH
12803: LD_INT 1
12805: NEG
12806: PUSH
12807: EMPTY
12808: LIST
12809: LIST
12810: PUSH
12811: LD_INT 1
12813: PUSH
12814: LD_INT 0
12816: PUSH
12817: EMPTY
12818: LIST
12819: LIST
12820: PUSH
12821: LD_INT 1
12823: PUSH
12824: LD_INT 1
12826: PUSH
12827: EMPTY
12828: LIST
12829: LIST
12830: PUSH
12831: LD_INT 0
12833: PUSH
12834: LD_INT 1
12836: PUSH
12837: EMPTY
12838: LIST
12839: LIST
12840: PUSH
12841: LD_INT 1
12843: NEG
12844: PUSH
12845: LD_INT 0
12847: PUSH
12848: EMPTY
12849: LIST
12850: LIST
12851: PUSH
12852: LD_INT 1
12854: NEG
12855: PUSH
12856: LD_INT 1
12858: NEG
12859: PUSH
12860: EMPTY
12861: LIST
12862: LIST
12863: PUSH
12864: LD_INT 1
12866: NEG
12867: PUSH
12868: LD_INT 2
12870: NEG
12871: PUSH
12872: EMPTY
12873: LIST
12874: LIST
12875: PUSH
12876: LD_INT 0
12878: PUSH
12879: LD_INT 2
12881: NEG
12882: PUSH
12883: EMPTY
12884: LIST
12885: LIST
12886: PUSH
12887: LD_INT 1
12889: PUSH
12890: LD_INT 1
12892: NEG
12893: PUSH
12894: EMPTY
12895: LIST
12896: LIST
12897: PUSH
12898: LD_INT 2
12900: PUSH
12901: LD_INT 0
12903: PUSH
12904: EMPTY
12905: LIST
12906: LIST
12907: PUSH
12908: LD_INT 2
12910: PUSH
12911: LD_INT 1
12913: PUSH
12914: EMPTY
12915: LIST
12916: LIST
12917: PUSH
12918: LD_INT 1
12920: PUSH
12921: LD_INT 2
12923: PUSH
12924: EMPTY
12925: LIST
12926: LIST
12927: PUSH
12928: LD_INT 0
12930: PUSH
12931: LD_INT 2
12933: PUSH
12934: EMPTY
12935: LIST
12936: LIST
12937: PUSH
12938: LD_INT 1
12940: NEG
12941: PUSH
12942: LD_INT 1
12944: PUSH
12945: EMPTY
12946: LIST
12947: LIST
12948: PUSH
12949: LD_INT 2
12951: NEG
12952: PUSH
12953: LD_INT 1
12955: NEG
12956: PUSH
12957: EMPTY
12958: LIST
12959: LIST
12960: PUSH
12961: LD_INT 2
12963: NEG
12964: PUSH
12965: LD_INT 2
12967: NEG
12968: PUSH
12969: EMPTY
12970: LIST
12971: LIST
12972: PUSH
12973: LD_INT 2
12975: NEG
12976: PUSH
12977: LD_INT 3
12979: NEG
12980: PUSH
12981: EMPTY
12982: LIST
12983: LIST
12984: PUSH
12985: LD_INT 2
12987: PUSH
12988: LD_INT 1
12990: NEG
12991: PUSH
12992: EMPTY
12993: LIST
12994: LIST
12995: PUSH
12996: LD_INT 3
12998: PUSH
12999: LD_INT 1
13001: PUSH
13002: EMPTY
13003: LIST
13004: LIST
13005: PUSH
13006: LD_INT 1
13008: PUSH
13009: LD_INT 3
13011: PUSH
13012: EMPTY
13013: LIST
13014: LIST
13015: PUSH
13016: LD_INT 1
13018: NEG
13019: PUSH
13020: LD_INT 2
13022: PUSH
13023: EMPTY
13024: LIST
13025: LIST
13026: PUSH
13027: LD_INT 3
13029: NEG
13030: PUSH
13031: LD_INT 2
13033: NEG
13034: PUSH
13035: EMPTY
13036: LIST
13037: LIST
13038: PUSH
13039: EMPTY
13040: LIST
13041: LIST
13042: LIST
13043: LIST
13044: LIST
13045: LIST
13046: LIST
13047: LIST
13048: LIST
13049: LIST
13050: LIST
13051: LIST
13052: LIST
13053: LIST
13054: LIST
13055: LIST
13056: LIST
13057: LIST
13058: LIST
13059: LIST
13060: LIST
13061: LIST
13062: LIST
13063: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13064: LD_ADDR_VAR 0 30
13068: PUSH
13069: LD_INT 0
13071: PUSH
13072: LD_INT 0
13074: PUSH
13075: EMPTY
13076: LIST
13077: LIST
13078: PUSH
13079: LD_INT 0
13081: PUSH
13082: LD_INT 1
13084: NEG
13085: PUSH
13086: EMPTY
13087: LIST
13088: LIST
13089: PUSH
13090: LD_INT 1
13092: PUSH
13093: LD_INT 0
13095: PUSH
13096: EMPTY
13097: LIST
13098: LIST
13099: PUSH
13100: LD_INT 1
13102: PUSH
13103: LD_INT 1
13105: PUSH
13106: EMPTY
13107: LIST
13108: LIST
13109: PUSH
13110: LD_INT 0
13112: PUSH
13113: LD_INT 1
13115: PUSH
13116: EMPTY
13117: LIST
13118: LIST
13119: PUSH
13120: LD_INT 1
13122: NEG
13123: PUSH
13124: LD_INT 0
13126: PUSH
13127: EMPTY
13128: LIST
13129: LIST
13130: PUSH
13131: LD_INT 1
13133: NEG
13134: PUSH
13135: LD_INT 1
13137: NEG
13138: PUSH
13139: EMPTY
13140: LIST
13141: LIST
13142: PUSH
13143: LD_INT 1
13145: NEG
13146: PUSH
13147: LD_INT 2
13149: NEG
13150: PUSH
13151: EMPTY
13152: LIST
13153: LIST
13154: PUSH
13155: LD_INT 0
13157: PUSH
13158: LD_INT 2
13160: NEG
13161: PUSH
13162: EMPTY
13163: LIST
13164: LIST
13165: PUSH
13166: LD_INT 1
13168: PUSH
13169: LD_INT 1
13171: NEG
13172: PUSH
13173: EMPTY
13174: LIST
13175: LIST
13176: PUSH
13177: LD_INT 2
13179: PUSH
13180: LD_INT 0
13182: PUSH
13183: EMPTY
13184: LIST
13185: LIST
13186: PUSH
13187: LD_INT 2
13189: PUSH
13190: LD_INT 1
13192: PUSH
13193: EMPTY
13194: LIST
13195: LIST
13196: PUSH
13197: LD_INT 2
13199: PUSH
13200: LD_INT 2
13202: PUSH
13203: EMPTY
13204: LIST
13205: LIST
13206: PUSH
13207: LD_INT 1
13209: PUSH
13210: LD_INT 2
13212: PUSH
13213: EMPTY
13214: LIST
13215: LIST
13216: PUSH
13217: LD_INT 1
13219: NEG
13220: PUSH
13221: LD_INT 1
13223: PUSH
13224: EMPTY
13225: LIST
13226: LIST
13227: PUSH
13228: LD_INT 2
13230: NEG
13231: PUSH
13232: LD_INT 0
13234: PUSH
13235: EMPTY
13236: LIST
13237: LIST
13238: PUSH
13239: LD_INT 2
13241: NEG
13242: PUSH
13243: LD_INT 1
13245: NEG
13246: PUSH
13247: EMPTY
13248: LIST
13249: LIST
13250: PUSH
13251: LD_INT 1
13253: NEG
13254: PUSH
13255: LD_INT 3
13257: NEG
13258: PUSH
13259: EMPTY
13260: LIST
13261: LIST
13262: PUSH
13263: LD_INT 1
13265: PUSH
13266: LD_INT 2
13268: NEG
13269: PUSH
13270: EMPTY
13271: LIST
13272: LIST
13273: PUSH
13274: LD_INT 3
13276: PUSH
13277: LD_INT 2
13279: PUSH
13280: EMPTY
13281: LIST
13282: LIST
13283: PUSH
13284: LD_INT 2
13286: PUSH
13287: LD_INT 3
13289: PUSH
13290: EMPTY
13291: LIST
13292: LIST
13293: PUSH
13294: LD_INT 2
13296: NEG
13297: PUSH
13298: LD_INT 1
13300: PUSH
13301: EMPTY
13302: LIST
13303: LIST
13304: PUSH
13305: LD_INT 3
13307: NEG
13308: PUSH
13309: LD_INT 1
13311: NEG
13312: PUSH
13313: EMPTY
13314: LIST
13315: LIST
13316: PUSH
13317: EMPTY
13318: LIST
13319: LIST
13320: LIST
13321: LIST
13322: LIST
13323: LIST
13324: LIST
13325: LIST
13326: LIST
13327: LIST
13328: LIST
13329: LIST
13330: LIST
13331: LIST
13332: LIST
13333: LIST
13334: LIST
13335: LIST
13336: LIST
13337: LIST
13338: LIST
13339: LIST
13340: LIST
13341: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13342: LD_ADDR_VAR 0 31
13346: PUSH
13347: LD_INT 0
13349: PUSH
13350: LD_INT 0
13352: PUSH
13353: EMPTY
13354: LIST
13355: LIST
13356: PUSH
13357: LD_INT 0
13359: PUSH
13360: LD_INT 1
13362: NEG
13363: PUSH
13364: EMPTY
13365: LIST
13366: LIST
13367: PUSH
13368: LD_INT 1
13370: PUSH
13371: LD_INT 0
13373: PUSH
13374: EMPTY
13375: LIST
13376: LIST
13377: PUSH
13378: LD_INT 1
13380: PUSH
13381: LD_INT 1
13383: PUSH
13384: EMPTY
13385: LIST
13386: LIST
13387: PUSH
13388: LD_INT 0
13390: PUSH
13391: LD_INT 1
13393: PUSH
13394: EMPTY
13395: LIST
13396: LIST
13397: PUSH
13398: LD_INT 1
13400: NEG
13401: PUSH
13402: LD_INT 0
13404: PUSH
13405: EMPTY
13406: LIST
13407: LIST
13408: PUSH
13409: LD_INT 1
13411: NEG
13412: PUSH
13413: LD_INT 1
13415: NEG
13416: PUSH
13417: EMPTY
13418: LIST
13419: LIST
13420: PUSH
13421: LD_INT 1
13423: NEG
13424: PUSH
13425: LD_INT 2
13427: NEG
13428: PUSH
13429: EMPTY
13430: LIST
13431: LIST
13432: PUSH
13433: LD_INT 1
13435: PUSH
13436: LD_INT 1
13438: NEG
13439: PUSH
13440: EMPTY
13441: LIST
13442: LIST
13443: PUSH
13444: LD_INT 2
13446: PUSH
13447: LD_INT 0
13449: PUSH
13450: EMPTY
13451: LIST
13452: LIST
13453: PUSH
13454: LD_INT 2
13456: PUSH
13457: LD_INT 1
13459: PUSH
13460: EMPTY
13461: LIST
13462: LIST
13463: PUSH
13464: LD_INT 2
13466: PUSH
13467: LD_INT 2
13469: PUSH
13470: EMPTY
13471: LIST
13472: LIST
13473: PUSH
13474: LD_INT 1
13476: PUSH
13477: LD_INT 2
13479: PUSH
13480: EMPTY
13481: LIST
13482: LIST
13483: PUSH
13484: LD_INT 0
13486: PUSH
13487: LD_INT 2
13489: PUSH
13490: EMPTY
13491: LIST
13492: LIST
13493: PUSH
13494: LD_INT 1
13496: NEG
13497: PUSH
13498: LD_INT 1
13500: PUSH
13501: EMPTY
13502: LIST
13503: LIST
13504: PUSH
13505: LD_INT 2
13507: NEG
13508: PUSH
13509: LD_INT 1
13511: NEG
13512: PUSH
13513: EMPTY
13514: LIST
13515: LIST
13516: PUSH
13517: LD_INT 2
13519: NEG
13520: PUSH
13521: LD_INT 2
13523: NEG
13524: PUSH
13525: EMPTY
13526: LIST
13527: LIST
13528: PUSH
13529: LD_INT 2
13531: NEG
13532: PUSH
13533: LD_INT 3
13535: NEG
13536: PUSH
13537: EMPTY
13538: LIST
13539: LIST
13540: PUSH
13541: LD_INT 2
13543: PUSH
13544: LD_INT 1
13546: NEG
13547: PUSH
13548: EMPTY
13549: LIST
13550: LIST
13551: PUSH
13552: LD_INT 3
13554: PUSH
13555: LD_INT 1
13557: PUSH
13558: EMPTY
13559: LIST
13560: LIST
13561: PUSH
13562: LD_INT 1
13564: PUSH
13565: LD_INT 3
13567: PUSH
13568: EMPTY
13569: LIST
13570: LIST
13571: PUSH
13572: LD_INT 1
13574: NEG
13575: PUSH
13576: LD_INT 2
13578: PUSH
13579: EMPTY
13580: LIST
13581: LIST
13582: PUSH
13583: LD_INT 3
13585: NEG
13586: PUSH
13587: LD_INT 2
13589: NEG
13590: PUSH
13591: EMPTY
13592: LIST
13593: LIST
13594: PUSH
13595: EMPTY
13596: LIST
13597: LIST
13598: LIST
13599: LIST
13600: LIST
13601: LIST
13602: LIST
13603: LIST
13604: LIST
13605: LIST
13606: LIST
13607: LIST
13608: LIST
13609: LIST
13610: LIST
13611: LIST
13612: LIST
13613: LIST
13614: LIST
13615: LIST
13616: LIST
13617: LIST
13618: LIST
13619: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13620: LD_ADDR_VAR 0 32
13624: PUSH
13625: LD_INT 0
13627: PUSH
13628: LD_INT 0
13630: PUSH
13631: EMPTY
13632: LIST
13633: LIST
13634: PUSH
13635: LD_INT 0
13637: PUSH
13638: LD_INT 1
13640: NEG
13641: PUSH
13642: EMPTY
13643: LIST
13644: LIST
13645: PUSH
13646: LD_INT 1
13648: PUSH
13649: LD_INT 0
13651: PUSH
13652: EMPTY
13653: LIST
13654: LIST
13655: PUSH
13656: LD_INT 1
13658: PUSH
13659: LD_INT 1
13661: PUSH
13662: EMPTY
13663: LIST
13664: LIST
13665: PUSH
13666: LD_INT 0
13668: PUSH
13669: LD_INT 1
13671: PUSH
13672: EMPTY
13673: LIST
13674: LIST
13675: PUSH
13676: LD_INT 1
13678: NEG
13679: PUSH
13680: LD_INT 0
13682: PUSH
13683: EMPTY
13684: LIST
13685: LIST
13686: PUSH
13687: LD_INT 1
13689: NEG
13690: PUSH
13691: LD_INT 1
13693: NEG
13694: PUSH
13695: EMPTY
13696: LIST
13697: LIST
13698: PUSH
13699: LD_INT 1
13701: NEG
13702: PUSH
13703: LD_INT 2
13705: NEG
13706: PUSH
13707: EMPTY
13708: LIST
13709: LIST
13710: PUSH
13711: LD_INT 0
13713: PUSH
13714: LD_INT 2
13716: NEG
13717: PUSH
13718: EMPTY
13719: LIST
13720: LIST
13721: PUSH
13722: LD_INT 1
13724: PUSH
13725: LD_INT 1
13727: NEG
13728: PUSH
13729: EMPTY
13730: LIST
13731: LIST
13732: PUSH
13733: LD_INT 2
13735: PUSH
13736: LD_INT 1
13738: PUSH
13739: EMPTY
13740: LIST
13741: LIST
13742: PUSH
13743: LD_INT 2
13745: PUSH
13746: LD_INT 2
13748: PUSH
13749: EMPTY
13750: LIST
13751: LIST
13752: PUSH
13753: LD_INT 1
13755: PUSH
13756: LD_INT 2
13758: PUSH
13759: EMPTY
13760: LIST
13761: LIST
13762: PUSH
13763: LD_INT 0
13765: PUSH
13766: LD_INT 2
13768: PUSH
13769: EMPTY
13770: LIST
13771: LIST
13772: PUSH
13773: LD_INT 1
13775: NEG
13776: PUSH
13777: LD_INT 1
13779: PUSH
13780: EMPTY
13781: LIST
13782: LIST
13783: PUSH
13784: LD_INT 2
13786: NEG
13787: PUSH
13788: LD_INT 0
13790: PUSH
13791: EMPTY
13792: LIST
13793: LIST
13794: PUSH
13795: LD_INT 2
13797: NEG
13798: PUSH
13799: LD_INT 1
13801: NEG
13802: PUSH
13803: EMPTY
13804: LIST
13805: LIST
13806: PUSH
13807: LD_INT 1
13809: NEG
13810: PUSH
13811: LD_INT 3
13813: NEG
13814: PUSH
13815: EMPTY
13816: LIST
13817: LIST
13818: PUSH
13819: LD_INT 1
13821: PUSH
13822: LD_INT 2
13824: NEG
13825: PUSH
13826: EMPTY
13827: LIST
13828: LIST
13829: PUSH
13830: LD_INT 3
13832: PUSH
13833: LD_INT 2
13835: PUSH
13836: EMPTY
13837: LIST
13838: LIST
13839: PUSH
13840: LD_INT 2
13842: PUSH
13843: LD_INT 3
13845: PUSH
13846: EMPTY
13847: LIST
13848: LIST
13849: PUSH
13850: LD_INT 2
13852: NEG
13853: PUSH
13854: LD_INT 1
13856: PUSH
13857: EMPTY
13858: LIST
13859: LIST
13860: PUSH
13861: LD_INT 3
13863: NEG
13864: PUSH
13865: LD_INT 1
13867: NEG
13868: PUSH
13869: EMPTY
13870: LIST
13871: LIST
13872: PUSH
13873: EMPTY
13874: LIST
13875: LIST
13876: LIST
13877: LIST
13878: LIST
13879: LIST
13880: LIST
13881: LIST
13882: LIST
13883: LIST
13884: LIST
13885: LIST
13886: LIST
13887: LIST
13888: LIST
13889: LIST
13890: LIST
13891: LIST
13892: LIST
13893: LIST
13894: LIST
13895: LIST
13896: LIST
13897: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13898: LD_ADDR_VAR 0 33
13902: PUSH
13903: LD_INT 0
13905: PUSH
13906: LD_INT 0
13908: PUSH
13909: EMPTY
13910: LIST
13911: LIST
13912: PUSH
13913: LD_INT 0
13915: PUSH
13916: LD_INT 1
13918: NEG
13919: PUSH
13920: EMPTY
13921: LIST
13922: LIST
13923: PUSH
13924: LD_INT 1
13926: PUSH
13927: LD_INT 0
13929: PUSH
13930: EMPTY
13931: LIST
13932: LIST
13933: PUSH
13934: LD_INT 1
13936: PUSH
13937: LD_INT 1
13939: PUSH
13940: EMPTY
13941: LIST
13942: LIST
13943: PUSH
13944: LD_INT 0
13946: PUSH
13947: LD_INT 1
13949: PUSH
13950: EMPTY
13951: LIST
13952: LIST
13953: PUSH
13954: LD_INT 1
13956: NEG
13957: PUSH
13958: LD_INT 0
13960: PUSH
13961: EMPTY
13962: LIST
13963: LIST
13964: PUSH
13965: LD_INT 1
13967: NEG
13968: PUSH
13969: LD_INT 1
13971: NEG
13972: PUSH
13973: EMPTY
13974: LIST
13975: LIST
13976: PUSH
13977: LD_INT 1
13979: NEG
13980: PUSH
13981: LD_INT 2
13983: NEG
13984: PUSH
13985: EMPTY
13986: LIST
13987: LIST
13988: PUSH
13989: LD_INT 1
13991: PUSH
13992: LD_INT 1
13994: NEG
13995: PUSH
13996: EMPTY
13997: LIST
13998: LIST
13999: PUSH
14000: LD_INT 2
14002: PUSH
14003: LD_INT 0
14005: PUSH
14006: EMPTY
14007: LIST
14008: LIST
14009: PUSH
14010: LD_INT 2
14012: PUSH
14013: LD_INT 1
14015: PUSH
14016: EMPTY
14017: LIST
14018: LIST
14019: PUSH
14020: LD_INT 1
14022: PUSH
14023: LD_INT 2
14025: PUSH
14026: EMPTY
14027: LIST
14028: LIST
14029: PUSH
14030: LD_INT 0
14032: PUSH
14033: LD_INT 2
14035: PUSH
14036: EMPTY
14037: LIST
14038: LIST
14039: PUSH
14040: LD_INT 1
14042: NEG
14043: PUSH
14044: LD_INT 1
14046: PUSH
14047: EMPTY
14048: LIST
14049: LIST
14050: PUSH
14051: LD_INT 2
14053: NEG
14054: PUSH
14055: LD_INT 0
14057: PUSH
14058: EMPTY
14059: LIST
14060: LIST
14061: PUSH
14062: LD_INT 2
14064: NEG
14065: PUSH
14066: LD_INT 1
14068: NEG
14069: PUSH
14070: EMPTY
14071: LIST
14072: LIST
14073: PUSH
14074: LD_INT 2
14076: NEG
14077: PUSH
14078: LD_INT 2
14080: NEG
14081: PUSH
14082: EMPTY
14083: LIST
14084: LIST
14085: PUSH
14086: LD_INT 2
14088: NEG
14089: PUSH
14090: LD_INT 3
14092: NEG
14093: PUSH
14094: EMPTY
14095: LIST
14096: LIST
14097: PUSH
14098: LD_INT 2
14100: PUSH
14101: LD_INT 1
14103: NEG
14104: PUSH
14105: EMPTY
14106: LIST
14107: LIST
14108: PUSH
14109: LD_INT 3
14111: PUSH
14112: LD_INT 1
14114: PUSH
14115: EMPTY
14116: LIST
14117: LIST
14118: PUSH
14119: LD_INT 1
14121: PUSH
14122: LD_INT 3
14124: PUSH
14125: EMPTY
14126: LIST
14127: LIST
14128: PUSH
14129: LD_INT 1
14131: NEG
14132: PUSH
14133: LD_INT 2
14135: PUSH
14136: EMPTY
14137: LIST
14138: LIST
14139: PUSH
14140: LD_INT 3
14142: NEG
14143: PUSH
14144: LD_INT 2
14146: NEG
14147: PUSH
14148: EMPTY
14149: LIST
14150: LIST
14151: PUSH
14152: EMPTY
14153: LIST
14154: LIST
14155: LIST
14156: LIST
14157: LIST
14158: LIST
14159: LIST
14160: LIST
14161: LIST
14162: LIST
14163: LIST
14164: LIST
14165: LIST
14166: LIST
14167: LIST
14168: LIST
14169: LIST
14170: LIST
14171: LIST
14172: LIST
14173: LIST
14174: LIST
14175: LIST
14176: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14177: LD_ADDR_VAR 0 34
14181: PUSH
14182: LD_INT 0
14184: PUSH
14185: LD_INT 0
14187: PUSH
14188: EMPTY
14189: LIST
14190: LIST
14191: PUSH
14192: LD_INT 0
14194: PUSH
14195: LD_INT 1
14197: NEG
14198: PUSH
14199: EMPTY
14200: LIST
14201: LIST
14202: PUSH
14203: LD_INT 1
14205: PUSH
14206: LD_INT 0
14208: PUSH
14209: EMPTY
14210: LIST
14211: LIST
14212: PUSH
14213: LD_INT 1
14215: PUSH
14216: LD_INT 1
14218: PUSH
14219: EMPTY
14220: LIST
14221: LIST
14222: PUSH
14223: LD_INT 0
14225: PUSH
14226: LD_INT 1
14228: PUSH
14229: EMPTY
14230: LIST
14231: LIST
14232: PUSH
14233: LD_INT 1
14235: NEG
14236: PUSH
14237: LD_INT 0
14239: PUSH
14240: EMPTY
14241: LIST
14242: LIST
14243: PUSH
14244: LD_INT 1
14246: NEG
14247: PUSH
14248: LD_INT 1
14250: NEG
14251: PUSH
14252: EMPTY
14253: LIST
14254: LIST
14255: PUSH
14256: LD_INT 1
14258: NEG
14259: PUSH
14260: LD_INT 2
14262: NEG
14263: PUSH
14264: EMPTY
14265: LIST
14266: LIST
14267: PUSH
14268: LD_INT 0
14270: PUSH
14271: LD_INT 2
14273: NEG
14274: PUSH
14275: EMPTY
14276: LIST
14277: LIST
14278: PUSH
14279: LD_INT 1
14281: PUSH
14282: LD_INT 1
14284: NEG
14285: PUSH
14286: EMPTY
14287: LIST
14288: LIST
14289: PUSH
14290: LD_INT 2
14292: PUSH
14293: LD_INT 1
14295: PUSH
14296: EMPTY
14297: LIST
14298: LIST
14299: PUSH
14300: LD_INT 2
14302: PUSH
14303: LD_INT 2
14305: PUSH
14306: EMPTY
14307: LIST
14308: LIST
14309: PUSH
14310: LD_INT 1
14312: PUSH
14313: LD_INT 2
14315: PUSH
14316: EMPTY
14317: LIST
14318: LIST
14319: PUSH
14320: LD_INT 1
14322: NEG
14323: PUSH
14324: LD_INT 1
14326: PUSH
14327: EMPTY
14328: LIST
14329: LIST
14330: PUSH
14331: LD_INT 2
14333: NEG
14334: PUSH
14335: LD_INT 0
14337: PUSH
14338: EMPTY
14339: LIST
14340: LIST
14341: PUSH
14342: LD_INT 2
14344: NEG
14345: PUSH
14346: LD_INT 1
14348: NEG
14349: PUSH
14350: EMPTY
14351: LIST
14352: LIST
14353: PUSH
14354: LD_INT 2
14356: NEG
14357: PUSH
14358: LD_INT 2
14360: NEG
14361: PUSH
14362: EMPTY
14363: LIST
14364: LIST
14365: PUSH
14366: LD_INT 1
14368: NEG
14369: PUSH
14370: LD_INT 3
14372: NEG
14373: PUSH
14374: EMPTY
14375: LIST
14376: LIST
14377: PUSH
14378: LD_INT 1
14380: PUSH
14381: LD_INT 2
14383: NEG
14384: PUSH
14385: EMPTY
14386: LIST
14387: LIST
14388: PUSH
14389: LD_INT 3
14391: PUSH
14392: LD_INT 2
14394: PUSH
14395: EMPTY
14396: LIST
14397: LIST
14398: PUSH
14399: LD_INT 2
14401: PUSH
14402: LD_INT 3
14404: PUSH
14405: EMPTY
14406: LIST
14407: LIST
14408: PUSH
14409: LD_INT 2
14411: NEG
14412: PUSH
14413: LD_INT 1
14415: PUSH
14416: EMPTY
14417: LIST
14418: LIST
14419: PUSH
14420: LD_INT 3
14422: NEG
14423: PUSH
14424: LD_INT 1
14426: NEG
14427: PUSH
14428: EMPTY
14429: LIST
14430: LIST
14431: PUSH
14432: EMPTY
14433: LIST
14434: LIST
14435: LIST
14436: LIST
14437: LIST
14438: LIST
14439: LIST
14440: LIST
14441: LIST
14442: LIST
14443: LIST
14444: LIST
14445: LIST
14446: LIST
14447: LIST
14448: LIST
14449: LIST
14450: LIST
14451: LIST
14452: LIST
14453: LIST
14454: LIST
14455: LIST
14456: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14457: LD_ADDR_VAR 0 35
14461: PUSH
14462: LD_INT 0
14464: PUSH
14465: LD_INT 0
14467: PUSH
14468: EMPTY
14469: LIST
14470: LIST
14471: PUSH
14472: LD_INT 0
14474: PUSH
14475: LD_INT 1
14477: NEG
14478: PUSH
14479: EMPTY
14480: LIST
14481: LIST
14482: PUSH
14483: LD_INT 1
14485: PUSH
14486: LD_INT 0
14488: PUSH
14489: EMPTY
14490: LIST
14491: LIST
14492: PUSH
14493: LD_INT 1
14495: PUSH
14496: LD_INT 1
14498: PUSH
14499: EMPTY
14500: LIST
14501: LIST
14502: PUSH
14503: LD_INT 0
14505: PUSH
14506: LD_INT 1
14508: PUSH
14509: EMPTY
14510: LIST
14511: LIST
14512: PUSH
14513: LD_INT 1
14515: NEG
14516: PUSH
14517: LD_INT 0
14519: PUSH
14520: EMPTY
14521: LIST
14522: LIST
14523: PUSH
14524: LD_INT 1
14526: NEG
14527: PUSH
14528: LD_INT 1
14530: NEG
14531: PUSH
14532: EMPTY
14533: LIST
14534: LIST
14535: PUSH
14536: LD_INT 2
14538: PUSH
14539: LD_INT 1
14541: PUSH
14542: EMPTY
14543: LIST
14544: LIST
14545: PUSH
14546: LD_INT 2
14548: NEG
14549: PUSH
14550: LD_INT 1
14552: NEG
14553: PUSH
14554: EMPTY
14555: LIST
14556: LIST
14557: PUSH
14558: EMPTY
14559: LIST
14560: LIST
14561: LIST
14562: LIST
14563: LIST
14564: LIST
14565: LIST
14566: LIST
14567: LIST
14568: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14569: LD_ADDR_VAR 0 36
14573: PUSH
14574: LD_INT 0
14576: PUSH
14577: LD_INT 0
14579: PUSH
14580: EMPTY
14581: LIST
14582: LIST
14583: PUSH
14584: LD_INT 0
14586: PUSH
14587: LD_INT 1
14589: NEG
14590: PUSH
14591: EMPTY
14592: LIST
14593: LIST
14594: PUSH
14595: LD_INT 1
14597: PUSH
14598: LD_INT 0
14600: PUSH
14601: EMPTY
14602: LIST
14603: LIST
14604: PUSH
14605: LD_INT 1
14607: PUSH
14608: LD_INT 1
14610: PUSH
14611: EMPTY
14612: LIST
14613: LIST
14614: PUSH
14615: LD_INT 0
14617: PUSH
14618: LD_INT 1
14620: PUSH
14621: EMPTY
14622: LIST
14623: LIST
14624: PUSH
14625: LD_INT 1
14627: NEG
14628: PUSH
14629: LD_INT 0
14631: PUSH
14632: EMPTY
14633: LIST
14634: LIST
14635: PUSH
14636: LD_INT 1
14638: NEG
14639: PUSH
14640: LD_INT 1
14642: NEG
14643: PUSH
14644: EMPTY
14645: LIST
14646: LIST
14647: PUSH
14648: LD_INT 1
14650: NEG
14651: PUSH
14652: LD_INT 2
14654: NEG
14655: PUSH
14656: EMPTY
14657: LIST
14658: LIST
14659: PUSH
14660: LD_INT 1
14662: PUSH
14663: LD_INT 2
14665: PUSH
14666: EMPTY
14667: LIST
14668: LIST
14669: PUSH
14670: EMPTY
14671: LIST
14672: LIST
14673: LIST
14674: LIST
14675: LIST
14676: LIST
14677: LIST
14678: LIST
14679: LIST
14680: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
14681: LD_ADDR_VAR 0 37
14685: PUSH
14686: LD_INT 0
14688: PUSH
14689: LD_INT 0
14691: PUSH
14692: EMPTY
14693: LIST
14694: LIST
14695: PUSH
14696: LD_INT 0
14698: PUSH
14699: LD_INT 1
14701: NEG
14702: PUSH
14703: EMPTY
14704: LIST
14705: LIST
14706: PUSH
14707: LD_INT 1
14709: PUSH
14710: LD_INT 0
14712: PUSH
14713: EMPTY
14714: LIST
14715: LIST
14716: PUSH
14717: LD_INT 1
14719: PUSH
14720: LD_INT 1
14722: PUSH
14723: EMPTY
14724: LIST
14725: LIST
14726: PUSH
14727: LD_INT 0
14729: PUSH
14730: LD_INT 1
14732: PUSH
14733: EMPTY
14734: LIST
14735: LIST
14736: PUSH
14737: LD_INT 1
14739: NEG
14740: PUSH
14741: LD_INT 0
14743: PUSH
14744: EMPTY
14745: LIST
14746: LIST
14747: PUSH
14748: LD_INT 1
14750: NEG
14751: PUSH
14752: LD_INT 1
14754: NEG
14755: PUSH
14756: EMPTY
14757: LIST
14758: LIST
14759: PUSH
14760: LD_INT 1
14762: PUSH
14763: LD_INT 1
14765: NEG
14766: PUSH
14767: EMPTY
14768: LIST
14769: LIST
14770: PUSH
14771: LD_INT 1
14773: NEG
14774: PUSH
14775: LD_INT 1
14777: PUSH
14778: EMPTY
14779: LIST
14780: LIST
14781: PUSH
14782: EMPTY
14783: LIST
14784: LIST
14785: LIST
14786: LIST
14787: LIST
14788: LIST
14789: LIST
14790: LIST
14791: LIST
14792: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14793: LD_ADDR_VAR 0 38
14797: PUSH
14798: LD_INT 0
14800: PUSH
14801: LD_INT 0
14803: PUSH
14804: EMPTY
14805: LIST
14806: LIST
14807: PUSH
14808: LD_INT 0
14810: PUSH
14811: LD_INT 1
14813: NEG
14814: PUSH
14815: EMPTY
14816: LIST
14817: LIST
14818: PUSH
14819: LD_INT 1
14821: PUSH
14822: LD_INT 0
14824: PUSH
14825: EMPTY
14826: LIST
14827: LIST
14828: PUSH
14829: LD_INT 1
14831: PUSH
14832: LD_INT 1
14834: PUSH
14835: EMPTY
14836: LIST
14837: LIST
14838: PUSH
14839: LD_INT 0
14841: PUSH
14842: LD_INT 1
14844: PUSH
14845: EMPTY
14846: LIST
14847: LIST
14848: PUSH
14849: LD_INT 1
14851: NEG
14852: PUSH
14853: LD_INT 0
14855: PUSH
14856: EMPTY
14857: LIST
14858: LIST
14859: PUSH
14860: LD_INT 1
14862: NEG
14863: PUSH
14864: LD_INT 1
14866: NEG
14867: PUSH
14868: EMPTY
14869: LIST
14870: LIST
14871: PUSH
14872: LD_INT 2
14874: PUSH
14875: LD_INT 1
14877: PUSH
14878: EMPTY
14879: LIST
14880: LIST
14881: PUSH
14882: LD_INT 2
14884: NEG
14885: PUSH
14886: LD_INT 1
14888: NEG
14889: PUSH
14890: EMPTY
14891: LIST
14892: LIST
14893: PUSH
14894: EMPTY
14895: LIST
14896: LIST
14897: LIST
14898: LIST
14899: LIST
14900: LIST
14901: LIST
14902: LIST
14903: LIST
14904: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14905: LD_ADDR_VAR 0 39
14909: PUSH
14910: LD_INT 0
14912: PUSH
14913: LD_INT 0
14915: PUSH
14916: EMPTY
14917: LIST
14918: LIST
14919: PUSH
14920: LD_INT 0
14922: PUSH
14923: LD_INT 1
14925: NEG
14926: PUSH
14927: EMPTY
14928: LIST
14929: LIST
14930: PUSH
14931: LD_INT 1
14933: PUSH
14934: LD_INT 0
14936: PUSH
14937: EMPTY
14938: LIST
14939: LIST
14940: PUSH
14941: LD_INT 1
14943: PUSH
14944: LD_INT 1
14946: PUSH
14947: EMPTY
14948: LIST
14949: LIST
14950: PUSH
14951: LD_INT 0
14953: PUSH
14954: LD_INT 1
14956: PUSH
14957: EMPTY
14958: LIST
14959: LIST
14960: PUSH
14961: LD_INT 1
14963: NEG
14964: PUSH
14965: LD_INT 0
14967: PUSH
14968: EMPTY
14969: LIST
14970: LIST
14971: PUSH
14972: LD_INT 1
14974: NEG
14975: PUSH
14976: LD_INT 1
14978: NEG
14979: PUSH
14980: EMPTY
14981: LIST
14982: LIST
14983: PUSH
14984: LD_INT 1
14986: NEG
14987: PUSH
14988: LD_INT 2
14990: NEG
14991: PUSH
14992: EMPTY
14993: LIST
14994: LIST
14995: PUSH
14996: LD_INT 1
14998: PUSH
14999: LD_INT 2
15001: PUSH
15002: EMPTY
15003: LIST
15004: LIST
15005: PUSH
15006: EMPTY
15007: LIST
15008: LIST
15009: LIST
15010: LIST
15011: LIST
15012: LIST
15013: LIST
15014: LIST
15015: LIST
15016: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15017: LD_ADDR_VAR 0 40
15021: PUSH
15022: LD_INT 0
15024: PUSH
15025: LD_INT 0
15027: PUSH
15028: EMPTY
15029: LIST
15030: LIST
15031: PUSH
15032: LD_INT 0
15034: PUSH
15035: LD_INT 1
15037: NEG
15038: PUSH
15039: EMPTY
15040: LIST
15041: LIST
15042: PUSH
15043: LD_INT 1
15045: PUSH
15046: LD_INT 0
15048: PUSH
15049: EMPTY
15050: LIST
15051: LIST
15052: PUSH
15053: LD_INT 1
15055: PUSH
15056: LD_INT 1
15058: PUSH
15059: EMPTY
15060: LIST
15061: LIST
15062: PUSH
15063: LD_INT 0
15065: PUSH
15066: LD_INT 1
15068: PUSH
15069: EMPTY
15070: LIST
15071: LIST
15072: PUSH
15073: LD_INT 1
15075: NEG
15076: PUSH
15077: LD_INT 0
15079: PUSH
15080: EMPTY
15081: LIST
15082: LIST
15083: PUSH
15084: LD_INT 1
15086: NEG
15087: PUSH
15088: LD_INT 1
15090: NEG
15091: PUSH
15092: EMPTY
15093: LIST
15094: LIST
15095: PUSH
15096: LD_INT 1
15098: PUSH
15099: LD_INT 1
15101: NEG
15102: PUSH
15103: EMPTY
15104: LIST
15105: LIST
15106: PUSH
15107: LD_INT 1
15109: NEG
15110: PUSH
15111: LD_INT 1
15113: PUSH
15114: EMPTY
15115: LIST
15116: LIST
15117: PUSH
15118: EMPTY
15119: LIST
15120: LIST
15121: LIST
15122: LIST
15123: LIST
15124: LIST
15125: LIST
15126: LIST
15127: LIST
15128: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15129: LD_ADDR_VAR 0 41
15133: PUSH
15134: LD_INT 0
15136: PUSH
15137: LD_INT 0
15139: PUSH
15140: EMPTY
15141: LIST
15142: LIST
15143: PUSH
15144: LD_INT 0
15146: PUSH
15147: LD_INT 1
15149: NEG
15150: PUSH
15151: EMPTY
15152: LIST
15153: LIST
15154: PUSH
15155: LD_INT 1
15157: PUSH
15158: LD_INT 0
15160: PUSH
15161: EMPTY
15162: LIST
15163: LIST
15164: PUSH
15165: LD_INT 1
15167: PUSH
15168: LD_INT 1
15170: PUSH
15171: EMPTY
15172: LIST
15173: LIST
15174: PUSH
15175: LD_INT 0
15177: PUSH
15178: LD_INT 1
15180: PUSH
15181: EMPTY
15182: LIST
15183: LIST
15184: PUSH
15185: LD_INT 1
15187: NEG
15188: PUSH
15189: LD_INT 0
15191: PUSH
15192: EMPTY
15193: LIST
15194: LIST
15195: PUSH
15196: LD_INT 1
15198: NEG
15199: PUSH
15200: LD_INT 1
15202: NEG
15203: PUSH
15204: EMPTY
15205: LIST
15206: LIST
15207: PUSH
15208: LD_INT 1
15210: NEG
15211: PUSH
15212: LD_INT 2
15214: NEG
15215: PUSH
15216: EMPTY
15217: LIST
15218: LIST
15219: PUSH
15220: LD_INT 1
15222: PUSH
15223: LD_INT 1
15225: NEG
15226: PUSH
15227: EMPTY
15228: LIST
15229: LIST
15230: PUSH
15231: LD_INT 2
15233: PUSH
15234: LD_INT 0
15236: PUSH
15237: EMPTY
15238: LIST
15239: LIST
15240: PUSH
15241: LD_INT 2
15243: PUSH
15244: LD_INT 1
15246: PUSH
15247: EMPTY
15248: LIST
15249: LIST
15250: PUSH
15251: LD_INT 2
15253: PUSH
15254: LD_INT 2
15256: PUSH
15257: EMPTY
15258: LIST
15259: LIST
15260: PUSH
15261: LD_INT 1
15263: PUSH
15264: LD_INT 2
15266: PUSH
15267: EMPTY
15268: LIST
15269: LIST
15270: PUSH
15271: LD_INT 1
15273: NEG
15274: PUSH
15275: LD_INT 1
15277: PUSH
15278: EMPTY
15279: LIST
15280: LIST
15281: PUSH
15282: LD_INT 2
15284: NEG
15285: PUSH
15286: LD_INT 0
15288: PUSH
15289: EMPTY
15290: LIST
15291: LIST
15292: PUSH
15293: LD_INT 2
15295: NEG
15296: PUSH
15297: LD_INT 1
15299: NEG
15300: PUSH
15301: EMPTY
15302: LIST
15303: LIST
15304: PUSH
15305: LD_INT 2
15307: NEG
15308: PUSH
15309: LD_INT 2
15311: NEG
15312: PUSH
15313: EMPTY
15314: LIST
15315: LIST
15316: PUSH
15317: LD_INT 2
15319: NEG
15320: PUSH
15321: LD_INT 3
15323: NEG
15324: PUSH
15325: EMPTY
15326: LIST
15327: LIST
15328: PUSH
15329: LD_INT 2
15331: PUSH
15332: LD_INT 1
15334: NEG
15335: PUSH
15336: EMPTY
15337: LIST
15338: LIST
15339: PUSH
15340: LD_INT 3
15342: PUSH
15343: LD_INT 0
15345: PUSH
15346: EMPTY
15347: LIST
15348: LIST
15349: PUSH
15350: LD_INT 3
15352: PUSH
15353: LD_INT 1
15355: PUSH
15356: EMPTY
15357: LIST
15358: LIST
15359: PUSH
15360: LD_INT 3
15362: PUSH
15363: LD_INT 2
15365: PUSH
15366: EMPTY
15367: LIST
15368: LIST
15369: PUSH
15370: LD_INT 3
15372: PUSH
15373: LD_INT 3
15375: PUSH
15376: EMPTY
15377: LIST
15378: LIST
15379: PUSH
15380: LD_INT 2
15382: PUSH
15383: LD_INT 3
15385: PUSH
15386: EMPTY
15387: LIST
15388: LIST
15389: PUSH
15390: LD_INT 2
15392: NEG
15393: PUSH
15394: LD_INT 1
15396: PUSH
15397: EMPTY
15398: LIST
15399: LIST
15400: PUSH
15401: LD_INT 3
15403: NEG
15404: PUSH
15405: LD_INT 0
15407: PUSH
15408: EMPTY
15409: LIST
15410: LIST
15411: PUSH
15412: LD_INT 3
15414: NEG
15415: PUSH
15416: LD_INT 1
15418: NEG
15419: PUSH
15420: EMPTY
15421: LIST
15422: LIST
15423: PUSH
15424: LD_INT 3
15426: NEG
15427: PUSH
15428: LD_INT 2
15430: NEG
15431: PUSH
15432: EMPTY
15433: LIST
15434: LIST
15435: PUSH
15436: LD_INT 3
15438: NEG
15439: PUSH
15440: LD_INT 3
15442: NEG
15443: PUSH
15444: EMPTY
15445: LIST
15446: LIST
15447: PUSH
15448: EMPTY
15449: LIST
15450: LIST
15451: LIST
15452: LIST
15453: LIST
15454: LIST
15455: LIST
15456: LIST
15457: LIST
15458: LIST
15459: LIST
15460: LIST
15461: LIST
15462: LIST
15463: LIST
15464: LIST
15465: LIST
15466: LIST
15467: LIST
15468: LIST
15469: LIST
15470: LIST
15471: LIST
15472: LIST
15473: LIST
15474: LIST
15475: LIST
15476: LIST
15477: LIST
15478: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15479: LD_ADDR_VAR 0 42
15483: PUSH
15484: LD_INT 0
15486: PUSH
15487: LD_INT 0
15489: PUSH
15490: EMPTY
15491: LIST
15492: LIST
15493: PUSH
15494: LD_INT 0
15496: PUSH
15497: LD_INT 1
15499: NEG
15500: PUSH
15501: EMPTY
15502: LIST
15503: LIST
15504: PUSH
15505: LD_INT 1
15507: PUSH
15508: LD_INT 0
15510: PUSH
15511: EMPTY
15512: LIST
15513: LIST
15514: PUSH
15515: LD_INT 1
15517: PUSH
15518: LD_INT 1
15520: PUSH
15521: EMPTY
15522: LIST
15523: LIST
15524: PUSH
15525: LD_INT 0
15527: PUSH
15528: LD_INT 1
15530: PUSH
15531: EMPTY
15532: LIST
15533: LIST
15534: PUSH
15535: LD_INT 1
15537: NEG
15538: PUSH
15539: LD_INT 0
15541: PUSH
15542: EMPTY
15543: LIST
15544: LIST
15545: PUSH
15546: LD_INT 1
15548: NEG
15549: PUSH
15550: LD_INT 1
15552: NEG
15553: PUSH
15554: EMPTY
15555: LIST
15556: LIST
15557: PUSH
15558: LD_INT 1
15560: NEG
15561: PUSH
15562: LD_INT 2
15564: NEG
15565: PUSH
15566: EMPTY
15567: LIST
15568: LIST
15569: PUSH
15570: LD_INT 0
15572: PUSH
15573: LD_INT 2
15575: NEG
15576: PUSH
15577: EMPTY
15578: LIST
15579: LIST
15580: PUSH
15581: LD_INT 1
15583: PUSH
15584: LD_INT 1
15586: NEG
15587: PUSH
15588: EMPTY
15589: LIST
15590: LIST
15591: PUSH
15592: LD_INT 2
15594: PUSH
15595: LD_INT 1
15597: PUSH
15598: EMPTY
15599: LIST
15600: LIST
15601: PUSH
15602: LD_INT 2
15604: PUSH
15605: LD_INT 2
15607: PUSH
15608: EMPTY
15609: LIST
15610: LIST
15611: PUSH
15612: LD_INT 1
15614: PUSH
15615: LD_INT 2
15617: PUSH
15618: EMPTY
15619: LIST
15620: LIST
15621: PUSH
15622: LD_INT 0
15624: PUSH
15625: LD_INT 2
15627: PUSH
15628: EMPTY
15629: LIST
15630: LIST
15631: PUSH
15632: LD_INT 1
15634: NEG
15635: PUSH
15636: LD_INT 1
15638: PUSH
15639: EMPTY
15640: LIST
15641: LIST
15642: PUSH
15643: LD_INT 2
15645: NEG
15646: PUSH
15647: LD_INT 1
15649: NEG
15650: PUSH
15651: EMPTY
15652: LIST
15653: LIST
15654: PUSH
15655: LD_INT 2
15657: NEG
15658: PUSH
15659: LD_INT 2
15661: NEG
15662: PUSH
15663: EMPTY
15664: LIST
15665: LIST
15666: PUSH
15667: LD_INT 2
15669: NEG
15670: PUSH
15671: LD_INT 3
15673: NEG
15674: PUSH
15675: EMPTY
15676: LIST
15677: LIST
15678: PUSH
15679: LD_INT 1
15681: NEG
15682: PUSH
15683: LD_INT 3
15685: NEG
15686: PUSH
15687: EMPTY
15688: LIST
15689: LIST
15690: PUSH
15691: LD_INT 0
15693: PUSH
15694: LD_INT 3
15696: NEG
15697: PUSH
15698: EMPTY
15699: LIST
15700: LIST
15701: PUSH
15702: LD_INT 1
15704: PUSH
15705: LD_INT 2
15707: NEG
15708: PUSH
15709: EMPTY
15710: LIST
15711: LIST
15712: PUSH
15713: LD_INT 3
15715: PUSH
15716: LD_INT 2
15718: PUSH
15719: EMPTY
15720: LIST
15721: LIST
15722: PUSH
15723: LD_INT 3
15725: PUSH
15726: LD_INT 3
15728: PUSH
15729: EMPTY
15730: LIST
15731: LIST
15732: PUSH
15733: LD_INT 2
15735: PUSH
15736: LD_INT 3
15738: PUSH
15739: EMPTY
15740: LIST
15741: LIST
15742: PUSH
15743: LD_INT 1
15745: PUSH
15746: LD_INT 3
15748: PUSH
15749: EMPTY
15750: LIST
15751: LIST
15752: PUSH
15753: LD_INT 0
15755: PUSH
15756: LD_INT 3
15758: PUSH
15759: EMPTY
15760: LIST
15761: LIST
15762: PUSH
15763: LD_INT 1
15765: NEG
15766: PUSH
15767: LD_INT 2
15769: PUSH
15770: EMPTY
15771: LIST
15772: LIST
15773: PUSH
15774: LD_INT 3
15776: NEG
15777: PUSH
15778: LD_INT 2
15780: NEG
15781: PUSH
15782: EMPTY
15783: LIST
15784: LIST
15785: PUSH
15786: LD_INT 3
15788: NEG
15789: PUSH
15790: LD_INT 3
15792: NEG
15793: PUSH
15794: EMPTY
15795: LIST
15796: LIST
15797: PUSH
15798: EMPTY
15799: LIST
15800: LIST
15801: LIST
15802: LIST
15803: LIST
15804: LIST
15805: LIST
15806: LIST
15807: LIST
15808: LIST
15809: LIST
15810: LIST
15811: LIST
15812: LIST
15813: LIST
15814: LIST
15815: LIST
15816: LIST
15817: LIST
15818: LIST
15819: LIST
15820: LIST
15821: LIST
15822: LIST
15823: LIST
15824: LIST
15825: LIST
15826: LIST
15827: LIST
15828: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
15829: LD_ADDR_VAR 0 43
15833: PUSH
15834: LD_INT 0
15836: PUSH
15837: LD_INT 0
15839: PUSH
15840: EMPTY
15841: LIST
15842: LIST
15843: PUSH
15844: LD_INT 0
15846: PUSH
15847: LD_INT 1
15849: NEG
15850: PUSH
15851: EMPTY
15852: LIST
15853: LIST
15854: PUSH
15855: LD_INT 1
15857: PUSH
15858: LD_INT 0
15860: PUSH
15861: EMPTY
15862: LIST
15863: LIST
15864: PUSH
15865: LD_INT 1
15867: PUSH
15868: LD_INT 1
15870: PUSH
15871: EMPTY
15872: LIST
15873: LIST
15874: PUSH
15875: LD_INT 0
15877: PUSH
15878: LD_INT 1
15880: PUSH
15881: EMPTY
15882: LIST
15883: LIST
15884: PUSH
15885: LD_INT 1
15887: NEG
15888: PUSH
15889: LD_INT 0
15891: PUSH
15892: EMPTY
15893: LIST
15894: LIST
15895: PUSH
15896: LD_INT 1
15898: NEG
15899: PUSH
15900: LD_INT 1
15902: NEG
15903: PUSH
15904: EMPTY
15905: LIST
15906: LIST
15907: PUSH
15908: LD_INT 1
15910: NEG
15911: PUSH
15912: LD_INT 2
15914: NEG
15915: PUSH
15916: EMPTY
15917: LIST
15918: LIST
15919: PUSH
15920: LD_INT 0
15922: PUSH
15923: LD_INT 2
15925: NEG
15926: PUSH
15927: EMPTY
15928: LIST
15929: LIST
15930: PUSH
15931: LD_INT 1
15933: PUSH
15934: LD_INT 1
15936: NEG
15937: PUSH
15938: EMPTY
15939: LIST
15940: LIST
15941: PUSH
15942: LD_INT 2
15944: PUSH
15945: LD_INT 0
15947: PUSH
15948: EMPTY
15949: LIST
15950: LIST
15951: PUSH
15952: LD_INT 2
15954: PUSH
15955: LD_INT 1
15957: PUSH
15958: EMPTY
15959: LIST
15960: LIST
15961: PUSH
15962: LD_INT 1
15964: PUSH
15965: LD_INT 2
15967: PUSH
15968: EMPTY
15969: LIST
15970: LIST
15971: PUSH
15972: LD_INT 0
15974: PUSH
15975: LD_INT 2
15977: PUSH
15978: EMPTY
15979: LIST
15980: LIST
15981: PUSH
15982: LD_INT 1
15984: NEG
15985: PUSH
15986: LD_INT 1
15988: PUSH
15989: EMPTY
15990: LIST
15991: LIST
15992: PUSH
15993: LD_INT 2
15995: NEG
15996: PUSH
15997: LD_INT 0
15999: PUSH
16000: EMPTY
16001: LIST
16002: LIST
16003: PUSH
16004: LD_INT 2
16006: NEG
16007: PUSH
16008: LD_INT 1
16010: NEG
16011: PUSH
16012: EMPTY
16013: LIST
16014: LIST
16015: PUSH
16016: LD_INT 1
16018: NEG
16019: PUSH
16020: LD_INT 3
16022: NEG
16023: PUSH
16024: EMPTY
16025: LIST
16026: LIST
16027: PUSH
16028: LD_INT 0
16030: PUSH
16031: LD_INT 3
16033: NEG
16034: PUSH
16035: EMPTY
16036: LIST
16037: LIST
16038: PUSH
16039: LD_INT 1
16041: PUSH
16042: LD_INT 2
16044: NEG
16045: PUSH
16046: EMPTY
16047: LIST
16048: LIST
16049: PUSH
16050: LD_INT 2
16052: PUSH
16053: LD_INT 1
16055: NEG
16056: PUSH
16057: EMPTY
16058: LIST
16059: LIST
16060: PUSH
16061: LD_INT 3
16063: PUSH
16064: LD_INT 0
16066: PUSH
16067: EMPTY
16068: LIST
16069: LIST
16070: PUSH
16071: LD_INT 3
16073: PUSH
16074: LD_INT 1
16076: PUSH
16077: EMPTY
16078: LIST
16079: LIST
16080: PUSH
16081: LD_INT 1
16083: PUSH
16084: LD_INT 3
16086: PUSH
16087: EMPTY
16088: LIST
16089: LIST
16090: PUSH
16091: LD_INT 0
16093: PUSH
16094: LD_INT 3
16096: PUSH
16097: EMPTY
16098: LIST
16099: LIST
16100: PUSH
16101: LD_INT 1
16103: NEG
16104: PUSH
16105: LD_INT 2
16107: PUSH
16108: EMPTY
16109: LIST
16110: LIST
16111: PUSH
16112: LD_INT 2
16114: NEG
16115: PUSH
16116: LD_INT 1
16118: PUSH
16119: EMPTY
16120: LIST
16121: LIST
16122: PUSH
16123: LD_INT 3
16125: NEG
16126: PUSH
16127: LD_INT 0
16129: PUSH
16130: EMPTY
16131: LIST
16132: LIST
16133: PUSH
16134: LD_INT 3
16136: NEG
16137: PUSH
16138: LD_INT 1
16140: NEG
16141: PUSH
16142: EMPTY
16143: LIST
16144: LIST
16145: PUSH
16146: EMPTY
16147: LIST
16148: LIST
16149: LIST
16150: LIST
16151: LIST
16152: LIST
16153: LIST
16154: LIST
16155: LIST
16156: LIST
16157: LIST
16158: LIST
16159: LIST
16160: LIST
16161: LIST
16162: LIST
16163: LIST
16164: LIST
16165: LIST
16166: LIST
16167: LIST
16168: LIST
16169: LIST
16170: LIST
16171: LIST
16172: LIST
16173: LIST
16174: LIST
16175: LIST
16176: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16177: LD_ADDR_VAR 0 44
16181: PUSH
16182: LD_INT 0
16184: PUSH
16185: LD_INT 0
16187: PUSH
16188: EMPTY
16189: LIST
16190: LIST
16191: PUSH
16192: LD_INT 0
16194: PUSH
16195: LD_INT 1
16197: NEG
16198: PUSH
16199: EMPTY
16200: LIST
16201: LIST
16202: PUSH
16203: LD_INT 1
16205: PUSH
16206: LD_INT 0
16208: PUSH
16209: EMPTY
16210: LIST
16211: LIST
16212: PUSH
16213: LD_INT 1
16215: PUSH
16216: LD_INT 1
16218: PUSH
16219: EMPTY
16220: LIST
16221: LIST
16222: PUSH
16223: LD_INT 0
16225: PUSH
16226: LD_INT 1
16228: PUSH
16229: EMPTY
16230: LIST
16231: LIST
16232: PUSH
16233: LD_INT 1
16235: NEG
16236: PUSH
16237: LD_INT 0
16239: PUSH
16240: EMPTY
16241: LIST
16242: LIST
16243: PUSH
16244: LD_INT 1
16246: NEG
16247: PUSH
16248: LD_INT 1
16250: NEG
16251: PUSH
16252: EMPTY
16253: LIST
16254: LIST
16255: PUSH
16256: LD_INT 1
16258: NEG
16259: PUSH
16260: LD_INT 2
16262: NEG
16263: PUSH
16264: EMPTY
16265: LIST
16266: LIST
16267: PUSH
16268: LD_INT 1
16270: PUSH
16271: LD_INT 1
16273: NEG
16274: PUSH
16275: EMPTY
16276: LIST
16277: LIST
16278: PUSH
16279: LD_INT 2
16281: PUSH
16282: LD_INT 0
16284: PUSH
16285: EMPTY
16286: LIST
16287: LIST
16288: PUSH
16289: LD_INT 2
16291: PUSH
16292: LD_INT 1
16294: PUSH
16295: EMPTY
16296: LIST
16297: LIST
16298: PUSH
16299: LD_INT 2
16301: PUSH
16302: LD_INT 2
16304: PUSH
16305: EMPTY
16306: LIST
16307: LIST
16308: PUSH
16309: LD_INT 1
16311: PUSH
16312: LD_INT 2
16314: PUSH
16315: EMPTY
16316: LIST
16317: LIST
16318: PUSH
16319: LD_INT 1
16321: NEG
16322: PUSH
16323: LD_INT 1
16325: PUSH
16326: EMPTY
16327: LIST
16328: LIST
16329: PUSH
16330: LD_INT 2
16332: NEG
16333: PUSH
16334: LD_INT 0
16336: PUSH
16337: EMPTY
16338: LIST
16339: LIST
16340: PUSH
16341: LD_INT 2
16343: NEG
16344: PUSH
16345: LD_INT 1
16347: NEG
16348: PUSH
16349: EMPTY
16350: LIST
16351: LIST
16352: PUSH
16353: LD_INT 2
16355: NEG
16356: PUSH
16357: LD_INT 2
16359: NEG
16360: PUSH
16361: EMPTY
16362: LIST
16363: LIST
16364: PUSH
16365: LD_INT 2
16367: NEG
16368: PUSH
16369: LD_INT 3
16371: NEG
16372: PUSH
16373: EMPTY
16374: LIST
16375: LIST
16376: PUSH
16377: LD_INT 2
16379: PUSH
16380: LD_INT 1
16382: NEG
16383: PUSH
16384: EMPTY
16385: LIST
16386: LIST
16387: PUSH
16388: LD_INT 3
16390: PUSH
16391: LD_INT 0
16393: PUSH
16394: EMPTY
16395: LIST
16396: LIST
16397: PUSH
16398: LD_INT 3
16400: PUSH
16401: LD_INT 1
16403: PUSH
16404: EMPTY
16405: LIST
16406: LIST
16407: PUSH
16408: LD_INT 3
16410: PUSH
16411: LD_INT 2
16413: PUSH
16414: EMPTY
16415: LIST
16416: LIST
16417: PUSH
16418: LD_INT 3
16420: PUSH
16421: LD_INT 3
16423: PUSH
16424: EMPTY
16425: LIST
16426: LIST
16427: PUSH
16428: LD_INT 2
16430: PUSH
16431: LD_INT 3
16433: PUSH
16434: EMPTY
16435: LIST
16436: LIST
16437: PUSH
16438: LD_INT 2
16440: NEG
16441: PUSH
16442: LD_INT 1
16444: PUSH
16445: EMPTY
16446: LIST
16447: LIST
16448: PUSH
16449: LD_INT 3
16451: NEG
16452: PUSH
16453: LD_INT 0
16455: PUSH
16456: EMPTY
16457: LIST
16458: LIST
16459: PUSH
16460: LD_INT 3
16462: NEG
16463: PUSH
16464: LD_INT 1
16466: NEG
16467: PUSH
16468: EMPTY
16469: LIST
16470: LIST
16471: PUSH
16472: LD_INT 3
16474: NEG
16475: PUSH
16476: LD_INT 2
16478: NEG
16479: PUSH
16480: EMPTY
16481: LIST
16482: LIST
16483: PUSH
16484: LD_INT 3
16486: NEG
16487: PUSH
16488: LD_INT 3
16490: NEG
16491: PUSH
16492: EMPTY
16493: LIST
16494: LIST
16495: PUSH
16496: EMPTY
16497: LIST
16498: LIST
16499: LIST
16500: LIST
16501: LIST
16502: LIST
16503: LIST
16504: LIST
16505: LIST
16506: LIST
16507: LIST
16508: LIST
16509: LIST
16510: LIST
16511: LIST
16512: LIST
16513: LIST
16514: LIST
16515: LIST
16516: LIST
16517: LIST
16518: LIST
16519: LIST
16520: LIST
16521: LIST
16522: LIST
16523: LIST
16524: LIST
16525: LIST
16526: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16527: LD_ADDR_VAR 0 45
16531: PUSH
16532: LD_INT 0
16534: PUSH
16535: LD_INT 0
16537: PUSH
16538: EMPTY
16539: LIST
16540: LIST
16541: PUSH
16542: LD_INT 0
16544: PUSH
16545: LD_INT 1
16547: NEG
16548: PUSH
16549: EMPTY
16550: LIST
16551: LIST
16552: PUSH
16553: LD_INT 1
16555: PUSH
16556: LD_INT 0
16558: PUSH
16559: EMPTY
16560: LIST
16561: LIST
16562: PUSH
16563: LD_INT 1
16565: PUSH
16566: LD_INT 1
16568: PUSH
16569: EMPTY
16570: LIST
16571: LIST
16572: PUSH
16573: LD_INT 0
16575: PUSH
16576: LD_INT 1
16578: PUSH
16579: EMPTY
16580: LIST
16581: LIST
16582: PUSH
16583: LD_INT 1
16585: NEG
16586: PUSH
16587: LD_INT 0
16589: PUSH
16590: EMPTY
16591: LIST
16592: LIST
16593: PUSH
16594: LD_INT 1
16596: NEG
16597: PUSH
16598: LD_INT 1
16600: NEG
16601: PUSH
16602: EMPTY
16603: LIST
16604: LIST
16605: PUSH
16606: LD_INT 1
16608: NEG
16609: PUSH
16610: LD_INT 2
16612: NEG
16613: PUSH
16614: EMPTY
16615: LIST
16616: LIST
16617: PUSH
16618: LD_INT 0
16620: PUSH
16621: LD_INT 2
16623: NEG
16624: PUSH
16625: EMPTY
16626: LIST
16627: LIST
16628: PUSH
16629: LD_INT 1
16631: PUSH
16632: LD_INT 1
16634: NEG
16635: PUSH
16636: EMPTY
16637: LIST
16638: LIST
16639: PUSH
16640: LD_INT 2
16642: PUSH
16643: LD_INT 1
16645: PUSH
16646: EMPTY
16647: LIST
16648: LIST
16649: PUSH
16650: LD_INT 2
16652: PUSH
16653: LD_INT 2
16655: PUSH
16656: EMPTY
16657: LIST
16658: LIST
16659: PUSH
16660: LD_INT 1
16662: PUSH
16663: LD_INT 2
16665: PUSH
16666: EMPTY
16667: LIST
16668: LIST
16669: PUSH
16670: LD_INT 0
16672: PUSH
16673: LD_INT 2
16675: PUSH
16676: EMPTY
16677: LIST
16678: LIST
16679: PUSH
16680: LD_INT 1
16682: NEG
16683: PUSH
16684: LD_INT 1
16686: PUSH
16687: EMPTY
16688: LIST
16689: LIST
16690: PUSH
16691: LD_INT 2
16693: NEG
16694: PUSH
16695: LD_INT 1
16697: NEG
16698: PUSH
16699: EMPTY
16700: LIST
16701: LIST
16702: PUSH
16703: LD_INT 2
16705: NEG
16706: PUSH
16707: LD_INT 2
16709: NEG
16710: PUSH
16711: EMPTY
16712: LIST
16713: LIST
16714: PUSH
16715: LD_INT 2
16717: NEG
16718: PUSH
16719: LD_INT 3
16721: NEG
16722: PUSH
16723: EMPTY
16724: LIST
16725: LIST
16726: PUSH
16727: LD_INT 1
16729: NEG
16730: PUSH
16731: LD_INT 3
16733: NEG
16734: PUSH
16735: EMPTY
16736: LIST
16737: LIST
16738: PUSH
16739: LD_INT 0
16741: PUSH
16742: LD_INT 3
16744: NEG
16745: PUSH
16746: EMPTY
16747: LIST
16748: LIST
16749: PUSH
16750: LD_INT 1
16752: PUSH
16753: LD_INT 2
16755: NEG
16756: PUSH
16757: EMPTY
16758: LIST
16759: LIST
16760: PUSH
16761: LD_INT 3
16763: PUSH
16764: LD_INT 2
16766: PUSH
16767: EMPTY
16768: LIST
16769: LIST
16770: PUSH
16771: LD_INT 3
16773: PUSH
16774: LD_INT 3
16776: PUSH
16777: EMPTY
16778: LIST
16779: LIST
16780: PUSH
16781: LD_INT 2
16783: PUSH
16784: LD_INT 3
16786: PUSH
16787: EMPTY
16788: LIST
16789: LIST
16790: PUSH
16791: LD_INT 1
16793: PUSH
16794: LD_INT 3
16796: PUSH
16797: EMPTY
16798: LIST
16799: LIST
16800: PUSH
16801: LD_INT 0
16803: PUSH
16804: LD_INT 3
16806: PUSH
16807: EMPTY
16808: LIST
16809: LIST
16810: PUSH
16811: LD_INT 1
16813: NEG
16814: PUSH
16815: LD_INT 2
16817: PUSH
16818: EMPTY
16819: LIST
16820: LIST
16821: PUSH
16822: LD_INT 3
16824: NEG
16825: PUSH
16826: LD_INT 2
16828: NEG
16829: PUSH
16830: EMPTY
16831: LIST
16832: LIST
16833: PUSH
16834: LD_INT 3
16836: NEG
16837: PUSH
16838: LD_INT 3
16840: NEG
16841: PUSH
16842: EMPTY
16843: LIST
16844: LIST
16845: PUSH
16846: EMPTY
16847: LIST
16848: LIST
16849: LIST
16850: LIST
16851: LIST
16852: LIST
16853: LIST
16854: LIST
16855: LIST
16856: LIST
16857: LIST
16858: LIST
16859: LIST
16860: LIST
16861: LIST
16862: LIST
16863: LIST
16864: LIST
16865: LIST
16866: LIST
16867: LIST
16868: LIST
16869: LIST
16870: LIST
16871: LIST
16872: LIST
16873: LIST
16874: LIST
16875: LIST
16876: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16877: LD_ADDR_VAR 0 46
16881: PUSH
16882: LD_INT 0
16884: PUSH
16885: LD_INT 0
16887: PUSH
16888: EMPTY
16889: LIST
16890: LIST
16891: PUSH
16892: LD_INT 0
16894: PUSH
16895: LD_INT 1
16897: NEG
16898: PUSH
16899: EMPTY
16900: LIST
16901: LIST
16902: PUSH
16903: LD_INT 1
16905: PUSH
16906: LD_INT 0
16908: PUSH
16909: EMPTY
16910: LIST
16911: LIST
16912: PUSH
16913: LD_INT 1
16915: PUSH
16916: LD_INT 1
16918: PUSH
16919: EMPTY
16920: LIST
16921: LIST
16922: PUSH
16923: LD_INT 0
16925: PUSH
16926: LD_INT 1
16928: PUSH
16929: EMPTY
16930: LIST
16931: LIST
16932: PUSH
16933: LD_INT 1
16935: NEG
16936: PUSH
16937: LD_INT 0
16939: PUSH
16940: EMPTY
16941: LIST
16942: LIST
16943: PUSH
16944: LD_INT 1
16946: NEG
16947: PUSH
16948: LD_INT 1
16950: NEG
16951: PUSH
16952: EMPTY
16953: LIST
16954: LIST
16955: PUSH
16956: LD_INT 1
16958: NEG
16959: PUSH
16960: LD_INT 2
16962: NEG
16963: PUSH
16964: EMPTY
16965: LIST
16966: LIST
16967: PUSH
16968: LD_INT 0
16970: PUSH
16971: LD_INT 2
16973: NEG
16974: PUSH
16975: EMPTY
16976: LIST
16977: LIST
16978: PUSH
16979: LD_INT 1
16981: PUSH
16982: LD_INT 1
16984: NEG
16985: PUSH
16986: EMPTY
16987: LIST
16988: LIST
16989: PUSH
16990: LD_INT 2
16992: PUSH
16993: LD_INT 0
16995: PUSH
16996: EMPTY
16997: LIST
16998: LIST
16999: PUSH
17000: LD_INT 2
17002: PUSH
17003: LD_INT 1
17005: PUSH
17006: EMPTY
17007: LIST
17008: LIST
17009: PUSH
17010: LD_INT 1
17012: PUSH
17013: LD_INT 2
17015: PUSH
17016: EMPTY
17017: LIST
17018: LIST
17019: PUSH
17020: LD_INT 0
17022: PUSH
17023: LD_INT 2
17025: PUSH
17026: EMPTY
17027: LIST
17028: LIST
17029: PUSH
17030: LD_INT 1
17032: NEG
17033: PUSH
17034: LD_INT 1
17036: PUSH
17037: EMPTY
17038: LIST
17039: LIST
17040: PUSH
17041: LD_INT 2
17043: NEG
17044: PUSH
17045: LD_INT 0
17047: PUSH
17048: EMPTY
17049: LIST
17050: LIST
17051: PUSH
17052: LD_INT 2
17054: NEG
17055: PUSH
17056: LD_INT 1
17058: NEG
17059: PUSH
17060: EMPTY
17061: LIST
17062: LIST
17063: PUSH
17064: LD_INT 1
17066: NEG
17067: PUSH
17068: LD_INT 3
17070: NEG
17071: PUSH
17072: EMPTY
17073: LIST
17074: LIST
17075: PUSH
17076: LD_INT 0
17078: PUSH
17079: LD_INT 3
17081: NEG
17082: PUSH
17083: EMPTY
17084: LIST
17085: LIST
17086: PUSH
17087: LD_INT 1
17089: PUSH
17090: LD_INT 2
17092: NEG
17093: PUSH
17094: EMPTY
17095: LIST
17096: LIST
17097: PUSH
17098: LD_INT 2
17100: PUSH
17101: LD_INT 1
17103: NEG
17104: PUSH
17105: EMPTY
17106: LIST
17107: LIST
17108: PUSH
17109: LD_INT 3
17111: PUSH
17112: LD_INT 0
17114: PUSH
17115: EMPTY
17116: LIST
17117: LIST
17118: PUSH
17119: LD_INT 3
17121: PUSH
17122: LD_INT 1
17124: PUSH
17125: EMPTY
17126: LIST
17127: LIST
17128: PUSH
17129: LD_INT 1
17131: PUSH
17132: LD_INT 3
17134: PUSH
17135: EMPTY
17136: LIST
17137: LIST
17138: PUSH
17139: LD_INT 0
17141: PUSH
17142: LD_INT 3
17144: PUSH
17145: EMPTY
17146: LIST
17147: LIST
17148: PUSH
17149: LD_INT 1
17151: NEG
17152: PUSH
17153: LD_INT 2
17155: PUSH
17156: EMPTY
17157: LIST
17158: LIST
17159: PUSH
17160: LD_INT 2
17162: NEG
17163: PUSH
17164: LD_INT 1
17166: PUSH
17167: EMPTY
17168: LIST
17169: LIST
17170: PUSH
17171: LD_INT 3
17173: NEG
17174: PUSH
17175: LD_INT 0
17177: PUSH
17178: EMPTY
17179: LIST
17180: LIST
17181: PUSH
17182: LD_INT 3
17184: NEG
17185: PUSH
17186: LD_INT 1
17188: NEG
17189: PUSH
17190: EMPTY
17191: LIST
17192: LIST
17193: PUSH
17194: EMPTY
17195: LIST
17196: LIST
17197: LIST
17198: LIST
17199: LIST
17200: LIST
17201: LIST
17202: LIST
17203: LIST
17204: LIST
17205: LIST
17206: LIST
17207: LIST
17208: LIST
17209: LIST
17210: LIST
17211: LIST
17212: LIST
17213: LIST
17214: LIST
17215: LIST
17216: LIST
17217: LIST
17218: LIST
17219: LIST
17220: LIST
17221: LIST
17222: LIST
17223: LIST
17224: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17225: LD_ADDR_VAR 0 47
17229: PUSH
17230: LD_INT 0
17232: PUSH
17233: LD_INT 0
17235: PUSH
17236: EMPTY
17237: LIST
17238: LIST
17239: PUSH
17240: LD_INT 0
17242: PUSH
17243: LD_INT 1
17245: NEG
17246: PUSH
17247: EMPTY
17248: LIST
17249: LIST
17250: PUSH
17251: LD_INT 1
17253: PUSH
17254: LD_INT 0
17256: PUSH
17257: EMPTY
17258: LIST
17259: LIST
17260: PUSH
17261: LD_INT 1
17263: PUSH
17264: LD_INT 1
17266: PUSH
17267: EMPTY
17268: LIST
17269: LIST
17270: PUSH
17271: LD_INT 0
17273: PUSH
17274: LD_INT 1
17276: PUSH
17277: EMPTY
17278: LIST
17279: LIST
17280: PUSH
17281: LD_INT 1
17283: NEG
17284: PUSH
17285: LD_INT 0
17287: PUSH
17288: EMPTY
17289: LIST
17290: LIST
17291: PUSH
17292: LD_INT 1
17294: NEG
17295: PUSH
17296: LD_INT 1
17298: NEG
17299: PUSH
17300: EMPTY
17301: LIST
17302: LIST
17303: PUSH
17304: LD_INT 1
17306: NEG
17307: PUSH
17308: LD_INT 2
17310: NEG
17311: PUSH
17312: EMPTY
17313: LIST
17314: LIST
17315: PUSH
17316: LD_INT 0
17318: PUSH
17319: LD_INT 2
17321: NEG
17322: PUSH
17323: EMPTY
17324: LIST
17325: LIST
17326: PUSH
17327: LD_INT 1
17329: PUSH
17330: LD_INT 1
17332: NEG
17333: PUSH
17334: EMPTY
17335: LIST
17336: LIST
17337: PUSH
17338: LD_INT 2
17340: NEG
17341: PUSH
17342: LD_INT 1
17344: NEG
17345: PUSH
17346: EMPTY
17347: LIST
17348: LIST
17349: PUSH
17350: LD_INT 2
17352: NEG
17353: PUSH
17354: LD_INT 2
17356: NEG
17357: PUSH
17358: EMPTY
17359: LIST
17360: LIST
17361: PUSH
17362: EMPTY
17363: LIST
17364: LIST
17365: LIST
17366: LIST
17367: LIST
17368: LIST
17369: LIST
17370: LIST
17371: LIST
17372: LIST
17373: LIST
17374: LIST
17375: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17376: LD_ADDR_VAR 0 48
17380: PUSH
17381: LD_INT 0
17383: PUSH
17384: LD_INT 0
17386: PUSH
17387: EMPTY
17388: LIST
17389: LIST
17390: PUSH
17391: LD_INT 0
17393: PUSH
17394: LD_INT 1
17396: NEG
17397: PUSH
17398: EMPTY
17399: LIST
17400: LIST
17401: PUSH
17402: LD_INT 1
17404: PUSH
17405: LD_INT 0
17407: PUSH
17408: EMPTY
17409: LIST
17410: LIST
17411: PUSH
17412: LD_INT 1
17414: PUSH
17415: LD_INT 1
17417: PUSH
17418: EMPTY
17419: LIST
17420: LIST
17421: PUSH
17422: LD_INT 0
17424: PUSH
17425: LD_INT 1
17427: PUSH
17428: EMPTY
17429: LIST
17430: LIST
17431: PUSH
17432: LD_INT 1
17434: NEG
17435: PUSH
17436: LD_INT 0
17438: PUSH
17439: EMPTY
17440: LIST
17441: LIST
17442: PUSH
17443: LD_INT 1
17445: NEG
17446: PUSH
17447: LD_INT 1
17449: NEG
17450: PUSH
17451: EMPTY
17452: LIST
17453: LIST
17454: PUSH
17455: LD_INT 1
17457: NEG
17458: PUSH
17459: LD_INT 2
17461: NEG
17462: PUSH
17463: EMPTY
17464: LIST
17465: LIST
17466: PUSH
17467: LD_INT 0
17469: PUSH
17470: LD_INT 2
17472: NEG
17473: PUSH
17474: EMPTY
17475: LIST
17476: LIST
17477: PUSH
17478: LD_INT 1
17480: PUSH
17481: LD_INT 1
17483: NEG
17484: PUSH
17485: EMPTY
17486: LIST
17487: LIST
17488: PUSH
17489: LD_INT 2
17491: PUSH
17492: LD_INT 0
17494: PUSH
17495: EMPTY
17496: LIST
17497: LIST
17498: PUSH
17499: LD_INT 2
17501: PUSH
17502: LD_INT 1
17504: PUSH
17505: EMPTY
17506: LIST
17507: LIST
17508: PUSH
17509: EMPTY
17510: LIST
17511: LIST
17512: LIST
17513: LIST
17514: LIST
17515: LIST
17516: LIST
17517: LIST
17518: LIST
17519: LIST
17520: LIST
17521: LIST
17522: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17523: LD_ADDR_VAR 0 49
17527: PUSH
17528: LD_INT 0
17530: PUSH
17531: LD_INT 0
17533: PUSH
17534: EMPTY
17535: LIST
17536: LIST
17537: PUSH
17538: LD_INT 0
17540: PUSH
17541: LD_INT 1
17543: NEG
17544: PUSH
17545: EMPTY
17546: LIST
17547: LIST
17548: PUSH
17549: LD_INT 1
17551: PUSH
17552: LD_INT 0
17554: PUSH
17555: EMPTY
17556: LIST
17557: LIST
17558: PUSH
17559: LD_INT 1
17561: PUSH
17562: LD_INT 1
17564: PUSH
17565: EMPTY
17566: LIST
17567: LIST
17568: PUSH
17569: LD_INT 0
17571: PUSH
17572: LD_INT 1
17574: PUSH
17575: EMPTY
17576: LIST
17577: LIST
17578: PUSH
17579: LD_INT 1
17581: NEG
17582: PUSH
17583: LD_INT 0
17585: PUSH
17586: EMPTY
17587: LIST
17588: LIST
17589: PUSH
17590: LD_INT 1
17592: NEG
17593: PUSH
17594: LD_INT 1
17596: NEG
17597: PUSH
17598: EMPTY
17599: LIST
17600: LIST
17601: PUSH
17602: LD_INT 1
17604: PUSH
17605: LD_INT 1
17607: NEG
17608: PUSH
17609: EMPTY
17610: LIST
17611: LIST
17612: PUSH
17613: LD_INT 2
17615: PUSH
17616: LD_INT 0
17618: PUSH
17619: EMPTY
17620: LIST
17621: LIST
17622: PUSH
17623: LD_INT 2
17625: PUSH
17626: LD_INT 1
17628: PUSH
17629: EMPTY
17630: LIST
17631: LIST
17632: PUSH
17633: LD_INT 2
17635: PUSH
17636: LD_INT 2
17638: PUSH
17639: EMPTY
17640: LIST
17641: LIST
17642: PUSH
17643: LD_INT 1
17645: PUSH
17646: LD_INT 2
17648: PUSH
17649: EMPTY
17650: LIST
17651: LIST
17652: PUSH
17653: EMPTY
17654: LIST
17655: LIST
17656: LIST
17657: LIST
17658: LIST
17659: LIST
17660: LIST
17661: LIST
17662: LIST
17663: LIST
17664: LIST
17665: LIST
17666: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
17667: LD_ADDR_VAR 0 50
17671: PUSH
17672: LD_INT 0
17674: PUSH
17675: LD_INT 0
17677: PUSH
17678: EMPTY
17679: LIST
17680: LIST
17681: PUSH
17682: LD_INT 0
17684: PUSH
17685: LD_INT 1
17687: NEG
17688: PUSH
17689: EMPTY
17690: LIST
17691: LIST
17692: PUSH
17693: LD_INT 1
17695: PUSH
17696: LD_INT 0
17698: PUSH
17699: EMPTY
17700: LIST
17701: LIST
17702: PUSH
17703: LD_INT 1
17705: PUSH
17706: LD_INT 1
17708: PUSH
17709: EMPTY
17710: LIST
17711: LIST
17712: PUSH
17713: LD_INT 0
17715: PUSH
17716: LD_INT 1
17718: PUSH
17719: EMPTY
17720: LIST
17721: LIST
17722: PUSH
17723: LD_INT 1
17725: NEG
17726: PUSH
17727: LD_INT 0
17729: PUSH
17730: EMPTY
17731: LIST
17732: LIST
17733: PUSH
17734: LD_INT 1
17736: NEG
17737: PUSH
17738: LD_INT 1
17740: NEG
17741: PUSH
17742: EMPTY
17743: LIST
17744: LIST
17745: PUSH
17746: LD_INT 2
17748: PUSH
17749: LD_INT 1
17751: PUSH
17752: EMPTY
17753: LIST
17754: LIST
17755: PUSH
17756: LD_INT 2
17758: PUSH
17759: LD_INT 2
17761: PUSH
17762: EMPTY
17763: LIST
17764: LIST
17765: PUSH
17766: LD_INT 1
17768: PUSH
17769: LD_INT 2
17771: PUSH
17772: EMPTY
17773: LIST
17774: LIST
17775: PUSH
17776: LD_INT 0
17778: PUSH
17779: LD_INT 2
17781: PUSH
17782: EMPTY
17783: LIST
17784: LIST
17785: PUSH
17786: LD_INT 1
17788: NEG
17789: PUSH
17790: LD_INT 1
17792: PUSH
17793: EMPTY
17794: LIST
17795: LIST
17796: PUSH
17797: EMPTY
17798: LIST
17799: LIST
17800: LIST
17801: LIST
17802: LIST
17803: LIST
17804: LIST
17805: LIST
17806: LIST
17807: LIST
17808: LIST
17809: LIST
17810: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
17811: LD_ADDR_VAR 0 51
17815: PUSH
17816: LD_INT 0
17818: PUSH
17819: LD_INT 0
17821: PUSH
17822: EMPTY
17823: LIST
17824: LIST
17825: PUSH
17826: LD_INT 0
17828: PUSH
17829: LD_INT 1
17831: NEG
17832: PUSH
17833: EMPTY
17834: LIST
17835: LIST
17836: PUSH
17837: LD_INT 1
17839: PUSH
17840: LD_INT 0
17842: PUSH
17843: EMPTY
17844: LIST
17845: LIST
17846: PUSH
17847: LD_INT 1
17849: PUSH
17850: LD_INT 1
17852: PUSH
17853: EMPTY
17854: LIST
17855: LIST
17856: PUSH
17857: LD_INT 0
17859: PUSH
17860: LD_INT 1
17862: PUSH
17863: EMPTY
17864: LIST
17865: LIST
17866: PUSH
17867: LD_INT 1
17869: NEG
17870: PUSH
17871: LD_INT 0
17873: PUSH
17874: EMPTY
17875: LIST
17876: LIST
17877: PUSH
17878: LD_INT 1
17880: NEG
17881: PUSH
17882: LD_INT 1
17884: NEG
17885: PUSH
17886: EMPTY
17887: LIST
17888: LIST
17889: PUSH
17890: LD_INT 1
17892: PUSH
17893: LD_INT 2
17895: PUSH
17896: EMPTY
17897: LIST
17898: LIST
17899: PUSH
17900: LD_INT 0
17902: PUSH
17903: LD_INT 2
17905: PUSH
17906: EMPTY
17907: LIST
17908: LIST
17909: PUSH
17910: LD_INT 1
17912: NEG
17913: PUSH
17914: LD_INT 1
17916: PUSH
17917: EMPTY
17918: LIST
17919: LIST
17920: PUSH
17921: LD_INT 2
17923: NEG
17924: PUSH
17925: LD_INT 0
17927: PUSH
17928: EMPTY
17929: LIST
17930: LIST
17931: PUSH
17932: LD_INT 2
17934: NEG
17935: PUSH
17936: LD_INT 1
17938: NEG
17939: PUSH
17940: EMPTY
17941: LIST
17942: LIST
17943: PUSH
17944: EMPTY
17945: LIST
17946: LIST
17947: LIST
17948: LIST
17949: LIST
17950: LIST
17951: LIST
17952: LIST
17953: LIST
17954: LIST
17955: LIST
17956: LIST
17957: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17958: LD_ADDR_VAR 0 52
17962: PUSH
17963: LD_INT 0
17965: PUSH
17966: LD_INT 0
17968: PUSH
17969: EMPTY
17970: LIST
17971: LIST
17972: PUSH
17973: LD_INT 0
17975: PUSH
17976: LD_INT 1
17978: NEG
17979: PUSH
17980: EMPTY
17981: LIST
17982: LIST
17983: PUSH
17984: LD_INT 1
17986: PUSH
17987: LD_INT 0
17989: PUSH
17990: EMPTY
17991: LIST
17992: LIST
17993: PUSH
17994: LD_INT 1
17996: PUSH
17997: LD_INT 1
17999: PUSH
18000: EMPTY
18001: LIST
18002: LIST
18003: PUSH
18004: LD_INT 0
18006: PUSH
18007: LD_INT 1
18009: PUSH
18010: EMPTY
18011: LIST
18012: LIST
18013: PUSH
18014: LD_INT 1
18016: NEG
18017: PUSH
18018: LD_INT 0
18020: PUSH
18021: EMPTY
18022: LIST
18023: LIST
18024: PUSH
18025: LD_INT 1
18027: NEG
18028: PUSH
18029: LD_INT 1
18031: NEG
18032: PUSH
18033: EMPTY
18034: LIST
18035: LIST
18036: PUSH
18037: LD_INT 1
18039: NEG
18040: PUSH
18041: LD_INT 2
18043: NEG
18044: PUSH
18045: EMPTY
18046: LIST
18047: LIST
18048: PUSH
18049: LD_INT 1
18051: NEG
18052: PUSH
18053: LD_INT 1
18055: PUSH
18056: EMPTY
18057: LIST
18058: LIST
18059: PUSH
18060: LD_INT 2
18062: NEG
18063: PUSH
18064: LD_INT 0
18066: PUSH
18067: EMPTY
18068: LIST
18069: LIST
18070: PUSH
18071: LD_INT 2
18073: NEG
18074: PUSH
18075: LD_INT 1
18077: NEG
18078: PUSH
18079: EMPTY
18080: LIST
18081: LIST
18082: PUSH
18083: LD_INT 2
18085: NEG
18086: PUSH
18087: LD_INT 2
18089: NEG
18090: PUSH
18091: EMPTY
18092: LIST
18093: LIST
18094: PUSH
18095: EMPTY
18096: LIST
18097: LIST
18098: LIST
18099: LIST
18100: LIST
18101: LIST
18102: LIST
18103: LIST
18104: LIST
18105: LIST
18106: LIST
18107: LIST
18108: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18109: LD_ADDR_VAR 0 53
18113: PUSH
18114: LD_INT 0
18116: PUSH
18117: LD_INT 0
18119: PUSH
18120: EMPTY
18121: LIST
18122: LIST
18123: PUSH
18124: LD_INT 0
18126: PUSH
18127: LD_INT 1
18129: NEG
18130: PUSH
18131: EMPTY
18132: LIST
18133: LIST
18134: PUSH
18135: LD_INT 1
18137: PUSH
18138: LD_INT 0
18140: PUSH
18141: EMPTY
18142: LIST
18143: LIST
18144: PUSH
18145: LD_INT 1
18147: PUSH
18148: LD_INT 1
18150: PUSH
18151: EMPTY
18152: LIST
18153: LIST
18154: PUSH
18155: LD_INT 0
18157: PUSH
18158: LD_INT 1
18160: PUSH
18161: EMPTY
18162: LIST
18163: LIST
18164: PUSH
18165: LD_INT 1
18167: NEG
18168: PUSH
18169: LD_INT 0
18171: PUSH
18172: EMPTY
18173: LIST
18174: LIST
18175: PUSH
18176: LD_INT 1
18178: NEG
18179: PUSH
18180: LD_INT 1
18182: NEG
18183: PUSH
18184: EMPTY
18185: LIST
18186: LIST
18187: PUSH
18188: LD_INT 1
18190: NEG
18191: PUSH
18192: LD_INT 2
18194: NEG
18195: PUSH
18196: EMPTY
18197: LIST
18198: LIST
18199: PUSH
18200: LD_INT 0
18202: PUSH
18203: LD_INT 2
18205: NEG
18206: PUSH
18207: EMPTY
18208: LIST
18209: LIST
18210: PUSH
18211: LD_INT 1
18213: PUSH
18214: LD_INT 1
18216: NEG
18217: PUSH
18218: EMPTY
18219: LIST
18220: LIST
18221: PUSH
18222: LD_INT 2
18224: PUSH
18225: LD_INT 0
18227: PUSH
18228: EMPTY
18229: LIST
18230: LIST
18231: PUSH
18232: LD_INT 2
18234: PUSH
18235: LD_INT 1
18237: PUSH
18238: EMPTY
18239: LIST
18240: LIST
18241: PUSH
18242: LD_INT 2
18244: PUSH
18245: LD_INT 2
18247: PUSH
18248: EMPTY
18249: LIST
18250: LIST
18251: PUSH
18252: LD_INT 1
18254: PUSH
18255: LD_INT 2
18257: PUSH
18258: EMPTY
18259: LIST
18260: LIST
18261: PUSH
18262: LD_INT 0
18264: PUSH
18265: LD_INT 2
18267: PUSH
18268: EMPTY
18269: LIST
18270: LIST
18271: PUSH
18272: LD_INT 1
18274: NEG
18275: PUSH
18276: LD_INT 1
18278: PUSH
18279: EMPTY
18280: LIST
18281: LIST
18282: PUSH
18283: LD_INT 2
18285: NEG
18286: PUSH
18287: LD_INT 0
18289: PUSH
18290: EMPTY
18291: LIST
18292: LIST
18293: PUSH
18294: LD_INT 2
18296: NEG
18297: PUSH
18298: LD_INT 1
18300: NEG
18301: PUSH
18302: EMPTY
18303: LIST
18304: LIST
18305: PUSH
18306: LD_INT 2
18308: NEG
18309: PUSH
18310: LD_INT 2
18312: NEG
18313: PUSH
18314: EMPTY
18315: LIST
18316: LIST
18317: PUSH
18318: EMPTY
18319: LIST
18320: LIST
18321: LIST
18322: LIST
18323: LIST
18324: LIST
18325: LIST
18326: LIST
18327: LIST
18328: LIST
18329: LIST
18330: LIST
18331: LIST
18332: LIST
18333: LIST
18334: LIST
18335: LIST
18336: LIST
18337: LIST
18338: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18339: LD_ADDR_VAR 0 54
18343: PUSH
18344: LD_INT 0
18346: PUSH
18347: LD_INT 0
18349: PUSH
18350: EMPTY
18351: LIST
18352: LIST
18353: PUSH
18354: LD_INT 0
18356: PUSH
18357: LD_INT 1
18359: NEG
18360: PUSH
18361: EMPTY
18362: LIST
18363: LIST
18364: PUSH
18365: LD_INT 1
18367: PUSH
18368: LD_INT 0
18370: PUSH
18371: EMPTY
18372: LIST
18373: LIST
18374: PUSH
18375: LD_INT 1
18377: PUSH
18378: LD_INT 1
18380: PUSH
18381: EMPTY
18382: LIST
18383: LIST
18384: PUSH
18385: LD_INT 0
18387: PUSH
18388: LD_INT 1
18390: PUSH
18391: EMPTY
18392: LIST
18393: LIST
18394: PUSH
18395: LD_INT 1
18397: NEG
18398: PUSH
18399: LD_INT 0
18401: PUSH
18402: EMPTY
18403: LIST
18404: LIST
18405: PUSH
18406: LD_INT 1
18408: NEG
18409: PUSH
18410: LD_INT 1
18412: NEG
18413: PUSH
18414: EMPTY
18415: LIST
18416: LIST
18417: PUSH
18418: LD_INT 1
18420: NEG
18421: PUSH
18422: LD_INT 2
18424: NEG
18425: PUSH
18426: EMPTY
18427: LIST
18428: LIST
18429: PUSH
18430: LD_INT 0
18432: PUSH
18433: LD_INT 2
18435: NEG
18436: PUSH
18437: EMPTY
18438: LIST
18439: LIST
18440: PUSH
18441: LD_INT 1
18443: PUSH
18444: LD_INT 1
18446: NEG
18447: PUSH
18448: EMPTY
18449: LIST
18450: LIST
18451: PUSH
18452: LD_INT 2
18454: PUSH
18455: LD_INT 0
18457: PUSH
18458: EMPTY
18459: LIST
18460: LIST
18461: PUSH
18462: LD_INT 2
18464: PUSH
18465: LD_INT 1
18467: PUSH
18468: EMPTY
18469: LIST
18470: LIST
18471: PUSH
18472: LD_INT 2
18474: PUSH
18475: LD_INT 2
18477: PUSH
18478: EMPTY
18479: LIST
18480: LIST
18481: PUSH
18482: LD_INT 1
18484: PUSH
18485: LD_INT 2
18487: PUSH
18488: EMPTY
18489: LIST
18490: LIST
18491: PUSH
18492: LD_INT 0
18494: PUSH
18495: LD_INT 2
18497: PUSH
18498: EMPTY
18499: LIST
18500: LIST
18501: PUSH
18502: LD_INT 1
18504: NEG
18505: PUSH
18506: LD_INT 1
18508: PUSH
18509: EMPTY
18510: LIST
18511: LIST
18512: PUSH
18513: LD_INT 2
18515: NEG
18516: PUSH
18517: LD_INT 0
18519: PUSH
18520: EMPTY
18521: LIST
18522: LIST
18523: PUSH
18524: LD_INT 2
18526: NEG
18527: PUSH
18528: LD_INT 1
18530: NEG
18531: PUSH
18532: EMPTY
18533: LIST
18534: LIST
18535: PUSH
18536: LD_INT 2
18538: NEG
18539: PUSH
18540: LD_INT 2
18542: NEG
18543: PUSH
18544: EMPTY
18545: LIST
18546: LIST
18547: PUSH
18548: EMPTY
18549: LIST
18550: LIST
18551: LIST
18552: LIST
18553: LIST
18554: LIST
18555: LIST
18556: LIST
18557: LIST
18558: LIST
18559: LIST
18560: LIST
18561: LIST
18562: LIST
18563: LIST
18564: LIST
18565: LIST
18566: LIST
18567: LIST
18568: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18569: LD_ADDR_VAR 0 55
18573: PUSH
18574: LD_INT 0
18576: PUSH
18577: LD_INT 0
18579: PUSH
18580: EMPTY
18581: LIST
18582: LIST
18583: PUSH
18584: LD_INT 0
18586: PUSH
18587: LD_INT 1
18589: NEG
18590: PUSH
18591: EMPTY
18592: LIST
18593: LIST
18594: PUSH
18595: LD_INT 1
18597: PUSH
18598: LD_INT 0
18600: PUSH
18601: EMPTY
18602: LIST
18603: LIST
18604: PUSH
18605: LD_INT 1
18607: PUSH
18608: LD_INT 1
18610: PUSH
18611: EMPTY
18612: LIST
18613: LIST
18614: PUSH
18615: LD_INT 0
18617: PUSH
18618: LD_INT 1
18620: PUSH
18621: EMPTY
18622: LIST
18623: LIST
18624: PUSH
18625: LD_INT 1
18627: NEG
18628: PUSH
18629: LD_INT 0
18631: PUSH
18632: EMPTY
18633: LIST
18634: LIST
18635: PUSH
18636: LD_INT 1
18638: NEG
18639: PUSH
18640: LD_INT 1
18642: NEG
18643: PUSH
18644: EMPTY
18645: LIST
18646: LIST
18647: PUSH
18648: LD_INT 1
18650: NEG
18651: PUSH
18652: LD_INT 2
18654: NEG
18655: PUSH
18656: EMPTY
18657: LIST
18658: LIST
18659: PUSH
18660: LD_INT 0
18662: PUSH
18663: LD_INT 2
18665: NEG
18666: PUSH
18667: EMPTY
18668: LIST
18669: LIST
18670: PUSH
18671: LD_INT 1
18673: PUSH
18674: LD_INT 1
18676: NEG
18677: PUSH
18678: EMPTY
18679: LIST
18680: LIST
18681: PUSH
18682: LD_INT 2
18684: PUSH
18685: LD_INT 0
18687: PUSH
18688: EMPTY
18689: LIST
18690: LIST
18691: PUSH
18692: LD_INT 2
18694: PUSH
18695: LD_INT 1
18697: PUSH
18698: EMPTY
18699: LIST
18700: LIST
18701: PUSH
18702: LD_INT 2
18704: PUSH
18705: LD_INT 2
18707: PUSH
18708: EMPTY
18709: LIST
18710: LIST
18711: PUSH
18712: LD_INT 1
18714: PUSH
18715: LD_INT 2
18717: PUSH
18718: EMPTY
18719: LIST
18720: LIST
18721: PUSH
18722: LD_INT 0
18724: PUSH
18725: LD_INT 2
18727: PUSH
18728: EMPTY
18729: LIST
18730: LIST
18731: PUSH
18732: LD_INT 1
18734: NEG
18735: PUSH
18736: LD_INT 1
18738: PUSH
18739: EMPTY
18740: LIST
18741: LIST
18742: PUSH
18743: LD_INT 2
18745: NEG
18746: PUSH
18747: LD_INT 0
18749: PUSH
18750: EMPTY
18751: LIST
18752: LIST
18753: PUSH
18754: LD_INT 2
18756: NEG
18757: PUSH
18758: LD_INT 1
18760: NEG
18761: PUSH
18762: EMPTY
18763: LIST
18764: LIST
18765: PUSH
18766: LD_INT 2
18768: NEG
18769: PUSH
18770: LD_INT 2
18772: NEG
18773: PUSH
18774: EMPTY
18775: LIST
18776: LIST
18777: PUSH
18778: EMPTY
18779: LIST
18780: LIST
18781: LIST
18782: LIST
18783: LIST
18784: LIST
18785: LIST
18786: LIST
18787: LIST
18788: LIST
18789: LIST
18790: LIST
18791: LIST
18792: LIST
18793: LIST
18794: LIST
18795: LIST
18796: LIST
18797: LIST
18798: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18799: LD_ADDR_VAR 0 56
18803: PUSH
18804: LD_INT 0
18806: PUSH
18807: LD_INT 0
18809: PUSH
18810: EMPTY
18811: LIST
18812: LIST
18813: PUSH
18814: LD_INT 0
18816: PUSH
18817: LD_INT 1
18819: NEG
18820: PUSH
18821: EMPTY
18822: LIST
18823: LIST
18824: PUSH
18825: LD_INT 1
18827: PUSH
18828: LD_INT 0
18830: PUSH
18831: EMPTY
18832: LIST
18833: LIST
18834: PUSH
18835: LD_INT 1
18837: PUSH
18838: LD_INT 1
18840: PUSH
18841: EMPTY
18842: LIST
18843: LIST
18844: PUSH
18845: LD_INT 0
18847: PUSH
18848: LD_INT 1
18850: PUSH
18851: EMPTY
18852: LIST
18853: LIST
18854: PUSH
18855: LD_INT 1
18857: NEG
18858: PUSH
18859: LD_INT 0
18861: PUSH
18862: EMPTY
18863: LIST
18864: LIST
18865: PUSH
18866: LD_INT 1
18868: NEG
18869: PUSH
18870: LD_INT 1
18872: NEG
18873: PUSH
18874: EMPTY
18875: LIST
18876: LIST
18877: PUSH
18878: LD_INT 1
18880: NEG
18881: PUSH
18882: LD_INT 2
18884: NEG
18885: PUSH
18886: EMPTY
18887: LIST
18888: LIST
18889: PUSH
18890: LD_INT 0
18892: PUSH
18893: LD_INT 2
18895: NEG
18896: PUSH
18897: EMPTY
18898: LIST
18899: LIST
18900: PUSH
18901: LD_INT 1
18903: PUSH
18904: LD_INT 1
18906: NEG
18907: PUSH
18908: EMPTY
18909: LIST
18910: LIST
18911: PUSH
18912: LD_INT 2
18914: PUSH
18915: LD_INT 0
18917: PUSH
18918: EMPTY
18919: LIST
18920: LIST
18921: PUSH
18922: LD_INT 2
18924: PUSH
18925: LD_INT 1
18927: PUSH
18928: EMPTY
18929: LIST
18930: LIST
18931: PUSH
18932: LD_INT 2
18934: PUSH
18935: LD_INT 2
18937: PUSH
18938: EMPTY
18939: LIST
18940: LIST
18941: PUSH
18942: LD_INT 1
18944: PUSH
18945: LD_INT 2
18947: PUSH
18948: EMPTY
18949: LIST
18950: LIST
18951: PUSH
18952: LD_INT 0
18954: PUSH
18955: LD_INT 2
18957: PUSH
18958: EMPTY
18959: LIST
18960: LIST
18961: PUSH
18962: LD_INT 1
18964: NEG
18965: PUSH
18966: LD_INT 1
18968: PUSH
18969: EMPTY
18970: LIST
18971: LIST
18972: PUSH
18973: LD_INT 2
18975: NEG
18976: PUSH
18977: LD_INT 0
18979: PUSH
18980: EMPTY
18981: LIST
18982: LIST
18983: PUSH
18984: LD_INT 2
18986: NEG
18987: PUSH
18988: LD_INT 1
18990: NEG
18991: PUSH
18992: EMPTY
18993: LIST
18994: LIST
18995: PUSH
18996: LD_INT 2
18998: NEG
18999: PUSH
19000: LD_INT 2
19002: NEG
19003: PUSH
19004: EMPTY
19005: LIST
19006: LIST
19007: PUSH
19008: EMPTY
19009: LIST
19010: LIST
19011: LIST
19012: LIST
19013: LIST
19014: LIST
19015: LIST
19016: LIST
19017: LIST
19018: LIST
19019: LIST
19020: LIST
19021: LIST
19022: LIST
19023: LIST
19024: LIST
19025: LIST
19026: LIST
19027: LIST
19028: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19029: LD_ADDR_VAR 0 57
19033: PUSH
19034: LD_INT 0
19036: PUSH
19037: LD_INT 0
19039: PUSH
19040: EMPTY
19041: LIST
19042: LIST
19043: PUSH
19044: LD_INT 0
19046: PUSH
19047: LD_INT 1
19049: NEG
19050: PUSH
19051: EMPTY
19052: LIST
19053: LIST
19054: PUSH
19055: LD_INT 1
19057: PUSH
19058: LD_INT 0
19060: PUSH
19061: EMPTY
19062: LIST
19063: LIST
19064: PUSH
19065: LD_INT 1
19067: PUSH
19068: LD_INT 1
19070: PUSH
19071: EMPTY
19072: LIST
19073: LIST
19074: PUSH
19075: LD_INT 0
19077: PUSH
19078: LD_INT 1
19080: PUSH
19081: EMPTY
19082: LIST
19083: LIST
19084: PUSH
19085: LD_INT 1
19087: NEG
19088: PUSH
19089: LD_INT 0
19091: PUSH
19092: EMPTY
19093: LIST
19094: LIST
19095: PUSH
19096: LD_INT 1
19098: NEG
19099: PUSH
19100: LD_INT 1
19102: NEG
19103: PUSH
19104: EMPTY
19105: LIST
19106: LIST
19107: PUSH
19108: LD_INT 1
19110: NEG
19111: PUSH
19112: LD_INT 2
19114: NEG
19115: PUSH
19116: EMPTY
19117: LIST
19118: LIST
19119: PUSH
19120: LD_INT 0
19122: PUSH
19123: LD_INT 2
19125: NEG
19126: PUSH
19127: EMPTY
19128: LIST
19129: LIST
19130: PUSH
19131: LD_INT 1
19133: PUSH
19134: LD_INT 1
19136: NEG
19137: PUSH
19138: EMPTY
19139: LIST
19140: LIST
19141: PUSH
19142: LD_INT 2
19144: PUSH
19145: LD_INT 0
19147: PUSH
19148: EMPTY
19149: LIST
19150: LIST
19151: PUSH
19152: LD_INT 2
19154: PUSH
19155: LD_INT 1
19157: PUSH
19158: EMPTY
19159: LIST
19160: LIST
19161: PUSH
19162: LD_INT 2
19164: PUSH
19165: LD_INT 2
19167: PUSH
19168: EMPTY
19169: LIST
19170: LIST
19171: PUSH
19172: LD_INT 1
19174: PUSH
19175: LD_INT 2
19177: PUSH
19178: EMPTY
19179: LIST
19180: LIST
19181: PUSH
19182: LD_INT 0
19184: PUSH
19185: LD_INT 2
19187: PUSH
19188: EMPTY
19189: LIST
19190: LIST
19191: PUSH
19192: LD_INT 1
19194: NEG
19195: PUSH
19196: LD_INT 1
19198: PUSH
19199: EMPTY
19200: LIST
19201: LIST
19202: PUSH
19203: LD_INT 2
19205: NEG
19206: PUSH
19207: LD_INT 0
19209: PUSH
19210: EMPTY
19211: LIST
19212: LIST
19213: PUSH
19214: LD_INT 2
19216: NEG
19217: PUSH
19218: LD_INT 1
19220: NEG
19221: PUSH
19222: EMPTY
19223: LIST
19224: LIST
19225: PUSH
19226: LD_INT 2
19228: NEG
19229: PUSH
19230: LD_INT 2
19232: NEG
19233: PUSH
19234: EMPTY
19235: LIST
19236: LIST
19237: PUSH
19238: EMPTY
19239: LIST
19240: LIST
19241: LIST
19242: LIST
19243: LIST
19244: LIST
19245: LIST
19246: LIST
19247: LIST
19248: LIST
19249: LIST
19250: LIST
19251: LIST
19252: LIST
19253: LIST
19254: LIST
19255: LIST
19256: LIST
19257: LIST
19258: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19259: LD_ADDR_VAR 0 58
19263: PUSH
19264: LD_INT 0
19266: PUSH
19267: LD_INT 0
19269: PUSH
19270: EMPTY
19271: LIST
19272: LIST
19273: PUSH
19274: LD_INT 0
19276: PUSH
19277: LD_INT 1
19279: NEG
19280: PUSH
19281: EMPTY
19282: LIST
19283: LIST
19284: PUSH
19285: LD_INT 1
19287: PUSH
19288: LD_INT 0
19290: PUSH
19291: EMPTY
19292: LIST
19293: LIST
19294: PUSH
19295: LD_INT 1
19297: PUSH
19298: LD_INT 1
19300: PUSH
19301: EMPTY
19302: LIST
19303: LIST
19304: PUSH
19305: LD_INT 0
19307: PUSH
19308: LD_INT 1
19310: PUSH
19311: EMPTY
19312: LIST
19313: LIST
19314: PUSH
19315: LD_INT 1
19317: NEG
19318: PUSH
19319: LD_INT 0
19321: PUSH
19322: EMPTY
19323: LIST
19324: LIST
19325: PUSH
19326: LD_INT 1
19328: NEG
19329: PUSH
19330: LD_INT 1
19332: NEG
19333: PUSH
19334: EMPTY
19335: LIST
19336: LIST
19337: PUSH
19338: LD_INT 1
19340: NEG
19341: PUSH
19342: LD_INT 2
19344: NEG
19345: PUSH
19346: EMPTY
19347: LIST
19348: LIST
19349: PUSH
19350: LD_INT 0
19352: PUSH
19353: LD_INT 2
19355: NEG
19356: PUSH
19357: EMPTY
19358: LIST
19359: LIST
19360: PUSH
19361: LD_INT 1
19363: PUSH
19364: LD_INT 1
19366: NEG
19367: PUSH
19368: EMPTY
19369: LIST
19370: LIST
19371: PUSH
19372: LD_INT 2
19374: PUSH
19375: LD_INT 0
19377: PUSH
19378: EMPTY
19379: LIST
19380: LIST
19381: PUSH
19382: LD_INT 2
19384: PUSH
19385: LD_INT 1
19387: PUSH
19388: EMPTY
19389: LIST
19390: LIST
19391: PUSH
19392: LD_INT 2
19394: PUSH
19395: LD_INT 2
19397: PUSH
19398: EMPTY
19399: LIST
19400: LIST
19401: PUSH
19402: LD_INT 1
19404: PUSH
19405: LD_INT 2
19407: PUSH
19408: EMPTY
19409: LIST
19410: LIST
19411: PUSH
19412: LD_INT 0
19414: PUSH
19415: LD_INT 2
19417: PUSH
19418: EMPTY
19419: LIST
19420: LIST
19421: PUSH
19422: LD_INT 1
19424: NEG
19425: PUSH
19426: LD_INT 1
19428: PUSH
19429: EMPTY
19430: LIST
19431: LIST
19432: PUSH
19433: LD_INT 2
19435: NEG
19436: PUSH
19437: LD_INT 0
19439: PUSH
19440: EMPTY
19441: LIST
19442: LIST
19443: PUSH
19444: LD_INT 2
19446: NEG
19447: PUSH
19448: LD_INT 1
19450: NEG
19451: PUSH
19452: EMPTY
19453: LIST
19454: LIST
19455: PUSH
19456: LD_INT 2
19458: NEG
19459: PUSH
19460: LD_INT 2
19462: NEG
19463: PUSH
19464: EMPTY
19465: LIST
19466: LIST
19467: PUSH
19468: EMPTY
19469: LIST
19470: LIST
19471: LIST
19472: LIST
19473: LIST
19474: LIST
19475: LIST
19476: LIST
19477: LIST
19478: LIST
19479: LIST
19480: LIST
19481: LIST
19482: LIST
19483: LIST
19484: LIST
19485: LIST
19486: LIST
19487: LIST
19488: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19489: LD_ADDR_VAR 0 59
19493: PUSH
19494: LD_INT 0
19496: PUSH
19497: LD_INT 0
19499: PUSH
19500: EMPTY
19501: LIST
19502: LIST
19503: PUSH
19504: LD_INT 0
19506: PUSH
19507: LD_INT 1
19509: NEG
19510: PUSH
19511: EMPTY
19512: LIST
19513: LIST
19514: PUSH
19515: LD_INT 1
19517: PUSH
19518: LD_INT 0
19520: PUSH
19521: EMPTY
19522: LIST
19523: LIST
19524: PUSH
19525: LD_INT 1
19527: PUSH
19528: LD_INT 1
19530: PUSH
19531: EMPTY
19532: LIST
19533: LIST
19534: PUSH
19535: LD_INT 0
19537: PUSH
19538: LD_INT 1
19540: PUSH
19541: EMPTY
19542: LIST
19543: LIST
19544: PUSH
19545: LD_INT 1
19547: NEG
19548: PUSH
19549: LD_INT 0
19551: PUSH
19552: EMPTY
19553: LIST
19554: LIST
19555: PUSH
19556: LD_INT 1
19558: NEG
19559: PUSH
19560: LD_INT 1
19562: NEG
19563: PUSH
19564: EMPTY
19565: LIST
19566: LIST
19567: PUSH
19568: EMPTY
19569: LIST
19570: LIST
19571: LIST
19572: LIST
19573: LIST
19574: LIST
19575: LIST
19576: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19577: LD_ADDR_VAR 0 60
19581: PUSH
19582: LD_INT 0
19584: PUSH
19585: LD_INT 0
19587: PUSH
19588: EMPTY
19589: LIST
19590: LIST
19591: PUSH
19592: LD_INT 0
19594: PUSH
19595: LD_INT 1
19597: NEG
19598: PUSH
19599: EMPTY
19600: LIST
19601: LIST
19602: PUSH
19603: LD_INT 1
19605: PUSH
19606: LD_INT 0
19608: PUSH
19609: EMPTY
19610: LIST
19611: LIST
19612: PUSH
19613: LD_INT 1
19615: PUSH
19616: LD_INT 1
19618: PUSH
19619: EMPTY
19620: LIST
19621: LIST
19622: PUSH
19623: LD_INT 0
19625: PUSH
19626: LD_INT 1
19628: PUSH
19629: EMPTY
19630: LIST
19631: LIST
19632: PUSH
19633: LD_INT 1
19635: NEG
19636: PUSH
19637: LD_INT 0
19639: PUSH
19640: EMPTY
19641: LIST
19642: LIST
19643: PUSH
19644: LD_INT 1
19646: NEG
19647: PUSH
19648: LD_INT 1
19650: NEG
19651: PUSH
19652: EMPTY
19653: LIST
19654: LIST
19655: PUSH
19656: EMPTY
19657: LIST
19658: LIST
19659: LIST
19660: LIST
19661: LIST
19662: LIST
19663: LIST
19664: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19665: LD_ADDR_VAR 0 61
19669: PUSH
19670: LD_INT 0
19672: PUSH
19673: LD_INT 0
19675: PUSH
19676: EMPTY
19677: LIST
19678: LIST
19679: PUSH
19680: LD_INT 0
19682: PUSH
19683: LD_INT 1
19685: NEG
19686: PUSH
19687: EMPTY
19688: LIST
19689: LIST
19690: PUSH
19691: LD_INT 1
19693: PUSH
19694: LD_INT 0
19696: PUSH
19697: EMPTY
19698: LIST
19699: LIST
19700: PUSH
19701: LD_INT 1
19703: PUSH
19704: LD_INT 1
19706: PUSH
19707: EMPTY
19708: LIST
19709: LIST
19710: PUSH
19711: LD_INT 0
19713: PUSH
19714: LD_INT 1
19716: PUSH
19717: EMPTY
19718: LIST
19719: LIST
19720: PUSH
19721: LD_INT 1
19723: NEG
19724: PUSH
19725: LD_INT 0
19727: PUSH
19728: EMPTY
19729: LIST
19730: LIST
19731: PUSH
19732: LD_INT 1
19734: NEG
19735: PUSH
19736: LD_INT 1
19738: NEG
19739: PUSH
19740: EMPTY
19741: LIST
19742: LIST
19743: PUSH
19744: EMPTY
19745: LIST
19746: LIST
19747: LIST
19748: LIST
19749: LIST
19750: LIST
19751: LIST
19752: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19753: LD_ADDR_VAR 0 62
19757: PUSH
19758: LD_INT 0
19760: PUSH
19761: LD_INT 0
19763: PUSH
19764: EMPTY
19765: LIST
19766: LIST
19767: PUSH
19768: LD_INT 0
19770: PUSH
19771: LD_INT 1
19773: NEG
19774: PUSH
19775: EMPTY
19776: LIST
19777: LIST
19778: PUSH
19779: LD_INT 1
19781: PUSH
19782: LD_INT 0
19784: PUSH
19785: EMPTY
19786: LIST
19787: LIST
19788: PUSH
19789: LD_INT 1
19791: PUSH
19792: LD_INT 1
19794: PUSH
19795: EMPTY
19796: LIST
19797: LIST
19798: PUSH
19799: LD_INT 0
19801: PUSH
19802: LD_INT 1
19804: PUSH
19805: EMPTY
19806: LIST
19807: LIST
19808: PUSH
19809: LD_INT 1
19811: NEG
19812: PUSH
19813: LD_INT 0
19815: PUSH
19816: EMPTY
19817: LIST
19818: LIST
19819: PUSH
19820: LD_INT 1
19822: NEG
19823: PUSH
19824: LD_INT 1
19826: NEG
19827: PUSH
19828: EMPTY
19829: LIST
19830: LIST
19831: PUSH
19832: EMPTY
19833: LIST
19834: LIST
19835: LIST
19836: LIST
19837: LIST
19838: LIST
19839: LIST
19840: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19841: LD_ADDR_VAR 0 63
19845: PUSH
19846: LD_INT 0
19848: PUSH
19849: LD_INT 0
19851: PUSH
19852: EMPTY
19853: LIST
19854: LIST
19855: PUSH
19856: LD_INT 0
19858: PUSH
19859: LD_INT 1
19861: NEG
19862: PUSH
19863: EMPTY
19864: LIST
19865: LIST
19866: PUSH
19867: LD_INT 1
19869: PUSH
19870: LD_INT 0
19872: PUSH
19873: EMPTY
19874: LIST
19875: LIST
19876: PUSH
19877: LD_INT 1
19879: PUSH
19880: LD_INT 1
19882: PUSH
19883: EMPTY
19884: LIST
19885: LIST
19886: PUSH
19887: LD_INT 0
19889: PUSH
19890: LD_INT 1
19892: PUSH
19893: EMPTY
19894: LIST
19895: LIST
19896: PUSH
19897: LD_INT 1
19899: NEG
19900: PUSH
19901: LD_INT 0
19903: PUSH
19904: EMPTY
19905: LIST
19906: LIST
19907: PUSH
19908: LD_INT 1
19910: NEG
19911: PUSH
19912: LD_INT 1
19914: NEG
19915: PUSH
19916: EMPTY
19917: LIST
19918: LIST
19919: PUSH
19920: EMPTY
19921: LIST
19922: LIST
19923: LIST
19924: LIST
19925: LIST
19926: LIST
19927: LIST
19928: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19929: LD_ADDR_VAR 0 64
19933: PUSH
19934: LD_INT 0
19936: PUSH
19937: LD_INT 0
19939: PUSH
19940: EMPTY
19941: LIST
19942: LIST
19943: PUSH
19944: LD_INT 0
19946: PUSH
19947: LD_INT 1
19949: NEG
19950: PUSH
19951: EMPTY
19952: LIST
19953: LIST
19954: PUSH
19955: LD_INT 1
19957: PUSH
19958: LD_INT 0
19960: PUSH
19961: EMPTY
19962: LIST
19963: LIST
19964: PUSH
19965: LD_INT 1
19967: PUSH
19968: LD_INT 1
19970: PUSH
19971: EMPTY
19972: LIST
19973: LIST
19974: PUSH
19975: LD_INT 0
19977: PUSH
19978: LD_INT 1
19980: PUSH
19981: EMPTY
19982: LIST
19983: LIST
19984: PUSH
19985: LD_INT 1
19987: NEG
19988: PUSH
19989: LD_INT 0
19991: PUSH
19992: EMPTY
19993: LIST
19994: LIST
19995: PUSH
19996: LD_INT 1
19998: NEG
19999: PUSH
20000: LD_INT 1
20002: NEG
20003: PUSH
20004: EMPTY
20005: LIST
20006: LIST
20007: PUSH
20008: EMPTY
20009: LIST
20010: LIST
20011: LIST
20012: LIST
20013: LIST
20014: LIST
20015: LIST
20016: ST_TO_ADDR
// end ; 1 :
20017: GO 25914
20019: LD_INT 1
20021: DOUBLE
20022: EQUAL
20023: IFTRUE 20027
20025: GO 22650
20027: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20028: LD_ADDR_VAR 0 11
20032: PUSH
20033: LD_INT 1
20035: NEG
20036: PUSH
20037: LD_INT 3
20039: NEG
20040: PUSH
20041: EMPTY
20042: LIST
20043: LIST
20044: PUSH
20045: LD_INT 0
20047: PUSH
20048: LD_INT 3
20050: NEG
20051: PUSH
20052: EMPTY
20053: LIST
20054: LIST
20055: PUSH
20056: LD_INT 1
20058: PUSH
20059: LD_INT 2
20061: NEG
20062: PUSH
20063: EMPTY
20064: LIST
20065: LIST
20066: PUSH
20067: EMPTY
20068: LIST
20069: LIST
20070: LIST
20071: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20072: LD_ADDR_VAR 0 12
20076: PUSH
20077: LD_INT 2
20079: PUSH
20080: LD_INT 1
20082: NEG
20083: PUSH
20084: EMPTY
20085: LIST
20086: LIST
20087: PUSH
20088: LD_INT 3
20090: PUSH
20091: LD_INT 0
20093: PUSH
20094: EMPTY
20095: LIST
20096: LIST
20097: PUSH
20098: LD_INT 3
20100: PUSH
20101: LD_INT 1
20103: PUSH
20104: EMPTY
20105: LIST
20106: LIST
20107: PUSH
20108: EMPTY
20109: LIST
20110: LIST
20111: LIST
20112: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20113: LD_ADDR_VAR 0 13
20117: PUSH
20118: LD_INT 3
20120: PUSH
20121: LD_INT 2
20123: PUSH
20124: EMPTY
20125: LIST
20126: LIST
20127: PUSH
20128: LD_INT 3
20130: PUSH
20131: LD_INT 3
20133: PUSH
20134: EMPTY
20135: LIST
20136: LIST
20137: PUSH
20138: LD_INT 2
20140: PUSH
20141: LD_INT 3
20143: PUSH
20144: EMPTY
20145: LIST
20146: LIST
20147: PUSH
20148: EMPTY
20149: LIST
20150: LIST
20151: LIST
20152: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20153: LD_ADDR_VAR 0 14
20157: PUSH
20158: LD_INT 1
20160: PUSH
20161: LD_INT 3
20163: PUSH
20164: EMPTY
20165: LIST
20166: LIST
20167: PUSH
20168: LD_INT 0
20170: PUSH
20171: LD_INT 3
20173: PUSH
20174: EMPTY
20175: LIST
20176: LIST
20177: PUSH
20178: LD_INT 1
20180: NEG
20181: PUSH
20182: LD_INT 2
20184: PUSH
20185: EMPTY
20186: LIST
20187: LIST
20188: PUSH
20189: EMPTY
20190: LIST
20191: LIST
20192: LIST
20193: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20194: LD_ADDR_VAR 0 15
20198: PUSH
20199: LD_INT 2
20201: NEG
20202: PUSH
20203: LD_INT 1
20205: PUSH
20206: EMPTY
20207: LIST
20208: LIST
20209: PUSH
20210: LD_INT 3
20212: NEG
20213: PUSH
20214: LD_INT 0
20216: PUSH
20217: EMPTY
20218: LIST
20219: LIST
20220: PUSH
20221: LD_INT 3
20223: NEG
20224: PUSH
20225: LD_INT 1
20227: NEG
20228: PUSH
20229: EMPTY
20230: LIST
20231: LIST
20232: PUSH
20233: EMPTY
20234: LIST
20235: LIST
20236: LIST
20237: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20238: LD_ADDR_VAR 0 16
20242: PUSH
20243: LD_INT 2
20245: NEG
20246: PUSH
20247: LD_INT 3
20249: NEG
20250: PUSH
20251: EMPTY
20252: LIST
20253: LIST
20254: PUSH
20255: LD_INT 3
20257: NEG
20258: PUSH
20259: LD_INT 2
20261: NEG
20262: PUSH
20263: EMPTY
20264: LIST
20265: LIST
20266: PUSH
20267: LD_INT 3
20269: NEG
20270: PUSH
20271: LD_INT 3
20273: NEG
20274: PUSH
20275: EMPTY
20276: LIST
20277: LIST
20278: PUSH
20279: EMPTY
20280: LIST
20281: LIST
20282: LIST
20283: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20284: LD_ADDR_VAR 0 17
20288: PUSH
20289: LD_INT 1
20291: NEG
20292: PUSH
20293: LD_INT 3
20295: NEG
20296: PUSH
20297: EMPTY
20298: LIST
20299: LIST
20300: PUSH
20301: LD_INT 0
20303: PUSH
20304: LD_INT 3
20306: NEG
20307: PUSH
20308: EMPTY
20309: LIST
20310: LIST
20311: PUSH
20312: LD_INT 1
20314: PUSH
20315: LD_INT 2
20317: NEG
20318: PUSH
20319: EMPTY
20320: LIST
20321: LIST
20322: PUSH
20323: EMPTY
20324: LIST
20325: LIST
20326: LIST
20327: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20328: LD_ADDR_VAR 0 18
20332: PUSH
20333: LD_INT 2
20335: PUSH
20336: LD_INT 1
20338: NEG
20339: PUSH
20340: EMPTY
20341: LIST
20342: LIST
20343: PUSH
20344: LD_INT 3
20346: PUSH
20347: LD_INT 0
20349: PUSH
20350: EMPTY
20351: LIST
20352: LIST
20353: PUSH
20354: LD_INT 3
20356: PUSH
20357: LD_INT 1
20359: PUSH
20360: EMPTY
20361: LIST
20362: LIST
20363: PUSH
20364: EMPTY
20365: LIST
20366: LIST
20367: LIST
20368: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20369: LD_ADDR_VAR 0 19
20373: PUSH
20374: LD_INT 3
20376: PUSH
20377: LD_INT 2
20379: PUSH
20380: EMPTY
20381: LIST
20382: LIST
20383: PUSH
20384: LD_INT 3
20386: PUSH
20387: LD_INT 3
20389: PUSH
20390: EMPTY
20391: LIST
20392: LIST
20393: PUSH
20394: LD_INT 2
20396: PUSH
20397: LD_INT 3
20399: PUSH
20400: EMPTY
20401: LIST
20402: LIST
20403: PUSH
20404: EMPTY
20405: LIST
20406: LIST
20407: LIST
20408: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20409: LD_ADDR_VAR 0 20
20413: PUSH
20414: LD_INT 1
20416: PUSH
20417: LD_INT 3
20419: PUSH
20420: EMPTY
20421: LIST
20422: LIST
20423: PUSH
20424: LD_INT 0
20426: PUSH
20427: LD_INT 3
20429: PUSH
20430: EMPTY
20431: LIST
20432: LIST
20433: PUSH
20434: LD_INT 1
20436: NEG
20437: PUSH
20438: LD_INT 2
20440: PUSH
20441: EMPTY
20442: LIST
20443: LIST
20444: PUSH
20445: EMPTY
20446: LIST
20447: LIST
20448: LIST
20449: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20450: LD_ADDR_VAR 0 21
20454: PUSH
20455: LD_INT 2
20457: NEG
20458: PUSH
20459: LD_INT 1
20461: PUSH
20462: EMPTY
20463: LIST
20464: LIST
20465: PUSH
20466: LD_INT 3
20468: NEG
20469: PUSH
20470: LD_INT 0
20472: PUSH
20473: EMPTY
20474: LIST
20475: LIST
20476: PUSH
20477: LD_INT 3
20479: NEG
20480: PUSH
20481: LD_INT 1
20483: NEG
20484: PUSH
20485: EMPTY
20486: LIST
20487: LIST
20488: PUSH
20489: EMPTY
20490: LIST
20491: LIST
20492: LIST
20493: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20494: LD_ADDR_VAR 0 22
20498: PUSH
20499: LD_INT 2
20501: NEG
20502: PUSH
20503: LD_INT 3
20505: NEG
20506: PUSH
20507: EMPTY
20508: LIST
20509: LIST
20510: PUSH
20511: LD_INT 3
20513: NEG
20514: PUSH
20515: LD_INT 2
20517: NEG
20518: PUSH
20519: EMPTY
20520: LIST
20521: LIST
20522: PUSH
20523: LD_INT 3
20525: NEG
20526: PUSH
20527: LD_INT 3
20529: NEG
20530: PUSH
20531: EMPTY
20532: LIST
20533: LIST
20534: PUSH
20535: EMPTY
20536: LIST
20537: LIST
20538: LIST
20539: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20540: LD_ADDR_VAR 0 23
20544: PUSH
20545: LD_INT 0
20547: PUSH
20548: LD_INT 3
20550: NEG
20551: PUSH
20552: EMPTY
20553: LIST
20554: LIST
20555: PUSH
20556: LD_INT 1
20558: NEG
20559: PUSH
20560: LD_INT 4
20562: NEG
20563: PUSH
20564: EMPTY
20565: LIST
20566: LIST
20567: PUSH
20568: LD_INT 1
20570: PUSH
20571: LD_INT 3
20573: NEG
20574: PUSH
20575: EMPTY
20576: LIST
20577: LIST
20578: PUSH
20579: EMPTY
20580: LIST
20581: LIST
20582: LIST
20583: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20584: LD_ADDR_VAR 0 24
20588: PUSH
20589: LD_INT 3
20591: PUSH
20592: LD_INT 0
20594: PUSH
20595: EMPTY
20596: LIST
20597: LIST
20598: PUSH
20599: LD_INT 3
20601: PUSH
20602: LD_INT 1
20604: NEG
20605: PUSH
20606: EMPTY
20607: LIST
20608: LIST
20609: PUSH
20610: LD_INT 4
20612: PUSH
20613: LD_INT 1
20615: PUSH
20616: EMPTY
20617: LIST
20618: LIST
20619: PUSH
20620: EMPTY
20621: LIST
20622: LIST
20623: LIST
20624: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20625: LD_ADDR_VAR 0 25
20629: PUSH
20630: LD_INT 3
20632: PUSH
20633: LD_INT 3
20635: PUSH
20636: EMPTY
20637: LIST
20638: LIST
20639: PUSH
20640: LD_INT 4
20642: PUSH
20643: LD_INT 3
20645: PUSH
20646: EMPTY
20647: LIST
20648: LIST
20649: PUSH
20650: LD_INT 3
20652: PUSH
20653: LD_INT 4
20655: PUSH
20656: EMPTY
20657: LIST
20658: LIST
20659: PUSH
20660: EMPTY
20661: LIST
20662: LIST
20663: LIST
20664: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
20665: LD_ADDR_VAR 0 26
20669: PUSH
20670: LD_INT 0
20672: PUSH
20673: LD_INT 3
20675: PUSH
20676: EMPTY
20677: LIST
20678: LIST
20679: PUSH
20680: LD_INT 1
20682: PUSH
20683: LD_INT 4
20685: PUSH
20686: EMPTY
20687: LIST
20688: LIST
20689: PUSH
20690: LD_INT 1
20692: NEG
20693: PUSH
20694: LD_INT 3
20696: PUSH
20697: EMPTY
20698: LIST
20699: LIST
20700: PUSH
20701: EMPTY
20702: LIST
20703: LIST
20704: LIST
20705: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
20706: LD_ADDR_VAR 0 27
20710: PUSH
20711: LD_INT 3
20713: NEG
20714: PUSH
20715: LD_INT 0
20717: PUSH
20718: EMPTY
20719: LIST
20720: LIST
20721: PUSH
20722: LD_INT 3
20724: NEG
20725: PUSH
20726: LD_INT 1
20728: PUSH
20729: EMPTY
20730: LIST
20731: LIST
20732: PUSH
20733: LD_INT 4
20735: NEG
20736: PUSH
20737: LD_INT 1
20739: NEG
20740: PUSH
20741: EMPTY
20742: LIST
20743: LIST
20744: PUSH
20745: EMPTY
20746: LIST
20747: LIST
20748: LIST
20749: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
20750: LD_ADDR_VAR 0 28
20754: PUSH
20755: LD_INT 3
20757: NEG
20758: PUSH
20759: LD_INT 3
20761: NEG
20762: PUSH
20763: EMPTY
20764: LIST
20765: LIST
20766: PUSH
20767: LD_INT 3
20769: NEG
20770: PUSH
20771: LD_INT 4
20773: NEG
20774: PUSH
20775: EMPTY
20776: LIST
20777: LIST
20778: PUSH
20779: LD_INT 4
20781: NEG
20782: PUSH
20783: LD_INT 3
20785: NEG
20786: PUSH
20787: EMPTY
20788: LIST
20789: LIST
20790: PUSH
20791: EMPTY
20792: LIST
20793: LIST
20794: LIST
20795: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
20796: LD_ADDR_VAR 0 29
20800: PUSH
20801: LD_INT 1
20803: NEG
20804: PUSH
20805: LD_INT 3
20807: NEG
20808: PUSH
20809: EMPTY
20810: LIST
20811: LIST
20812: PUSH
20813: LD_INT 0
20815: PUSH
20816: LD_INT 3
20818: NEG
20819: PUSH
20820: EMPTY
20821: LIST
20822: LIST
20823: PUSH
20824: LD_INT 1
20826: PUSH
20827: LD_INT 2
20829: NEG
20830: PUSH
20831: EMPTY
20832: LIST
20833: LIST
20834: PUSH
20835: LD_INT 1
20837: NEG
20838: PUSH
20839: LD_INT 4
20841: NEG
20842: PUSH
20843: EMPTY
20844: LIST
20845: LIST
20846: PUSH
20847: LD_INT 0
20849: PUSH
20850: LD_INT 4
20852: NEG
20853: PUSH
20854: EMPTY
20855: LIST
20856: LIST
20857: PUSH
20858: LD_INT 1
20860: PUSH
20861: LD_INT 3
20863: NEG
20864: PUSH
20865: EMPTY
20866: LIST
20867: LIST
20868: PUSH
20869: LD_INT 1
20871: NEG
20872: PUSH
20873: LD_INT 5
20875: NEG
20876: PUSH
20877: EMPTY
20878: LIST
20879: LIST
20880: PUSH
20881: LD_INT 0
20883: PUSH
20884: LD_INT 5
20886: NEG
20887: PUSH
20888: EMPTY
20889: LIST
20890: LIST
20891: PUSH
20892: LD_INT 1
20894: PUSH
20895: LD_INT 4
20897: NEG
20898: PUSH
20899: EMPTY
20900: LIST
20901: LIST
20902: PUSH
20903: LD_INT 1
20905: NEG
20906: PUSH
20907: LD_INT 6
20909: NEG
20910: PUSH
20911: EMPTY
20912: LIST
20913: LIST
20914: PUSH
20915: LD_INT 0
20917: PUSH
20918: LD_INT 6
20920: NEG
20921: PUSH
20922: EMPTY
20923: LIST
20924: LIST
20925: PUSH
20926: LD_INT 1
20928: PUSH
20929: LD_INT 5
20931: NEG
20932: PUSH
20933: EMPTY
20934: LIST
20935: LIST
20936: PUSH
20937: EMPTY
20938: LIST
20939: LIST
20940: LIST
20941: LIST
20942: LIST
20943: LIST
20944: LIST
20945: LIST
20946: LIST
20947: LIST
20948: LIST
20949: LIST
20950: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
20951: LD_ADDR_VAR 0 30
20955: PUSH
20956: LD_INT 2
20958: PUSH
20959: LD_INT 1
20961: NEG
20962: PUSH
20963: EMPTY
20964: LIST
20965: LIST
20966: PUSH
20967: LD_INT 3
20969: PUSH
20970: LD_INT 0
20972: PUSH
20973: EMPTY
20974: LIST
20975: LIST
20976: PUSH
20977: LD_INT 3
20979: PUSH
20980: LD_INT 1
20982: PUSH
20983: EMPTY
20984: LIST
20985: LIST
20986: PUSH
20987: LD_INT 3
20989: PUSH
20990: LD_INT 1
20992: NEG
20993: PUSH
20994: EMPTY
20995: LIST
20996: LIST
20997: PUSH
20998: LD_INT 4
21000: PUSH
21001: LD_INT 0
21003: PUSH
21004: EMPTY
21005: LIST
21006: LIST
21007: PUSH
21008: LD_INT 4
21010: PUSH
21011: LD_INT 1
21013: PUSH
21014: EMPTY
21015: LIST
21016: LIST
21017: PUSH
21018: LD_INT 4
21020: PUSH
21021: LD_INT 1
21023: NEG
21024: PUSH
21025: EMPTY
21026: LIST
21027: LIST
21028: PUSH
21029: LD_INT 5
21031: PUSH
21032: LD_INT 0
21034: PUSH
21035: EMPTY
21036: LIST
21037: LIST
21038: PUSH
21039: LD_INT 5
21041: PUSH
21042: LD_INT 1
21044: PUSH
21045: EMPTY
21046: LIST
21047: LIST
21048: PUSH
21049: LD_INT 5
21051: PUSH
21052: LD_INT 1
21054: NEG
21055: PUSH
21056: EMPTY
21057: LIST
21058: LIST
21059: PUSH
21060: LD_INT 6
21062: PUSH
21063: LD_INT 0
21065: PUSH
21066: EMPTY
21067: LIST
21068: LIST
21069: PUSH
21070: LD_INT 6
21072: PUSH
21073: LD_INT 1
21075: PUSH
21076: EMPTY
21077: LIST
21078: LIST
21079: PUSH
21080: EMPTY
21081: LIST
21082: LIST
21083: LIST
21084: LIST
21085: LIST
21086: LIST
21087: LIST
21088: LIST
21089: LIST
21090: LIST
21091: LIST
21092: LIST
21093: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21094: LD_ADDR_VAR 0 31
21098: PUSH
21099: LD_INT 3
21101: PUSH
21102: LD_INT 2
21104: PUSH
21105: EMPTY
21106: LIST
21107: LIST
21108: PUSH
21109: LD_INT 3
21111: PUSH
21112: LD_INT 3
21114: PUSH
21115: EMPTY
21116: LIST
21117: LIST
21118: PUSH
21119: LD_INT 2
21121: PUSH
21122: LD_INT 3
21124: PUSH
21125: EMPTY
21126: LIST
21127: LIST
21128: PUSH
21129: LD_INT 4
21131: PUSH
21132: LD_INT 3
21134: PUSH
21135: EMPTY
21136: LIST
21137: LIST
21138: PUSH
21139: LD_INT 4
21141: PUSH
21142: LD_INT 4
21144: PUSH
21145: EMPTY
21146: LIST
21147: LIST
21148: PUSH
21149: LD_INT 3
21151: PUSH
21152: LD_INT 4
21154: PUSH
21155: EMPTY
21156: LIST
21157: LIST
21158: PUSH
21159: LD_INT 5
21161: PUSH
21162: LD_INT 4
21164: PUSH
21165: EMPTY
21166: LIST
21167: LIST
21168: PUSH
21169: LD_INT 5
21171: PUSH
21172: LD_INT 5
21174: PUSH
21175: EMPTY
21176: LIST
21177: LIST
21178: PUSH
21179: LD_INT 4
21181: PUSH
21182: LD_INT 5
21184: PUSH
21185: EMPTY
21186: LIST
21187: LIST
21188: PUSH
21189: LD_INT 6
21191: PUSH
21192: LD_INT 5
21194: PUSH
21195: EMPTY
21196: LIST
21197: LIST
21198: PUSH
21199: LD_INT 6
21201: PUSH
21202: LD_INT 6
21204: PUSH
21205: EMPTY
21206: LIST
21207: LIST
21208: PUSH
21209: LD_INT 5
21211: PUSH
21212: LD_INT 6
21214: PUSH
21215: EMPTY
21216: LIST
21217: LIST
21218: PUSH
21219: EMPTY
21220: LIST
21221: LIST
21222: LIST
21223: LIST
21224: LIST
21225: LIST
21226: LIST
21227: LIST
21228: LIST
21229: LIST
21230: LIST
21231: LIST
21232: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21233: LD_ADDR_VAR 0 32
21237: PUSH
21238: LD_INT 1
21240: PUSH
21241: LD_INT 3
21243: PUSH
21244: EMPTY
21245: LIST
21246: LIST
21247: PUSH
21248: LD_INT 0
21250: PUSH
21251: LD_INT 3
21253: PUSH
21254: EMPTY
21255: LIST
21256: LIST
21257: PUSH
21258: LD_INT 1
21260: NEG
21261: PUSH
21262: LD_INT 2
21264: PUSH
21265: EMPTY
21266: LIST
21267: LIST
21268: PUSH
21269: LD_INT 1
21271: PUSH
21272: LD_INT 4
21274: PUSH
21275: EMPTY
21276: LIST
21277: LIST
21278: PUSH
21279: LD_INT 0
21281: PUSH
21282: LD_INT 4
21284: PUSH
21285: EMPTY
21286: LIST
21287: LIST
21288: PUSH
21289: LD_INT 1
21291: NEG
21292: PUSH
21293: LD_INT 3
21295: PUSH
21296: EMPTY
21297: LIST
21298: LIST
21299: PUSH
21300: LD_INT 1
21302: PUSH
21303: LD_INT 5
21305: PUSH
21306: EMPTY
21307: LIST
21308: LIST
21309: PUSH
21310: LD_INT 0
21312: PUSH
21313: LD_INT 5
21315: PUSH
21316: EMPTY
21317: LIST
21318: LIST
21319: PUSH
21320: LD_INT 1
21322: NEG
21323: PUSH
21324: LD_INT 4
21326: PUSH
21327: EMPTY
21328: LIST
21329: LIST
21330: PUSH
21331: LD_INT 1
21333: PUSH
21334: LD_INT 6
21336: PUSH
21337: EMPTY
21338: LIST
21339: LIST
21340: PUSH
21341: LD_INT 0
21343: PUSH
21344: LD_INT 6
21346: PUSH
21347: EMPTY
21348: LIST
21349: LIST
21350: PUSH
21351: LD_INT 1
21353: NEG
21354: PUSH
21355: LD_INT 5
21357: PUSH
21358: EMPTY
21359: LIST
21360: LIST
21361: PUSH
21362: EMPTY
21363: LIST
21364: LIST
21365: LIST
21366: LIST
21367: LIST
21368: LIST
21369: LIST
21370: LIST
21371: LIST
21372: LIST
21373: LIST
21374: LIST
21375: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21376: LD_ADDR_VAR 0 33
21380: PUSH
21381: LD_INT 2
21383: NEG
21384: PUSH
21385: LD_INT 1
21387: PUSH
21388: EMPTY
21389: LIST
21390: LIST
21391: PUSH
21392: LD_INT 3
21394: NEG
21395: PUSH
21396: LD_INT 0
21398: PUSH
21399: EMPTY
21400: LIST
21401: LIST
21402: PUSH
21403: LD_INT 3
21405: NEG
21406: PUSH
21407: LD_INT 1
21409: NEG
21410: PUSH
21411: EMPTY
21412: LIST
21413: LIST
21414: PUSH
21415: LD_INT 3
21417: NEG
21418: PUSH
21419: LD_INT 1
21421: PUSH
21422: EMPTY
21423: LIST
21424: LIST
21425: PUSH
21426: LD_INT 4
21428: NEG
21429: PUSH
21430: LD_INT 0
21432: PUSH
21433: EMPTY
21434: LIST
21435: LIST
21436: PUSH
21437: LD_INT 4
21439: NEG
21440: PUSH
21441: LD_INT 1
21443: NEG
21444: PUSH
21445: EMPTY
21446: LIST
21447: LIST
21448: PUSH
21449: LD_INT 4
21451: NEG
21452: PUSH
21453: LD_INT 1
21455: PUSH
21456: EMPTY
21457: LIST
21458: LIST
21459: PUSH
21460: LD_INT 5
21462: NEG
21463: PUSH
21464: LD_INT 0
21466: PUSH
21467: EMPTY
21468: LIST
21469: LIST
21470: PUSH
21471: LD_INT 5
21473: NEG
21474: PUSH
21475: LD_INT 1
21477: NEG
21478: PUSH
21479: EMPTY
21480: LIST
21481: LIST
21482: PUSH
21483: LD_INT 5
21485: NEG
21486: PUSH
21487: LD_INT 1
21489: PUSH
21490: EMPTY
21491: LIST
21492: LIST
21493: PUSH
21494: LD_INT 6
21496: NEG
21497: PUSH
21498: LD_INT 0
21500: PUSH
21501: EMPTY
21502: LIST
21503: LIST
21504: PUSH
21505: LD_INT 6
21507: NEG
21508: PUSH
21509: LD_INT 1
21511: NEG
21512: PUSH
21513: EMPTY
21514: LIST
21515: LIST
21516: PUSH
21517: EMPTY
21518: LIST
21519: LIST
21520: LIST
21521: LIST
21522: LIST
21523: LIST
21524: LIST
21525: LIST
21526: LIST
21527: LIST
21528: LIST
21529: LIST
21530: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21531: LD_ADDR_VAR 0 34
21535: PUSH
21536: LD_INT 2
21538: NEG
21539: PUSH
21540: LD_INT 3
21542: NEG
21543: PUSH
21544: EMPTY
21545: LIST
21546: LIST
21547: PUSH
21548: LD_INT 3
21550: NEG
21551: PUSH
21552: LD_INT 2
21554: NEG
21555: PUSH
21556: EMPTY
21557: LIST
21558: LIST
21559: PUSH
21560: LD_INT 3
21562: NEG
21563: PUSH
21564: LD_INT 3
21566: NEG
21567: PUSH
21568: EMPTY
21569: LIST
21570: LIST
21571: PUSH
21572: LD_INT 3
21574: NEG
21575: PUSH
21576: LD_INT 4
21578: NEG
21579: PUSH
21580: EMPTY
21581: LIST
21582: LIST
21583: PUSH
21584: LD_INT 4
21586: NEG
21587: PUSH
21588: LD_INT 3
21590: NEG
21591: PUSH
21592: EMPTY
21593: LIST
21594: LIST
21595: PUSH
21596: LD_INT 4
21598: NEG
21599: PUSH
21600: LD_INT 4
21602: NEG
21603: PUSH
21604: EMPTY
21605: LIST
21606: LIST
21607: PUSH
21608: LD_INT 4
21610: NEG
21611: PUSH
21612: LD_INT 5
21614: NEG
21615: PUSH
21616: EMPTY
21617: LIST
21618: LIST
21619: PUSH
21620: LD_INT 5
21622: NEG
21623: PUSH
21624: LD_INT 4
21626: NEG
21627: PUSH
21628: EMPTY
21629: LIST
21630: LIST
21631: PUSH
21632: LD_INT 5
21634: NEG
21635: PUSH
21636: LD_INT 5
21638: NEG
21639: PUSH
21640: EMPTY
21641: LIST
21642: LIST
21643: PUSH
21644: LD_INT 5
21646: NEG
21647: PUSH
21648: LD_INT 6
21650: NEG
21651: PUSH
21652: EMPTY
21653: LIST
21654: LIST
21655: PUSH
21656: LD_INT 6
21658: NEG
21659: PUSH
21660: LD_INT 5
21662: NEG
21663: PUSH
21664: EMPTY
21665: LIST
21666: LIST
21667: PUSH
21668: LD_INT 6
21670: NEG
21671: PUSH
21672: LD_INT 6
21674: NEG
21675: PUSH
21676: EMPTY
21677: LIST
21678: LIST
21679: PUSH
21680: EMPTY
21681: LIST
21682: LIST
21683: LIST
21684: LIST
21685: LIST
21686: LIST
21687: LIST
21688: LIST
21689: LIST
21690: LIST
21691: LIST
21692: LIST
21693: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
21694: LD_ADDR_VAR 0 41
21698: PUSH
21699: LD_INT 0
21701: PUSH
21702: LD_INT 2
21704: NEG
21705: PUSH
21706: EMPTY
21707: LIST
21708: LIST
21709: PUSH
21710: LD_INT 1
21712: NEG
21713: PUSH
21714: LD_INT 3
21716: NEG
21717: PUSH
21718: EMPTY
21719: LIST
21720: LIST
21721: PUSH
21722: LD_INT 1
21724: PUSH
21725: LD_INT 2
21727: NEG
21728: PUSH
21729: EMPTY
21730: LIST
21731: LIST
21732: PUSH
21733: EMPTY
21734: LIST
21735: LIST
21736: LIST
21737: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
21738: LD_ADDR_VAR 0 42
21742: PUSH
21743: LD_INT 2
21745: PUSH
21746: LD_INT 0
21748: PUSH
21749: EMPTY
21750: LIST
21751: LIST
21752: PUSH
21753: LD_INT 2
21755: PUSH
21756: LD_INT 1
21758: NEG
21759: PUSH
21760: EMPTY
21761: LIST
21762: LIST
21763: PUSH
21764: LD_INT 3
21766: PUSH
21767: LD_INT 1
21769: PUSH
21770: EMPTY
21771: LIST
21772: LIST
21773: PUSH
21774: EMPTY
21775: LIST
21776: LIST
21777: LIST
21778: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
21779: LD_ADDR_VAR 0 43
21783: PUSH
21784: LD_INT 2
21786: PUSH
21787: LD_INT 2
21789: PUSH
21790: EMPTY
21791: LIST
21792: LIST
21793: PUSH
21794: LD_INT 3
21796: PUSH
21797: LD_INT 2
21799: PUSH
21800: EMPTY
21801: LIST
21802: LIST
21803: PUSH
21804: LD_INT 2
21806: PUSH
21807: LD_INT 3
21809: PUSH
21810: EMPTY
21811: LIST
21812: LIST
21813: PUSH
21814: EMPTY
21815: LIST
21816: LIST
21817: LIST
21818: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
21819: LD_ADDR_VAR 0 44
21823: PUSH
21824: LD_INT 0
21826: PUSH
21827: LD_INT 2
21829: PUSH
21830: EMPTY
21831: LIST
21832: LIST
21833: PUSH
21834: LD_INT 1
21836: PUSH
21837: LD_INT 3
21839: PUSH
21840: EMPTY
21841: LIST
21842: LIST
21843: PUSH
21844: LD_INT 1
21846: NEG
21847: PUSH
21848: LD_INT 2
21850: PUSH
21851: EMPTY
21852: LIST
21853: LIST
21854: PUSH
21855: EMPTY
21856: LIST
21857: LIST
21858: LIST
21859: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
21860: LD_ADDR_VAR 0 45
21864: PUSH
21865: LD_INT 2
21867: NEG
21868: PUSH
21869: LD_INT 0
21871: PUSH
21872: EMPTY
21873: LIST
21874: LIST
21875: PUSH
21876: LD_INT 2
21878: NEG
21879: PUSH
21880: LD_INT 1
21882: PUSH
21883: EMPTY
21884: LIST
21885: LIST
21886: PUSH
21887: LD_INT 3
21889: NEG
21890: PUSH
21891: LD_INT 1
21893: NEG
21894: PUSH
21895: EMPTY
21896: LIST
21897: LIST
21898: PUSH
21899: EMPTY
21900: LIST
21901: LIST
21902: LIST
21903: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
21904: LD_ADDR_VAR 0 46
21908: PUSH
21909: LD_INT 2
21911: NEG
21912: PUSH
21913: LD_INT 2
21915: NEG
21916: PUSH
21917: EMPTY
21918: LIST
21919: LIST
21920: PUSH
21921: LD_INT 2
21923: NEG
21924: PUSH
21925: LD_INT 3
21927: NEG
21928: PUSH
21929: EMPTY
21930: LIST
21931: LIST
21932: PUSH
21933: LD_INT 3
21935: NEG
21936: PUSH
21937: LD_INT 2
21939: NEG
21940: PUSH
21941: EMPTY
21942: LIST
21943: LIST
21944: PUSH
21945: EMPTY
21946: LIST
21947: LIST
21948: LIST
21949: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
21950: LD_ADDR_VAR 0 47
21954: PUSH
21955: LD_INT 2
21957: NEG
21958: PUSH
21959: LD_INT 3
21961: NEG
21962: PUSH
21963: EMPTY
21964: LIST
21965: LIST
21966: PUSH
21967: LD_INT 1
21969: NEG
21970: PUSH
21971: LD_INT 3
21973: NEG
21974: PUSH
21975: EMPTY
21976: LIST
21977: LIST
21978: PUSH
21979: EMPTY
21980: LIST
21981: LIST
21982: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
21983: LD_ADDR_VAR 0 48
21987: PUSH
21988: LD_INT 1
21990: PUSH
21991: LD_INT 2
21993: NEG
21994: PUSH
21995: EMPTY
21996: LIST
21997: LIST
21998: PUSH
21999: LD_INT 2
22001: PUSH
22002: LD_INT 1
22004: NEG
22005: PUSH
22006: EMPTY
22007: LIST
22008: LIST
22009: PUSH
22010: EMPTY
22011: LIST
22012: LIST
22013: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22014: LD_ADDR_VAR 0 49
22018: PUSH
22019: LD_INT 3
22021: PUSH
22022: LD_INT 1
22024: PUSH
22025: EMPTY
22026: LIST
22027: LIST
22028: PUSH
22029: LD_INT 3
22031: PUSH
22032: LD_INT 2
22034: PUSH
22035: EMPTY
22036: LIST
22037: LIST
22038: PUSH
22039: EMPTY
22040: LIST
22041: LIST
22042: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22043: LD_ADDR_VAR 0 50
22047: PUSH
22048: LD_INT 2
22050: PUSH
22051: LD_INT 3
22053: PUSH
22054: EMPTY
22055: LIST
22056: LIST
22057: PUSH
22058: LD_INT 1
22060: PUSH
22061: LD_INT 3
22063: PUSH
22064: EMPTY
22065: LIST
22066: LIST
22067: PUSH
22068: EMPTY
22069: LIST
22070: LIST
22071: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22072: LD_ADDR_VAR 0 51
22076: PUSH
22077: LD_INT 1
22079: NEG
22080: PUSH
22081: LD_INT 2
22083: PUSH
22084: EMPTY
22085: LIST
22086: LIST
22087: PUSH
22088: LD_INT 2
22090: NEG
22091: PUSH
22092: LD_INT 1
22094: PUSH
22095: EMPTY
22096: LIST
22097: LIST
22098: PUSH
22099: EMPTY
22100: LIST
22101: LIST
22102: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22103: LD_ADDR_VAR 0 52
22107: PUSH
22108: LD_INT 3
22110: NEG
22111: PUSH
22112: LD_INT 1
22114: NEG
22115: PUSH
22116: EMPTY
22117: LIST
22118: LIST
22119: PUSH
22120: LD_INT 3
22122: NEG
22123: PUSH
22124: LD_INT 2
22126: NEG
22127: PUSH
22128: EMPTY
22129: LIST
22130: LIST
22131: PUSH
22132: EMPTY
22133: LIST
22134: LIST
22135: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22136: LD_ADDR_VAR 0 53
22140: PUSH
22141: LD_INT 1
22143: NEG
22144: PUSH
22145: LD_INT 3
22147: NEG
22148: PUSH
22149: EMPTY
22150: LIST
22151: LIST
22152: PUSH
22153: LD_INT 0
22155: PUSH
22156: LD_INT 3
22158: NEG
22159: PUSH
22160: EMPTY
22161: LIST
22162: LIST
22163: PUSH
22164: LD_INT 1
22166: PUSH
22167: LD_INT 2
22169: NEG
22170: PUSH
22171: EMPTY
22172: LIST
22173: LIST
22174: PUSH
22175: EMPTY
22176: LIST
22177: LIST
22178: LIST
22179: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22180: LD_ADDR_VAR 0 54
22184: PUSH
22185: LD_INT 2
22187: PUSH
22188: LD_INT 1
22190: NEG
22191: PUSH
22192: EMPTY
22193: LIST
22194: LIST
22195: PUSH
22196: LD_INT 3
22198: PUSH
22199: LD_INT 0
22201: PUSH
22202: EMPTY
22203: LIST
22204: LIST
22205: PUSH
22206: LD_INT 3
22208: PUSH
22209: LD_INT 1
22211: PUSH
22212: EMPTY
22213: LIST
22214: LIST
22215: PUSH
22216: EMPTY
22217: LIST
22218: LIST
22219: LIST
22220: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22221: LD_ADDR_VAR 0 55
22225: PUSH
22226: LD_INT 3
22228: PUSH
22229: LD_INT 2
22231: PUSH
22232: EMPTY
22233: LIST
22234: LIST
22235: PUSH
22236: LD_INT 3
22238: PUSH
22239: LD_INT 3
22241: PUSH
22242: EMPTY
22243: LIST
22244: LIST
22245: PUSH
22246: LD_INT 2
22248: PUSH
22249: LD_INT 3
22251: PUSH
22252: EMPTY
22253: LIST
22254: LIST
22255: PUSH
22256: EMPTY
22257: LIST
22258: LIST
22259: LIST
22260: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22261: LD_ADDR_VAR 0 56
22265: PUSH
22266: LD_INT 1
22268: PUSH
22269: LD_INT 3
22271: PUSH
22272: EMPTY
22273: LIST
22274: LIST
22275: PUSH
22276: LD_INT 0
22278: PUSH
22279: LD_INT 3
22281: PUSH
22282: EMPTY
22283: LIST
22284: LIST
22285: PUSH
22286: LD_INT 1
22288: NEG
22289: PUSH
22290: LD_INT 2
22292: PUSH
22293: EMPTY
22294: LIST
22295: LIST
22296: PUSH
22297: EMPTY
22298: LIST
22299: LIST
22300: LIST
22301: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22302: LD_ADDR_VAR 0 57
22306: PUSH
22307: LD_INT 2
22309: NEG
22310: PUSH
22311: LD_INT 1
22313: PUSH
22314: EMPTY
22315: LIST
22316: LIST
22317: PUSH
22318: LD_INT 3
22320: NEG
22321: PUSH
22322: LD_INT 0
22324: PUSH
22325: EMPTY
22326: LIST
22327: LIST
22328: PUSH
22329: LD_INT 3
22331: NEG
22332: PUSH
22333: LD_INT 1
22335: NEG
22336: PUSH
22337: EMPTY
22338: LIST
22339: LIST
22340: PUSH
22341: EMPTY
22342: LIST
22343: LIST
22344: LIST
22345: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22346: LD_ADDR_VAR 0 58
22350: PUSH
22351: LD_INT 2
22353: NEG
22354: PUSH
22355: LD_INT 3
22357: NEG
22358: PUSH
22359: EMPTY
22360: LIST
22361: LIST
22362: PUSH
22363: LD_INT 3
22365: NEG
22366: PUSH
22367: LD_INT 2
22369: NEG
22370: PUSH
22371: EMPTY
22372: LIST
22373: LIST
22374: PUSH
22375: LD_INT 3
22377: NEG
22378: PUSH
22379: LD_INT 3
22381: NEG
22382: PUSH
22383: EMPTY
22384: LIST
22385: LIST
22386: PUSH
22387: EMPTY
22388: LIST
22389: LIST
22390: LIST
22391: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22392: LD_ADDR_VAR 0 59
22396: PUSH
22397: LD_INT 1
22399: NEG
22400: PUSH
22401: LD_INT 2
22403: NEG
22404: PUSH
22405: EMPTY
22406: LIST
22407: LIST
22408: PUSH
22409: LD_INT 0
22411: PUSH
22412: LD_INT 2
22414: NEG
22415: PUSH
22416: EMPTY
22417: LIST
22418: LIST
22419: PUSH
22420: LD_INT 1
22422: PUSH
22423: LD_INT 1
22425: NEG
22426: PUSH
22427: EMPTY
22428: LIST
22429: LIST
22430: PUSH
22431: EMPTY
22432: LIST
22433: LIST
22434: LIST
22435: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22436: LD_ADDR_VAR 0 60
22440: PUSH
22441: LD_INT 1
22443: PUSH
22444: LD_INT 1
22446: NEG
22447: PUSH
22448: EMPTY
22449: LIST
22450: LIST
22451: PUSH
22452: LD_INT 2
22454: PUSH
22455: LD_INT 0
22457: PUSH
22458: EMPTY
22459: LIST
22460: LIST
22461: PUSH
22462: LD_INT 2
22464: PUSH
22465: LD_INT 1
22467: PUSH
22468: EMPTY
22469: LIST
22470: LIST
22471: PUSH
22472: EMPTY
22473: LIST
22474: LIST
22475: LIST
22476: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22477: LD_ADDR_VAR 0 61
22481: PUSH
22482: LD_INT 2
22484: PUSH
22485: LD_INT 1
22487: PUSH
22488: EMPTY
22489: LIST
22490: LIST
22491: PUSH
22492: LD_INT 2
22494: PUSH
22495: LD_INT 2
22497: PUSH
22498: EMPTY
22499: LIST
22500: LIST
22501: PUSH
22502: LD_INT 1
22504: PUSH
22505: LD_INT 2
22507: PUSH
22508: EMPTY
22509: LIST
22510: LIST
22511: PUSH
22512: EMPTY
22513: LIST
22514: LIST
22515: LIST
22516: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22517: LD_ADDR_VAR 0 62
22521: PUSH
22522: LD_INT 1
22524: PUSH
22525: LD_INT 2
22527: PUSH
22528: EMPTY
22529: LIST
22530: LIST
22531: PUSH
22532: LD_INT 0
22534: PUSH
22535: LD_INT 2
22537: PUSH
22538: EMPTY
22539: LIST
22540: LIST
22541: PUSH
22542: LD_INT 1
22544: NEG
22545: PUSH
22546: LD_INT 1
22548: PUSH
22549: EMPTY
22550: LIST
22551: LIST
22552: PUSH
22553: EMPTY
22554: LIST
22555: LIST
22556: LIST
22557: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22558: LD_ADDR_VAR 0 63
22562: PUSH
22563: LD_INT 1
22565: NEG
22566: PUSH
22567: LD_INT 1
22569: PUSH
22570: EMPTY
22571: LIST
22572: LIST
22573: PUSH
22574: LD_INT 2
22576: NEG
22577: PUSH
22578: LD_INT 0
22580: PUSH
22581: EMPTY
22582: LIST
22583: LIST
22584: PUSH
22585: LD_INT 2
22587: NEG
22588: PUSH
22589: LD_INT 1
22591: NEG
22592: PUSH
22593: EMPTY
22594: LIST
22595: LIST
22596: PUSH
22597: EMPTY
22598: LIST
22599: LIST
22600: LIST
22601: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22602: LD_ADDR_VAR 0 64
22606: PUSH
22607: LD_INT 1
22609: NEG
22610: PUSH
22611: LD_INT 2
22613: NEG
22614: PUSH
22615: EMPTY
22616: LIST
22617: LIST
22618: PUSH
22619: LD_INT 2
22621: NEG
22622: PUSH
22623: LD_INT 1
22625: NEG
22626: PUSH
22627: EMPTY
22628: LIST
22629: LIST
22630: PUSH
22631: LD_INT 2
22633: NEG
22634: PUSH
22635: LD_INT 2
22637: NEG
22638: PUSH
22639: EMPTY
22640: LIST
22641: LIST
22642: PUSH
22643: EMPTY
22644: LIST
22645: LIST
22646: LIST
22647: ST_TO_ADDR
// end ; 2 :
22648: GO 25914
22650: LD_INT 2
22652: DOUBLE
22653: EQUAL
22654: IFTRUE 22658
22656: GO 25913
22658: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
22659: LD_ADDR_VAR 0 29
22663: PUSH
22664: LD_INT 4
22666: PUSH
22667: LD_INT 0
22669: PUSH
22670: EMPTY
22671: LIST
22672: LIST
22673: PUSH
22674: LD_INT 4
22676: PUSH
22677: LD_INT 1
22679: NEG
22680: PUSH
22681: EMPTY
22682: LIST
22683: LIST
22684: PUSH
22685: LD_INT 5
22687: PUSH
22688: LD_INT 0
22690: PUSH
22691: EMPTY
22692: LIST
22693: LIST
22694: PUSH
22695: LD_INT 5
22697: PUSH
22698: LD_INT 1
22700: PUSH
22701: EMPTY
22702: LIST
22703: LIST
22704: PUSH
22705: LD_INT 4
22707: PUSH
22708: LD_INT 1
22710: PUSH
22711: EMPTY
22712: LIST
22713: LIST
22714: PUSH
22715: LD_INT 3
22717: PUSH
22718: LD_INT 0
22720: PUSH
22721: EMPTY
22722: LIST
22723: LIST
22724: PUSH
22725: LD_INT 3
22727: PUSH
22728: LD_INT 1
22730: NEG
22731: PUSH
22732: EMPTY
22733: LIST
22734: LIST
22735: PUSH
22736: LD_INT 3
22738: PUSH
22739: LD_INT 2
22741: NEG
22742: PUSH
22743: EMPTY
22744: LIST
22745: LIST
22746: PUSH
22747: LD_INT 5
22749: PUSH
22750: LD_INT 2
22752: PUSH
22753: EMPTY
22754: LIST
22755: LIST
22756: PUSH
22757: LD_INT 3
22759: PUSH
22760: LD_INT 3
22762: PUSH
22763: EMPTY
22764: LIST
22765: LIST
22766: PUSH
22767: LD_INT 3
22769: PUSH
22770: LD_INT 2
22772: PUSH
22773: EMPTY
22774: LIST
22775: LIST
22776: PUSH
22777: LD_INT 4
22779: PUSH
22780: LD_INT 3
22782: PUSH
22783: EMPTY
22784: LIST
22785: LIST
22786: PUSH
22787: LD_INT 4
22789: PUSH
22790: LD_INT 4
22792: PUSH
22793: EMPTY
22794: LIST
22795: LIST
22796: PUSH
22797: LD_INT 3
22799: PUSH
22800: LD_INT 4
22802: PUSH
22803: EMPTY
22804: LIST
22805: LIST
22806: PUSH
22807: LD_INT 2
22809: PUSH
22810: LD_INT 3
22812: PUSH
22813: EMPTY
22814: LIST
22815: LIST
22816: PUSH
22817: LD_INT 2
22819: PUSH
22820: LD_INT 2
22822: PUSH
22823: EMPTY
22824: LIST
22825: LIST
22826: PUSH
22827: LD_INT 4
22829: PUSH
22830: LD_INT 2
22832: PUSH
22833: EMPTY
22834: LIST
22835: LIST
22836: PUSH
22837: LD_INT 2
22839: PUSH
22840: LD_INT 4
22842: PUSH
22843: EMPTY
22844: LIST
22845: LIST
22846: PUSH
22847: LD_INT 0
22849: PUSH
22850: LD_INT 4
22852: PUSH
22853: EMPTY
22854: LIST
22855: LIST
22856: PUSH
22857: LD_INT 0
22859: PUSH
22860: LD_INT 3
22862: PUSH
22863: EMPTY
22864: LIST
22865: LIST
22866: PUSH
22867: LD_INT 1
22869: PUSH
22870: LD_INT 4
22872: PUSH
22873: EMPTY
22874: LIST
22875: LIST
22876: PUSH
22877: LD_INT 1
22879: PUSH
22880: LD_INT 5
22882: PUSH
22883: EMPTY
22884: LIST
22885: LIST
22886: PUSH
22887: LD_INT 0
22889: PUSH
22890: LD_INT 5
22892: PUSH
22893: EMPTY
22894: LIST
22895: LIST
22896: PUSH
22897: LD_INT 1
22899: NEG
22900: PUSH
22901: LD_INT 4
22903: PUSH
22904: EMPTY
22905: LIST
22906: LIST
22907: PUSH
22908: LD_INT 1
22910: NEG
22911: PUSH
22912: LD_INT 3
22914: PUSH
22915: EMPTY
22916: LIST
22917: LIST
22918: PUSH
22919: LD_INT 2
22921: PUSH
22922: LD_INT 5
22924: PUSH
22925: EMPTY
22926: LIST
22927: LIST
22928: PUSH
22929: LD_INT 2
22931: NEG
22932: PUSH
22933: LD_INT 3
22935: PUSH
22936: EMPTY
22937: LIST
22938: LIST
22939: PUSH
22940: LD_INT 3
22942: NEG
22943: PUSH
22944: LD_INT 0
22946: PUSH
22947: EMPTY
22948: LIST
22949: LIST
22950: PUSH
22951: LD_INT 3
22953: NEG
22954: PUSH
22955: LD_INT 1
22957: NEG
22958: PUSH
22959: EMPTY
22960: LIST
22961: LIST
22962: PUSH
22963: LD_INT 2
22965: NEG
22966: PUSH
22967: LD_INT 0
22969: PUSH
22970: EMPTY
22971: LIST
22972: LIST
22973: PUSH
22974: LD_INT 2
22976: NEG
22977: PUSH
22978: LD_INT 1
22980: PUSH
22981: EMPTY
22982: LIST
22983: LIST
22984: PUSH
22985: LD_INT 3
22987: NEG
22988: PUSH
22989: LD_INT 1
22991: PUSH
22992: EMPTY
22993: LIST
22994: LIST
22995: PUSH
22996: LD_INT 4
22998: NEG
22999: PUSH
23000: LD_INT 0
23002: PUSH
23003: EMPTY
23004: LIST
23005: LIST
23006: PUSH
23007: LD_INT 4
23009: NEG
23010: PUSH
23011: LD_INT 1
23013: NEG
23014: PUSH
23015: EMPTY
23016: LIST
23017: LIST
23018: PUSH
23019: LD_INT 4
23021: NEG
23022: PUSH
23023: LD_INT 2
23025: NEG
23026: PUSH
23027: EMPTY
23028: LIST
23029: LIST
23030: PUSH
23031: LD_INT 2
23033: NEG
23034: PUSH
23035: LD_INT 2
23037: PUSH
23038: EMPTY
23039: LIST
23040: LIST
23041: PUSH
23042: LD_INT 4
23044: NEG
23045: PUSH
23046: LD_INT 4
23048: NEG
23049: PUSH
23050: EMPTY
23051: LIST
23052: LIST
23053: PUSH
23054: LD_INT 4
23056: NEG
23057: PUSH
23058: LD_INT 5
23060: NEG
23061: PUSH
23062: EMPTY
23063: LIST
23064: LIST
23065: PUSH
23066: LD_INT 3
23068: NEG
23069: PUSH
23070: LD_INT 4
23072: NEG
23073: PUSH
23074: EMPTY
23075: LIST
23076: LIST
23077: PUSH
23078: LD_INT 3
23080: NEG
23081: PUSH
23082: LD_INT 3
23084: NEG
23085: PUSH
23086: EMPTY
23087: LIST
23088: LIST
23089: PUSH
23090: LD_INT 4
23092: NEG
23093: PUSH
23094: LD_INT 3
23096: NEG
23097: PUSH
23098: EMPTY
23099: LIST
23100: LIST
23101: PUSH
23102: LD_INT 5
23104: NEG
23105: PUSH
23106: LD_INT 4
23108: NEG
23109: PUSH
23110: EMPTY
23111: LIST
23112: LIST
23113: PUSH
23114: LD_INT 5
23116: NEG
23117: PUSH
23118: LD_INT 5
23120: NEG
23121: PUSH
23122: EMPTY
23123: LIST
23124: LIST
23125: PUSH
23126: LD_INT 3
23128: NEG
23129: PUSH
23130: LD_INT 5
23132: NEG
23133: PUSH
23134: EMPTY
23135: LIST
23136: LIST
23137: PUSH
23138: LD_INT 5
23140: NEG
23141: PUSH
23142: LD_INT 3
23144: NEG
23145: PUSH
23146: EMPTY
23147: LIST
23148: LIST
23149: PUSH
23150: EMPTY
23151: LIST
23152: LIST
23153: LIST
23154: LIST
23155: LIST
23156: LIST
23157: LIST
23158: LIST
23159: LIST
23160: LIST
23161: LIST
23162: LIST
23163: LIST
23164: LIST
23165: LIST
23166: LIST
23167: LIST
23168: LIST
23169: LIST
23170: LIST
23171: LIST
23172: LIST
23173: LIST
23174: LIST
23175: LIST
23176: LIST
23177: LIST
23178: LIST
23179: LIST
23180: LIST
23181: LIST
23182: LIST
23183: LIST
23184: LIST
23185: LIST
23186: LIST
23187: LIST
23188: LIST
23189: LIST
23190: LIST
23191: LIST
23192: LIST
23193: LIST
23194: LIST
23195: LIST
23196: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23197: LD_ADDR_VAR 0 30
23201: PUSH
23202: LD_INT 4
23204: PUSH
23205: LD_INT 4
23207: PUSH
23208: EMPTY
23209: LIST
23210: LIST
23211: PUSH
23212: LD_INT 4
23214: PUSH
23215: LD_INT 3
23217: PUSH
23218: EMPTY
23219: LIST
23220: LIST
23221: PUSH
23222: LD_INT 5
23224: PUSH
23225: LD_INT 4
23227: PUSH
23228: EMPTY
23229: LIST
23230: LIST
23231: PUSH
23232: LD_INT 5
23234: PUSH
23235: LD_INT 5
23237: PUSH
23238: EMPTY
23239: LIST
23240: LIST
23241: PUSH
23242: LD_INT 4
23244: PUSH
23245: LD_INT 5
23247: PUSH
23248: EMPTY
23249: LIST
23250: LIST
23251: PUSH
23252: LD_INT 3
23254: PUSH
23255: LD_INT 4
23257: PUSH
23258: EMPTY
23259: LIST
23260: LIST
23261: PUSH
23262: LD_INT 3
23264: PUSH
23265: LD_INT 3
23267: PUSH
23268: EMPTY
23269: LIST
23270: LIST
23271: PUSH
23272: LD_INT 5
23274: PUSH
23275: LD_INT 3
23277: PUSH
23278: EMPTY
23279: LIST
23280: LIST
23281: PUSH
23282: LD_INT 3
23284: PUSH
23285: LD_INT 5
23287: PUSH
23288: EMPTY
23289: LIST
23290: LIST
23291: PUSH
23292: LD_INT 0
23294: PUSH
23295: LD_INT 3
23297: PUSH
23298: EMPTY
23299: LIST
23300: LIST
23301: PUSH
23302: LD_INT 0
23304: PUSH
23305: LD_INT 2
23307: PUSH
23308: EMPTY
23309: LIST
23310: LIST
23311: PUSH
23312: LD_INT 1
23314: PUSH
23315: LD_INT 3
23317: PUSH
23318: EMPTY
23319: LIST
23320: LIST
23321: PUSH
23322: LD_INT 1
23324: PUSH
23325: LD_INT 4
23327: PUSH
23328: EMPTY
23329: LIST
23330: LIST
23331: PUSH
23332: LD_INT 0
23334: PUSH
23335: LD_INT 4
23337: PUSH
23338: EMPTY
23339: LIST
23340: LIST
23341: PUSH
23342: LD_INT 1
23344: NEG
23345: PUSH
23346: LD_INT 3
23348: PUSH
23349: EMPTY
23350: LIST
23351: LIST
23352: PUSH
23353: LD_INT 1
23355: NEG
23356: PUSH
23357: LD_INT 2
23359: PUSH
23360: EMPTY
23361: LIST
23362: LIST
23363: PUSH
23364: LD_INT 2
23366: PUSH
23367: LD_INT 4
23369: PUSH
23370: EMPTY
23371: LIST
23372: LIST
23373: PUSH
23374: LD_INT 2
23376: NEG
23377: PUSH
23378: LD_INT 2
23380: PUSH
23381: EMPTY
23382: LIST
23383: LIST
23384: PUSH
23385: LD_INT 4
23387: NEG
23388: PUSH
23389: LD_INT 0
23391: PUSH
23392: EMPTY
23393: LIST
23394: LIST
23395: PUSH
23396: LD_INT 4
23398: NEG
23399: PUSH
23400: LD_INT 1
23402: NEG
23403: PUSH
23404: EMPTY
23405: LIST
23406: LIST
23407: PUSH
23408: LD_INT 3
23410: NEG
23411: PUSH
23412: LD_INT 0
23414: PUSH
23415: EMPTY
23416: LIST
23417: LIST
23418: PUSH
23419: LD_INT 3
23421: NEG
23422: PUSH
23423: LD_INT 1
23425: PUSH
23426: EMPTY
23427: LIST
23428: LIST
23429: PUSH
23430: LD_INT 4
23432: NEG
23433: PUSH
23434: LD_INT 1
23436: PUSH
23437: EMPTY
23438: LIST
23439: LIST
23440: PUSH
23441: LD_INT 5
23443: NEG
23444: PUSH
23445: LD_INT 0
23447: PUSH
23448: EMPTY
23449: LIST
23450: LIST
23451: PUSH
23452: LD_INT 5
23454: NEG
23455: PUSH
23456: LD_INT 1
23458: NEG
23459: PUSH
23460: EMPTY
23461: LIST
23462: LIST
23463: PUSH
23464: LD_INT 5
23466: NEG
23467: PUSH
23468: LD_INT 2
23470: NEG
23471: PUSH
23472: EMPTY
23473: LIST
23474: LIST
23475: PUSH
23476: LD_INT 3
23478: NEG
23479: PUSH
23480: LD_INT 2
23482: PUSH
23483: EMPTY
23484: LIST
23485: LIST
23486: PUSH
23487: LD_INT 3
23489: NEG
23490: PUSH
23491: LD_INT 3
23493: NEG
23494: PUSH
23495: EMPTY
23496: LIST
23497: LIST
23498: PUSH
23499: LD_INT 3
23501: NEG
23502: PUSH
23503: LD_INT 4
23505: NEG
23506: PUSH
23507: EMPTY
23508: LIST
23509: LIST
23510: PUSH
23511: LD_INT 2
23513: NEG
23514: PUSH
23515: LD_INT 3
23517: NEG
23518: PUSH
23519: EMPTY
23520: LIST
23521: LIST
23522: PUSH
23523: LD_INT 2
23525: NEG
23526: PUSH
23527: LD_INT 2
23529: NEG
23530: PUSH
23531: EMPTY
23532: LIST
23533: LIST
23534: PUSH
23535: LD_INT 3
23537: NEG
23538: PUSH
23539: LD_INT 2
23541: NEG
23542: PUSH
23543: EMPTY
23544: LIST
23545: LIST
23546: PUSH
23547: LD_INT 4
23549: NEG
23550: PUSH
23551: LD_INT 3
23553: NEG
23554: PUSH
23555: EMPTY
23556: LIST
23557: LIST
23558: PUSH
23559: LD_INT 4
23561: NEG
23562: PUSH
23563: LD_INT 4
23565: NEG
23566: PUSH
23567: EMPTY
23568: LIST
23569: LIST
23570: PUSH
23571: LD_INT 2
23573: NEG
23574: PUSH
23575: LD_INT 4
23577: NEG
23578: PUSH
23579: EMPTY
23580: LIST
23581: LIST
23582: PUSH
23583: LD_INT 4
23585: NEG
23586: PUSH
23587: LD_INT 2
23589: NEG
23590: PUSH
23591: EMPTY
23592: LIST
23593: LIST
23594: PUSH
23595: LD_INT 0
23597: PUSH
23598: LD_INT 4
23600: NEG
23601: PUSH
23602: EMPTY
23603: LIST
23604: LIST
23605: PUSH
23606: LD_INT 0
23608: PUSH
23609: LD_INT 5
23611: NEG
23612: PUSH
23613: EMPTY
23614: LIST
23615: LIST
23616: PUSH
23617: LD_INT 1
23619: PUSH
23620: LD_INT 4
23622: NEG
23623: PUSH
23624: EMPTY
23625: LIST
23626: LIST
23627: PUSH
23628: LD_INT 1
23630: PUSH
23631: LD_INT 3
23633: NEG
23634: PUSH
23635: EMPTY
23636: LIST
23637: LIST
23638: PUSH
23639: LD_INT 0
23641: PUSH
23642: LD_INT 3
23644: NEG
23645: PUSH
23646: EMPTY
23647: LIST
23648: LIST
23649: PUSH
23650: LD_INT 1
23652: NEG
23653: PUSH
23654: LD_INT 4
23656: NEG
23657: PUSH
23658: EMPTY
23659: LIST
23660: LIST
23661: PUSH
23662: LD_INT 1
23664: NEG
23665: PUSH
23666: LD_INT 5
23668: NEG
23669: PUSH
23670: EMPTY
23671: LIST
23672: LIST
23673: PUSH
23674: LD_INT 2
23676: PUSH
23677: LD_INT 3
23679: NEG
23680: PUSH
23681: EMPTY
23682: LIST
23683: LIST
23684: PUSH
23685: LD_INT 2
23687: NEG
23688: PUSH
23689: LD_INT 5
23691: NEG
23692: PUSH
23693: EMPTY
23694: LIST
23695: LIST
23696: PUSH
23697: EMPTY
23698: LIST
23699: LIST
23700: LIST
23701: LIST
23702: LIST
23703: LIST
23704: LIST
23705: LIST
23706: LIST
23707: LIST
23708: LIST
23709: LIST
23710: LIST
23711: LIST
23712: LIST
23713: LIST
23714: LIST
23715: LIST
23716: LIST
23717: LIST
23718: LIST
23719: LIST
23720: LIST
23721: LIST
23722: LIST
23723: LIST
23724: LIST
23725: LIST
23726: LIST
23727: LIST
23728: LIST
23729: LIST
23730: LIST
23731: LIST
23732: LIST
23733: LIST
23734: LIST
23735: LIST
23736: LIST
23737: LIST
23738: LIST
23739: LIST
23740: LIST
23741: LIST
23742: LIST
23743: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
23744: LD_ADDR_VAR 0 31
23748: PUSH
23749: LD_INT 0
23751: PUSH
23752: LD_INT 4
23754: PUSH
23755: EMPTY
23756: LIST
23757: LIST
23758: PUSH
23759: LD_INT 0
23761: PUSH
23762: LD_INT 3
23764: PUSH
23765: EMPTY
23766: LIST
23767: LIST
23768: PUSH
23769: LD_INT 1
23771: PUSH
23772: LD_INT 4
23774: PUSH
23775: EMPTY
23776: LIST
23777: LIST
23778: PUSH
23779: LD_INT 1
23781: PUSH
23782: LD_INT 5
23784: PUSH
23785: EMPTY
23786: LIST
23787: LIST
23788: PUSH
23789: LD_INT 0
23791: PUSH
23792: LD_INT 5
23794: PUSH
23795: EMPTY
23796: LIST
23797: LIST
23798: PUSH
23799: LD_INT 1
23801: NEG
23802: PUSH
23803: LD_INT 4
23805: PUSH
23806: EMPTY
23807: LIST
23808: LIST
23809: PUSH
23810: LD_INT 1
23812: NEG
23813: PUSH
23814: LD_INT 3
23816: PUSH
23817: EMPTY
23818: LIST
23819: LIST
23820: PUSH
23821: LD_INT 2
23823: PUSH
23824: LD_INT 5
23826: PUSH
23827: EMPTY
23828: LIST
23829: LIST
23830: PUSH
23831: LD_INT 2
23833: NEG
23834: PUSH
23835: LD_INT 3
23837: PUSH
23838: EMPTY
23839: LIST
23840: LIST
23841: PUSH
23842: LD_INT 3
23844: NEG
23845: PUSH
23846: LD_INT 0
23848: PUSH
23849: EMPTY
23850: LIST
23851: LIST
23852: PUSH
23853: LD_INT 3
23855: NEG
23856: PUSH
23857: LD_INT 1
23859: NEG
23860: PUSH
23861: EMPTY
23862: LIST
23863: LIST
23864: PUSH
23865: LD_INT 2
23867: NEG
23868: PUSH
23869: LD_INT 0
23871: PUSH
23872: EMPTY
23873: LIST
23874: LIST
23875: PUSH
23876: LD_INT 2
23878: NEG
23879: PUSH
23880: LD_INT 1
23882: PUSH
23883: EMPTY
23884: LIST
23885: LIST
23886: PUSH
23887: LD_INT 3
23889: NEG
23890: PUSH
23891: LD_INT 1
23893: PUSH
23894: EMPTY
23895: LIST
23896: LIST
23897: PUSH
23898: LD_INT 4
23900: NEG
23901: PUSH
23902: LD_INT 0
23904: PUSH
23905: EMPTY
23906: LIST
23907: LIST
23908: PUSH
23909: LD_INT 4
23911: NEG
23912: PUSH
23913: LD_INT 1
23915: NEG
23916: PUSH
23917: EMPTY
23918: LIST
23919: LIST
23920: PUSH
23921: LD_INT 4
23923: NEG
23924: PUSH
23925: LD_INT 2
23927: NEG
23928: PUSH
23929: EMPTY
23930: LIST
23931: LIST
23932: PUSH
23933: LD_INT 2
23935: NEG
23936: PUSH
23937: LD_INT 2
23939: PUSH
23940: EMPTY
23941: LIST
23942: LIST
23943: PUSH
23944: LD_INT 4
23946: NEG
23947: PUSH
23948: LD_INT 4
23950: NEG
23951: PUSH
23952: EMPTY
23953: LIST
23954: LIST
23955: PUSH
23956: LD_INT 4
23958: NEG
23959: PUSH
23960: LD_INT 5
23962: NEG
23963: PUSH
23964: EMPTY
23965: LIST
23966: LIST
23967: PUSH
23968: LD_INT 3
23970: NEG
23971: PUSH
23972: LD_INT 4
23974: NEG
23975: PUSH
23976: EMPTY
23977: LIST
23978: LIST
23979: PUSH
23980: LD_INT 3
23982: NEG
23983: PUSH
23984: LD_INT 3
23986: NEG
23987: PUSH
23988: EMPTY
23989: LIST
23990: LIST
23991: PUSH
23992: LD_INT 4
23994: NEG
23995: PUSH
23996: LD_INT 3
23998: NEG
23999: PUSH
24000: EMPTY
24001: LIST
24002: LIST
24003: PUSH
24004: LD_INT 5
24006: NEG
24007: PUSH
24008: LD_INT 4
24010: NEG
24011: PUSH
24012: EMPTY
24013: LIST
24014: LIST
24015: PUSH
24016: LD_INT 5
24018: NEG
24019: PUSH
24020: LD_INT 5
24022: NEG
24023: PUSH
24024: EMPTY
24025: LIST
24026: LIST
24027: PUSH
24028: LD_INT 3
24030: NEG
24031: PUSH
24032: LD_INT 5
24034: NEG
24035: PUSH
24036: EMPTY
24037: LIST
24038: LIST
24039: PUSH
24040: LD_INT 5
24042: NEG
24043: PUSH
24044: LD_INT 3
24046: NEG
24047: PUSH
24048: EMPTY
24049: LIST
24050: LIST
24051: PUSH
24052: LD_INT 0
24054: PUSH
24055: LD_INT 3
24057: NEG
24058: PUSH
24059: EMPTY
24060: LIST
24061: LIST
24062: PUSH
24063: LD_INT 0
24065: PUSH
24066: LD_INT 4
24068: NEG
24069: PUSH
24070: EMPTY
24071: LIST
24072: LIST
24073: PUSH
24074: LD_INT 1
24076: PUSH
24077: LD_INT 3
24079: NEG
24080: PUSH
24081: EMPTY
24082: LIST
24083: LIST
24084: PUSH
24085: LD_INT 1
24087: PUSH
24088: LD_INT 2
24090: NEG
24091: PUSH
24092: EMPTY
24093: LIST
24094: LIST
24095: PUSH
24096: LD_INT 0
24098: PUSH
24099: LD_INT 2
24101: NEG
24102: PUSH
24103: EMPTY
24104: LIST
24105: LIST
24106: PUSH
24107: LD_INT 1
24109: NEG
24110: PUSH
24111: LD_INT 3
24113: NEG
24114: PUSH
24115: EMPTY
24116: LIST
24117: LIST
24118: PUSH
24119: LD_INT 1
24121: NEG
24122: PUSH
24123: LD_INT 4
24125: NEG
24126: PUSH
24127: EMPTY
24128: LIST
24129: LIST
24130: PUSH
24131: LD_INT 2
24133: PUSH
24134: LD_INT 2
24136: NEG
24137: PUSH
24138: EMPTY
24139: LIST
24140: LIST
24141: PUSH
24142: LD_INT 2
24144: NEG
24145: PUSH
24146: LD_INT 4
24148: NEG
24149: PUSH
24150: EMPTY
24151: LIST
24152: LIST
24153: PUSH
24154: LD_INT 4
24156: PUSH
24157: LD_INT 0
24159: PUSH
24160: EMPTY
24161: LIST
24162: LIST
24163: PUSH
24164: LD_INT 4
24166: PUSH
24167: LD_INT 1
24169: NEG
24170: PUSH
24171: EMPTY
24172: LIST
24173: LIST
24174: PUSH
24175: LD_INT 5
24177: PUSH
24178: LD_INT 0
24180: PUSH
24181: EMPTY
24182: LIST
24183: LIST
24184: PUSH
24185: LD_INT 5
24187: PUSH
24188: LD_INT 1
24190: PUSH
24191: EMPTY
24192: LIST
24193: LIST
24194: PUSH
24195: LD_INT 4
24197: PUSH
24198: LD_INT 1
24200: PUSH
24201: EMPTY
24202: LIST
24203: LIST
24204: PUSH
24205: LD_INT 3
24207: PUSH
24208: LD_INT 0
24210: PUSH
24211: EMPTY
24212: LIST
24213: LIST
24214: PUSH
24215: LD_INT 3
24217: PUSH
24218: LD_INT 1
24220: NEG
24221: PUSH
24222: EMPTY
24223: LIST
24224: LIST
24225: PUSH
24226: LD_INT 3
24228: PUSH
24229: LD_INT 2
24231: NEG
24232: PUSH
24233: EMPTY
24234: LIST
24235: LIST
24236: PUSH
24237: LD_INT 5
24239: PUSH
24240: LD_INT 2
24242: PUSH
24243: EMPTY
24244: LIST
24245: LIST
24246: PUSH
24247: EMPTY
24248: LIST
24249: LIST
24250: LIST
24251: LIST
24252: LIST
24253: LIST
24254: LIST
24255: LIST
24256: LIST
24257: LIST
24258: LIST
24259: LIST
24260: LIST
24261: LIST
24262: LIST
24263: LIST
24264: LIST
24265: LIST
24266: LIST
24267: LIST
24268: LIST
24269: LIST
24270: LIST
24271: LIST
24272: LIST
24273: LIST
24274: LIST
24275: LIST
24276: LIST
24277: LIST
24278: LIST
24279: LIST
24280: LIST
24281: LIST
24282: LIST
24283: LIST
24284: LIST
24285: LIST
24286: LIST
24287: LIST
24288: LIST
24289: LIST
24290: LIST
24291: LIST
24292: LIST
24293: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24294: LD_ADDR_VAR 0 32
24298: PUSH
24299: LD_INT 4
24301: NEG
24302: PUSH
24303: LD_INT 0
24305: PUSH
24306: EMPTY
24307: LIST
24308: LIST
24309: PUSH
24310: LD_INT 4
24312: NEG
24313: PUSH
24314: LD_INT 1
24316: NEG
24317: PUSH
24318: EMPTY
24319: LIST
24320: LIST
24321: PUSH
24322: LD_INT 3
24324: NEG
24325: PUSH
24326: LD_INT 0
24328: PUSH
24329: EMPTY
24330: LIST
24331: LIST
24332: PUSH
24333: LD_INT 3
24335: NEG
24336: PUSH
24337: LD_INT 1
24339: PUSH
24340: EMPTY
24341: LIST
24342: LIST
24343: PUSH
24344: LD_INT 4
24346: NEG
24347: PUSH
24348: LD_INT 1
24350: PUSH
24351: EMPTY
24352: LIST
24353: LIST
24354: PUSH
24355: LD_INT 5
24357: NEG
24358: PUSH
24359: LD_INT 0
24361: PUSH
24362: EMPTY
24363: LIST
24364: LIST
24365: PUSH
24366: LD_INT 5
24368: NEG
24369: PUSH
24370: LD_INT 1
24372: NEG
24373: PUSH
24374: EMPTY
24375: LIST
24376: LIST
24377: PUSH
24378: LD_INT 5
24380: NEG
24381: PUSH
24382: LD_INT 2
24384: NEG
24385: PUSH
24386: EMPTY
24387: LIST
24388: LIST
24389: PUSH
24390: LD_INT 3
24392: NEG
24393: PUSH
24394: LD_INT 2
24396: PUSH
24397: EMPTY
24398: LIST
24399: LIST
24400: PUSH
24401: LD_INT 3
24403: NEG
24404: PUSH
24405: LD_INT 3
24407: NEG
24408: PUSH
24409: EMPTY
24410: LIST
24411: LIST
24412: PUSH
24413: LD_INT 3
24415: NEG
24416: PUSH
24417: LD_INT 4
24419: NEG
24420: PUSH
24421: EMPTY
24422: LIST
24423: LIST
24424: PUSH
24425: LD_INT 2
24427: NEG
24428: PUSH
24429: LD_INT 3
24431: NEG
24432: PUSH
24433: EMPTY
24434: LIST
24435: LIST
24436: PUSH
24437: LD_INT 2
24439: NEG
24440: PUSH
24441: LD_INT 2
24443: NEG
24444: PUSH
24445: EMPTY
24446: LIST
24447: LIST
24448: PUSH
24449: LD_INT 3
24451: NEG
24452: PUSH
24453: LD_INT 2
24455: NEG
24456: PUSH
24457: EMPTY
24458: LIST
24459: LIST
24460: PUSH
24461: LD_INT 4
24463: NEG
24464: PUSH
24465: LD_INT 3
24467: NEG
24468: PUSH
24469: EMPTY
24470: LIST
24471: LIST
24472: PUSH
24473: LD_INT 4
24475: NEG
24476: PUSH
24477: LD_INT 4
24479: NEG
24480: PUSH
24481: EMPTY
24482: LIST
24483: LIST
24484: PUSH
24485: LD_INT 2
24487: NEG
24488: PUSH
24489: LD_INT 4
24491: NEG
24492: PUSH
24493: EMPTY
24494: LIST
24495: LIST
24496: PUSH
24497: LD_INT 4
24499: NEG
24500: PUSH
24501: LD_INT 2
24503: NEG
24504: PUSH
24505: EMPTY
24506: LIST
24507: LIST
24508: PUSH
24509: LD_INT 0
24511: PUSH
24512: LD_INT 4
24514: NEG
24515: PUSH
24516: EMPTY
24517: LIST
24518: LIST
24519: PUSH
24520: LD_INT 0
24522: PUSH
24523: LD_INT 5
24525: NEG
24526: PUSH
24527: EMPTY
24528: LIST
24529: LIST
24530: PUSH
24531: LD_INT 1
24533: PUSH
24534: LD_INT 4
24536: NEG
24537: PUSH
24538: EMPTY
24539: LIST
24540: LIST
24541: PUSH
24542: LD_INT 1
24544: PUSH
24545: LD_INT 3
24547: NEG
24548: PUSH
24549: EMPTY
24550: LIST
24551: LIST
24552: PUSH
24553: LD_INT 0
24555: PUSH
24556: LD_INT 3
24558: NEG
24559: PUSH
24560: EMPTY
24561: LIST
24562: LIST
24563: PUSH
24564: LD_INT 1
24566: NEG
24567: PUSH
24568: LD_INT 4
24570: NEG
24571: PUSH
24572: EMPTY
24573: LIST
24574: LIST
24575: PUSH
24576: LD_INT 1
24578: NEG
24579: PUSH
24580: LD_INT 5
24582: NEG
24583: PUSH
24584: EMPTY
24585: LIST
24586: LIST
24587: PUSH
24588: LD_INT 2
24590: PUSH
24591: LD_INT 3
24593: NEG
24594: PUSH
24595: EMPTY
24596: LIST
24597: LIST
24598: PUSH
24599: LD_INT 2
24601: NEG
24602: PUSH
24603: LD_INT 5
24605: NEG
24606: PUSH
24607: EMPTY
24608: LIST
24609: LIST
24610: PUSH
24611: LD_INT 3
24613: PUSH
24614: LD_INT 0
24616: PUSH
24617: EMPTY
24618: LIST
24619: LIST
24620: PUSH
24621: LD_INT 3
24623: PUSH
24624: LD_INT 1
24626: NEG
24627: PUSH
24628: EMPTY
24629: LIST
24630: LIST
24631: PUSH
24632: LD_INT 4
24634: PUSH
24635: LD_INT 0
24637: PUSH
24638: EMPTY
24639: LIST
24640: LIST
24641: PUSH
24642: LD_INT 4
24644: PUSH
24645: LD_INT 1
24647: PUSH
24648: EMPTY
24649: LIST
24650: LIST
24651: PUSH
24652: LD_INT 3
24654: PUSH
24655: LD_INT 1
24657: PUSH
24658: EMPTY
24659: LIST
24660: LIST
24661: PUSH
24662: LD_INT 2
24664: PUSH
24665: LD_INT 0
24667: PUSH
24668: EMPTY
24669: LIST
24670: LIST
24671: PUSH
24672: LD_INT 2
24674: PUSH
24675: LD_INT 1
24677: NEG
24678: PUSH
24679: EMPTY
24680: LIST
24681: LIST
24682: PUSH
24683: LD_INT 2
24685: PUSH
24686: LD_INT 2
24688: NEG
24689: PUSH
24690: EMPTY
24691: LIST
24692: LIST
24693: PUSH
24694: LD_INT 4
24696: PUSH
24697: LD_INT 2
24699: PUSH
24700: EMPTY
24701: LIST
24702: LIST
24703: PUSH
24704: LD_INT 4
24706: PUSH
24707: LD_INT 4
24709: PUSH
24710: EMPTY
24711: LIST
24712: LIST
24713: PUSH
24714: LD_INT 4
24716: PUSH
24717: LD_INT 3
24719: PUSH
24720: EMPTY
24721: LIST
24722: LIST
24723: PUSH
24724: LD_INT 5
24726: PUSH
24727: LD_INT 4
24729: PUSH
24730: EMPTY
24731: LIST
24732: LIST
24733: PUSH
24734: LD_INT 5
24736: PUSH
24737: LD_INT 5
24739: PUSH
24740: EMPTY
24741: LIST
24742: LIST
24743: PUSH
24744: LD_INT 4
24746: PUSH
24747: LD_INT 5
24749: PUSH
24750: EMPTY
24751: LIST
24752: LIST
24753: PUSH
24754: LD_INT 3
24756: PUSH
24757: LD_INT 4
24759: PUSH
24760: EMPTY
24761: LIST
24762: LIST
24763: PUSH
24764: LD_INT 3
24766: PUSH
24767: LD_INT 3
24769: PUSH
24770: EMPTY
24771: LIST
24772: LIST
24773: PUSH
24774: LD_INT 5
24776: PUSH
24777: LD_INT 3
24779: PUSH
24780: EMPTY
24781: LIST
24782: LIST
24783: PUSH
24784: LD_INT 3
24786: PUSH
24787: LD_INT 5
24789: PUSH
24790: EMPTY
24791: LIST
24792: LIST
24793: PUSH
24794: EMPTY
24795: LIST
24796: LIST
24797: LIST
24798: LIST
24799: LIST
24800: LIST
24801: LIST
24802: LIST
24803: LIST
24804: LIST
24805: LIST
24806: LIST
24807: LIST
24808: LIST
24809: LIST
24810: LIST
24811: LIST
24812: LIST
24813: LIST
24814: LIST
24815: LIST
24816: LIST
24817: LIST
24818: LIST
24819: LIST
24820: LIST
24821: LIST
24822: LIST
24823: LIST
24824: LIST
24825: LIST
24826: LIST
24827: LIST
24828: LIST
24829: LIST
24830: LIST
24831: LIST
24832: LIST
24833: LIST
24834: LIST
24835: LIST
24836: LIST
24837: LIST
24838: LIST
24839: LIST
24840: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
24841: LD_ADDR_VAR 0 33
24845: PUSH
24846: LD_INT 4
24848: NEG
24849: PUSH
24850: LD_INT 4
24852: NEG
24853: PUSH
24854: EMPTY
24855: LIST
24856: LIST
24857: PUSH
24858: LD_INT 4
24860: NEG
24861: PUSH
24862: LD_INT 5
24864: NEG
24865: PUSH
24866: EMPTY
24867: LIST
24868: LIST
24869: PUSH
24870: LD_INT 3
24872: NEG
24873: PUSH
24874: LD_INT 4
24876: NEG
24877: PUSH
24878: EMPTY
24879: LIST
24880: LIST
24881: PUSH
24882: LD_INT 3
24884: NEG
24885: PUSH
24886: LD_INT 3
24888: NEG
24889: PUSH
24890: EMPTY
24891: LIST
24892: LIST
24893: PUSH
24894: LD_INT 4
24896: NEG
24897: PUSH
24898: LD_INT 3
24900: NEG
24901: PUSH
24902: EMPTY
24903: LIST
24904: LIST
24905: PUSH
24906: LD_INT 5
24908: NEG
24909: PUSH
24910: LD_INT 4
24912: NEG
24913: PUSH
24914: EMPTY
24915: LIST
24916: LIST
24917: PUSH
24918: LD_INT 5
24920: NEG
24921: PUSH
24922: LD_INT 5
24924: NEG
24925: PUSH
24926: EMPTY
24927: LIST
24928: LIST
24929: PUSH
24930: LD_INT 3
24932: NEG
24933: PUSH
24934: LD_INT 5
24936: NEG
24937: PUSH
24938: EMPTY
24939: LIST
24940: LIST
24941: PUSH
24942: LD_INT 5
24944: NEG
24945: PUSH
24946: LD_INT 3
24948: NEG
24949: PUSH
24950: EMPTY
24951: LIST
24952: LIST
24953: PUSH
24954: LD_INT 0
24956: PUSH
24957: LD_INT 3
24959: NEG
24960: PUSH
24961: EMPTY
24962: LIST
24963: LIST
24964: PUSH
24965: LD_INT 0
24967: PUSH
24968: LD_INT 4
24970: NEG
24971: PUSH
24972: EMPTY
24973: LIST
24974: LIST
24975: PUSH
24976: LD_INT 1
24978: PUSH
24979: LD_INT 3
24981: NEG
24982: PUSH
24983: EMPTY
24984: LIST
24985: LIST
24986: PUSH
24987: LD_INT 1
24989: PUSH
24990: LD_INT 2
24992: NEG
24993: PUSH
24994: EMPTY
24995: LIST
24996: LIST
24997: PUSH
24998: LD_INT 0
25000: PUSH
25001: LD_INT 2
25003: NEG
25004: PUSH
25005: EMPTY
25006: LIST
25007: LIST
25008: PUSH
25009: LD_INT 1
25011: NEG
25012: PUSH
25013: LD_INT 3
25015: NEG
25016: PUSH
25017: EMPTY
25018: LIST
25019: LIST
25020: PUSH
25021: LD_INT 1
25023: NEG
25024: PUSH
25025: LD_INT 4
25027: NEG
25028: PUSH
25029: EMPTY
25030: LIST
25031: LIST
25032: PUSH
25033: LD_INT 2
25035: PUSH
25036: LD_INT 2
25038: NEG
25039: PUSH
25040: EMPTY
25041: LIST
25042: LIST
25043: PUSH
25044: LD_INT 2
25046: NEG
25047: PUSH
25048: LD_INT 4
25050: NEG
25051: PUSH
25052: EMPTY
25053: LIST
25054: LIST
25055: PUSH
25056: LD_INT 4
25058: PUSH
25059: LD_INT 0
25061: PUSH
25062: EMPTY
25063: LIST
25064: LIST
25065: PUSH
25066: LD_INT 4
25068: PUSH
25069: LD_INT 1
25071: NEG
25072: PUSH
25073: EMPTY
25074: LIST
25075: LIST
25076: PUSH
25077: LD_INT 5
25079: PUSH
25080: LD_INT 0
25082: PUSH
25083: EMPTY
25084: LIST
25085: LIST
25086: PUSH
25087: LD_INT 5
25089: PUSH
25090: LD_INT 1
25092: PUSH
25093: EMPTY
25094: LIST
25095: LIST
25096: PUSH
25097: LD_INT 4
25099: PUSH
25100: LD_INT 1
25102: PUSH
25103: EMPTY
25104: LIST
25105: LIST
25106: PUSH
25107: LD_INT 3
25109: PUSH
25110: LD_INT 0
25112: PUSH
25113: EMPTY
25114: LIST
25115: LIST
25116: PUSH
25117: LD_INT 3
25119: PUSH
25120: LD_INT 1
25122: NEG
25123: PUSH
25124: EMPTY
25125: LIST
25126: LIST
25127: PUSH
25128: LD_INT 3
25130: PUSH
25131: LD_INT 2
25133: NEG
25134: PUSH
25135: EMPTY
25136: LIST
25137: LIST
25138: PUSH
25139: LD_INT 5
25141: PUSH
25142: LD_INT 2
25144: PUSH
25145: EMPTY
25146: LIST
25147: LIST
25148: PUSH
25149: LD_INT 3
25151: PUSH
25152: LD_INT 3
25154: PUSH
25155: EMPTY
25156: LIST
25157: LIST
25158: PUSH
25159: LD_INT 3
25161: PUSH
25162: LD_INT 2
25164: PUSH
25165: EMPTY
25166: LIST
25167: LIST
25168: PUSH
25169: LD_INT 4
25171: PUSH
25172: LD_INT 3
25174: PUSH
25175: EMPTY
25176: LIST
25177: LIST
25178: PUSH
25179: LD_INT 4
25181: PUSH
25182: LD_INT 4
25184: PUSH
25185: EMPTY
25186: LIST
25187: LIST
25188: PUSH
25189: LD_INT 3
25191: PUSH
25192: LD_INT 4
25194: PUSH
25195: EMPTY
25196: LIST
25197: LIST
25198: PUSH
25199: LD_INT 2
25201: PUSH
25202: LD_INT 3
25204: PUSH
25205: EMPTY
25206: LIST
25207: LIST
25208: PUSH
25209: LD_INT 2
25211: PUSH
25212: LD_INT 2
25214: PUSH
25215: EMPTY
25216: LIST
25217: LIST
25218: PUSH
25219: LD_INT 4
25221: PUSH
25222: LD_INT 2
25224: PUSH
25225: EMPTY
25226: LIST
25227: LIST
25228: PUSH
25229: LD_INT 2
25231: PUSH
25232: LD_INT 4
25234: PUSH
25235: EMPTY
25236: LIST
25237: LIST
25238: PUSH
25239: LD_INT 0
25241: PUSH
25242: LD_INT 4
25244: PUSH
25245: EMPTY
25246: LIST
25247: LIST
25248: PUSH
25249: LD_INT 0
25251: PUSH
25252: LD_INT 3
25254: PUSH
25255: EMPTY
25256: LIST
25257: LIST
25258: PUSH
25259: LD_INT 1
25261: PUSH
25262: LD_INT 4
25264: PUSH
25265: EMPTY
25266: LIST
25267: LIST
25268: PUSH
25269: LD_INT 1
25271: PUSH
25272: LD_INT 5
25274: PUSH
25275: EMPTY
25276: LIST
25277: LIST
25278: PUSH
25279: LD_INT 0
25281: PUSH
25282: LD_INT 5
25284: PUSH
25285: EMPTY
25286: LIST
25287: LIST
25288: PUSH
25289: LD_INT 1
25291: NEG
25292: PUSH
25293: LD_INT 4
25295: PUSH
25296: EMPTY
25297: LIST
25298: LIST
25299: PUSH
25300: LD_INT 1
25302: NEG
25303: PUSH
25304: LD_INT 3
25306: PUSH
25307: EMPTY
25308: LIST
25309: LIST
25310: PUSH
25311: LD_INT 2
25313: PUSH
25314: LD_INT 5
25316: PUSH
25317: EMPTY
25318: LIST
25319: LIST
25320: PUSH
25321: LD_INT 2
25323: NEG
25324: PUSH
25325: LD_INT 3
25327: PUSH
25328: EMPTY
25329: LIST
25330: LIST
25331: PUSH
25332: EMPTY
25333: LIST
25334: LIST
25335: LIST
25336: LIST
25337: LIST
25338: LIST
25339: LIST
25340: LIST
25341: LIST
25342: LIST
25343: LIST
25344: LIST
25345: LIST
25346: LIST
25347: LIST
25348: LIST
25349: LIST
25350: LIST
25351: LIST
25352: LIST
25353: LIST
25354: LIST
25355: LIST
25356: LIST
25357: LIST
25358: LIST
25359: LIST
25360: LIST
25361: LIST
25362: LIST
25363: LIST
25364: LIST
25365: LIST
25366: LIST
25367: LIST
25368: LIST
25369: LIST
25370: LIST
25371: LIST
25372: LIST
25373: LIST
25374: LIST
25375: LIST
25376: LIST
25377: LIST
25378: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25379: LD_ADDR_VAR 0 34
25383: PUSH
25384: LD_INT 0
25386: PUSH
25387: LD_INT 4
25389: NEG
25390: PUSH
25391: EMPTY
25392: LIST
25393: LIST
25394: PUSH
25395: LD_INT 0
25397: PUSH
25398: LD_INT 5
25400: NEG
25401: PUSH
25402: EMPTY
25403: LIST
25404: LIST
25405: PUSH
25406: LD_INT 1
25408: PUSH
25409: LD_INT 4
25411: NEG
25412: PUSH
25413: EMPTY
25414: LIST
25415: LIST
25416: PUSH
25417: LD_INT 1
25419: PUSH
25420: LD_INT 3
25422: NEG
25423: PUSH
25424: EMPTY
25425: LIST
25426: LIST
25427: PUSH
25428: LD_INT 0
25430: PUSH
25431: LD_INT 3
25433: NEG
25434: PUSH
25435: EMPTY
25436: LIST
25437: LIST
25438: PUSH
25439: LD_INT 1
25441: NEG
25442: PUSH
25443: LD_INT 4
25445: NEG
25446: PUSH
25447: EMPTY
25448: LIST
25449: LIST
25450: PUSH
25451: LD_INT 1
25453: NEG
25454: PUSH
25455: LD_INT 5
25457: NEG
25458: PUSH
25459: EMPTY
25460: LIST
25461: LIST
25462: PUSH
25463: LD_INT 2
25465: PUSH
25466: LD_INT 3
25468: NEG
25469: PUSH
25470: EMPTY
25471: LIST
25472: LIST
25473: PUSH
25474: LD_INT 2
25476: NEG
25477: PUSH
25478: LD_INT 5
25480: NEG
25481: PUSH
25482: EMPTY
25483: LIST
25484: LIST
25485: PUSH
25486: LD_INT 3
25488: PUSH
25489: LD_INT 0
25491: PUSH
25492: EMPTY
25493: LIST
25494: LIST
25495: PUSH
25496: LD_INT 3
25498: PUSH
25499: LD_INT 1
25501: NEG
25502: PUSH
25503: EMPTY
25504: LIST
25505: LIST
25506: PUSH
25507: LD_INT 4
25509: PUSH
25510: LD_INT 0
25512: PUSH
25513: EMPTY
25514: LIST
25515: LIST
25516: PUSH
25517: LD_INT 4
25519: PUSH
25520: LD_INT 1
25522: PUSH
25523: EMPTY
25524: LIST
25525: LIST
25526: PUSH
25527: LD_INT 3
25529: PUSH
25530: LD_INT 1
25532: PUSH
25533: EMPTY
25534: LIST
25535: LIST
25536: PUSH
25537: LD_INT 2
25539: PUSH
25540: LD_INT 0
25542: PUSH
25543: EMPTY
25544: LIST
25545: LIST
25546: PUSH
25547: LD_INT 2
25549: PUSH
25550: LD_INT 1
25552: NEG
25553: PUSH
25554: EMPTY
25555: LIST
25556: LIST
25557: PUSH
25558: LD_INT 2
25560: PUSH
25561: LD_INT 2
25563: NEG
25564: PUSH
25565: EMPTY
25566: LIST
25567: LIST
25568: PUSH
25569: LD_INT 4
25571: PUSH
25572: LD_INT 2
25574: PUSH
25575: EMPTY
25576: LIST
25577: LIST
25578: PUSH
25579: LD_INT 4
25581: PUSH
25582: LD_INT 4
25584: PUSH
25585: EMPTY
25586: LIST
25587: LIST
25588: PUSH
25589: LD_INT 4
25591: PUSH
25592: LD_INT 3
25594: PUSH
25595: EMPTY
25596: LIST
25597: LIST
25598: PUSH
25599: LD_INT 5
25601: PUSH
25602: LD_INT 4
25604: PUSH
25605: EMPTY
25606: LIST
25607: LIST
25608: PUSH
25609: LD_INT 5
25611: PUSH
25612: LD_INT 5
25614: PUSH
25615: EMPTY
25616: LIST
25617: LIST
25618: PUSH
25619: LD_INT 4
25621: PUSH
25622: LD_INT 5
25624: PUSH
25625: EMPTY
25626: LIST
25627: LIST
25628: PUSH
25629: LD_INT 3
25631: PUSH
25632: LD_INT 4
25634: PUSH
25635: EMPTY
25636: LIST
25637: LIST
25638: PUSH
25639: LD_INT 3
25641: PUSH
25642: LD_INT 3
25644: PUSH
25645: EMPTY
25646: LIST
25647: LIST
25648: PUSH
25649: LD_INT 5
25651: PUSH
25652: LD_INT 3
25654: PUSH
25655: EMPTY
25656: LIST
25657: LIST
25658: PUSH
25659: LD_INT 3
25661: PUSH
25662: LD_INT 5
25664: PUSH
25665: EMPTY
25666: LIST
25667: LIST
25668: PUSH
25669: LD_INT 0
25671: PUSH
25672: LD_INT 3
25674: PUSH
25675: EMPTY
25676: LIST
25677: LIST
25678: PUSH
25679: LD_INT 0
25681: PUSH
25682: LD_INT 2
25684: PUSH
25685: EMPTY
25686: LIST
25687: LIST
25688: PUSH
25689: LD_INT 1
25691: PUSH
25692: LD_INT 3
25694: PUSH
25695: EMPTY
25696: LIST
25697: LIST
25698: PUSH
25699: LD_INT 1
25701: PUSH
25702: LD_INT 4
25704: PUSH
25705: EMPTY
25706: LIST
25707: LIST
25708: PUSH
25709: LD_INT 0
25711: PUSH
25712: LD_INT 4
25714: PUSH
25715: EMPTY
25716: LIST
25717: LIST
25718: PUSH
25719: LD_INT 1
25721: NEG
25722: PUSH
25723: LD_INT 3
25725: PUSH
25726: EMPTY
25727: LIST
25728: LIST
25729: PUSH
25730: LD_INT 1
25732: NEG
25733: PUSH
25734: LD_INT 2
25736: PUSH
25737: EMPTY
25738: LIST
25739: LIST
25740: PUSH
25741: LD_INT 2
25743: PUSH
25744: LD_INT 4
25746: PUSH
25747: EMPTY
25748: LIST
25749: LIST
25750: PUSH
25751: LD_INT 2
25753: NEG
25754: PUSH
25755: LD_INT 2
25757: PUSH
25758: EMPTY
25759: LIST
25760: LIST
25761: PUSH
25762: LD_INT 4
25764: NEG
25765: PUSH
25766: LD_INT 0
25768: PUSH
25769: EMPTY
25770: LIST
25771: LIST
25772: PUSH
25773: LD_INT 4
25775: NEG
25776: PUSH
25777: LD_INT 1
25779: NEG
25780: PUSH
25781: EMPTY
25782: LIST
25783: LIST
25784: PUSH
25785: LD_INT 3
25787: NEG
25788: PUSH
25789: LD_INT 0
25791: PUSH
25792: EMPTY
25793: LIST
25794: LIST
25795: PUSH
25796: LD_INT 3
25798: NEG
25799: PUSH
25800: LD_INT 1
25802: PUSH
25803: EMPTY
25804: LIST
25805: LIST
25806: PUSH
25807: LD_INT 4
25809: NEG
25810: PUSH
25811: LD_INT 1
25813: PUSH
25814: EMPTY
25815: LIST
25816: LIST
25817: PUSH
25818: LD_INT 5
25820: NEG
25821: PUSH
25822: LD_INT 0
25824: PUSH
25825: EMPTY
25826: LIST
25827: LIST
25828: PUSH
25829: LD_INT 5
25831: NEG
25832: PUSH
25833: LD_INT 1
25835: NEG
25836: PUSH
25837: EMPTY
25838: LIST
25839: LIST
25840: PUSH
25841: LD_INT 5
25843: NEG
25844: PUSH
25845: LD_INT 2
25847: NEG
25848: PUSH
25849: EMPTY
25850: LIST
25851: LIST
25852: PUSH
25853: LD_INT 3
25855: NEG
25856: PUSH
25857: LD_INT 2
25859: PUSH
25860: EMPTY
25861: LIST
25862: LIST
25863: PUSH
25864: EMPTY
25865: LIST
25866: LIST
25867: LIST
25868: LIST
25869: LIST
25870: LIST
25871: LIST
25872: LIST
25873: LIST
25874: LIST
25875: LIST
25876: LIST
25877: LIST
25878: LIST
25879: LIST
25880: LIST
25881: LIST
25882: LIST
25883: LIST
25884: LIST
25885: LIST
25886: LIST
25887: LIST
25888: LIST
25889: LIST
25890: LIST
25891: LIST
25892: LIST
25893: LIST
25894: LIST
25895: LIST
25896: LIST
25897: LIST
25898: LIST
25899: LIST
25900: LIST
25901: LIST
25902: LIST
25903: LIST
25904: LIST
25905: LIST
25906: LIST
25907: LIST
25908: LIST
25909: LIST
25910: ST_TO_ADDR
// end ; end ;
25911: GO 25914
25913: POP
// case btype of b_depot , b_warehouse :
25914: LD_VAR 0 1
25918: PUSH
25919: LD_INT 0
25921: DOUBLE
25922: EQUAL
25923: IFTRUE 25933
25925: LD_INT 1
25927: DOUBLE
25928: EQUAL
25929: IFTRUE 25933
25931: GO 26134
25933: POP
// case nation of nation_american :
25934: LD_VAR 0 5
25938: PUSH
25939: LD_INT 1
25941: DOUBLE
25942: EQUAL
25943: IFTRUE 25947
25945: GO 26003
25947: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
25948: LD_ADDR_VAR 0 9
25952: PUSH
25953: LD_VAR 0 11
25957: PUSH
25958: LD_VAR 0 12
25962: PUSH
25963: LD_VAR 0 13
25967: PUSH
25968: LD_VAR 0 14
25972: PUSH
25973: LD_VAR 0 15
25977: PUSH
25978: LD_VAR 0 16
25982: PUSH
25983: EMPTY
25984: LIST
25985: LIST
25986: LIST
25987: LIST
25988: LIST
25989: LIST
25990: PUSH
25991: LD_VAR 0 4
25995: PUSH
25996: LD_INT 1
25998: PLUS
25999: ARRAY
26000: ST_TO_ADDR
26001: GO 26132
26003: LD_INT 2
26005: DOUBLE
26006: EQUAL
26007: IFTRUE 26011
26009: GO 26067
26011: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26012: LD_ADDR_VAR 0 9
26016: PUSH
26017: LD_VAR 0 17
26021: PUSH
26022: LD_VAR 0 18
26026: PUSH
26027: LD_VAR 0 19
26031: PUSH
26032: LD_VAR 0 20
26036: PUSH
26037: LD_VAR 0 21
26041: PUSH
26042: LD_VAR 0 22
26046: PUSH
26047: EMPTY
26048: LIST
26049: LIST
26050: LIST
26051: LIST
26052: LIST
26053: LIST
26054: PUSH
26055: LD_VAR 0 4
26059: PUSH
26060: LD_INT 1
26062: PLUS
26063: ARRAY
26064: ST_TO_ADDR
26065: GO 26132
26067: LD_INT 3
26069: DOUBLE
26070: EQUAL
26071: IFTRUE 26075
26073: GO 26131
26075: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26076: LD_ADDR_VAR 0 9
26080: PUSH
26081: LD_VAR 0 23
26085: PUSH
26086: LD_VAR 0 24
26090: PUSH
26091: LD_VAR 0 25
26095: PUSH
26096: LD_VAR 0 26
26100: PUSH
26101: LD_VAR 0 27
26105: PUSH
26106: LD_VAR 0 28
26110: PUSH
26111: EMPTY
26112: LIST
26113: LIST
26114: LIST
26115: LIST
26116: LIST
26117: LIST
26118: PUSH
26119: LD_VAR 0 4
26123: PUSH
26124: LD_INT 1
26126: PLUS
26127: ARRAY
26128: ST_TO_ADDR
26129: GO 26132
26131: POP
26132: GO 26681
26134: LD_INT 2
26136: DOUBLE
26137: EQUAL
26138: IFTRUE 26148
26140: LD_INT 3
26142: DOUBLE
26143: EQUAL
26144: IFTRUE 26148
26146: GO 26204
26148: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26149: LD_ADDR_VAR 0 9
26153: PUSH
26154: LD_VAR 0 29
26158: PUSH
26159: LD_VAR 0 30
26163: PUSH
26164: LD_VAR 0 31
26168: PUSH
26169: LD_VAR 0 32
26173: PUSH
26174: LD_VAR 0 33
26178: PUSH
26179: LD_VAR 0 34
26183: PUSH
26184: EMPTY
26185: LIST
26186: LIST
26187: LIST
26188: LIST
26189: LIST
26190: LIST
26191: PUSH
26192: LD_VAR 0 4
26196: PUSH
26197: LD_INT 1
26199: PLUS
26200: ARRAY
26201: ST_TO_ADDR
26202: GO 26681
26204: LD_INT 16
26206: DOUBLE
26207: EQUAL
26208: IFTRUE 26260
26210: LD_INT 17
26212: DOUBLE
26213: EQUAL
26214: IFTRUE 26260
26216: LD_INT 18
26218: DOUBLE
26219: EQUAL
26220: IFTRUE 26260
26222: LD_INT 19
26224: DOUBLE
26225: EQUAL
26226: IFTRUE 26260
26228: LD_INT 20
26230: DOUBLE
26231: EQUAL
26232: IFTRUE 26260
26234: LD_INT 21
26236: DOUBLE
26237: EQUAL
26238: IFTRUE 26260
26240: LD_INT 23
26242: DOUBLE
26243: EQUAL
26244: IFTRUE 26260
26246: LD_INT 24
26248: DOUBLE
26249: EQUAL
26250: IFTRUE 26260
26252: LD_INT 25
26254: DOUBLE
26255: EQUAL
26256: IFTRUE 26260
26258: GO 26316
26260: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26261: LD_ADDR_VAR 0 9
26265: PUSH
26266: LD_VAR 0 35
26270: PUSH
26271: LD_VAR 0 36
26275: PUSH
26276: LD_VAR 0 37
26280: PUSH
26281: LD_VAR 0 38
26285: PUSH
26286: LD_VAR 0 39
26290: PUSH
26291: LD_VAR 0 40
26295: PUSH
26296: EMPTY
26297: LIST
26298: LIST
26299: LIST
26300: LIST
26301: LIST
26302: LIST
26303: PUSH
26304: LD_VAR 0 4
26308: PUSH
26309: LD_INT 1
26311: PLUS
26312: ARRAY
26313: ST_TO_ADDR
26314: GO 26681
26316: LD_INT 6
26318: DOUBLE
26319: EQUAL
26320: IFTRUE 26372
26322: LD_INT 7
26324: DOUBLE
26325: EQUAL
26326: IFTRUE 26372
26328: LD_INT 8
26330: DOUBLE
26331: EQUAL
26332: IFTRUE 26372
26334: LD_INT 13
26336: DOUBLE
26337: EQUAL
26338: IFTRUE 26372
26340: LD_INT 12
26342: DOUBLE
26343: EQUAL
26344: IFTRUE 26372
26346: LD_INT 15
26348: DOUBLE
26349: EQUAL
26350: IFTRUE 26372
26352: LD_INT 11
26354: DOUBLE
26355: EQUAL
26356: IFTRUE 26372
26358: LD_INT 14
26360: DOUBLE
26361: EQUAL
26362: IFTRUE 26372
26364: LD_INT 10
26366: DOUBLE
26367: EQUAL
26368: IFTRUE 26372
26370: GO 26428
26372: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26373: LD_ADDR_VAR 0 9
26377: PUSH
26378: LD_VAR 0 41
26382: PUSH
26383: LD_VAR 0 42
26387: PUSH
26388: LD_VAR 0 43
26392: PUSH
26393: LD_VAR 0 44
26397: PUSH
26398: LD_VAR 0 45
26402: PUSH
26403: LD_VAR 0 46
26407: PUSH
26408: EMPTY
26409: LIST
26410: LIST
26411: LIST
26412: LIST
26413: LIST
26414: LIST
26415: PUSH
26416: LD_VAR 0 4
26420: PUSH
26421: LD_INT 1
26423: PLUS
26424: ARRAY
26425: ST_TO_ADDR
26426: GO 26681
26428: LD_INT 36
26430: DOUBLE
26431: EQUAL
26432: IFTRUE 26436
26434: GO 26492
26436: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26437: LD_ADDR_VAR 0 9
26441: PUSH
26442: LD_VAR 0 47
26446: PUSH
26447: LD_VAR 0 48
26451: PUSH
26452: LD_VAR 0 49
26456: PUSH
26457: LD_VAR 0 50
26461: PUSH
26462: LD_VAR 0 51
26466: PUSH
26467: LD_VAR 0 52
26471: PUSH
26472: EMPTY
26473: LIST
26474: LIST
26475: LIST
26476: LIST
26477: LIST
26478: LIST
26479: PUSH
26480: LD_VAR 0 4
26484: PUSH
26485: LD_INT 1
26487: PLUS
26488: ARRAY
26489: ST_TO_ADDR
26490: GO 26681
26492: LD_INT 4
26494: DOUBLE
26495: EQUAL
26496: IFTRUE 26518
26498: LD_INT 5
26500: DOUBLE
26501: EQUAL
26502: IFTRUE 26518
26504: LD_INT 34
26506: DOUBLE
26507: EQUAL
26508: IFTRUE 26518
26510: LD_INT 37
26512: DOUBLE
26513: EQUAL
26514: IFTRUE 26518
26516: GO 26574
26518: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26519: LD_ADDR_VAR 0 9
26523: PUSH
26524: LD_VAR 0 53
26528: PUSH
26529: LD_VAR 0 54
26533: PUSH
26534: LD_VAR 0 55
26538: PUSH
26539: LD_VAR 0 56
26543: PUSH
26544: LD_VAR 0 57
26548: PUSH
26549: LD_VAR 0 58
26553: PUSH
26554: EMPTY
26555: LIST
26556: LIST
26557: LIST
26558: LIST
26559: LIST
26560: LIST
26561: PUSH
26562: LD_VAR 0 4
26566: PUSH
26567: LD_INT 1
26569: PLUS
26570: ARRAY
26571: ST_TO_ADDR
26572: GO 26681
26574: LD_INT 31
26576: DOUBLE
26577: EQUAL
26578: IFTRUE 26624
26580: LD_INT 32
26582: DOUBLE
26583: EQUAL
26584: IFTRUE 26624
26586: LD_INT 33
26588: DOUBLE
26589: EQUAL
26590: IFTRUE 26624
26592: LD_INT 27
26594: DOUBLE
26595: EQUAL
26596: IFTRUE 26624
26598: LD_INT 26
26600: DOUBLE
26601: EQUAL
26602: IFTRUE 26624
26604: LD_INT 28
26606: DOUBLE
26607: EQUAL
26608: IFTRUE 26624
26610: LD_INT 29
26612: DOUBLE
26613: EQUAL
26614: IFTRUE 26624
26616: LD_INT 30
26618: DOUBLE
26619: EQUAL
26620: IFTRUE 26624
26622: GO 26680
26624: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26625: LD_ADDR_VAR 0 9
26629: PUSH
26630: LD_VAR 0 59
26634: PUSH
26635: LD_VAR 0 60
26639: PUSH
26640: LD_VAR 0 61
26644: PUSH
26645: LD_VAR 0 62
26649: PUSH
26650: LD_VAR 0 63
26654: PUSH
26655: LD_VAR 0 64
26659: PUSH
26660: EMPTY
26661: LIST
26662: LIST
26663: LIST
26664: LIST
26665: LIST
26666: LIST
26667: PUSH
26668: LD_VAR 0 4
26672: PUSH
26673: LD_INT 1
26675: PLUS
26676: ARRAY
26677: ST_TO_ADDR
26678: GO 26681
26680: POP
// temp_list2 = [ ] ;
26681: LD_ADDR_VAR 0 10
26685: PUSH
26686: EMPTY
26687: ST_TO_ADDR
// for i in temp_list do
26688: LD_ADDR_VAR 0 8
26692: PUSH
26693: LD_VAR 0 9
26697: PUSH
26698: FOR_IN
26699: IFFALSE 26751
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
26701: LD_ADDR_VAR 0 10
26705: PUSH
26706: LD_VAR 0 10
26710: PUSH
26711: LD_VAR 0 8
26715: PUSH
26716: LD_INT 1
26718: ARRAY
26719: PUSH
26720: LD_VAR 0 2
26724: PLUS
26725: PUSH
26726: LD_VAR 0 8
26730: PUSH
26731: LD_INT 2
26733: ARRAY
26734: PUSH
26735: LD_VAR 0 3
26739: PLUS
26740: PUSH
26741: EMPTY
26742: LIST
26743: LIST
26744: PUSH
26745: EMPTY
26746: LIST
26747: ADD
26748: ST_TO_ADDR
26749: GO 26698
26751: POP
26752: POP
// result = temp_list2 ;
26753: LD_ADDR_VAR 0 7
26757: PUSH
26758: LD_VAR 0 10
26762: ST_TO_ADDR
// end ;
26763: LD_VAR 0 7
26767: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
26768: LD_INT 0
26770: PPUSH
26771: PPUSH
26772: PPUSH
// result := false ;
26773: LD_ADDR_VAR 0 4
26777: PUSH
26778: LD_INT 0
26780: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
26781: LD_VAR 0 1
26785: NOT
26786: PUSH
26787: LD_VAR 0 2
26791: NOT
26792: OR
26793: PUSH
26794: LD_VAR 0 1
26798: PPUSH
26799: CALL_OW 310
26803: OR
26804: IFFALSE 26808
// exit ;
26806: GO 27012
// if distance < 0 then
26808: LD_VAR 0 3
26812: PUSH
26813: LD_INT 0
26815: LESS
26816: IFFALSE 26826
// distance := 0 ;
26818: LD_ADDR_VAR 0 3
26822: PUSH
26823: LD_INT 0
26825: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
26826: LD_ADDR_VAR 0 6
26830: PUSH
26831: LD_VAR 0 2
26835: PPUSH
26836: CALL_OW 266
26840: PPUSH
26841: LD_VAR 0 2
26845: PPUSH
26846: CALL_OW 250
26850: PPUSH
26851: LD_VAR 0 2
26855: PPUSH
26856: CALL_OW 251
26860: PPUSH
26861: LD_VAR 0 2
26865: PPUSH
26866: CALL_OW 254
26870: PPUSH
26871: LD_VAR 0 2
26875: PPUSH
26876: CALL_OW 248
26880: PPUSH
26881: LD_INT 1
26883: PPUSH
26884: CALL 8229 0 6
26888: ST_TO_ADDR
// if not entrance then
26889: LD_VAR 0 6
26893: NOT
26894: IFFALSE 26898
// exit ;
26896: GO 27012
// for i in entrance do
26898: LD_ADDR_VAR 0 5
26902: PUSH
26903: LD_VAR 0 6
26907: PUSH
26908: FOR_IN
26909: IFFALSE 27010
// begin if not distance then
26911: LD_VAR 0 3
26915: NOT
26916: IFFALSE 26961
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
26918: LD_VAR 0 1
26922: PPUSH
26923: LD_VAR 0 5
26927: PUSH
26928: LD_INT 1
26930: ARRAY
26931: PPUSH
26932: LD_VAR 0 5
26936: PUSH
26937: LD_INT 2
26939: ARRAY
26940: PPUSH
26941: CALL_OW 307
26945: IFFALSE 26959
// begin result := true ;
26947: LD_ADDR_VAR 0 4
26951: PUSH
26952: LD_INT 1
26954: ST_TO_ADDR
// exit ;
26955: POP
26956: POP
26957: GO 27012
// end ; end else
26959: GO 27008
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
26961: LD_VAR 0 1
26965: PPUSH
26966: LD_VAR 0 5
26970: PUSH
26971: LD_INT 1
26973: ARRAY
26974: PPUSH
26975: LD_VAR 0 5
26979: PUSH
26980: LD_INT 2
26982: ARRAY
26983: PPUSH
26984: CALL_OW 297
26988: PUSH
26989: LD_VAR 0 3
26993: LESSEQUAL
26994: IFFALSE 27008
// begin result := true ;
26996: LD_ADDR_VAR 0 4
27000: PUSH
27001: LD_INT 1
27003: ST_TO_ADDR
// exit ;
27004: POP
27005: POP
27006: GO 27012
// end ; end ; end ;
27008: GO 26908
27010: POP
27011: POP
// end ;
27012: LD_VAR 0 4
27016: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27017: LD_INT 0
27019: PPUSH
27020: PPUSH
27021: PPUSH
// result := false ;
27022: LD_ADDR_VAR 0 3
27026: PUSH
27027: LD_INT 0
27029: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27030: LD_VAR 0 1
27034: NOT
27035: PUSH
27036: LD_VAR 0 2
27040: NOT
27041: OR
27042: PUSH
27043: LD_VAR 0 1
27047: PPUSH
27048: CALL_OW 302
27052: NOT
27053: OR
27054: PUSH
27055: LD_VAR 0 2
27059: PPUSH
27060: CALL_OW 302
27064: NOT
27065: OR
27066: IFFALSE 27070
// exit ;
27068: GO 27231
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27070: LD_VAR 0 1
27074: PPUSH
27075: LD_INT 81
27077: PUSH
27078: LD_VAR 0 1
27082: PPUSH
27083: CALL_OW 255
27087: PUSH
27088: EMPTY
27089: LIST
27090: LIST
27091: PUSH
27092: LD_INT 3
27094: PUSH
27095: LD_INT 21
27097: PUSH
27098: LD_INT 3
27100: PUSH
27101: EMPTY
27102: LIST
27103: LIST
27104: PUSH
27105: EMPTY
27106: LIST
27107: LIST
27108: PUSH
27109: EMPTY
27110: LIST
27111: LIST
27112: PPUSH
27113: CALL_OW 69
27117: PPUSH
27118: LD_VAR 0 1
27122: PPUSH
27123: CALL_OW 74
27127: PPUSH
27128: CALL_OW 296
27132: PUSH
27133: LD_INT 8
27135: LESS
27136: IFFALSE 27140
// exit ;
27138: GO 27231
// building := IsInUnit ( unit2 ) ;
27140: LD_ADDR_VAR 0 5
27144: PUSH
27145: LD_VAR 0 2
27149: PPUSH
27150: CALL_OW 310
27154: ST_TO_ADDR
// if building then
27155: LD_VAR 0 5
27159: IFFALSE 27186
// result := IsNearbyEntrance ( unit , building , 2 ) else
27161: LD_ADDR_VAR 0 3
27165: PUSH
27166: LD_VAR 0 1
27170: PPUSH
27171: LD_VAR 0 5
27175: PPUSH
27176: LD_INT 2
27178: PPUSH
27179: CALL 26768 0 3
27183: ST_TO_ADDR
27184: GO 27231
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27186: LD_ADDR_VAR 0 3
27190: PUSH
27191: LD_VAR 0 1
27195: PPUSH
27196: LD_VAR 0 2
27200: PPUSH
27201: CALL_OW 296
27205: PUSH
27206: LD_INT 6
27208: LESS
27209: PUSH
27210: LD_VAR 0 2
27214: PPUSH
27215: CALL_OW 255
27219: PPUSH
27220: LD_VAR 0 1
27224: PPUSH
27225: CALL_OW 292
27229: AND
27230: ST_TO_ADDR
// end ;
27231: LD_VAR 0 3
27235: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27236: LD_INT 0
27238: PPUSH
27239: PPUSH
27240: PPUSH
27241: PPUSH
// tmp := [ ] ;
27242: LD_ADDR_VAR 0 3
27246: PUSH
27247: EMPTY
27248: ST_TO_ADDR
// list := [ ] ;
27249: LD_ADDR_VAR 0 5
27253: PUSH
27254: EMPTY
27255: ST_TO_ADDR
// for i = 16 to 25 do
27256: LD_ADDR_VAR 0 4
27260: PUSH
27261: DOUBLE
27262: LD_INT 16
27264: DEC
27265: ST_TO_ADDR
27266: LD_INT 25
27268: PUSH
27269: FOR_TO
27270: IFFALSE 27343
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27272: LD_ADDR_VAR 0 3
27276: PUSH
27277: LD_VAR 0 3
27281: PUSH
27282: LD_INT 22
27284: PUSH
27285: LD_VAR 0 1
27289: PPUSH
27290: CALL_OW 255
27294: PUSH
27295: EMPTY
27296: LIST
27297: LIST
27298: PUSH
27299: LD_INT 91
27301: PUSH
27302: LD_VAR 0 1
27306: PUSH
27307: LD_INT 6
27309: PUSH
27310: EMPTY
27311: LIST
27312: LIST
27313: LIST
27314: PUSH
27315: LD_INT 30
27317: PUSH
27318: LD_VAR 0 4
27322: PUSH
27323: EMPTY
27324: LIST
27325: LIST
27326: PUSH
27327: EMPTY
27328: LIST
27329: LIST
27330: LIST
27331: PUSH
27332: EMPTY
27333: LIST
27334: PPUSH
27335: CALL_OW 69
27339: ADD
27340: ST_TO_ADDR
27341: GO 27269
27343: POP
27344: POP
// for i = 1 to tmp do
27345: LD_ADDR_VAR 0 4
27349: PUSH
27350: DOUBLE
27351: LD_INT 1
27353: DEC
27354: ST_TO_ADDR
27355: LD_VAR 0 3
27359: PUSH
27360: FOR_TO
27361: IFFALSE 27449
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27363: LD_ADDR_VAR 0 5
27367: PUSH
27368: LD_VAR 0 5
27372: PUSH
27373: LD_VAR 0 3
27377: PUSH
27378: LD_VAR 0 4
27382: ARRAY
27383: PPUSH
27384: CALL_OW 266
27388: PUSH
27389: LD_VAR 0 3
27393: PUSH
27394: LD_VAR 0 4
27398: ARRAY
27399: PPUSH
27400: CALL_OW 250
27404: PUSH
27405: LD_VAR 0 3
27409: PUSH
27410: LD_VAR 0 4
27414: ARRAY
27415: PPUSH
27416: CALL_OW 251
27420: PUSH
27421: LD_VAR 0 3
27425: PUSH
27426: LD_VAR 0 4
27430: ARRAY
27431: PPUSH
27432: CALL_OW 254
27436: PUSH
27437: EMPTY
27438: LIST
27439: LIST
27440: LIST
27441: LIST
27442: PUSH
27443: EMPTY
27444: LIST
27445: ADD
27446: ST_TO_ADDR
27447: GO 27360
27449: POP
27450: POP
// result := list ;
27451: LD_ADDR_VAR 0 2
27455: PUSH
27456: LD_VAR 0 5
27460: ST_TO_ADDR
// end ;
27461: LD_VAR 0 2
27465: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27466: LD_INT 0
27468: PPUSH
27469: PPUSH
27470: PPUSH
27471: PPUSH
27472: PPUSH
27473: PPUSH
27474: PPUSH
// if not factory then
27475: LD_VAR 0 1
27479: NOT
27480: IFFALSE 27484
// exit ;
27482: GO 28009
// if control = control_apeman then
27484: LD_VAR 0 4
27488: PUSH
27489: LD_INT 5
27491: EQUAL
27492: IFFALSE 27601
// begin tmp := UnitsInside ( factory ) ;
27494: LD_ADDR_VAR 0 8
27498: PUSH
27499: LD_VAR 0 1
27503: PPUSH
27504: CALL_OW 313
27508: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27509: LD_VAR 0 8
27513: PPUSH
27514: LD_INT 25
27516: PUSH
27517: LD_INT 12
27519: PUSH
27520: EMPTY
27521: LIST
27522: LIST
27523: PPUSH
27524: CALL_OW 72
27528: NOT
27529: IFFALSE 27539
// control := control_manual ;
27531: LD_ADDR_VAR 0 4
27535: PUSH
27536: LD_INT 1
27538: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27539: LD_ADDR_VAR 0 8
27543: PUSH
27544: LD_VAR 0 1
27548: PPUSH
27549: CALL 27236 0 1
27553: ST_TO_ADDR
// if tmp then
27554: LD_VAR 0 8
27558: IFFALSE 27601
// begin for i in tmp do
27560: LD_ADDR_VAR 0 7
27564: PUSH
27565: LD_VAR 0 8
27569: PUSH
27570: FOR_IN
27571: IFFALSE 27599
// if i [ 1 ] = b_ext_radar then
27573: LD_VAR 0 7
27577: PUSH
27578: LD_INT 1
27580: ARRAY
27581: PUSH
27582: LD_INT 20
27584: EQUAL
27585: IFFALSE 27597
// begin control := control_remote ;
27587: LD_ADDR_VAR 0 4
27591: PUSH
27592: LD_INT 2
27594: ST_TO_ADDR
// break ;
27595: GO 27599
// end ;
27597: GO 27570
27599: POP
27600: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27601: LD_VAR 0 1
27605: PPUSH
27606: LD_VAR 0 2
27610: PPUSH
27611: LD_VAR 0 3
27615: PPUSH
27616: LD_VAR 0 4
27620: PPUSH
27621: LD_VAR 0 5
27625: PPUSH
27626: CALL_OW 448
27630: IFFALSE 27665
// begin result := [ chassis , engine , control , weapon ] ;
27632: LD_ADDR_VAR 0 6
27636: PUSH
27637: LD_VAR 0 2
27641: PUSH
27642: LD_VAR 0 3
27646: PUSH
27647: LD_VAR 0 4
27651: PUSH
27652: LD_VAR 0 5
27656: PUSH
27657: EMPTY
27658: LIST
27659: LIST
27660: LIST
27661: LIST
27662: ST_TO_ADDR
// exit ;
27663: GO 28009
// end ; _chassis := AvailableChassisList ( factory ) ;
27665: LD_ADDR_VAR 0 9
27669: PUSH
27670: LD_VAR 0 1
27674: PPUSH
27675: CALL_OW 475
27679: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
27680: LD_ADDR_VAR 0 11
27684: PUSH
27685: LD_VAR 0 1
27689: PPUSH
27690: CALL_OW 476
27694: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
27695: LD_ADDR_VAR 0 12
27699: PUSH
27700: LD_VAR 0 1
27704: PPUSH
27705: CALL_OW 477
27709: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
27710: LD_ADDR_VAR 0 10
27714: PUSH
27715: LD_VAR 0 1
27719: PPUSH
27720: CALL_OW 478
27724: ST_TO_ADDR
// if not chassis in _chassis then
27725: LD_VAR 0 2
27729: PUSH
27730: LD_VAR 0 9
27734: IN
27735: NOT
27736: IFFALSE 27762
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
27738: LD_ADDR_VAR 0 2
27742: PUSH
27743: LD_VAR 0 9
27747: PUSH
27748: LD_INT 1
27750: PPUSH
27751: LD_VAR 0 9
27755: PPUSH
27756: CALL_OW 12
27760: ARRAY
27761: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
27762: LD_VAR 0 2
27766: PPUSH
27767: LD_VAR 0 3
27771: PPUSH
27772: CALL 28014 0 2
27776: NOT
27777: IFFALSE 27836
// repeat engine := _engine [ 1 ] ;
27779: LD_ADDR_VAR 0 3
27783: PUSH
27784: LD_VAR 0 11
27788: PUSH
27789: LD_INT 1
27791: ARRAY
27792: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
27793: LD_ADDR_VAR 0 11
27797: PUSH
27798: LD_VAR 0 11
27802: PPUSH
27803: LD_INT 1
27805: PPUSH
27806: CALL_OW 3
27810: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
27811: LD_VAR 0 2
27815: PPUSH
27816: LD_VAR 0 3
27820: PPUSH
27821: CALL 28014 0 2
27825: PUSH
27826: LD_VAR 0 11
27830: PUSH
27831: EMPTY
27832: EQUAL
27833: OR
27834: IFFALSE 27779
// if not control in _control then
27836: LD_VAR 0 4
27840: PUSH
27841: LD_VAR 0 12
27845: IN
27846: NOT
27847: IFFALSE 27873
// control := _control [ rand ( 1 , _control ) ] ;
27849: LD_ADDR_VAR 0 4
27853: PUSH
27854: LD_VAR 0 12
27858: PUSH
27859: LD_INT 1
27861: PPUSH
27862: LD_VAR 0 12
27866: PPUSH
27867: CALL_OW 12
27871: ARRAY
27872: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
27873: LD_VAR 0 2
27877: PPUSH
27878: LD_VAR 0 5
27882: PPUSH
27883: CALL 28234 0 2
27887: NOT
27888: IFFALSE 27947
// repeat weapon := _weapon [ 1 ] ;
27890: LD_ADDR_VAR 0 5
27894: PUSH
27895: LD_VAR 0 10
27899: PUSH
27900: LD_INT 1
27902: ARRAY
27903: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
27904: LD_ADDR_VAR 0 10
27908: PUSH
27909: LD_VAR 0 10
27913: PPUSH
27914: LD_INT 1
27916: PPUSH
27917: CALL_OW 3
27921: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
27922: LD_VAR 0 2
27926: PPUSH
27927: LD_VAR 0 5
27931: PPUSH
27932: CALL 28234 0 2
27936: PUSH
27937: LD_VAR 0 10
27941: PUSH
27942: EMPTY
27943: EQUAL
27944: OR
27945: IFFALSE 27890
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27947: LD_VAR 0 1
27951: PPUSH
27952: LD_VAR 0 2
27956: PPUSH
27957: LD_VAR 0 3
27961: PPUSH
27962: LD_VAR 0 4
27966: PPUSH
27967: LD_VAR 0 5
27971: PPUSH
27972: CALL_OW 448
27976: IFFALSE 28009
// result := [ chassis , engine , control , weapon ] ;
27978: LD_ADDR_VAR 0 6
27982: PUSH
27983: LD_VAR 0 2
27987: PUSH
27988: LD_VAR 0 3
27992: PUSH
27993: LD_VAR 0 4
27997: PUSH
27998: LD_VAR 0 5
28002: PUSH
28003: EMPTY
28004: LIST
28005: LIST
28006: LIST
28007: LIST
28008: ST_TO_ADDR
// end ;
28009: LD_VAR 0 6
28013: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28014: LD_INT 0
28016: PPUSH
// if not chassis or not engine then
28017: LD_VAR 0 1
28021: NOT
28022: PUSH
28023: LD_VAR 0 2
28027: NOT
28028: OR
28029: IFFALSE 28033
// exit ;
28031: GO 28229
// case engine of engine_solar :
28033: LD_VAR 0 2
28037: PUSH
28038: LD_INT 2
28040: DOUBLE
28041: EQUAL
28042: IFTRUE 28046
28044: GO 28084
28046: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28047: LD_ADDR_VAR 0 3
28051: PUSH
28052: LD_INT 11
28054: PUSH
28055: LD_INT 12
28057: PUSH
28058: LD_INT 13
28060: PUSH
28061: LD_INT 14
28063: PUSH
28064: LD_INT 1
28066: PUSH
28067: LD_INT 2
28069: PUSH
28070: LD_INT 3
28072: PUSH
28073: EMPTY
28074: LIST
28075: LIST
28076: LIST
28077: LIST
28078: LIST
28079: LIST
28080: LIST
28081: ST_TO_ADDR
28082: GO 28213
28084: LD_INT 1
28086: DOUBLE
28087: EQUAL
28088: IFTRUE 28092
28090: GO 28154
28092: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28093: LD_ADDR_VAR 0 3
28097: PUSH
28098: LD_INT 11
28100: PUSH
28101: LD_INT 12
28103: PUSH
28104: LD_INT 13
28106: PUSH
28107: LD_INT 14
28109: PUSH
28110: LD_INT 1
28112: PUSH
28113: LD_INT 2
28115: PUSH
28116: LD_INT 3
28118: PUSH
28119: LD_INT 4
28121: PUSH
28122: LD_INT 5
28124: PUSH
28125: LD_INT 21
28127: PUSH
28128: LD_INT 23
28130: PUSH
28131: LD_INT 22
28133: PUSH
28134: LD_INT 24
28136: PUSH
28137: EMPTY
28138: LIST
28139: LIST
28140: LIST
28141: LIST
28142: LIST
28143: LIST
28144: LIST
28145: LIST
28146: LIST
28147: LIST
28148: LIST
28149: LIST
28150: LIST
28151: ST_TO_ADDR
28152: GO 28213
28154: LD_INT 3
28156: DOUBLE
28157: EQUAL
28158: IFTRUE 28162
28160: GO 28212
28162: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28163: LD_ADDR_VAR 0 3
28167: PUSH
28168: LD_INT 13
28170: PUSH
28171: LD_INT 14
28173: PUSH
28174: LD_INT 2
28176: PUSH
28177: LD_INT 3
28179: PUSH
28180: LD_INT 4
28182: PUSH
28183: LD_INT 5
28185: PUSH
28186: LD_INT 21
28188: PUSH
28189: LD_INT 22
28191: PUSH
28192: LD_INT 23
28194: PUSH
28195: LD_INT 24
28197: PUSH
28198: EMPTY
28199: LIST
28200: LIST
28201: LIST
28202: LIST
28203: LIST
28204: LIST
28205: LIST
28206: LIST
28207: LIST
28208: LIST
28209: ST_TO_ADDR
28210: GO 28213
28212: POP
// result := ( chassis in result ) ;
28213: LD_ADDR_VAR 0 3
28217: PUSH
28218: LD_VAR 0 1
28222: PUSH
28223: LD_VAR 0 3
28227: IN
28228: ST_TO_ADDR
// end ;
28229: LD_VAR 0 3
28233: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28234: LD_INT 0
28236: PPUSH
// if not chassis or not weapon then
28237: LD_VAR 0 1
28241: NOT
28242: PUSH
28243: LD_VAR 0 2
28247: NOT
28248: OR
28249: IFFALSE 28253
// exit ;
28251: GO 29279
// case weapon of us_machine_gun :
28253: LD_VAR 0 2
28257: PUSH
28258: LD_INT 2
28260: DOUBLE
28261: EQUAL
28262: IFTRUE 28266
28264: GO 28296
28266: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28267: LD_ADDR_VAR 0 3
28271: PUSH
28272: LD_INT 1
28274: PUSH
28275: LD_INT 2
28277: PUSH
28278: LD_INT 3
28280: PUSH
28281: LD_INT 4
28283: PUSH
28284: LD_INT 5
28286: PUSH
28287: EMPTY
28288: LIST
28289: LIST
28290: LIST
28291: LIST
28292: LIST
28293: ST_TO_ADDR
28294: GO 29263
28296: LD_INT 3
28298: DOUBLE
28299: EQUAL
28300: IFTRUE 28304
28302: GO 28334
28304: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28305: LD_ADDR_VAR 0 3
28309: PUSH
28310: LD_INT 1
28312: PUSH
28313: LD_INT 2
28315: PUSH
28316: LD_INT 3
28318: PUSH
28319: LD_INT 4
28321: PUSH
28322: LD_INT 5
28324: PUSH
28325: EMPTY
28326: LIST
28327: LIST
28328: LIST
28329: LIST
28330: LIST
28331: ST_TO_ADDR
28332: GO 29263
28334: LD_INT 11
28336: DOUBLE
28337: EQUAL
28338: IFTRUE 28342
28340: GO 28372
28342: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28343: LD_ADDR_VAR 0 3
28347: PUSH
28348: LD_INT 1
28350: PUSH
28351: LD_INT 2
28353: PUSH
28354: LD_INT 3
28356: PUSH
28357: LD_INT 4
28359: PUSH
28360: LD_INT 5
28362: PUSH
28363: EMPTY
28364: LIST
28365: LIST
28366: LIST
28367: LIST
28368: LIST
28369: ST_TO_ADDR
28370: GO 29263
28372: LD_INT 4
28374: DOUBLE
28375: EQUAL
28376: IFTRUE 28380
28378: GO 28406
28380: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28381: LD_ADDR_VAR 0 3
28385: PUSH
28386: LD_INT 2
28388: PUSH
28389: LD_INT 3
28391: PUSH
28392: LD_INT 4
28394: PUSH
28395: LD_INT 5
28397: PUSH
28398: EMPTY
28399: LIST
28400: LIST
28401: LIST
28402: LIST
28403: ST_TO_ADDR
28404: GO 29263
28406: LD_INT 5
28408: DOUBLE
28409: EQUAL
28410: IFTRUE 28414
28412: GO 28440
28414: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28415: LD_ADDR_VAR 0 3
28419: PUSH
28420: LD_INT 2
28422: PUSH
28423: LD_INT 3
28425: PUSH
28426: LD_INT 4
28428: PUSH
28429: LD_INT 5
28431: PUSH
28432: EMPTY
28433: LIST
28434: LIST
28435: LIST
28436: LIST
28437: ST_TO_ADDR
28438: GO 29263
28440: LD_INT 9
28442: DOUBLE
28443: EQUAL
28444: IFTRUE 28448
28446: GO 28474
28448: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28449: LD_ADDR_VAR 0 3
28453: PUSH
28454: LD_INT 2
28456: PUSH
28457: LD_INT 3
28459: PUSH
28460: LD_INT 4
28462: PUSH
28463: LD_INT 5
28465: PUSH
28466: EMPTY
28467: LIST
28468: LIST
28469: LIST
28470: LIST
28471: ST_TO_ADDR
28472: GO 29263
28474: LD_INT 7
28476: DOUBLE
28477: EQUAL
28478: IFTRUE 28482
28480: GO 28508
28482: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28483: LD_ADDR_VAR 0 3
28487: PUSH
28488: LD_INT 2
28490: PUSH
28491: LD_INT 3
28493: PUSH
28494: LD_INT 4
28496: PUSH
28497: LD_INT 5
28499: PUSH
28500: EMPTY
28501: LIST
28502: LIST
28503: LIST
28504: LIST
28505: ST_TO_ADDR
28506: GO 29263
28508: LD_INT 12
28510: DOUBLE
28511: EQUAL
28512: IFTRUE 28516
28514: GO 28542
28516: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28517: LD_ADDR_VAR 0 3
28521: PUSH
28522: LD_INT 2
28524: PUSH
28525: LD_INT 3
28527: PUSH
28528: LD_INT 4
28530: PUSH
28531: LD_INT 5
28533: PUSH
28534: EMPTY
28535: LIST
28536: LIST
28537: LIST
28538: LIST
28539: ST_TO_ADDR
28540: GO 29263
28542: LD_INT 13
28544: DOUBLE
28545: EQUAL
28546: IFTRUE 28550
28548: GO 28576
28550: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28551: LD_ADDR_VAR 0 3
28555: PUSH
28556: LD_INT 2
28558: PUSH
28559: LD_INT 3
28561: PUSH
28562: LD_INT 4
28564: PUSH
28565: LD_INT 5
28567: PUSH
28568: EMPTY
28569: LIST
28570: LIST
28571: LIST
28572: LIST
28573: ST_TO_ADDR
28574: GO 29263
28576: LD_INT 14
28578: DOUBLE
28579: EQUAL
28580: IFTRUE 28584
28582: GO 28602
28584: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28585: LD_ADDR_VAR 0 3
28589: PUSH
28590: LD_INT 4
28592: PUSH
28593: LD_INT 5
28595: PUSH
28596: EMPTY
28597: LIST
28598: LIST
28599: ST_TO_ADDR
28600: GO 29263
28602: LD_INT 6
28604: DOUBLE
28605: EQUAL
28606: IFTRUE 28610
28608: GO 28628
28610: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28611: LD_ADDR_VAR 0 3
28615: PUSH
28616: LD_INT 4
28618: PUSH
28619: LD_INT 5
28621: PUSH
28622: EMPTY
28623: LIST
28624: LIST
28625: ST_TO_ADDR
28626: GO 29263
28628: LD_INT 10
28630: DOUBLE
28631: EQUAL
28632: IFTRUE 28636
28634: GO 28654
28636: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
28637: LD_ADDR_VAR 0 3
28641: PUSH
28642: LD_INT 4
28644: PUSH
28645: LD_INT 5
28647: PUSH
28648: EMPTY
28649: LIST
28650: LIST
28651: ST_TO_ADDR
28652: GO 29263
28654: LD_INT 22
28656: DOUBLE
28657: EQUAL
28658: IFTRUE 28662
28660: GO 28688
28662: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
28663: LD_ADDR_VAR 0 3
28667: PUSH
28668: LD_INT 11
28670: PUSH
28671: LD_INT 12
28673: PUSH
28674: LD_INT 13
28676: PUSH
28677: LD_INT 14
28679: PUSH
28680: EMPTY
28681: LIST
28682: LIST
28683: LIST
28684: LIST
28685: ST_TO_ADDR
28686: GO 29263
28688: LD_INT 23
28690: DOUBLE
28691: EQUAL
28692: IFTRUE 28696
28694: GO 28722
28696: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
28697: LD_ADDR_VAR 0 3
28701: PUSH
28702: LD_INT 11
28704: PUSH
28705: LD_INT 12
28707: PUSH
28708: LD_INT 13
28710: PUSH
28711: LD_INT 14
28713: PUSH
28714: EMPTY
28715: LIST
28716: LIST
28717: LIST
28718: LIST
28719: ST_TO_ADDR
28720: GO 29263
28722: LD_INT 24
28724: DOUBLE
28725: EQUAL
28726: IFTRUE 28730
28728: GO 28756
28730: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
28731: LD_ADDR_VAR 0 3
28735: PUSH
28736: LD_INT 11
28738: PUSH
28739: LD_INT 12
28741: PUSH
28742: LD_INT 13
28744: PUSH
28745: LD_INT 14
28747: PUSH
28748: EMPTY
28749: LIST
28750: LIST
28751: LIST
28752: LIST
28753: ST_TO_ADDR
28754: GO 29263
28756: LD_INT 30
28758: DOUBLE
28759: EQUAL
28760: IFTRUE 28764
28762: GO 28790
28764: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
28765: LD_ADDR_VAR 0 3
28769: PUSH
28770: LD_INT 11
28772: PUSH
28773: LD_INT 12
28775: PUSH
28776: LD_INT 13
28778: PUSH
28779: LD_INT 14
28781: PUSH
28782: EMPTY
28783: LIST
28784: LIST
28785: LIST
28786: LIST
28787: ST_TO_ADDR
28788: GO 29263
28790: LD_INT 25
28792: DOUBLE
28793: EQUAL
28794: IFTRUE 28798
28796: GO 28816
28798: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
28799: LD_ADDR_VAR 0 3
28803: PUSH
28804: LD_INT 13
28806: PUSH
28807: LD_INT 14
28809: PUSH
28810: EMPTY
28811: LIST
28812: LIST
28813: ST_TO_ADDR
28814: GO 29263
28816: LD_INT 27
28818: DOUBLE
28819: EQUAL
28820: IFTRUE 28824
28822: GO 28842
28824: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
28825: LD_ADDR_VAR 0 3
28829: PUSH
28830: LD_INT 13
28832: PUSH
28833: LD_INT 14
28835: PUSH
28836: EMPTY
28837: LIST
28838: LIST
28839: ST_TO_ADDR
28840: GO 29263
28842: LD_INT 28
28844: DOUBLE
28845: EQUAL
28846: IFTRUE 28850
28848: GO 28868
28850: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
28851: LD_ADDR_VAR 0 3
28855: PUSH
28856: LD_INT 13
28858: PUSH
28859: LD_INT 14
28861: PUSH
28862: EMPTY
28863: LIST
28864: LIST
28865: ST_TO_ADDR
28866: GO 29263
28868: LD_INT 29
28870: DOUBLE
28871: EQUAL
28872: IFTRUE 28876
28874: GO 28894
28876: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
28877: LD_ADDR_VAR 0 3
28881: PUSH
28882: LD_INT 13
28884: PUSH
28885: LD_INT 14
28887: PUSH
28888: EMPTY
28889: LIST
28890: LIST
28891: ST_TO_ADDR
28892: GO 29263
28894: LD_INT 31
28896: DOUBLE
28897: EQUAL
28898: IFTRUE 28902
28900: GO 28920
28902: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
28903: LD_ADDR_VAR 0 3
28907: PUSH
28908: LD_INT 13
28910: PUSH
28911: LD_INT 14
28913: PUSH
28914: EMPTY
28915: LIST
28916: LIST
28917: ST_TO_ADDR
28918: GO 29263
28920: LD_INT 26
28922: DOUBLE
28923: EQUAL
28924: IFTRUE 28928
28926: GO 28946
28928: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
28929: LD_ADDR_VAR 0 3
28933: PUSH
28934: LD_INT 13
28936: PUSH
28937: LD_INT 14
28939: PUSH
28940: EMPTY
28941: LIST
28942: LIST
28943: ST_TO_ADDR
28944: GO 29263
28946: LD_INT 42
28948: DOUBLE
28949: EQUAL
28950: IFTRUE 28954
28952: GO 28980
28954: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
28955: LD_ADDR_VAR 0 3
28959: PUSH
28960: LD_INT 21
28962: PUSH
28963: LD_INT 22
28965: PUSH
28966: LD_INT 23
28968: PUSH
28969: LD_INT 24
28971: PUSH
28972: EMPTY
28973: LIST
28974: LIST
28975: LIST
28976: LIST
28977: ST_TO_ADDR
28978: GO 29263
28980: LD_INT 43
28982: DOUBLE
28983: EQUAL
28984: IFTRUE 28988
28986: GO 29014
28988: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
28989: LD_ADDR_VAR 0 3
28993: PUSH
28994: LD_INT 21
28996: PUSH
28997: LD_INT 22
28999: PUSH
29000: LD_INT 23
29002: PUSH
29003: LD_INT 24
29005: PUSH
29006: EMPTY
29007: LIST
29008: LIST
29009: LIST
29010: LIST
29011: ST_TO_ADDR
29012: GO 29263
29014: LD_INT 44
29016: DOUBLE
29017: EQUAL
29018: IFTRUE 29022
29020: GO 29048
29022: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29023: LD_ADDR_VAR 0 3
29027: PUSH
29028: LD_INT 21
29030: PUSH
29031: LD_INT 22
29033: PUSH
29034: LD_INT 23
29036: PUSH
29037: LD_INT 24
29039: PUSH
29040: EMPTY
29041: LIST
29042: LIST
29043: LIST
29044: LIST
29045: ST_TO_ADDR
29046: GO 29263
29048: LD_INT 45
29050: DOUBLE
29051: EQUAL
29052: IFTRUE 29056
29054: GO 29082
29056: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29057: LD_ADDR_VAR 0 3
29061: PUSH
29062: LD_INT 21
29064: PUSH
29065: LD_INT 22
29067: PUSH
29068: LD_INT 23
29070: PUSH
29071: LD_INT 24
29073: PUSH
29074: EMPTY
29075: LIST
29076: LIST
29077: LIST
29078: LIST
29079: ST_TO_ADDR
29080: GO 29263
29082: LD_INT 49
29084: DOUBLE
29085: EQUAL
29086: IFTRUE 29090
29088: GO 29116
29090: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29091: LD_ADDR_VAR 0 3
29095: PUSH
29096: LD_INT 21
29098: PUSH
29099: LD_INT 22
29101: PUSH
29102: LD_INT 23
29104: PUSH
29105: LD_INT 24
29107: PUSH
29108: EMPTY
29109: LIST
29110: LIST
29111: LIST
29112: LIST
29113: ST_TO_ADDR
29114: GO 29263
29116: LD_INT 51
29118: DOUBLE
29119: EQUAL
29120: IFTRUE 29124
29122: GO 29150
29124: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29125: LD_ADDR_VAR 0 3
29129: PUSH
29130: LD_INT 21
29132: PUSH
29133: LD_INT 22
29135: PUSH
29136: LD_INT 23
29138: PUSH
29139: LD_INT 24
29141: PUSH
29142: EMPTY
29143: LIST
29144: LIST
29145: LIST
29146: LIST
29147: ST_TO_ADDR
29148: GO 29263
29150: LD_INT 52
29152: DOUBLE
29153: EQUAL
29154: IFTRUE 29158
29156: GO 29184
29158: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29159: LD_ADDR_VAR 0 3
29163: PUSH
29164: LD_INT 21
29166: PUSH
29167: LD_INT 22
29169: PUSH
29170: LD_INT 23
29172: PUSH
29173: LD_INT 24
29175: PUSH
29176: EMPTY
29177: LIST
29178: LIST
29179: LIST
29180: LIST
29181: ST_TO_ADDR
29182: GO 29263
29184: LD_INT 53
29186: DOUBLE
29187: EQUAL
29188: IFTRUE 29192
29190: GO 29210
29192: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29193: LD_ADDR_VAR 0 3
29197: PUSH
29198: LD_INT 23
29200: PUSH
29201: LD_INT 24
29203: PUSH
29204: EMPTY
29205: LIST
29206: LIST
29207: ST_TO_ADDR
29208: GO 29263
29210: LD_INT 46
29212: DOUBLE
29213: EQUAL
29214: IFTRUE 29218
29216: GO 29236
29218: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29219: LD_ADDR_VAR 0 3
29223: PUSH
29224: LD_INT 23
29226: PUSH
29227: LD_INT 24
29229: PUSH
29230: EMPTY
29231: LIST
29232: LIST
29233: ST_TO_ADDR
29234: GO 29263
29236: LD_INT 47
29238: DOUBLE
29239: EQUAL
29240: IFTRUE 29244
29242: GO 29262
29244: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29245: LD_ADDR_VAR 0 3
29249: PUSH
29250: LD_INT 23
29252: PUSH
29253: LD_INT 24
29255: PUSH
29256: EMPTY
29257: LIST
29258: LIST
29259: ST_TO_ADDR
29260: GO 29263
29262: POP
// result := ( chassis in result ) ;
29263: LD_ADDR_VAR 0 3
29267: PUSH
29268: LD_VAR 0 1
29272: PUSH
29273: LD_VAR 0 3
29277: IN
29278: ST_TO_ADDR
// end ;
29279: LD_VAR 0 3
29283: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29284: LD_INT 0
29286: PPUSH
29287: PPUSH
29288: PPUSH
29289: PPUSH
// uc_side = 0 ;
29290: LD_ADDR_OWVAR 20
29294: PUSH
29295: LD_INT 0
29297: ST_TO_ADDR
// uc_nation = 0 ;
29298: LD_ADDR_OWVAR 21
29302: PUSH
29303: LD_INT 0
29305: ST_TO_ADDR
// nat_area := nature_area ;
29306: LD_ADDR_VAR 0 4
29310: PUSH
29311: LD_INT 24
29313: ST_TO_ADDR
// InitHc ;
29314: CALL_OW 19
// for i = 1 to 4 do
29318: LD_ADDR_VAR 0 2
29322: PUSH
29323: DOUBLE
29324: LD_INT 1
29326: DEC
29327: ST_TO_ADDR
29328: LD_INT 4
29330: PUSH
29331: FOR_TO
29332: IFFALSE 29379
// begin hc_class = 18 ;
29334: LD_ADDR_OWVAR 28
29338: PUSH
29339: LD_INT 18
29341: ST_TO_ADDR
// hc_gallery =  ;
29342: LD_ADDR_OWVAR 33
29346: PUSH
29347: LD_STRING 
29349: ST_TO_ADDR
// animal := CreateHuman ;
29350: LD_ADDR_VAR 0 3
29354: PUSH
29355: CALL_OW 44
29359: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29360: LD_VAR 0 3
29364: PPUSH
29365: LD_VAR 0 4
29369: PPUSH
29370: LD_INT 0
29372: PPUSH
29373: CALL_OW 49
// end ;
29377: GO 29331
29379: POP
29380: POP
// for i = 1 to 3 do
29381: LD_ADDR_VAR 0 2
29385: PUSH
29386: DOUBLE
29387: LD_INT 1
29389: DEC
29390: ST_TO_ADDR
29391: LD_INT 3
29393: PUSH
29394: FOR_TO
29395: IFFALSE 29459
// begin hc_class = class_tiger ;
29397: LD_ADDR_OWVAR 28
29401: PUSH
29402: LD_INT 14
29404: ST_TO_ADDR
// hc_gallery =  ;
29405: LD_ADDR_OWVAR 33
29409: PUSH
29410: LD_STRING 
29412: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29413: LD_ADDR_OWVAR 35
29417: PUSH
29418: LD_INT 5
29420: NEG
29421: PPUSH
29422: LD_INT 5
29424: PPUSH
29425: CALL_OW 12
29429: ST_TO_ADDR
// animal := CreateHuman ;
29430: LD_ADDR_VAR 0 3
29434: PUSH
29435: CALL_OW 44
29439: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29440: LD_VAR 0 3
29444: PPUSH
29445: LD_VAR 0 4
29449: PPUSH
29450: LD_INT 0
29452: PPUSH
29453: CALL_OW 49
// end ;
29457: GO 29394
29459: POP
29460: POP
// for i = 1 to 3 do
29461: LD_ADDR_VAR 0 2
29465: PUSH
29466: DOUBLE
29467: LD_INT 1
29469: DEC
29470: ST_TO_ADDR
29471: LD_INT 3
29473: PUSH
29474: FOR_TO
29475: IFFALSE 29578
// begin hc_class = class_apeman ;
29477: LD_ADDR_OWVAR 28
29481: PUSH
29482: LD_INT 12
29484: ST_TO_ADDR
// hc_gallery =  ;
29485: LD_ADDR_OWVAR 33
29489: PUSH
29490: LD_STRING 
29492: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29493: LD_ADDR_OWVAR 35
29497: PUSH
29498: LD_INT 2
29500: NEG
29501: PPUSH
29502: LD_INT 2
29504: PPUSH
29505: CALL_OW 12
29509: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29510: LD_ADDR_OWVAR 31
29514: PUSH
29515: LD_INT 1
29517: PPUSH
29518: LD_INT 3
29520: PPUSH
29521: CALL_OW 12
29525: PUSH
29526: LD_INT 1
29528: PPUSH
29529: LD_INT 3
29531: PPUSH
29532: CALL_OW 12
29536: PUSH
29537: LD_INT 0
29539: PUSH
29540: LD_INT 0
29542: PUSH
29543: EMPTY
29544: LIST
29545: LIST
29546: LIST
29547: LIST
29548: ST_TO_ADDR
// animal := CreateHuman ;
29549: LD_ADDR_VAR 0 3
29553: PUSH
29554: CALL_OW 44
29558: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29559: LD_VAR 0 3
29563: PPUSH
29564: LD_VAR 0 4
29568: PPUSH
29569: LD_INT 0
29571: PPUSH
29572: CALL_OW 49
// end ;
29576: GO 29474
29578: POP
29579: POP
// for i = 1 to 3 do
29580: LD_ADDR_VAR 0 2
29584: PUSH
29585: DOUBLE
29586: LD_INT 1
29588: DEC
29589: ST_TO_ADDR
29590: LD_INT 3
29592: PUSH
29593: FOR_TO
29594: IFFALSE 29641
// begin hc_class = 13 ;
29596: LD_ADDR_OWVAR 28
29600: PUSH
29601: LD_INT 13
29603: ST_TO_ADDR
// hc_gallery =  ;
29604: LD_ADDR_OWVAR 33
29608: PUSH
29609: LD_STRING 
29611: ST_TO_ADDR
// animal := CreateHuman ;
29612: LD_ADDR_VAR 0 3
29616: PUSH
29617: CALL_OW 44
29621: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29622: LD_VAR 0 3
29626: PPUSH
29627: LD_VAR 0 4
29631: PPUSH
29632: LD_INT 0
29634: PPUSH
29635: CALL_OW 49
// end ;
29639: GO 29593
29641: POP
29642: POP
// for i = 1 to 3 do
29643: LD_ADDR_VAR 0 2
29647: PUSH
29648: DOUBLE
29649: LD_INT 1
29651: DEC
29652: ST_TO_ADDR
29653: LD_INT 3
29655: PUSH
29656: FOR_TO
29657: IFFALSE 29702
// begin hc_class = 20 ;
29659: LD_ADDR_OWVAR 28
29663: PUSH
29664: LD_INT 20
29666: ST_TO_ADDR
// hc_gallery =  ;
29667: LD_ADDR_OWVAR 33
29671: PUSH
29672: LD_STRING 
29674: ST_TO_ADDR
// animal := CreateHuman ;
29675: LD_ADDR_VAR 0 3
29679: PUSH
29680: CALL_OW 44
29684: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
29685: LD_VAR 0 3
29689: PPUSH
29690: LD_INT 4
29692: PPUSH
29693: LD_INT 0
29695: PPUSH
29696: CALL_OW 49
// end ;
29700: GO 29656
29702: POP
29703: POP
// end ; end_of_file
29704: LD_VAR 0 1
29708: RET
// export function Action ; begin
29709: LD_INT 0
29711: PPUSH
// InGameOn ;
29712: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
29716: LD_EXP 10
29720: PPUSH
29721: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
29725: LD_EXP 10
29729: PPUSH
29730: LD_STRING D1-JMM-1
29732: PPUSH
29733: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
29737: LD_EXP 11
29741: PPUSH
29742: LD_STRING D1-Roth-1
29744: PPUSH
29745: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
29749: LD_EXP 10
29753: PPUSH
29754: LD_STRING D1-JMM-2
29756: PPUSH
29757: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
29761: LD_EXP 11
29765: PPUSH
29766: LD_STRING D1-Roth-2
29768: PPUSH
29769: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
29773: LD_EXP 10
29777: PPUSH
29778: LD_STRING D1-JMM-3
29780: PPUSH
29781: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
29785: LD_EXP 11
29789: PPUSH
29790: LD_STRING D1-Roth-3
29792: PPUSH
29793: CALL_OW 88
// ComInvisible ( Roth ) ;
29797: LD_EXP 11
29801: PPUSH
29802: CALL_OW 152
// wait ( 0 0$1.3 ) ;
29806: LD_INT 46
29808: PPUSH
29809: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
29813: LD_EXP 10
29817: PPUSH
29818: LD_STRING D1-JMM-4
29820: PPUSH
29821: CALL_OW 88
// wait ( 0 0$0.3 ) ;
29825: LD_INT 10
29827: PPUSH
29828: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
29832: LD_EXP 11
29836: PPUSH
29837: LD_EXP 10
29841: PPUSH
29842: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
29846: LD_EXP 10
29850: PPUSH
29851: LD_STRING D1-JMM-4a
29853: PPUSH
29854: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
29858: LD_EXP 11
29862: PPUSH
29863: LD_STRING D1-Roth-4
29865: PPUSH
29866: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
29870: LD_EXP 10
29874: PPUSH
29875: LD_STRING D1-JMM-5
29877: PPUSH
29878: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
29882: LD_EXP 11
29886: PPUSH
29887: LD_STRING D1-Roth-5
29889: PPUSH
29890: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
29894: LD_EXP 10
29898: PPUSH
29899: LD_STRING D1-JMM-6
29901: PPUSH
29902: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
29906: LD_EXP 11
29910: PPUSH
29911: LD_STRING D1-Roth-6
29913: PPUSH
29914: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
29918: LD_EXP 10
29922: PPUSH
29923: LD_STRING D1-JMM-7
29925: PPUSH
29926: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
29930: LD_EXP 12
29934: PPUSH
29935: LD_EXP 10
29939: PPUSH
29940: CALL_OW 250
29944: PPUSH
29945: LD_EXP 10
29949: PPUSH
29950: CALL_OW 251
29954: PPUSH
29955: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
29959: LD_EXP 11
29963: PPUSH
29964: LD_STRING D1-Roth-7
29966: PPUSH
29967: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
29971: LD_INT 10
29973: PPUSH
29974: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
29978: LD_EXP 12
29982: PPUSH
29983: LD_EXP 10
29987: PPUSH
29988: CALL_OW 296
29992: PUSH
29993: LD_INT 6
29995: LESS
29996: IFFALSE 29971
// ComTurnUnit ( Powell , JMM ) ;
29998: LD_EXP 12
30002: PPUSH
30003: LD_EXP 10
30007: PPUSH
30008: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30012: LD_EXP 12
30016: PPUSH
30017: LD_STRING D1-Pow-7
30019: PPUSH
30020: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30024: LD_EXP 10
30028: PPUSH
30029: LD_EXP 12
30033: PPUSH
30034: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30038: LD_EXP 11
30042: PPUSH
30043: LD_EXP 12
30047: PPUSH
30048: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30052: LD_EXP 10
30056: PPUSH
30057: LD_STRING D1-JMM-8
30059: PPUSH
30060: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30064: LD_EXP 12
30068: PPUSH
30069: LD_STRING D1-Pow-8
30071: PPUSH
30072: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30076: LD_EXP 10
30080: PPUSH
30081: LD_STRING D1-JMM-9
30083: PPUSH
30084: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30088: LD_EXP 12
30092: PPUSH
30093: LD_INT 124
30095: PPUSH
30096: LD_INT 61
30098: PPUSH
30099: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30103: LD_INT 35
30105: PPUSH
30106: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30110: LD_EXP 10
30114: PPUSH
30115: LD_EXP 12
30119: PPUSH
30120: CALL_OW 296
30124: PUSH
30125: LD_INT 6
30127: GREATER
30128: IFFALSE 30103
// SayRadio ( Powell , D1-Pow-9 ) ;
30130: LD_EXP 12
30134: PPUSH
30135: LD_STRING D1-Pow-9
30137: PPUSH
30138: CALL_OW 94
// RemoveUnit ( Powell ) ;
30142: LD_EXP 12
30146: PPUSH
30147: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30151: LD_EXP 12
30155: PPUSH
30156: LD_INT 18
30158: PPUSH
30159: CALL_OW 52
// if Joan and not Joan in selected then
30163: LD_EXP 31
30167: PUSH
30168: LD_EXP 31
30172: PUSH
30173: LD_EXP 3
30177: IN
30178: NOT
30179: AND
30180: IFFALSE 30194
// SayRadio ( Joan , D1-Joan-9 ) ;
30182: LD_EXP 31
30186: PPUSH
30187: LD_STRING D1-Joan-9
30189: PPUSH
30190: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30194: LD_EXP 11
30198: PPUSH
30199: LD_EXP 10
30203: PPUSH
30204: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30208: LD_EXP 10
30212: PPUSH
30213: LD_EXP 11
30217: PPUSH
30218: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30222: LD_EXP 11
30226: PPUSH
30227: LD_STRING D1-Roth-9
30229: PPUSH
30230: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30234: LD_EXP 10
30238: PPUSH
30239: LD_STRING D1-JMM-10
30241: PPUSH
30242: CALL_OW 88
// InGameOff ;
30246: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30250: LD_STRING M1
30252: PPUSH
30253: CALL_OW 337
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30257: LD_INT 7
30259: PPUSH
30260: LD_INT 1
30262: PPUSH
30263: LD_INT 2
30265: PPUSH
30266: LD_INT 1
30268: PPUSH
30269: CALL_OW 80
// wait ( 0 0$3 ) ;
30273: LD_INT 105
30275: PPUSH
30276: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30280: LD_EXP 11
30284: PPUSH
30285: LD_INT 124
30287: PPUSH
30288: LD_INT 18
30290: PPUSH
30291: CALL_OW 111
// AddComInvisible ( Roth ) ;
30295: LD_EXP 11
30299: PPUSH
30300: CALL_OW 212
// AddComWait ( Roth , 1 1$30 ) ;
30304: LD_EXP 11
30308: PPUSH
30309: LD_INT 3150
30311: PPUSH
30312: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30316: LD_EXP 11
30320: PPUSH
30321: LD_INT 156
30323: PPUSH
30324: LD_INT 20
30326: PPUSH
30327: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30331: LD_EXP 11
30335: PPUSH
30336: LD_INT 178
30338: PPUSH
30339: LD_INT 42
30341: PPUSH
30342: CALL_OW 171
// AddComInvisible ( Roth ) ;
30346: LD_EXP 11
30350: PPUSH
30351: CALL_OW 212
// end ;
30355: LD_VAR 0 1
30359: RET
// every 0 0$1 do var i , tmp ;
30360: GO 30362
30362: DISABLE
30363: LD_INT 0
30365: PPUSH
30366: PPUSH
// begin tmp := selected union friends union others ;
30367: LD_ADDR_VAR 0 2
30371: PUSH
30372: LD_EXP 3
30376: PUSH
30377: LD_EXP 4
30381: UNION
30382: PUSH
30383: LD_EXP 5
30387: UNION
30388: ST_TO_ADDR
// if not tmp then
30389: LD_VAR 0 2
30393: NOT
30394: IFFALSE 30398
// exit ;
30396: GO 30470
// repeat wait ( 0 0$1 ) ;
30398: LD_INT 35
30400: PPUSH
30401: CALL_OW 67
// for i in tmp do
30405: LD_ADDR_VAR 0 1
30409: PUSH
30410: LD_VAR 0 2
30414: PUSH
30415: FOR_IN
30416: IFFALSE 30461
// if CanSpot ( JMM , i ) then
30418: LD_EXP 10
30422: PPUSH
30423: LD_VAR 0 1
30427: PPUSH
30428: CALL 27017 0 2
30432: IFFALSE 30459
// begin tmp := tmp diff i ;
30434: LD_ADDR_VAR 0 2
30438: PUSH
30439: LD_VAR 0 2
30443: PUSH
30444: LD_VAR 0 1
30448: DIFF
30449: ST_TO_ADDR
// Spot ( i ) ;
30450: LD_VAR 0 1
30454: PPUSH
30455: CALL 30473 0 1
// end ;
30459: GO 30415
30461: POP
30462: POP
// until not tmp ;
30463: LD_VAR 0 2
30467: NOT
30468: IFFALSE 30398
// end ;
30470: PPOPN 2
30472: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30473: LD_INT 0
30475: PPUSH
30476: PPUSH
30477: PPUSH
30478: PPUSH
// if not unit then
30479: LD_VAR 0 1
30483: NOT
30484: IFFALSE 30488
// exit ;
30486: GO 32158
// InGameOn ;
30488: CALL_OW 8
// side := GetSide ( JMM ) ;
30492: LD_ADDR_VAR 0 4
30496: PUSH
30497: LD_EXP 10
30501: PPUSH
30502: CALL_OW 255
30506: ST_TO_ADDR
// joined := false ;
30507: LD_ADDR_VAR 0 5
30511: PUSH
30512: LD_INT 0
30514: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30515: LD_ADDR_VAR 0 3
30519: PUSH
30520: LD_VAR 0 1
30524: PPUSH
30525: CALL_OW 310
30529: ST_TO_ADDR
// if building then
30530: LD_VAR 0 3
30534: IFFALSE 30593
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30536: LD_EXP 10
30540: PPUSH
30541: LD_VAR 0 1
30545: PPUSH
30546: CALL_OW 255
30550: PPUSH
30551: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30555: LD_EXP 10
30559: PPUSH
30560: LD_VAR 0 3
30564: PPUSH
30565: CALL_OW 120
// repeat wait ( 3 ) ;
30569: LD_INT 3
30571: PPUSH
30572: CALL_OW 67
// until IsInUnit ( JMM ) ;
30576: LD_EXP 10
30580: PPUSH
30581: CALL_OW 310
30585: IFFALSE 30569
// DialogueOn ;
30587: CALL_OW 6
// end else
30591: GO 30625
// begin ComTurnUnit ( JMM , unit ) ;
30593: LD_EXP 10
30597: PPUSH
30598: LD_VAR 0 1
30602: PPUSH
30603: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30607: LD_VAR 0 1
30611: PPUSH
30612: LD_EXP 10
30616: PPUSH
30617: CALL_OW 119
// DialogueOn ;
30621: CALL_OW 6
// end ; if unit = Joan then
30625: LD_VAR 0 1
30629: PUSH
30630: LD_EXP 31
30634: EQUAL
30635: IFFALSE 30745
// begin joined := true ;
30637: LD_ADDR_VAR 0 5
30641: PUSH
30642: LD_INT 1
30644: ST_TO_ADDR
// if Joan in selected then
30645: LD_EXP 31
30649: PUSH
30650: LD_EXP 3
30654: IN
30655: IFFALSE 30683
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
30657: LD_EXP 31
30661: PPUSH
30662: LD_STRING D3-Joan-Joan-1
30664: PPUSH
30665: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
30669: LD_EXP 10
30673: PPUSH
30674: LD_STRING D3-Joan-JMM-1
30676: PPUSH
30677: CALL_OW 88
// end else
30681: GO 30743
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
30683: LD_EXP 31
30687: PPUSH
30688: LD_STRING D4-Joan-Joan-1
30690: PPUSH
30691: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
30695: LD_EXP 10
30699: PPUSH
30700: LD_STRING D4-Joan-JMM-1
30702: PPUSH
30703: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
30707: LD_EXP 31
30711: PPUSH
30712: LD_STRING D4-Joan-Joan-2
30714: PPUSH
30715: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
30719: LD_EXP 10
30723: PPUSH
30724: LD_STRING D4-Joan-JMM-2
30726: PPUSH
30727: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
30731: LD_EXP 31
30735: PPUSH
30736: LD_STRING D4-Joan-Joan-3
30738: PPUSH
30739: CALL_OW 88
// end ; end else
30743: GO 32011
// if unit = Lisa then
30745: LD_VAR 0 1
30749: PUSH
30750: LD_EXP 18
30754: EQUAL
30755: IFFALSE 30947
// begin if Lisa in selected then
30757: LD_EXP 18
30761: PUSH
30762: LD_EXP 3
30766: IN
30767: IFFALSE 30880
// begin if GetSide ( Joan ) = 7 then
30769: LD_EXP 31
30773: PPUSH
30774: CALL_OW 255
30778: PUSH
30779: LD_INT 7
30781: EQUAL
30782: IFFALSE 30846
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
30784: LD_EXP 18
30788: PPUSH
30789: LD_STRING D3-LisaJ-Lisa-1
30791: PPUSH
30792: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
30796: LD_EXP 10
30800: PPUSH
30801: LD_STRING D3-LisaJ-JMM-1
30803: PPUSH
30804: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
30808: LD_EXP 18
30812: PPUSH
30813: LD_STRING D3-LisaJ-Lisa-2
30815: PPUSH
30816: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
30820: LD_EXP 10
30824: PPUSH
30825: LD_STRING D3-LisaJ-JMM-2
30827: PPUSH
30828: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
30832: LD_EXP 18
30836: PPUSH
30837: LD_STRING D3-LisaJ-Lisa-3
30839: PPUSH
30840: CALL_OW 88
// end else
30844: GO 30878
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
30846: LD_EXP 18
30850: PPUSH
30851: LD_STRING D3-LisaL-Lisa-1
30853: PPUSH
30854: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
30858: LD_EXP 10
30862: PPUSH
30863: LD_STRING D3-LisaL-JMM-1
30865: PPUSH
30866: CALL_OW 88
// joined := true ;
30870: LD_ADDR_VAR 0 5
30874: PUSH
30875: LD_INT 1
30877: ST_TO_ADDR
// end ; end else
30878: GO 30945
// begin if GetSide ( Joan ) = 7 then
30880: LD_EXP 31
30884: PPUSH
30885: CALL_OW 255
30889: PUSH
30890: LD_INT 7
30892: EQUAL
30893: IFFALSE 30933
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
30895: LD_EXP 18
30899: PPUSH
30900: LD_STRING D4-LisaJ-Lisa-1
30902: PPUSH
30903: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
30907: LD_EXP 10
30911: PPUSH
30912: LD_STRING D4-LisaJ-JMM-1
30914: PPUSH
30915: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
30919: LD_EXP 18
30923: PPUSH
30924: LD_STRING D4-LisaJ-Lisa-2
30926: PPUSH
30927: CALL_OW 88
// end else
30931: GO 30945
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
30933: LD_EXP 18
30937: PPUSH
30938: LD_STRING D4-LisaL-Lisa-1
30940: PPUSH
30941: CALL_OW 88
// end ; end ; end else
30945: GO 32011
// if unit = Frank then
30947: LD_VAR 0 1
30951: PUSH
30952: LD_EXP 28
30956: EQUAL
30957: IFFALSE 31097
// begin joined := true ;
30959: LD_ADDR_VAR 0 5
30963: PUSH
30964: LD_INT 1
30966: ST_TO_ADDR
// if Frank in selected then
30967: LD_EXP 28
30971: PUSH
30972: LD_EXP 3
30976: IN
30977: IFFALSE 31047
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
30979: LD_EXP 28
30983: PPUSH
30984: LD_STRING D3-Frank-Frank-1
30986: PPUSH
30987: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
30991: LD_EXP 10
30995: PPUSH
30996: LD_STRING D3-Frank-JMM-1
30998: PPUSH
30999: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31003: LD_EXP 28
31007: PPUSH
31008: LD_STRING D3-Frank-Frank-2
31010: PPUSH
31011: CALL_OW 88
// if reached_lab then
31015: LD_EXP 6
31019: IFFALSE 31045
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31021: LD_EXP 10
31025: PPUSH
31026: LD_STRING D3-Frank-JMM-2
31028: PPUSH
31029: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31033: LD_EXP 28
31037: PPUSH
31038: LD_STRING D3-Frank-Frank-3
31040: PPUSH
31041: CALL_OW 88
// end ; end else
31045: GO 31095
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31047: LD_EXP 28
31051: PPUSH
31052: LD_STRING D4-Frank-Frank-1
31054: PPUSH
31055: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31059: LD_EXP 10
31063: PPUSH
31064: LD_STRING D4-Frank-JMM-1
31066: PPUSH
31067: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31071: LD_EXP 28
31075: PPUSH
31076: LD_STRING D4-Frank-Frank-2
31078: PPUSH
31079: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31083: LD_EXP 10
31087: PPUSH
31088: LD_STRING D4-Frank-JMM-2
31090: PPUSH
31091: CALL_OW 88
// end ; end else
31095: GO 32011
// if unit = Brown then
31097: LD_VAR 0 1
31101: PUSH
31102: LD_EXP 23
31106: EQUAL
31107: IFFALSE 31143
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31109: LD_EXP 23
31113: PPUSH
31114: LD_STRING D3-Soldier1-Sol1-1
31116: PPUSH
31117: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31121: LD_EXP 10
31125: PPUSH
31126: LD_STRING D3-Soldier1-JMM-1
31128: PPUSH
31129: CALL_OW 88
// joined := true ;
31133: LD_ADDR_VAR 0 5
31137: PUSH
31138: LD_INT 1
31140: ST_TO_ADDR
// end else
31141: GO 32011
// if unit = Donaldson then
31143: LD_VAR 0 1
31147: PUSH
31148: LD_EXP 19
31152: EQUAL
31153: IFFALSE 31189
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31155: LD_EXP 19
31159: PPUSH
31160: LD_STRING D3-Soldier2-FSol2-1
31162: PPUSH
31163: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31167: LD_EXP 10
31171: PPUSH
31172: LD_STRING D3-Soldier2-JMM-1
31174: PPUSH
31175: CALL_OW 88
// joined := true ;
31179: LD_ADDR_VAR 0 5
31183: PUSH
31184: LD_INT 1
31186: ST_TO_ADDR
// end else
31187: GO 32011
// if unit = Cyrus then
31189: LD_VAR 0 1
31193: PUSH
31194: LD_EXP 21
31198: EQUAL
31199: IFFALSE 31273
// begin if Cyrus in selected then
31201: LD_EXP 21
31205: PUSH
31206: LD_EXP 3
31210: IN
31211: IFFALSE 31247
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31213: LD_EXP 21
31217: PPUSH
31218: LD_STRING D3-Cyrus-Cyrus-1
31220: PPUSH
31221: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31225: LD_EXP 10
31229: PPUSH
31230: LD_STRING D3-Cyrus-JMM-1
31232: PPUSH
31233: CALL_OW 88
// joined := true ;
31237: LD_ADDR_VAR 0 5
31241: PUSH
31242: LD_INT 1
31244: ST_TO_ADDR
// end else
31245: GO 31271
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31247: LD_EXP 21
31251: PPUSH
31252: LD_STRING D4-Cyrus-Cyrus-1
31254: PPUSH
31255: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31259: LD_EXP 10
31263: PPUSH
31264: LD_STRING D4-Cyrus-JMM-1
31266: PPUSH
31267: CALL_OW 88
// end ; end else
31271: GO 32011
// if unit = Bobby then
31273: LD_VAR 0 1
31277: PUSH
31278: LD_EXP 20
31282: EQUAL
31283: IFFALSE 31369
// begin if Bobby in selected then
31285: LD_EXP 20
31289: PUSH
31290: LD_EXP 3
31294: IN
31295: IFFALSE 31331
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31297: LD_EXP 20
31301: PPUSH
31302: LD_STRING D3-Bobby-Bobby-1
31304: PPUSH
31305: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31309: LD_EXP 10
31313: PPUSH
31314: LD_STRING D3-Bobby-JMM-1
31316: PPUSH
31317: CALL_OW 88
// joined := true ;
31321: LD_ADDR_VAR 0 5
31325: PUSH
31326: LD_INT 1
31328: ST_TO_ADDR
// end else
31329: GO 31367
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31331: LD_EXP 20
31335: PPUSH
31336: LD_STRING D4-Bobby-Bobby-1
31338: PPUSH
31339: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31343: LD_EXP 10
31347: PPUSH
31348: LD_STRING D4-Bobby-JMM-1
31350: PPUSH
31351: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31355: LD_EXP 20
31359: PPUSH
31360: LD_STRING D4-Bobby-Bobby-2
31362: PPUSH
31363: CALL_OW 88
// end ; end else
31367: GO 32011
// if unit = Cornel then
31369: LD_VAR 0 1
31373: PUSH
31374: LD_EXP 26
31378: EQUAL
31379: IFFALSE 31477
// begin if Cornel in selected then
31381: LD_EXP 26
31385: PUSH
31386: LD_EXP 3
31390: IN
31391: IFFALSE 31439
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31393: LD_EXP 26
31397: PPUSH
31398: LD_STRING D3-Mark-Corn-1
31400: PPUSH
31401: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31405: LD_EXP 10
31409: PPUSH
31410: LD_STRING D3-Mark-JMM-1
31412: PPUSH
31413: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31417: LD_EXP 26
31421: PPUSH
31422: LD_STRING D3-Mark-Corn-2
31424: PPUSH
31425: CALL_OW 88
// joined := true ;
31429: LD_ADDR_VAR 0 5
31433: PUSH
31434: LD_INT 1
31436: ST_TO_ADDR
// end else
31437: GO 31475
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31439: LD_EXP 26
31443: PPUSH
31444: LD_STRING D4-Mark-Corn-1
31446: PPUSH
31447: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31451: LD_EXP 10
31455: PPUSH
31456: LD_STRING D3-Joan-JMM-1
31458: PPUSH
31459: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31463: LD_EXP 26
31467: PPUSH
31468: LD_STRING D4-Mark-Corn-2
31470: PPUSH
31471: CALL_OW 88
// end ; end else
31475: GO 32011
// if unit = Gary then
31477: LD_VAR 0 1
31481: PUSH
31482: LD_EXP 27
31486: EQUAL
31487: IFFALSE 31571
// begin if Gary in selected then
31489: LD_EXP 27
31493: PUSH
31494: LD_EXP 3
31498: IN
31499: IFFALSE 31535
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
31501: LD_EXP 27
31505: PPUSH
31506: LD_STRING D3-Gary-Gary-1
31508: PPUSH
31509: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
31513: LD_EXP 10
31517: PPUSH
31518: LD_STRING D3-Gary-JMM-1
31520: PPUSH
31521: CALL_OW 88
// joined := true ;
31525: LD_ADDR_VAR 0 5
31529: PUSH
31530: LD_INT 1
31532: ST_TO_ADDR
// end else
31533: GO 31569
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
31535: LD_EXP 27
31539: PPUSH
31540: LD_STRING D4-Gary-Gary-1
31542: PPUSH
31543: CALL_OW 88
// SetSide ( Gary , 1 ) ;
31547: LD_EXP 27
31551: PPUSH
31552: LD_INT 1
31554: PPUSH
31555: CALL_OW 235
// DialogueOff ;
31559: CALL_OW 7
// InGameOff ;
31563: CALL_OW 9
// exit ;
31567: GO 32158
// end ; end else
31569: GO 32011
// if unit = Kikuchi then
31571: LD_VAR 0 1
31575: PUSH
31576: LD_EXP 29
31580: EQUAL
31581: IFFALSE 31665
// begin if Kikuchi in selected then
31583: LD_EXP 29
31587: PUSH
31588: LD_EXP 3
31592: IN
31593: IFFALSE 31629
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
31595: LD_EXP 29
31599: PPUSH
31600: LD_STRING D3-Yamako-Yam-1
31602: PPUSH
31603: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31607: LD_EXP 10
31611: PPUSH
31612: LD_STRING D3-Soldier2-JMM-1
31614: PPUSH
31615: CALL_OW 88
// joined := true ;
31619: LD_ADDR_VAR 0 5
31623: PUSH
31624: LD_INT 1
31626: ST_TO_ADDR
// end else
31627: GO 31663
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
31629: LD_EXP 29
31633: PPUSH
31634: LD_STRING D4-Yamako-Yam-1
31636: PPUSH
31637: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
31641: LD_EXP 29
31645: PPUSH
31646: LD_INT 1
31648: PPUSH
31649: CALL_OW 235
// DialogueOff ;
31653: CALL_OW 7
// InGameOff ;
31657: CALL_OW 9
// exit ;
31661: GO 32158
// end ; end else
31663: GO 32011
// if unit = Gladstone then
31665: LD_VAR 0 1
31669: PUSH
31670: LD_EXP 24
31674: EQUAL
31675: IFFALSE 31741
// begin if Gladstone in selected then
31677: LD_EXP 24
31681: PUSH
31682: LD_EXP 3
31686: IN
31687: IFFALSE 31715
// begin Say ( JMM , D3-Tim-JMM-1 ) ;
31689: LD_EXP 10
31693: PPUSH
31694: LD_STRING D3-Tim-JMM-1
31696: PPUSH
31697: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
31701: LD_EXP 24
31705: PPUSH
31706: LD_STRING D3-Tim-Glad-1
31708: PPUSH
31709: CALL_OW 88
// end else
31713: GO 31739
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
31715: LD_EXP 10
31719: PPUSH
31720: LD_STRING D4-Tim-JMM-1
31722: PPUSH
31723: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
31727: LD_EXP 24
31731: PPUSH
31732: LD_STRING D4-Tim-Glad-1
31734: PPUSH
31735: CALL_OW 88
// end ; end else
31739: GO 32011
// if unit = Denis then
31741: LD_VAR 0 1
31745: PUSH
31746: LD_EXP 22
31750: EQUAL
31751: IFFALSE 31787
// begin joined := true ;
31753: LD_ADDR_VAR 0 5
31757: PUSH
31758: LD_INT 1
31760: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
31761: LD_EXP 22
31765: PPUSH
31766: LD_STRING D3-Denis-Den-1
31768: PPUSH
31769: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
31773: LD_EXP 10
31777: PPUSH
31778: LD_STRING D3-Denis-JMM-1
31780: PPUSH
31781: CALL_OW 88
// end else
31785: GO 32011
// if unit = Simms then
31787: LD_VAR 0 1
31791: PUSH
31792: LD_EXP 30
31796: EQUAL
31797: IFFALSE 31833
// begin joined := true ;
31799: LD_ADDR_VAR 0 5
31803: PUSH
31804: LD_INT 1
31806: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
31807: LD_EXP 30
31811: PPUSH
31812: LD_STRING D3-Simms-Sim-1
31814: PPUSH
31815: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
31819: LD_EXP 10
31823: PPUSH
31824: LD_STRING D3-Simms-JMM-1
31826: PPUSH
31827: CALL_OW 88
// end else
31831: GO 32011
// begin joined := unit in selected ;
31833: LD_ADDR_VAR 0 5
31837: PUSH
31838: LD_VAR 0 1
31842: PUSH
31843: LD_EXP 3
31847: IN
31848: ST_TO_ADDR
// if joined then
31849: LD_VAR 0 5
31853: IFFALSE 31922
// begin if GetSex ( unit ) = sex_male then
31855: LD_VAR 0 1
31859: PPUSH
31860: CALL_OW 258
31864: PUSH
31865: LD_INT 1
31867: EQUAL
31868: IFFALSE 31896
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
31870: LD_VAR 0 1
31874: PPUSH
31875: LD_STRING D3-Soldier1-Sol1-1
31877: PPUSH
31878: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31882: LD_EXP 10
31886: PPUSH
31887: LD_STRING D3-Soldier1-JMM-1
31889: PPUSH
31890: CALL_OW 88
// end else
31894: GO 31920
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
31896: LD_VAR 0 1
31900: PPUSH
31901: LD_STRING D3-Soldier2-FSol2-1
31903: PPUSH
31904: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31908: LD_EXP 10
31912: PPUSH
31913: LD_STRING D3-Soldier2-JMM-1
31915: PPUSH
31916: CALL_OW 88
// end ; end else
31920: GO 32011
// begin if GetSex ( unit ) = sex_male then
31922: LD_VAR 0 1
31926: PPUSH
31927: CALL_OW 258
31931: PUSH
31932: LD_INT 1
31934: EQUAL
31935: IFFALSE 31975
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
31937: LD_VAR 0 1
31941: PPUSH
31942: LD_STRING D4-Soldier2-Sol1-1
31944: PPUSH
31945: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
31949: LD_EXP 10
31953: PPUSH
31954: LD_STRING D4-Soldier2-JMM-1
31956: PPUSH
31957: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
31961: LD_VAR 0 1
31965: PPUSH
31966: LD_STRING D4-Soldier2-Sol2-1
31968: PPUSH
31969: CALL_OW 88
// end else
31973: GO 32011
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31975: LD_VAR 0 1
31979: PPUSH
31980: LD_STRING D4-Soldier1-FSol1-1
31982: PPUSH
31983: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31987: LD_EXP 10
31991: PPUSH
31992: LD_STRING D4-Soldier1-JMM-1
31994: PPUSH
31995: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31999: LD_VAR 0 1
32003: PPUSH
32004: LD_STRING D4-Soldier1-FSol1-2
32006: PPUSH
32007: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32011: CALL_OW 7
// InGameOff ;
32015: CALL_OW 9
// if building then
32019: LD_VAR 0 3
32023: IFFALSE 32079
// begin SetSide ( JMM , side ) ;
32025: LD_EXP 10
32029: PPUSH
32030: LD_VAR 0 4
32034: PPUSH
32035: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32039: LD_EXP 10
32043: PPUSH
32044: CALL_OW 122
// if joined then
32048: LD_VAR 0 5
32052: IFFALSE 32077
// begin SetSide ( unit , side ) ;
32054: LD_VAR 0 1
32058: PPUSH
32059: LD_VAR 0 4
32063: PPUSH
32064: CALL_OW 235
// ComExitBuilding ( unit ) ;
32068: LD_VAR 0 1
32072: PPUSH
32073: CALL_OW 122
// end ; end else
32077: GO 32158
// begin ComStop ( [ JMM , unit ] ) ;
32079: LD_EXP 10
32083: PUSH
32084: LD_VAR 0 1
32088: PUSH
32089: EMPTY
32090: LIST
32091: LIST
32092: PPUSH
32093: CALL_OW 141
// if joined then
32097: LD_VAR 0 5
32101: IFFALSE 32119
// SetSide ( unit , side ) else
32103: LD_VAR 0 1
32107: PPUSH
32108: LD_VAR 0 4
32112: PPUSH
32113: CALL_OW 235
32117: GO 32158
// begin repeat wait ( 0 0$1 ) ;
32119: LD_INT 35
32121: PPUSH
32122: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32126: LD_EXP 10
32130: PPUSH
32131: LD_VAR 0 1
32135: PPUSH
32136: CALL_OW 296
32140: PUSH
32141: LD_INT 10
32143: GREATER
32144: IFFALSE 32119
// SetSide ( unit , 1 ) ;
32146: LD_VAR 0 1
32150: PPUSH
32151: LD_INT 1
32153: PPUSH
32154: CALL_OW 235
// end ; end ; end ;
32158: LD_VAR 0 2
32162: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32163: LD_EXP 10
32167: PPUSH
32168: CALL_OW 310
32172: PUSH
32173: LD_INT 47
32175: EQUAL
32176: IFFALSE 32244
32178: GO 32180
32180: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32181: LD_STRING M1a
32183: PPUSH
32184: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32188: LD_INT 13
32190: PPUSH
32191: LD_INT 1
32193: PPUSH
32194: LD_INT 2
32196: PPUSH
32197: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32201: LD_INT 29
32203: PPUSH
32204: LD_INT 1
32206: PPUSH
32207: LD_INT 2
32209: PPUSH
32210: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32214: LD_EXP 10
32218: PPUSH
32219: LD_INT 9
32221: PPUSH
32222: CALL_OW 336
// can_escape := true ;
32226: LD_ADDR_EXP 7
32230: PUSH
32231: LD_INT 1
32233: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32234: LD_INT 19
32236: PPUSH
32237: LD_INT 1
32239: PPUSH
32240: CALL_OW 424
// end ;
32244: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32245: LD_INT 22
32247: PUSH
32248: LD_INT 4
32250: PUSH
32251: EMPTY
32252: LIST
32253: LIST
32254: PUSH
32255: LD_INT 34
32257: PUSH
32258: LD_INT 12
32260: PUSH
32261: EMPTY
32262: LIST
32263: LIST
32264: PUSH
32265: EMPTY
32266: LIST
32267: LIST
32268: PPUSH
32269: CALL_OW 69
32273: IFFALSE 32355
32275: GO 32277
32277: DISABLE
32278: LD_INT 0
32280: PPUSH
// begin enable ;
32281: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32282: LD_ADDR_VAR 0 1
32286: PUSH
32287: LD_INT 22
32289: PUSH
32290: LD_INT 4
32292: PUSH
32293: EMPTY
32294: LIST
32295: LIST
32296: PUSH
32297: LD_INT 34
32299: PUSH
32300: LD_INT 12
32302: PUSH
32303: EMPTY
32304: LIST
32305: LIST
32306: PUSH
32307: EMPTY
32308: LIST
32309: LIST
32310: PPUSH
32311: CALL_OW 69
32315: PUSH
32316: FOR_IN
32317: IFFALSE 32353
// if GetDistUnits ( i , JMM ) < 6 then
32319: LD_VAR 0 1
32323: PPUSH
32324: LD_EXP 10
32328: PPUSH
32329: CALL_OW 296
32333: PUSH
32334: LD_INT 6
32336: LESS
32337: IFFALSE 32351
// SetSide ( i , 7 ) ;
32339: LD_VAR 0 1
32343: PPUSH
32344: LD_INT 7
32346: PPUSH
32347: CALL_OW 235
32351: GO 32316
32353: POP
32354: POP
// end ;
32355: PPOPN 1
32357: END
// every 0 0$01 trigger FilterAllUnits ( [ f_side , 7 ] ) = FilterUnitsInArea ( escape_area , [ f_side , 7 ] ) do var all_taken ;
32358: LD_INT 22
32360: PUSH
32361: LD_INT 7
32363: PUSH
32364: EMPTY
32365: LIST
32366: LIST
32367: PPUSH
32368: CALL_OW 69
32372: PUSH
32373: LD_INT 19
32375: PPUSH
32376: LD_INT 22
32378: PUSH
32379: LD_INT 7
32381: PUSH
32382: EMPTY
32383: LIST
32384: LIST
32385: PPUSH
32386: CALL_OW 70
32390: EQUAL
32391: IFFALSE 32442
32393: GO 32395
32395: DISABLE
32396: LD_INT 0
32398: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
32399: LD_ADDR_VAR 0 1
32403: PUSH
32404: LD_EXP 3
32408: PPUSH
32409: LD_INT 22
32411: PUSH
32412: LD_INT 4
32414: PUSH
32415: EMPTY
32416: LIST
32417: LIST
32418: PUSH
32419: LD_INT 21
32421: PUSH
32422: LD_INT 1
32424: PUSH
32425: EMPTY
32426: LIST
32427: LIST
32428: PUSH
32429: EMPTY
32430: LIST
32431: LIST
32432: PPUSH
32433: CALL_OW 72
32437: PUSH
32438: LD_INT 0
32440: EQUAL
32441: ST_TO_ADDR
// end ; end_of_file
32442: PPOPN 1
32444: END
// on SailEvent ( event ) do var tmp ;
32445: LD_INT 0
32447: PPUSH
// begin if event = 1 then
32448: LD_VAR 0 1
32452: PUSH
32453: LD_INT 1
32455: EQUAL
32456: IFFALSE 32529
// begin if not mobile_patrol then
32458: LD_EXP 13
32462: NOT
32463: IFFALSE 32467
// exit ;
32465: GO 32529
// tmp := mobile_patrol [ mobile_patrol ] ;
32467: LD_ADDR_VAR 0 2
32471: PUSH
32472: LD_EXP 13
32476: PUSH
32477: LD_EXP 13
32481: ARRAY
32482: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
32483: LD_ADDR_EXP 13
32487: PUSH
32488: LD_EXP 13
32492: PPUSH
32493: LD_EXP 13
32497: PPUSH
32498: CALL_OW 3
32502: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
32503: LD_VAR 0 2
32507: PPUSH
32508: LD_EXP 14
32512: PUSH
32513: LD_EXP 13
32517: PUSH
32518: LD_INT 1
32520: PLUS
32521: ARRAY
32522: PPUSH
32523: EMPTY
32524: PPUSH
32525: CALL 5874 0 3
// end ; end ;
32529: PPOPN 2
32531: END
// on UnitDestroyed ( un ) do begin if un = JMM then
32532: LD_VAR 0 1
32536: PUSH
32537: LD_EXP 10
32541: EQUAL
32542: IFFALSE 32551
// YouLost ( JMM ) ;
32544: LD_STRING JMM
32546: PPUSH
32547: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
32551: LD_VAR 0 1
32555: PPUSH
32556: CALL_OW 255
32560: PUSH
32561: LD_INT 7
32563: EQUAL
32564: PUSH
32565: LD_VAR 0 1
32569: PPUSH
32570: CALL_OW 247
32574: PUSH
32575: LD_INT 1
32577: EQUAL
32578: AND
32579: IFFALSE 32595
// team_kill_counter := team_kill_counter + 1 ;
32581: LD_ADDR_EXP 9
32585: PUSH
32586: LD_EXP 9
32590: PUSH
32591: LD_INT 1
32593: PLUS
32594: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
32595: LD_VAR 0 1
32599: PPUSH
32600: CALL_OW 255
32604: PUSH
32605: LD_INT 1
32607: EQUAL
32608: PUSH
32609: LD_VAR 0 1
32613: PPUSH
32614: CALL_OW 247
32618: PUSH
32619: LD_INT 1
32621: EQUAL
32622: AND
32623: IFFALSE 32639
// friends_kill_counter := friends_kill_counter + 1 ;
32625: LD_ADDR_EXP 8
32629: PUSH
32630: LD_EXP 8
32634: PUSH
32635: LD_INT 1
32637: PLUS
32638: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
32639: LD_VAR 0 1
32643: PPUSH
32644: CALL_OW 255
32648: PUSH
32649: LD_INT 1
32651: NONEQUAL
32652: IFFALSE 32656
// exit ;
32654: GO 32733
// if GetControl ( un ) = control_remote then
32656: LD_VAR 0 1
32660: PPUSH
32661: CALL_OW 263
32665: PUSH
32666: LD_INT 2
32668: EQUAL
32669: IFFALSE 32687
// defenders := defenders diff un ;
32671: LD_ADDR_EXP 16
32675: PUSH
32676: LD_EXP 16
32680: PUSH
32681: LD_VAR 0 1
32685: DIFF
32686: ST_TO_ADDR
// if not un in defenders then
32687: LD_VAR 0 1
32691: PUSH
32692: LD_EXP 16
32696: IN
32697: NOT
32698: IFFALSE 32733
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
32700: LD_ADDR_EXP 17
32704: PUSH
32705: LD_VAR 0 1
32709: PPUSH
32710: CALL_OW 250
32714: PUSH
32715: LD_VAR 0 1
32719: PPUSH
32720: CALL_OW 251
32724: PUSH
32725: EMPTY
32726: LIST
32727: LIST
32728: ST_TO_ADDR
// Defend ;
32729: CALL 2346 0 0
// end ; end ;
32733: PPOPN 1
32735: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
32736: LD_VAR 0 1
32740: PPUSH
32741: CALL_OW 255
32745: PUSH
32746: LD_INT 1
32748: NONEQUAL
32749: IFFALSE 32753
// exit ;
32751: GO 32777
// if GetControl ( veh ) = control_remote then
32753: LD_VAR 0 1
32757: PPUSH
32758: CALL_OW 263
32762: PUSH
32763: LD_INT 2
32765: EQUAL
32766: IFFALSE 32777
// Connect ( veh ) ;
32768: LD_VAR 0 1
32772: PPUSH
32773: CALL 5069 0 1
// end ;
32777: PPOPN 2
32779: END
// on UnitGoesToRed ( un ) do var i , veh ;
32780: LD_INT 0
32782: PPUSH
32783: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
32784: LD_VAR 0 1
32788: PPUSH
32789: CALL_OW 255
32793: PUSH
32794: LD_INT 1
32796: EQUAL
32797: PUSH
32798: LD_VAR 0 1
32802: PPUSH
32803: CALL_OW 263
32807: PUSH
32808: LD_INT 2
32810: EQUAL
32811: AND
32812: IFFALSE 32823
// ComUnlink ( un ) ;
32814: LD_VAR 0 1
32818: PPUSH
32819: CALL_OW 136
// if un = ambar0 then
32823: LD_VAR 0 1
32827: PUSH
32828: LD_INT 18
32830: EQUAL
32831: IFFALSE 32941
// begin uc_side := 1 ;
32833: LD_ADDR_OWVAR 20
32837: PUSH
32838: LD_INT 1
32840: ST_TO_ADDR
// uc_nation := 1 ;
32841: LD_ADDR_OWVAR 21
32845: PUSH
32846: LD_INT 1
32848: ST_TO_ADDR
// for i = 1 to 6 do
32849: LD_ADDR_VAR 0 2
32853: PUSH
32854: DOUBLE
32855: LD_INT 1
32857: DEC
32858: ST_TO_ADDR
32859: LD_INT 6
32861: PUSH
32862: FOR_TO
32863: IFFALSE 32939
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
32865: LD_INT 3
32867: PPUSH
32868: LD_INT 1
32870: PPUSH
32871: LD_INT 3
32873: PPUSH
32874: LD_INT 4
32876: PPUSH
32877: LD_INT 100
32879: PPUSH
32880: CALL 4833 0 5
// veh := CreateVehicle ;
32884: LD_ADDR_VAR 0 3
32888: PUSH
32889: CALL_OW 45
32893: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
32894: LD_VAR 0 3
32898: PPUSH
32899: LD_INT 1
32901: PPUSH
32902: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
32906: LD_VAR 0 3
32910: PPUSH
32911: LD_INT 25
32913: PPUSH
32914: LD_INT 0
32916: PPUSH
32917: CALL_OW 49
// defenders := defenders ^ veh ;
32921: LD_ADDR_EXP 16
32925: PUSH
32926: LD_EXP 16
32930: PUSH
32931: LD_VAR 0 3
32935: ADD
32936: ST_TO_ADDR
// end ;
32937: GO 32862
32939: POP
32940: POP
// end ; end ;
32941: PPOPN 3
32943: END
