// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29663 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2785 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30088 0 0
// PreparePatrol ;
 103: CALL 889 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 5087 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 5150 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 0
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defcon_wave := 0 ;
 556: LD_ADDR_EXP 19
 560: PUSH
 561: LD_INT 0
 563: ST_TO_ADDR
// defenders := [ ] ;
 564: LD_ADDR_EXP 17
 568: PUSH
 569: EMPTY
 570: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 571: LD_INT 5
 573: PPUSH
 574: LD_STRING alpha
 576: PPUSH
 577: CALL_OW 500
// uc_side := 1 ;
 581: LD_ADDR_OWVAR 20
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// uc_nation := 1 ;
 589: LD_ADDR_OWVAR 21
 593: PUSH
 594: LD_INT 1
 596: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 597: LD_ADDR_EXP 13
 601: PUSH
 602: LD_STRING Powell
 604: PPUSH
 605: CALL_OW 25
 609: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 610: LD_EXP 13
 614: PPUSH
 615: LD_INT 110
 617: PPUSH
 618: LD_INT 26
 620: PPUSH
 621: LD_INT 0
 623: PPUSH
 624: CALL_OW 48
// ComHold ( Powell ) ;
 628: LD_EXP 13
 632: PPUSH
 633: CALL_OW 140
// for i = 1 to 5 do
 637: LD_ADDR_VAR 0 2
 641: PUSH
 642: DOUBLE
 643: LD_INT 1
 645: DEC
 646: ST_TO_ADDR
 647: LD_INT 5
 649: PUSH
 650: FOR_TO
 651: IFFALSE 707
// begin PrepareHuman ( false , 1 , 10 ) ;
 653: LD_INT 0
 655: PPUSH
 656: LD_INT 1
 658: PPUSH
 659: LD_INT 10
 661: PPUSH
 662: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 666: LD_ADDR_EXP 16
 670: PUSH
 671: LD_EXP 16
 675: PPUSH
 676: LD_INT 1
 678: PPUSH
 679: CALL_OW 44
 683: PPUSH
 684: CALL_OW 2
 688: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 689: LD_EXP 16
 693: PUSH
 694: LD_INT 1
 696: ARRAY
 697: PPUSH
 698: LD_INT 18
 700: PPUSH
 701: CALL_OW 52
// end ;
 705: GO 650
 707: POP
 708: POP
// if Difficulty > 2 then
 709: LD_OWVAR 67
 713: PUSH
 714: LD_INT 2
 716: GREATER
 717: IFFALSE 766
// begin bc_type := b_turret ;
 719: LD_ADDR_OWVAR 42
 723: PUSH
 724: LD_INT 33
 726: ST_TO_ADDR
// bc_level := 7 ;
 727: LD_ADDR_OWVAR 43
 731: PUSH
 732: LD_INT 7
 734: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 735: LD_ADDR_VAR 0 4
 739: PUSH
 740: LD_INT 107
 742: PPUSH
 743: LD_INT 55
 745: PPUSH
 746: LD_INT 5
 748: PPUSH
 749: CALL_OW 47
 753: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 754: LD_VAR 0 4
 758: PPUSH
 759: LD_INT 7
 761: PPUSH
 762: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 766: LD_ADDR_VAR 0 2
 770: PUSH
 771: LD_INT 22
 773: PUSH
 774: LD_INT 1
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: PUSH
 781: LD_INT 30
 783: PUSH
 784: LD_INT 3
 786: PUSH
 787: EMPTY
 788: LIST
 789: LIST
 790: PUSH
 791: EMPTY
 792: LIST
 793: LIST
 794: PPUSH
 795: CALL_OW 69
 799: PUSH
 800: LD_INT 22
 802: PUSH
 803: LD_INT 1
 805: PUSH
 806: EMPTY
 807: LIST
 808: LIST
 809: PUSH
 810: LD_INT 30
 812: PUSH
 813: LD_INT 36
 815: PUSH
 816: EMPTY
 817: LIST
 818: LIST
 819: PUSH
 820: EMPTY
 821: LIST
 822: LIST
 823: PPUSH
 824: CALL_OW 69
 828: ADD
 829: PUSH
 830: FOR_IN
 831: IFFALSE 882
// for j = 1 to 3 do
 833: LD_ADDR_VAR 0 3
 837: PUSH
 838: DOUBLE
 839: LD_INT 1
 841: DEC
 842: ST_TO_ADDR
 843: LD_INT 3
 845: PUSH
 846: FOR_TO
 847: IFFALSE 878
// begin PrepareHuman ( false , 3 , 6 ) ;
 849: LD_INT 0
 851: PPUSH
 852: LD_INT 3
 854: PPUSH
 855: LD_INT 6
 857: PPUSH
 858: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 862: CALL_OW 44
 866: PPUSH
 867: LD_VAR 0 2
 871: PPUSH
 872: CALL_OW 52
// end ;
 876: GO 846
 878: POP
 879: POP
 880: GO 830
 882: POP
 883: POP
// end ;
 884: LD_VAR 0 1
 888: RET
// export function PreparePatrol ; var i , un ; begin
 889: LD_INT 0
 891: PPUSH
 892: PPUSH
 893: PPUSH
// uc_side := 1 ;
 894: LD_ADDR_OWVAR 20
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// uc_nation := 1 ;
 902: LD_ADDR_OWVAR 21
 906: PUSH
 907: LD_INT 1
 909: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 910: LD_ADDR_EXP 15
 914: PUSH
 915: LD_INT 99
 917: PUSH
 918: LD_INT 55
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PUSH
 925: LD_INT 113
 927: PUSH
 928: LD_INT 67
 930: PUSH
 931: EMPTY
 932: LIST
 933: LIST
 934: PUSH
 935: LD_INT 129
 937: PUSH
 938: LD_INT 68
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PUSH
 945: LD_INT 135
 947: PUSH
 948: LD_INT 62
 950: PUSH
 951: EMPTY
 952: LIST
 953: LIST
 954: PUSH
 955: LD_INT 103
 957: PUSH
 958: LD_INT 41
 960: PUSH
 961: EMPTY
 962: LIST
 963: LIST
 964: PUSH
 965: EMPTY
 966: LIST
 967: LIST
 968: LIST
 969: LIST
 970: LIST
 971: PUSH
 972: LD_INT 27
 974: PUSH
 975: LD_INT 49
 977: PUSH
 978: EMPTY
 979: LIST
 980: LIST
 981: PUSH
 982: LD_INT 46
 984: PUSH
 985: LD_INT 49
 987: PUSH
 988: EMPTY
 989: LIST
 990: LIST
 991: PUSH
 992: LD_INT 87
 994: PUSH
 995: LD_INT 70
 997: PUSH
 998: EMPTY
 999: LIST
1000: LIST
1001: PUSH
1002: LD_INT 99
1004: PUSH
1005: LD_INT 79
1007: PUSH
1008: EMPTY
1009: LIST
1010: LIST
1011: PUSH
1012: LD_INT 118
1014: PUSH
1015: LD_INT 111
1017: PUSH
1018: EMPTY
1019: LIST
1020: LIST
1021: PUSH
1022: LD_INT 99
1024: PUSH
1025: LD_INT 79
1027: PUSH
1028: EMPTY
1029: LIST
1030: LIST
1031: PUSH
1032: LD_INT 87
1034: PUSH
1035: LD_INT 70
1037: PUSH
1038: EMPTY
1039: LIST
1040: LIST
1041: PUSH
1042: LD_INT 46
1044: PUSH
1045: LD_INT 49
1047: PUSH
1048: EMPTY
1049: LIST
1050: LIST
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: LIST
1056: LIST
1057: LIST
1058: LIST
1059: LIST
1060: LIST
1061: PUSH
1062: LD_INT 200
1064: PUSH
1065: LD_INT 88
1067: PUSH
1068: EMPTY
1069: LIST
1070: LIST
1071: PUSH
1072: LD_INT 175
1074: PUSH
1075: LD_INT 80
1077: PUSH
1078: EMPTY
1079: LIST
1080: LIST
1081: PUSH
1082: LD_INT 135
1084: PUSH
1085: LD_INT 62
1087: PUSH
1088: EMPTY
1089: LIST
1090: LIST
1091: PUSH
1092: LD_INT 117
1094: PUSH
1095: LD_INT 53
1097: PUSH
1098: EMPTY
1099: LIST
1100: LIST
1101: PUSH
1102: LD_INT 103
1104: PUSH
1105: LD_INT 41
1107: PUSH
1108: EMPTY
1109: LIST
1110: LIST
1111: PUSH
1112: LD_INT 99
1114: PUSH
1115: LD_INT 24
1117: PUSH
1118: EMPTY
1119: LIST
1120: LIST
1121: PUSH
1122: LD_INT 85
1124: PUSH
1125: LD_INT 3
1127: PUSH
1128: EMPTY
1129: LIST
1130: LIST
1131: PUSH
1132: LD_INT 99
1134: PUSH
1135: LD_INT 24
1137: PUSH
1138: EMPTY
1139: LIST
1140: LIST
1141: PUSH
1142: LD_INT 103
1144: PUSH
1145: LD_INT 41
1147: PUSH
1148: EMPTY
1149: LIST
1150: LIST
1151: PUSH
1152: LD_INT 98
1154: PUSH
1155: LD_INT 47
1157: PUSH
1158: EMPTY
1159: LIST
1160: LIST
1161: PUSH
1162: LD_INT 99
1164: PUSH
1165: LD_INT 56
1167: PUSH
1168: EMPTY
1169: LIST
1170: LIST
1171: PUSH
1172: LD_INT 96
1174: PUSH
1175: LD_INT 66
1177: PUSH
1178: EMPTY
1179: LIST
1180: LIST
1181: PUSH
1182: LD_INT 99
1184: PUSH
1185: LD_INT 56
1187: PUSH
1188: EMPTY
1189: LIST
1190: LIST
1191: PUSH
1192: LD_INT 112
1194: PUSH
1195: LD_INT 66
1197: PUSH
1198: EMPTY
1199: LIST
1200: LIST
1201: PUSH
1202: LD_INT 129
1204: PUSH
1205: LD_INT 68
1207: PUSH
1208: EMPTY
1209: LIST
1210: LIST
1211: PUSH
1212: LD_INT 135
1214: PUSH
1215: LD_INT 62
1217: PUSH
1218: EMPTY
1219: LIST
1220: LIST
1221: PUSH
1222: LD_INT 156
1224: PUSH
1225: LD_INT 71
1227: PUSH
1228: EMPTY
1229: LIST
1230: LIST
1231: PUSH
1232: LD_INT 168
1234: PUSH
1235: LD_INT 76
1237: PUSH
1238: EMPTY
1239: LIST
1240: LIST
1241: PUSH
1242: LD_INT 168
1244: PUSH
1245: LD_INT 61
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: PUSH
1252: LD_INT 168
1254: PUSH
1255: LD_INT 75
1257: PUSH
1258: EMPTY
1259: LIST
1260: LIST
1261: PUSH
1262: LD_INT 185
1264: PUSH
1265: LD_INT 85
1267: PUSH
1268: EMPTY
1269: LIST
1270: LIST
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: LIST
1287: LIST
1288: LIST
1289: LIST
1290: LIST
1291: LIST
1292: LIST
1293: LIST
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: ST_TO_ADDR
// mobile_patrol := [ ] ;
1300: LD_ADDR_EXP 14
1304: PUSH
1305: EMPTY
1306: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1307: LD_INT 3
1309: PPUSH
1310: LD_INT 1
1312: PPUSH
1313: LD_INT 3
1315: PPUSH
1316: LD_INT 4
1318: PPUSH
1319: LD_INT 100
1321: PPUSH
1322: CALL 5150 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1326: LD_ADDR_EXP 14
1330: PUSH
1331: LD_EXP 14
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: CALL_OW 45
1343: PPUSH
1344: CALL_OW 2
1348: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1349: LD_EXP 14
1353: PUSH
1354: LD_INT 1
1356: ARRAY
1357: PPUSH
1358: LD_INT 99
1360: PPUSH
1361: LD_INT 55
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1371: LD_INT 2
1373: PPUSH
1374: LD_INT 1
1376: PPUSH
1377: LD_INT 3
1379: PPUSH
1380: LD_INT 4
1382: PPUSH
1383: LD_INT 100
1385: PPUSH
1386: CALL 5150 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1390: LD_ADDR_EXP 14
1394: PUSH
1395: LD_EXP 14
1399: PPUSH
1400: LD_INT 2
1402: PPUSH
1403: CALL_OW 45
1407: PPUSH
1408: CALL_OW 2
1412: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1413: LD_EXP 14
1417: PUSH
1418: LD_INT 2
1420: ARRAY
1421: PPUSH
1422: LD_INT 27
1424: PPUSH
1425: LD_INT 49
1427: PPUSH
1428: LD_INT 0
1430: PPUSH
1431: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1435: LD_INT 3
1437: PPUSH
1438: LD_INT 1
1440: PPUSH
1441: LD_INT 3
1443: PPUSH
1444: LD_INT 7
1446: PPUSH
1447: LD_INT 100
1449: PPUSH
1450: CALL 5150 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1454: LD_ADDR_EXP 14
1458: PUSH
1459: LD_EXP 14
1463: PPUSH
1464: LD_INT 3
1466: PPUSH
1467: CALL_OW 45
1471: PPUSH
1472: CALL_OW 2
1476: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1477: LD_EXP 14
1481: PUSH
1482: LD_INT 3
1484: ARRAY
1485: PPUSH
1486: LD_INT 200
1488: PPUSH
1489: LD_INT 88
1491: PPUSH
1492: LD_INT 0
1494: PPUSH
1495: CALL_OW 48
// for i = mobile_patrol downto 1 do
1499: LD_ADDR_VAR 0 2
1503: PUSH
1504: DOUBLE
1505: LD_EXP 14
1509: INC
1510: ST_TO_ADDR
1511: LD_INT 1
1513: PUSH
1514: FOR_DOWNTO
1515: IFFALSE 1526
// RaiseSailEvent ( 1 ) ;
1517: LD_INT 1
1519: PPUSH
1520: CALL_OW 427
1524: GO 1514
1526: POP
1527: POP
// end ;
1528: LD_VAR 0 1
1532: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1533: LD_INT 0
1535: PPUSH
1536: PPUSH
1537: PPUSH
1538: PPUSH
1539: PPUSH
1540: PPUSH
1541: PPUSH
1542: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1543: LD_ADDR_VAR 0 5
1547: PUSH
1548: LD_INT 20
1550: PUSH
1551: LD_INT 4
1553: PUSH
1554: EMPTY
1555: LIST
1556: LIST
1557: PUSH
1558: LD_INT 21
1560: PUSH
1561: LD_INT 5
1563: PUSH
1564: EMPTY
1565: LIST
1566: LIST
1567: PUSH
1568: LD_INT 22
1570: PUSH
1571: LD_INT 1
1573: PUSH
1574: EMPTY
1575: LIST
1576: LIST
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: LIST
1582: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1583: LD_ADDR_VAR 0 6
1587: PUSH
1588: LD_INT 176
1590: PUSH
1591: LD_INT 81
1593: PUSH
1594: LD_INT 135
1596: PUSH
1597: LD_INT 62
1599: PUSH
1600: LD_INT 114
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 93
1608: PUSH
1609: LD_INT 71
1611: PUSH
1612: LD_INT 76
1614: PUSH
1615: LD_INT 67
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: LIST
1622: LIST
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: PUSH
1630: LD_INT 107
1632: PUSH
1633: LD_INT 92
1635: PUSH
1636: LD_INT 92
1638: PUSH
1639: LD_INT 72
1641: PUSH
1642: LD_INT 77
1644: PUSH
1645: LD_INT 68
1647: PUSH
1648: EMPTY
1649: LIST
1650: LIST
1651: LIST
1652: LIST
1653: LIST
1654: LIST
1655: PUSH
1656: LD_INT 45
1658: PUSH
1659: LD_INT 49
1661: PUSH
1662: LD_INT 67
1664: PUSH
1665: LD_INT 59
1667: PUSH
1668: LD_INT 77
1670: PUSH
1671: LD_INT 68
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: LIST
1679: LIST
1680: LIST
1681: PUSH
1682: EMPTY
1683: LIST
1684: LIST
1685: LIST
1686: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1687: LD_ADDR_VAR 0 4
1691: PUSH
1692: LD_INT 1
1694: PPUSH
1695: LD_VAR 0 5
1699: PPUSH
1700: CALL_OW 12
1704: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1705: LD_ADDR_VAR 0 3
1709: PUSH
1710: LD_INT 1
1712: PPUSH
1713: LD_INT 2
1715: PPUSH
1716: CALL_OW 12
1720: ST_TO_ADDR
// uc_side := 1 ;
1721: LD_ADDR_OWVAR 20
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// uc_nation := 1 ;
1729: LD_ADDR_OWVAR 21
1733: PUSH
1734: LD_INT 1
1736: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1737: LD_INT 2
1739: PPUSH
1740: LD_INT 3
1742: PPUSH
1743: LD_INT 3
1745: PPUSH
1746: LD_INT 12
1748: PPUSH
1749: LD_INT 100
1751: PPUSH
1752: CALL 5150 0 5
// veh := CreateVehicle ;
1756: LD_ADDR_VAR 0 8
1760: PUSH
1761: CALL_OW 45
1765: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1766: LD_VAR 0 8
1770: PPUSH
1771: LD_VAR 0 5
1775: PUSH
1776: LD_VAR 0 4
1780: ARRAY
1781: PUSH
1782: LD_INT 2
1784: ARRAY
1785: PPUSH
1786: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1790: LD_VAR 0 8
1794: PPUSH
1795: LD_VAR 0 5
1799: PUSH
1800: LD_VAR 0 4
1804: ARRAY
1805: PUSH
1806: LD_INT 1
1808: ARRAY
1809: PPUSH
1810: LD_INT 0
1812: PPUSH
1813: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1817: LD_VAR 0 8
1821: PPUSH
1822: LD_INT 1
1824: PUSH
1825: LD_INT 3
1827: PUSH
1828: EMPTY
1829: LIST
1830: LIST
1831: PUSH
1832: LD_VAR 0 3
1836: ARRAY
1837: PPUSH
1838: LD_INT 100
1840: PPUSH
1841: CALL_OW 290
// tmp := road [ k ] ;
1845: LD_ADDR_VAR 0 7
1849: PUSH
1850: LD_VAR 0 6
1854: PUSH
1855: LD_VAR 0 4
1859: ARRAY
1860: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1861: LD_ADDR_VAR 0 2
1865: PUSH
1866: DOUBLE
1867: LD_INT 1
1869: DEC
1870: ST_TO_ADDR
1871: LD_VAR 0 7
1875: PUSH
1876: LD_INT 2
1878: DIV
1879: PUSH
1880: FOR_TO
1881: IFFALSE 1928
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_VAR 0 7
1892: PUSH
1893: LD_VAR 0 2
1897: PUSH
1898: LD_INT 2
1900: MUL
1901: PUSH
1902: LD_INT 1
1904: MINUS
1905: ARRAY
1906: PPUSH
1907: LD_VAR 0 7
1911: PUSH
1912: LD_VAR 0 2
1916: PUSH
1917: LD_INT 2
1919: MUL
1920: ARRAY
1921: PPUSH
1922: CALL_OW 171
1926: GO 1880
1928: POP
1929: POP
// AddComGive ( veh , alfa ) ;
1930: LD_VAR 0 8
1934: PPUSH
1935: LD_INT 5
1937: PPUSH
1938: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1942: LD_VAR 0 8
1946: PPUSH
1947: LD_INT 70
1949: PPUSH
1950: CALL_OW 202
// for i = tmp div 2 downto 1 do
1954: LD_ADDR_VAR 0 2
1958: PUSH
1959: DOUBLE
1960: LD_VAR 0 7
1964: PUSH
1965: LD_INT 2
1967: DIV
1968: INC
1969: ST_TO_ADDR
1970: LD_INT 1
1972: PUSH
1973: FOR_DOWNTO
1974: IFFALSE 2021
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1976: LD_VAR 0 8
1980: PPUSH
1981: LD_VAR 0 7
1985: PUSH
1986: LD_VAR 0 2
1990: PUSH
1991: LD_INT 2
1993: MUL
1994: PUSH
1995: LD_INT 1
1997: MINUS
1998: ARRAY
1999: PPUSH
2000: LD_VAR 0 7
2004: PUSH
2005: LD_VAR 0 2
2009: PUSH
2010: LD_INT 2
2012: MUL
2013: ARRAY
2014: PPUSH
2015: CALL_OW 171
2019: GO 1973
2021: POP
2022: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2023: LD_VAR 0 8
2027: PPUSH
2028: LD_VAR 0 5
2032: PUSH
2033: LD_VAR 0 4
2037: ARRAY
2038: PUSH
2039: LD_INT 1
2041: ARRAY
2042: PPUSH
2043: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2047: LD_INT 35
2049: PPUSH
2050: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2054: LD_VAR 0 8
2058: PPUSH
2059: LD_VAR 0 5
2063: PUSH
2064: LD_VAR 0 4
2068: ARRAY
2069: PUSH
2070: LD_INT 1
2072: ARRAY
2073: PPUSH
2074: CALL_OW 308
2078: PUSH
2079: LD_VAR 0 8
2083: PPUSH
2084: LD_VAR 0 3
2088: PPUSH
2089: CALL_OW 289
2093: PUSH
2094: LD_INT 0
2096: EQUAL
2097: AND
2098: IFFALSE 2047
// RemoveUnit ( veh ) ;
2100: LD_VAR 0 8
2104: PPUSH
2105: CALL_OW 64
// end ;
2109: LD_VAR 0 1
2113: RET
// every 3 3$00 do
2114: GO 2116
2116: DISABLE
// begin enable ;
2117: ENABLE
// SpawnCargo ;
2118: CALL 1533 0 0
// end ;
2122: END
// export function PrepareDefenders ; var i , tmp ; begin
2123: LD_INT 0
2125: PPUSH
2126: PPUSH
2127: PPUSH
// if defenders then
2128: LD_EXP 17
2132: IFFALSE 2136
// exit ;
2134: GO 2400
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2136: LD_ADDR_VAR 0 2
2140: PUSH
2141: DOUBLE
2142: LD_INT 1
2144: DEC
2145: ST_TO_ADDR
2146: LD_INT 4
2148: PUSH
2149: LD_INT 5
2151: PUSH
2152: LD_INT 6
2154: PUSH
2155: EMPTY
2156: LIST
2157: LIST
2158: LIST
2159: PUSH
2160: LD_OWVAR 67
2164: ARRAY
2165: PUSH
2166: FOR_TO
2167: IFFALSE 2306
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2169: LD_ADDR_VAR 0 3
2173: PUSH
2174: LD_INT 6
2176: PPUSH
2177: LD_INT 2
2179: PUSH
2180: LD_INT 3
2182: PUSH
2183: EMPTY
2184: LIST
2185: LIST
2186: PUSH
2187: LD_INT 1
2189: PPUSH
2190: LD_INT 2
2192: PPUSH
2193: CALL_OW 12
2197: ARRAY
2198: PPUSH
2199: LD_INT 1
2201: PUSH
2202: LD_INT 3
2204: PUSH
2205: EMPTY
2206: LIST
2207: LIST
2208: PUSH
2209: LD_INT 1
2211: PPUSH
2212: LD_INT 2
2214: PPUSH
2215: CALL_OW 12
2219: ARRAY
2220: PPUSH
2221: LD_INT 2
2223: PPUSH
2224: LD_INT 4
2226: PUSH
2227: LD_INT 5
2229: PUSH
2230: LD_INT 9
2232: PUSH
2233: EMPTY
2234: LIST
2235: LIST
2236: LIST
2237: PUSH
2238: LD_INT 1
2240: PPUSH
2241: LD_INT 3
2243: PPUSH
2244: CALL_OW 12
2248: ARRAY
2249: PPUSH
2250: CALL 27845 0 5
2254: ST_TO_ADDR
// if tmp then
2255: LD_VAR 0 3
2259: IFFALSE 2304
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2261: LD_INT 6
2263: PPUSH
2264: LD_VAR 0 3
2268: PUSH
2269: LD_INT 1
2271: ARRAY
2272: PPUSH
2273: LD_VAR 0 3
2277: PUSH
2278: LD_INT 2
2280: ARRAY
2281: PPUSH
2282: LD_VAR 0 3
2286: PUSH
2287: LD_INT 3
2289: ARRAY
2290: PPUSH
2291: LD_VAR 0 3
2295: PUSH
2296: LD_INT 4
2298: ARRAY
2299: PPUSH
2300: CALL_OW 185
// end ;
2304: GO 2166
2306: POP
2307: POP
// repeat wait ( 0 0$1 ) ;
2308: LD_INT 35
2310: PPUSH
2311: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2315: LD_INT 22
2317: PUSH
2318: LD_INT 1
2320: PUSH
2321: EMPTY
2322: LIST
2323: LIST
2324: PUSH
2325: LD_INT 33
2327: PUSH
2328: LD_INT 2
2330: PUSH
2331: EMPTY
2332: LIST
2333: LIST
2334: PUSH
2335: EMPTY
2336: LIST
2337: LIST
2338: PPUSH
2339: CALL_OW 69
2343: PUSH
2344: LD_INT 4
2346: PUSH
2347: LD_INT 5
2349: PUSH
2350: LD_INT 6
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: LIST
2357: PUSH
2358: LD_OWVAR 67
2362: ARRAY
2363: GREATEREQUAL
2364: IFFALSE 2308
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2366: LD_ADDR_EXP 17
2370: PUSH
2371: LD_INT 22
2373: PUSH
2374: LD_INT 1
2376: PUSH
2377: EMPTY
2378: LIST
2379: LIST
2380: PUSH
2381: LD_INT 33
2383: PUSH
2384: LD_INT 2
2386: PUSH
2387: EMPTY
2388: LIST
2389: LIST
2390: PUSH
2391: EMPTY
2392: LIST
2393: LIST
2394: PPUSH
2395: CALL_OW 69
2399: ST_TO_ADDR
// end ;
2400: LD_VAR 0 1
2404: RET
// export function Defend ; var i , un , veh , tmp ; begin
2405: LD_INT 0
2407: PPUSH
2408: PPUSH
2409: PPUSH
2410: PPUSH
2411: PPUSH
// defcon_wave := defcon_wave + 1 ;
2412: LD_ADDR_EXP 19
2416: PUSH
2417: LD_EXP 19
2421: PUSH
2422: LD_INT 1
2424: PLUS
2425: ST_TO_ADDR
// if not defenders then
2426: LD_EXP 17
2430: NOT
2431: IFFALSE 2437
// PrepareDefenders ;
2433: CALL 2123 0 0
// if defcon_wave > 1 then
2437: LD_EXP 19
2441: PUSH
2442: LD_INT 1
2444: GREATER
2445: IFFALSE 2671
// begin for i = 1 to defcon_wave + 2 do
2447: LD_ADDR_VAR 0 2
2451: PUSH
2452: DOUBLE
2453: LD_INT 1
2455: DEC
2456: ST_TO_ADDR
2457: LD_EXP 19
2461: PUSH
2462: LD_INT 2
2464: PLUS
2465: PUSH
2466: FOR_TO
2467: IFFALSE 2593
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2469: LD_INT 4
2471: PPUSH
2472: LD_INT 3
2474: PPUSH
2475: LD_INT 1
2477: PPUSH
2478: LD_INT 4
2480: PUSH
2481: LD_INT 6
2483: PUSH
2484: LD_INT 7
2486: PUSH
2487: EMPTY
2488: LIST
2489: LIST
2490: LIST
2491: PUSH
2492: LD_INT 1
2494: PPUSH
2495: LD_INT 3
2497: PPUSH
2498: CALL_OW 12
2502: ARRAY
2503: PPUSH
2504: LD_INT 100
2506: PPUSH
2507: CALL 5150 0 5
// veh := CreateVehicle ;
2511: LD_ADDR_VAR 0 4
2515: PUSH
2516: CALL_OW 45
2520: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2521: LD_VAR 0 4
2525: PPUSH
2526: LD_INT 1
2528: PPUSH
2529: CALL_OW 233
// defenders := defenders ^ veh ;
2533: LD_ADDR_EXP 17
2537: PUSH
2538: LD_EXP 17
2542: PUSH
2543: LD_VAR 0 4
2547: ADD
2548: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2549: LD_INT 0
2551: PPUSH
2552: LD_INT 3
2554: PPUSH
2555: LD_INT 9
2557: PPUSH
2558: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2562: CALL_OW 44
2566: PPUSH
2567: LD_VAR 0 4
2571: PPUSH
2572: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2576: LD_VAR 0 4
2580: PPUSH
2581: LD_INT 25
2583: PPUSH
2584: LD_INT 0
2586: PPUSH
2587: CALL_OW 49
// end ;
2591: GO 2466
2593: POP
2594: POP
// for i = 1 to defcon_wave do
2595: LD_ADDR_VAR 0 2
2599: PUSH
2600: DOUBLE
2601: LD_INT 1
2603: DEC
2604: ST_TO_ADDR
2605: LD_EXP 19
2609: PUSH
2610: FOR_TO
2611: IFFALSE 2669
// begin PrepareHuman ( false , 5 , 9 ) ;
2613: LD_INT 0
2615: PPUSH
2616: LD_INT 5
2618: PPUSH
2619: LD_INT 9
2621: PPUSH
2622: CALL_OW 380
// un := CreateHuman ;
2626: LD_ADDR_VAR 0 3
2630: PUSH
2631: CALL_OW 44
2635: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2636: LD_VAR 0 3
2640: PPUSH
2641: LD_INT 25
2643: PPUSH
2644: LD_INT 0
2646: PPUSH
2647: CALL_OW 49
// defenders := defenders ^ un ;
2651: LD_ADDR_EXP 17
2655: PUSH
2656: LD_EXP 17
2660: PUSH
2661: LD_VAR 0 3
2665: ADD
2666: ST_TO_ADDR
// end ;
2667: GO 2610
2669: POP
2670: POP
// end ; repeat wait ( 0 0$1 ) ;
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 67
// for i in defenders do
2678: LD_ADDR_VAR 0 2
2682: PUSH
2683: LD_EXP 17
2687: PUSH
2688: FOR_IN
2689: IFFALSE 2771
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2691: LD_EXP 18
2695: PUSH
2696: LD_VAR 0 2
2700: PPUSH
2701: LD_EXP 18
2705: PUSH
2706: LD_INT 1
2708: ARRAY
2709: PPUSH
2710: LD_EXP 18
2714: PUSH
2715: LD_INT 2
2717: ARRAY
2718: PPUSH
2719: CALL_OW 297
2723: PUSH
2724: LD_INT 10
2726: GREATER
2727: AND
2728: PUSH
2729: LD_VAR 0 2
2733: PPUSH
2734: CALL_OW 314
2738: NOT
2739: AND
2740: IFFALSE 2769
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2742: LD_VAR 0 2
2746: PPUSH
2747: LD_EXP 18
2751: PUSH
2752: LD_INT 1
2754: ARRAY
2755: PPUSH
2756: LD_EXP 18
2760: PUSH
2761: LD_INT 2
2763: ARRAY
2764: PPUSH
2765: CALL_OW 114
// end ;
2769: GO 2688
2771: POP
2772: POP
// until not defenders ;
2773: LD_EXP 17
2777: NOT
2778: IFFALSE 2671
// end ; end_of_file
2780: LD_VAR 0 1
2784: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2785: LD_INT 0
2787: PPUSH
2788: PPUSH
2789: PPUSH
2790: PPUSH
2791: PPUSH
2792: PPUSH
2793: PPUSH
// uc_side := 4 ;
2794: LD_ADDR_OWVAR 20
2798: PUSH
2799: LD_INT 4
2801: ST_TO_ADDR
// uc_nation := 1 ;
2802: LD_ADDR_OWVAR 21
2806: PUSH
2807: LD_INT 1
2809: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2810: LD_ADDR_EXP 34
2814: PUSH
2815: LD_STRING DeltaDoctor
2817: PPUSH
2818: LD_EXP 1
2822: NOT
2823: PPUSH
2824: LD_STRING 10c_
2826: PPUSH
2827: CALL 5087 0 3
2831: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2832: LD_ADDR_EXP 33
2836: PUSH
2837: LD_STRING Joan
2839: PPUSH
2840: LD_EXP 1
2844: NOT
2845: PPUSH
2846: LD_STRING 10c_
2848: PPUSH
2849: CALL 5087 0 3
2853: ST_TO_ADDR
// if Joan then
2854: LD_EXP 33
2858: IFFALSE 2889
// friends := Insert ( friends , friends + 1 , Joan ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_EXP 4
2869: PPUSH
2870: LD_EXP 4
2874: PUSH
2875: LD_INT 1
2877: PLUS
2878: PPUSH
2879: LD_EXP 33
2883: PPUSH
2884: CALL_OW 2
2888: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2889: LD_ADDR_EXP 32
2893: PUSH
2894: LD_STRING Simms
2896: PPUSH
2897: LD_EXP 1
2901: NOT
2902: PPUSH
2903: LD_STRING 10c_
2905: PPUSH
2906: CALL 5087 0 3
2910: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2911: LD_ADDR_EXP 31
2915: PUSH
2916: LD_STRING Kikuchi
2918: PPUSH
2919: LD_EXP 1
2923: NOT
2924: PPUSH
2925: LD_STRING 11_
2927: PPUSH
2928: CALL 5087 0 3
2932: ST_TO_ADDR
// if Kikuchi then
2933: LD_EXP 31
2937: IFFALSE 2968
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2939: LD_ADDR_EXP 4
2943: PUSH
2944: LD_EXP 4
2948: PPUSH
2949: LD_EXP 4
2953: PUSH
2954: LD_INT 1
2956: PLUS
2957: PPUSH
2958: LD_EXP 31
2962: PPUSH
2963: CALL_OW 2
2967: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2968: LD_ADDR_EXP 30
2972: PUSH
2973: LD_STRING Frank
2975: PPUSH
2976: LD_EXP 1
2980: NOT
2981: PPUSH
2982: LD_STRING 11_
2984: PPUSH
2985: CALL 5087 0 3
2989: ST_TO_ADDR
// if Frank then
2990: LD_EXP 30
2994: IFFALSE 3025
// friends := Insert ( friends , friends + 1 , Frank ) ;
2996: LD_ADDR_EXP 4
3000: PUSH
3001: LD_EXP 4
3005: PPUSH
3006: LD_EXP 4
3010: PUSH
3011: LD_INT 1
3013: PLUS
3014: PPUSH
3015: LD_EXP 30
3019: PPUSH
3020: CALL_OW 2
3024: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3025: LD_ADDR_EXP 29
3029: PUSH
3030: LD_STRING Gary
3032: PPUSH
3033: LD_EXP 1
3037: NOT
3038: PPUSH
3039: LD_STRING 11_
3041: PPUSH
3042: CALL 5087 0 3
3046: ST_TO_ADDR
// if Gary then
3047: LD_EXP 29
3051: IFFALSE 3082
// friends := Insert ( friends , friends + 1 , Gary ) ;
3053: LD_ADDR_EXP 4
3057: PUSH
3058: LD_EXP 4
3062: PPUSH
3063: LD_EXP 4
3067: PUSH
3068: LD_INT 1
3070: PLUS
3071: PPUSH
3072: LD_EXP 29
3076: PPUSH
3077: CALL_OW 2
3081: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3082: LD_ADDR_EXP 28
3086: PUSH
3087: LD_STRING Cornell
3089: PPUSH
3090: LD_EXP 1
3094: NOT
3095: PPUSH
3096: LD_STRING 11_
3098: PPUSH
3099: CALL 5087 0 3
3103: ST_TO_ADDR
// if Cornel then
3104: LD_EXP 28
3108: IFFALSE 3139
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3110: LD_ADDR_EXP 4
3114: PUSH
3115: LD_EXP 4
3119: PPUSH
3120: LD_EXP 4
3124: PUSH
3125: LD_INT 1
3127: PLUS
3128: PPUSH
3129: LD_EXP 28
3133: PPUSH
3134: CALL_OW 2
3138: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3139: LD_ADDR_EXP 27
3143: PUSH
3144: LD_STRING Houten
3146: PPUSH
3147: LD_EXP 1
3151: NOT
3152: PPUSH
3153: LD_STRING 11_
3155: PPUSH
3156: CALL 5087 0 3
3160: ST_TO_ADDR
// if Houten then
3161: LD_EXP 27
3165: IFFALSE 3196
// friends := Insert ( friends , friends + 1 , Houten ) ;
3167: LD_ADDR_EXP 4
3171: PUSH
3172: LD_EXP 4
3176: PPUSH
3177: LD_EXP 4
3181: PUSH
3182: LD_INT 1
3184: PLUS
3185: PPUSH
3186: LD_EXP 27
3190: PPUSH
3191: CALL_OW 2
3195: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3196: LD_ADDR_EXP 26
3200: PUSH
3201: LD_STRING Gladstone
3203: PPUSH
3204: LD_EXP 1
3208: NOT
3209: PPUSH
3210: LD_STRING 11_
3212: PPUSH
3213: CALL 5087 0 3
3217: ST_TO_ADDR
// if Gladstone then
3218: LD_EXP 26
3222: IFFALSE 3253
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3224: LD_ADDR_EXP 4
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: LD_EXP 4
3238: PUSH
3239: LD_INT 1
3241: PLUS
3242: PPUSH
3243: LD_EXP 26
3247: PPUSH
3248: CALL_OW 2
3252: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3253: LD_ADDR_EXP 20
3257: PUSH
3258: LD_STRING Lisa
3260: PPUSH
3261: LD_EXP 1
3265: NOT
3266: PPUSH
3267: LD_STRING 11_
3269: PPUSH
3270: CALL 5087 0 3
3274: ST_TO_ADDR
// if Lisa then
3275: LD_EXP 20
3279: IFFALSE 3304
// friends := Insert ( friends , 1 , Lisa ) ;
3281: LD_ADDR_EXP 4
3285: PUSH
3286: LD_EXP 4
3290: PPUSH
3291: LD_INT 1
3293: PPUSH
3294: LD_EXP 20
3298: PPUSH
3299: CALL_OW 2
3303: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3304: LD_ADDR_EXP 21
3308: PUSH
3309: LD_STRING Donaldson
3311: PPUSH
3312: LD_EXP 1
3316: NOT
3317: PPUSH
3318: LD_STRING 11_
3320: PPUSH
3321: CALL 5087 0 3
3325: ST_TO_ADDR
// if Donaldson then
3326: LD_EXP 21
3330: IFFALSE 3361
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: LD_EXP 21
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3361: LD_ADDR_EXP 22
3365: PUSH
3366: LD_STRING Bobby
3368: PPUSH
3369: LD_EXP 1
3373: NOT
3374: PPUSH
3375: LD_STRING 11_
3377: PPUSH
3378: CALL 5087 0 3
3382: ST_TO_ADDR
// if Bobby then
3383: LD_EXP 22
3387: IFFALSE 3418
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3389: LD_ADDR_EXP 4
3393: PUSH
3394: LD_EXP 4
3398: PPUSH
3399: LD_EXP 4
3403: PUSH
3404: LD_INT 1
3406: PLUS
3407: PPUSH
3408: LD_EXP 22
3412: PPUSH
3413: CALL_OW 2
3417: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3418: LD_ADDR_EXP 23
3422: PUSH
3423: LD_STRING Cyrus
3425: PPUSH
3426: LD_EXP 1
3430: NOT
3431: PPUSH
3432: LD_STRING 11_
3434: PPUSH
3435: CALL 5087 0 3
3439: ST_TO_ADDR
// if Cyrus then
3440: LD_EXP 23
3444: IFFALSE 3475
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3446: LD_ADDR_EXP 4
3450: PUSH
3451: LD_EXP 4
3455: PPUSH
3456: LD_EXP 4
3460: PUSH
3461: LD_INT 1
3463: PLUS
3464: PPUSH
3465: LD_EXP 23
3469: PPUSH
3470: CALL_OW 2
3474: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3475: LD_ADDR_EXP 24
3479: PUSH
3480: LD_STRING Denis
3482: PPUSH
3483: LD_EXP 1
3487: NOT
3488: PPUSH
3489: LD_STRING 11_
3491: PPUSH
3492: CALL 5087 0 3
3496: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3497: LD_ADDR_EXP 25
3501: PUSH
3502: LD_STRING Brown
3504: PPUSH
3505: LD_EXP 1
3509: NOT
3510: PPUSH
3511: LD_STRING 11_
3513: PPUSH
3514: CALL 5087 0 3
3518: ST_TO_ADDR
// if Brown then
3519: LD_EXP 25
3523: IFFALSE 3554
// friends := Insert ( friends , friends + 1 , Brown ) ;
3525: LD_ADDR_EXP 4
3529: PUSH
3530: LD_EXP 4
3534: PPUSH
3535: LD_EXP 4
3539: PUSH
3540: LD_INT 1
3542: PLUS
3543: PPUSH
3544: LD_EXP 25
3548: PPUSH
3549: CALL_OW 2
3553: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
3554: LD_ADDR_EXP 4
3558: PUSH
3559: LD_EXP 4
3563: PUSH
3564: LD_STRING 11c_others
3566: PPUSH
3567: CALL_OW 31
3571: ADD
3572: PUSH
3573: LD_STRING 11_others
3575: PPUSH
3576: CALL_OW 31
3580: ADD
3581: ST_TO_ADDR
// if friends < 10 then
3582: LD_EXP 4
3586: PUSH
3587: LD_INT 10
3589: LESS
3590: IFFALSE 3662
// for i = 1 to 10 do
3592: LD_ADDR_VAR 0 2
3596: PUSH
3597: DOUBLE
3598: LD_INT 1
3600: DEC
3601: ST_TO_ADDR
3602: LD_INT 10
3604: PUSH
3605: FOR_TO
3606: IFFALSE 3660
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3608: LD_INT 0
3610: PPUSH
3611: LD_INT 1
3613: PPUSH
3614: LD_INT 4
3616: PPUSH
3617: CALL_OW 12
3621: PPUSH
3622: LD_INT 7
3624: PPUSH
3625: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3629: LD_ADDR_EXP 4
3633: PUSH
3634: LD_EXP 4
3638: PPUSH
3639: LD_EXP 4
3643: PUSH
3644: LD_INT 1
3646: PLUS
3647: PPUSH
3648: CALL_OW 44
3652: PPUSH
3653: CALL_OW 2
3657: ST_TO_ADDR
// end ;
3658: GO 3605
3660: POP
3661: POP
// for i in friends do
3662: LD_ADDR_VAR 0 2
3666: PUSH
3667: LD_EXP 4
3671: PUSH
3672: FOR_IN
3673: IFFALSE 3731
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3675: LD_VAR 0 2
3679: PPUSH
3680: LD_INT 1
3682: PPUSH
3683: CALL_OW 259
3687: PUSH
3688: LD_VAR 0 2
3692: PPUSH
3693: LD_INT 4
3695: PPUSH
3696: CALL_OW 259
3700: GREATEREQUAL
3701: IFFALSE 3717
// SetClass ( i , class_soldier ) else
3703: LD_VAR 0 2
3707: PPUSH
3708: LD_INT 1
3710: PPUSH
3711: CALL_OW 336
3715: GO 3729
// SetClass ( i , class_scientistic ) ;
3717: LD_VAR 0 2
3721: PPUSH
3722: LD_INT 4
3724: PPUSH
3725: CALL_OW 336
3729: GO 3672
3731: POP
3732: POP
// if Frank then
3733: LD_EXP 30
3737: IFFALSE 3751
// SetClass ( Frank , class_sniper ) ;
3739: LD_EXP 30
3743: PPUSH
3744: LD_INT 5
3746: PPUSH
3747: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3751: LD_EXP 33
3755: PUSH
3756: LD_EXP 24
3760: PUSH
3761: LD_EXP 34
3765: PUSH
3766: LD_EXP 32
3770: PUSH
3771: EMPTY
3772: LIST
3773: LIST
3774: LIST
3775: LIST
3776: PPUSH
3777: LD_INT 4
3779: PPUSH
3780: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
3784: LD_ADDR_EXP 3
3788: PUSH
3789: LD_STRING 
3791: PPUSH
3792: LD_INT 7
3794: PPUSH
3795: LD_INT 7
3797: PPUSH
3798: LD_INT -6
3800: PUSH
3801: LD_EXP 11
3805: PUSH
3806: LD_EXP 12
3810: PUSH
3811: LD_EXP 32
3815: PUSH
3816: LD_EXP 24
3820: PUSH
3821: LD_EXP 34
3825: PUSH
3826: LD_INT -2
3828: PUSH
3829: LD_INT -3
3831: PUSH
3832: LD_INT -5
3834: PUSH
3835: EMPTY
3836: LIST
3837: LIST
3838: LIST
3839: LIST
3840: LIST
3841: LIST
3842: LIST
3843: LIST
3844: LIST
3845: PUSH
3846: LD_EXP 4
3850: ADD
3851: PPUSH
3852: LD_INT 1
3854: PUSH
3855: LD_INT 4
3857: PUSH
3858: LD_INT 2
3860: PUSH
3861: EMPTY
3862: LIST
3863: LIST
3864: PUSH
3865: LD_INT 5
3867: PUSH
3868: LD_INT 0
3870: PUSH
3871: LD_INT 3
3873: PUSH
3874: EMPTY
3875: LIST
3876: LIST
3877: LIST
3878: PUSH
3879: EMPTY
3880: LIST
3881: LIST
3882: LIST
3883: PPUSH
3884: CALL_OW 42
3888: ST_TO_ADDR
// selected := selected union [ DeltaDoctor , Denis , Simms ] ;
3889: LD_ADDR_EXP 3
3893: PUSH
3894: LD_EXP 3
3898: PUSH
3899: LD_EXP 34
3903: PUSH
3904: LD_EXP 24
3908: PUSH
3909: LD_EXP 32
3913: PUSH
3914: EMPTY
3915: LIST
3916: LIST
3917: LIST
3918: UNION
3919: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3920: LD_ADDR_EXP 5
3924: PUSH
3925: LD_EXP 4
3929: PUSH
3930: LD_EXP 11
3934: PUSH
3935: LD_EXP 12
3939: PUSH
3940: LD_EXP 20
3944: PUSH
3945: LD_EXP 21
3949: PUSH
3950: LD_EXP 22
3954: PUSH
3955: LD_EXP 23
3959: PUSH
3960: LD_EXP 24
3964: PUSH
3965: LD_EXP 25
3969: PUSH
3970: LD_EXP 26
3974: PUSH
3975: LD_EXP 27
3979: PUSH
3980: LD_EXP 28
3984: PUSH
3985: LD_EXP 29
3989: PUSH
3990: LD_EXP 30
3994: PUSH
3995: LD_EXP 31
3999: PUSH
4000: LD_EXP 32
4004: PUSH
4005: LD_EXP 33
4009: PUSH
4010: LD_EXP 34
4014: PUSH
4015: EMPTY
4016: LIST
4017: LIST
4018: LIST
4019: LIST
4020: LIST
4021: LIST
4022: LIST
4023: LIST
4024: LIST
4025: LIST
4026: LIST
4027: LIST
4028: LIST
4029: LIST
4030: LIST
4031: LIST
4032: LIST
4033: PUSH
4034: LD_EXP 3
4038: ADD
4039: DIFF
4040: ST_TO_ADDR
// friends := friends diff others ;
4041: LD_ADDR_EXP 4
4045: PUSH
4046: LD_EXP 4
4050: PUSH
4051: LD_EXP 5
4055: DIFF
4056: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4057: LD_ADDR_VAR 0 4
4061: PUSH
4062: LD_INT 111
4064: PUSH
4065: LD_INT 137
4067: PUSH
4068: LD_INT 51
4070: PUSH
4071: EMPTY
4072: LIST
4073: LIST
4074: LIST
4075: PUSH
4076: LD_INT 147
4078: PUSH
4079: LD_INT 129
4081: PUSH
4082: LD_INT 25
4084: PUSH
4085: EMPTY
4086: LIST
4087: LIST
4088: LIST
4089: PUSH
4090: EMPTY
4091: LIST
4092: LIST
4093: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4094: LD_ADDR_VAR 0 5
4098: PUSH
4099: LD_INT 5
4101: PUSH
4102: LD_INT 6
4104: PUSH
4105: LD_INT 7
4107: PUSH
4108: LD_INT 8
4110: PUSH
4111: LD_INT 17
4113: PUSH
4114: LD_INT 18
4116: PUSH
4117: EMPTY
4118: LIST
4119: LIST
4120: LIST
4121: LIST
4122: LIST
4123: LIST
4124: ST_TO_ADDR
// for i in buildings do
4125: LD_ADDR_VAR 0 2
4129: PUSH
4130: LD_VAR 0 4
4134: PUSH
4135: FOR_IN
4136: IFFALSE 4152
// SetSide ( i , 4 ) ;
4138: LD_VAR 0 2
4142: PPUSH
4143: LD_INT 4
4145: PPUSH
4146: CALL_OW 235
4150: GO 4135
4152: POP
4153: POP
// for i in selected do
4154: LD_ADDR_VAR 0 2
4158: PUSH
4159: LD_EXP 3
4163: PUSH
4164: FOR_IN
4165: IFFALSE 4427
// begin if GetClass ( i ) in [ 1 , 5 ] then
4167: LD_VAR 0 2
4171: PPUSH
4172: CALL_OW 257
4176: PUSH
4177: LD_INT 1
4179: PUSH
4180: LD_INT 5
4182: PUSH
4183: EMPTY
4184: LIST
4185: LIST
4186: IN
4187: IFFALSE 4308
// begin if buildings [ 1 ] then
4189: LD_VAR 0 4
4193: PUSH
4194: LD_INT 1
4196: ARRAY
4197: IFFALSE 4258
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4199: LD_VAR 0 2
4203: PPUSH
4204: LD_VAR 0 4
4208: PUSH
4209: LD_INT 1
4211: ARRAY
4212: PUSH
4213: LD_INT 1
4215: ARRAY
4216: PPUSH
4217: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4221: LD_ADDR_VAR 0 4
4225: PUSH
4226: LD_VAR 0 4
4230: PPUSH
4231: LD_INT 1
4233: PPUSH
4234: LD_VAR 0 4
4238: PUSH
4239: LD_INT 1
4241: ARRAY
4242: PPUSH
4243: LD_INT 1
4245: PPUSH
4246: CALL_OW 3
4250: PPUSH
4251: CALL_OW 1
4255: ST_TO_ADDR
// end else
4256: GO 4306
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4258: LD_VAR 0 2
4262: PPUSH
4263: LD_VAR 0 5
4267: PUSH
4268: LD_INT 1
4270: ARRAY
4271: PPUSH
4272: LD_INT 0
4274: PPUSH
4275: CALL_OW 49
// ComHold ( i ) ;
4279: LD_VAR 0 2
4283: PPUSH
4284: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4288: LD_ADDR_VAR 0 5
4292: PUSH
4293: LD_VAR 0 5
4297: PPUSH
4298: LD_INT 1
4300: PPUSH
4301: CALL_OW 3
4305: ST_TO_ADDR
// end ; end else
4306: GO 4425
// begin if buildings [ 2 ] then
4308: LD_VAR 0 4
4312: PUSH
4313: LD_INT 2
4315: ARRAY
4316: IFFALSE 4377
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4318: LD_VAR 0 2
4322: PPUSH
4323: LD_VAR 0 4
4327: PUSH
4328: LD_INT 2
4330: ARRAY
4331: PUSH
4332: LD_INT 1
4334: ARRAY
4335: PPUSH
4336: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4340: LD_ADDR_VAR 0 4
4344: PUSH
4345: LD_VAR 0 4
4349: PPUSH
4350: LD_INT 2
4352: PPUSH
4353: LD_VAR 0 4
4357: PUSH
4358: LD_INT 2
4360: ARRAY
4361: PPUSH
4362: LD_INT 1
4364: PPUSH
4365: CALL_OW 3
4369: PPUSH
4370: CALL_OW 1
4374: ST_TO_ADDR
// end else
4375: GO 4425
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4377: LD_VAR 0 2
4381: PPUSH
4382: LD_VAR 0 5
4386: PUSH
4387: LD_INT 1
4389: ARRAY
4390: PPUSH
4391: LD_INT 0
4393: PPUSH
4394: CALL_OW 49
// ComHold ( i ) ;
4398: LD_VAR 0 2
4402: PPUSH
4403: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4407: LD_ADDR_VAR 0 5
4411: PUSH
4412: LD_VAR 0 5
4416: PPUSH
4417: LD_INT 1
4419: PPUSH
4420: CALL_OW 3
4424: ST_TO_ADDR
// end ; end ; end ;
4425: GO 4164
4427: POP
4428: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4429: LD_ADDR_VAR 0 6
4433: PUSH
4434: LD_INT 22
4436: PUSH
4437: LD_INT 1
4439: PUSH
4440: EMPTY
4441: LIST
4442: LIST
4443: PUSH
4444: LD_INT 30
4446: PUSH
4447: LD_INT 32
4449: PUSH
4450: EMPTY
4451: LIST
4452: LIST
4453: PUSH
4454: EMPTY
4455: LIST
4456: LIST
4457: PPUSH
4458: CALL_OW 69
4462: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4463: LD_ADDR_VAR 0 2
4467: PUSH
4468: DOUBLE
4469: LD_VAR 0 6
4473: PUSH
4474: LD_EXP 5
4478: MINUS
4479: INC
4480: ST_TO_ADDR
4481: LD_INT 1
4483: PUSH
4484: FOR_DOWNTO
4485: IFFALSE 4548
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4487: LD_INT 0
4489: PPUSH
4490: LD_INT 1
4492: PPUSH
4493: LD_INT 7
4495: PUSH
4496: LD_INT 8
4498: PUSH
4499: LD_INT 9
4501: PUSH
4502: EMPTY
4503: LIST
4504: LIST
4505: LIST
4506: PUSH
4507: LD_OWVAR 67
4511: ARRAY
4512: PPUSH
4513: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4517: LD_ADDR_EXP 5
4521: PUSH
4522: LD_EXP 5
4526: PPUSH
4527: LD_EXP 5
4531: PUSH
4532: LD_INT 1
4534: PLUS
4535: PPUSH
4536: CALL_OW 44
4540: PPUSH
4541: CALL_OW 2
4545: ST_TO_ADDR
// end ;
4546: GO 4484
4548: POP
4549: POP
// if others then
4550: LD_EXP 5
4554: IFFALSE 4660
// for i = 1 to bunkers do
4556: LD_ADDR_VAR 0 2
4560: PUSH
4561: DOUBLE
4562: LD_INT 1
4564: DEC
4565: ST_TO_ADDR
4566: LD_VAR 0 6
4570: PUSH
4571: FOR_TO
4572: IFFALSE 4658
// begin SetSide ( others [ others ] , 1 ) ;
4574: LD_EXP 5
4578: PUSH
4579: LD_EXP 5
4583: ARRAY
4584: PPUSH
4585: LD_INT 1
4587: PPUSH
4588: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4592: LD_EXP 5
4596: PUSH
4597: LD_EXP 5
4601: ARRAY
4602: PPUSH
4603: LD_INT 1
4605: PPUSH
4606: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4610: LD_EXP 5
4614: PUSH
4615: LD_EXP 5
4619: ARRAY
4620: PPUSH
4621: LD_VAR 0 6
4625: PUSH
4626: LD_VAR 0 2
4630: ARRAY
4631: PPUSH
4632: CALL_OW 52
// others := Delete ( others , others ) ;
4636: LD_ADDR_EXP 5
4640: PUSH
4641: LD_EXP 5
4645: PPUSH
4646: LD_EXP 5
4650: PPUSH
4651: CALL_OW 3
4655: ST_TO_ADDR
// end ;
4656: GO 4571
4658: POP
4659: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4660: LD_ADDR_VAR 0 5
4664: PUSH
4665: LD_VAR 0 5
4669: PUSH
4670: LD_INT 9
4672: PUSH
4673: LD_INT 10
4675: PUSH
4676: LD_INT 11
4678: PUSH
4679: LD_INT 12
4681: PUSH
4682: LD_INT 13
4684: PUSH
4685: LD_INT 14
4687: PUSH
4688: LD_INT 15
4690: PUSH
4691: LD_INT 16
4693: PUSH
4694: EMPTY
4695: LIST
4696: LIST
4697: LIST
4698: LIST
4699: LIST
4700: LIST
4701: LIST
4702: LIST
4703: UNION
4704: ST_TO_ADDR
// for i in friends ^ others do
4705: LD_ADDR_VAR 0 2
4709: PUSH
4710: LD_EXP 4
4714: PUSH
4715: LD_EXP 5
4719: ADD
4720: PUSH
4721: FOR_IN
4722: IFFALSE 5062
// begin SetTag ( i , 2 ) ;
4724: LD_VAR 0 2
4728: PPUSH
4729: LD_INT 2
4731: PPUSH
4732: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4736: LD_VAR 0 2
4740: PUSH
4741: LD_EXP 4
4745: IN
4746: PUSH
4747: LD_VAR 0 2
4751: PPUSH
4752: CALL_OW 257
4756: PUSH
4757: LD_INT 1
4759: EQUAL
4760: AND
4761: PUSH
4762: LD_VAR 0 2
4766: PUSH
4767: LD_EXP 5
4771: IN
4772: OR
4773: PUSH
4774: LD_VAR 0 4
4778: PUSH
4779: LD_INT 1
4781: ARRAY
4782: AND
4783: IFFALSE 4856
// begin SetClass ( i , 1 ) ;
4785: LD_VAR 0 2
4789: PPUSH
4790: LD_INT 1
4792: PPUSH
4793: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4797: LD_VAR 0 2
4801: PPUSH
4802: LD_VAR 0 4
4806: PUSH
4807: LD_INT 1
4809: ARRAY
4810: PUSH
4811: LD_INT 1
4813: ARRAY
4814: PPUSH
4815: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4819: LD_ADDR_VAR 0 4
4823: PUSH
4824: LD_VAR 0 4
4828: PPUSH
4829: LD_INT 1
4831: PPUSH
4832: LD_VAR 0 4
4836: PUSH
4837: LD_INT 1
4839: ARRAY
4840: PPUSH
4841: LD_INT 1
4843: PPUSH
4844: CALL_OW 3
4848: PPUSH
4849: CALL_OW 1
4853: ST_TO_ADDR
// continue ;
4854: GO 4721
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4856: LD_VAR 0 2
4860: PUSH
4861: LD_EXP 4
4865: IN
4866: PUSH
4867: LD_VAR 0 2
4871: PPUSH
4872: CALL_OW 257
4876: PUSH
4877: LD_INT 4
4879: EQUAL
4880: AND
4881: PUSH
4882: LD_VAR 0 2
4886: PUSH
4887: LD_EXP 5
4891: IN
4892: OR
4893: PUSH
4894: LD_VAR 0 4
4898: PUSH
4899: LD_INT 2
4901: ARRAY
4902: AND
4903: IFFALSE 4976
// begin SetClass ( i , 4 ) ;
4905: LD_VAR 0 2
4909: PPUSH
4910: LD_INT 4
4912: PPUSH
4913: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4917: LD_VAR 0 2
4921: PPUSH
4922: LD_VAR 0 4
4926: PUSH
4927: LD_INT 2
4929: ARRAY
4930: PUSH
4931: LD_INT 1
4933: ARRAY
4934: PPUSH
4935: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4939: LD_ADDR_VAR 0 4
4943: PUSH
4944: LD_VAR 0 4
4948: PPUSH
4949: LD_INT 2
4951: PPUSH
4952: LD_VAR 0 4
4956: PUSH
4957: LD_INT 2
4959: ARRAY
4960: PPUSH
4961: LD_INT 1
4963: PPUSH
4964: CALL_OW 3
4968: PPUSH
4969: CALL_OW 1
4973: ST_TO_ADDR
// continue ;
4974: GO 4721
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4976: LD_VAR 0 2
4980: PPUSH
4981: LD_VAR 0 5
4985: PUSH
4986: LD_INT 1
4988: ARRAY
4989: PPUSH
4990: LD_INT 0
4992: PPUSH
4993: CALL_OW 49
// if GetClass ( i ) <> 4 then
4997: LD_VAR 0 2
5001: PPUSH
5002: CALL_OW 257
5006: PUSH
5007: LD_INT 4
5009: NONEQUAL
5010: IFFALSE 5024
// SetClass ( i , 1 ) ;
5012: LD_VAR 0 2
5016: PPUSH
5017: LD_INT 1
5019: PPUSH
5020: CALL_OW 336
// ComHold ( i ) ;
5024: LD_VAR 0 2
5028: PPUSH
5029: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5033: LD_ADDR_VAR 0 5
5037: PUSH
5038: LD_VAR 0 5
5042: PPUSH
5043: LD_INT 1
5045: PPUSH
5046: CALL_OW 3
5050: ST_TO_ADDR
// if not areas then
5051: LD_VAR 0 5
5055: NOT
5056: IFFALSE 5060
// break ;
5058: GO 5062
// end ;
5060: GO 4721
5062: POP
5063: POP
// if Frank then
5064: LD_EXP 30
5068: IFFALSE 5082
// SetClass ( Frank , class_sniper ) ;
5070: LD_EXP 30
5074: PPUSH
5075: LD_INT 5
5077: PPUSH
5078: CALL_OW 336
// end ; end_of_file
5082: LD_VAR 0 1
5086: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5087: LD_INT 0
5089: PPUSH
5090: PPUSH
// if exist_mode then
5091: LD_VAR 0 2
5095: IFFALSE 5120
// unit := CreateCharacter ( prefix & ident ) else
5097: LD_ADDR_VAR 0 5
5101: PUSH
5102: LD_VAR 0 3
5106: PUSH
5107: LD_VAR 0 1
5111: STR
5112: PPUSH
5113: CALL_OW 34
5117: ST_TO_ADDR
5118: GO 5135
// unit := NewCharacter ( ident ) ;
5120: LD_ADDR_VAR 0 5
5124: PUSH
5125: LD_VAR 0 1
5129: PPUSH
5130: CALL_OW 25
5134: ST_TO_ADDR
// result := unit ;
5135: LD_ADDR_VAR 0 4
5139: PUSH
5140: LD_VAR 0 5
5144: ST_TO_ADDR
// end ;
5145: LD_VAR 0 4
5149: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5150: LD_INT 0
5152: PPUSH
// vc_chassis := chassis ;
5153: LD_ADDR_OWVAR 37
5157: PUSH
5158: LD_VAR 0 1
5162: ST_TO_ADDR
// vc_engine := engine ;
5163: LD_ADDR_OWVAR 39
5167: PUSH
5168: LD_VAR 0 2
5172: ST_TO_ADDR
// vc_control := control ;
5173: LD_ADDR_OWVAR 38
5177: PUSH
5178: LD_VAR 0 3
5182: ST_TO_ADDR
// vc_weapon := weapon ;
5183: LD_ADDR_OWVAR 40
5187: PUSH
5188: LD_VAR 0 4
5192: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5193: LD_ADDR_OWVAR 41
5197: PUSH
5198: LD_VAR 0 5
5202: ST_TO_ADDR
// end ;
5203: LD_VAR 0 6
5207: RET
// export function CanSayRand ( side ) ; begin
5208: LD_INT 0
5210: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5211: LD_ADDR_VAR 0 2
5215: PUSH
5216: LD_INT 52
5218: PUSH
5219: EMPTY
5220: LIST
5221: PUSH
5222: LD_INT 22
5224: PUSH
5225: LD_VAR 0 1
5229: PUSH
5230: EMPTY
5231: LIST
5232: LIST
5233: PUSH
5234: LD_INT 2
5236: PUSH
5237: LD_INT 25
5239: PUSH
5240: LD_INT 1
5242: PUSH
5243: EMPTY
5244: LIST
5245: LIST
5246: PUSH
5247: LD_INT 25
5249: PUSH
5250: LD_INT 2
5252: PUSH
5253: EMPTY
5254: LIST
5255: LIST
5256: PUSH
5257: LD_INT 25
5259: PUSH
5260: LD_INT 3
5262: PUSH
5263: EMPTY
5264: LIST
5265: LIST
5266: PUSH
5267: LD_INT 25
5269: PUSH
5270: LD_INT 4
5272: PUSH
5273: EMPTY
5274: LIST
5275: LIST
5276: PUSH
5277: EMPTY
5278: LIST
5279: LIST
5280: LIST
5281: LIST
5282: LIST
5283: PUSH
5284: EMPTY
5285: LIST
5286: LIST
5287: LIST
5288: PPUSH
5289: CALL_OW 69
5293: PUSH
5294: LD_EXP 11
5298: PUSH
5299: LD_EXP 30
5303: PUSH
5304: LD_EXP 20
5308: PUSH
5309: LD_EXP 21
5313: PUSH
5314: LD_EXP 22
5318: PUSH
5319: LD_EXP 23
5323: PUSH
5324: LD_EXP 24
5328: PUSH
5329: LD_EXP 25
5333: PUSH
5334: LD_EXP 26
5338: PUSH
5339: LD_EXP 27
5343: PUSH
5344: LD_EXP 13
5348: PUSH
5349: LD_EXP 28
5353: PUSH
5354: LD_EXP 29
5358: PUSH
5359: LD_EXP 31
5363: PUSH
5364: EMPTY
5365: LIST
5366: LIST
5367: LIST
5368: LIST
5369: LIST
5370: LIST
5371: LIST
5372: LIST
5373: LIST
5374: LIST
5375: LIST
5376: LIST
5377: LIST
5378: LIST
5379: DIFF
5380: ST_TO_ADDR
// end ;
5381: LD_VAR 0 2
5385: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5386: LD_INT 0
5388: PPUSH
5389: PPUSH
5390: PPUSH
5391: PPUSH
5392: PPUSH
5393: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5394: LD_VAR 0 1
5398: NOT
5399: PUSH
5400: LD_VAR 0 1
5404: PPUSH
5405: CALL_OW 263
5409: PUSH
5410: LD_INT 2
5412: EQUAL
5413: NOT
5414: OR
5415: IFFALSE 5419
// exit ;
5417: GO 5735
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5419: LD_ADDR_VAR 0 6
5423: PUSH
5424: LD_INT 22
5426: PUSH
5427: LD_VAR 0 1
5431: PPUSH
5432: CALL_OW 255
5436: PUSH
5437: EMPTY
5438: LIST
5439: LIST
5440: PUSH
5441: LD_INT 2
5443: PUSH
5444: LD_INT 30
5446: PUSH
5447: LD_INT 36
5449: PUSH
5450: EMPTY
5451: LIST
5452: LIST
5453: PUSH
5454: LD_INT 34
5456: PUSH
5457: LD_INT 31
5459: PUSH
5460: EMPTY
5461: LIST
5462: LIST
5463: PUSH
5464: EMPTY
5465: LIST
5466: LIST
5467: LIST
5468: PUSH
5469: EMPTY
5470: LIST
5471: LIST
5472: PPUSH
5473: CALL_OW 69
5477: ST_TO_ADDR
// if not tmp then
5478: LD_VAR 0 6
5482: NOT
5483: IFFALSE 5487
// exit ;
5485: GO 5735
// result := [ ] ;
5487: LD_ADDR_VAR 0 2
5491: PUSH
5492: EMPTY
5493: ST_TO_ADDR
// for i in tmp do
5494: LD_ADDR_VAR 0 3
5498: PUSH
5499: LD_VAR 0 6
5503: PUSH
5504: FOR_IN
5505: IFFALSE 5576
// begin t := UnitsInside ( i ) ;
5507: LD_ADDR_VAR 0 4
5511: PUSH
5512: LD_VAR 0 3
5516: PPUSH
5517: CALL_OW 313
5521: ST_TO_ADDR
// if t then
5522: LD_VAR 0 4
5526: IFFALSE 5574
// for j in t do
5528: LD_ADDR_VAR 0 7
5532: PUSH
5533: LD_VAR 0 4
5537: PUSH
5538: FOR_IN
5539: IFFALSE 5572
// result := Insert ( result , result + 1 , j ) ;
5541: LD_ADDR_VAR 0 2
5545: PUSH
5546: LD_VAR 0 2
5550: PPUSH
5551: LD_VAR 0 2
5555: PUSH
5556: LD_INT 1
5558: PLUS
5559: PPUSH
5560: LD_VAR 0 7
5564: PPUSH
5565: CALL_OW 2
5569: ST_TO_ADDR
5570: GO 5538
5572: POP
5573: POP
// end ;
5574: GO 5504
5576: POP
5577: POP
// if not result then
5578: LD_VAR 0 2
5582: NOT
5583: IFFALSE 5587
// exit ;
5585: GO 5735
// mech := result [ 1 ] ;
5587: LD_ADDR_VAR 0 5
5591: PUSH
5592: LD_VAR 0 2
5596: PUSH
5597: LD_INT 1
5599: ARRAY
5600: ST_TO_ADDR
// if result > 1 then
5601: LD_VAR 0 2
5605: PUSH
5606: LD_INT 1
5608: GREATER
5609: IFFALSE 5721
// for i = 2 to result do
5611: LD_ADDR_VAR 0 3
5615: PUSH
5616: DOUBLE
5617: LD_INT 2
5619: DEC
5620: ST_TO_ADDR
5621: LD_VAR 0 2
5625: PUSH
5626: FOR_TO
5627: IFFALSE 5719
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5629: LD_ADDR_VAR 0 4
5633: PUSH
5634: LD_VAR 0 2
5638: PUSH
5639: LD_VAR 0 3
5643: ARRAY
5644: PPUSH
5645: LD_INT 3
5647: PPUSH
5648: CALL_OW 259
5652: PUSH
5653: LD_VAR 0 2
5657: PUSH
5658: LD_VAR 0 3
5662: ARRAY
5663: PPUSH
5664: CALL_OW 432
5668: MINUS
5669: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5670: LD_VAR 0 4
5674: PUSH
5675: LD_VAR 0 5
5679: PPUSH
5680: LD_INT 3
5682: PPUSH
5683: CALL_OW 259
5687: PUSH
5688: LD_VAR 0 5
5692: PPUSH
5693: CALL_OW 432
5697: MINUS
5698: GREATEREQUAL
5699: IFFALSE 5717
// mech := result [ i ] ;
5701: LD_ADDR_VAR 0 5
5705: PUSH
5706: LD_VAR 0 2
5710: PUSH
5711: LD_VAR 0 3
5715: ARRAY
5716: ST_TO_ADDR
// end ;
5717: GO 5626
5719: POP
5720: POP
// ComLinkTo ( vehicle , mech ) ;
5721: LD_VAR 0 1
5725: PPUSH
5726: LD_VAR 0 5
5730: PPUSH
5731: CALL_OW 135
// end ;
5735: LD_VAR 0 2
5739: RET
// export function SayRand ( sex , dial ) ; begin
5740: LD_INT 0
5742: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5743: LD_ADDR_VAR 0 3
5747: PUSH
5748: LD_INT 52
5750: PUSH
5751: EMPTY
5752: LIST
5753: PUSH
5754: LD_INT 22
5756: PUSH
5757: LD_INT 1
5759: PUSH
5760: EMPTY
5761: LIST
5762: LIST
5763: PUSH
5764: LD_INT 26
5766: PUSH
5767: LD_VAR 0 1
5771: PUSH
5772: EMPTY
5773: LIST
5774: LIST
5775: PUSH
5776: LD_INT 2
5778: PUSH
5779: LD_INT 25
5781: PUSH
5782: LD_INT 1
5784: PUSH
5785: EMPTY
5786: LIST
5787: LIST
5788: PUSH
5789: LD_INT 25
5791: PUSH
5792: LD_INT 2
5794: PUSH
5795: EMPTY
5796: LIST
5797: LIST
5798: PUSH
5799: LD_INT 25
5801: PUSH
5802: LD_INT 3
5804: PUSH
5805: EMPTY
5806: LIST
5807: LIST
5808: PUSH
5809: LD_INT 25
5811: PUSH
5812: LD_INT 4
5814: PUSH
5815: EMPTY
5816: LIST
5817: LIST
5818: PUSH
5819: EMPTY
5820: LIST
5821: LIST
5822: LIST
5823: LIST
5824: LIST
5825: PUSH
5826: EMPTY
5827: LIST
5828: LIST
5829: LIST
5830: LIST
5831: PPUSH
5832: CALL_OW 69
5836: PUSH
5837: LD_EXP 11
5841: PUSH
5842: LD_EXP 30
5846: PUSH
5847: LD_EXP 20
5851: PUSH
5852: LD_EXP 21
5856: PUSH
5857: LD_EXP 22
5861: PUSH
5862: LD_EXP 23
5866: PUSH
5867: LD_EXP 24
5871: PUSH
5872: LD_EXP 25
5876: PUSH
5877: LD_EXP 26
5881: PUSH
5882: LD_EXP 27
5886: PUSH
5887: LD_EXP 13
5891: PUSH
5892: LD_EXP 28
5896: PUSH
5897: LD_EXP 29
5901: PUSH
5902: LD_EXP 31
5906: PUSH
5907: EMPTY
5908: LIST
5909: LIST
5910: LIST
5911: LIST
5912: LIST
5913: LIST
5914: LIST
5915: LIST
5916: LIST
5917: LIST
5918: LIST
5919: LIST
5920: LIST
5921: LIST
5922: DIFF
5923: ST_TO_ADDR
// if not result then
5924: LD_VAR 0 3
5928: NOT
5929: IFFALSE 5933
// exit ;
5931: GO 5961
// result := result [ 1 ] ;
5933: LD_ADDR_VAR 0 3
5937: PUSH
5938: LD_VAR 0 3
5942: PUSH
5943: LD_INT 1
5945: ARRAY
5946: ST_TO_ADDR
// Say ( result , dial ) ;
5947: LD_VAR 0 3
5951: PPUSH
5952: LD_VAR 0 2
5956: PPUSH
5957: CALL_OW 88
// end ;
5961: LD_VAR 0 3
5965: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5966: LD_INT 0
5968: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5969: LD_ADDR_VAR 0 4
5973: PUSH
5974: LD_INT 22
5976: PUSH
5977: LD_INT 1
5979: PUSH
5980: EMPTY
5981: LIST
5982: LIST
5983: PUSH
5984: LD_INT 26
5986: PUSH
5987: LD_VAR 0 1
5991: PUSH
5992: EMPTY
5993: LIST
5994: LIST
5995: PUSH
5996: LD_INT 2
5998: PUSH
5999: LD_INT 25
6001: PUSH
6002: LD_INT 1
6004: PUSH
6005: EMPTY
6006: LIST
6007: LIST
6008: PUSH
6009: LD_INT 25
6011: PUSH
6012: LD_INT 2
6014: PUSH
6015: EMPTY
6016: LIST
6017: LIST
6018: PUSH
6019: LD_INT 25
6021: PUSH
6022: LD_INT 3
6024: PUSH
6025: EMPTY
6026: LIST
6027: LIST
6028: PUSH
6029: LD_INT 25
6031: PUSH
6032: LD_INT 4
6034: PUSH
6035: EMPTY
6036: LIST
6037: LIST
6038: PUSH
6039: EMPTY
6040: LIST
6041: LIST
6042: LIST
6043: LIST
6044: LIST
6045: PUSH
6046: EMPTY
6047: LIST
6048: LIST
6049: LIST
6050: PPUSH
6051: CALL_OW 69
6055: PUSH
6056: LD_EXP 11
6060: PUSH
6061: LD_EXP 30
6065: PUSH
6066: LD_EXP 20
6070: PUSH
6071: LD_EXP 21
6075: PUSH
6076: LD_EXP 22
6080: PUSH
6081: LD_EXP 23
6085: PUSH
6086: LD_EXP 24
6090: PUSH
6091: LD_EXP 25
6095: PUSH
6096: LD_EXP 26
6100: PUSH
6101: LD_EXP 27
6105: PUSH
6106: LD_EXP 13
6110: PUSH
6111: LD_EXP 28
6115: PUSH
6116: LD_EXP 29
6120: PUSH
6121: LD_EXP 31
6125: PUSH
6126: EMPTY
6127: LIST
6128: LIST
6129: LIST
6130: LIST
6131: LIST
6132: LIST
6133: LIST
6134: LIST
6135: LIST
6136: LIST
6137: LIST
6138: LIST
6139: LIST
6140: LIST
6141: PUSH
6142: LD_VAR 0 3
6146: ADD
6147: DIFF
6148: ST_TO_ADDR
// if not result then
6149: LD_VAR 0 4
6153: NOT
6154: IFFALSE 6158
// exit ;
6156: GO 6186
// result := result [ 1 ] ;
6158: LD_ADDR_VAR 0 4
6162: PUSH
6163: LD_VAR 0 4
6167: PUSH
6168: LD_INT 1
6170: ARRAY
6171: ST_TO_ADDR
// Say ( result , dial ) ;
6172: LD_VAR 0 4
6176: PPUSH
6177: LD_VAR 0 2
6181: PPUSH
6182: CALL_OW 88
// end ;
6186: LD_VAR 0 4
6190: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6191: LD_INT 0
6193: PPUSH
6194: PPUSH
6195: PPUSH
6196: PPUSH
6197: PPUSH
6198: PPUSH
6199: PPUSH
6200: PPUSH
6201: PPUSH
6202: PPUSH
6203: PPUSH
6204: PPUSH
6205: PPUSH
6206: PPUSH
6207: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6208: LD_VAR 0 1
6212: NOT
6213: PUSH
6214: LD_VAR 0 2
6218: NOT
6219: OR
6220: PUSH
6221: LD_VAR 0 1
6225: PPUSH
6226: CALL_OW 247
6230: PUSH
6231: LD_INT 3
6233: EQUAL
6234: OR
6235: IFFALSE 6239
// exit ;
6237: GO 7778
// for i = path downto 1 do
6239: LD_ADDR_VAR 0 5
6243: PUSH
6244: DOUBLE
6245: LD_VAR 0 2
6249: INC
6250: ST_TO_ADDR
6251: LD_INT 1
6253: PUSH
6254: FOR_DOWNTO
6255: IFFALSE 6316
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6257: LD_VAR 0 2
6261: PUSH
6262: LD_VAR 0 5
6266: ARRAY
6267: PUSH
6268: LD_INT 1
6270: ARRAY
6271: PPUSH
6272: LD_VAR 0 2
6276: PUSH
6277: LD_VAR 0 5
6281: ARRAY
6282: PUSH
6283: LD_INT 2
6285: ARRAY
6286: PPUSH
6287: CALL_OW 488
6291: NOT
6292: IFFALSE 6314
// path = Delete ( path , i ) ;
6294: LD_ADDR_VAR 0 2
6298: PUSH
6299: LD_VAR 0 2
6303: PPUSH
6304: LD_VAR 0 5
6308: PPUSH
6309: CALL_OW 3
6313: ST_TO_ADDR
// end ;
6314: GO 6254
6316: POP
6317: POP
// if not path then
6318: LD_VAR 0 2
6322: NOT
6323: IFFALSE 6327
// exit ;
6325: GO 7778
// tmp_path := [ ] ;
6327: LD_ADDR_VAR 0 11
6331: PUSH
6332: EMPTY
6333: ST_TO_ADDR
// if flags then
6334: LD_VAR 0 3
6338: IFFALSE 6412
// begin if flags [ 1 ] then
6340: LD_VAR 0 3
6344: PUSH
6345: LD_INT 1
6347: ARRAY
6348: IFFALSE 6364
// safe_place = flags [ 1 ] ;
6350: LD_ADDR_VAR 0 16
6354: PUSH
6355: LD_VAR 0 3
6359: PUSH
6360: LD_INT 1
6362: ARRAY
6363: ST_TO_ADDR
// if flags [ 2 ] then
6364: LD_VAR 0 3
6368: PUSH
6369: LD_INT 2
6371: ARRAY
6372: IFFALSE 6388
// spot_dist = flags [ 2 ] ;
6374: LD_ADDR_VAR 0 15
6378: PUSH
6379: LD_VAR 0 3
6383: PUSH
6384: LD_INT 2
6386: ARRAY
6387: ST_TO_ADDR
// if flags [ 3 ] then
6388: LD_VAR 0 3
6392: PUSH
6393: LD_INT 3
6395: ARRAY
6396: IFFALSE 6412
// chase_range = flags [ 3 ] ;
6398: LD_ADDR_VAR 0 17
6402: PUSH
6403: LD_VAR 0 3
6407: PUSH
6408: LD_INT 3
6410: ARRAY
6411: ST_TO_ADDR
// end ; if not chase_range then
6412: LD_VAR 0 17
6416: NOT
6417: IFFALSE 6427
// chase_range = 8 ;
6419: LD_ADDR_VAR 0 17
6423: PUSH
6424: LD_INT 8
6426: ST_TO_ADDR
// if not spot_dist then
6427: LD_VAR 0 15
6431: NOT
6432: IFFALSE 6442
// spot_dist := 8 ;
6434: LD_ADDR_VAR 0 15
6438: PUSH
6439: LD_INT 8
6441: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6442: LD_ADDR_VAR 0 18
6446: PUSH
6447: LD_VAR 0 1
6451: PPUSH
6452: CALL_OW 247
6456: PUSH
6457: LD_INT 2
6459: EQUAL
6460: PUSH
6461: LD_VAR 0 1
6465: PPUSH
6466: CALL_OW 262
6470: PUSH
6471: LD_INT 3
6473: NONEQUAL
6474: AND
6475: ST_TO_ADDR
// status = 1 ;
6476: LD_ADDR_VAR 0 12
6480: PUSH
6481: LD_INT 1
6483: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6484: LD_ADDR_VAR 0 11
6488: PUSH
6489: LD_INT 1
6491: PUSH
6492: LD_VAR 0 2
6496: PUSH
6497: LD_INT 1
6499: ARRAY
6500: PUSH
6501: EMPTY
6502: LIST
6503: LIST
6504: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6505: LD_INT 35
6507: PPUSH
6508: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6512: LD_VAR 0 18
6516: PUSH
6517: LD_VAR 0 1
6521: PPUSH
6522: CALL_OW 261
6526: PUSH
6527: LD_INT 20
6529: LESS
6530: AND
6531: IFFALSE 6724
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6533: LD_ADDR_VAR 0 10
6537: PUSH
6538: LD_INT 22
6540: PUSH
6541: LD_VAR 0 1
6545: PPUSH
6546: CALL_OW 255
6550: PUSH
6551: EMPTY
6552: LIST
6553: LIST
6554: PUSH
6555: LD_INT 2
6557: PUSH
6558: LD_INT 30
6560: PUSH
6561: LD_INT 0
6563: PUSH
6564: EMPTY
6565: LIST
6566: LIST
6567: PUSH
6568: LD_INT 30
6570: PUSH
6571: LD_INT 1
6573: PUSH
6574: EMPTY
6575: LIST
6576: LIST
6577: PUSH
6578: LD_INT 30
6580: PUSH
6581: LD_INT 29
6583: PUSH
6584: EMPTY
6585: LIST
6586: LIST
6587: PUSH
6588: LD_INT 30
6590: PUSH
6591: LD_INT 3
6593: PUSH
6594: EMPTY
6595: LIST
6596: LIST
6597: PUSH
6598: EMPTY
6599: LIST
6600: LIST
6601: LIST
6602: LIST
6603: LIST
6604: PUSH
6605: EMPTY
6606: LIST
6607: LIST
6608: PPUSH
6609: CALL_OW 69
6613: ST_TO_ADDR
// if not station then
6614: LD_VAR 0 10
6618: NOT
6619: IFFALSE 6635
// begin SetFuel ( unit , 40 ) ;
6621: LD_VAR 0 1
6625: PPUSH
6626: LD_INT 40
6628: PPUSH
6629: CALL_OW 240
// continue ;
6633: GO 6505
// end ; status := 6 ;
6635: LD_ADDR_VAR 0 12
6639: PUSH
6640: LD_INT 6
6642: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6643: LD_ADDR_VAR 0 10
6647: PUSH
6648: LD_VAR 0 10
6652: PPUSH
6653: LD_VAR 0 1
6657: PPUSH
6658: CALL_OW 74
6662: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6663: LD_INT 35
6665: PPUSH
6666: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6670: LD_VAR 0 1
6674: PPUSH
6675: LD_VAR 0 10
6679: PPUSH
6680: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6684: LD_VAR 0 1
6688: PPUSH
6689: LD_VAR 0 10
6693: PPUSH
6694: CALL_OW 296
6698: PUSH
6699: LD_INT 6
6701: LESS
6702: IFFALSE 6663
// SetFuel ( unit , 100 ) ;
6704: LD_VAR 0 1
6708: PPUSH
6709: LD_INT 100
6711: PPUSH
6712: CALL_OW 240
// status := 5 ;
6716: LD_ADDR_VAR 0 12
6720: PUSH
6721: LD_INT 5
6723: ST_TO_ADDR
// end ; if status = 1 then
6724: LD_VAR 0 12
6728: PUSH
6729: LD_INT 1
6731: EQUAL
6732: IFFALSE 7108
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6734: LD_ADDR_VAR 0 13
6738: PUSH
6739: LD_INT 81
6741: PUSH
6742: LD_VAR 0 1
6746: PPUSH
6747: CALL_OW 255
6751: PUSH
6752: EMPTY
6753: LIST
6754: LIST
6755: PUSH
6756: LD_INT 3
6758: PUSH
6759: LD_INT 21
6761: PUSH
6762: LD_INT 3
6764: PUSH
6765: EMPTY
6766: LIST
6767: LIST
6768: PUSH
6769: EMPTY
6770: LIST
6771: LIST
6772: PUSH
6773: LD_INT 91
6775: PUSH
6776: LD_VAR 0 1
6780: PUSH
6781: LD_VAR 0 15
6785: PUSH
6786: EMPTY
6787: LIST
6788: LIST
6789: LIST
6790: PUSH
6791: LD_INT 101
6793: PUSH
6794: LD_INT 1
6796: PUSH
6797: EMPTY
6798: LIST
6799: LIST
6800: PUSH
6801: EMPTY
6802: LIST
6803: LIST
6804: LIST
6805: LIST
6806: PPUSH
6807: CALL_OW 69
6811: ST_TO_ADDR
// for i in enemy do
6812: LD_ADDR_VAR 0 5
6816: PUSH
6817: LD_VAR 0 13
6821: PUSH
6822: FOR_IN
6823: IFFALSE 6854
// if IsInvisible ( i ) then
6825: LD_VAR 0 5
6829: PPUSH
6830: CALL_OW 571
6834: IFFALSE 6852
// enemy := enemy diff i ;
6836: LD_ADDR_VAR 0 13
6840: PUSH
6841: LD_VAR 0 13
6845: PUSH
6846: LD_VAR 0 5
6850: DIFF
6851: ST_TO_ADDR
6852: GO 6822
6854: POP
6855: POP
// if enemy then
6856: LD_VAR 0 13
6860: IFFALSE 6910
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6862: LD_VAR 0 1
6866: PPUSH
6867: LD_VAR 0 1
6871: PPUSH
6872: CALL_OW 250
6876: PPUSH
6877: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6881: LD_VAR 0 1
6885: PPUSH
6886: LD_VAR 0 1
6890: PPUSH
6891: CALL_OW 251
6895: PPUSH
6896: CALL_OW 232
// status = 2 ;
6900: LD_ADDR_VAR 0 12
6904: PUSH
6905: LD_INT 2
6907: ST_TO_ADDR
// end else
6908: GO 7108
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6910: LD_VAR 0 1
6914: PPUSH
6915: LD_VAR 0 11
6919: PUSH
6920: LD_INT 2
6922: ARRAY
6923: PUSH
6924: LD_INT 1
6926: ARRAY
6927: PPUSH
6928: LD_VAR 0 11
6932: PUSH
6933: LD_INT 2
6935: ARRAY
6936: PUSH
6937: LD_INT 2
6939: ARRAY
6940: PPUSH
6941: CALL_OW 307
6945: PUSH
6946: LD_VAR 0 1
6950: PPUSH
6951: CALL_OW 314
6955: NOT
6956: OR
6957: IFFALSE 7108
// begin wait ( 0 0$2 ) ;
6959: LD_INT 70
6961: PPUSH
6962: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6966: LD_VAR 0 11
6970: PUSH
6971: LD_INT 1
6973: ARRAY
6974: PUSH
6975: LD_INT 1
6977: PLUS
6978: PUSH
6979: LD_VAR 0 2
6983: GREATER
6984: IFFALSE 7009
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6986: LD_ADDR_VAR 0 11
6990: PUSH
6991: LD_VAR 0 11
6995: PPUSH
6996: LD_INT 1
6998: PPUSH
6999: LD_INT 1
7001: PPUSH
7002: CALL_OW 1
7006: ST_TO_ADDR
7007: GO 7040
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7009: LD_ADDR_VAR 0 11
7013: PUSH
7014: LD_VAR 0 11
7018: PPUSH
7019: LD_INT 1
7021: PPUSH
7022: LD_VAR 0 11
7026: PUSH
7027: LD_INT 1
7029: ARRAY
7030: PUSH
7031: LD_INT 1
7033: PLUS
7034: PPUSH
7035: CALL_OW 1
7039: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7040: LD_ADDR_VAR 0 11
7044: PUSH
7045: LD_VAR 0 11
7049: PPUSH
7050: LD_INT 2
7052: PPUSH
7053: LD_VAR 0 2
7057: PUSH
7058: LD_VAR 0 11
7062: PUSH
7063: LD_INT 1
7065: ARRAY
7066: ARRAY
7067: PPUSH
7068: CALL_OW 1
7072: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7073: LD_VAR 0 1
7077: PPUSH
7078: LD_VAR 0 11
7082: PUSH
7083: LD_INT 2
7085: ARRAY
7086: PUSH
7087: LD_INT 1
7089: ARRAY
7090: PPUSH
7091: LD_VAR 0 11
7095: PUSH
7096: LD_INT 2
7098: ARRAY
7099: PUSH
7100: LD_INT 2
7102: ARRAY
7103: PPUSH
7104: CALL_OW 114
// end ; end ; end ; if status = 2 then
7108: LD_VAR 0 12
7112: PUSH
7113: LD_INT 2
7115: EQUAL
7116: IFFALSE 7337
// begin if GetLives ( unit ) < 650 and safe_place then
7118: LD_VAR 0 1
7122: PPUSH
7123: CALL_OW 256
7127: PUSH
7128: LD_INT 650
7130: LESS
7131: PUSH
7132: LD_VAR 0 16
7136: AND
7137: IFFALSE 7149
// begin status = 3 ;
7139: LD_ADDR_VAR 0 12
7143: PUSH
7144: LD_INT 3
7146: ST_TO_ADDR
// continue ;
7147: GO 6505
// end ; x := GetRememberedX ( unit ) ;
7149: LD_ADDR_VAR 0 6
7153: PUSH
7154: LD_VAR 0 1
7158: PPUSH
7159: CALL_OW 252
7163: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7164: LD_ADDR_VAR 0 7
7168: PUSH
7169: LD_VAR 0 1
7173: PPUSH
7174: CALL_OW 253
7178: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7179: LD_ADDR_VAR 0 13
7183: PUSH
7184: LD_INT 81
7186: PUSH
7187: LD_VAR 0 1
7191: PPUSH
7192: CALL_OW 255
7196: PUSH
7197: EMPTY
7198: LIST
7199: LIST
7200: PUSH
7201: LD_INT 92
7203: PUSH
7204: LD_VAR 0 6
7208: PUSH
7209: LD_VAR 0 7
7213: PUSH
7214: LD_VAR 0 15
7218: PUSH
7219: EMPTY
7220: LIST
7221: LIST
7222: LIST
7223: LIST
7224: PUSH
7225: LD_INT 101
7227: PUSH
7228: LD_INT 1
7230: PUSH
7231: EMPTY
7232: LIST
7233: LIST
7234: PUSH
7235: EMPTY
7236: LIST
7237: LIST
7238: LIST
7239: PPUSH
7240: CALL_OW 69
7244: ST_TO_ADDR
// if enemy then
7245: LD_VAR 0 13
7249: IFFALSE 7320
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7251: LD_ADDR_VAR 0 14
7255: PUSH
7256: LD_VAR 0 13
7260: PPUSH
7261: LD_VAR 0 1
7265: PPUSH
7266: CALL_OW 74
7270: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7271: LD_VAR 0 14
7275: PPUSH
7276: LD_VAR 0 6
7280: PPUSH
7281: LD_VAR 0 7
7285: PPUSH
7286: CALL_OW 297
7290: PUSH
7291: LD_VAR 0 15
7295: PUSH
7296: LD_VAR 0 17
7300: PLUS
7301: LESS
7302: IFFALSE 7318
// ComAttackUnit ( unit , e ) ;
7304: LD_VAR 0 1
7308: PPUSH
7309: LD_VAR 0 14
7313: PPUSH
7314: CALL_OW 115
// end else
7318: GO 7337
// begin ComStop ( unit ) ;
7320: LD_VAR 0 1
7324: PPUSH
7325: CALL_OW 141
// status = 5 ;
7329: LD_ADDR_VAR 0 12
7333: PUSH
7334: LD_INT 5
7336: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7337: LD_VAR 0 12
7341: PUSH
7342: LD_INT 3
7344: EQUAL
7345: PUSH
7346: LD_VAR 0 16
7350: AND
7351: IFFALSE 7437
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7353: LD_VAR 0 1
7357: PPUSH
7358: LD_VAR 0 16
7362: PUSH
7363: LD_INT 1
7365: ARRAY
7366: PPUSH
7367: LD_VAR 0 16
7371: PUSH
7372: LD_INT 2
7374: ARRAY
7375: PPUSH
7376: CALL_OW 111
// wait ( 0 0$1 ) ;
7380: LD_INT 35
7382: PPUSH
7383: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7387: LD_VAR 0 1
7391: PPUSH
7392: LD_VAR 0 16
7396: PUSH
7397: LD_INT 1
7399: ARRAY
7400: PPUSH
7401: LD_VAR 0 16
7405: PUSH
7406: LD_INT 2
7408: ARRAY
7409: PPUSH
7410: CALL_OW 297
7414: PUSH
7415: LD_INT 4
7417: LESS
7418: IFFALSE 7353
// ComStop ( unit ) ;
7420: LD_VAR 0 1
7424: PPUSH
7425: CALL_OW 141
// status = 4 ;
7429: LD_ADDR_VAR 0 12
7433: PUSH
7434: LD_INT 4
7436: ST_TO_ADDR
// end ; if status = 4 then
7437: LD_VAR 0 12
7441: PUSH
7442: LD_INT 4
7444: EQUAL
7445: IFFALSE 7477
// begin repeat wait ( 0 0$1 ) ;
7447: LD_INT 35
7449: PPUSH
7450: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7454: LD_VAR 0 1
7458: PPUSH
7459: CALL_OW 256
7463: PUSH
7464: LD_INT 1000
7466: EQUAL
7467: IFFALSE 7447
// status = 5 ;
7469: LD_ADDR_VAR 0 12
7473: PUSH
7474: LD_INT 5
7476: ST_TO_ADDR
// end ; if status = 5 then
7477: LD_VAR 0 12
7481: PUSH
7482: LD_INT 5
7484: EQUAL
7485: IFFALSE 7767
// begin p := 999 ;
7487: LD_ADDR_VAR 0 9
7491: PUSH
7492: LD_INT 999
7494: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7495: LD_ADDR_VAR 0 14
7499: PUSH
7500: LD_VAR 0 11
7504: PUSH
7505: LD_INT 2
7507: ARRAY
7508: PUSH
7509: LD_INT 1
7511: ARRAY
7512: PUSH
7513: LD_VAR 0 11
7517: PUSH
7518: LD_INT 2
7520: ARRAY
7521: PUSH
7522: LD_INT 2
7524: ARRAY
7525: PUSH
7526: EMPTY
7527: LIST
7528: LIST
7529: ST_TO_ADDR
// c := 1 ;
7530: LD_ADDR_VAR 0 8
7534: PUSH
7535: LD_INT 1
7537: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7538: LD_ADDR_VAR 0 5
7542: PUSH
7543: DOUBLE
7544: LD_INT 1
7546: DEC
7547: ST_TO_ADDR
7548: LD_VAR 0 11
7552: PUSH
7553: LD_INT 2
7555: ARRAY
7556: PUSH
7557: LD_INT 2
7559: DIV
7560: PUSH
7561: FOR_TO
7562: IFFALSE 7694
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7564: LD_ADDR_VAR 0 6
7568: PUSH
7569: LD_VAR 0 1
7573: PPUSH
7574: LD_VAR 0 11
7578: PUSH
7579: LD_INT 2
7581: ARRAY
7582: PUSH
7583: LD_VAR 0 8
7587: ARRAY
7588: PPUSH
7589: LD_VAR 0 11
7593: PUSH
7594: LD_INT 2
7596: ARRAY
7597: PUSH
7598: LD_VAR 0 8
7602: PUSH
7603: LD_INT 1
7605: PLUS
7606: ARRAY
7607: PPUSH
7608: CALL_OW 297
7612: ST_TO_ADDR
// if x < p then
7613: LD_VAR 0 6
7617: PUSH
7618: LD_VAR 0 9
7622: LESS
7623: IFFALSE 7678
// begin p := x ;
7625: LD_ADDR_VAR 0 9
7629: PUSH
7630: LD_VAR 0 6
7634: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7635: LD_ADDR_VAR 0 14
7639: PUSH
7640: LD_VAR 0 11
7644: PUSH
7645: LD_INT 2
7647: ARRAY
7648: PUSH
7649: LD_VAR 0 8
7653: ARRAY
7654: PUSH
7655: LD_VAR 0 11
7659: PUSH
7660: LD_INT 2
7662: ARRAY
7663: PUSH
7664: LD_VAR 0 8
7668: PUSH
7669: LD_INT 1
7671: PLUS
7672: ARRAY
7673: PUSH
7674: EMPTY
7675: LIST
7676: LIST
7677: ST_TO_ADDR
// end ; c = c + 2 ;
7678: LD_ADDR_VAR 0 8
7682: PUSH
7683: LD_VAR 0 8
7687: PUSH
7688: LD_INT 2
7690: PLUS
7691: ST_TO_ADDR
// end ;
7692: GO 7561
7694: POP
7695: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7696: LD_VAR 0 1
7700: PPUSH
7701: LD_VAR 0 14
7705: PUSH
7706: LD_INT 1
7708: ARRAY
7709: PPUSH
7710: LD_VAR 0 14
7714: PUSH
7715: LD_INT 2
7717: ARRAY
7718: PPUSH
7719: CALL_OW 111
// wait ( 0 0$1 ) ;
7723: LD_INT 35
7725: PPUSH
7726: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7730: LD_VAR 0 1
7734: PPUSH
7735: LD_VAR 0 14
7739: PUSH
7740: LD_INT 1
7742: ARRAY
7743: PPUSH
7744: LD_VAR 0 14
7748: PUSH
7749: LD_INT 2
7751: ARRAY
7752: PPUSH
7753: CALL_OW 307
7757: IFFALSE 7696
// status = 1 ;
7759: LD_ADDR_VAR 0 12
7763: PUSH
7764: LD_INT 1
7766: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7767: LD_VAR 0 1
7771: PPUSH
7772: CALL_OW 301
7776: IFFALSE 6505
// end ;
7778: LD_VAR 0 4
7782: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7783: LD_INT 0
7785: PPUSH
7786: PPUSH
7787: PPUSH
7788: PPUSH
7789: PPUSH
7790: PPUSH
7791: PPUSH
7792: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7793: LD_VAR 0 1
7797: NOT
7798: PUSH
7799: LD_VAR 0 3
7803: NOT
7804: OR
7805: PUSH
7806: LD_VAR 0 4
7810: PUSH
7811: LD_INT 1
7813: PUSH
7814: LD_INT 2
7816: PUSH
7817: LD_INT 0
7819: PUSH
7820: EMPTY
7821: LIST
7822: LIST
7823: LIST
7824: IN
7825: NOT
7826: OR
7827: PUSH
7828: LD_VAR 0 6
7832: NOT
7833: OR
7834: PUSH
7835: LD_VAR 0 7
7839: NOT
7840: OR
7841: IFFALSE 7845
// exit ;
7843: GO 8236
// sex_id :=  ;
7845: LD_ADDR_VAR 0 14
7849: PUSH
7850: LD_STRING 
7852: ST_TO_ADDR
// case class of 1 :
7853: LD_VAR 0 5
7857: PUSH
7858: LD_INT 1
7860: DOUBLE
7861: EQUAL
7862: IFTRUE 7866
7864: GO 7877
7866: POP
// class_id := Sol ; 2 :
7867: LD_ADDR_VAR 0 15
7871: PUSH
7872: LD_STRING Sol
7874: ST_TO_ADDR
7875: GO 7935
7877: LD_INT 2
7879: DOUBLE
7880: EQUAL
7881: IFTRUE 7885
7883: GO 7896
7885: POP
// class_id := Eng ; 3 :
7886: LD_ADDR_VAR 0 15
7890: PUSH
7891: LD_STRING Eng
7893: ST_TO_ADDR
7894: GO 7935
7896: LD_INT 3
7898: DOUBLE
7899: EQUAL
7900: IFTRUE 7904
7902: GO 7915
7904: POP
// class_id := Mech ; 4 :
7905: LD_ADDR_VAR 0 15
7909: PUSH
7910: LD_STRING Mech
7912: ST_TO_ADDR
7913: GO 7935
7915: LD_INT 4
7917: DOUBLE
7918: EQUAL
7919: IFTRUE 7923
7921: GO 7934
7923: POP
// class_id := Sci ; end ;
7924: LD_ADDR_VAR 0 15
7928: PUSH
7929: LD_STRING Sci
7931: ST_TO_ADDR
7932: GO 7935
7934: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7935: LD_ADDR_VAR 0 11
7939: PUSH
7940: LD_VAR 0 1
7944: PPUSH
7945: LD_INT 25
7947: PUSH
7948: LD_VAR 0 5
7952: PUSH
7953: EMPTY
7954: LIST
7955: LIST
7956: PPUSH
7957: CALL_OW 72
7961: ST_TO_ADDR
// if tmp then
7962: LD_VAR 0 11
7966: IFFALSE 7978
// units := tmp ;
7968: LD_ADDR_VAR 0 1
7972: PUSH
7973: LD_VAR 0 11
7977: ST_TO_ADDR
// if sex then
7978: LD_VAR 0 4
7982: IFFALSE 8038
// begin if sex = sex_female then
7984: LD_VAR 0 4
7988: PUSH
7989: LD_INT 2
7991: EQUAL
7992: IFFALSE 8002
// sex_id := F ;
7994: LD_ADDR_VAR 0 14
7998: PUSH
7999: LD_STRING F
8001: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8002: LD_ADDR_VAR 0 1
8006: PUSH
8007: LD_VAR 0 1
8011: PPUSH
8012: LD_INT 26
8014: PUSH
8015: LD_VAR 0 4
8019: PUSH
8020: EMPTY
8021: LIST
8022: LIST
8023: PPUSH
8024: CALL_OW 72
8028: ST_TO_ADDR
// if not units then
8029: LD_VAR 0 1
8033: NOT
8034: IFFALSE 8038
// exit ;
8036: GO 8236
// end ; unit_id := id ;
8038: LD_ADDR_VAR 0 12
8042: PUSH
8043: LD_VAR 0 6
8047: ST_TO_ADDR
// if unit_id > units then
8048: LD_VAR 0 12
8052: PUSH
8053: LD_VAR 0 1
8057: GREATER
8058: IFFALSE 8068
// unit_id := 1 ;
8060: LD_ADDR_VAR 0 12
8064: PUSH
8065: LD_INT 1
8067: ST_TO_ADDR
// if not units [ unit_id ] then
8068: LD_VAR 0 1
8072: PUSH
8073: LD_VAR 0 12
8077: ARRAY
8078: NOT
8079: IFFALSE 8083
// exit ;
8081: GO 8236
// unit := units [ unit_id ] ;
8083: LD_ADDR_VAR 0 10
8087: PUSH
8088: LD_VAR 0 1
8092: PUSH
8093: LD_VAR 0 12
8097: ARRAY
8098: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8099: LD_ADDR_VAR 0 13
8103: PUSH
8104: LD_STRING D
8106: PUSH
8107: LD_VAR 0 3
8111: STR
8112: PUSH
8113: LD_STRING -
8115: STR
8116: PUSH
8117: LD_VAR 0 14
8121: STR
8122: PUSH
8123: LD_VAR 0 15
8127: STR
8128: PUSH
8129: LD_VAR 0 6
8133: STR
8134: PUSH
8135: LD_STRING -
8137: STR
8138: PUSH
8139: LD_VAR 0 7
8143: STR
8144: ST_TO_ADDR
// case type of 0 :
8145: LD_VAR 0 2
8149: PUSH
8150: LD_INT 0
8152: DOUBLE
8153: EQUAL
8154: IFTRUE 8158
8156: GO 8175
8158: POP
// Say ( unit , dialog_id ) ; 1 :
8159: LD_VAR 0 10
8163: PPUSH
8164: LD_VAR 0 13
8168: PPUSH
8169: CALL_OW 88
8173: GO 8226
8175: LD_INT 1
8177: DOUBLE
8178: EQUAL
8179: IFTRUE 8183
8181: GO 8200
8183: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8184: LD_VAR 0 10
8188: PPUSH
8189: LD_VAR 0 13
8193: PPUSH
8194: CALL_OW 94
8198: GO 8226
8200: LD_INT 2
8202: DOUBLE
8203: EQUAL
8204: IFTRUE 8208
8206: GO 8225
8208: POP
// ForceSay ( unit , dialog_id ) ; end ;
8209: LD_VAR 0 10
8213: PPUSH
8214: LD_VAR 0 13
8218: PPUSH
8219: CALL_OW 91
8223: GO 8226
8225: POP
// result := unit ;
8226: LD_ADDR_VAR 0 8
8230: PUSH
8231: LD_VAR 0 10
8235: ST_TO_ADDR
// end ;
8236: LD_VAR 0 8
8240: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8241: LD_INT 0
8243: PPUSH
8244: PPUSH
8245: PPUSH
8246: PPUSH
8247: PPUSH
8248: PPUSH
8249: PPUSH
// result := array ;
8250: LD_ADDR_VAR 0 5
8254: PUSH
8255: LD_VAR 0 1
8259: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8260: LD_VAR 0 1
8264: NOT
8265: PUSH
8266: LD_VAR 0 2
8270: NOT
8271: OR
8272: PUSH
8273: LD_VAR 0 3
8277: NOT
8278: OR
8279: PUSH
8280: LD_VAR 0 2
8284: PUSH
8285: LD_VAR 0 1
8289: GREATER
8290: OR
8291: PUSH
8292: LD_VAR 0 3
8296: PUSH
8297: LD_VAR 0 1
8301: GREATER
8302: OR
8303: IFFALSE 8307
// exit ;
8305: GO 8603
// if direction then
8307: LD_VAR 0 4
8311: IFFALSE 8375
// begin d := 1 ;
8313: LD_ADDR_VAR 0 9
8317: PUSH
8318: LD_INT 1
8320: ST_TO_ADDR
// if i_from > i_to then
8321: LD_VAR 0 2
8325: PUSH
8326: LD_VAR 0 3
8330: GREATER
8331: IFFALSE 8357
// length := ( array - i_from ) + i_to else
8333: LD_ADDR_VAR 0 11
8337: PUSH
8338: LD_VAR 0 1
8342: PUSH
8343: LD_VAR 0 2
8347: MINUS
8348: PUSH
8349: LD_VAR 0 3
8353: PLUS
8354: ST_TO_ADDR
8355: GO 8373
// length := i_to - i_from ;
8357: LD_ADDR_VAR 0 11
8361: PUSH
8362: LD_VAR 0 3
8366: PUSH
8367: LD_VAR 0 2
8371: MINUS
8372: ST_TO_ADDR
// end else
8373: GO 8436
// begin d := - 1 ;
8375: LD_ADDR_VAR 0 9
8379: PUSH
8380: LD_INT 1
8382: NEG
8383: ST_TO_ADDR
// if i_from > i_to then
8384: LD_VAR 0 2
8388: PUSH
8389: LD_VAR 0 3
8393: GREATER
8394: IFFALSE 8414
// length := i_from - i_to else
8396: LD_ADDR_VAR 0 11
8400: PUSH
8401: LD_VAR 0 2
8405: PUSH
8406: LD_VAR 0 3
8410: MINUS
8411: ST_TO_ADDR
8412: GO 8436
// length := ( array - i_to ) + i_from ;
8414: LD_ADDR_VAR 0 11
8418: PUSH
8419: LD_VAR 0 1
8423: PUSH
8424: LD_VAR 0 3
8428: MINUS
8429: PUSH
8430: LD_VAR 0 2
8434: PLUS
8435: ST_TO_ADDR
// end ; if not length then
8436: LD_VAR 0 11
8440: NOT
8441: IFFALSE 8445
// exit ;
8443: GO 8603
// tmp := array ;
8445: LD_ADDR_VAR 0 10
8449: PUSH
8450: LD_VAR 0 1
8454: ST_TO_ADDR
// for i = 1 to length do
8455: LD_ADDR_VAR 0 6
8459: PUSH
8460: DOUBLE
8461: LD_INT 1
8463: DEC
8464: ST_TO_ADDR
8465: LD_VAR 0 11
8469: PUSH
8470: FOR_TO
8471: IFFALSE 8591
// begin for j = 1 to array do
8473: LD_ADDR_VAR 0 7
8477: PUSH
8478: DOUBLE
8479: LD_INT 1
8481: DEC
8482: ST_TO_ADDR
8483: LD_VAR 0 1
8487: PUSH
8488: FOR_TO
8489: IFFALSE 8577
// begin k := j + d ;
8491: LD_ADDR_VAR 0 8
8495: PUSH
8496: LD_VAR 0 7
8500: PUSH
8501: LD_VAR 0 9
8505: PLUS
8506: ST_TO_ADDR
// if k > array then
8507: LD_VAR 0 8
8511: PUSH
8512: LD_VAR 0 1
8516: GREATER
8517: IFFALSE 8527
// k := 1 ;
8519: LD_ADDR_VAR 0 8
8523: PUSH
8524: LD_INT 1
8526: ST_TO_ADDR
// if not k then
8527: LD_VAR 0 8
8531: NOT
8532: IFFALSE 8544
// k := array ;
8534: LD_ADDR_VAR 0 8
8538: PUSH
8539: LD_VAR 0 1
8543: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8544: LD_ADDR_VAR 0 10
8548: PUSH
8549: LD_VAR 0 10
8553: PPUSH
8554: LD_VAR 0 8
8558: PPUSH
8559: LD_VAR 0 1
8563: PUSH
8564: LD_VAR 0 7
8568: ARRAY
8569: PPUSH
8570: CALL_OW 1
8574: ST_TO_ADDR
// end ;
8575: GO 8488
8577: POP
8578: POP
// array := tmp ;
8579: LD_ADDR_VAR 0 1
8583: PUSH
8584: LD_VAR 0 10
8588: ST_TO_ADDR
// end ;
8589: GO 8470
8591: POP
8592: POP
// result := array ;
8593: LD_ADDR_VAR 0 5
8597: PUSH
8598: LD_VAR 0 1
8602: ST_TO_ADDR
// end ;
8603: LD_VAR 0 5
8607: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8608: LD_INT 0
8610: PPUSH
8611: PPUSH
8612: PPUSH
8613: PPUSH
8614: PPUSH
8615: PPUSH
8616: PPUSH
8617: PPUSH
8618: PPUSH
8619: PPUSH
8620: PPUSH
8621: PPUSH
8622: PPUSH
8623: PPUSH
8624: PPUSH
8625: PPUSH
8626: PPUSH
8627: PPUSH
8628: PPUSH
8629: PPUSH
8630: PPUSH
8631: PPUSH
8632: PPUSH
8633: PPUSH
8634: PPUSH
8635: PPUSH
8636: PPUSH
8637: PPUSH
8638: PPUSH
8639: PPUSH
8640: PPUSH
8641: PPUSH
8642: PPUSH
8643: PPUSH
8644: PPUSH
8645: PPUSH
8646: PPUSH
8647: PPUSH
8648: PPUSH
8649: PPUSH
8650: PPUSH
8651: PPUSH
8652: PPUSH
8653: PPUSH
8654: PPUSH
8655: PPUSH
8656: PPUSH
8657: PPUSH
8658: PPUSH
8659: PPUSH
8660: PPUSH
8661: PPUSH
8662: PPUSH
8663: PPUSH
8664: PPUSH
8665: PPUSH
8666: PPUSH
8667: PPUSH
// result = [ ] ;
8668: LD_ADDR_VAR 0 7
8672: PUSH
8673: EMPTY
8674: ST_TO_ADDR
// temp_list = [ ] ;
8675: LD_ADDR_VAR 0 9
8679: PUSH
8680: EMPTY
8681: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8682: LD_VAR 0 4
8686: PUSH
8687: LD_INT 0
8689: PUSH
8690: LD_INT 1
8692: PUSH
8693: LD_INT 2
8695: PUSH
8696: LD_INT 3
8698: PUSH
8699: LD_INT 4
8701: PUSH
8702: LD_INT 5
8704: PUSH
8705: EMPTY
8706: LIST
8707: LIST
8708: LIST
8709: LIST
8710: LIST
8711: LIST
8712: IN
8713: NOT
8714: PUSH
8715: LD_VAR 0 1
8719: PUSH
8720: LD_INT 0
8722: PUSH
8723: LD_INT 1
8725: PUSH
8726: EMPTY
8727: LIST
8728: LIST
8729: IN
8730: PUSH
8731: LD_VAR 0 5
8735: PUSH
8736: LD_INT 1
8738: PUSH
8739: LD_INT 2
8741: PUSH
8742: LD_INT 3
8744: PUSH
8745: EMPTY
8746: LIST
8747: LIST
8748: LIST
8749: IN
8750: NOT
8751: AND
8752: OR
8753: IFFALSE 8757
// exit ;
8755: GO 27142
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8757: LD_VAR 0 1
8761: PUSH
8762: LD_INT 6
8764: PUSH
8765: LD_INT 7
8767: PUSH
8768: LD_INT 8
8770: PUSH
8771: LD_INT 13
8773: PUSH
8774: LD_INT 12
8776: PUSH
8777: LD_INT 15
8779: PUSH
8780: LD_INT 11
8782: PUSH
8783: LD_INT 14
8785: PUSH
8786: LD_INT 10
8788: PUSH
8789: EMPTY
8790: LIST
8791: LIST
8792: LIST
8793: LIST
8794: LIST
8795: LIST
8796: LIST
8797: LIST
8798: LIST
8799: IN
8800: IFFALSE 8810
// btype = b_lab ;
8802: LD_ADDR_VAR 0 1
8806: PUSH
8807: LD_INT 6
8809: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8810: LD_VAR 0 6
8814: PUSH
8815: LD_INT 0
8817: PUSH
8818: LD_INT 1
8820: PUSH
8821: LD_INT 2
8823: PUSH
8824: EMPTY
8825: LIST
8826: LIST
8827: LIST
8828: IN
8829: NOT
8830: PUSH
8831: LD_VAR 0 1
8835: PUSH
8836: LD_INT 0
8838: PUSH
8839: LD_INT 1
8841: PUSH
8842: LD_INT 2
8844: PUSH
8845: LD_INT 3
8847: PUSH
8848: LD_INT 6
8850: PUSH
8851: LD_INT 36
8853: PUSH
8854: LD_INT 4
8856: PUSH
8857: LD_INT 5
8859: PUSH
8860: LD_INT 31
8862: PUSH
8863: LD_INT 32
8865: PUSH
8866: LD_INT 33
8868: PUSH
8869: EMPTY
8870: LIST
8871: LIST
8872: LIST
8873: LIST
8874: LIST
8875: LIST
8876: LIST
8877: LIST
8878: LIST
8879: LIST
8880: LIST
8881: IN
8882: NOT
8883: PUSH
8884: LD_VAR 0 6
8888: PUSH
8889: LD_INT 1
8891: EQUAL
8892: AND
8893: OR
8894: PUSH
8895: LD_VAR 0 1
8899: PUSH
8900: LD_INT 2
8902: PUSH
8903: LD_INT 3
8905: PUSH
8906: EMPTY
8907: LIST
8908: LIST
8909: IN
8910: NOT
8911: PUSH
8912: LD_VAR 0 6
8916: PUSH
8917: LD_INT 2
8919: EQUAL
8920: AND
8921: OR
8922: IFFALSE 8932
// mode = 0 ;
8924: LD_ADDR_VAR 0 6
8928: PUSH
8929: LD_INT 0
8931: ST_TO_ADDR
// case mode of 0 :
8932: LD_VAR 0 6
8936: PUSH
8937: LD_INT 0
8939: DOUBLE
8940: EQUAL
8941: IFTRUE 8945
8943: GO 20398
8945: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8946: LD_ADDR_VAR 0 11
8950: PUSH
8951: LD_INT 0
8953: PUSH
8954: LD_INT 0
8956: PUSH
8957: EMPTY
8958: LIST
8959: LIST
8960: PUSH
8961: LD_INT 0
8963: PUSH
8964: LD_INT 1
8966: NEG
8967: PUSH
8968: EMPTY
8969: LIST
8970: LIST
8971: PUSH
8972: LD_INT 1
8974: PUSH
8975: LD_INT 0
8977: PUSH
8978: EMPTY
8979: LIST
8980: LIST
8981: PUSH
8982: LD_INT 1
8984: PUSH
8985: LD_INT 1
8987: PUSH
8988: EMPTY
8989: LIST
8990: LIST
8991: PUSH
8992: LD_INT 0
8994: PUSH
8995: LD_INT 1
8997: PUSH
8998: EMPTY
8999: LIST
9000: LIST
9001: PUSH
9002: LD_INT 1
9004: NEG
9005: PUSH
9006: LD_INT 0
9008: PUSH
9009: EMPTY
9010: LIST
9011: LIST
9012: PUSH
9013: LD_INT 1
9015: NEG
9016: PUSH
9017: LD_INT 1
9019: NEG
9020: PUSH
9021: EMPTY
9022: LIST
9023: LIST
9024: PUSH
9025: LD_INT 1
9027: NEG
9028: PUSH
9029: LD_INT 2
9031: NEG
9032: PUSH
9033: EMPTY
9034: LIST
9035: LIST
9036: PUSH
9037: LD_INT 0
9039: PUSH
9040: LD_INT 2
9042: NEG
9043: PUSH
9044: EMPTY
9045: LIST
9046: LIST
9047: PUSH
9048: LD_INT 1
9050: PUSH
9051: LD_INT 1
9053: NEG
9054: PUSH
9055: EMPTY
9056: LIST
9057: LIST
9058: PUSH
9059: LD_INT 1
9061: PUSH
9062: LD_INT 2
9064: PUSH
9065: EMPTY
9066: LIST
9067: LIST
9068: PUSH
9069: LD_INT 0
9071: PUSH
9072: LD_INT 2
9074: PUSH
9075: EMPTY
9076: LIST
9077: LIST
9078: PUSH
9079: LD_INT 1
9081: NEG
9082: PUSH
9083: LD_INT 1
9085: PUSH
9086: EMPTY
9087: LIST
9088: LIST
9089: PUSH
9090: LD_INT 1
9092: PUSH
9093: LD_INT 3
9095: PUSH
9096: EMPTY
9097: LIST
9098: LIST
9099: PUSH
9100: LD_INT 0
9102: PUSH
9103: LD_INT 3
9105: PUSH
9106: EMPTY
9107: LIST
9108: LIST
9109: PUSH
9110: LD_INT 1
9112: NEG
9113: PUSH
9114: LD_INT 2
9116: PUSH
9117: EMPTY
9118: LIST
9119: LIST
9120: PUSH
9121: EMPTY
9122: LIST
9123: LIST
9124: LIST
9125: LIST
9126: LIST
9127: LIST
9128: LIST
9129: LIST
9130: LIST
9131: LIST
9132: LIST
9133: LIST
9134: LIST
9135: LIST
9136: LIST
9137: LIST
9138: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9139: LD_ADDR_VAR 0 12
9143: PUSH
9144: LD_INT 0
9146: PUSH
9147: LD_INT 0
9149: PUSH
9150: EMPTY
9151: LIST
9152: LIST
9153: PUSH
9154: LD_INT 0
9156: PUSH
9157: LD_INT 1
9159: NEG
9160: PUSH
9161: EMPTY
9162: LIST
9163: LIST
9164: PUSH
9165: LD_INT 1
9167: PUSH
9168: LD_INT 0
9170: PUSH
9171: EMPTY
9172: LIST
9173: LIST
9174: PUSH
9175: LD_INT 1
9177: PUSH
9178: LD_INT 1
9180: PUSH
9181: EMPTY
9182: LIST
9183: LIST
9184: PUSH
9185: LD_INT 0
9187: PUSH
9188: LD_INT 1
9190: PUSH
9191: EMPTY
9192: LIST
9193: LIST
9194: PUSH
9195: LD_INT 1
9197: NEG
9198: PUSH
9199: LD_INT 0
9201: PUSH
9202: EMPTY
9203: LIST
9204: LIST
9205: PUSH
9206: LD_INT 1
9208: NEG
9209: PUSH
9210: LD_INT 1
9212: NEG
9213: PUSH
9214: EMPTY
9215: LIST
9216: LIST
9217: PUSH
9218: LD_INT 1
9220: PUSH
9221: LD_INT 1
9223: NEG
9224: PUSH
9225: EMPTY
9226: LIST
9227: LIST
9228: PUSH
9229: LD_INT 2
9231: PUSH
9232: LD_INT 0
9234: PUSH
9235: EMPTY
9236: LIST
9237: LIST
9238: PUSH
9239: LD_INT 2
9241: PUSH
9242: LD_INT 1
9244: PUSH
9245: EMPTY
9246: LIST
9247: LIST
9248: PUSH
9249: LD_INT 1
9251: NEG
9252: PUSH
9253: LD_INT 1
9255: PUSH
9256: EMPTY
9257: LIST
9258: LIST
9259: PUSH
9260: LD_INT 2
9262: NEG
9263: PUSH
9264: LD_INT 0
9266: PUSH
9267: EMPTY
9268: LIST
9269: LIST
9270: PUSH
9271: LD_INT 2
9273: NEG
9274: PUSH
9275: LD_INT 1
9277: NEG
9278: PUSH
9279: EMPTY
9280: LIST
9281: LIST
9282: PUSH
9283: LD_INT 2
9285: NEG
9286: PUSH
9287: LD_INT 1
9289: PUSH
9290: EMPTY
9291: LIST
9292: LIST
9293: PUSH
9294: LD_INT 3
9296: NEG
9297: PUSH
9298: LD_INT 0
9300: PUSH
9301: EMPTY
9302: LIST
9303: LIST
9304: PUSH
9305: LD_INT 3
9307: NEG
9308: PUSH
9309: LD_INT 1
9311: NEG
9312: PUSH
9313: EMPTY
9314: LIST
9315: LIST
9316: PUSH
9317: EMPTY
9318: LIST
9319: LIST
9320: LIST
9321: LIST
9322: LIST
9323: LIST
9324: LIST
9325: LIST
9326: LIST
9327: LIST
9328: LIST
9329: LIST
9330: LIST
9331: LIST
9332: LIST
9333: LIST
9334: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9335: LD_ADDR_VAR 0 13
9339: PUSH
9340: LD_INT 0
9342: PUSH
9343: LD_INT 0
9345: PUSH
9346: EMPTY
9347: LIST
9348: LIST
9349: PUSH
9350: LD_INT 0
9352: PUSH
9353: LD_INT 1
9355: NEG
9356: PUSH
9357: EMPTY
9358: LIST
9359: LIST
9360: PUSH
9361: LD_INT 1
9363: PUSH
9364: LD_INT 0
9366: PUSH
9367: EMPTY
9368: LIST
9369: LIST
9370: PUSH
9371: LD_INT 1
9373: PUSH
9374: LD_INT 1
9376: PUSH
9377: EMPTY
9378: LIST
9379: LIST
9380: PUSH
9381: LD_INT 0
9383: PUSH
9384: LD_INT 1
9386: PUSH
9387: EMPTY
9388: LIST
9389: LIST
9390: PUSH
9391: LD_INT 1
9393: NEG
9394: PUSH
9395: LD_INT 0
9397: PUSH
9398: EMPTY
9399: LIST
9400: LIST
9401: PUSH
9402: LD_INT 1
9404: NEG
9405: PUSH
9406: LD_INT 1
9408: NEG
9409: PUSH
9410: EMPTY
9411: LIST
9412: LIST
9413: PUSH
9414: LD_INT 1
9416: NEG
9417: PUSH
9418: LD_INT 2
9420: NEG
9421: PUSH
9422: EMPTY
9423: LIST
9424: LIST
9425: PUSH
9426: LD_INT 2
9428: PUSH
9429: LD_INT 1
9431: PUSH
9432: EMPTY
9433: LIST
9434: LIST
9435: PUSH
9436: LD_INT 2
9438: PUSH
9439: LD_INT 2
9441: PUSH
9442: EMPTY
9443: LIST
9444: LIST
9445: PUSH
9446: LD_INT 1
9448: PUSH
9449: LD_INT 2
9451: PUSH
9452: EMPTY
9453: LIST
9454: LIST
9455: PUSH
9456: LD_INT 2
9458: NEG
9459: PUSH
9460: LD_INT 1
9462: NEG
9463: PUSH
9464: EMPTY
9465: LIST
9466: LIST
9467: PUSH
9468: LD_INT 2
9470: NEG
9471: PUSH
9472: LD_INT 2
9474: NEG
9475: PUSH
9476: EMPTY
9477: LIST
9478: LIST
9479: PUSH
9480: LD_INT 2
9482: NEG
9483: PUSH
9484: LD_INT 3
9486: NEG
9487: PUSH
9488: EMPTY
9489: LIST
9490: LIST
9491: PUSH
9492: LD_INT 3
9494: NEG
9495: PUSH
9496: LD_INT 2
9498: NEG
9499: PUSH
9500: EMPTY
9501: LIST
9502: LIST
9503: PUSH
9504: LD_INT 3
9506: NEG
9507: PUSH
9508: LD_INT 3
9510: NEG
9511: PUSH
9512: EMPTY
9513: LIST
9514: LIST
9515: PUSH
9516: EMPTY
9517: LIST
9518: LIST
9519: LIST
9520: LIST
9521: LIST
9522: LIST
9523: LIST
9524: LIST
9525: LIST
9526: LIST
9527: LIST
9528: LIST
9529: LIST
9530: LIST
9531: LIST
9532: LIST
9533: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9534: LD_ADDR_VAR 0 14
9538: PUSH
9539: LD_INT 0
9541: PUSH
9542: LD_INT 0
9544: PUSH
9545: EMPTY
9546: LIST
9547: LIST
9548: PUSH
9549: LD_INT 0
9551: PUSH
9552: LD_INT 1
9554: NEG
9555: PUSH
9556: EMPTY
9557: LIST
9558: LIST
9559: PUSH
9560: LD_INT 1
9562: PUSH
9563: LD_INT 0
9565: PUSH
9566: EMPTY
9567: LIST
9568: LIST
9569: PUSH
9570: LD_INT 1
9572: PUSH
9573: LD_INT 1
9575: PUSH
9576: EMPTY
9577: LIST
9578: LIST
9579: PUSH
9580: LD_INT 0
9582: PUSH
9583: LD_INT 1
9585: PUSH
9586: EMPTY
9587: LIST
9588: LIST
9589: PUSH
9590: LD_INT 1
9592: NEG
9593: PUSH
9594: LD_INT 0
9596: PUSH
9597: EMPTY
9598: LIST
9599: LIST
9600: PUSH
9601: LD_INT 1
9603: NEG
9604: PUSH
9605: LD_INT 1
9607: NEG
9608: PUSH
9609: EMPTY
9610: LIST
9611: LIST
9612: PUSH
9613: LD_INT 1
9615: NEG
9616: PUSH
9617: LD_INT 2
9619: NEG
9620: PUSH
9621: EMPTY
9622: LIST
9623: LIST
9624: PUSH
9625: LD_INT 0
9627: PUSH
9628: LD_INT 2
9630: NEG
9631: PUSH
9632: EMPTY
9633: LIST
9634: LIST
9635: PUSH
9636: LD_INT 1
9638: PUSH
9639: LD_INT 1
9641: NEG
9642: PUSH
9643: EMPTY
9644: LIST
9645: LIST
9646: PUSH
9647: LD_INT 1
9649: PUSH
9650: LD_INT 2
9652: PUSH
9653: EMPTY
9654: LIST
9655: LIST
9656: PUSH
9657: LD_INT 0
9659: PUSH
9660: LD_INT 2
9662: PUSH
9663: EMPTY
9664: LIST
9665: LIST
9666: PUSH
9667: LD_INT 1
9669: NEG
9670: PUSH
9671: LD_INT 1
9673: PUSH
9674: EMPTY
9675: LIST
9676: LIST
9677: PUSH
9678: LD_INT 1
9680: NEG
9681: PUSH
9682: LD_INT 3
9684: NEG
9685: PUSH
9686: EMPTY
9687: LIST
9688: LIST
9689: PUSH
9690: LD_INT 0
9692: PUSH
9693: LD_INT 3
9695: NEG
9696: PUSH
9697: EMPTY
9698: LIST
9699: LIST
9700: PUSH
9701: LD_INT 1
9703: PUSH
9704: LD_INT 2
9706: NEG
9707: PUSH
9708: EMPTY
9709: LIST
9710: LIST
9711: PUSH
9712: EMPTY
9713: LIST
9714: LIST
9715: LIST
9716: LIST
9717: LIST
9718: LIST
9719: LIST
9720: LIST
9721: LIST
9722: LIST
9723: LIST
9724: LIST
9725: LIST
9726: LIST
9727: LIST
9728: LIST
9729: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9730: LD_ADDR_VAR 0 15
9734: PUSH
9735: LD_INT 0
9737: PUSH
9738: LD_INT 0
9740: PUSH
9741: EMPTY
9742: LIST
9743: LIST
9744: PUSH
9745: LD_INT 0
9747: PUSH
9748: LD_INT 1
9750: NEG
9751: PUSH
9752: EMPTY
9753: LIST
9754: LIST
9755: PUSH
9756: LD_INT 1
9758: PUSH
9759: LD_INT 0
9761: PUSH
9762: EMPTY
9763: LIST
9764: LIST
9765: PUSH
9766: LD_INT 1
9768: PUSH
9769: LD_INT 1
9771: PUSH
9772: EMPTY
9773: LIST
9774: LIST
9775: PUSH
9776: LD_INT 0
9778: PUSH
9779: LD_INT 1
9781: PUSH
9782: EMPTY
9783: LIST
9784: LIST
9785: PUSH
9786: LD_INT 1
9788: NEG
9789: PUSH
9790: LD_INT 0
9792: PUSH
9793: EMPTY
9794: LIST
9795: LIST
9796: PUSH
9797: LD_INT 1
9799: NEG
9800: PUSH
9801: LD_INT 1
9803: NEG
9804: PUSH
9805: EMPTY
9806: LIST
9807: LIST
9808: PUSH
9809: LD_INT 1
9811: PUSH
9812: LD_INT 1
9814: NEG
9815: PUSH
9816: EMPTY
9817: LIST
9818: LIST
9819: PUSH
9820: LD_INT 2
9822: PUSH
9823: LD_INT 0
9825: PUSH
9826: EMPTY
9827: LIST
9828: LIST
9829: PUSH
9830: LD_INT 2
9832: PUSH
9833: LD_INT 1
9835: PUSH
9836: EMPTY
9837: LIST
9838: LIST
9839: PUSH
9840: LD_INT 1
9842: NEG
9843: PUSH
9844: LD_INT 1
9846: PUSH
9847: EMPTY
9848: LIST
9849: LIST
9850: PUSH
9851: LD_INT 2
9853: NEG
9854: PUSH
9855: LD_INT 0
9857: PUSH
9858: EMPTY
9859: LIST
9860: LIST
9861: PUSH
9862: LD_INT 2
9864: NEG
9865: PUSH
9866: LD_INT 1
9868: NEG
9869: PUSH
9870: EMPTY
9871: LIST
9872: LIST
9873: PUSH
9874: LD_INT 2
9876: PUSH
9877: LD_INT 1
9879: NEG
9880: PUSH
9881: EMPTY
9882: LIST
9883: LIST
9884: PUSH
9885: LD_INT 3
9887: PUSH
9888: LD_INT 0
9890: PUSH
9891: EMPTY
9892: LIST
9893: LIST
9894: PUSH
9895: LD_INT 3
9897: PUSH
9898: LD_INT 1
9900: PUSH
9901: EMPTY
9902: LIST
9903: LIST
9904: PUSH
9905: EMPTY
9906: LIST
9907: LIST
9908: LIST
9909: LIST
9910: LIST
9911: LIST
9912: LIST
9913: LIST
9914: LIST
9915: LIST
9916: LIST
9917: LIST
9918: LIST
9919: LIST
9920: LIST
9921: LIST
9922: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9923: LD_ADDR_VAR 0 16
9927: PUSH
9928: LD_INT 0
9930: PUSH
9931: LD_INT 0
9933: PUSH
9934: EMPTY
9935: LIST
9936: LIST
9937: PUSH
9938: LD_INT 0
9940: PUSH
9941: LD_INT 1
9943: NEG
9944: PUSH
9945: EMPTY
9946: LIST
9947: LIST
9948: PUSH
9949: LD_INT 1
9951: PUSH
9952: LD_INT 0
9954: PUSH
9955: EMPTY
9956: LIST
9957: LIST
9958: PUSH
9959: LD_INT 1
9961: PUSH
9962: LD_INT 1
9964: PUSH
9965: EMPTY
9966: LIST
9967: LIST
9968: PUSH
9969: LD_INT 0
9971: PUSH
9972: LD_INT 1
9974: PUSH
9975: EMPTY
9976: LIST
9977: LIST
9978: PUSH
9979: LD_INT 1
9981: NEG
9982: PUSH
9983: LD_INT 0
9985: PUSH
9986: EMPTY
9987: LIST
9988: LIST
9989: PUSH
9990: LD_INT 1
9992: NEG
9993: PUSH
9994: LD_INT 1
9996: NEG
9997: PUSH
9998: EMPTY
9999: LIST
10000: LIST
10001: PUSH
10002: LD_INT 1
10004: NEG
10005: PUSH
10006: LD_INT 2
10008: NEG
10009: PUSH
10010: EMPTY
10011: LIST
10012: LIST
10013: PUSH
10014: LD_INT 2
10016: PUSH
10017: LD_INT 1
10019: PUSH
10020: EMPTY
10021: LIST
10022: LIST
10023: PUSH
10024: LD_INT 2
10026: PUSH
10027: LD_INT 2
10029: PUSH
10030: EMPTY
10031: LIST
10032: LIST
10033: PUSH
10034: LD_INT 1
10036: PUSH
10037: LD_INT 2
10039: PUSH
10040: EMPTY
10041: LIST
10042: LIST
10043: PUSH
10044: LD_INT 2
10046: NEG
10047: PUSH
10048: LD_INT 1
10050: NEG
10051: PUSH
10052: EMPTY
10053: LIST
10054: LIST
10055: PUSH
10056: LD_INT 2
10058: NEG
10059: PUSH
10060: LD_INT 2
10062: NEG
10063: PUSH
10064: EMPTY
10065: LIST
10066: LIST
10067: PUSH
10068: LD_INT 3
10070: PUSH
10071: LD_INT 2
10073: PUSH
10074: EMPTY
10075: LIST
10076: LIST
10077: PUSH
10078: LD_INT 3
10080: PUSH
10081: LD_INT 3
10083: PUSH
10084: EMPTY
10085: LIST
10086: LIST
10087: PUSH
10088: LD_INT 2
10090: PUSH
10091: LD_INT 3
10093: PUSH
10094: EMPTY
10095: LIST
10096: LIST
10097: PUSH
10098: EMPTY
10099: LIST
10100: LIST
10101: LIST
10102: LIST
10103: LIST
10104: LIST
10105: LIST
10106: LIST
10107: LIST
10108: LIST
10109: LIST
10110: LIST
10111: LIST
10112: LIST
10113: LIST
10114: LIST
10115: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10116: LD_ADDR_VAR 0 17
10120: PUSH
10121: LD_INT 0
10123: PUSH
10124: LD_INT 0
10126: PUSH
10127: EMPTY
10128: LIST
10129: LIST
10130: PUSH
10131: LD_INT 0
10133: PUSH
10134: LD_INT 1
10136: NEG
10137: PUSH
10138: EMPTY
10139: LIST
10140: LIST
10141: PUSH
10142: LD_INT 1
10144: PUSH
10145: LD_INT 0
10147: PUSH
10148: EMPTY
10149: LIST
10150: LIST
10151: PUSH
10152: LD_INT 1
10154: PUSH
10155: LD_INT 1
10157: PUSH
10158: EMPTY
10159: LIST
10160: LIST
10161: PUSH
10162: LD_INT 0
10164: PUSH
10165: LD_INT 1
10167: PUSH
10168: EMPTY
10169: LIST
10170: LIST
10171: PUSH
10172: LD_INT 1
10174: NEG
10175: PUSH
10176: LD_INT 0
10178: PUSH
10179: EMPTY
10180: LIST
10181: LIST
10182: PUSH
10183: LD_INT 1
10185: NEG
10186: PUSH
10187: LD_INT 1
10189: NEG
10190: PUSH
10191: EMPTY
10192: LIST
10193: LIST
10194: PUSH
10195: LD_INT 1
10197: NEG
10198: PUSH
10199: LD_INT 2
10201: NEG
10202: PUSH
10203: EMPTY
10204: LIST
10205: LIST
10206: PUSH
10207: LD_INT 0
10209: PUSH
10210: LD_INT 2
10212: NEG
10213: PUSH
10214: EMPTY
10215: LIST
10216: LIST
10217: PUSH
10218: LD_INT 1
10220: PUSH
10221: LD_INT 1
10223: NEG
10224: PUSH
10225: EMPTY
10226: LIST
10227: LIST
10228: PUSH
10229: LD_INT 2
10231: PUSH
10232: LD_INT 0
10234: PUSH
10235: EMPTY
10236: LIST
10237: LIST
10238: PUSH
10239: LD_INT 2
10241: PUSH
10242: LD_INT 1
10244: PUSH
10245: EMPTY
10246: LIST
10247: LIST
10248: PUSH
10249: LD_INT 2
10251: PUSH
10252: LD_INT 2
10254: PUSH
10255: EMPTY
10256: LIST
10257: LIST
10258: PUSH
10259: LD_INT 1
10261: PUSH
10262: LD_INT 2
10264: PUSH
10265: EMPTY
10266: LIST
10267: LIST
10268: PUSH
10269: LD_INT 0
10271: PUSH
10272: LD_INT 2
10274: PUSH
10275: EMPTY
10276: LIST
10277: LIST
10278: PUSH
10279: LD_INT 1
10281: NEG
10282: PUSH
10283: LD_INT 1
10285: PUSH
10286: EMPTY
10287: LIST
10288: LIST
10289: PUSH
10290: LD_INT 2
10292: NEG
10293: PUSH
10294: LD_INT 0
10296: PUSH
10297: EMPTY
10298: LIST
10299: LIST
10300: PUSH
10301: LD_INT 2
10303: NEG
10304: PUSH
10305: LD_INT 1
10307: NEG
10308: PUSH
10309: EMPTY
10310: LIST
10311: LIST
10312: PUSH
10313: LD_INT 2
10315: NEG
10316: PUSH
10317: LD_INT 2
10319: NEG
10320: PUSH
10321: EMPTY
10322: LIST
10323: LIST
10324: PUSH
10325: EMPTY
10326: LIST
10327: LIST
10328: LIST
10329: LIST
10330: LIST
10331: LIST
10332: LIST
10333: LIST
10334: LIST
10335: LIST
10336: LIST
10337: LIST
10338: LIST
10339: LIST
10340: LIST
10341: LIST
10342: LIST
10343: LIST
10344: LIST
10345: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10346: LD_ADDR_VAR 0 18
10350: PUSH
10351: LD_INT 0
10353: PUSH
10354: LD_INT 0
10356: PUSH
10357: EMPTY
10358: LIST
10359: LIST
10360: PUSH
10361: LD_INT 0
10363: PUSH
10364: LD_INT 1
10366: NEG
10367: PUSH
10368: EMPTY
10369: LIST
10370: LIST
10371: PUSH
10372: LD_INT 1
10374: PUSH
10375: LD_INT 0
10377: PUSH
10378: EMPTY
10379: LIST
10380: LIST
10381: PUSH
10382: LD_INT 1
10384: PUSH
10385: LD_INT 1
10387: PUSH
10388: EMPTY
10389: LIST
10390: LIST
10391: PUSH
10392: LD_INT 0
10394: PUSH
10395: LD_INT 1
10397: PUSH
10398: EMPTY
10399: LIST
10400: LIST
10401: PUSH
10402: LD_INT 1
10404: NEG
10405: PUSH
10406: LD_INT 0
10408: PUSH
10409: EMPTY
10410: LIST
10411: LIST
10412: PUSH
10413: LD_INT 1
10415: NEG
10416: PUSH
10417: LD_INT 1
10419: NEG
10420: PUSH
10421: EMPTY
10422: LIST
10423: LIST
10424: PUSH
10425: LD_INT 1
10427: NEG
10428: PUSH
10429: LD_INT 2
10431: NEG
10432: PUSH
10433: EMPTY
10434: LIST
10435: LIST
10436: PUSH
10437: LD_INT 0
10439: PUSH
10440: LD_INT 2
10442: NEG
10443: PUSH
10444: EMPTY
10445: LIST
10446: LIST
10447: PUSH
10448: LD_INT 1
10450: PUSH
10451: LD_INT 1
10453: NEG
10454: PUSH
10455: EMPTY
10456: LIST
10457: LIST
10458: PUSH
10459: LD_INT 2
10461: PUSH
10462: LD_INT 0
10464: PUSH
10465: EMPTY
10466: LIST
10467: LIST
10468: PUSH
10469: LD_INT 2
10471: PUSH
10472: LD_INT 1
10474: PUSH
10475: EMPTY
10476: LIST
10477: LIST
10478: PUSH
10479: LD_INT 2
10481: PUSH
10482: LD_INT 2
10484: PUSH
10485: EMPTY
10486: LIST
10487: LIST
10488: PUSH
10489: LD_INT 1
10491: PUSH
10492: LD_INT 2
10494: PUSH
10495: EMPTY
10496: LIST
10497: LIST
10498: PUSH
10499: LD_INT 0
10501: PUSH
10502: LD_INT 2
10504: PUSH
10505: EMPTY
10506: LIST
10507: LIST
10508: PUSH
10509: LD_INT 1
10511: NEG
10512: PUSH
10513: LD_INT 1
10515: PUSH
10516: EMPTY
10517: LIST
10518: LIST
10519: PUSH
10520: LD_INT 2
10522: NEG
10523: PUSH
10524: LD_INT 0
10526: PUSH
10527: EMPTY
10528: LIST
10529: LIST
10530: PUSH
10531: LD_INT 2
10533: NEG
10534: PUSH
10535: LD_INT 1
10537: NEG
10538: PUSH
10539: EMPTY
10540: LIST
10541: LIST
10542: PUSH
10543: LD_INT 2
10545: NEG
10546: PUSH
10547: LD_INT 2
10549: NEG
10550: PUSH
10551: EMPTY
10552: LIST
10553: LIST
10554: PUSH
10555: EMPTY
10556: LIST
10557: LIST
10558: LIST
10559: LIST
10560: LIST
10561: LIST
10562: LIST
10563: LIST
10564: LIST
10565: LIST
10566: LIST
10567: LIST
10568: LIST
10569: LIST
10570: LIST
10571: LIST
10572: LIST
10573: LIST
10574: LIST
10575: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10576: LD_ADDR_VAR 0 19
10580: PUSH
10581: LD_INT 0
10583: PUSH
10584: LD_INT 0
10586: PUSH
10587: EMPTY
10588: LIST
10589: LIST
10590: PUSH
10591: LD_INT 0
10593: PUSH
10594: LD_INT 1
10596: NEG
10597: PUSH
10598: EMPTY
10599: LIST
10600: LIST
10601: PUSH
10602: LD_INT 1
10604: PUSH
10605: LD_INT 0
10607: PUSH
10608: EMPTY
10609: LIST
10610: LIST
10611: PUSH
10612: LD_INT 1
10614: PUSH
10615: LD_INT 1
10617: PUSH
10618: EMPTY
10619: LIST
10620: LIST
10621: PUSH
10622: LD_INT 0
10624: PUSH
10625: LD_INT 1
10627: PUSH
10628: EMPTY
10629: LIST
10630: LIST
10631: PUSH
10632: LD_INT 1
10634: NEG
10635: PUSH
10636: LD_INT 0
10638: PUSH
10639: EMPTY
10640: LIST
10641: LIST
10642: PUSH
10643: LD_INT 1
10645: NEG
10646: PUSH
10647: LD_INT 1
10649: NEG
10650: PUSH
10651: EMPTY
10652: LIST
10653: LIST
10654: PUSH
10655: LD_INT 1
10657: NEG
10658: PUSH
10659: LD_INT 2
10661: NEG
10662: PUSH
10663: EMPTY
10664: LIST
10665: LIST
10666: PUSH
10667: LD_INT 0
10669: PUSH
10670: LD_INT 2
10672: NEG
10673: PUSH
10674: EMPTY
10675: LIST
10676: LIST
10677: PUSH
10678: LD_INT 1
10680: PUSH
10681: LD_INT 1
10683: NEG
10684: PUSH
10685: EMPTY
10686: LIST
10687: LIST
10688: PUSH
10689: LD_INT 2
10691: PUSH
10692: LD_INT 0
10694: PUSH
10695: EMPTY
10696: LIST
10697: LIST
10698: PUSH
10699: LD_INT 2
10701: PUSH
10702: LD_INT 1
10704: PUSH
10705: EMPTY
10706: LIST
10707: LIST
10708: PUSH
10709: LD_INT 2
10711: PUSH
10712: LD_INT 2
10714: PUSH
10715: EMPTY
10716: LIST
10717: LIST
10718: PUSH
10719: LD_INT 1
10721: PUSH
10722: LD_INT 2
10724: PUSH
10725: EMPTY
10726: LIST
10727: LIST
10728: PUSH
10729: LD_INT 0
10731: PUSH
10732: LD_INT 2
10734: PUSH
10735: EMPTY
10736: LIST
10737: LIST
10738: PUSH
10739: LD_INT 1
10741: NEG
10742: PUSH
10743: LD_INT 1
10745: PUSH
10746: EMPTY
10747: LIST
10748: LIST
10749: PUSH
10750: LD_INT 2
10752: NEG
10753: PUSH
10754: LD_INT 0
10756: PUSH
10757: EMPTY
10758: LIST
10759: LIST
10760: PUSH
10761: LD_INT 2
10763: NEG
10764: PUSH
10765: LD_INT 1
10767: NEG
10768: PUSH
10769: EMPTY
10770: LIST
10771: LIST
10772: PUSH
10773: LD_INT 2
10775: NEG
10776: PUSH
10777: LD_INT 2
10779: NEG
10780: PUSH
10781: EMPTY
10782: LIST
10783: LIST
10784: PUSH
10785: EMPTY
10786: LIST
10787: LIST
10788: LIST
10789: LIST
10790: LIST
10791: LIST
10792: LIST
10793: LIST
10794: LIST
10795: LIST
10796: LIST
10797: LIST
10798: LIST
10799: LIST
10800: LIST
10801: LIST
10802: LIST
10803: LIST
10804: LIST
10805: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10806: LD_ADDR_VAR 0 20
10810: PUSH
10811: LD_INT 0
10813: PUSH
10814: LD_INT 0
10816: PUSH
10817: EMPTY
10818: LIST
10819: LIST
10820: PUSH
10821: LD_INT 0
10823: PUSH
10824: LD_INT 1
10826: NEG
10827: PUSH
10828: EMPTY
10829: LIST
10830: LIST
10831: PUSH
10832: LD_INT 1
10834: PUSH
10835: LD_INT 0
10837: PUSH
10838: EMPTY
10839: LIST
10840: LIST
10841: PUSH
10842: LD_INT 1
10844: PUSH
10845: LD_INT 1
10847: PUSH
10848: EMPTY
10849: LIST
10850: LIST
10851: PUSH
10852: LD_INT 0
10854: PUSH
10855: LD_INT 1
10857: PUSH
10858: EMPTY
10859: LIST
10860: LIST
10861: PUSH
10862: LD_INT 1
10864: NEG
10865: PUSH
10866: LD_INT 0
10868: PUSH
10869: EMPTY
10870: LIST
10871: LIST
10872: PUSH
10873: LD_INT 1
10875: NEG
10876: PUSH
10877: LD_INT 1
10879: NEG
10880: PUSH
10881: EMPTY
10882: LIST
10883: LIST
10884: PUSH
10885: LD_INT 1
10887: NEG
10888: PUSH
10889: LD_INT 2
10891: NEG
10892: PUSH
10893: EMPTY
10894: LIST
10895: LIST
10896: PUSH
10897: LD_INT 0
10899: PUSH
10900: LD_INT 2
10902: NEG
10903: PUSH
10904: EMPTY
10905: LIST
10906: LIST
10907: PUSH
10908: LD_INT 1
10910: PUSH
10911: LD_INT 1
10913: NEG
10914: PUSH
10915: EMPTY
10916: LIST
10917: LIST
10918: PUSH
10919: LD_INT 2
10921: PUSH
10922: LD_INT 0
10924: PUSH
10925: EMPTY
10926: LIST
10927: LIST
10928: PUSH
10929: LD_INT 2
10931: PUSH
10932: LD_INT 1
10934: PUSH
10935: EMPTY
10936: LIST
10937: LIST
10938: PUSH
10939: LD_INT 2
10941: PUSH
10942: LD_INT 2
10944: PUSH
10945: EMPTY
10946: LIST
10947: LIST
10948: PUSH
10949: LD_INT 1
10951: PUSH
10952: LD_INT 2
10954: PUSH
10955: EMPTY
10956: LIST
10957: LIST
10958: PUSH
10959: LD_INT 0
10961: PUSH
10962: LD_INT 2
10964: PUSH
10965: EMPTY
10966: LIST
10967: LIST
10968: PUSH
10969: LD_INT 1
10971: NEG
10972: PUSH
10973: LD_INT 1
10975: PUSH
10976: EMPTY
10977: LIST
10978: LIST
10979: PUSH
10980: LD_INT 2
10982: NEG
10983: PUSH
10984: LD_INT 0
10986: PUSH
10987: EMPTY
10988: LIST
10989: LIST
10990: PUSH
10991: LD_INT 2
10993: NEG
10994: PUSH
10995: LD_INT 1
10997: NEG
10998: PUSH
10999: EMPTY
11000: LIST
11001: LIST
11002: PUSH
11003: LD_INT 2
11005: NEG
11006: PUSH
11007: LD_INT 2
11009: NEG
11010: PUSH
11011: EMPTY
11012: LIST
11013: LIST
11014: PUSH
11015: EMPTY
11016: LIST
11017: LIST
11018: LIST
11019: LIST
11020: LIST
11021: LIST
11022: LIST
11023: LIST
11024: LIST
11025: LIST
11026: LIST
11027: LIST
11028: LIST
11029: LIST
11030: LIST
11031: LIST
11032: LIST
11033: LIST
11034: LIST
11035: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11036: LD_ADDR_VAR 0 21
11040: PUSH
11041: LD_INT 0
11043: PUSH
11044: LD_INT 0
11046: PUSH
11047: EMPTY
11048: LIST
11049: LIST
11050: PUSH
11051: LD_INT 0
11053: PUSH
11054: LD_INT 1
11056: NEG
11057: PUSH
11058: EMPTY
11059: LIST
11060: LIST
11061: PUSH
11062: LD_INT 1
11064: PUSH
11065: LD_INT 0
11067: PUSH
11068: EMPTY
11069: LIST
11070: LIST
11071: PUSH
11072: LD_INT 1
11074: PUSH
11075: LD_INT 1
11077: PUSH
11078: EMPTY
11079: LIST
11080: LIST
11081: PUSH
11082: LD_INT 0
11084: PUSH
11085: LD_INT 1
11087: PUSH
11088: EMPTY
11089: LIST
11090: LIST
11091: PUSH
11092: LD_INT 1
11094: NEG
11095: PUSH
11096: LD_INT 0
11098: PUSH
11099: EMPTY
11100: LIST
11101: LIST
11102: PUSH
11103: LD_INT 1
11105: NEG
11106: PUSH
11107: LD_INT 1
11109: NEG
11110: PUSH
11111: EMPTY
11112: LIST
11113: LIST
11114: PUSH
11115: LD_INT 1
11117: NEG
11118: PUSH
11119: LD_INT 2
11121: NEG
11122: PUSH
11123: EMPTY
11124: LIST
11125: LIST
11126: PUSH
11127: LD_INT 0
11129: PUSH
11130: LD_INT 2
11132: NEG
11133: PUSH
11134: EMPTY
11135: LIST
11136: LIST
11137: PUSH
11138: LD_INT 1
11140: PUSH
11141: LD_INT 1
11143: NEG
11144: PUSH
11145: EMPTY
11146: LIST
11147: LIST
11148: PUSH
11149: LD_INT 2
11151: PUSH
11152: LD_INT 0
11154: PUSH
11155: EMPTY
11156: LIST
11157: LIST
11158: PUSH
11159: LD_INT 2
11161: PUSH
11162: LD_INT 1
11164: PUSH
11165: EMPTY
11166: LIST
11167: LIST
11168: PUSH
11169: LD_INT 2
11171: PUSH
11172: LD_INT 2
11174: PUSH
11175: EMPTY
11176: LIST
11177: LIST
11178: PUSH
11179: LD_INT 1
11181: PUSH
11182: LD_INT 2
11184: PUSH
11185: EMPTY
11186: LIST
11187: LIST
11188: PUSH
11189: LD_INT 0
11191: PUSH
11192: LD_INT 2
11194: PUSH
11195: EMPTY
11196: LIST
11197: LIST
11198: PUSH
11199: LD_INT 1
11201: NEG
11202: PUSH
11203: LD_INT 1
11205: PUSH
11206: EMPTY
11207: LIST
11208: LIST
11209: PUSH
11210: LD_INT 2
11212: NEG
11213: PUSH
11214: LD_INT 0
11216: PUSH
11217: EMPTY
11218: LIST
11219: LIST
11220: PUSH
11221: LD_INT 2
11223: NEG
11224: PUSH
11225: LD_INT 1
11227: NEG
11228: PUSH
11229: EMPTY
11230: LIST
11231: LIST
11232: PUSH
11233: LD_INT 2
11235: NEG
11236: PUSH
11237: LD_INT 2
11239: NEG
11240: PUSH
11241: EMPTY
11242: LIST
11243: LIST
11244: PUSH
11245: EMPTY
11246: LIST
11247: LIST
11248: LIST
11249: LIST
11250: LIST
11251: LIST
11252: LIST
11253: LIST
11254: LIST
11255: LIST
11256: LIST
11257: LIST
11258: LIST
11259: LIST
11260: LIST
11261: LIST
11262: LIST
11263: LIST
11264: LIST
11265: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11266: LD_ADDR_VAR 0 22
11270: PUSH
11271: LD_INT 0
11273: PUSH
11274: LD_INT 0
11276: PUSH
11277: EMPTY
11278: LIST
11279: LIST
11280: PUSH
11281: LD_INT 0
11283: PUSH
11284: LD_INT 1
11286: NEG
11287: PUSH
11288: EMPTY
11289: LIST
11290: LIST
11291: PUSH
11292: LD_INT 1
11294: PUSH
11295: LD_INT 0
11297: PUSH
11298: EMPTY
11299: LIST
11300: LIST
11301: PUSH
11302: LD_INT 1
11304: PUSH
11305: LD_INT 1
11307: PUSH
11308: EMPTY
11309: LIST
11310: LIST
11311: PUSH
11312: LD_INT 0
11314: PUSH
11315: LD_INT 1
11317: PUSH
11318: EMPTY
11319: LIST
11320: LIST
11321: PUSH
11322: LD_INT 1
11324: NEG
11325: PUSH
11326: LD_INT 0
11328: PUSH
11329: EMPTY
11330: LIST
11331: LIST
11332: PUSH
11333: LD_INT 1
11335: NEG
11336: PUSH
11337: LD_INT 1
11339: NEG
11340: PUSH
11341: EMPTY
11342: LIST
11343: LIST
11344: PUSH
11345: LD_INT 1
11347: NEG
11348: PUSH
11349: LD_INT 2
11351: NEG
11352: PUSH
11353: EMPTY
11354: LIST
11355: LIST
11356: PUSH
11357: LD_INT 0
11359: PUSH
11360: LD_INT 2
11362: NEG
11363: PUSH
11364: EMPTY
11365: LIST
11366: LIST
11367: PUSH
11368: LD_INT 1
11370: PUSH
11371: LD_INT 1
11373: NEG
11374: PUSH
11375: EMPTY
11376: LIST
11377: LIST
11378: PUSH
11379: LD_INT 2
11381: PUSH
11382: LD_INT 0
11384: PUSH
11385: EMPTY
11386: LIST
11387: LIST
11388: PUSH
11389: LD_INT 2
11391: PUSH
11392: LD_INT 1
11394: PUSH
11395: EMPTY
11396: LIST
11397: LIST
11398: PUSH
11399: LD_INT 2
11401: PUSH
11402: LD_INT 2
11404: PUSH
11405: EMPTY
11406: LIST
11407: LIST
11408: PUSH
11409: LD_INT 1
11411: PUSH
11412: LD_INT 2
11414: PUSH
11415: EMPTY
11416: LIST
11417: LIST
11418: PUSH
11419: LD_INT 0
11421: PUSH
11422: LD_INT 2
11424: PUSH
11425: EMPTY
11426: LIST
11427: LIST
11428: PUSH
11429: LD_INT 1
11431: NEG
11432: PUSH
11433: LD_INT 1
11435: PUSH
11436: EMPTY
11437: LIST
11438: LIST
11439: PUSH
11440: LD_INT 2
11442: NEG
11443: PUSH
11444: LD_INT 0
11446: PUSH
11447: EMPTY
11448: LIST
11449: LIST
11450: PUSH
11451: LD_INT 2
11453: NEG
11454: PUSH
11455: LD_INT 1
11457: NEG
11458: PUSH
11459: EMPTY
11460: LIST
11461: LIST
11462: PUSH
11463: LD_INT 2
11465: NEG
11466: PUSH
11467: LD_INT 2
11469: NEG
11470: PUSH
11471: EMPTY
11472: LIST
11473: LIST
11474: PUSH
11475: EMPTY
11476: LIST
11477: LIST
11478: LIST
11479: LIST
11480: LIST
11481: LIST
11482: LIST
11483: LIST
11484: LIST
11485: LIST
11486: LIST
11487: LIST
11488: LIST
11489: LIST
11490: LIST
11491: LIST
11492: LIST
11493: LIST
11494: LIST
11495: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11496: LD_ADDR_VAR 0 23
11500: PUSH
11501: LD_INT 0
11503: PUSH
11504: LD_INT 0
11506: PUSH
11507: EMPTY
11508: LIST
11509: LIST
11510: PUSH
11511: LD_INT 0
11513: PUSH
11514: LD_INT 1
11516: NEG
11517: PUSH
11518: EMPTY
11519: LIST
11520: LIST
11521: PUSH
11522: LD_INT 1
11524: PUSH
11525: LD_INT 0
11527: PUSH
11528: EMPTY
11529: LIST
11530: LIST
11531: PUSH
11532: LD_INT 1
11534: PUSH
11535: LD_INT 1
11537: PUSH
11538: EMPTY
11539: LIST
11540: LIST
11541: PUSH
11542: LD_INT 0
11544: PUSH
11545: LD_INT 1
11547: PUSH
11548: EMPTY
11549: LIST
11550: LIST
11551: PUSH
11552: LD_INT 1
11554: NEG
11555: PUSH
11556: LD_INT 0
11558: PUSH
11559: EMPTY
11560: LIST
11561: LIST
11562: PUSH
11563: LD_INT 1
11565: NEG
11566: PUSH
11567: LD_INT 1
11569: NEG
11570: PUSH
11571: EMPTY
11572: LIST
11573: LIST
11574: PUSH
11575: LD_INT 1
11577: NEG
11578: PUSH
11579: LD_INT 2
11581: NEG
11582: PUSH
11583: EMPTY
11584: LIST
11585: LIST
11586: PUSH
11587: LD_INT 0
11589: PUSH
11590: LD_INT 2
11592: NEG
11593: PUSH
11594: EMPTY
11595: LIST
11596: LIST
11597: PUSH
11598: LD_INT 1
11600: PUSH
11601: LD_INT 1
11603: NEG
11604: PUSH
11605: EMPTY
11606: LIST
11607: LIST
11608: PUSH
11609: LD_INT 2
11611: PUSH
11612: LD_INT 0
11614: PUSH
11615: EMPTY
11616: LIST
11617: LIST
11618: PUSH
11619: LD_INT 2
11621: PUSH
11622: LD_INT 1
11624: PUSH
11625: EMPTY
11626: LIST
11627: LIST
11628: PUSH
11629: LD_INT 2
11631: PUSH
11632: LD_INT 2
11634: PUSH
11635: EMPTY
11636: LIST
11637: LIST
11638: PUSH
11639: LD_INT 1
11641: PUSH
11642: LD_INT 2
11644: PUSH
11645: EMPTY
11646: LIST
11647: LIST
11648: PUSH
11649: LD_INT 0
11651: PUSH
11652: LD_INT 2
11654: PUSH
11655: EMPTY
11656: LIST
11657: LIST
11658: PUSH
11659: LD_INT 1
11661: NEG
11662: PUSH
11663: LD_INT 1
11665: PUSH
11666: EMPTY
11667: LIST
11668: LIST
11669: PUSH
11670: LD_INT 2
11672: NEG
11673: PUSH
11674: LD_INT 0
11676: PUSH
11677: EMPTY
11678: LIST
11679: LIST
11680: PUSH
11681: LD_INT 2
11683: NEG
11684: PUSH
11685: LD_INT 1
11687: NEG
11688: PUSH
11689: EMPTY
11690: LIST
11691: LIST
11692: PUSH
11693: LD_INT 2
11695: NEG
11696: PUSH
11697: LD_INT 2
11699: NEG
11700: PUSH
11701: EMPTY
11702: LIST
11703: LIST
11704: PUSH
11705: LD_INT 2
11707: NEG
11708: PUSH
11709: LD_INT 3
11711: NEG
11712: PUSH
11713: EMPTY
11714: LIST
11715: LIST
11716: PUSH
11717: LD_INT 1
11719: NEG
11720: PUSH
11721: LD_INT 3
11723: NEG
11724: PUSH
11725: EMPTY
11726: LIST
11727: LIST
11728: PUSH
11729: LD_INT 1
11731: PUSH
11732: LD_INT 2
11734: NEG
11735: PUSH
11736: EMPTY
11737: LIST
11738: LIST
11739: PUSH
11740: LD_INT 2
11742: PUSH
11743: LD_INT 1
11745: NEG
11746: PUSH
11747: EMPTY
11748: LIST
11749: LIST
11750: PUSH
11751: EMPTY
11752: LIST
11753: LIST
11754: LIST
11755: LIST
11756: LIST
11757: LIST
11758: LIST
11759: LIST
11760: LIST
11761: LIST
11762: LIST
11763: LIST
11764: LIST
11765: LIST
11766: LIST
11767: LIST
11768: LIST
11769: LIST
11770: LIST
11771: LIST
11772: LIST
11773: LIST
11774: LIST
11775: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11776: LD_ADDR_VAR 0 24
11780: PUSH
11781: LD_INT 0
11783: PUSH
11784: LD_INT 0
11786: PUSH
11787: EMPTY
11788: LIST
11789: LIST
11790: PUSH
11791: LD_INT 0
11793: PUSH
11794: LD_INT 1
11796: NEG
11797: PUSH
11798: EMPTY
11799: LIST
11800: LIST
11801: PUSH
11802: LD_INT 1
11804: PUSH
11805: LD_INT 0
11807: PUSH
11808: EMPTY
11809: LIST
11810: LIST
11811: PUSH
11812: LD_INT 1
11814: PUSH
11815: LD_INT 1
11817: PUSH
11818: EMPTY
11819: LIST
11820: LIST
11821: PUSH
11822: LD_INT 0
11824: PUSH
11825: LD_INT 1
11827: PUSH
11828: EMPTY
11829: LIST
11830: LIST
11831: PUSH
11832: LD_INT 1
11834: NEG
11835: PUSH
11836: LD_INT 0
11838: PUSH
11839: EMPTY
11840: LIST
11841: LIST
11842: PUSH
11843: LD_INT 1
11845: NEG
11846: PUSH
11847: LD_INT 1
11849: NEG
11850: PUSH
11851: EMPTY
11852: LIST
11853: LIST
11854: PUSH
11855: LD_INT 1
11857: NEG
11858: PUSH
11859: LD_INT 2
11861: NEG
11862: PUSH
11863: EMPTY
11864: LIST
11865: LIST
11866: PUSH
11867: LD_INT 0
11869: PUSH
11870: LD_INT 2
11872: NEG
11873: PUSH
11874: EMPTY
11875: LIST
11876: LIST
11877: PUSH
11878: LD_INT 1
11880: PUSH
11881: LD_INT 1
11883: NEG
11884: PUSH
11885: EMPTY
11886: LIST
11887: LIST
11888: PUSH
11889: LD_INT 2
11891: PUSH
11892: LD_INT 0
11894: PUSH
11895: EMPTY
11896: LIST
11897: LIST
11898: PUSH
11899: LD_INT 2
11901: PUSH
11902: LD_INT 1
11904: PUSH
11905: EMPTY
11906: LIST
11907: LIST
11908: PUSH
11909: LD_INT 2
11911: PUSH
11912: LD_INT 2
11914: PUSH
11915: EMPTY
11916: LIST
11917: LIST
11918: PUSH
11919: LD_INT 1
11921: PUSH
11922: LD_INT 2
11924: PUSH
11925: EMPTY
11926: LIST
11927: LIST
11928: PUSH
11929: LD_INT 0
11931: PUSH
11932: LD_INT 2
11934: PUSH
11935: EMPTY
11936: LIST
11937: LIST
11938: PUSH
11939: LD_INT 1
11941: NEG
11942: PUSH
11943: LD_INT 1
11945: PUSH
11946: EMPTY
11947: LIST
11948: LIST
11949: PUSH
11950: LD_INT 2
11952: NEG
11953: PUSH
11954: LD_INT 0
11956: PUSH
11957: EMPTY
11958: LIST
11959: LIST
11960: PUSH
11961: LD_INT 2
11963: NEG
11964: PUSH
11965: LD_INT 1
11967: NEG
11968: PUSH
11969: EMPTY
11970: LIST
11971: LIST
11972: PUSH
11973: LD_INT 2
11975: NEG
11976: PUSH
11977: LD_INT 2
11979: NEG
11980: PUSH
11981: EMPTY
11982: LIST
11983: LIST
11984: PUSH
11985: LD_INT 1
11987: PUSH
11988: LD_INT 2
11990: NEG
11991: PUSH
11992: EMPTY
11993: LIST
11994: LIST
11995: PUSH
11996: LD_INT 2
11998: PUSH
11999: LD_INT 1
12001: NEG
12002: PUSH
12003: EMPTY
12004: LIST
12005: LIST
12006: PUSH
12007: LD_INT 3
12009: PUSH
12010: LD_INT 1
12012: PUSH
12013: EMPTY
12014: LIST
12015: LIST
12016: PUSH
12017: LD_INT 3
12019: PUSH
12020: LD_INT 2
12022: PUSH
12023: EMPTY
12024: LIST
12025: LIST
12026: PUSH
12027: EMPTY
12028: LIST
12029: LIST
12030: LIST
12031: LIST
12032: LIST
12033: LIST
12034: LIST
12035: LIST
12036: LIST
12037: LIST
12038: LIST
12039: LIST
12040: LIST
12041: LIST
12042: LIST
12043: LIST
12044: LIST
12045: LIST
12046: LIST
12047: LIST
12048: LIST
12049: LIST
12050: LIST
12051: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12052: LD_ADDR_VAR 0 25
12056: PUSH
12057: LD_INT 0
12059: PUSH
12060: LD_INT 0
12062: PUSH
12063: EMPTY
12064: LIST
12065: LIST
12066: PUSH
12067: LD_INT 0
12069: PUSH
12070: LD_INT 1
12072: NEG
12073: PUSH
12074: EMPTY
12075: LIST
12076: LIST
12077: PUSH
12078: LD_INT 1
12080: PUSH
12081: LD_INT 0
12083: PUSH
12084: EMPTY
12085: LIST
12086: LIST
12087: PUSH
12088: LD_INT 1
12090: PUSH
12091: LD_INT 1
12093: PUSH
12094: EMPTY
12095: LIST
12096: LIST
12097: PUSH
12098: LD_INT 0
12100: PUSH
12101: LD_INT 1
12103: PUSH
12104: EMPTY
12105: LIST
12106: LIST
12107: PUSH
12108: LD_INT 1
12110: NEG
12111: PUSH
12112: LD_INT 0
12114: PUSH
12115: EMPTY
12116: LIST
12117: LIST
12118: PUSH
12119: LD_INT 1
12121: NEG
12122: PUSH
12123: LD_INT 1
12125: NEG
12126: PUSH
12127: EMPTY
12128: LIST
12129: LIST
12130: PUSH
12131: LD_INT 1
12133: NEG
12134: PUSH
12135: LD_INT 2
12137: NEG
12138: PUSH
12139: EMPTY
12140: LIST
12141: LIST
12142: PUSH
12143: LD_INT 0
12145: PUSH
12146: LD_INT 2
12148: NEG
12149: PUSH
12150: EMPTY
12151: LIST
12152: LIST
12153: PUSH
12154: LD_INT 1
12156: PUSH
12157: LD_INT 1
12159: NEG
12160: PUSH
12161: EMPTY
12162: LIST
12163: LIST
12164: PUSH
12165: LD_INT 2
12167: PUSH
12168: LD_INT 0
12170: PUSH
12171: EMPTY
12172: LIST
12173: LIST
12174: PUSH
12175: LD_INT 2
12177: PUSH
12178: LD_INT 1
12180: PUSH
12181: EMPTY
12182: LIST
12183: LIST
12184: PUSH
12185: LD_INT 2
12187: PUSH
12188: LD_INT 2
12190: PUSH
12191: EMPTY
12192: LIST
12193: LIST
12194: PUSH
12195: LD_INT 1
12197: PUSH
12198: LD_INT 2
12200: PUSH
12201: EMPTY
12202: LIST
12203: LIST
12204: PUSH
12205: LD_INT 0
12207: PUSH
12208: LD_INT 2
12210: PUSH
12211: EMPTY
12212: LIST
12213: LIST
12214: PUSH
12215: LD_INT 1
12217: NEG
12218: PUSH
12219: LD_INT 1
12221: PUSH
12222: EMPTY
12223: LIST
12224: LIST
12225: PUSH
12226: LD_INT 2
12228: NEG
12229: PUSH
12230: LD_INT 0
12232: PUSH
12233: EMPTY
12234: LIST
12235: LIST
12236: PUSH
12237: LD_INT 2
12239: NEG
12240: PUSH
12241: LD_INT 1
12243: NEG
12244: PUSH
12245: EMPTY
12246: LIST
12247: LIST
12248: PUSH
12249: LD_INT 2
12251: NEG
12252: PUSH
12253: LD_INT 2
12255: NEG
12256: PUSH
12257: EMPTY
12258: LIST
12259: LIST
12260: PUSH
12261: LD_INT 3
12263: PUSH
12264: LD_INT 1
12266: PUSH
12267: EMPTY
12268: LIST
12269: LIST
12270: PUSH
12271: LD_INT 3
12273: PUSH
12274: LD_INT 2
12276: PUSH
12277: EMPTY
12278: LIST
12279: LIST
12280: PUSH
12281: LD_INT 2
12283: PUSH
12284: LD_INT 3
12286: PUSH
12287: EMPTY
12288: LIST
12289: LIST
12290: PUSH
12291: LD_INT 1
12293: PUSH
12294: LD_INT 3
12296: PUSH
12297: EMPTY
12298: LIST
12299: LIST
12300: PUSH
12301: EMPTY
12302: LIST
12303: LIST
12304: LIST
12305: LIST
12306: LIST
12307: LIST
12308: LIST
12309: LIST
12310: LIST
12311: LIST
12312: LIST
12313: LIST
12314: LIST
12315: LIST
12316: LIST
12317: LIST
12318: LIST
12319: LIST
12320: LIST
12321: LIST
12322: LIST
12323: LIST
12324: LIST
12325: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12326: LD_ADDR_VAR 0 26
12330: PUSH
12331: LD_INT 0
12333: PUSH
12334: LD_INT 0
12336: PUSH
12337: EMPTY
12338: LIST
12339: LIST
12340: PUSH
12341: LD_INT 0
12343: PUSH
12344: LD_INT 1
12346: NEG
12347: PUSH
12348: EMPTY
12349: LIST
12350: LIST
12351: PUSH
12352: LD_INT 1
12354: PUSH
12355: LD_INT 0
12357: PUSH
12358: EMPTY
12359: LIST
12360: LIST
12361: PUSH
12362: LD_INT 1
12364: PUSH
12365: LD_INT 1
12367: PUSH
12368: EMPTY
12369: LIST
12370: LIST
12371: PUSH
12372: LD_INT 0
12374: PUSH
12375: LD_INT 1
12377: PUSH
12378: EMPTY
12379: LIST
12380: LIST
12381: PUSH
12382: LD_INT 1
12384: NEG
12385: PUSH
12386: LD_INT 0
12388: PUSH
12389: EMPTY
12390: LIST
12391: LIST
12392: PUSH
12393: LD_INT 1
12395: NEG
12396: PUSH
12397: LD_INT 1
12399: NEG
12400: PUSH
12401: EMPTY
12402: LIST
12403: LIST
12404: PUSH
12405: LD_INT 1
12407: NEG
12408: PUSH
12409: LD_INT 2
12411: NEG
12412: PUSH
12413: EMPTY
12414: LIST
12415: LIST
12416: PUSH
12417: LD_INT 0
12419: PUSH
12420: LD_INT 2
12422: NEG
12423: PUSH
12424: EMPTY
12425: LIST
12426: LIST
12427: PUSH
12428: LD_INT 1
12430: PUSH
12431: LD_INT 1
12433: NEG
12434: PUSH
12435: EMPTY
12436: LIST
12437: LIST
12438: PUSH
12439: LD_INT 2
12441: PUSH
12442: LD_INT 0
12444: PUSH
12445: EMPTY
12446: LIST
12447: LIST
12448: PUSH
12449: LD_INT 2
12451: PUSH
12452: LD_INT 1
12454: PUSH
12455: EMPTY
12456: LIST
12457: LIST
12458: PUSH
12459: LD_INT 2
12461: PUSH
12462: LD_INT 2
12464: PUSH
12465: EMPTY
12466: LIST
12467: LIST
12468: PUSH
12469: LD_INT 1
12471: PUSH
12472: LD_INT 2
12474: PUSH
12475: EMPTY
12476: LIST
12477: LIST
12478: PUSH
12479: LD_INT 0
12481: PUSH
12482: LD_INT 2
12484: PUSH
12485: EMPTY
12486: LIST
12487: LIST
12488: PUSH
12489: LD_INT 1
12491: NEG
12492: PUSH
12493: LD_INT 1
12495: PUSH
12496: EMPTY
12497: LIST
12498: LIST
12499: PUSH
12500: LD_INT 2
12502: NEG
12503: PUSH
12504: LD_INT 0
12506: PUSH
12507: EMPTY
12508: LIST
12509: LIST
12510: PUSH
12511: LD_INT 2
12513: NEG
12514: PUSH
12515: LD_INT 1
12517: NEG
12518: PUSH
12519: EMPTY
12520: LIST
12521: LIST
12522: PUSH
12523: LD_INT 2
12525: NEG
12526: PUSH
12527: LD_INT 2
12529: NEG
12530: PUSH
12531: EMPTY
12532: LIST
12533: LIST
12534: PUSH
12535: LD_INT 2
12537: PUSH
12538: LD_INT 3
12540: PUSH
12541: EMPTY
12542: LIST
12543: LIST
12544: PUSH
12545: LD_INT 1
12547: PUSH
12548: LD_INT 3
12550: PUSH
12551: EMPTY
12552: LIST
12553: LIST
12554: PUSH
12555: LD_INT 1
12557: NEG
12558: PUSH
12559: LD_INT 2
12561: PUSH
12562: EMPTY
12563: LIST
12564: LIST
12565: PUSH
12566: LD_INT 2
12568: NEG
12569: PUSH
12570: LD_INT 1
12572: PUSH
12573: EMPTY
12574: LIST
12575: LIST
12576: PUSH
12577: EMPTY
12578: LIST
12579: LIST
12580: LIST
12581: LIST
12582: LIST
12583: LIST
12584: LIST
12585: LIST
12586: LIST
12587: LIST
12588: LIST
12589: LIST
12590: LIST
12591: LIST
12592: LIST
12593: LIST
12594: LIST
12595: LIST
12596: LIST
12597: LIST
12598: LIST
12599: LIST
12600: LIST
12601: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12602: LD_ADDR_VAR 0 27
12606: PUSH
12607: LD_INT 0
12609: PUSH
12610: LD_INT 0
12612: PUSH
12613: EMPTY
12614: LIST
12615: LIST
12616: PUSH
12617: LD_INT 0
12619: PUSH
12620: LD_INT 1
12622: NEG
12623: PUSH
12624: EMPTY
12625: LIST
12626: LIST
12627: PUSH
12628: LD_INT 1
12630: PUSH
12631: LD_INT 0
12633: PUSH
12634: EMPTY
12635: LIST
12636: LIST
12637: PUSH
12638: LD_INT 1
12640: PUSH
12641: LD_INT 1
12643: PUSH
12644: EMPTY
12645: LIST
12646: LIST
12647: PUSH
12648: LD_INT 0
12650: PUSH
12651: LD_INT 1
12653: PUSH
12654: EMPTY
12655: LIST
12656: LIST
12657: PUSH
12658: LD_INT 1
12660: NEG
12661: PUSH
12662: LD_INT 0
12664: PUSH
12665: EMPTY
12666: LIST
12667: LIST
12668: PUSH
12669: LD_INT 1
12671: NEG
12672: PUSH
12673: LD_INT 1
12675: NEG
12676: PUSH
12677: EMPTY
12678: LIST
12679: LIST
12680: PUSH
12681: LD_INT 1
12683: NEG
12684: PUSH
12685: LD_INT 2
12687: NEG
12688: PUSH
12689: EMPTY
12690: LIST
12691: LIST
12692: PUSH
12693: LD_INT 0
12695: PUSH
12696: LD_INT 2
12698: NEG
12699: PUSH
12700: EMPTY
12701: LIST
12702: LIST
12703: PUSH
12704: LD_INT 1
12706: PUSH
12707: LD_INT 1
12709: NEG
12710: PUSH
12711: EMPTY
12712: LIST
12713: LIST
12714: PUSH
12715: LD_INT 2
12717: PUSH
12718: LD_INT 0
12720: PUSH
12721: EMPTY
12722: LIST
12723: LIST
12724: PUSH
12725: LD_INT 2
12727: PUSH
12728: LD_INT 1
12730: PUSH
12731: EMPTY
12732: LIST
12733: LIST
12734: PUSH
12735: LD_INT 2
12737: PUSH
12738: LD_INT 2
12740: PUSH
12741: EMPTY
12742: LIST
12743: LIST
12744: PUSH
12745: LD_INT 1
12747: PUSH
12748: LD_INT 2
12750: PUSH
12751: EMPTY
12752: LIST
12753: LIST
12754: PUSH
12755: LD_INT 0
12757: PUSH
12758: LD_INT 2
12760: PUSH
12761: EMPTY
12762: LIST
12763: LIST
12764: PUSH
12765: LD_INT 1
12767: NEG
12768: PUSH
12769: LD_INT 1
12771: PUSH
12772: EMPTY
12773: LIST
12774: LIST
12775: PUSH
12776: LD_INT 2
12778: NEG
12779: PUSH
12780: LD_INT 0
12782: PUSH
12783: EMPTY
12784: LIST
12785: LIST
12786: PUSH
12787: LD_INT 2
12789: NEG
12790: PUSH
12791: LD_INT 1
12793: NEG
12794: PUSH
12795: EMPTY
12796: LIST
12797: LIST
12798: PUSH
12799: LD_INT 2
12801: NEG
12802: PUSH
12803: LD_INT 2
12805: NEG
12806: PUSH
12807: EMPTY
12808: LIST
12809: LIST
12810: PUSH
12811: LD_INT 1
12813: NEG
12814: PUSH
12815: LD_INT 2
12817: PUSH
12818: EMPTY
12819: LIST
12820: LIST
12821: PUSH
12822: LD_INT 2
12824: NEG
12825: PUSH
12826: LD_INT 1
12828: PUSH
12829: EMPTY
12830: LIST
12831: LIST
12832: PUSH
12833: LD_INT 3
12835: NEG
12836: PUSH
12837: LD_INT 1
12839: NEG
12840: PUSH
12841: EMPTY
12842: LIST
12843: LIST
12844: PUSH
12845: LD_INT 3
12847: NEG
12848: PUSH
12849: LD_INT 2
12851: NEG
12852: PUSH
12853: EMPTY
12854: LIST
12855: LIST
12856: PUSH
12857: EMPTY
12858: LIST
12859: LIST
12860: LIST
12861: LIST
12862: LIST
12863: LIST
12864: LIST
12865: LIST
12866: LIST
12867: LIST
12868: LIST
12869: LIST
12870: LIST
12871: LIST
12872: LIST
12873: LIST
12874: LIST
12875: LIST
12876: LIST
12877: LIST
12878: LIST
12879: LIST
12880: LIST
12881: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12882: LD_ADDR_VAR 0 28
12886: PUSH
12887: LD_INT 0
12889: PUSH
12890: LD_INT 0
12892: PUSH
12893: EMPTY
12894: LIST
12895: LIST
12896: PUSH
12897: LD_INT 0
12899: PUSH
12900: LD_INT 1
12902: NEG
12903: PUSH
12904: EMPTY
12905: LIST
12906: LIST
12907: PUSH
12908: LD_INT 1
12910: PUSH
12911: LD_INT 0
12913: PUSH
12914: EMPTY
12915: LIST
12916: LIST
12917: PUSH
12918: LD_INT 1
12920: PUSH
12921: LD_INT 1
12923: PUSH
12924: EMPTY
12925: LIST
12926: LIST
12927: PUSH
12928: LD_INT 0
12930: PUSH
12931: LD_INT 1
12933: PUSH
12934: EMPTY
12935: LIST
12936: LIST
12937: PUSH
12938: LD_INT 1
12940: NEG
12941: PUSH
12942: LD_INT 0
12944: PUSH
12945: EMPTY
12946: LIST
12947: LIST
12948: PUSH
12949: LD_INT 1
12951: NEG
12952: PUSH
12953: LD_INT 1
12955: NEG
12956: PUSH
12957: EMPTY
12958: LIST
12959: LIST
12960: PUSH
12961: LD_INT 1
12963: NEG
12964: PUSH
12965: LD_INT 2
12967: NEG
12968: PUSH
12969: EMPTY
12970: LIST
12971: LIST
12972: PUSH
12973: LD_INT 0
12975: PUSH
12976: LD_INT 2
12978: NEG
12979: PUSH
12980: EMPTY
12981: LIST
12982: LIST
12983: PUSH
12984: LD_INT 1
12986: PUSH
12987: LD_INT 1
12989: NEG
12990: PUSH
12991: EMPTY
12992: LIST
12993: LIST
12994: PUSH
12995: LD_INT 2
12997: PUSH
12998: LD_INT 0
13000: PUSH
13001: EMPTY
13002: LIST
13003: LIST
13004: PUSH
13005: LD_INT 2
13007: PUSH
13008: LD_INT 1
13010: PUSH
13011: EMPTY
13012: LIST
13013: LIST
13014: PUSH
13015: LD_INT 2
13017: PUSH
13018: LD_INT 2
13020: PUSH
13021: EMPTY
13022: LIST
13023: LIST
13024: PUSH
13025: LD_INT 1
13027: PUSH
13028: LD_INT 2
13030: PUSH
13031: EMPTY
13032: LIST
13033: LIST
13034: PUSH
13035: LD_INT 0
13037: PUSH
13038: LD_INT 2
13040: PUSH
13041: EMPTY
13042: LIST
13043: LIST
13044: PUSH
13045: LD_INT 1
13047: NEG
13048: PUSH
13049: LD_INT 1
13051: PUSH
13052: EMPTY
13053: LIST
13054: LIST
13055: PUSH
13056: LD_INT 2
13058: NEG
13059: PUSH
13060: LD_INT 0
13062: PUSH
13063: EMPTY
13064: LIST
13065: LIST
13066: PUSH
13067: LD_INT 2
13069: NEG
13070: PUSH
13071: LD_INT 1
13073: NEG
13074: PUSH
13075: EMPTY
13076: LIST
13077: LIST
13078: PUSH
13079: LD_INT 2
13081: NEG
13082: PUSH
13083: LD_INT 2
13085: NEG
13086: PUSH
13087: EMPTY
13088: LIST
13089: LIST
13090: PUSH
13091: LD_INT 2
13093: NEG
13094: PUSH
13095: LD_INT 3
13097: NEG
13098: PUSH
13099: EMPTY
13100: LIST
13101: LIST
13102: PUSH
13103: LD_INT 1
13105: NEG
13106: PUSH
13107: LD_INT 3
13109: NEG
13110: PUSH
13111: EMPTY
13112: LIST
13113: LIST
13114: PUSH
13115: LD_INT 3
13117: NEG
13118: PUSH
13119: LD_INT 1
13121: NEG
13122: PUSH
13123: EMPTY
13124: LIST
13125: LIST
13126: PUSH
13127: LD_INT 3
13129: NEG
13130: PUSH
13131: LD_INT 2
13133: NEG
13134: PUSH
13135: EMPTY
13136: LIST
13137: LIST
13138: PUSH
13139: EMPTY
13140: LIST
13141: LIST
13142: LIST
13143: LIST
13144: LIST
13145: LIST
13146: LIST
13147: LIST
13148: LIST
13149: LIST
13150: LIST
13151: LIST
13152: LIST
13153: LIST
13154: LIST
13155: LIST
13156: LIST
13157: LIST
13158: LIST
13159: LIST
13160: LIST
13161: LIST
13162: LIST
13163: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13164: LD_ADDR_VAR 0 29
13168: PUSH
13169: LD_INT 0
13171: PUSH
13172: LD_INT 0
13174: PUSH
13175: EMPTY
13176: LIST
13177: LIST
13178: PUSH
13179: LD_INT 0
13181: PUSH
13182: LD_INT 1
13184: NEG
13185: PUSH
13186: EMPTY
13187: LIST
13188: LIST
13189: PUSH
13190: LD_INT 1
13192: PUSH
13193: LD_INT 0
13195: PUSH
13196: EMPTY
13197: LIST
13198: LIST
13199: PUSH
13200: LD_INT 1
13202: PUSH
13203: LD_INT 1
13205: PUSH
13206: EMPTY
13207: LIST
13208: LIST
13209: PUSH
13210: LD_INT 0
13212: PUSH
13213: LD_INT 1
13215: PUSH
13216: EMPTY
13217: LIST
13218: LIST
13219: PUSH
13220: LD_INT 1
13222: NEG
13223: PUSH
13224: LD_INT 0
13226: PUSH
13227: EMPTY
13228: LIST
13229: LIST
13230: PUSH
13231: LD_INT 1
13233: NEG
13234: PUSH
13235: LD_INT 1
13237: NEG
13238: PUSH
13239: EMPTY
13240: LIST
13241: LIST
13242: PUSH
13243: LD_INT 1
13245: NEG
13246: PUSH
13247: LD_INT 2
13249: NEG
13250: PUSH
13251: EMPTY
13252: LIST
13253: LIST
13254: PUSH
13255: LD_INT 0
13257: PUSH
13258: LD_INT 2
13260: NEG
13261: PUSH
13262: EMPTY
13263: LIST
13264: LIST
13265: PUSH
13266: LD_INT 1
13268: PUSH
13269: LD_INT 1
13271: NEG
13272: PUSH
13273: EMPTY
13274: LIST
13275: LIST
13276: PUSH
13277: LD_INT 2
13279: PUSH
13280: LD_INT 0
13282: PUSH
13283: EMPTY
13284: LIST
13285: LIST
13286: PUSH
13287: LD_INT 2
13289: PUSH
13290: LD_INT 1
13292: PUSH
13293: EMPTY
13294: LIST
13295: LIST
13296: PUSH
13297: LD_INT 1
13299: PUSH
13300: LD_INT 2
13302: PUSH
13303: EMPTY
13304: LIST
13305: LIST
13306: PUSH
13307: LD_INT 0
13309: PUSH
13310: LD_INT 2
13312: PUSH
13313: EMPTY
13314: LIST
13315: LIST
13316: PUSH
13317: LD_INT 1
13319: NEG
13320: PUSH
13321: LD_INT 1
13323: PUSH
13324: EMPTY
13325: LIST
13326: LIST
13327: PUSH
13328: LD_INT 2
13330: NEG
13331: PUSH
13332: LD_INT 1
13334: NEG
13335: PUSH
13336: EMPTY
13337: LIST
13338: LIST
13339: PUSH
13340: LD_INT 2
13342: NEG
13343: PUSH
13344: LD_INT 2
13346: NEG
13347: PUSH
13348: EMPTY
13349: LIST
13350: LIST
13351: PUSH
13352: LD_INT 2
13354: NEG
13355: PUSH
13356: LD_INT 3
13358: NEG
13359: PUSH
13360: EMPTY
13361: LIST
13362: LIST
13363: PUSH
13364: LD_INT 2
13366: PUSH
13367: LD_INT 1
13369: NEG
13370: PUSH
13371: EMPTY
13372: LIST
13373: LIST
13374: PUSH
13375: LD_INT 3
13377: PUSH
13378: LD_INT 1
13380: PUSH
13381: EMPTY
13382: LIST
13383: LIST
13384: PUSH
13385: LD_INT 1
13387: PUSH
13388: LD_INT 3
13390: PUSH
13391: EMPTY
13392: LIST
13393: LIST
13394: PUSH
13395: LD_INT 1
13397: NEG
13398: PUSH
13399: LD_INT 2
13401: PUSH
13402: EMPTY
13403: LIST
13404: LIST
13405: PUSH
13406: LD_INT 3
13408: NEG
13409: PUSH
13410: LD_INT 2
13412: NEG
13413: PUSH
13414: EMPTY
13415: LIST
13416: LIST
13417: PUSH
13418: EMPTY
13419: LIST
13420: LIST
13421: LIST
13422: LIST
13423: LIST
13424: LIST
13425: LIST
13426: LIST
13427: LIST
13428: LIST
13429: LIST
13430: LIST
13431: LIST
13432: LIST
13433: LIST
13434: LIST
13435: LIST
13436: LIST
13437: LIST
13438: LIST
13439: LIST
13440: LIST
13441: LIST
13442: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13443: LD_ADDR_VAR 0 30
13447: PUSH
13448: LD_INT 0
13450: PUSH
13451: LD_INT 0
13453: PUSH
13454: EMPTY
13455: LIST
13456: LIST
13457: PUSH
13458: LD_INT 0
13460: PUSH
13461: LD_INT 1
13463: NEG
13464: PUSH
13465: EMPTY
13466: LIST
13467: LIST
13468: PUSH
13469: LD_INT 1
13471: PUSH
13472: LD_INT 0
13474: PUSH
13475: EMPTY
13476: LIST
13477: LIST
13478: PUSH
13479: LD_INT 1
13481: PUSH
13482: LD_INT 1
13484: PUSH
13485: EMPTY
13486: LIST
13487: LIST
13488: PUSH
13489: LD_INT 0
13491: PUSH
13492: LD_INT 1
13494: PUSH
13495: EMPTY
13496: LIST
13497: LIST
13498: PUSH
13499: LD_INT 1
13501: NEG
13502: PUSH
13503: LD_INT 0
13505: PUSH
13506: EMPTY
13507: LIST
13508: LIST
13509: PUSH
13510: LD_INT 1
13512: NEG
13513: PUSH
13514: LD_INT 1
13516: NEG
13517: PUSH
13518: EMPTY
13519: LIST
13520: LIST
13521: PUSH
13522: LD_INT 1
13524: NEG
13525: PUSH
13526: LD_INT 2
13528: NEG
13529: PUSH
13530: EMPTY
13531: LIST
13532: LIST
13533: PUSH
13534: LD_INT 0
13536: PUSH
13537: LD_INT 2
13539: NEG
13540: PUSH
13541: EMPTY
13542: LIST
13543: LIST
13544: PUSH
13545: LD_INT 1
13547: PUSH
13548: LD_INT 1
13550: NEG
13551: PUSH
13552: EMPTY
13553: LIST
13554: LIST
13555: PUSH
13556: LD_INT 2
13558: PUSH
13559: LD_INT 0
13561: PUSH
13562: EMPTY
13563: LIST
13564: LIST
13565: PUSH
13566: LD_INT 2
13568: PUSH
13569: LD_INT 1
13571: PUSH
13572: EMPTY
13573: LIST
13574: LIST
13575: PUSH
13576: LD_INT 2
13578: PUSH
13579: LD_INT 2
13581: PUSH
13582: EMPTY
13583: LIST
13584: LIST
13585: PUSH
13586: LD_INT 1
13588: PUSH
13589: LD_INT 2
13591: PUSH
13592: EMPTY
13593: LIST
13594: LIST
13595: PUSH
13596: LD_INT 1
13598: NEG
13599: PUSH
13600: LD_INT 1
13602: PUSH
13603: EMPTY
13604: LIST
13605: LIST
13606: PUSH
13607: LD_INT 2
13609: NEG
13610: PUSH
13611: LD_INT 0
13613: PUSH
13614: EMPTY
13615: LIST
13616: LIST
13617: PUSH
13618: LD_INT 2
13620: NEG
13621: PUSH
13622: LD_INT 1
13624: NEG
13625: PUSH
13626: EMPTY
13627: LIST
13628: LIST
13629: PUSH
13630: LD_INT 1
13632: NEG
13633: PUSH
13634: LD_INT 3
13636: NEG
13637: PUSH
13638: EMPTY
13639: LIST
13640: LIST
13641: PUSH
13642: LD_INT 1
13644: PUSH
13645: LD_INT 2
13647: NEG
13648: PUSH
13649: EMPTY
13650: LIST
13651: LIST
13652: PUSH
13653: LD_INT 3
13655: PUSH
13656: LD_INT 2
13658: PUSH
13659: EMPTY
13660: LIST
13661: LIST
13662: PUSH
13663: LD_INT 2
13665: PUSH
13666: LD_INT 3
13668: PUSH
13669: EMPTY
13670: LIST
13671: LIST
13672: PUSH
13673: LD_INT 2
13675: NEG
13676: PUSH
13677: LD_INT 1
13679: PUSH
13680: EMPTY
13681: LIST
13682: LIST
13683: PUSH
13684: LD_INT 3
13686: NEG
13687: PUSH
13688: LD_INT 1
13690: NEG
13691: PUSH
13692: EMPTY
13693: LIST
13694: LIST
13695: PUSH
13696: EMPTY
13697: LIST
13698: LIST
13699: LIST
13700: LIST
13701: LIST
13702: LIST
13703: LIST
13704: LIST
13705: LIST
13706: LIST
13707: LIST
13708: LIST
13709: LIST
13710: LIST
13711: LIST
13712: LIST
13713: LIST
13714: LIST
13715: LIST
13716: LIST
13717: LIST
13718: LIST
13719: LIST
13720: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13721: LD_ADDR_VAR 0 31
13725: PUSH
13726: LD_INT 0
13728: PUSH
13729: LD_INT 0
13731: PUSH
13732: EMPTY
13733: LIST
13734: LIST
13735: PUSH
13736: LD_INT 0
13738: PUSH
13739: LD_INT 1
13741: NEG
13742: PUSH
13743: EMPTY
13744: LIST
13745: LIST
13746: PUSH
13747: LD_INT 1
13749: PUSH
13750: LD_INT 0
13752: PUSH
13753: EMPTY
13754: LIST
13755: LIST
13756: PUSH
13757: LD_INT 1
13759: PUSH
13760: LD_INT 1
13762: PUSH
13763: EMPTY
13764: LIST
13765: LIST
13766: PUSH
13767: LD_INT 0
13769: PUSH
13770: LD_INT 1
13772: PUSH
13773: EMPTY
13774: LIST
13775: LIST
13776: PUSH
13777: LD_INT 1
13779: NEG
13780: PUSH
13781: LD_INT 0
13783: PUSH
13784: EMPTY
13785: LIST
13786: LIST
13787: PUSH
13788: LD_INT 1
13790: NEG
13791: PUSH
13792: LD_INT 1
13794: NEG
13795: PUSH
13796: EMPTY
13797: LIST
13798: LIST
13799: PUSH
13800: LD_INT 1
13802: NEG
13803: PUSH
13804: LD_INT 2
13806: NEG
13807: PUSH
13808: EMPTY
13809: LIST
13810: LIST
13811: PUSH
13812: LD_INT 1
13814: PUSH
13815: LD_INT 1
13817: NEG
13818: PUSH
13819: EMPTY
13820: LIST
13821: LIST
13822: PUSH
13823: LD_INT 2
13825: PUSH
13826: LD_INT 0
13828: PUSH
13829: EMPTY
13830: LIST
13831: LIST
13832: PUSH
13833: LD_INT 2
13835: PUSH
13836: LD_INT 1
13838: PUSH
13839: EMPTY
13840: LIST
13841: LIST
13842: PUSH
13843: LD_INT 2
13845: PUSH
13846: LD_INT 2
13848: PUSH
13849: EMPTY
13850: LIST
13851: LIST
13852: PUSH
13853: LD_INT 1
13855: PUSH
13856: LD_INT 2
13858: PUSH
13859: EMPTY
13860: LIST
13861: LIST
13862: PUSH
13863: LD_INT 0
13865: PUSH
13866: LD_INT 2
13868: PUSH
13869: EMPTY
13870: LIST
13871: LIST
13872: PUSH
13873: LD_INT 1
13875: NEG
13876: PUSH
13877: LD_INT 1
13879: PUSH
13880: EMPTY
13881: LIST
13882: LIST
13883: PUSH
13884: LD_INT 2
13886: NEG
13887: PUSH
13888: LD_INT 1
13890: NEG
13891: PUSH
13892: EMPTY
13893: LIST
13894: LIST
13895: PUSH
13896: LD_INT 2
13898: NEG
13899: PUSH
13900: LD_INT 2
13902: NEG
13903: PUSH
13904: EMPTY
13905: LIST
13906: LIST
13907: PUSH
13908: LD_INT 2
13910: NEG
13911: PUSH
13912: LD_INT 3
13914: NEG
13915: PUSH
13916: EMPTY
13917: LIST
13918: LIST
13919: PUSH
13920: LD_INT 2
13922: PUSH
13923: LD_INT 1
13925: NEG
13926: PUSH
13927: EMPTY
13928: LIST
13929: LIST
13930: PUSH
13931: LD_INT 3
13933: PUSH
13934: LD_INT 1
13936: PUSH
13937: EMPTY
13938: LIST
13939: LIST
13940: PUSH
13941: LD_INT 1
13943: PUSH
13944: LD_INT 3
13946: PUSH
13947: EMPTY
13948: LIST
13949: LIST
13950: PUSH
13951: LD_INT 1
13953: NEG
13954: PUSH
13955: LD_INT 2
13957: PUSH
13958: EMPTY
13959: LIST
13960: LIST
13961: PUSH
13962: LD_INT 3
13964: NEG
13965: PUSH
13966: LD_INT 2
13968: NEG
13969: PUSH
13970: EMPTY
13971: LIST
13972: LIST
13973: PUSH
13974: EMPTY
13975: LIST
13976: LIST
13977: LIST
13978: LIST
13979: LIST
13980: LIST
13981: LIST
13982: LIST
13983: LIST
13984: LIST
13985: LIST
13986: LIST
13987: LIST
13988: LIST
13989: LIST
13990: LIST
13991: LIST
13992: LIST
13993: LIST
13994: LIST
13995: LIST
13996: LIST
13997: LIST
13998: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13999: LD_ADDR_VAR 0 32
14003: PUSH
14004: LD_INT 0
14006: PUSH
14007: LD_INT 0
14009: PUSH
14010: EMPTY
14011: LIST
14012: LIST
14013: PUSH
14014: LD_INT 0
14016: PUSH
14017: LD_INT 1
14019: NEG
14020: PUSH
14021: EMPTY
14022: LIST
14023: LIST
14024: PUSH
14025: LD_INT 1
14027: PUSH
14028: LD_INT 0
14030: PUSH
14031: EMPTY
14032: LIST
14033: LIST
14034: PUSH
14035: LD_INT 1
14037: PUSH
14038: LD_INT 1
14040: PUSH
14041: EMPTY
14042: LIST
14043: LIST
14044: PUSH
14045: LD_INT 0
14047: PUSH
14048: LD_INT 1
14050: PUSH
14051: EMPTY
14052: LIST
14053: LIST
14054: PUSH
14055: LD_INT 1
14057: NEG
14058: PUSH
14059: LD_INT 0
14061: PUSH
14062: EMPTY
14063: LIST
14064: LIST
14065: PUSH
14066: LD_INT 1
14068: NEG
14069: PUSH
14070: LD_INT 1
14072: NEG
14073: PUSH
14074: EMPTY
14075: LIST
14076: LIST
14077: PUSH
14078: LD_INT 1
14080: NEG
14081: PUSH
14082: LD_INT 2
14084: NEG
14085: PUSH
14086: EMPTY
14087: LIST
14088: LIST
14089: PUSH
14090: LD_INT 0
14092: PUSH
14093: LD_INT 2
14095: NEG
14096: PUSH
14097: EMPTY
14098: LIST
14099: LIST
14100: PUSH
14101: LD_INT 1
14103: PUSH
14104: LD_INT 1
14106: NEG
14107: PUSH
14108: EMPTY
14109: LIST
14110: LIST
14111: PUSH
14112: LD_INT 2
14114: PUSH
14115: LD_INT 1
14117: PUSH
14118: EMPTY
14119: LIST
14120: LIST
14121: PUSH
14122: LD_INT 2
14124: PUSH
14125: LD_INT 2
14127: PUSH
14128: EMPTY
14129: LIST
14130: LIST
14131: PUSH
14132: LD_INT 1
14134: PUSH
14135: LD_INT 2
14137: PUSH
14138: EMPTY
14139: LIST
14140: LIST
14141: PUSH
14142: LD_INT 0
14144: PUSH
14145: LD_INT 2
14147: PUSH
14148: EMPTY
14149: LIST
14150: LIST
14151: PUSH
14152: LD_INT 1
14154: NEG
14155: PUSH
14156: LD_INT 1
14158: PUSH
14159: EMPTY
14160: LIST
14161: LIST
14162: PUSH
14163: LD_INT 2
14165: NEG
14166: PUSH
14167: LD_INT 0
14169: PUSH
14170: EMPTY
14171: LIST
14172: LIST
14173: PUSH
14174: LD_INT 2
14176: NEG
14177: PUSH
14178: LD_INT 1
14180: NEG
14181: PUSH
14182: EMPTY
14183: LIST
14184: LIST
14185: PUSH
14186: LD_INT 1
14188: NEG
14189: PUSH
14190: LD_INT 3
14192: NEG
14193: PUSH
14194: EMPTY
14195: LIST
14196: LIST
14197: PUSH
14198: LD_INT 1
14200: PUSH
14201: LD_INT 2
14203: NEG
14204: PUSH
14205: EMPTY
14206: LIST
14207: LIST
14208: PUSH
14209: LD_INT 3
14211: PUSH
14212: LD_INT 2
14214: PUSH
14215: EMPTY
14216: LIST
14217: LIST
14218: PUSH
14219: LD_INT 2
14221: PUSH
14222: LD_INT 3
14224: PUSH
14225: EMPTY
14226: LIST
14227: LIST
14228: PUSH
14229: LD_INT 2
14231: NEG
14232: PUSH
14233: LD_INT 1
14235: PUSH
14236: EMPTY
14237: LIST
14238: LIST
14239: PUSH
14240: LD_INT 3
14242: NEG
14243: PUSH
14244: LD_INT 1
14246: NEG
14247: PUSH
14248: EMPTY
14249: LIST
14250: LIST
14251: PUSH
14252: EMPTY
14253: LIST
14254: LIST
14255: LIST
14256: LIST
14257: LIST
14258: LIST
14259: LIST
14260: LIST
14261: LIST
14262: LIST
14263: LIST
14264: LIST
14265: LIST
14266: LIST
14267: LIST
14268: LIST
14269: LIST
14270: LIST
14271: LIST
14272: LIST
14273: LIST
14274: LIST
14275: LIST
14276: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14277: LD_ADDR_VAR 0 33
14281: PUSH
14282: LD_INT 0
14284: PUSH
14285: LD_INT 0
14287: PUSH
14288: EMPTY
14289: LIST
14290: LIST
14291: PUSH
14292: LD_INT 0
14294: PUSH
14295: LD_INT 1
14297: NEG
14298: PUSH
14299: EMPTY
14300: LIST
14301: LIST
14302: PUSH
14303: LD_INT 1
14305: PUSH
14306: LD_INT 0
14308: PUSH
14309: EMPTY
14310: LIST
14311: LIST
14312: PUSH
14313: LD_INT 1
14315: PUSH
14316: LD_INT 1
14318: PUSH
14319: EMPTY
14320: LIST
14321: LIST
14322: PUSH
14323: LD_INT 0
14325: PUSH
14326: LD_INT 1
14328: PUSH
14329: EMPTY
14330: LIST
14331: LIST
14332: PUSH
14333: LD_INT 1
14335: NEG
14336: PUSH
14337: LD_INT 0
14339: PUSH
14340: EMPTY
14341: LIST
14342: LIST
14343: PUSH
14344: LD_INT 1
14346: NEG
14347: PUSH
14348: LD_INT 1
14350: NEG
14351: PUSH
14352: EMPTY
14353: LIST
14354: LIST
14355: PUSH
14356: LD_INT 1
14358: NEG
14359: PUSH
14360: LD_INT 2
14362: NEG
14363: PUSH
14364: EMPTY
14365: LIST
14366: LIST
14367: PUSH
14368: LD_INT 1
14370: PUSH
14371: LD_INT 1
14373: NEG
14374: PUSH
14375: EMPTY
14376: LIST
14377: LIST
14378: PUSH
14379: LD_INT 2
14381: PUSH
14382: LD_INT 0
14384: PUSH
14385: EMPTY
14386: LIST
14387: LIST
14388: PUSH
14389: LD_INT 2
14391: PUSH
14392: LD_INT 1
14394: PUSH
14395: EMPTY
14396: LIST
14397: LIST
14398: PUSH
14399: LD_INT 1
14401: PUSH
14402: LD_INT 2
14404: PUSH
14405: EMPTY
14406: LIST
14407: LIST
14408: PUSH
14409: LD_INT 0
14411: PUSH
14412: LD_INT 2
14414: PUSH
14415: EMPTY
14416: LIST
14417: LIST
14418: PUSH
14419: LD_INT 1
14421: NEG
14422: PUSH
14423: LD_INT 1
14425: PUSH
14426: EMPTY
14427: LIST
14428: LIST
14429: PUSH
14430: LD_INT 2
14432: NEG
14433: PUSH
14434: LD_INT 0
14436: PUSH
14437: EMPTY
14438: LIST
14439: LIST
14440: PUSH
14441: LD_INT 2
14443: NEG
14444: PUSH
14445: LD_INT 1
14447: NEG
14448: PUSH
14449: EMPTY
14450: LIST
14451: LIST
14452: PUSH
14453: LD_INT 2
14455: NEG
14456: PUSH
14457: LD_INT 2
14459: NEG
14460: PUSH
14461: EMPTY
14462: LIST
14463: LIST
14464: PUSH
14465: LD_INT 2
14467: NEG
14468: PUSH
14469: LD_INT 3
14471: NEG
14472: PUSH
14473: EMPTY
14474: LIST
14475: LIST
14476: PUSH
14477: LD_INT 2
14479: PUSH
14480: LD_INT 1
14482: NEG
14483: PUSH
14484: EMPTY
14485: LIST
14486: LIST
14487: PUSH
14488: LD_INT 3
14490: PUSH
14491: LD_INT 1
14493: PUSH
14494: EMPTY
14495: LIST
14496: LIST
14497: PUSH
14498: LD_INT 1
14500: PUSH
14501: LD_INT 3
14503: PUSH
14504: EMPTY
14505: LIST
14506: LIST
14507: PUSH
14508: LD_INT 1
14510: NEG
14511: PUSH
14512: LD_INT 2
14514: PUSH
14515: EMPTY
14516: LIST
14517: LIST
14518: PUSH
14519: LD_INT 3
14521: NEG
14522: PUSH
14523: LD_INT 2
14525: NEG
14526: PUSH
14527: EMPTY
14528: LIST
14529: LIST
14530: PUSH
14531: EMPTY
14532: LIST
14533: LIST
14534: LIST
14535: LIST
14536: LIST
14537: LIST
14538: LIST
14539: LIST
14540: LIST
14541: LIST
14542: LIST
14543: LIST
14544: LIST
14545: LIST
14546: LIST
14547: LIST
14548: LIST
14549: LIST
14550: LIST
14551: LIST
14552: LIST
14553: LIST
14554: LIST
14555: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14556: LD_ADDR_VAR 0 34
14560: PUSH
14561: LD_INT 0
14563: PUSH
14564: LD_INT 0
14566: PUSH
14567: EMPTY
14568: LIST
14569: LIST
14570: PUSH
14571: LD_INT 0
14573: PUSH
14574: LD_INT 1
14576: NEG
14577: PUSH
14578: EMPTY
14579: LIST
14580: LIST
14581: PUSH
14582: LD_INT 1
14584: PUSH
14585: LD_INT 0
14587: PUSH
14588: EMPTY
14589: LIST
14590: LIST
14591: PUSH
14592: LD_INT 1
14594: PUSH
14595: LD_INT 1
14597: PUSH
14598: EMPTY
14599: LIST
14600: LIST
14601: PUSH
14602: LD_INT 0
14604: PUSH
14605: LD_INT 1
14607: PUSH
14608: EMPTY
14609: LIST
14610: LIST
14611: PUSH
14612: LD_INT 1
14614: NEG
14615: PUSH
14616: LD_INT 0
14618: PUSH
14619: EMPTY
14620: LIST
14621: LIST
14622: PUSH
14623: LD_INT 1
14625: NEG
14626: PUSH
14627: LD_INT 1
14629: NEG
14630: PUSH
14631: EMPTY
14632: LIST
14633: LIST
14634: PUSH
14635: LD_INT 1
14637: NEG
14638: PUSH
14639: LD_INT 2
14641: NEG
14642: PUSH
14643: EMPTY
14644: LIST
14645: LIST
14646: PUSH
14647: LD_INT 0
14649: PUSH
14650: LD_INT 2
14652: NEG
14653: PUSH
14654: EMPTY
14655: LIST
14656: LIST
14657: PUSH
14658: LD_INT 1
14660: PUSH
14661: LD_INT 1
14663: NEG
14664: PUSH
14665: EMPTY
14666: LIST
14667: LIST
14668: PUSH
14669: LD_INT 2
14671: PUSH
14672: LD_INT 1
14674: PUSH
14675: EMPTY
14676: LIST
14677: LIST
14678: PUSH
14679: LD_INT 2
14681: PUSH
14682: LD_INT 2
14684: PUSH
14685: EMPTY
14686: LIST
14687: LIST
14688: PUSH
14689: LD_INT 1
14691: PUSH
14692: LD_INT 2
14694: PUSH
14695: EMPTY
14696: LIST
14697: LIST
14698: PUSH
14699: LD_INT 1
14701: NEG
14702: PUSH
14703: LD_INT 1
14705: PUSH
14706: EMPTY
14707: LIST
14708: LIST
14709: PUSH
14710: LD_INT 2
14712: NEG
14713: PUSH
14714: LD_INT 0
14716: PUSH
14717: EMPTY
14718: LIST
14719: LIST
14720: PUSH
14721: LD_INT 2
14723: NEG
14724: PUSH
14725: LD_INT 1
14727: NEG
14728: PUSH
14729: EMPTY
14730: LIST
14731: LIST
14732: PUSH
14733: LD_INT 2
14735: NEG
14736: PUSH
14737: LD_INT 2
14739: NEG
14740: PUSH
14741: EMPTY
14742: LIST
14743: LIST
14744: PUSH
14745: LD_INT 1
14747: NEG
14748: PUSH
14749: LD_INT 3
14751: NEG
14752: PUSH
14753: EMPTY
14754: LIST
14755: LIST
14756: PUSH
14757: LD_INT 1
14759: PUSH
14760: LD_INT 2
14762: NEG
14763: PUSH
14764: EMPTY
14765: LIST
14766: LIST
14767: PUSH
14768: LD_INT 3
14770: PUSH
14771: LD_INT 2
14773: PUSH
14774: EMPTY
14775: LIST
14776: LIST
14777: PUSH
14778: LD_INT 2
14780: PUSH
14781: LD_INT 3
14783: PUSH
14784: EMPTY
14785: LIST
14786: LIST
14787: PUSH
14788: LD_INT 2
14790: NEG
14791: PUSH
14792: LD_INT 1
14794: PUSH
14795: EMPTY
14796: LIST
14797: LIST
14798: PUSH
14799: LD_INT 3
14801: NEG
14802: PUSH
14803: LD_INT 1
14805: NEG
14806: PUSH
14807: EMPTY
14808: LIST
14809: LIST
14810: PUSH
14811: EMPTY
14812: LIST
14813: LIST
14814: LIST
14815: LIST
14816: LIST
14817: LIST
14818: LIST
14819: LIST
14820: LIST
14821: LIST
14822: LIST
14823: LIST
14824: LIST
14825: LIST
14826: LIST
14827: LIST
14828: LIST
14829: LIST
14830: LIST
14831: LIST
14832: LIST
14833: LIST
14834: LIST
14835: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14836: LD_ADDR_VAR 0 35
14840: PUSH
14841: LD_INT 0
14843: PUSH
14844: LD_INT 0
14846: PUSH
14847: EMPTY
14848: LIST
14849: LIST
14850: PUSH
14851: LD_INT 0
14853: PUSH
14854: LD_INT 1
14856: NEG
14857: PUSH
14858: EMPTY
14859: LIST
14860: LIST
14861: PUSH
14862: LD_INT 1
14864: PUSH
14865: LD_INT 0
14867: PUSH
14868: EMPTY
14869: LIST
14870: LIST
14871: PUSH
14872: LD_INT 1
14874: PUSH
14875: LD_INT 1
14877: PUSH
14878: EMPTY
14879: LIST
14880: LIST
14881: PUSH
14882: LD_INT 0
14884: PUSH
14885: LD_INT 1
14887: PUSH
14888: EMPTY
14889: LIST
14890: LIST
14891: PUSH
14892: LD_INT 1
14894: NEG
14895: PUSH
14896: LD_INT 0
14898: PUSH
14899: EMPTY
14900: LIST
14901: LIST
14902: PUSH
14903: LD_INT 1
14905: NEG
14906: PUSH
14907: LD_INT 1
14909: NEG
14910: PUSH
14911: EMPTY
14912: LIST
14913: LIST
14914: PUSH
14915: LD_INT 2
14917: PUSH
14918: LD_INT 1
14920: PUSH
14921: EMPTY
14922: LIST
14923: LIST
14924: PUSH
14925: LD_INT 2
14927: NEG
14928: PUSH
14929: LD_INT 1
14931: NEG
14932: PUSH
14933: EMPTY
14934: LIST
14935: LIST
14936: PUSH
14937: EMPTY
14938: LIST
14939: LIST
14940: LIST
14941: LIST
14942: LIST
14943: LIST
14944: LIST
14945: LIST
14946: LIST
14947: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14948: LD_ADDR_VAR 0 36
14952: PUSH
14953: LD_INT 0
14955: PUSH
14956: LD_INT 0
14958: PUSH
14959: EMPTY
14960: LIST
14961: LIST
14962: PUSH
14963: LD_INT 0
14965: PUSH
14966: LD_INT 1
14968: NEG
14969: PUSH
14970: EMPTY
14971: LIST
14972: LIST
14973: PUSH
14974: LD_INT 1
14976: PUSH
14977: LD_INT 0
14979: PUSH
14980: EMPTY
14981: LIST
14982: LIST
14983: PUSH
14984: LD_INT 1
14986: PUSH
14987: LD_INT 1
14989: PUSH
14990: EMPTY
14991: LIST
14992: LIST
14993: PUSH
14994: LD_INT 0
14996: PUSH
14997: LD_INT 1
14999: PUSH
15000: EMPTY
15001: LIST
15002: LIST
15003: PUSH
15004: LD_INT 1
15006: NEG
15007: PUSH
15008: LD_INT 0
15010: PUSH
15011: EMPTY
15012: LIST
15013: LIST
15014: PUSH
15015: LD_INT 1
15017: NEG
15018: PUSH
15019: LD_INT 1
15021: NEG
15022: PUSH
15023: EMPTY
15024: LIST
15025: LIST
15026: PUSH
15027: LD_INT 1
15029: NEG
15030: PUSH
15031: LD_INT 2
15033: NEG
15034: PUSH
15035: EMPTY
15036: LIST
15037: LIST
15038: PUSH
15039: LD_INT 1
15041: PUSH
15042: LD_INT 2
15044: PUSH
15045: EMPTY
15046: LIST
15047: LIST
15048: PUSH
15049: EMPTY
15050: LIST
15051: LIST
15052: LIST
15053: LIST
15054: LIST
15055: LIST
15056: LIST
15057: LIST
15058: LIST
15059: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15060: LD_ADDR_VAR 0 37
15064: PUSH
15065: LD_INT 0
15067: PUSH
15068: LD_INT 0
15070: PUSH
15071: EMPTY
15072: LIST
15073: LIST
15074: PUSH
15075: LD_INT 0
15077: PUSH
15078: LD_INT 1
15080: NEG
15081: PUSH
15082: EMPTY
15083: LIST
15084: LIST
15085: PUSH
15086: LD_INT 1
15088: PUSH
15089: LD_INT 0
15091: PUSH
15092: EMPTY
15093: LIST
15094: LIST
15095: PUSH
15096: LD_INT 1
15098: PUSH
15099: LD_INT 1
15101: PUSH
15102: EMPTY
15103: LIST
15104: LIST
15105: PUSH
15106: LD_INT 0
15108: PUSH
15109: LD_INT 1
15111: PUSH
15112: EMPTY
15113: LIST
15114: LIST
15115: PUSH
15116: LD_INT 1
15118: NEG
15119: PUSH
15120: LD_INT 0
15122: PUSH
15123: EMPTY
15124: LIST
15125: LIST
15126: PUSH
15127: LD_INT 1
15129: NEG
15130: PUSH
15131: LD_INT 1
15133: NEG
15134: PUSH
15135: EMPTY
15136: LIST
15137: LIST
15138: PUSH
15139: LD_INT 1
15141: PUSH
15142: LD_INT 1
15144: NEG
15145: PUSH
15146: EMPTY
15147: LIST
15148: LIST
15149: PUSH
15150: LD_INT 1
15152: NEG
15153: PUSH
15154: LD_INT 1
15156: PUSH
15157: EMPTY
15158: LIST
15159: LIST
15160: PUSH
15161: EMPTY
15162: LIST
15163: LIST
15164: LIST
15165: LIST
15166: LIST
15167: LIST
15168: LIST
15169: LIST
15170: LIST
15171: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15172: LD_ADDR_VAR 0 38
15176: PUSH
15177: LD_INT 0
15179: PUSH
15180: LD_INT 0
15182: PUSH
15183: EMPTY
15184: LIST
15185: LIST
15186: PUSH
15187: LD_INT 0
15189: PUSH
15190: LD_INT 1
15192: NEG
15193: PUSH
15194: EMPTY
15195: LIST
15196: LIST
15197: PUSH
15198: LD_INT 1
15200: PUSH
15201: LD_INT 0
15203: PUSH
15204: EMPTY
15205: LIST
15206: LIST
15207: PUSH
15208: LD_INT 1
15210: PUSH
15211: LD_INT 1
15213: PUSH
15214: EMPTY
15215: LIST
15216: LIST
15217: PUSH
15218: LD_INT 0
15220: PUSH
15221: LD_INT 1
15223: PUSH
15224: EMPTY
15225: LIST
15226: LIST
15227: PUSH
15228: LD_INT 1
15230: NEG
15231: PUSH
15232: LD_INT 0
15234: PUSH
15235: EMPTY
15236: LIST
15237: LIST
15238: PUSH
15239: LD_INT 1
15241: NEG
15242: PUSH
15243: LD_INT 1
15245: NEG
15246: PUSH
15247: EMPTY
15248: LIST
15249: LIST
15250: PUSH
15251: LD_INT 2
15253: PUSH
15254: LD_INT 1
15256: PUSH
15257: EMPTY
15258: LIST
15259: LIST
15260: PUSH
15261: LD_INT 2
15263: NEG
15264: PUSH
15265: LD_INT 1
15267: NEG
15268: PUSH
15269: EMPTY
15270: LIST
15271: LIST
15272: PUSH
15273: EMPTY
15274: LIST
15275: LIST
15276: LIST
15277: LIST
15278: LIST
15279: LIST
15280: LIST
15281: LIST
15282: LIST
15283: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15284: LD_ADDR_VAR 0 39
15288: PUSH
15289: LD_INT 0
15291: PUSH
15292: LD_INT 0
15294: PUSH
15295: EMPTY
15296: LIST
15297: LIST
15298: PUSH
15299: LD_INT 0
15301: PUSH
15302: LD_INT 1
15304: NEG
15305: PUSH
15306: EMPTY
15307: LIST
15308: LIST
15309: PUSH
15310: LD_INT 1
15312: PUSH
15313: LD_INT 0
15315: PUSH
15316: EMPTY
15317: LIST
15318: LIST
15319: PUSH
15320: LD_INT 1
15322: PUSH
15323: LD_INT 1
15325: PUSH
15326: EMPTY
15327: LIST
15328: LIST
15329: PUSH
15330: LD_INT 0
15332: PUSH
15333: LD_INT 1
15335: PUSH
15336: EMPTY
15337: LIST
15338: LIST
15339: PUSH
15340: LD_INT 1
15342: NEG
15343: PUSH
15344: LD_INT 0
15346: PUSH
15347: EMPTY
15348: LIST
15349: LIST
15350: PUSH
15351: LD_INT 1
15353: NEG
15354: PUSH
15355: LD_INT 1
15357: NEG
15358: PUSH
15359: EMPTY
15360: LIST
15361: LIST
15362: PUSH
15363: LD_INT 1
15365: NEG
15366: PUSH
15367: LD_INT 2
15369: NEG
15370: PUSH
15371: EMPTY
15372: LIST
15373: LIST
15374: PUSH
15375: LD_INT 1
15377: PUSH
15378: LD_INT 2
15380: PUSH
15381: EMPTY
15382: LIST
15383: LIST
15384: PUSH
15385: EMPTY
15386: LIST
15387: LIST
15388: LIST
15389: LIST
15390: LIST
15391: LIST
15392: LIST
15393: LIST
15394: LIST
15395: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15396: LD_ADDR_VAR 0 40
15400: PUSH
15401: LD_INT 0
15403: PUSH
15404: LD_INT 0
15406: PUSH
15407: EMPTY
15408: LIST
15409: LIST
15410: PUSH
15411: LD_INT 0
15413: PUSH
15414: LD_INT 1
15416: NEG
15417: PUSH
15418: EMPTY
15419: LIST
15420: LIST
15421: PUSH
15422: LD_INT 1
15424: PUSH
15425: LD_INT 0
15427: PUSH
15428: EMPTY
15429: LIST
15430: LIST
15431: PUSH
15432: LD_INT 1
15434: PUSH
15435: LD_INT 1
15437: PUSH
15438: EMPTY
15439: LIST
15440: LIST
15441: PUSH
15442: LD_INT 0
15444: PUSH
15445: LD_INT 1
15447: PUSH
15448: EMPTY
15449: LIST
15450: LIST
15451: PUSH
15452: LD_INT 1
15454: NEG
15455: PUSH
15456: LD_INT 0
15458: PUSH
15459: EMPTY
15460: LIST
15461: LIST
15462: PUSH
15463: LD_INT 1
15465: NEG
15466: PUSH
15467: LD_INT 1
15469: NEG
15470: PUSH
15471: EMPTY
15472: LIST
15473: LIST
15474: PUSH
15475: LD_INT 1
15477: PUSH
15478: LD_INT 1
15480: NEG
15481: PUSH
15482: EMPTY
15483: LIST
15484: LIST
15485: PUSH
15486: LD_INT 1
15488: NEG
15489: PUSH
15490: LD_INT 1
15492: PUSH
15493: EMPTY
15494: LIST
15495: LIST
15496: PUSH
15497: EMPTY
15498: LIST
15499: LIST
15500: LIST
15501: LIST
15502: LIST
15503: LIST
15504: LIST
15505: LIST
15506: LIST
15507: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15508: LD_ADDR_VAR 0 41
15512: PUSH
15513: LD_INT 0
15515: PUSH
15516: LD_INT 0
15518: PUSH
15519: EMPTY
15520: LIST
15521: LIST
15522: PUSH
15523: LD_INT 0
15525: PUSH
15526: LD_INT 1
15528: NEG
15529: PUSH
15530: EMPTY
15531: LIST
15532: LIST
15533: PUSH
15534: LD_INT 1
15536: PUSH
15537: LD_INT 0
15539: PUSH
15540: EMPTY
15541: LIST
15542: LIST
15543: PUSH
15544: LD_INT 1
15546: PUSH
15547: LD_INT 1
15549: PUSH
15550: EMPTY
15551: LIST
15552: LIST
15553: PUSH
15554: LD_INT 0
15556: PUSH
15557: LD_INT 1
15559: PUSH
15560: EMPTY
15561: LIST
15562: LIST
15563: PUSH
15564: LD_INT 1
15566: NEG
15567: PUSH
15568: LD_INT 0
15570: PUSH
15571: EMPTY
15572: LIST
15573: LIST
15574: PUSH
15575: LD_INT 1
15577: NEG
15578: PUSH
15579: LD_INT 1
15581: NEG
15582: PUSH
15583: EMPTY
15584: LIST
15585: LIST
15586: PUSH
15587: LD_INT 1
15589: NEG
15590: PUSH
15591: LD_INT 2
15593: NEG
15594: PUSH
15595: EMPTY
15596: LIST
15597: LIST
15598: PUSH
15599: LD_INT 1
15601: PUSH
15602: LD_INT 1
15604: NEG
15605: PUSH
15606: EMPTY
15607: LIST
15608: LIST
15609: PUSH
15610: LD_INT 2
15612: PUSH
15613: LD_INT 0
15615: PUSH
15616: EMPTY
15617: LIST
15618: LIST
15619: PUSH
15620: LD_INT 2
15622: PUSH
15623: LD_INT 1
15625: PUSH
15626: EMPTY
15627: LIST
15628: LIST
15629: PUSH
15630: LD_INT 2
15632: PUSH
15633: LD_INT 2
15635: PUSH
15636: EMPTY
15637: LIST
15638: LIST
15639: PUSH
15640: LD_INT 1
15642: PUSH
15643: LD_INT 2
15645: PUSH
15646: EMPTY
15647: LIST
15648: LIST
15649: PUSH
15650: LD_INT 1
15652: NEG
15653: PUSH
15654: LD_INT 1
15656: PUSH
15657: EMPTY
15658: LIST
15659: LIST
15660: PUSH
15661: LD_INT 2
15663: NEG
15664: PUSH
15665: LD_INT 0
15667: PUSH
15668: EMPTY
15669: LIST
15670: LIST
15671: PUSH
15672: LD_INT 2
15674: NEG
15675: PUSH
15676: LD_INT 1
15678: NEG
15679: PUSH
15680: EMPTY
15681: LIST
15682: LIST
15683: PUSH
15684: LD_INT 2
15686: NEG
15687: PUSH
15688: LD_INT 2
15690: NEG
15691: PUSH
15692: EMPTY
15693: LIST
15694: LIST
15695: PUSH
15696: LD_INT 2
15698: NEG
15699: PUSH
15700: LD_INT 3
15702: NEG
15703: PUSH
15704: EMPTY
15705: LIST
15706: LIST
15707: PUSH
15708: LD_INT 2
15710: PUSH
15711: LD_INT 1
15713: NEG
15714: PUSH
15715: EMPTY
15716: LIST
15717: LIST
15718: PUSH
15719: LD_INT 3
15721: PUSH
15722: LD_INT 0
15724: PUSH
15725: EMPTY
15726: LIST
15727: LIST
15728: PUSH
15729: LD_INT 3
15731: PUSH
15732: LD_INT 1
15734: PUSH
15735: EMPTY
15736: LIST
15737: LIST
15738: PUSH
15739: LD_INT 3
15741: PUSH
15742: LD_INT 2
15744: PUSH
15745: EMPTY
15746: LIST
15747: LIST
15748: PUSH
15749: LD_INT 3
15751: PUSH
15752: LD_INT 3
15754: PUSH
15755: EMPTY
15756: LIST
15757: LIST
15758: PUSH
15759: LD_INT 2
15761: PUSH
15762: LD_INT 3
15764: PUSH
15765: EMPTY
15766: LIST
15767: LIST
15768: PUSH
15769: LD_INT 2
15771: NEG
15772: PUSH
15773: LD_INT 1
15775: PUSH
15776: EMPTY
15777: LIST
15778: LIST
15779: PUSH
15780: LD_INT 3
15782: NEG
15783: PUSH
15784: LD_INT 0
15786: PUSH
15787: EMPTY
15788: LIST
15789: LIST
15790: PUSH
15791: LD_INT 3
15793: NEG
15794: PUSH
15795: LD_INT 1
15797: NEG
15798: PUSH
15799: EMPTY
15800: LIST
15801: LIST
15802: PUSH
15803: LD_INT 3
15805: NEG
15806: PUSH
15807: LD_INT 2
15809: NEG
15810: PUSH
15811: EMPTY
15812: LIST
15813: LIST
15814: PUSH
15815: LD_INT 3
15817: NEG
15818: PUSH
15819: LD_INT 3
15821: NEG
15822: PUSH
15823: EMPTY
15824: LIST
15825: LIST
15826: PUSH
15827: EMPTY
15828: LIST
15829: LIST
15830: LIST
15831: LIST
15832: LIST
15833: LIST
15834: LIST
15835: LIST
15836: LIST
15837: LIST
15838: LIST
15839: LIST
15840: LIST
15841: LIST
15842: LIST
15843: LIST
15844: LIST
15845: LIST
15846: LIST
15847: LIST
15848: LIST
15849: LIST
15850: LIST
15851: LIST
15852: LIST
15853: LIST
15854: LIST
15855: LIST
15856: LIST
15857: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15858: LD_ADDR_VAR 0 42
15862: PUSH
15863: LD_INT 0
15865: PUSH
15866: LD_INT 0
15868: PUSH
15869: EMPTY
15870: LIST
15871: LIST
15872: PUSH
15873: LD_INT 0
15875: PUSH
15876: LD_INT 1
15878: NEG
15879: PUSH
15880: EMPTY
15881: LIST
15882: LIST
15883: PUSH
15884: LD_INT 1
15886: PUSH
15887: LD_INT 0
15889: PUSH
15890: EMPTY
15891: LIST
15892: LIST
15893: PUSH
15894: LD_INT 1
15896: PUSH
15897: LD_INT 1
15899: PUSH
15900: EMPTY
15901: LIST
15902: LIST
15903: PUSH
15904: LD_INT 0
15906: PUSH
15907: LD_INT 1
15909: PUSH
15910: EMPTY
15911: LIST
15912: LIST
15913: PUSH
15914: LD_INT 1
15916: NEG
15917: PUSH
15918: LD_INT 0
15920: PUSH
15921: EMPTY
15922: LIST
15923: LIST
15924: PUSH
15925: LD_INT 1
15927: NEG
15928: PUSH
15929: LD_INT 1
15931: NEG
15932: PUSH
15933: EMPTY
15934: LIST
15935: LIST
15936: PUSH
15937: LD_INT 1
15939: NEG
15940: PUSH
15941: LD_INT 2
15943: NEG
15944: PUSH
15945: EMPTY
15946: LIST
15947: LIST
15948: PUSH
15949: LD_INT 0
15951: PUSH
15952: LD_INT 2
15954: NEG
15955: PUSH
15956: EMPTY
15957: LIST
15958: LIST
15959: PUSH
15960: LD_INT 1
15962: PUSH
15963: LD_INT 1
15965: NEG
15966: PUSH
15967: EMPTY
15968: LIST
15969: LIST
15970: PUSH
15971: LD_INT 2
15973: PUSH
15974: LD_INT 1
15976: PUSH
15977: EMPTY
15978: LIST
15979: LIST
15980: PUSH
15981: LD_INT 2
15983: PUSH
15984: LD_INT 2
15986: PUSH
15987: EMPTY
15988: LIST
15989: LIST
15990: PUSH
15991: LD_INT 1
15993: PUSH
15994: LD_INT 2
15996: PUSH
15997: EMPTY
15998: LIST
15999: LIST
16000: PUSH
16001: LD_INT 0
16003: PUSH
16004: LD_INT 2
16006: PUSH
16007: EMPTY
16008: LIST
16009: LIST
16010: PUSH
16011: LD_INT 1
16013: NEG
16014: PUSH
16015: LD_INT 1
16017: PUSH
16018: EMPTY
16019: LIST
16020: LIST
16021: PUSH
16022: LD_INT 2
16024: NEG
16025: PUSH
16026: LD_INT 1
16028: NEG
16029: PUSH
16030: EMPTY
16031: LIST
16032: LIST
16033: PUSH
16034: LD_INT 2
16036: NEG
16037: PUSH
16038: LD_INT 2
16040: NEG
16041: PUSH
16042: EMPTY
16043: LIST
16044: LIST
16045: PUSH
16046: LD_INT 2
16048: NEG
16049: PUSH
16050: LD_INT 3
16052: NEG
16053: PUSH
16054: EMPTY
16055: LIST
16056: LIST
16057: PUSH
16058: LD_INT 1
16060: NEG
16061: PUSH
16062: LD_INT 3
16064: NEG
16065: PUSH
16066: EMPTY
16067: LIST
16068: LIST
16069: PUSH
16070: LD_INT 0
16072: PUSH
16073: LD_INT 3
16075: NEG
16076: PUSH
16077: EMPTY
16078: LIST
16079: LIST
16080: PUSH
16081: LD_INT 1
16083: PUSH
16084: LD_INT 2
16086: NEG
16087: PUSH
16088: EMPTY
16089: LIST
16090: LIST
16091: PUSH
16092: LD_INT 3
16094: PUSH
16095: LD_INT 2
16097: PUSH
16098: EMPTY
16099: LIST
16100: LIST
16101: PUSH
16102: LD_INT 3
16104: PUSH
16105: LD_INT 3
16107: PUSH
16108: EMPTY
16109: LIST
16110: LIST
16111: PUSH
16112: LD_INT 2
16114: PUSH
16115: LD_INT 3
16117: PUSH
16118: EMPTY
16119: LIST
16120: LIST
16121: PUSH
16122: LD_INT 1
16124: PUSH
16125: LD_INT 3
16127: PUSH
16128: EMPTY
16129: LIST
16130: LIST
16131: PUSH
16132: LD_INT 0
16134: PUSH
16135: LD_INT 3
16137: PUSH
16138: EMPTY
16139: LIST
16140: LIST
16141: PUSH
16142: LD_INT 1
16144: NEG
16145: PUSH
16146: LD_INT 2
16148: PUSH
16149: EMPTY
16150: LIST
16151: LIST
16152: PUSH
16153: LD_INT 3
16155: NEG
16156: PUSH
16157: LD_INT 2
16159: NEG
16160: PUSH
16161: EMPTY
16162: LIST
16163: LIST
16164: PUSH
16165: LD_INT 3
16167: NEG
16168: PUSH
16169: LD_INT 3
16171: NEG
16172: PUSH
16173: EMPTY
16174: LIST
16175: LIST
16176: PUSH
16177: EMPTY
16178: LIST
16179: LIST
16180: LIST
16181: LIST
16182: LIST
16183: LIST
16184: LIST
16185: LIST
16186: LIST
16187: LIST
16188: LIST
16189: LIST
16190: LIST
16191: LIST
16192: LIST
16193: LIST
16194: LIST
16195: LIST
16196: LIST
16197: LIST
16198: LIST
16199: LIST
16200: LIST
16201: LIST
16202: LIST
16203: LIST
16204: LIST
16205: LIST
16206: LIST
16207: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16208: LD_ADDR_VAR 0 43
16212: PUSH
16213: LD_INT 0
16215: PUSH
16216: LD_INT 0
16218: PUSH
16219: EMPTY
16220: LIST
16221: LIST
16222: PUSH
16223: LD_INT 0
16225: PUSH
16226: LD_INT 1
16228: NEG
16229: PUSH
16230: EMPTY
16231: LIST
16232: LIST
16233: PUSH
16234: LD_INT 1
16236: PUSH
16237: LD_INT 0
16239: PUSH
16240: EMPTY
16241: LIST
16242: LIST
16243: PUSH
16244: LD_INT 1
16246: PUSH
16247: LD_INT 1
16249: PUSH
16250: EMPTY
16251: LIST
16252: LIST
16253: PUSH
16254: LD_INT 0
16256: PUSH
16257: LD_INT 1
16259: PUSH
16260: EMPTY
16261: LIST
16262: LIST
16263: PUSH
16264: LD_INT 1
16266: NEG
16267: PUSH
16268: LD_INT 0
16270: PUSH
16271: EMPTY
16272: LIST
16273: LIST
16274: PUSH
16275: LD_INT 1
16277: NEG
16278: PUSH
16279: LD_INT 1
16281: NEG
16282: PUSH
16283: EMPTY
16284: LIST
16285: LIST
16286: PUSH
16287: LD_INT 1
16289: NEG
16290: PUSH
16291: LD_INT 2
16293: NEG
16294: PUSH
16295: EMPTY
16296: LIST
16297: LIST
16298: PUSH
16299: LD_INT 0
16301: PUSH
16302: LD_INT 2
16304: NEG
16305: PUSH
16306: EMPTY
16307: LIST
16308: LIST
16309: PUSH
16310: LD_INT 1
16312: PUSH
16313: LD_INT 1
16315: NEG
16316: PUSH
16317: EMPTY
16318: LIST
16319: LIST
16320: PUSH
16321: LD_INT 2
16323: PUSH
16324: LD_INT 0
16326: PUSH
16327: EMPTY
16328: LIST
16329: LIST
16330: PUSH
16331: LD_INT 2
16333: PUSH
16334: LD_INT 1
16336: PUSH
16337: EMPTY
16338: LIST
16339: LIST
16340: PUSH
16341: LD_INT 1
16343: PUSH
16344: LD_INT 2
16346: PUSH
16347: EMPTY
16348: LIST
16349: LIST
16350: PUSH
16351: LD_INT 0
16353: PUSH
16354: LD_INT 2
16356: PUSH
16357: EMPTY
16358: LIST
16359: LIST
16360: PUSH
16361: LD_INT 1
16363: NEG
16364: PUSH
16365: LD_INT 1
16367: PUSH
16368: EMPTY
16369: LIST
16370: LIST
16371: PUSH
16372: LD_INT 2
16374: NEG
16375: PUSH
16376: LD_INT 0
16378: PUSH
16379: EMPTY
16380: LIST
16381: LIST
16382: PUSH
16383: LD_INT 2
16385: NEG
16386: PUSH
16387: LD_INT 1
16389: NEG
16390: PUSH
16391: EMPTY
16392: LIST
16393: LIST
16394: PUSH
16395: LD_INT 1
16397: NEG
16398: PUSH
16399: LD_INT 3
16401: NEG
16402: PUSH
16403: EMPTY
16404: LIST
16405: LIST
16406: PUSH
16407: LD_INT 0
16409: PUSH
16410: LD_INT 3
16412: NEG
16413: PUSH
16414: EMPTY
16415: LIST
16416: LIST
16417: PUSH
16418: LD_INT 1
16420: PUSH
16421: LD_INT 2
16423: NEG
16424: PUSH
16425: EMPTY
16426: LIST
16427: LIST
16428: PUSH
16429: LD_INT 2
16431: PUSH
16432: LD_INT 1
16434: NEG
16435: PUSH
16436: EMPTY
16437: LIST
16438: LIST
16439: PUSH
16440: LD_INT 3
16442: PUSH
16443: LD_INT 0
16445: PUSH
16446: EMPTY
16447: LIST
16448: LIST
16449: PUSH
16450: LD_INT 3
16452: PUSH
16453: LD_INT 1
16455: PUSH
16456: EMPTY
16457: LIST
16458: LIST
16459: PUSH
16460: LD_INT 1
16462: PUSH
16463: LD_INT 3
16465: PUSH
16466: EMPTY
16467: LIST
16468: LIST
16469: PUSH
16470: LD_INT 0
16472: PUSH
16473: LD_INT 3
16475: PUSH
16476: EMPTY
16477: LIST
16478: LIST
16479: PUSH
16480: LD_INT 1
16482: NEG
16483: PUSH
16484: LD_INT 2
16486: PUSH
16487: EMPTY
16488: LIST
16489: LIST
16490: PUSH
16491: LD_INT 2
16493: NEG
16494: PUSH
16495: LD_INT 1
16497: PUSH
16498: EMPTY
16499: LIST
16500: LIST
16501: PUSH
16502: LD_INT 3
16504: NEG
16505: PUSH
16506: LD_INT 0
16508: PUSH
16509: EMPTY
16510: LIST
16511: LIST
16512: PUSH
16513: LD_INT 3
16515: NEG
16516: PUSH
16517: LD_INT 1
16519: NEG
16520: PUSH
16521: EMPTY
16522: LIST
16523: LIST
16524: PUSH
16525: EMPTY
16526: LIST
16527: LIST
16528: LIST
16529: LIST
16530: LIST
16531: LIST
16532: LIST
16533: LIST
16534: LIST
16535: LIST
16536: LIST
16537: LIST
16538: LIST
16539: LIST
16540: LIST
16541: LIST
16542: LIST
16543: LIST
16544: LIST
16545: LIST
16546: LIST
16547: LIST
16548: LIST
16549: LIST
16550: LIST
16551: LIST
16552: LIST
16553: LIST
16554: LIST
16555: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16556: LD_ADDR_VAR 0 44
16560: PUSH
16561: LD_INT 0
16563: PUSH
16564: LD_INT 0
16566: PUSH
16567: EMPTY
16568: LIST
16569: LIST
16570: PUSH
16571: LD_INT 0
16573: PUSH
16574: LD_INT 1
16576: NEG
16577: PUSH
16578: EMPTY
16579: LIST
16580: LIST
16581: PUSH
16582: LD_INT 1
16584: PUSH
16585: LD_INT 0
16587: PUSH
16588: EMPTY
16589: LIST
16590: LIST
16591: PUSH
16592: LD_INT 1
16594: PUSH
16595: LD_INT 1
16597: PUSH
16598: EMPTY
16599: LIST
16600: LIST
16601: PUSH
16602: LD_INT 0
16604: PUSH
16605: LD_INT 1
16607: PUSH
16608: EMPTY
16609: LIST
16610: LIST
16611: PUSH
16612: LD_INT 1
16614: NEG
16615: PUSH
16616: LD_INT 0
16618: PUSH
16619: EMPTY
16620: LIST
16621: LIST
16622: PUSH
16623: LD_INT 1
16625: NEG
16626: PUSH
16627: LD_INT 1
16629: NEG
16630: PUSH
16631: EMPTY
16632: LIST
16633: LIST
16634: PUSH
16635: LD_INT 1
16637: NEG
16638: PUSH
16639: LD_INT 2
16641: NEG
16642: PUSH
16643: EMPTY
16644: LIST
16645: LIST
16646: PUSH
16647: LD_INT 1
16649: PUSH
16650: LD_INT 1
16652: NEG
16653: PUSH
16654: EMPTY
16655: LIST
16656: LIST
16657: PUSH
16658: LD_INT 2
16660: PUSH
16661: LD_INT 0
16663: PUSH
16664: EMPTY
16665: LIST
16666: LIST
16667: PUSH
16668: LD_INT 2
16670: PUSH
16671: LD_INT 1
16673: PUSH
16674: EMPTY
16675: LIST
16676: LIST
16677: PUSH
16678: LD_INT 2
16680: PUSH
16681: LD_INT 2
16683: PUSH
16684: EMPTY
16685: LIST
16686: LIST
16687: PUSH
16688: LD_INT 1
16690: PUSH
16691: LD_INT 2
16693: PUSH
16694: EMPTY
16695: LIST
16696: LIST
16697: PUSH
16698: LD_INT 1
16700: NEG
16701: PUSH
16702: LD_INT 1
16704: PUSH
16705: EMPTY
16706: LIST
16707: LIST
16708: PUSH
16709: LD_INT 2
16711: NEG
16712: PUSH
16713: LD_INT 0
16715: PUSH
16716: EMPTY
16717: LIST
16718: LIST
16719: PUSH
16720: LD_INT 2
16722: NEG
16723: PUSH
16724: LD_INT 1
16726: NEG
16727: PUSH
16728: EMPTY
16729: LIST
16730: LIST
16731: PUSH
16732: LD_INT 2
16734: NEG
16735: PUSH
16736: LD_INT 2
16738: NEG
16739: PUSH
16740: EMPTY
16741: LIST
16742: LIST
16743: PUSH
16744: LD_INT 2
16746: NEG
16747: PUSH
16748: LD_INT 3
16750: NEG
16751: PUSH
16752: EMPTY
16753: LIST
16754: LIST
16755: PUSH
16756: LD_INT 2
16758: PUSH
16759: LD_INT 1
16761: NEG
16762: PUSH
16763: EMPTY
16764: LIST
16765: LIST
16766: PUSH
16767: LD_INT 3
16769: PUSH
16770: LD_INT 0
16772: PUSH
16773: EMPTY
16774: LIST
16775: LIST
16776: PUSH
16777: LD_INT 3
16779: PUSH
16780: LD_INT 1
16782: PUSH
16783: EMPTY
16784: LIST
16785: LIST
16786: PUSH
16787: LD_INT 3
16789: PUSH
16790: LD_INT 2
16792: PUSH
16793: EMPTY
16794: LIST
16795: LIST
16796: PUSH
16797: LD_INT 3
16799: PUSH
16800: LD_INT 3
16802: PUSH
16803: EMPTY
16804: LIST
16805: LIST
16806: PUSH
16807: LD_INT 2
16809: PUSH
16810: LD_INT 3
16812: PUSH
16813: EMPTY
16814: LIST
16815: LIST
16816: PUSH
16817: LD_INT 2
16819: NEG
16820: PUSH
16821: LD_INT 1
16823: PUSH
16824: EMPTY
16825: LIST
16826: LIST
16827: PUSH
16828: LD_INT 3
16830: NEG
16831: PUSH
16832: LD_INT 0
16834: PUSH
16835: EMPTY
16836: LIST
16837: LIST
16838: PUSH
16839: LD_INT 3
16841: NEG
16842: PUSH
16843: LD_INT 1
16845: NEG
16846: PUSH
16847: EMPTY
16848: LIST
16849: LIST
16850: PUSH
16851: LD_INT 3
16853: NEG
16854: PUSH
16855: LD_INT 2
16857: NEG
16858: PUSH
16859: EMPTY
16860: LIST
16861: LIST
16862: PUSH
16863: LD_INT 3
16865: NEG
16866: PUSH
16867: LD_INT 3
16869: NEG
16870: PUSH
16871: EMPTY
16872: LIST
16873: LIST
16874: PUSH
16875: EMPTY
16876: LIST
16877: LIST
16878: LIST
16879: LIST
16880: LIST
16881: LIST
16882: LIST
16883: LIST
16884: LIST
16885: LIST
16886: LIST
16887: LIST
16888: LIST
16889: LIST
16890: LIST
16891: LIST
16892: LIST
16893: LIST
16894: LIST
16895: LIST
16896: LIST
16897: LIST
16898: LIST
16899: LIST
16900: LIST
16901: LIST
16902: LIST
16903: LIST
16904: LIST
16905: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16906: LD_ADDR_VAR 0 45
16910: PUSH
16911: LD_INT 0
16913: PUSH
16914: LD_INT 0
16916: PUSH
16917: EMPTY
16918: LIST
16919: LIST
16920: PUSH
16921: LD_INT 0
16923: PUSH
16924: LD_INT 1
16926: NEG
16927: PUSH
16928: EMPTY
16929: LIST
16930: LIST
16931: PUSH
16932: LD_INT 1
16934: PUSH
16935: LD_INT 0
16937: PUSH
16938: EMPTY
16939: LIST
16940: LIST
16941: PUSH
16942: LD_INT 1
16944: PUSH
16945: LD_INT 1
16947: PUSH
16948: EMPTY
16949: LIST
16950: LIST
16951: PUSH
16952: LD_INT 0
16954: PUSH
16955: LD_INT 1
16957: PUSH
16958: EMPTY
16959: LIST
16960: LIST
16961: PUSH
16962: LD_INT 1
16964: NEG
16965: PUSH
16966: LD_INT 0
16968: PUSH
16969: EMPTY
16970: LIST
16971: LIST
16972: PUSH
16973: LD_INT 1
16975: NEG
16976: PUSH
16977: LD_INT 1
16979: NEG
16980: PUSH
16981: EMPTY
16982: LIST
16983: LIST
16984: PUSH
16985: LD_INT 1
16987: NEG
16988: PUSH
16989: LD_INT 2
16991: NEG
16992: PUSH
16993: EMPTY
16994: LIST
16995: LIST
16996: PUSH
16997: LD_INT 0
16999: PUSH
17000: LD_INT 2
17002: NEG
17003: PUSH
17004: EMPTY
17005: LIST
17006: LIST
17007: PUSH
17008: LD_INT 1
17010: PUSH
17011: LD_INT 1
17013: NEG
17014: PUSH
17015: EMPTY
17016: LIST
17017: LIST
17018: PUSH
17019: LD_INT 2
17021: PUSH
17022: LD_INT 1
17024: PUSH
17025: EMPTY
17026: LIST
17027: LIST
17028: PUSH
17029: LD_INT 2
17031: PUSH
17032: LD_INT 2
17034: PUSH
17035: EMPTY
17036: LIST
17037: LIST
17038: PUSH
17039: LD_INT 1
17041: PUSH
17042: LD_INT 2
17044: PUSH
17045: EMPTY
17046: LIST
17047: LIST
17048: PUSH
17049: LD_INT 0
17051: PUSH
17052: LD_INT 2
17054: PUSH
17055: EMPTY
17056: LIST
17057: LIST
17058: PUSH
17059: LD_INT 1
17061: NEG
17062: PUSH
17063: LD_INT 1
17065: PUSH
17066: EMPTY
17067: LIST
17068: LIST
17069: PUSH
17070: LD_INT 2
17072: NEG
17073: PUSH
17074: LD_INT 1
17076: NEG
17077: PUSH
17078: EMPTY
17079: LIST
17080: LIST
17081: PUSH
17082: LD_INT 2
17084: NEG
17085: PUSH
17086: LD_INT 2
17088: NEG
17089: PUSH
17090: EMPTY
17091: LIST
17092: LIST
17093: PUSH
17094: LD_INT 2
17096: NEG
17097: PUSH
17098: LD_INT 3
17100: NEG
17101: PUSH
17102: EMPTY
17103: LIST
17104: LIST
17105: PUSH
17106: LD_INT 1
17108: NEG
17109: PUSH
17110: LD_INT 3
17112: NEG
17113: PUSH
17114: EMPTY
17115: LIST
17116: LIST
17117: PUSH
17118: LD_INT 0
17120: PUSH
17121: LD_INT 3
17123: NEG
17124: PUSH
17125: EMPTY
17126: LIST
17127: LIST
17128: PUSH
17129: LD_INT 1
17131: PUSH
17132: LD_INT 2
17134: NEG
17135: PUSH
17136: EMPTY
17137: LIST
17138: LIST
17139: PUSH
17140: LD_INT 3
17142: PUSH
17143: LD_INT 2
17145: PUSH
17146: EMPTY
17147: LIST
17148: LIST
17149: PUSH
17150: LD_INT 3
17152: PUSH
17153: LD_INT 3
17155: PUSH
17156: EMPTY
17157: LIST
17158: LIST
17159: PUSH
17160: LD_INT 2
17162: PUSH
17163: LD_INT 3
17165: PUSH
17166: EMPTY
17167: LIST
17168: LIST
17169: PUSH
17170: LD_INT 1
17172: PUSH
17173: LD_INT 3
17175: PUSH
17176: EMPTY
17177: LIST
17178: LIST
17179: PUSH
17180: LD_INT 0
17182: PUSH
17183: LD_INT 3
17185: PUSH
17186: EMPTY
17187: LIST
17188: LIST
17189: PUSH
17190: LD_INT 1
17192: NEG
17193: PUSH
17194: LD_INT 2
17196: PUSH
17197: EMPTY
17198: LIST
17199: LIST
17200: PUSH
17201: LD_INT 3
17203: NEG
17204: PUSH
17205: LD_INT 2
17207: NEG
17208: PUSH
17209: EMPTY
17210: LIST
17211: LIST
17212: PUSH
17213: LD_INT 3
17215: NEG
17216: PUSH
17217: LD_INT 3
17219: NEG
17220: PUSH
17221: EMPTY
17222: LIST
17223: LIST
17224: PUSH
17225: EMPTY
17226: LIST
17227: LIST
17228: LIST
17229: LIST
17230: LIST
17231: LIST
17232: LIST
17233: LIST
17234: LIST
17235: LIST
17236: LIST
17237: LIST
17238: LIST
17239: LIST
17240: LIST
17241: LIST
17242: LIST
17243: LIST
17244: LIST
17245: LIST
17246: LIST
17247: LIST
17248: LIST
17249: LIST
17250: LIST
17251: LIST
17252: LIST
17253: LIST
17254: LIST
17255: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17256: LD_ADDR_VAR 0 46
17260: PUSH
17261: LD_INT 0
17263: PUSH
17264: LD_INT 0
17266: PUSH
17267: EMPTY
17268: LIST
17269: LIST
17270: PUSH
17271: LD_INT 0
17273: PUSH
17274: LD_INT 1
17276: NEG
17277: PUSH
17278: EMPTY
17279: LIST
17280: LIST
17281: PUSH
17282: LD_INT 1
17284: PUSH
17285: LD_INT 0
17287: PUSH
17288: EMPTY
17289: LIST
17290: LIST
17291: PUSH
17292: LD_INT 1
17294: PUSH
17295: LD_INT 1
17297: PUSH
17298: EMPTY
17299: LIST
17300: LIST
17301: PUSH
17302: LD_INT 0
17304: PUSH
17305: LD_INT 1
17307: PUSH
17308: EMPTY
17309: LIST
17310: LIST
17311: PUSH
17312: LD_INT 1
17314: NEG
17315: PUSH
17316: LD_INT 0
17318: PUSH
17319: EMPTY
17320: LIST
17321: LIST
17322: PUSH
17323: LD_INT 1
17325: NEG
17326: PUSH
17327: LD_INT 1
17329: NEG
17330: PUSH
17331: EMPTY
17332: LIST
17333: LIST
17334: PUSH
17335: LD_INT 1
17337: NEG
17338: PUSH
17339: LD_INT 2
17341: NEG
17342: PUSH
17343: EMPTY
17344: LIST
17345: LIST
17346: PUSH
17347: LD_INT 0
17349: PUSH
17350: LD_INT 2
17352: NEG
17353: PUSH
17354: EMPTY
17355: LIST
17356: LIST
17357: PUSH
17358: LD_INT 1
17360: PUSH
17361: LD_INT 1
17363: NEG
17364: PUSH
17365: EMPTY
17366: LIST
17367: LIST
17368: PUSH
17369: LD_INT 2
17371: PUSH
17372: LD_INT 0
17374: PUSH
17375: EMPTY
17376: LIST
17377: LIST
17378: PUSH
17379: LD_INT 2
17381: PUSH
17382: LD_INT 1
17384: PUSH
17385: EMPTY
17386: LIST
17387: LIST
17388: PUSH
17389: LD_INT 1
17391: PUSH
17392: LD_INT 2
17394: PUSH
17395: EMPTY
17396: LIST
17397: LIST
17398: PUSH
17399: LD_INT 0
17401: PUSH
17402: LD_INT 2
17404: PUSH
17405: EMPTY
17406: LIST
17407: LIST
17408: PUSH
17409: LD_INT 1
17411: NEG
17412: PUSH
17413: LD_INT 1
17415: PUSH
17416: EMPTY
17417: LIST
17418: LIST
17419: PUSH
17420: LD_INT 2
17422: NEG
17423: PUSH
17424: LD_INT 0
17426: PUSH
17427: EMPTY
17428: LIST
17429: LIST
17430: PUSH
17431: LD_INT 2
17433: NEG
17434: PUSH
17435: LD_INT 1
17437: NEG
17438: PUSH
17439: EMPTY
17440: LIST
17441: LIST
17442: PUSH
17443: LD_INT 1
17445: NEG
17446: PUSH
17447: LD_INT 3
17449: NEG
17450: PUSH
17451: EMPTY
17452: LIST
17453: LIST
17454: PUSH
17455: LD_INT 0
17457: PUSH
17458: LD_INT 3
17460: NEG
17461: PUSH
17462: EMPTY
17463: LIST
17464: LIST
17465: PUSH
17466: LD_INT 1
17468: PUSH
17469: LD_INT 2
17471: NEG
17472: PUSH
17473: EMPTY
17474: LIST
17475: LIST
17476: PUSH
17477: LD_INT 2
17479: PUSH
17480: LD_INT 1
17482: NEG
17483: PUSH
17484: EMPTY
17485: LIST
17486: LIST
17487: PUSH
17488: LD_INT 3
17490: PUSH
17491: LD_INT 0
17493: PUSH
17494: EMPTY
17495: LIST
17496: LIST
17497: PUSH
17498: LD_INT 3
17500: PUSH
17501: LD_INT 1
17503: PUSH
17504: EMPTY
17505: LIST
17506: LIST
17507: PUSH
17508: LD_INT 1
17510: PUSH
17511: LD_INT 3
17513: PUSH
17514: EMPTY
17515: LIST
17516: LIST
17517: PUSH
17518: LD_INT 0
17520: PUSH
17521: LD_INT 3
17523: PUSH
17524: EMPTY
17525: LIST
17526: LIST
17527: PUSH
17528: LD_INT 1
17530: NEG
17531: PUSH
17532: LD_INT 2
17534: PUSH
17535: EMPTY
17536: LIST
17537: LIST
17538: PUSH
17539: LD_INT 2
17541: NEG
17542: PUSH
17543: LD_INT 1
17545: PUSH
17546: EMPTY
17547: LIST
17548: LIST
17549: PUSH
17550: LD_INT 3
17552: NEG
17553: PUSH
17554: LD_INT 0
17556: PUSH
17557: EMPTY
17558: LIST
17559: LIST
17560: PUSH
17561: LD_INT 3
17563: NEG
17564: PUSH
17565: LD_INT 1
17567: NEG
17568: PUSH
17569: EMPTY
17570: LIST
17571: LIST
17572: PUSH
17573: EMPTY
17574: LIST
17575: LIST
17576: LIST
17577: LIST
17578: LIST
17579: LIST
17580: LIST
17581: LIST
17582: LIST
17583: LIST
17584: LIST
17585: LIST
17586: LIST
17587: LIST
17588: LIST
17589: LIST
17590: LIST
17591: LIST
17592: LIST
17593: LIST
17594: LIST
17595: LIST
17596: LIST
17597: LIST
17598: LIST
17599: LIST
17600: LIST
17601: LIST
17602: LIST
17603: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17604: LD_ADDR_VAR 0 47
17608: PUSH
17609: LD_INT 0
17611: PUSH
17612: LD_INT 0
17614: PUSH
17615: EMPTY
17616: LIST
17617: LIST
17618: PUSH
17619: LD_INT 0
17621: PUSH
17622: LD_INT 1
17624: NEG
17625: PUSH
17626: EMPTY
17627: LIST
17628: LIST
17629: PUSH
17630: LD_INT 1
17632: PUSH
17633: LD_INT 0
17635: PUSH
17636: EMPTY
17637: LIST
17638: LIST
17639: PUSH
17640: LD_INT 1
17642: PUSH
17643: LD_INT 1
17645: PUSH
17646: EMPTY
17647: LIST
17648: LIST
17649: PUSH
17650: LD_INT 0
17652: PUSH
17653: LD_INT 1
17655: PUSH
17656: EMPTY
17657: LIST
17658: LIST
17659: PUSH
17660: LD_INT 1
17662: NEG
17663: PUSH
17664: LD_INT 0
17666: PUSH
17667: EMPTY
17668: LIST
17669: LIST
17670: PUSH
17671: LD_INT 1
17673: NEG
17674: PUSH
17675: LD_INT 1
17677: NEG
17678: PUSH
17679: EMPTY
17680: LIST
17681: LIST
17682: PUSH
17683: LD_INT 1
17685: NEG
17686: PUSH
17687: LD_INT 2
17689: NEG
17690: PUSH
17691: EMPTY
17692: LIST
17693: LIST
17694: PUSH
17695: LD_INT 0
17697: PUSH
17698: LD_INT 2
17700: NEG
17701: PUSH
17702: EMPTY
17703: LIST
17704: LIST
17705: PUSH
17706: LD_INT 1
17708: PUSH
17709: LD_INT 1
17711: NEG
17712: PUSH
17713: EMPTY
17714: LIST
17715: LIST
17716: PUSH
17717: LD_INT 2
17719: NEG
17720: PUSH
17721: LD_INT 1
17723: NEG
17724: PUSH
17725: EMPTY
17726: LIST
17727: LIST
17728: PUSH
17729: LD_INT 2
17731: NEG
17732: PUSH
17733: LD_INT 2
17735: NEG
17736: PUSH
17737: EMPTY
17738: LIST
17739: LIST
17740: PUSH
17741: EMPTY
17742: LIST
17743: LIST
17744: LIST
17745: LIST
17746: LIST
17747: LIST
17748: LIST
17749: LIST
17750: LIST
17751: LIST
17752: LIST
17753: LIST
17754: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17755: LD_ADDR_VAR 0 48
17759: PUSH
17760: LD_INT 0
17762: PUSH
17763: LD_INT 0
17765: PUSH
17766: EMPTY
17767: LIST
17768: LIST
17769: PUSH
17770: LD_INT 0
17772: PUSH
17773: LD_INT 1
17775: NEG
17776: PUSH
17777: EMPTY
17778: LIST
17779: LIST
17780: PUSH
17781: LD_INT 1
17783: PUSH
17784: LD_INT 0
17786: PUSH
17787: EMPTY
17788: LIST
17789: LIST
17790: PUSH
17791: LD_INT 1
17793: PUSH
17794: LD_INT 1
17796: PUSH
17797: EMPTY
17798: LIST
17799: LIST
17800: PUSH
17801: LD_INT 0
17803: PUSH
17804: LD_INT 1
17806: PUSH
17807: EMPTY
17808: LIST
17809: LIST
17810: PUSH
17811: LD_INT 1
17813: NEG
17814: PUSH
17815: LD_INT 0
17817: PUSH
17818: EMPTY
17819: LIST
17820: LIST
17821: PUSH
17822: LD_INT 1
17824: NEG
17825: PUSH
17826: LD_INT 1
17828: NEG
17829: PUSH
17830: EMPTY
17831: LIST
17832: LIST
17833: PUSH
17834: LD_INT 1
17836: NEG
17837: PUSH
17838: LD_INT 2
17840: NEG
17841: PUSH
17842: EMPTY
17843: LIST
17844: LIST
17845: PUSH
17846: LD_INT 0
17848: PUSH
17849: LD_INT 2
17851: NEG
17852: PUSH
17853: EMPTY
17854: LIST
17855: LIST
17856: PUSH
17857: LD_INT 1
17859: PUSH
17860: LD_INT 1
17862: NEG
17863: PUSH
17864: EMPTY
17865: LIST
17866: LIST
17867: PUSH
17868: LD_INT 2
17870: PUSH
17871: LD_INT 0
17873: PUSH
17874: EMPTY
17875: LIST
17876: LIST
17877: PUSH
17878: LD_INT 2
17880: PUSH
17881: LD_INT 1
17883: PUSH
17884: EMPTY
17885: LIST
17886: LIST
17887: PUSH
17888: EMPTY
17889: LIST
17890: LIST
17891: LIST
17892: LIST
17893: LIST
17894: LIST
17895: LIST
17896: LIST
17897: LIST
17898: LIST
17899: LIST
17900: LIST
17901: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17902: LD_ADDR_VAR 0 49
17906: PUSH
17907: LD_INT 0
17909: PUSH
17910: LD_INT 0
17912: PUSH
17913: EMPTY
17914: LIST
17915: LIST
17916: PUSH
17917: LD_INT 0
17919: PUSH
17920: LD_INT 1
17922: NEG
17923: PUSH
17924: EMPTY
17925: LIST
17926: LIST
17927: PUSH
17928: LD_INT 1
17930: PUSH
17931: LD_INT 0
17933: PUSH
17934: EMPTY
17935: LIST
17936: LIST
17937: PUSH
17938: LD_INT 1
17940: PUSH
17941: LD_INT 1
17943: PUSH
17944: EMPTY
17945: LIST
17946: LIST
17947: PUSH
17948: LD_INT 0
17950: PUSH
17951: LD_INT 1
17953: PUSH
17954: EMPTY
17955: LIST
17956: LIST
17957: PUSH
17958: LD_INT 1
17960: NEG
17961: PUSH
17962: LD_INT 0
17964: PUSH
17965: EMPTY
17966: LIST
17967: LIST
17968: PUSH
17969: LD_INT 1
17971: NEG
17972: PUSH
17973: LD_INT 1
17975: NEG
17976: PUSH
17977: EMPTY
17978: LIST
17979: LIST
17980: PUSH
17981: LD_INT 1
17983: PUSH
17984: LD_INT 1
17986: NEG
17987: PUSH
17988: EMPTY
17989: LIST
17990: LIST
17991: PUSH
17992: LD_INT 2
17994: PUSH
17995: LD_INT 0
17997: PUSH
17998: EMPTY
17999: LIST
18000: LIST
18001: PUSH
18002: LD_INT 2
18004: PUSH
18005: LD_INT 1
18007: PUSH
18008: EMPTY
18009: LIST
18010: LIST
18011: PUSH
18012: LD_INT 2
18014: PUSH
18015: LD_INT 2
18017: PUSH
18018: EMPTY
18019: LIST
18020: LIST
18021: PUSH
18022: LD_INT 1
18024: PUSH
18025: LD_INT 2
18027: PUSH
18028: EMPTY
18029: LIST
18030: LIST
18031: PUSH
18032: EMPTY
18033: LIST
18034: LIST
18035: LIST
18036: LIST
18037: LIST
18038: LIST
18039: LIST
18040: LIST
18041: LIST
18042: LIST
18043: LIST
18044: LIST
18045: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18046: LD_ADDR_VAR 0 50
18050: PUSH
18051: LD_INT 0
18053: PUSH
18054: LD_INT 0
18056: PUSH
18057: EMPTY
18058: LIST
18059: LIST
18060: PUSH
18061: LD_INT 0
18063: PUSH
18064: LD_INT 1
18066: NEG
18067: PUSH
18068: EMPTY
18069: LIST
18070: LIST
18071: PUSH
18072: LD_INT 1
18074: PUSH
18075: LD_INT 0
18077: PUSH
18078: EMPTY
18079: LIST
18080: LIST
18081: PUSH
18082: LD_INT 1
18084: PUSH
18085: LD_INT 1
18087: PUSH
18088: EMPTY
18089: LIST
18090: LIST
18091: PUSH
18092: LD_INT 0
18094: PUSH
18095: LD_INT 1
18097: PUSH
18098: EMPTY
18099: LIST
18100: LIST
18101: PUSH
18102: LD_INT 1
18104: NEG
18105: PUSH
18106: LD_INT 0
18108: PUSH
18109: EMPTY
18110: LIST
18111: LIST
18112: PUSH
18113: LD_INT 1
18115: NEG
18116: PUSH
18117: LD_INT 1
18119: NEG
18120: PUSH
18121: EMPTY
18122: LIST
18123: LIST
18124: PUSH
18125: LD_INT 2
18127: PUSH
18128: LD_INT 1
18130: PUSH
18131: EMPTY
18132: LIST
18133: LIST
18134: PUSH
18135: LD_INT 2
18137: PUSH
18138: LD_INT 2
18140: PUSH
18141: EMPTY
18142: LIST
18143: LIST
18144: PUSH
18145: LD_INT 1
18147: PUSH
18148: LD_INT 2
18150: PUSH
18151: EMPTY
18152: LIST
18153: LIST
18154: PUSH
18155: LD_INT 0
18157: PUSH
18158: LD_INT 2
18160: PUSH
18161: EMPTY
18162: LIST
18163: LIST
18164: PUSH
18165: LD_INT 1
18167: NEG
18168: PUSH
18169: LD_INT 1
18171: PUSH
18172: EMPTY
18173: LIST
18174: LIST
18175: PUSH
18176: EMPTY
18177: LIST
18178: LIST
18179: LIST
18180: LIST
18181: LIST
18182: LIST
18183: LIST
18184: LIST
18185: LIST
18186: LIST
18187: LIST
18188: LIST
18189: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18190: LD_ADDR_VAR 0 51
18194: PUSH
18195: LD_INT 0
18197: PUSH
18198: LD_INT 0
18200: PUSH
18201: EMPTY
18202: LIST
18203: LIST
18204: PUSH
18205: LD_INT 0
18207: PUSH
18208: LD_INT 1
18210: NEG
18211: PUSH
18212: EMPTY
18213: LIST
18214: LIST
18215: PUSH
18216: LD_INT 1
18218: PUSH
18219: LD_INT 0
18221: PUSH
18222: EMPTY
18223: LIST
18224: LIST
18225: PUSH
18226: LD_INT 1
18228: PUSH
18229: LD_INT 1
18231: PUSH
18232: EMPTY
18233: LIST
18234: LIST
18235: PUSH
18236: LD_INT 0
18238: PUSH
18239: LD_INT 1
18241: PUSH
18242: EMPTY
18243: LIST
18244: LIST
18245: PUSH
18246: LD_INT 1
18248: NEG
18249: PUSH
18250: LD_INT 0
18252: PUSH
18253: EMPTY
18254: LIST
18255: LIST
18256: PUSH
18257: LD_INT 1
18259: NEG
18260: PUSH
18261: LD_INT 1
18263: NEG
18264: PUSH
18265: EMPTY
18266: LIST
18267: LIST
18268: PUSH
18269: LD_INT 1
18271: PUSH
18272: LD_INT 2
18274: PUSH
18275: EMPTY
18276: LIST
18277: LIST
18278: PUSH
18279: LD_INT 0
18281: PUSH
18282: LD_INT 2
18284: PUSH
18285: EMPTY
18286: LIST
18287: LIST
18288: PUSH
18289: LD_INT 1
18291: NEG
18292: PUSH
18293: LD_INT 1
18295: PUSH
18296: EMPTY
18297: LIST
18298: LIST
18299: PUSH
18300: LD_INT 2
18302: NEG
18303: PUSH
18304: LD_INT 0
18306: PUSH
18307: EMPTY
18308: LIST
18309: LIST
18310: PUSH
18311: LD_INT 2
18313: NEG
18314: PUSH
18315: LD_INT 1
18317: NEG
18318: PUSH
18319: EMPTY
18320: LIST
18321: LIST
18322: PUSH
18323: EMPTY
18324: LIST
18325: LIST
18326: LIST
18327: LIST
18328: LIST
18329: LIST
18330: LIST
18331: LIST
18332: LIST
18333: LIST
18334: LIST
18335: LIST
18336: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18337: LD_ADDR_VAR 0 52
18341: PUSH
18342: LD_INT 0
18344: PUSH
18345: LD_INT 0
18347: PUSH
18348: EMPTY
18349: LIST
18350: LIST
18351: PUSH
18352: LD_INT 0
18354: PUSH
18355: LD_INT 1
18357: NEG
18358: PUSH
18359: EMPTY
18360: LIST
18361: LIST
18362: PUSH
18363: LD_INT 1
18365: PUSH
18366: LD_INT 0
18368: PUSH
18369: EMPTY
18370: LIST
18371: LIST
18372: PUSH
18373: LD_INT 1
18375: PUSH
18376: LD_INT 1
18378: PUSH
18379: EMPTY
18380: LIST
18381: LIST
18382: PUSH
18383: LD_INT 0
18385: PUSH
18386: LD_INT 1
18388: PUSH
18389: EMPTY
18390: LIST
18391: LIST
18392: PUSH
18393: LD_INT 1
18395: NEG
18396: PUSH
18397: LD_INT 0
18399: PUSH
18400: EMPTY
18401: LIST
18402: LIST
18403: PUSH
18404: LD_INT 1
18406: NEG
18407: PUSH
18408: LD_INT 1
18410: NEG
18411: PUSH
18412: EMPTY
18413: LIST
18414: LIST
18415: PUSH
18416: LD_INT 1
18418: NEG
18419: PUSH
18420: LD_INT 2
18422: NEG
18423: PUSH
18424: EMPTY
18425: LIST
18426: LIST
18427: PUSH
18428: LD_INT 1
18430: NEG
18431: PUSH
18432: LD_INT 1
18434: PUSH
18435: EMPTY
18436: LIST
18437: LIST
18438: PUSH
18439: LD_INT 2
18441: NEG
18442: PUSH
18443: LD_INT 0
18445: PUSH
18446: EMPTY
18447: LIST
18448: LIST
18449: PUSH
18450: LD_INT 2
18452: NEG
18453: PUSH
18454: LD_INT 1
18456: NEG
18457: PUSH
18458: EMPTY
18459: LIST
18460: LIST
18461: PUSH
18462: LD_INT 2
18464: NEG
18465: PUSH
18466: LD_INT 2
18468: NEG
18469: PUSH
18470: EMPTY
18471: LIST
18472: LIST
18473: PUSH
18474: EMPTY
18475: LIST
18476: LIST
18477: LIST
18478: LIST
18479: LIST
18480: LIST
18481: LIST
18482: LIST
18483: LIST
18484: LIST
18485: LIST
18486: LIST
18487: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18488: LD_ADDR_VAR 0 53
18492: PUSH
18493: LD_INT 0
18495: PUSH
18496: LD_INT 0
18498: PUSH
18499: EMPTY
18500: LIST
18501: LIST
18502: PUSH
18503: LD_INT 0
18505: PUSH
18506: LD_INT 1
18508: NEG
18509: PUSH
18510: EMPTY
18511: LIST
18512: LIST
18513: PUSH
18514: LD_INT 1
18516: PUSH
18517: LD_INT 0
18519: PUSH
18520: EMPTY
18521: LIST
18522: LIST
18523: PUSH
18524: LD_INT 1
18526: PUSH
18527: LD_INT 1
18529: PUSH
18530: EMPTY
18531: LIST
18532: LIST
18533: PUSH
18534: LD_INT 0
18536: PUSH
18537: LD_INT 1
18539: PUSH
18540: EMPTY
18541: LIST
18542: LIST
18543: PUSH
18544: LD_INT 1
18546: NEG
18547: PUSH
18548: LD_INT 0
18550: PUSH
18551: EMPTY
18552: LIST
18553: LIST
18554: PUSH
18555: LD_INT 1
18557: NEG
18558: PUSH
18559: LD_INT 1
18561: NEG
18562: PUSH
18563: EMPTY
18564: LIST
18565: LIST
18566: PUSH
18567: LD_INT 1
18569: NEG
18570: PUSH
18571: LD_INT 2
18573: NEG
18574: PUSH
18575: EMPTY
18576: LIST
18577: LIST
18578: PUSH
18579: LD_INT 0
18581: PUSH
18582: LD_INT 2
18584: NEG
18585: PUSH
18586: EMPTY
18587: LIST
18588: LIST
18589: PUSH
18590: LD_INT 1
18592: PUSH
18593: LD_INT 1
18595: NEG
18596: PUSH
18597: EMPTY
18598: LIST
18599: LIST
18600: PUSH
18601: LD_INT 2
18603: PUSH
18604: LD_INT 0
18606: PUSH
18607: EMPTY
18608: LIST
18609: LIST
18610: PUSH
18611: LD_INT 2
18613: PUSH
18614: LD_INT 1
18616: PUSH
18617: EMPTY
18618: LIST
18619: LIST
18620: PUSH
18621: LD_INT 2
18623: PUSH
18624: LD_INT 2
18626: PUSH
18627: EMPTY
18628: LIST
18629: LIST
18630: PUSH
18631: LD_INT 1
18633: PUSH
18634: LD_INT 2
18636: PUSH
18637: EMPTY
18638: LIST
18639: LIST
18640: PUSH
18641: LD_INT 0
18643: PUSH
18644: LD_INT 2
18646: PUSH
18647: EMPTY
18648: LIST
18649: LIST
18650: PUSH
18651: LD_INT 1
18653: NEG
18654: PUSH
18655: LD_INT 1
18657: PUSH
18658: EMPTY
18659: LIST
18660: LIST
18661: PUSH
18662: LD_INT 2
18664: NEG
18665: PUSH
18666: LD_INT 0
18668: PUSH
18669: EMPTY
18670: LIST
18671: LIST
18672: PUSH
18673: LD_INT 2
18675: NEG
18676: PUSH
18677: LD_INT 1
18679: NEG
18680: PUSH
18681: EMPTY
18682: LIST
18683: LIST
18684: PUSH
18685: LD_INT 2
18687: NEG
18688: PUSH
18689: LD_INT 2
18691: NEG
18692: PUSH
18693: EMPTY
18694: LIST
18695: LIST
18696: PUSH
18697: EMPTY
18698: LIST
18699: LIST
18700: LIST
18701: LIST
18702: LIST
18703: LIST
18704: LIST
18705: LIST
18706: LIST
18707: LIST
18708: LIST
18709: LIST
18710: LIST
18711: LIST
18712: LIST
18713: LIST
18714: LIST
18715: LIST
18716: LIST
18717: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18718: LD_ADDR_VAR 0 54
18722: PUSH
18723: LD_INT 0
18725: PUSH
18726: LD_INT 0
18728: PUSH
18729: EMPTY
18730: LIST
18731: LIST
18732: PUSH
18733: LD_INT 0
18735: PUSH
18736: LD_INT 1
18738: NEG
18739: PUSH
18740: EMPTY
18741: LIST
18742: LIST
18743: PUSH
18744: LD_INT 1
18746: PUSH
18747: LD_INT 0
18749: PUSH
18750: EMPTY
18751: LIST
18752: LIST
18753: PUSH
18754: LD_INT 1
18756: PUSH
18757: LD_INT 1
18759: PUSH
18760: EMPTY
18761: LIST
18762: LIST
18763: PUSH
18764: LD_INT 0
18766: PUSH
18767: LD_INT 1
18769: PUSH
18770: EMPTY
18771: LIST
18772: LIST
18773: PUSH
18774: LD_INT 1
18776: NEG
18777: PUSH
18778: LD_INT 0
18780: PUSH
18781: EMPTY
18782: LIST
18783: LIST
18784: PUSH
18785: LD_INT 1
18787: NEG
18788: PUSH
18789: LD_INT 1
18791: NEG
18792: PUSH
18793: EMPTY
18794: LIST
18795: LIST
18796: PUSH
18797: LD_INT 1
18799: NEG
18800: PUSH
18801: LD_INT 2
18803: NEG
18804: PUSH
18805: EMPTY
18806: LIST
18807: LIST
18808: PUSH
18809: LD_INT 0
18811: PUSH
18812: LD_INT 2
18814: NEG
18815: PUSH
18816: EMPTY
18817: LIST
18818: LIST
18819: PUSH
18820: LD_INT 1
18822: PUSH
18823: LD_INT 1
18825: NEG
18826: PUSH
18827: EMPTY
18828: LIST
18829: LIST
18830: PUSH
18831: LD_INT 2
18833: PUSH
18834: LD_INT 0
18836: PUSH
18837: EMPTY
18838: LIST
18839: LIST
18840: PUSH
18841: LD_INT 2
18843: PUSH
18844: LD_INT 1
18846: PUSH
18847: EMPTY
18848: LIST
18849: LIST
18850: PUSH
18851: LD_INT 2
18853: PUSH
18854: LD_INT 2
18856: PUSH
18857: EMPTY
18858: LIST
18859: LIST
18860: PUSH
18861: LD_INT 1
18863: PUSH
18864: LD_INT 2
18866: PUSH
18867: EMPTY
18868: LIST
18869: LIST
18870: PUSH
18871: LD_INT 0
18873: PUSH
18874: LD_INT 2
18876: PUSH
18877: EMPTY
18878: LIST
18879: LIST
18880: PUSH
18881: LD_INT 1
18883: NEG
18884: PUSH
18885: LD_INT 1
18887: PUSH
18888: EMPTY
18889: LIST
18890: LIST
18891: PUSH
18892: LD_INT 2
18894: NEG
18895: PUSH
18896: LD_INT 0
18898: PUSH
18899: EMPTY
18900: LIST
18901: LIST
18902: PUSH
18903: LD_INT 2
18905: NEG
18906: PUSH
18907: LD_INT 1
18909: NEG
18910: PUSH
18911: EMPTY
18912: LIST
18913: LIST
18914: PUSH
18915: LD_INT 2
18917: NEG
18918: PUSH
18919: LD_INT 2
18921: NEG
18922: PUSH
18923: EMPTY
18924: LIST
18925: LIST
18926: PUSH
18927: EMPTY
18928: LIST
18929: LIST
18930: LIST
18931: LIST
18932: LIST
18933: LIST
18934: LIST
18935: LIST
18936: LIST
18937: LIST
18938: LIST
18939: LIST
18940: LIST
18941: LIST
18942: LIST
18943: LIST
18944: LIST
18945: LIST
18946: LIST
18947: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18948: LD_ADDR_VAR 0 55
18952: PUSH
18953: LD_INT 0
18955: PUSH
18956: LD_INT 0
18958: PUSH
18959: EMPTY
18960: LIST
18961: LIST
18962: PUSH
18963: LD_INT 0
18965: PUSH
18966: LD_INT 1
18968: NEG
18969: PUSH
18970: EMPTY
18971: LIST
18972: LIST
18973: PUSH
18974: LD_INT 1
18976: PUSH
18977: LD_INT 0
18979: PUSH
18980: EMPTY
18981: LIST
18982: LIST
18983: PUSH
18984: LD_INT 1
18986: PUSH
18987: LD_INT 1
18989: PUSH
18990: EMPTY
18991: LIST
18992: LIST
18993: PUSH
18994: LD_INT 0
18996: PUSH
18997: LD_INT 1
18999: PUSH
19000: EMPTY
19001: LIST
19002: LIST
19003: PUSH
19004: LD_INT 1
19006: NEG
19007: PUSH
19008: LD_INT 0
19010: PUSH
19011: EMPTY
19012: LIST
19013: LIST
19014: PUSH
19015: LD_INT 1
19017: NEG
19018: PUSH
19019: LD_INT 1
19021: NEG
19022: PUSH
19023: EMPTY
19024: LIST
19025: LIST
19026: PUSH
19027: LD_INT 1
19029: NEG
19030: PUSH
19031: LD_INT 2
19033: NEG
19034: PUSH
19035: EMPTY
19036: LIST
19037: LIST
19038: PUSH
19039: LD_INT 0
19041: PUSH
19042: LD_INT 2
19044: NEG
19045: PUSH
19046: EMPTY
19047: LIST
19048: LIST
19049: PUSH
19050: LD_INT 1
19052: PUSH
19053: LD_INT 1
19055: NEG
19056: PUSH
19057: EMPTY
19058: LIST
19059: LIST
19060: PUSH
19061: LD_INT 2
19063: PUSH
19064: LD_INT 0
19066: PUSH
19067: EMPTY
19068: LIST
19069: LIST
19070: PUSH
19071: LD_INT 2
19073: PUSH
19074: LD_INT 1
19076: PUSH
19077: EMPTY
19078: LIST
19079: LIST
19080: PUSH
19081: LD_INT 2
19083: PUSH
19084: LD_INT 2
19086: PUSH
19087: EMPTY
19088: LIST
19089: LIST
19090: PUSH
19091: LD_INT 1
19093: PUSH
19094: LD_INT 2
19096: PUSH
19097: EMPTY
19098: LIST
19099: LIST
19100: PUSH
19101: LD_INT 0
19103: PUSH
19104: LD_INT 2
19106: PUSH
19107: EMPTY
19108: LIST
19109: LIST
19110: PUSH
19111: LD_INT 1
19113: NEG
19114: PUSH
19115: LD_INT 1
19117: PUSH
19118: EMPTY
19119: LIST
19120: LIST
19121: PUSH
19122: LD_INT 2
19124: NEG
19125: PUSH
19126: LD_INT 0
19128: PUSH
19129: EMPTY
19130: LIST
19131: LIST
19132: PUSH
19133: LD_INT 2
19135: NEG
19136: PUSH
19137: LD_INT 1
19139: NEG
19140: PUSH
19141: EMPTY
19142: LIST
19143: LIST
19144: PUSH
19145: LD_INT 2
19147: NEG
19148: PUSH
19149: LD_INT 2
19151: NEG
19152: PUSH
19153: EMPTY
19154: LIST
19155: LIST
19156: PUSH
19157: EMPTY
19158: LIST
19159: LIST
19160: LIST
19161: LIST
19162: LIST
19163: LIST
19164: LIST
19165: LIST
19166: LIST
19167: LIST
19168: LIST
19169: LIST
19170: LIST
19171: LIST
19172: LIST
19173: LIST
19174: LIST
19175: LIST
19176: LIST
19177: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19178: LD_ADDR_VAR 0 56
19182: PUSH
19183: LD_INT 0
19185: PUSH
19186: LD_INT 0
19188: PUSH
19189: EMPTY
19190: LIST
19191: LIST
19192: PUSH
19193: LD_INT 0
19195: PUSH
19196: LD_INT 1
19198: NEG
19199: PUSH
19200: EMPTY
19201: LIST
19202: LIST
19203: PUSH
19204: LD_INT 1
19206: PUSH
19207: LD_INT 0
19209: PUSH
19210: EMPTY
19211: LIST
19212: LIST
19213: PUSH
19214: LD_INT 1
19216: PUSH
19217: LD_INT 1
19219: PUSH
19220: EMPTY
19221: LIST
19222: LIST
19223: PUSH
19224: LD_INT 0
19226: PUSH
19227: LD_INT 1
19229: PUSH
19230: EMPTY
19231: LIST
19232: LIST
19233: PUSH
19234: LD_INT 1
19236: NEG
19237: PUSH
19238: LD_INT 0
19240: PUSH
19241: EMPTY
19242: LIST
19243: LIST
19244: PUSH
19245: LD_INT 1
19247: NEG
19248: PUSH
19249: LD_INT 1
19251: NEG
19252: PUSH
19253: EMPTY
19254: LIST
19255: LIST
19256: PUSH
19257: LD_INT 1
19259: NEG
19260: PUSH
19261: LD_INT 2
19263: NEG
19264: PUSH
19265: EMPTY
19266: LIST
19267: LIST
19268: PUSH
19269: LD_INT 0
19271: PUSH
19272: LD_INT 2
19274: NEG
19275: PUSH
19276: EMPTY
19277: LIST
19278: LIST
19279: PUSH
19280: LD_INT 1
19282: PUSH
19283: LD_INT 1
19285: NEG
19286: PUSH
19287: EMPTY
19288: LIST
19289: LIST
19290: PUSH
19291: LD_INT 2
19293: PUSH
19294: LD_INT 0
19296: PUSH
19297: EMPTY
19298: LIST
19299: LIST
19300: PUSH
19301: LD_INT 2
19303: PUSH
19304: LD_INT 1
19306: PUSH
19307: EMPTY
19308: LIST
19309: LIST
19310: PUSH
19311: LD_INT 2
19313: PUSH
19314: LD_INT 2
19316: PUSH
19317: EMPTY
19318: LIST
19319: LIST
19320: PUSH
19321: LD_INT 1
19323: PUSH
19324: LD_INT 2
19326: PUSH
19327: EMPTY
19328: LIST
19329: LIST
19330: PUSH
19331: LD_INT 0
19333: PUSH
19334: LD_INT 2
19336: PUSH
19337: EMPTY
19338: LIST
19339: LIST
19340: PUSH
19341: LD_INT 1
19343: NEG
19344: PUSH
19345: LD_INT 1
19347: PUSH
19348: EMPTY
19349: LIST
19350: LIST
19351: PUSH
19352: LD_INT 2
19354: NEG
19355: PUSH
19356: LD_INT 0
19358: PUSH
19359: EMPTY
19360: LIST
19361: LIST
19362: PUSH
19363: LD_INT 2
19365: NEG
19366: PUSH
19367: LD_INT 1
19369: NEG
19370: PUSH
19371: EMPTY
19372: LIST
19373: LIST
19374: PUSH
19375: LD_INT 2
19377: NEG
19378: PUSH
19379: LD_INT 2
19381: NEG
19382: PUSH
19383: EMPTY
19384: LIST
19385: LIST
19386: PUSH
19387: EMPTY
19388: LIST
19389: LIST
19390: LIST
19391: LIST
19392: LIST
19393: LIST
19394: LIST
19395: LIST
19396: LIST
19397: LIST
19398: LIST
19399: LIST
19400: LIST
19401: LIST
19402: LIST
19403: LIST
19404: LIST
19405: LIST
19406: LIST
19407: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19408: LD_ADDR_VAR 0 57
19412: PUSH
19413: LD_INT 0
19415: PUSH
19416: LD_INT 0
19418: PUSH
19419: EMPTY
19420: LIST
19421: LIST
19422: PUSH
19423: LD_INT 0
19425: PUSH
19426: LD_INT 1
19428: NEG
19429: PUSH
19430: EMPTY
19431: LIST
19432: LIST
19433: PUSH
19434: LD_INT 1
19436: PUSH
19437: LD_INT 0
19439: PUSH
19440: EMPTY
19441: LIST
19442: LIST
19443: PUSH
19444: LD_INT 1
19446: PUSH
19447: LD_INT 1
19449: PUSH
19450: EMPTY
19451: LIST
19452: LIST
19453: PUSH
19454: LD_INT 0
19456: PUSH
19457: LD_INT 1
19459: PUSH
19460: EMPTY
19461: LIST
19462: LIST
19463: PUSH
19464: LD_INT 1
19466: NEG
19467: PUSH
19468: LD_INT 0
19470: PUSH
19471: EMPTY
19472: LIST
19473: LIST
19474: PUSH
19475: LD_INT 1
19477: NEG
19478: PUSH
19479: LD_INT 1
19481: NEG
19482: PUSH
19483: EMPTY
19484: LIST
19485: LIST
19486: PUSH
19487: LD_INT 1
19489: NEG
19490: PUSH
19491: LD_INT 2
19493: NEG
19494: PUSH
19495: EMPTY
19496: LIST
19497: LIST
19498: PUSH
19499: LD_INT 0
19501: PUSH
19502: LD_INT 2
19504: NEG
19505: PUSH
19506: EMPTY
19507: LIST
19508: LIST
19509: PUSH
19510: LD_INT 1
19512: PUSH
19513: LD_INT 1
19515: NEG
19516: PUSH
19517: EMPTY
19518: LIST
19519: LIST
19520: PUSH
19521: LD_INT 2
19523: PUSH
19524: LD_INT 0
19526: PUSH
19527: EMPTY
19528: LIST
19529: LIST
19530: PUSH
19531: LD_INT 2
19533: PUSH
19534: LD_INT 1
19536: PUSH
19537: EMPTY
19538: LIST
19539: LIST
19540: PUSH
19541: LD_INT 2
19543: PUSH
19544: LD_INT 2
19546: PUSH
19547: EMPTY
19548: LIST
19549: LIST
19550: PUSH
19551: LD_INT 1
19553: PUSH
19554: LD_INT 2
19556: PUSH
19557: EMPTY
19558: LIST
19559: LIST
19560: PUSH
19561: LD_INT 0
19563: PUSH
19564: LD_INT 2
19566: PUSH
19567: EMPTY
19568: LIST
19569: LIST
19570: PUSH
19571: LD_INT 1
19573: NEG
19574: PUSH
19575: LD_INT 1
19577: PUSH
19578: EMPTY
19579: LIST
19580: LIST
19581: PUSH
19582: LD_INT 2
19584: NEG
19585: PUSH
19586: LD_INT 0
19588: PUSH
19589: EMPTY
19590: LIST
19591: LIST
19592: PUSH
19593: LD_INT 2
19595: NEG
19596: PUSH
19597: LD_INT 1
19599: NEG
19600: PUSH
19601: EMPTY
19602: LIST
19603: LIST
19604: PUSH
19605: LD_INT 2
19607: NEG
19608: PUSH
19609: LD_INT 2
19611: NEG
19612: PUSH
19613: EMPTY
19614: LIST
19615: LIST
19616: PUSH
19617: EMPTY
19618: LIST
19619: LIST
19620: LIST
19621: LIST
19622: LIST
19623: LIST
19624: LIST
19625: LIST
19626: LIST
19627: LIST
19628: LIST
19629: LIST
19630: LIST
19631: LIST
19632: LIST
19633: LIST
19634: LIST
19635: LIST
19636: LIST
19637: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19638: LD_ADDR_VAR 0 58
19642: PUSH
19643: LD_INT 0
19645: PUSH
19646: LD_INT 0
19648: PUSH
19649: EMPTY
19650: LIST
19651: LIST
19652: PUSH
19653: LD_INT 0
19655: PUSH
19656: LD_INT 1
19658: NEG
19659: PUSH
19660: EMPTY
19661: LIST
19662: LIST
19663: PUSH
19664: LD_INT 1
19666: PUSH
19667: LD_INT 0
19669: PUSH
19670: EMPTY
19671: LIST
19672: LIST
19673: PUSH
19674: LD_INT 1
19676: PUSH
19677: LD_INT 1
19679: PUSH
19680: EMPTY
19681: LIST
19682: LIST
19683: PUSH
19684: LD_INT 0
19686: PUSH
19687: LD_INT 1
19689: PUSH
19690: EMPTY
19691: LIST
19692: LIST
19693: PUSH
19694: LD_INT 1
19696: NEG
19697: PUSH
19698: LD_INT 0
19700: PUSH
19701: EMPTY
19702: LIST
19703: LIST
19704: PUSH
19705: LD_INT 1
19707: NEG
19708: PUSH
19709: LD_INT 1
19711: NEG
19712: PUSH
19713: EMPTY
19714: LIST
19715: LIST
19716: PUSH
19717: LD_INT 1
19719: NEG
19720: PUSH
19721: LD_INT 2
19723: NEG
19724: PUSH
19725: EMPTY
19726: LIST
19727: LIST
19728: PUSH
19729: LD_INT 0
19731: PUSH
19732: LD_INT 2
19734: NEG
19735: PUSH
19736: EMPTY
19737: LIST
19738: LIST
19739: PUSH
19740: LD_INT 1
19742: PUSH
19743: LD_INT 1
19745: NEG
19746: PUSH
19747: EMPTY
19748: LIST
19749: LIST
19750: PUSH
19751: LD_INT 2
19753: PUSH
19754: LD_INT 0
19756: PUSH
19757: EMPTY
19758: LIST
19759: LIST
19760: PUSH
19761: LD_INT 2
19763: PUSH
19764: LD_INT 1
19766: PUSH
19767: EMPTY
19768: LIST
19769: LIST
19770: PUSH
19771: LD_INT 2
19773: PUSH
19774: LD_INT 2
19776: PUSH
19777: EMPTY
19778: LIST
19779: LIST
19780: PUSH
19781: LD_INT 1
19783: PUSH
19784: LD_INT 2
19786: PUSH
19787: EMPTY
19788: LIST
19789: LIST
19790: PUSH
19791: LD_INT 0
19793: PUSH
19794: LD_INT 2
19796: PUSH
19797: EMPTY
19798: LIST
19799: LIST
19800: PUSH
19801: LD_INT 1
19803: NEG
19804: PUSH
19805: LD_INT 1
19807: PUSH
19808: EMPTY
19809: LIST
19810: LIST
19811: PUSH
19812: LD_INT 2
19814: NEG
19815: PUSH
19816: LD_INT 0
19818: PUSH
19819: EMPTY
19820: LIST
19821: LIST
19822: PUSH
19823: LD_INT 2
19825: NEG
19826: PUSH
19827: LD_INT 1
19829: NEG
19830: PUSH
19831: EMPTY
19832: LIST
19833: LIST
19834: PUSH
19835: LD_INT 2
19837: NEG
19838: PUSH
19839: LD_INT 2
19841: NEG
19842: PUSH
19843: EMPTY
19844: LIST
19845: LIST
19846: PUSH
19847: EMPTY
19848: LIST
19849: LIST
19850: LIST
19851: LIST
19852: LIST
19853: LIST
19854: LIST
19855: LIST
19856: LIST
19857: LIST
19858: LIST
19859: LIST
19860: LIST
19861: LIST
19862: LIST
19863: LIST
19864: LIST
19865: LIST
19866: LIST
19867: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19868: LD_ADDR_VAR 0 59
19872: PUSH
19873: LD_INT 0
19875: PUSH
19876: LD_INT 0
19878: PUSH
19879: EMPTY
19880: LIST
19881: LIST
19882: PUSH
19883: LD_INT 0
19885: PUSH
19886: LD_INT 1
19888: NEG
19889: PUSH
19890: EMPTY
19891: LIST
19892: LIST
19893: PUSH
19894: LD_INT 1
19896: PUSH
19897: LD_INT 0
19899: PUSH
19900: EMPTY
19901: LIST
19902: LIST
19903: PUSH
19904: LD_INT 1
19906: PUSH
19907: LD_INT 1
19909: PUSH
19910: EMPTY
19911: LIST
19912: LIST
19913: PUSH
19914: LD_INT 0
19916: PUSH
19917: LD_INT 1
19919: PUSH
19920: EMPTY
19921: LIST
19922: LIST
19923: PUSH
19924: LD_INT 1
19926: NEG
19927: PUSH
19928: LD_INT 0
19930: PUSH
19931: EMPTY
19932: LIST
19933: LIST
19934: PUSH
19935: LD_INT 1
19937: NEG
19938: PUSH
19939: LD_INT 1
19941: NEG
19942: PUSH
19943: EMPTY
19944: LIST
19945: LIST
19946: PUSH
19947: EMPTY
19948: LIST
19949: LIST
19950: LIST
19951: LIST
19952: LIST
19953: LIST
19954: LIST
19955: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19956: LD_ADDR_VAR 0 60
19960: PUSH
19961: LD_INT 0
19963: PUSH
19964: LD_INT 0
19966: PUSH
19967: EMPTY
19968: LIST
19969: LIST
19970: PUSH
19971: LD_INT 0
19973: PUSH
19974: LD_INT 1
19976: NEG
19977: PUSH
19978: EMPTY
19979: LIST
19980: LIST
19981: PUSH
19982: LD_INT 1
19984: PUSH
19985: LD_INT 0
19987: PUSH
19988: EMPTY
19989: LIST
19990: LIST
19991: PUSH
19992: LD_INT 1
19994: PUSH
19995: LD_INT 1
19997: PUSH
19998: EMPTY
19999: LIST
20000: LIST
20001: PUSH
20002: LD_INT 0
20004: PUSH
20005: LD_INT 1
20007: PUSH
20008: EMPTY
20009: LIST
20010: LIST
20011: PUSH
20012: LD_INT 1
20014: NEG
20015: PUSH
20016: LD_INT 0
20018: PUSH
20019: EMPTY
20020: LIST
20021: LIST
20022: PUSH
20023: LD_INT 1
20025: NEG
20026: PUSH
20027: LD_INT 1
20029: NEG
20030: PUSH
20031: EMPTY
20032: LIST
20033: LIST
20034: PUSH
20035: EMPTY
20036: LIST
20037: LIST
20038: LIST
20039: LIST
20040: LIST
20041: LIST
20042: LIST
20043: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20044: LD_ADDR_VAR 0 61
20048: PUSH
20049: LD_INT 0
20051: PUSH
20052: LD_INT 0
20054: PUSH
20055: EMPTY
20056: LIST
20057: LIST
20058: PUSH
20059: LD_INT 0
20061: PUSH
20062: LD_INT 1
20064: NEG
20065: PUSH
20066: EMPTY
20067: LIST
20068: LIST
20069: PUSH
20070: LD_INT 1
20072: PUSH
20073: LD_INT 0
20075: PUSH
20076: EMPTY
20077: LIST
20078: LIST
20079: PUSH
20080: LD_INT 1
20082: PUSH
20083: LD_INT 1
20085: PUSH
20086: EMPTY
20087: LIST
20088: LIST
20089: PUSH
20090: LD_INT 0
20092: PUSH
20093: LD_INT 1
20095: PUSH
20096: EMPTY
20097: LIST
20098: LIST
20099: PUSH
20100: LD_INT 1
20102: NEG
20103: PUSH
20104: LD_INT 0
20106: PUSH
20107: EMPTY
20108: LIST
20109: LIST
20110: PUSH
20111: LD_INT 1
20113: NEG
20114: PUSH
20115: LD_INT 1
20117: NEG
20118: PUSH
20119: EMPTY
20120: LIST
20121: LIST
20122: PUSH
20123: EMPTY
20124: LIST
20125: LIST
20126: LIST
20127: LIST
20128: LIST
20129: LIST
20130: LIST
20131: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20132: LD_ADDR_VAR 0 62
20136: PUSH
20137: LD_INT 0
20139: PUSH
20140: LD_INT 0
20142: PUSH
20143: EMPTY
20144: LIST
20145: LIST
20146: PUSH
20147: LD_INT 0
20149: PUSH
20150: LD_INT 1
20152: NEG
20153: PUSH
20154: EMPTY
20155: LIST
20156: LIST
20157: PUSH
20158: LD_INT 1
20160: PUSH
20161: LD_INT 0
20163: PUSH
20164: EMPTY
20165: LIST
20166: LIST
20167: PUSH
20168: LD_INT 1
20170: PUSH
20171: LD_INT 1
20173: PUSH
20174: EMPTY
20175: LIST
20176: LIST
20177: PUSH
20178: LD_INT 0
20180: PUSH
20181: LD_INT 1
20183: PUSH
20184: EMPTY
20185: LIST
20186: LIST
20187: PUSH
20188: LD_INT 1
20190: NEG
20191: PUSH
20192: LD_INT 0
20194: PUSH
20195: EMPTY
20196: LIST
20197: LIST
20198: PUSH
20199: LD_INT 1
20201: NEG
20202: PUSH
20203: LD_INT 1
20205: NEG
20206: PUSH
20207: EMPTY
20208: LIST
20209: LIST
20210: PUSH
20211: EMPTY
20212: LIST
20213: LIST
20214: LIST
20215: LIST
20216: LIST
20217: LIST
20218: LIST
20219: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20220: LD_ADDR_VAR 0 63
20224: PUSH
20225: LD_INT 0
20227: PUSH
20228: LD_INT 0
20230: PUSH
20231: EMPTY
20232: LIST
20233: LIST
20234: PUSH
20235: LD_INT 0
20237: PUSH
20238: LD_INT 1
20240: NEG
20241: PUSH
20242: EMPTY
20243: LIST
20244: LIST
20245: PUSH
20246: LD_INT 1
20248: PUSH
20249: LD_INT 0
20251: PUSH
20252: EMPTY
20253: LIST
20254: LIST
20255: PUSH
20256: LD_INT 1
20258: PUSH
20259: LD_INT 1
20261: PUSH
20262: EMPTY
20263: LIST
20264: LIST
20265: PUSH
20266: LD_INT 0
20268: PUSH
20269: LD_INT 1
20271: PUSH
20272: EMPTY
20273: LIST
20274: LIST
20275: PUSH
20276: LD_INT 1
20278: NEG
20279: PUSH
20280: LD_INT 0
20282: PUSH
20283: EMPTY
20284: LIST
20285: LIST
20286: PUSH
20287: LD_INT 1
20289: NEG
20290: PUSH
20291: LD_INT 1
20293: NEG
20294: PUSH
20295: EMPTY
20296: LIST
20297: LIST
20298: PUSH
20299: EMPTY
20300: LIST
20301: LIST
20302: LIST
20303: LIST
20304: LIST
20305: LIST
20306: LIST
20307: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20308: LD_ADDR_VAR 0 64
20312: PUSH
20313: LD_INT 0
20315: PUSH
20316: LD_INT 0
20318: PUSH
20319: EMPTY
20320: LIST
20321: LIST
20322: PUSH
20323: LD_INT 0
20325: PUSH
20326: LD_INT 1
20328: NEG
20329: PUSH
20330: EMPTY
20331: LIST
20332: LIST
20333: PUSH
20334: LD_INT 1
20336: PUSH
20337: LD_INT 0
20339: PUSH
20340: EMPTY
20341: LIST
20342: LIST
20343: PUSH
20344: LD_INT 1
20346: PUSH
20347: LD_INT 1
20349: PUSH
20350: EMPTY
20351: LIST
20352: LIST
20353: PUSH
20354: LD_INT 0
20356: PUSH
20357: LD_INT 1
20359: PUSH
20360: EMPTY
20361: LIST
20362: LIST
20363: PUSH
20364: LD_INT 1
20366: NEG
20367: PUSH
20368: LD_INT 0
20370: PUSH
20371: EMPTY
20372: LIST
20373: LIST
20374: PUSH
20375: LD_INT 1
20377: NEG
20378: PUSH
20379: LD_INT 1
20381: NEG
20382: PUSH
20383: EMPTY
20384: LIST
20385: LIST
20386: PUSH
20387: EMPTY
20388: LIST
20389: LIST
20390: LIST
20391: LIST
20392: LIST
20393: LIST
20394: LIST
20395: ST_TO_ADDR
// end ; 1 :
20396: GO 26293
20398: LD_INT 1
20400: DOUBLE
20401: EQUAL
20402: IFTRUE 20406
20404: GO 23029
20406: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20407: LD_ADDR_VAR 0 11
20411: PUSH
20412: LD_INT 1
20414: NEG
20415: PUSH
20416: LD_INT 3
20418: NEG
20419: PUSH
20420: EMPTY
20421: LIST
20422: LIST
20423: PUSH
20424: LD_INT 0
20426: PUSH
20427: LD_INT 3
20429: NEG
20430: PUSH
20431: EMPTY
20432: LIST
20433: LIST
20434: PUSH
20435: LD_INT 1
20437: PUSH
20438: LD_INT 2
20440: NEG
20441: PUSH
20442: EMPTY
20443: LIST
20444: LIST
20445: PUSH
20446: EMPTY
20447: LIST
20448: LIST
20449: LIST
20450: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20451: LD_ADDR_VAR 0 12
20455: PUSH
20456: LD_INT 2
20458: PUSH
20459: LD_INT 1
20461: NEG
20462: PUSH
20463: EMPTY
20464: LIST
20465: LIST
20466: PUSH
20467: LD_INT 3
20469: PUSH
20470: LD_INT 0
20472: PUSH
20473: EMPTY
20474: LIST
20475: LIST
20476: PUSH
20477: LD_INT 3
20479: PUSH
20480: LD_INT 1
20482: PUSH
20483: EMPTY
20484: LIST
20485: LIST
20486: PUSH
20487: EMPTY
20488: LIST
20489: LIST
20490: LIST
20491: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20492: LD_ADDR_VAR 0 13
20496: PUSH
20497: LD_INT 3
20499: PUSH
20500: LD_INT 2
20502: PUSH
20503: EMPTY
20504: LIST
20505: LIST
20506: PUSH
20507: LD_INT 3
20509: PUSH
20510: LD_INT 3
20512: PUSH
20513: EMPTY
20514: LIST
20515: LIST
20516: PUSH
20517: LD_INT 2
20519: PUSH
20520: LD_INT 3
20522: PUSH
20523: EMPTY
20524: LIST
20525: LIST
20526: PUSH
20527: EMPTY
20528: LIST
20529: LIST
20530: LIST
20531: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20532: LD_ADDR_VAR 0 14
20536: PUSH
20537: LD_INT 1
20539: PUSH
20540: LD_INT 3
20542: PUSH
20543: EMPTY
20544: LIST
20545: LIST
20546: PUSH
20547: LD_INT 0
20549: PUSH
20550: LD_INT 3
20552: PUSH
20553: EMPTY
20554: LIST
20555: LIST
20556: PUSH
20557: LD_INT 1
20559: NEG
20560: PUSH
20561: LD_INT 2
20563: PUSH
20564: EMPTY
20565: LIST
20566: LIST
20567: PUSH
20568: EMPTY
20569: LIST
20570: LIST
20571: LIST
20572: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20573: LD_ADDR_VAR 0 15
20577: PUSH
20578: LD_INT 2
20580: NEG
20581: PUSH
20582: LD_INT 1
20584: PUSH
20585: EMPTY
20586: LIST
20587: LIST
20588: PUSH
20589: LD_INT 3
20591: NEG
20592: PUSH
20593: LD_INT 0
20595: PUSH
20596: EMPTY
20597: LIST
20598: LIST
20599: PUSH
20600: LD_INT 3
20602: NEG
20603: PUSH
20604: LD_INT 1
20606: NEG
20607: PUSH
20608: EMPTY
20609: LIST
20610: LIST
20611: PUSH
20612: EMPTY
20613: LIST
20614: LIST
20615: LIST
20616: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20617: LD_ADDR_VAR 0 16
20621: PUSH
20622: LD_INT 2
20624: NEG
20625: PUSH
20626: LD_INT 3
20628: NEG
20629: PUSH
20630: EMPTY
20631: LIST
20632: LIST
20633: PUSH
20634: LD_INT 3
20636: NEG
20637: PUSH
20638: LD_INT 2
20640: NEG
20641: PUSH
20642: EMPTY
20643: LIST
20644: LIST
20645: PUSH
20646: LD_INT 3
20648: NEG
20649: PUSH
20650: LD_INT 3
20652: NEG
20653: PUSH
20654: EMPTY
20655: LIST
20656: LIST
20657: PUSH
20658: EMPTY
20659: LIST
20660: LIST
20661: LIST
20662: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20663: LD_ADDR_VAR 0 17
20667: PUSH
20668: LD_INT 1
20670: NEG
20671: PUSH
20672: LD_INT 3
20674: NEG
20675: PUSH
20676: EMPTY
20677: LIST
20678: LIST
20679: PUSH
20680: LD_INT 0
20682: PUSH
20683: LD_INT 3
20685: NEG
20686: PUSH
20687: EMPTY
20688: LIST
20689: LIST
20690: PUSH
20691: LD_INT 1
20693: PUSH
20694: LD_INT 2
20696: NEG
20697: PUSH
20698: EMPTY
20699: LIST
20700: LIST
20701: PUSH
20702: EMPTY
20703: LIST
20704: LIST
20705: LIST
20706: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20707: LD_ADDR_VAR 0 18
20711: PUSH
20712: LD_INT 2
20714: PUSH
20715: LD_INT 1
20717: NEG
20718: PUSH
20719: EMPTY
20720: LIST
20721: LIST
20722: PUSH
20723: LD_INT 3
20725: PUSH
20726: LD_INT 0
20728: PUSH
20729: EMPTY
20730: LIST
20731: LIST
20732: PUSH
20733: LD_INT 3
20735: PUSH
20736: LD_INT 1
20738: PUSH
20739: EMPTY
20740: LIST
20741: LIST
20742: PUSH
20743: EMPTY
20744: LIST
20745: LIST
20746: LIST
20747: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20748: LD_ADDR_VAR 0 19
20752: PUSH
20753: LD_INT 3
20755: PUSH
20756: LD_INT 2
20758: PUSH
20759: EMPTY
20760: LIST
20761: LIST
20762: PUSH
20763: LD_INT 3
20765: PUSH
20766: LD_INT 3
20768: PUSH
20769: EMPTY
20770: LIST
20771: LIST
20772: PUSH
20773: LD_INT 2
20775: PUSH
20776: LD_INT 3
20778: PUSH
20779: EMPTY
20780: LIST
20781: LIST
20782: PUSH
20783: EMPTY
20784: LIST
20785: LIST
20786: LIST
20787: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20788: LD_ADDR_VAR 0 20
20792: PUSH
20793: LD_INT 1
20795: PUSH
20796: LD_INT 3
20798: PUSH
20799: EMPTY
20800: LIST
20801: LIST
20802: PUSH
20803: LD_INT 0
20805: PUSH
20806: LD_INT 3
20808: PUSH
20809: EMPTY
20810: LIST
20811: LIST
20812: PUSH
20813: LD_INT 1
20815: NEG
20816: PUSH
20817: LD_INT 2
20819: PUSH
20820: EMPTY
20821: LIST
20822: LIST
20823: PUSH
20824: EMPTY
20825: LIST
20826: LIST
20827: LIST
20828: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20829: LD_ADDR_VAR 0 21
20833: PUSH
20834: LD_INT 2
20836: NEG
20837: PUSH
20838: LD_INT 1
20840: PUSH
20841: EMPTY
20842: LIST
20843: LIST
20844: PUSH
20845: LD_INT 3
20847: NEG
20848: PUSH
20849: LD_INT 0
20851: PUSH
20852: EMPTY
20853: LIST
20854: LIST
20855: PUSH
20856: LD_INT 3
20858: NEG
20859: PUSH
20860: LD_INT 1
20862: NEG
20863: PUSH
20864: EMPTY
20865: LIST
20866: LIST
20867: PUSH
20868: EMPTY
20869: LIST
20870: LIST
20871: LIST
20872: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20873: LD_ADDR_VAR 0 22
20877: PUSH
20878: LD_INT 2
20880: NEG
20881: PUSH
20882: LD_INT 3
20884: NEG
20885: PUSH
20886: EMPTY
20887: LIST
20888: LIST
20889: PUSH
20890: LD_INT 3
20892: NEG
20893: PUSH
20894: LD_INT 2
20896: NEG
20897: PUSH
20898: EMPTY
20899: LIST
20900: LIST
20901: PUSH
20902: LD_INT 3
20904: NEG
20905: PUSH
20906: LD_INT 3
20908: NEG
20909: PUSH
20910: EMPTY
20911: LIST
20912: LIST
20913: PUSH
20914: EMPTY
20915: LIST
20916: LIST
20917: LIST
20918: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20919: LD_ADDR_VAR 0 23
20923: PUSH
20924: LD_INT 0
20926: PUSH
20927: LD_INT 3
20929: NEG
20930: PUSH
20931: EMPTY
20932: LIST
20933: LIST
20934: PUSH
20935: LD_INT 1
20937: NEG
20938: PUSH
20939: LD_INT 4
20941: NEG
20942: PUSH
20943: EMPTY
20944: LIST
20945: LIST
20946: PUSH
20947: LD_INT 1
20949: PUSH
20950: LD_INT 3
20952: NEG
20953: PUSH
20954: EMPTY
20955: LIST
20956: LIST
20957: PUSH
20958: EMPTY
20959: LIST
20960: LIST
20961: LIST
20962: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20963: LD_ADDR_VAR 0 24
20967: PUSH
20968: LD_INT 3
20970: PUSH
20971: LD_INT 0
20973: PUSH
20974: EMPTY
20975: LIST
20976: LIST
20977: PUSH
20978: LD_INT 3
20980: PUSH
20981: LD_INT 1
20983: NEG
20984: PUSH
20985: EMPTY
20986: LIST
20987: LIST
20988: PUSH
20989: LD_INT 4
20991: PUSH
20992: LD_INT 1
20994: PUSH
20995: EMPTY
20996: LIST
20997: LIST
20998: PUSH
20999: EMPTY
21000: LIST
21001: LIST
21002: LIST
21003: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21004: LD_ADDR_VAR 0 25
21008: PUSH
21009: LD_INT 3
21011: PUSH
21012: LD_INT 3
21014: PUSH
21015: EMPTY
21016: LIST
21017: LIST
21018: PUSH
21019: LD_INT 4
21021: PUSH
21022: LD_INT 3
21024: PUSH
21025: EMPTY
21026: LIST
21027: LIST
21028: PUSH
21029: LD_INT 3
21031: PUSH
21032: LD_INT 4
21034: PUSH
21035: EMPTY
21036: LIST
21037: LIST
21038: PUSH
21039: EMPTY
21040: LIST
21041: LIST
21042: LIST
21043: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21044: LD_ADDR_VAR 0 26
21048: PUSH
21049: LD_INT 0
21051: PUSH
21052: LD_INT 3
21054: PUSH
21055: EMPTY
21056: LIST
21057: LIST
21058: PUSH
21059: LD_INT 1
21061: PUSH
21062: LD_INT 4
21064: PUSH
21065: EMPTY
21066: LIST
21067: LIST
21068: PUSH
21069: LD_INT 1
21071: NEG
21072: PUSH
21073: LD_INT 3
21075: PUSH
21076: EMPTY
21077: LIST
21078: LIST
21079: PUSH
21080: EMPTY
21081: LIST
21082: LIST
21083: LIST
21084: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21085: LD_ADDR_VAR 0 27
21089: PUSH
21090: LD_INT 3
21092: NEG
21093: PUSH
21094: LD_INT 0
21096: PUSH
21097: EMPTY
21098: LIST
21099: LIST
21100: PUSH
21101: LD_INT 3
21103: NEG
21104: PUSH
21105: LD_INT 1
21107: PUSH
21108: EMPTY
21109: LIST
21110: LIST
21111: PUSH
21112: LD_INT 4
21114: NEG
21115: PUSH
21116: LD_INT 1
21118: NEG
21119: PUSH
21120: EMPTY
21121: LIST
21122: LIST
21123: PUSH
21124: EMPTY
21125: LIST
21126: LIST
21127: LIST
21128: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21129: LD_ADDR_VAR 0 28
21133: PUSH
21134: LD_INT 3
21136: NEG
21137: PUSH
21138: LD_INT 3
21140: NEG
21141: PUSH
21142: EMPTY
21143: LIST
21144: LIST
21145: PUSH
21146: LD_INT 3
21148: NEG
21149: PUSH
21150: LD_INT 4
21152: NEG
21153: PUSH
21154: EMPTY
21155: LIST
21156: LIST
21157: PUSH
21158: LD_INT 4
21160: NEG
21161: PUSH
21162: LD_INT 3
21164: NEG
21165: PUSH
21166: EMPTY
21167: LIST
21168: LIST
21169: PUSH
21170: EMPTY
21171: LIST
21172: LIST
21173: LIST
21174: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21175: LD_ADDR_VAR 0 29
21179: PUSH
21180: LD_INT 1
21182: NEG
21183: PUSH
21184: LD_INT 3
21186: NEG
21187: PUSH
21188: EMPTY
21189: LIST
21190: LIST
21191: PUSH
21192: LD_INT 0
21194: PUSH
21195: LD_INT 3
21197: NEG
21198: PUSH
21199: EMPTY
21200: LIST
21201: LIST
21202: PUSH
21203: LD_INT 1
21205: PUSH
21206: LD_INT 2
21208: NEG
21209: PUSH
21210: EMPTY
21211: LIST
21212: LIST
21213: PUSH
21214: LD_INT 1
21216: NEG
21217: PUSH
21218: LD_INT 4
21220: NEG
21221: PUSH
21222: EMPTY
21223: LIST
21224: LIST
21225: PUSH
21226: LD_INT 0
21228: PUSH
21229: LD_INT 4
21231: NEG
21232: PUSH
21233: EMPTY
21234: LIST
21235: LIST
21236: PUSH
21237: LD_INT 1
21239: PUSH
21240: LD_INT 3
21242: NEG
21243: PUSH
21244: EMPTY
21245: LIST
21246: LIST
21247: PUSH
21248: LD_INT 1
21250: NEG
21251: PUSH
21252: LD_INT 5
21254: NEG
21255: PUSH
21256: EMPTY
21257: LIST
21258: LIST
21259: PUSH
21260: LD_INT 0
21262: PUSH
21263: LD_INT 5
21265: NEG
21266: PUSH
21267: EMPTY
21268: LIST
21269: LIST
21270: PUSH
21271: LD_INT 1
21273: PUSH
21274: LD_INT 4
21276: NEG
21277: PUSH
21278: EMPTY
21279: LIST
21280: LIST
21281: PUSH
21282: LD_INT 1
21284: NEG
21285: PUSH
21286: LD_INT 6
21288: NEG
21289: PUSH
21290: EMPTY
21291: LIST
21292: LIST
21293: PUSH
21294: LD_INT 0
21296: PUSH
21297: LD_INT 6
21299: NEG
21300: PUSH
21301: EMPTY
21302: LIST
21303: LIST
21304: PUSH
21305: LD_INT 1
21307: PUSH
21308: LD_INT 5
21310: NEG
21311: PUSH
21312: EMPTY
21313: LIST
21314: LIST
21315: PUSH
21316: EMPTY
21317: LIST
21318: LIST
21319: LIST
21320: LIST
21321: LIST
21322: LIST
21323: LIST
21324: LIST
21325: LIST
21326: LIST
21327: LIST
21328: LIST
21329: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21330: LD_ADDR_VAR 0 30
21334: PUSH
21335: LD_INT 2
21337: PUSH
21338: LD_INT 1
21340: NEG
21341: PUSH
21342: EMPTY
21343: LIST
21344: LIST
21345: PUSH
21346: LD_INT 3
21348: PUSH
21349: LD_INT 0
21351: PUSH
21352: EMPTY
21353: LIST
21354: LIST
21355: PUSH
21356: LD_INT 3
21358: PUSH
21359: LD_INT 1
21361: PUSH
21362: EMPTY
21363: LIST
21364: LIST
21365: PUSH
21366: LD_INT 3
21368: PUSH
21369: LD_INT 1
21371: NEG
21372: PUSH
21373: EMPTY
21374: LIST
21375: LIST
21376: PUSH
21377: LD_INT 4
21379: PUSH
21380: LD_INT 0
21382: PUSH
21383: EMPTY
21384: LIST
21385: LIST
21386: PUSH
21387: LD_INT 4
21389: PUSH
21390: LD_INT 1
21392: PUSH
21393: EMPTY
21394: LIST
21395: LIST
21396: PUSH
21397: LD_INT 4
21399: PUSH
21400: LD_INT 1
21402: NEG
21403: PUSH
21404: EMPTY
21405: LIST
21406: LIST
21407: PUSH
21408: LD_INT 5
21410: PUSH
21411: LD_INT 0
21413: PUSH
21414: EMPTY
21415: LIST
21416: LIST
21417: PUSH
21418: LD_INT 5
21420: PUSH
21421: LD_INT 1
21423: PUSH
21424: EMPTY
21425: LIST
21426: LIST
21427: PUSH
21428: LD_INT 5
21430: PUSH
21431: LD_INT 1
21433: NEG
21434: PUSH
21435: EMPTY
21436: LIST
21437: LIST
21438: PUSH
21439: LD_INT 6
21441: PUSH
21442: LD_INT 0
21444: PUSH
21445: EMPTY
21446: LIST
21447: LIST
21448: PUSH
21449: LD_INT 6
21451: PUSH
21452: LD_INT 1
21454: PUSH
21455: EMPTY
21456: LIST
21457: LIST
21458: PUSH
21459: EMPTY
21460: LIST
21461: LIST
21462: LIST
21463: LIST
21464: LIST
21465: LIST
21466: LIST
21467: LIST
21468: LIST
21469: LIST
21470: LIST
21471: LIST
21472: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21473: LD_ADDR_VAR 0 31
21477: PUSH
21478: LD_INT 3
21480: PUSH
21481: LD_INT 2
21483: PUSH
21484: EMPTY
21485: LIST
21486: LIST
21487: PUSH
21488: LD_INT 3
21490: PUSH
21491: LD_INT 3
21493: PUSH
21494: EMPTY
21495: LIST
21496: LIST
21497: PUSH
21498: LD_INT 2
21500: PUSH
21501: LD_INT 3
21503: PUSH
21504: EMPTY
21505: LIST
21506: LIST
21507: PUSH
21508: LD_INT 4
21510: PUSH
21511: LD_INT 3
21513: PUSH
21514: EMPTY
21515: LIST
21516: LIST
21517: PUSH
21518: LD_INT 4
21520: PUSH
21521: LD_INT 4
21523: PUSH
21524: EMPTY
21525: LIST
21526: LIST
21527: PUSH
21528: LD_INT 3
21530: PUSH
21531: LD_INT 4
21533: PUSH
21534: EMPTY
21535: LIST
21536: LIST
21537: PUSH
21538: LD_INT 5
21540: PUSH
21541: LD_INT 4
21543: PUSH
21544: EMPTY
21545: LIST
21546: LIST
21547: PUSH
21548: LD_INT 5
21550: PUSH
21551: LD_INT 5
21553: PUSH
21554: EMPTY
21555: LIST
21556: LIST
21557: PUSH
21558: LD_INT 4
21560: PUSH
21561: LD_INT 5
21563: PUSH
21564: EMPTY
21565: LIST
21566: LIST
21567: PUSH
21568: LD_INT 6
21570: PUSH
21571: LD_INT 5
21573: PUSH
21574: EMPTY
21575: LIST
21576: LIST
21577: PUSH
21578: LD_INT 6
21580: PUSH
21581: LD_INT 6
21583: PUSH
21584: EMPTY
21585: LIST
21586: LIST
21587: PUSH
21588: LD_INT 5
21590: PUSH
21591: LD_INT 6
21593: PUSH
21594: EMPTY
21595: LIST
21596: LIST
21597: PUSH
21598: EMPTY
21599: LIST
21600: LIST
21601: LIST
21602: LIST
21603: LIST
21604: LIST
21605: LIST
21606: LIST
21607: LIST
21608: LIST
21609: LIST
21610: LIST
21611: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21612: LD_ADDR_VAR 0 32
21616: PUSH
21617: LD_INT 1
21619: PUSH
21620: LD_INT 3
21622: PUSH
21623: EMPTY
21624: LIST
21625: LIST
21626: PUSH
21627: LD_INT 0
21629: PUSH
21630: LD_INT 3
21632: PUSH
21633: EMPTY
21634: LIST
21635: LIST
21636: PUSH
21637: LD_INT 1
21639: NEG
21640: PUSH
21641: LD_INT 2
21643: PUSH
21644: EMPTY
21645: LIST
21646: LIST
21647: PUSH
21648: LD_INT 1
21650: PUSH
21651: LD_INT 4
21653: PUSH
21654: EMPTY
21655: LIST
21656: LIST
21657: PUSH
21658: LD_INT 0
21660: PUSH
21661: LD_INT 4
21663: PUSH
21664: EMPTY
21665: LIST
21666: LIST
21667: PUSH
21668: LD_INT 1
21670: NEG
21671: PUSH
21672: LD_INT 3
21674: PUSH
21675: EMPTY
21676: LIST
21677: LIST
21678: PUSH
21679: LD_INT 1
21681: PUSH
21682: LD_INT 5
21684: PUSH
21685: EMPTY
21686: LIST
21687: LIST
21688: PUSH
21689: LD_INT 0
21691: PUSH
21692: LD_INT 5
21694: PUSH
21695: EMPTY
21696: LIST
21697: LIST
21698: PUSH
21699: LD_INT 1
21701: NEG
21702: PUSH
21703: LD_INT 4
21705: PUSH
21706: EMPTY
21707: LIST
21708: LIST
21709: PUSH
21710: LD_INT 1
21712: PUSH
21713: LD_INT 6
21715: PUSH
21716: EMPTY
21717: LIST
21718: LIST
21719: PUSH
21720: LD_INT 0
21722: PUSH
21723: LD_INT 6
21725: PUSH
21726: EMPTY
21727: LIST
21728: LIST
21729: PUSH
21730: LD_INT 1
21732: NEG
21733: PUSH
21734: LD_INT 5
21736: PUSH
21737: EMPTY
21738: LIST
21739: LIST
21740: PUSH
21741: EMPTY
21742: LIST
21743: LIST
21744: LIST
21745: LIST
21746: LIST
21747: LIST
21748: LIST
21749: LIST
21750: LIST
21751: LIST
21752: LIST
21753: LIST
21754: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21755: LD_ADDR_VAR 0 33
21759: PUSH
21760: LD_INT 2
21762: NEG
21763: PUSH
21764: LD_INT 1
21766: PUSH
21767: EMPTY
21768: LIST
21769: LIST
21770: PUSH
21771: LD_INT 3
21773: NEG
21774: PUSH
21775: LD_INT 0
21777: PUSH
21778: EMPTY
21779: LIST
21780: LIST
21781: PUSH
21782: LD_INT 3
21784: NEG
21785: PUSH
21786: LD_INT 1
21788: NEG
21789: PUSH
21790: EMPTY
21791: LIST
21792: LIST
21793: PUSH
21794: LD_INT 3
21796: NEG
21797: PUSH
21798: LD_INT 1
21800: PUSH
21801: EMPTY
21802: LIST
21803: LIST
21804: PUSH
21805: LD_INT 4
21807: NEG
21808: PUSH
21809: LD_INT 0
21811: PUSH
21812: EMPTY
21813: LIST
21814: LIST
21815: PUSH
21816: LD_INT 4
21818: NEG
21819: PUSH
21820: LD_INT 1
21822: NEG
21823: PUSH
21824: EMPTY
21825: LIST
21826: LIST
21827: PUSH
21828: LD_INT 4
21830: NEG
21831: PUSH
21832: LD_INT 1
21834: PUSH
21835: EMPTY
21836: LIST
21837: LIST
21838: PUSH
21839: LD_INT 5
21841: NEG
21842: PUSH
21843: LD_INT 0
21845: PUSH
21846: EMPTY
21847: LIST
21848: LIST
21849: PUSH
21850: LD_INT 5
21852: NEG
21853: PUSH
21854: LD_INT 1
21856: NEG
21857: PUSH
21858: EMPTY
21859: LIST
21860: LIST
21861: PUSH
21862: LD_INT 5
21864: NEG
21865: PUSH
21866: LD_INT 1
21868: PUSH
21869: EMPTY
21870: LIST
21871: LIST
21872: PUSH
21873: LD_INT 6
21875: NEG
21876: PUSH
21877: LD_INT 0
21879: PUSH
21880: EMPTY
21881: LIST
21882: LIST
21883: PUSH
21884: LD_INT 6
21886: NEG
21887: PUSH
21888: LD_INT 1
21890: NEG
21891: PUSH
21892: EMPTY
21893: LIST
21894: LIST
21895: PUSH
21896: EMPTY
21897: LIST
21898: LIST
21899: LIST
21900: LIST
21901: LIST
21902: LIST
21903: LIST
21904: LIST
21905: LIST
21906: LIST
21907: LIST
21908: LIST
21909: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21910: LD_ADDR_VAR 0 34
21914: PUSH
21915: LD_INT 2
21917: NEG
21918: PUSH
21919: LD_INT 3
21921: NEG
21922: PUSH
21923: EMPTY
21924: LIST
21925: LIST
21926: PUSH
21927: LD_INT 3
21929: NEG
21930: PUSH
21931: LD_INT 2
21933: NEG
21934: PUSH
21935: EMPTY
21936: LIST
21937: LIST
21938: PUSH
21939: LD_INT 3
21941: NEG
21942: PUSH
21943: LD_INT 3
21945: NEG
21946: PUSH
21947: EMPTY
21948: LIST
21949: LIST
21950: PUSH
21951: LD_INT 3
21953: NEG
21954: PUSH
21955: LD_INT 4
21957: NEG
21958: PUSH
21959: EMPTY
21960: LIST
21961: LIST
21962: PUSH
21963: LD_INT 4
21965: NEG
21966: PUSH
21967: LD_INT 3
21969: NEG
21970: PUSH
21971: EMPTY
21972: LIST
21973: LIST
21974: PUSH
21975: LD_INT 4
21977: NEG
21978: PUSH
21979: LD_INT 4
21981: NEG
21982: PUSH
21983: EMPTY
21984: LIST
21985: LIST
21986: PUSH
21987: LD_INT 4
21989: NEG
21990: PUSH
21991: LD_INT 5
21993: NEG
21994: PUSH
21995: EMPTY
21996: LIST
21997: LIST
21998: PUSH
21999: LD_INT 5
22001: NEG
22002: PUSH
22003: LD_INT 4
22005: NEG
22006: PUSH
22007: EMPTY
22008: LIST
22009: LIST
22010: PUSH
22011: LD_INT 5
22013: NEG
22014: PUSH
22015: LD_INT 5
22017: NEG
22018: PUSH
22019: EMPTY
22020: LIST
22021: LIST
22022: PUSH
22023: LD_INT 5
22025: NEG
22026: PUSH
22027: LD_INT 6
22029: NEG
22030: PUSH
22031: EMPTY
22032: LIST
22033: LIST
22034: PUSH
22035: LD_INT 6
22037: NEG
22038: PUSH
22039: LD_INT 5
22041: NEG
22042: PUSH
22043: EMPTY
22044: LIST
22045: LIST
22046: PUSH
22047: LD_INT 6
22049: NEG
22050: PUSH
22051: LD_INT 6
22053: NEG
22054: PUSH
22055: EMPTY
22056: LIST
22057: LIST
22058: PUSH
22059: EMPTY
22060: LIST
22061: LIST
22062: LIST
22063: LIST
22064: LIST
22065: LIST
22066: LIST
22067: LIST
22068: LIST
22069: LIST
22070: LIST
22071: LIST
22072: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22073: LD_ADDR_VAR 0 41
22077: PUSH
22078: LD_INT 0
22080: PUSH
22081: LD_INT 2
22083: NEG
22084: PUSH
22085: EMPTY
22086: LIST
22087: LIST
22088: PUSH
22089: LD_INT 1
22091: NEG
22092: PUSH
22093: LD_INT 3
22095: NEG
22096: PUSH
22097: EMPTY
22098: LIST
22099: LIST
22100: PUSH
22101: LD_INT 1
22103: PUSH
22104: LD_INT 2
22106: NEG
22107: PUSH
22108: EMPTY
22109: LIST
22110: LIST
22111: PUSH
22112: EMPTY
22113: LIST
22114: LIST
22115: LIST
22116: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22117: LD_ADDR_VAR 0 42
22121: PUSH
22122: LD_INT 2
22124: PUSH
22125: LD_INT 0
22127: PUSH
22128: EMPTY
22129: LIST
22130: LIST
22131: PUSH
22132: LD_INT 2
22134: PUSH
22135: LD_INT 1
22137: NEG
22138: PUSH
22139: EMPTY
22140: LIST
22141: LIST
22142: PUSH
22143: LD_INT 3
22145: PUSH
22146: LD_INT 1
22148: PUSH
22149: EMPTY
22150: LIST
22151: LIST
22152: PUSH
22153: EMPTY
22154: LIST
22155: LIST
22156: LIST
22157: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22158: LD_ADDR_VAR 0 43
22162: PUSH
22163: LD_INT 2
22165: PUSH
22166: LD_INT 2
22168: PUSH
22169: EMPTY
22170: LIST
22171: LIST
22172: PUSH
22173: LD_INT 3
22175: PUSH
22176: LD_INT 2
22178: PUSH
22179: EMPTY
22180: LIST
22181: LIST
22182: PUSH
22183: LD_INT 2
22185: PUSH
22186: LD_INT 3
22188: PUSH
22189: EMPTY
22190: LIST
22191: LIST
22192: PUSH
22193: EMPTY
22194: LIST
22195: LIST
22196: LIST
22197: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22198: LD_ADDR_VAR 0 44
22202: PUSH
22203: LD_INT 0
22205: PUSH
22206: LD_INT 2
22208: PUSH
22209: EMPTY
22210: LIST
22211: LIST
22212: PUSH
22213: LD_INT 1
22215: PUSH
22216: LD_INT 3
22218: PUSH
22219: EMPTY
22220: LIST
22221: LIST
22222: PUSH
22223: LD_INT 1
22225: NEG
22226: PUSH
22227: LD_INT 2
22229: PUSH
22230: EMPTY
22231: LIST
22232: LIST
22233: PUSH
22234: EMPTY
22235: LIST
22236: LIST
22237: LIST
22238: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22239: LD_ADDR_VAR 0 45
22243: PUSH
22244: LD_INT 2
22246: NEG
22247: PUSH
22248: LD_INT 0
22250: PUSH
22251: EMPTY
22252: LIST
22253: LIST
22254: PUSH
22255: LD_INT 2
22257: NEG
22258: PUSH
22259: LD_INT 1
22261: PUSH
22262: EMPTY
22263: LIST
22264: LIST
22265: PUSH
22266: LD_INT 3
22268: NEG
22269: PUSH
22270: LD_INT 1
22272: NEG
22273: PUSH
22274: EMPTY
22275: LIST
22276: LIST
22277: PUSH
22278: EMPTY
22279: LIST
22280: LIST
22281: LIST
22282: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22283: LD_ADDR_VAR 0 46
22287: PUSH
22288: LD_INT 2
22290: NEG
22291: PUSH
22292: LD_INT 2
22294: NEG
22295: PUSH
22296: EMPTY
22297: LIST
22298: LIST
22299: PUSH
22300: LD_INT 2
22302: NEG
22303: PUSH
22304: LD_INT 3
22306: NEG
22307: PUSH
22308: EMPTY
22309: LIST
22310: LIST
22311: PUSH
22312: LD_INT 3
22314: NEG
22315: PUSH
22316: LD_INT 2
22318: NEG
22319: PUSH
22320: EMPTY
22321: LIST
22322: LIST
22323: PUSH
22324: EMPTY
22325: LIST
22326: LIST
22327: LIST
22328: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22329: LD_ADDR_VAR 0 47
22333: PUSH
22334: LD_INT 2
22336: NEG
22337: PUSH
22338: LD_INT 3
22340: NEG
22341: PUSH
22342: EMPTY
22343: LIST
22344: LIST
22345: PUSH
22346: LD_INT 1
22348: NEG
22349: PUSH
22350: LD_INT 3
22352: NEG
22353: PUSH
22354: EMPTY
22355: LIST
22356: LIST
22357: PUSH
22358: EMPTY
22359: LIST
22360: LIST
22361: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22362: LD_ADDR_VAR 0 48
22366: PUSH
22367: LD_INT 1
22369: PUSH
22370: LD_INT 2
22372: NEG
22373: PUSH
22374: EMPTY
22375: LIST
22376: LIST
22377: PUSH
22378: LD_INT 2
22380: PUSH
22381: LD_INT 1
22383: NEG
22384: PUSH
22385: EMPTY
22386: LIST
22387: LIST
22388: PUSH
22389: EMPTY
22390: LIST
22391: LIST
22392: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22393: LD_ADDR_VAR 0 49
22397: PUSH
22398: LD_INT 3
22400: PUSH
22401: LD_INT 1
22403: PUSH
22404: EMPTY
22405: LIST
22406: LIST
22407: PUSH
22408: LD_INT 3
22410: PUSH
22411: LD_INT 2
22413: PUSH
22414: EMPTY
22415: LIST
22416: LIST
22417: PUSH
22418: EMPTY
22419: LIST
22420: LIST
22421: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22422: LD_ADDR_VAR 0 50
22426: PUSH
22427: LD_INT 2
22429: PUSH
22430: LD_INT 3
22432: PUSH
22433: EMPTY
22434: LIST
22435: LIST
22436: PUSH
22437: LD_INT 1
22439: PUSH
22440: LD_INT 3
22442: PUSH
22443: EMPTY
22444: LIST
22445: LIST
22446: PUSH
22447: EMPTY
22448: LIST
22449: LIST
22450: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22451: LD_ADDR_VAR 0 51
22455: PUSH
22456: LD_INT 1
22458: NEG
22459: PUSH
22460: LD_INT 2
22462: PUSH
22463: EMPTY
22464: LIST
22465: LIST
22466: PUSH
22467: LD_INT 2
22469: NEG
22470: PUSH
22471: LD_INT 1
22473: PUSH
22474: EMPTY
22475: LIST
22476: LIST
22477: PUSH
22478: EMPTY
22479: LIST
22480: LIST
22481: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22482: LD_ADDR_VAR 0 52
22486: PUSH
22487: LD_INT 3
22489: NEG
22490: PUSH
22491: LD_INT 1
22493: NEG
22494: PUSH
22495: EMPTY
22496: LIST
22497: LIST
22498: PUSH
22499: LD_INT 3
22501: NEG
22502: PUSH
22503: LD_INT 2
22505: NEG
22506: PUSH
22507: EMPTY
22508: LIST
22509: LIST
22510: PUSH
22511: EMPTY
22512: LIST
22513: LIST
22514: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22515: LD_ADDR_VAR 0 53
22519: PUSH
22520: LD_INT 1
22522: NEG
22523: PUSH
22524: LD_INT 3
22526: NEG
22527: PUSH
22528: EMPTY
22529: LIST
22530: LIST
22531: PUSH
22532: LD_INT 0
22534: PUSH
22535: LD_INT 3
22537: NEG
22538: PUSH
22539: EMPTY
22540: LIST
22541: LIST
22542: PUSH
22543: LD_INT 1
22545: PUSH
22546: LD_INT 2
22548: NEG
22549: PUSH
22550: EMPTY
22551: LIST
22552: LIST
22553: PUSH
22554: EMPTY
22555: LIST
22556: LIST
22557: LIST
22558: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22559: LD_ADDR_VAR 0 54
22563: PUSH
22564: LD_INT 2
22566: PUSH
22567: LD_INT 1
22569: NEG
22570: PUSH
22571: EMPTY
22572: LIST
22573: LIST
22574: PUSH
22575: LD_INT 3
22577: PUSH
22578: LD_INT 0
22580: PUSH
22581: EMPTY
22582: LIST
22583: LIST
22584: PUSH
22585: LD_INT 3
22587: PUSH
22588: LD_INT 1
22590: PUSH
22591: EMPTY
22592: LIST
22593: LIST
22594: PUSH
22595: EMPTY
22596: LIST
22597: LIST
22598: LIST
22599: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22600: LD_ADDR_VAR 0 55
22604: PUSH
22605: LD_INT 3
22607: PUSH
22608: LD_INT 2
22610: PUSH
22611: EMPTY
22612: LIST
22613: LIST
22614: PUSH
22615: LD_INT 3
22617: PUSH
22618: LD_INT 3
22620: PUSH
22621: EMPTY
22622: LIST
22623: LIST
22624: PUSH
22625: LD_INT 2
22627: PUSH
22628: LD_INT 3
22630: PUSH
22631: EMPTY
22632: LIST
22633: LIST
22634: PUSH
22635: EMPTY
22636: LIST
22637: LIST
22638: LIST
22639: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22640: LD_ADDR_VAR 0 56
22644: PUSH
22645: LD_INT 1
22647: PUSH
22648: LD_INT 3
22650: PUSH
22651: EMPTY
22652: LIST
22653: LIST
22654: PUSH
22655: LD_INT 0
22657: PUSH
22658: LD_INT 3
22660: PUSH
22661: EMPTY
22662: LIST
22663: LIST
22664: PUSH
22665: LD_INT 1
22667: NEG
22668: PUSH
22669: LD_INT 2
22671: PUSH
22672: EMPTY
22673: LIST
22674: LIST
22675: PUSH
22676: EMPTY
22677: LIST
22678: LIST
22679: LIST
22680: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22681: LD_ADDR_VAR 0 57
22685: PUSH
22686: LD_INT 2
22688: NEG
22689: PUSH
22690: LD_INT 1
22692: PUSH
22693: EMPTY
22694: LIST
22695: LIST
22696: PUSH
22697: LD_INT 3
22699: NEG
22700: PUSH
22701: LD_INT 0
22703: PUSH
22704: EMPTY
22705: LIST
22706: LIST
22707: PUSH
22708: LD_INT 3
22710: NEG
22711: PUSH
22712: LD_INT 1
22714: NEG
22715: PUSH
22716: EMPTY
22717: LIST
22718: LIST
22719: PUSH
22720: EMPTY
22721: LIST
22722: LIST
22723: LIST
22724: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22725: LD_ADDR_VAR 0 58
22729: PUSH
22730: LD_INT 2
22732: NEG
22733: PUSH
22734: LD_INT 3
22736: NEG
22737: PUSH
22738: EMPTY
22739: LIST
22740: LIST
22741: PUSH
22742: LD_INT 3
22744: NEG
22745: PUSH
22746: LD_INT 2
22748: NEG
22749: PUSH
22750: EMPTY
22751: LIST
22752: LIST
22753: PUSH
22754: LD_INT 3
22756: NEG
22757: PUSH
22758: LD_INT 3
22760: NEG
22761: PUSH
22762: EMPTY
22763: LIST
22764: LIST
22765: PUSH
22766: EMPTY
22767: LIST
22768: LIST
22769: LIST
22770: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22771: LD_ADDR_VAR 0 59
22775: PUSH
22776: LD_INT 1
22778: NEG
22779: PUSH
22780: LD_INT 2
22782: NEG
22783: PUSH
22784: EMPTY
22785: LIST
22786: LIST
22787: PUSH
22788: LD_INT 0
22790: PUSH
22791: LD_INT 2
22793: NEG
22794: PUSH
22795: EMPTY
22796: LIST
22797: LIST
22798: PUSH
22799: LD_INT 1
22801: PUSH
22802: LD_INT 1
22804: NEG
22805: PUSH
22806: EMPTY
22807: LIST
22808: LIST
22809: PUSH
22810: EMPTY
22811: LIST
22812: LIST
22813: LIST
22814: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22815: LD_ADDR_VAR 0 60
22819: PUSH
22820: LD_INT 1
22822: PUSH
22823: LD_INT 1
22825: NEG
22826: PUSH
22827: EMPTY
22828: LIST
22829: LIST
22830: PUSH
22831: LD_INT 2
22833: PUSH
22834: LD_INT 0
22836: PUSH
22837: EMPTY
22838: LIST
22839: LIST
22840: PUSH
22841: LD_INT 2
22843: PUSH
22844: LD_INT 1
22846: PUSH
22847: EMPTY
22848: LIST
22849: LIST
22850: PUSH
22851: EMPTY
22852: LIST
22853: LIST
22854: LIST
22855: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22856: LD_ADDR_VAR 0 61
22860: PUSH
22861: LD_INT 2
22863: PUSH
22864: LD_INT 1
22866: PUSH
22867: EMPTY
22868: LIST
22869: LIST
22870: PUSH
22871: LD_INT 2
22873: PUSH
22874: LD_INT 2
22876: PUSH
22877: EMPTY
22878: LIST
22879: LIST
22880: PUSH
22881: LD_INT 1
22883: PUSH
22884: LD_INT 2
22886: PUSH
22887: EMPTY
22888: LIST
22889: LIST
22890: PUSH
22891: EMPTY
22892: LIST
22893: LIST
22894: LIST
22895: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22896: LD_ADDR_VAR 0 62
22900: PUSH
22901: LD_INT 1
22903: PUSH
22904: LD_INT 2
22906: PUSH
22907: EMPTY
22908: LIST
22909: LIST
22910: PUSH
22911: LD_INT 0
22913: PUSH
22914: LD_INT 2
22916: PUSH
22917: EMPTY
22918: LIST
22919: LIST
22920: PUSH
22921: LD_INT 1
22923: NEG
22924: PUSH
22925: LD_INT 1
22927: PUSH
22928: EMPTY
22929: LIST
22930: LIST
22931: PUSH
22932: EMPTY
22933: LIST
22934: LIST
22935: LIST
22936: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22937: LD_ADDR_VAR 0 63
22941: PUSH
22942: LD_INT 1
22944: NEG
22945: PUSH
22946: LD_INT 1
22948: PUSH
22949: EMPTY
22950: LIST
22951: LIST
22952: PUSH
22953: LD_INT 2
22955: NEG
22956: PUSH
22957: LD_INT 0
22959: PUSH
22960: EMPTY
22961: LIST
22962: LIST
22963: PUSH
22964: LD_INT 2
22966: NEG
22967: PUSH
22968: LD_INT 1
22970: NEG
22971: PUSH
22972: EMPTY
22973: LIST
22974: LIST
22975: PUSH
22976: EMPTY
22977: LIST
22978: LIST
22979: LIST
22980: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22981: LD_ADDR_VAR 0 64
22985: PUSH
22986: LD_INT 1
22988: NEG
22989: PUSH
22990: LD_INT 2
22992: NEG
22993: PUSH
22994: EMPTY
22995: LIST
22996: LIST
22997: PUSH
22998: LD_INT 2
23000: NEG
23001: PUSH
23002: LD_INT 1
23004: NEG
23005: PUSH
23006: EMPTY
23007: LIST
23008: LIST
23009: PUSH
23010: LD_INT 2
23012: NEG
23013: PUSH
23014: LD_INT 2
23016: NEG
23017: PUSH
23018: EMPTY
23019: LIST
23020: LIST
23021: PUSH
23022: EMPTY
23023: LIST
23024: LIST
23025: LIST
23026: ST_TO_ADDR
// end ; 2 :
23027: GO 26293
23029: LD_INT 2
23031: DOUBLE
23032: EQUAL
23033: IFTRUE 23037
23035: GO 26292
23037: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23038: LD_ADDR_VAR 0 29
23042: PUSH
23043: LD_INT 4
23045: PUSH
23046: LD_INT 0
23048: PUSH
23049: EMPTY
23050: LIST
23051: LIST
23052: PUSH
23053: LD_INT 4
23055: PUSH
23056: LD_INT 1
23058: NEG
23059: PUSH
23060: EMPTY
23061: LIST
23062: LIST
23063: PUSH
23064: LD_INT 5
23066: PUSH
23067: LD_INT 0
23069: PUSH
23070: EMPTY
23071: LIST
23072: LIST
23073: PUSH
23074: LD_INT 5
23076: PUSH
23077: LD_INT 1
23079: PUSH
23080: EMPTY
23081: LIST
23082: LIST
23083: PUSH
23084: LD_INT 4
23086: PUSH
23087: LD_INT 1
23089: PUSH
23090: EMPTY
23091: LIST
23092: LIST
23093: PUSH
23094: LD_INT 3
23096: PUSH
23097: LD_INT 0
23099: PUSH
23100: EMPTY
23101: LIST
23102: LIST
23103: PUSH
23104: LD_INT 3
23106: PUSH
23107: LD_INT 1
23109: NEG
23110: PUSH
23111: EMPTY
23112: LIST
23113: LIST
23114: PUSH
23115: LD_INT 3
23117: PUSH
23118: LD_INT 2
23120: NEG
23121: PUSH
23122: EMPTY
23123: LIST
23124: LIST
23125: PUSH
23126: LD_INT 5
23128: PUSH
23129: LD_INT 2
23131: PUSH
23132: EMPTY
23133: LIST
23134: LIST
23135: PUSH
23136: LD_INT 3
23138: PUSH
23139: LD_INT 3
23141: PUSH
23142: EMPTY
23143: LIST
23144: LIST
23145: PUSH
23146: LD_INT 3
23148: PUSH
23149: LD_INT 2
23151: PUSH
23152: EMPTY
23153: LIST
23154: LIST
23155: PUSH
23156: LD_INT 4
23158: PUSH
23159: LD_INT 3
23161: PUSH
23162: EMPTY
23163: LIST
23164: LIST
23165: PUSH
23166: LD_INT 4
23168: PUSH
23169: LD_INT 4
23171: PUSH
23172: EMPTY
23173: LIST
23174: LIST
23175: PUSH
23176: LD_INT 3
23178: PUSH
23179: LD_INT 4
23181: PUSH
23182: EMPTY
23183: LIST
23184: LIST
23185: PUSH
23186: LD_INT 2
23188: PUSH
23189: LD_INT 3
23191: PUSH
23192: EMPTY
23193: LIST
23194: LIST
23195: PUSH
23196: LD_INT 2
23198: PUSH
23199: LD_INT 2
23201: PUSH
23202: EMPTY
23203: LIST
23204: LIST
23205: PUSH
23206: LD_INT 4
23208: PUSH
23209: LD_INT 2
23211: PUSH
23212: EMPTY
23213: LIST
23214: LIST
23215: PUSH
23216: LD_INT 2
23218: PUSH
23219: LD_INT 4
23221: PUSH
23222: EMPTY
23223: LIST
23224: LIST
23225: PUSH
23226: LD_INT 0
23228: PUSH
23229: LD_INT 4
23231: PUSH
23232: EMPTY
23233: LIST
23234: LIST
23235: PUSH
23236: LD_INT 0
23238: PUSH
23239: LD_INT 3
23241: PUSH
23242: EMPTY
23243: LIST
23244: LIST
23245: PUSH
23246: LD_INT 1
23248: PUSH
23249: LD_INT 4
23251: PUSH
23252: EMPTY
23253: LIST
23254: LIST
23255: PUSH
23256: LD_INT 1
23258: PUSH
23259: LD_INT 5
23261: PUSH
23262: EMPTY
23263: LIST
23264: LIST
23265: PUSH
23266: LD_INT 0
23268: PUSH
23269: LD_INT 5
23271: PUSH
23272: EMPTY
23273: LIST
23274: LIST
23275: PUSH
23276: LD_INT 1
23278: NEG
23279: PUSH
23280: LD_INT 4
23282: PUSH
23283: EMPTY
23284: LIST
23285: LIST
23286: PUSH
23287: LD_INT 1
23289: NEG
23290: PUSH
23291: LD_INT 3
23293: PUSH
23294: EMPTY
23295: LIST
23296: LIST
23297: PUSH
23298: LD_INT 2
23300: PUSH
23301: LD_INT 5
23303: PUSH
23304: EMPTY
23305: LIST
23306: LIST
23307: PUSH
23308: LD_INT 2
23310: NEG
23311: PUSH
23312: LD_INT 3
23314: PUSH
23315: EMPTY
23316: LIST
23317: LIST
23318: PUSH
23319: LD_INT 3
23321: NEG
23322: PUSH
23323: LD_INT 0
23325: PUSH
23326: EMPTY
23327: LIST
23328: LIST
23329: PUSH
23330: LD_INT 3
23332: NEG
23333: PUSH
23334: LD_INT 1
23336: NEG
23337: PUSH
23338: EMPTY
23339: LIST
23340: LIST
23341: PUSH
23342: LD_INT 2
23344: NEG
23345: PUSH
23346: LD_INT 0
23348: PUSH
23349: EMPTY
23350: LIST
23351: LIST
23352: PUSH
23353: LD_INT 2
23355: NEG
23356: PUSH
23357: LD_INT 1
23359: PUSH
23360: EMPTY
23361: LIST
23362: LIST
23363: PUSH
23364: LD_INT 3
23366: NEG
23367: PUSH
23368: LD_INT 1
23370: PUSH
23371: EMPTY
23372: LIST
23373: LIST
23374: PUSH
23375: LD_INT 4
23377: NEG
23378: PUSH
23379: LD_INT 0
23381: PUSH
23382: EMPTY
23383: LIST
23384: LIST
23385: PUSH
23386: LD_INT 4
23388: NEG
23389: PUSH
23390: LD_INT 1
23392: NEG
23393: PUSH
23394: EMPTY
23395: LIST
23396: LIST
23397: PUSH
23398: LD_INT 4
23400: NEG
23401: PUSH
23402: LD_INT 2
23404: NEG
23405: PUSH
23406: EMPTY
23407: LIST
23408: LIST
23409: PUSH
23410: LD_INT 2
23412: NEG
23413: PUSH
23414: LD_INT 2
23416: PUSH
23417: EMPTY
23418: LIST
23419: LIST
23420: PUSH
23421: LD_INT 4
23423: NEG
23424: PUSH
23425: LD_INT 4
23427: NEG
23428: PUSH
23429: EMPTY
23430: LIST
23431: LIST
23432: PUSH
23433: LD_INT 4
23435: NEG
23436: PUSH
23437: LD_INT 5
23439: NEG
23440: PUSH
23441: EMPTY
23442: LIST
23443: LIST
23444: PUSH
23445: LD_INT 3
23447: NEG
23448: PUSH
23449: LD_INT 4
23451: NEG
23452: PUSH
23453: EMPTY
23454: LIST
23455: LIST
23456: PUSH
23457: LD_INT 3
23459: NEG
23460: PUSH
23461: LD_INT 3
23463: NEG
23464: PUSH
23465: EMPTY
23466: LIST
23467: LIST
23468: PUSH
23469: LD_INT 4
23471: NEG
23472: PUSH
23473: LD_INT 3
23475: NEG
23476: PUSH
23477: EMPTY
23478: LIST
23479: LIST
23480: PUSH
23481: LD_INT 5
23483: NEG
23484: PUSH
23485: LD_INT 4
23487: NEG
23488: PUSH
23489: EMPTY
23490: LIST
23491: LIST
23492: PUSH
23493: LD_INT 5
23495: NEG
23496: PUSH
23497: LD_INT 5
23499: NEG
23500: PUSH
23501: EMPTY
23502: LIST
23503: LIST
23504: PUSH
23505: LD_INT 3
23507: NEG
23508: PUSH
23509: LD_INT 5
23511: NEG
23512: PUSH
23513: EMPTY
23514: LIST
23515: LIST
23516: PUSH
23517: LD_INT 5
23519: NEG
23520: PUSH
23521: LD_INT 3
23523: NEG
23524: PUSH
23525: EMPTY
23526: LIST
23527: LIST
23528: PUSH
23529: EMPTY
23530: LIST
23531: LIST
23532: LIST
23533: LIST
23534: LIST
23535: LIST
23536: LIST
23537: LIST
23538: LIST
23539: LIST
23540: LIST
23541: LIST
23542: LIST
23543: LIST
23544: LIST
23545: LIST
23546: LIST
23547: LIST
23548: LIST
23549: LIST
23550: LIST
23551: LIST
23552: LIST
23553: LIST
23554: LIST
23555: LIST
23556: LIST
23557: LIST
23558: LIST
23559: LIST
23560: LIST
23561: LIST
23562: LIST
23563: LIST
23564: LIST
23565: LIST
23566: LIST
23567: LIST
23568: LIST
23569: LIST
23570: LIST
23571: LIST
23572: LIST
23573: LIST
23574: LIST
23575: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23576: LD_ADDR_VAR 0 30
23580: PUSH
23581: LD_INT 4
23583: PUSH
23584: LD_INT 4
23586: PUSH
23587: EMPTY
23588: LIST
23589: LIST
23590: PUSH
23591: LD_INT 4
23593: PUSH
23594: LD_INT 3
23596: PUSH
23597: EMPTY
23598: LIST
23599: LIST
23600: PUSH
23601: LD_INT 5
23603: PUSH
23604: LD_INT 4
23606: PUSH
23607: EMPTY
23608: LIST
23609: LIST
23610: PUSH
23611: LD_INT 5
23613: PUSH
23614: LD_INT 5
23616: PUSH
23617: EMPTY
23618: LIST
23619: LIST
23620: PUSH
23621: LD_INT 4
23623: PUSH
23624: LD_INT 5
23626: PUSH
23627: EMPTY
23628: LIST
23629: LIST
23630: PUSH
23631: LD_INT 3
23633: PUSH
23634: LD_INT 4
23636: PUSH
23637: EMPTY
23638: LIST
23639: LIST
23640: PUSH
23641: LD_INT 3
23643: PUSH
23644: LD_INT 3
23646: PUSH
23647: EMPTY
23648: LIST
23649: LIST
23650: PUSH
23651: LD_INT 5
23653: PUSH
23654: LD_INT 3
23656: PUSH
23657: EMPTY
23658: LIST
23659: LIST
23660: PUSH
23661: LD_INT 3
23663: PUSH
23664: LD_INT 5
23666: PUSH
23667: EMPTY
23668: LIST
23669: LIST
23670: PUSH
23671: LD_INT 0
23673: PUSH
23674: LD_INT 3
23676: PUSH
23677: EMPTY
23678: LIST
23679: LIST
23680: PUSH
23681: LD_INT 0
23683: PUSH
23684: LD_INT 2
23686: PUSH
23687: EMPTY
23688: LIST
23689: LIST
23690: PUSH
23691: LD_INT 1
23693: PUSH
23694: LD_INT 3
23696: PUSH
23697: EMPTY
23698: LIST
23699: LIST
23700: PUSH
23701: LD_INT 1
23703: PUSH
23704: LD_INT 4
23706: PUSH
23707: EMPTY
23708: LIST
23709: LIST
23710: PUSH
23711: LD_INT 0
23713: PUSH
23714: LD_INT 4
23716: PUSH
23717: EMPTY
23718: LIST
23719: LIST
23720: PUSH
23721: LD_INT 1
23723: NEG
23724: PUSH
23725: LD_INT 3
23727: PUSH
23728: EMPTY
23729: LIST
23730: LIST
23731: PUSH
23732: LD_INT 1
23734: NEG
23735: PUSH
23736: LD_INT 2
23738: PUSH
23739: EMPTY
23740: LIST
23741: LIST
23742: PUSH
23743: LD_INT 2
23745: PUSH
23746: LD_INT 4
23748: PUSH
23749: EMPTY
23750: LIST
23751: LIST
23752: PUSH
23753: LD_INT 2
23755: NEG
23756: PUSH
23757: LD_INT 2
23759: PUSH
23760: EMPTY
23761: LIST
23762: LIST
23763: PUSH
23764: LD_INT 4
23766: NEG
23767: PUSH
23768: LD_INT 0
23770: PUSH
23771: EMPTY
23772: LIST
23773: LIST
23774: PUSH
23775: LD_INT 4
23777: NEG
23778: PUSH
23779: LD_INT 1
23781: NEG
23782: PUSH
23783: EMPTY
23784: LIST
23785: LIST
23786: PUSH
23787: LD_INT 3
23789: NEG
23790: PUSH
23791: LD_INT 0
23793: PUSH
23794: EMPTY
23795: LIST
23796: LIST
23797: PUSH
23798: LD_INT 3
23800: NEG
23801: PUSH
23802: LD_INT 1
23804: PUSH
23805: EMPTY
23806: LIST
23807: LIST
23808: PUSH
23809: LD_INT 4
23811: NEG
23812: PUSH
23813: LD_INT 1
23815: PUSH
23816: EMPTY
23817: LIST
23818: LIST
23819: PUSH
23820: LD_INT 5
23822: NEG
23823: PUSH
23824: LD_INT 0
23826: PUSH
23827: EMPTY
23828: LIST
23829: LIST
23830: PUSH
23831: LD_INT 5
23833: NEG
23834: PUSH
23835: LD_INT 1
23837: NEG
23838: PUSH
23839: EMPTY
23840: LIST
23841: LIST
23842: PUSH
23843: LD_INT 5
23845: NEG
23846: PUSH
23847: LD_INT 2
23849: NEG
23850: PUSH
23851: EMPTY
23852: LIST
23853: LIST
23854: PUSH
23855: LD_INT 3
23857: NEG
23858: PUSH
23859: LD_INT 2
23861: PUSH
23862: EMPTY
23863: LIST
23864: LIST
23865: PUSH
23866: LD_INT 3
23868: NEG
23869: PUSH
23870: LD_INT 3
23872: NEG
23873: PUSH
23874: EMPTY
23875: LIST
23876: LIST
23877: PUSH
23878: LD_INT 3
23880: NEG
23881: PUSH
23882: LD_INT 4
23884: NEG
23885: PUSH
23886: EMPTY
23887: LIST
23888: LIST
23889: PUSH
23890: LD_INT 2
23892: NEG
23893: PUSH
23894: LD_INT 3
23896: NEG
23897: PUSH
23898: EMPTY
23899: LIST
23900: LIST
23901: PUSH
23902: LD_INT 2
23904: NEG
23905: PUSH
23906: LD_INT 2
23908: NEG
23909: PUSH
23910: EMPTY
23911: LIST
23912: LIST
23913: PUSH
23914: LD_INT 3
23916: NEG
23917: PUSH
23918: LD_INT 2
23920: NEG
23921: PUSH
23922: EMPTY
23923: LIST
23924: LIST
23925: PUSH
23926: LD_INT 4
23928: NEG
23929: PUSH
23930: LD_INT 3
23932: NEG
23933: PUSH
23934: EMPTY
23935: LIST
23936: LIST
23937: PUSH
23938: LD_INT 4
23940: NEG
23941: PUSH
23942: LD_INT 4
23944: NEG
23945: PUSH
23946: EMPTY
23947: LIST
23948: LIST
23949: PUSH
23950: LD_INT 2
23952: NEG
23953: PUSH
23954: LD_INT 4
23956: NEG
23957: PUSH
23958: EMPTY
23959: LIST
23960: LIST
23961: PUSH
23962: LD_INT 4
23964: NEG
23965: PUSH
23966: LD_INT 2
23968: NEG
23969: PUSH
23970: EMPTY
23971: LIST
23972: LIST
23973: PUSH
23974: LD_INT 0
23976: PUSH
23977: LD_INT 4
23979: NEG
23980: PUSH
23981: EMPTY
23982: LIST
23983: LIST
23984: PUSH
23985: LD_INT 0
23987: PUSH
23988: LD_INT 5
23990: NEG
23991: PUSH
23992: EMPTY
23993: LIST
23994: LIST
23995: PUSH
23996: LD_INT 1
23998: PUSH
23999: LD_INT 4
24001: NEG
24002: PUSH
24003: EMPTY
24004: LIST
24005: LIST
24006: PUSH
24007: LD_INT 1
24009: PUSH
24010: LD_INT 3
24012: NEG
24013: PUSH
24014: EMPTY
24015: LIST
24016: LIST
24017: PUSH
24018: LD_INT 0
24020: PUSH
24021: LD_INT 3
24023: NEG
24024: PUSH
24025: EMPTY
24026: LIST
24027: LIST
24028: PUSH
24029: LD_INT 1
24031: NEG
24032: PUSH
24033: LD_INT 4
24035: NEG
24036: PUSH
24037: EMPTY
24038: LIST
24039: LIST
24040: PUSH
24041: LD_INT 1
24043: NEG
24044: PUSH
24045: LD_INT 5
24047: NEG
24048: PUSH
24049: EMPTY
24050: LIST
24051: LIST
24052: PUSH
24053: LD_INT 2
24055: PUSH
24056: LD_INT 3
24058: NEG
24059: PUSH
24060: EMPTY
24061: LIST
24062: LIST
24063: PUSH
24064: LD_INT 2
24066: NEG
24067: PUSH
24068: LD_INT 5
24070: NEG
24071: PUSH
24072: EMPTY
24073: LIST
24074: LIST
24075: PUSH
24076: EMPTY
24077: LIST
24078: LIST
24079: LIST
24080: LIST
24081: LIST
24082: LIST
24083: LIST
24084: LIST
24085: LIST
24086: LIST
24087: LIST
24088: LIST
24089: LIST
24090: LIST
24091: LIST
24092: LIST
24093: LIST
24094: LIST
24095: LIST
24096: LIST
24097: LIST
24098: LIST
24099: LIST
24100: LIST
24101: LIST
24102: LIST
24103: LIST
24104: LIST
24105: LIST
24106: LIST
24107: LIST
24108: LIST
24109: LIST
24110: LIST
24111: LIST
24112: LIST
24113: LIST
24114: LIST
24115: LIST
24116: LIST
24117: LIST
24118: LIST
24119: LIST
24120: LIST
24121: LIST
24122: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24123: LD_ADDR_VAR 0 31
24127: PUSH
24128: LD_INT 0
24130: PUSH
24131: LD_INT 4
24133: PUSH
24134: EMPTY
24135: LIST
24136: LIST
24137: PUSH
24138: LD_INT 0
24140: PUSH
24141: LD_INT 3
24143: PUSH
24144: EMPTY
24145: LIST
24146: LIST
24147: PUSH
24148: LD_INT 1
24150: PUSH
24151: LD_INT 4
24153: PUSH
24154: EMPTY
24155: LIST
24156: LIST
24157: PUSH
24158: LD_INT 1
24160: PUSH
24161: LD_INT 5
24163: PUSH
24164: EMPTY
24165: LIST
24166: LIST
24167: PUSH
24168: LD_INT 0
24170: PUSH
24171: LD_INT 5
24173: PUSH
24174: EMPTY
24175: LIST
24176: LIST
24177: PUSH
24178: LD_INT 1
24180: NEG
24181: PUSH
24182: LD_INT 4
24184: PUSH
24185: EMPTY
24186: LIST
24187: LIST
24188: PUSH
24189: LD_INT 1
24191: NEG
24192: PUSH
24193: LD_INT 3
24195: PUSH
24196: EMPTY
24197: LIST
24198: LIST
24199: PUSH
24200: LD_INT 2
24202: PUSH
24203: LD_INT 5
24205: PUSH
24206: EMPTY
24207: LIST
24208: LIST
24209: PUSH
24210: LD_INT 2
24212: NEG
24213: PUSH
24214: LD_INT 3
24216: PUSH
24217: EMPTY
24218: LIST
24219: LIST
24220: PUSH
24221: LD_INT 3
24223: NEG
24224: PUSH
24225: LD_INT 0
24227: PUSH
24228: EMPTY
24229: LIST
24230: LIST
24231: PUSH
24232: LD_INT 3
24234: NEG
24235: PUSH
24236: LD_INT 1
24238: NEG
24239: PUSH
24240: EMPTY
24241: LIST
24242: LIST
24243: PUSH
24244: LD_INT 2
24246: NEG
24247: PUSH
24248: LD_INT 0
24250: PUSH
24251: EMPTY
24252: LIST
24253: LIST
24254: PUSH
24255: LD_INT 2
24257: NEG
24258: PUSH
24259: LD_INT 1
24261: PUSH
24262: EMPTY
24263: LIST
24264: LIST
24265: PUSH
24266: LD_INT 3
24268: NEG
24269: PUSH
24270: LD_INT 1
24272: PUSH
24273: EMPTY
24274: LIST
24275: LIST
24276: PUSH
24277: LD_INT 4
24279: NEG
24280: PUSH
24281: LD_INT 0
24283: PUSH
24284: EMPTY
24285: LIST
24286: LIST
24287: PUSH
24288: LD_INT 4
24290: NEG
24291: PUSH
24292: LD_INT 1
24294: NEG
24295: PUSH
24296: EMPTY
24297: LIST
24298: LIST
24299: PUSH
24300: LD_INT 4
24302: NEG
24303: PUSH
24304: LD_INT 2
24306: NEG
24307: PUSH
24308: EMPTY
24309: LIST
24310: LIST
24311: PUSH
24312: LD_INT 2
24314: NEG
24315: PUSH
24316: LD_INT 2
24318: PUSH
24319: EMPTY
24320: LIST
24321: LIST
24322: PUSH
24323: LD_INT 4
24325: NEG
24326: PUSH
24327: LD_INT 4
24329: NEG
24330: PUSH
24331: EMPTY
24332: LIST
24333: LIST
24334: PUSH
24335: LD_INT 4
24337: NEG
24338: PUSH
24339: LD_INT 5
24341: NEG
24342: PUSH
24343: EMPTY
24344: LIST
24345: LIST
24346: PUSH
24347: LD_INT 3
24349: NEG
24350: PUSH
24351: LD_INT 4
24353: NEG
24354: PUSH
24355: EMPTY
24356: LIST
24357: LIST
24358: PUSH
24359: LD_INT 3
24361: NEG
24362: PUSH
24363: LD_INT 3
24365: NEG
24366: PUSH
24367: EMPTY
24368: LIST
24369: LIST
24370: PUSH
24371: LD_INT 4
24373: NEG
24374: PUSH
24375: LD_INT 3
24377: NEG
24378: PUSH
24379: EMPTY
24380: LIST
24381: LIST
24382: PUSH
24383: LD_INT 5
24385: NEG
24386: PUSH
24387: LD_INT 4
24389: NEG
24390: PUSH
24391: EMPTY
24392: LIST
24393: LIST
24394: PUSH
24395: LD_INT 5
24397: NEG
24398: PUSH
24399: LD_INT 5
24401: NEG
24402: PUSH
24403: EMPTY
24404: LIST
24405: LIST
24406: PUSH
24407: LD_INT 3
24409: NEG
24410: PUSH
24411: LD_INT 5
24413: NEG
24414: PUSH
24415: EMPTY
24416: LIST
24417: LIST
24418: PUSH
24419: LD_INT 5
24421: NEG
24422: PUSH
24423: LD_INT 3
24425: NEG
24426: PUSH
24427: EMPTY
24428: LIST
24429: LIST
24430: PUSH
24431: LD_INT 0
24433: PUSH
24434: LD_INT 3
24436: NEG
24437: PUSH
24438: EMPTY
24439: LIST
24440: LIST
24441: PUSH
24442: LD_INT 0
24444: PUSH
24445: LD_INT 4
24447: NEG
24448: PUSH
24449: EMPTY
24450: LIST
24451: LIST
24452: PUSH
24453: LD_INT 1
24455: PUSH
24456: LD_INT 3
24458: NEG
24459: PUSH
24460: EMPTY
24461: LIST
24462: LIST
24463: PUSH
24464: LD_INT 1
24466: PUSH
24467: LD_INT 2
24469: NEG
24470: PUSH
24471: EMPTY
24472: LIST
24473: LIST
24474: PUSH
24475: LD_INT 0
24477: PUSH
24478: LD_INT 2
24480: NEG
24481: PUSH
24482: EMPTY
24483: LIST
24484: LIST
24485: PUSH
24486: LD_INT 1
24488: NEG
24489: PUSH
24490: LD_INT 3
24492: NEG
24493: PUSH
24494: EMPTY
24495: LIST
24496: LIST
24497: PUSH
24498: LD_INT 1
24500: NEG
24501: PUSH
24502: LD_INT 4
24504: NEG
24505: PUSH
24506: EMPTY
24507: LIST
24508: LIST
24509: PUSH
24510: LD_INT 2
24512: PUSH
24513: LD_INT 2
24515: NEG
24516: PUSH
24517: EMPTY
24518: LIST
24519: LIST
24520: PUSH
24521: LD_INT 2
24523: NEG
24524: PUSH
24525: LD_INT 4
24527: NEG
24528: PUSH
24529: EMPTY
24530: LIST
24531: LIST
24532: PUSH
24533: LD_INT 4
24535: PUSH
24536: LD_INT 0
24538: PUSH
24539: EMPTY
24540: LIST
24541: LIST
24542: PUSH
24543: LD_INT 4
24545: PUSH
24546: LD_INT 1
24548: NEG
24549: PUSH
24550: EMPTY
24551: LIST
24552: LIST
24553: PUSH
24554: LD_INT 5
24556: PUSH
24557: LD_INT 0
24559: PUSH
24560: EMPTY
24561: LIST
24562: LIST
24563: PUSH
24564: LD_INT 5
24566: PUSH
24567: LD_INT 1
24569: PUSH
24570: EMPTY
24571: LIST
24572: LIST
24573: PUSH
24574: LD_INT 4
24576: PUSH
24577: LD_INT 1
24579: PUSH
24580: EMPTY
24581: LIST
24582: LIST
24583: PUSH
24584: LD_INT 3
24586: PUSH
24587: LD_INT 0
24589: PUSH
24590: EMPTY
24591: LIST
24592: LIST
24593: PUSH
24594: LD_INT 3
24596: PUSH
24597: LD_INT 1
24599: NEG
24600: PUSH
24601: EMPTY
24602: LIST
24603: LIST
24604: PUSH
24605: LD_INT 3
24607: PUSH
24608: LD_INT 2
24610: NEG
24611: PUSH
24612: EMPTY
24613: LIST
24614: LIST
24615: PUSH
24616: LD_INT 5
24618: PUSH
24619: LD_INT 2
24621: PUSH
24622: EMPTY
24623: LIST
24624: LIST
24625: PUSH
24626: EMPTY
24627: LIST
24628: LIST
24629: LIST
24630: LIST
24631: LIST
24632: LIST
24633: LIST
24634: LIST
24635: LIST
24636: LIST
24637: LIST
24638: LIST
24639: LIST
24640: LIST
24641: LIST
24642: LIST
24643: LIST
24644: LIST
24645: LIST
24646: LIST
24647: LIST
24648: LIST
24649: LIST
24650: LIST
24651: LIST
24652: LIST
24653: LIST
24654: LIST
24655: LIST
24656: LIST
24657: LIST
24658: LIST
24659: LIST
24660: LIST
24661: LIST
24662: LIST
24663: LIST
24664: LIST
24665: LIST
24666: LIST
24667: LIST
24668: LIST
24669: LIST
24670: LIST
24671: LIST
24672: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24673: LD_ADDR_VAR 0 32
24677: PUSH
24678: LD_INT 4
24680: NEG
24681: PUSH
24682: LD_INT 0
24684: PUSH
24685: EMPTY
24686: LIST
24687: LIST
24688: PUSH
24689: LD_INT 4
24691: NEG
24692: PUSH
24693: LD_INT 1
24695: NEG
24696: PUSH
24697: EMPTY
24698: LIST
24699: LIST
24700: PUSH
24701: LD_INT 3
24703: NEG
24704: PUSH
24705: LD_INT 0
24707: PUSH
24708: EMPTY
24709: LIST
24710: LIST
24711: PUSH
24712: LD_INT 3
24714: NEG
24715: PUSH
24716: LD_INT 1
24718: PUSH
24719: EMPTY
24720: LIST
24721: LIST
24722: PUSH
24723: LD_INT 4
24725: NEG
24726: PUSH
24727: LD_INT 1
24729: PUSH
24730: EMPTY
24731: LIST
24732: LIST
24733: PUSH
24734: LD_INT 5
24736: NEG
24737: PUSH
24738: LD_INT 0
24740: PUSH
24741: EMPTY
24742: LIST
24743: LIST
24744: PUSH
24745: LD_INT 5
24747: NEG
24748: PUSH
24749: LD_INT 1
24751: NEG
24752: PUSH
24753: EMPTY
24754: LIST
24755: LIST
24756: PUSH
24757: LD_INT 5
24759: NEG
24760: PUSH
24761: LD_INT 2
24763: NEG
24764: PUSH
24765: EMPTY
24766: LIST
24767: LIST
24768: PUSH
24769: LD_INT 3
24771: NEG
24772: PUSH
24773: LD_INT 2
24775: PUSH
24776: EMPTY
24777: LIST
24778: LIST
24779: PUSH
24780: LD_INT 3
24782: NEG
24783: PUSH
24784: LD_INT 3
24786: NEG
24787: PUSH
24788: EMPTY
24789: LIST
24790: LIST
24791: PUSH
24792: LD_INT 3
24794: NEG
24795: PUSH
24796: LD_INT 4
24798: NEG
24799: PUSH
24800: EMPTY
24801: LIST
24802: LIST
24803: PUSH
24804: LD_INT 2
24806: NEG
24807: PUSH
24808: LD_INT 3
24810: NEG
24811: PUSH
24812: EMPTY
24813: LIST
24814: LIST
24815: PUSH
24816: LD_INT 2
24818: NEG
24819: PUSH
24820: LD_INT 2
24822: NEG
24823: PUSH
24824: EMPTY
24825: LIST
24826: LIST
24827: PUSH
24828: LD_INT 3
24830: NEG
24831: PUSH
24832: LD_INT 2
24834: NEG
24835: PUSH
24836: EMPTY
24837: LIST
24838: LIST
24839: PUSH
24840: LD_INT 4
24842: NEG
24843: PUSH
24844: LD_INT 3
24846: NEG
24847: PUSH
24848: EMPTY
24849: LIST
24850: LIST
24851: PUSH
24852: LD_INT 4
24854: NEG
24855: PUSH
24856: LD_INT 4
24858: NEG
24859: PUSH
24860: EMPTY
24861: LIST
24862: LIST
24863: PUSH
24864: LD_INT 2
24866: NEG
24867: PUSH
24868: LD_INT 4
24870: NEG
24871: PUSH
24872: EMPTY
24873: LIST
24874: LIST
24875: PUSH
24876: LD_INT 4
24878: NEG
24879: PUSH
24880: LD_INT 2
24882: NEG
24883: PUSH
24884: EMPTY
24885: LIST
24886: LIST
24887: PUSH
24888: LD_INT 0
24890: PUSH
24891: LD_INT 4
24893: NEG
24894: PUSH
24895: EMPTY
24896: LIST
24897: LIST
24898: PUSH
24899: LD_INT 0
24901: PUSH
24902: LD_INT 5
24904: NEG
24905: PUSH
24906: EMPTY
24907: LIST
24908: LIST
24909: PUSH
24910: LD_INT 1
24912: PUSH
24913: LD_INT 4
24915: NEG
24916: PUSH
24917: EMPTY
24918: LIST
24919: LIST
24920: PUSH
24921: LD_INT 1
24923: PUSH
24924: LD_INT 3
24926: NEG
24927: PUSH
24928: EMPTY
24929: LIST
24930: LIST
24931: PUSH
24932: LD_INT 0
24934: PUSH
24935: LD_INT 3
24937: NEG
24938: PUSH
24939: EMPTY
24940: LIST
24941: LIST
24942: PUSH
24943: LD_INT 1
24945: NEG
24946: PUSH
24947: LD_INT 4
24949: NEG
24950: PUSH
24951: EMPTY
24952: LIST
24953: LIST
24954: PUSH
24955: LD_INT 1
24957: NEG
24958: PUSH
24959: LD_INT 5
24961: NEG
24962: PUSH
24963: EMPTY
24964: LIST
24965: LIST
24966: PUSH
24967: LD_INT 2
24969: PUSH
24970: LD_INT 3
24972: NEG
24973: PUSH
24974: EMPTY
24975: LIST
24976: LIST
24977: PUSH
24978: LD_INT 2
24980: NEG
24981: PUSH
24982: LD_INT 5
24984: NEG
24985: PUSH
24986: EMPTY
24987: LIST
24988: LIST
24989: PUSH
24990: LD_INT 3
24992: PUSH
24993: LD_INT 0
24995: PUSH
24996: EMPTY
24997: LIST
24998: LIST
24999: PUSH
25000: LD_INT 3
25002: PUSH
25003: LD_INT 1
25005: NEG
25006: PUSH
25007: EMPTY
25008: LIST
25009: LIST
25010: PUSH
25011: LD_INT 4
25013: PUSH
25014: LD_INT 0
25016: PUSH
25017: EMPTY
25018: LIST
25019: LIST
25020: PUSH
25021: LD_INT 4
25023: PUSH
25024: LD_INT 1
25026: PUSH
25027: EMPTY
25028: LIST
25029: LIST
25030: PUSH
25031: LD_INT 3
25033: PUSH
25034: LD_INT 1
25036: PUSH
25037: EMPTY
25038: LIST
25039: LIST
25040: PUSH
25041: LD_INT 2
25043: PUSH
25044: LD_INT 0
25046: PUSH
25047: EMPTY
25048: LIST
25049: LIST
25050: PUSH
25051: LD_INT 2
25053: PUSH
25054: LD_INT 1
25056: NEG
25057: PUSH
25058: EMPTY
25059: LIST
25060: LIST
25061: PUSH
25062: LD_INT 2
25064: PUSH
25065: LD_INT 2
25067: NEG
25068: PUSH
25069: EMPTY
25070: LIST
25071: LIST
25072: PUSH
25073: LD_INT 4
25075: PUSH
25076: LD_INT 2
25078: PUSH
25079: EMPTY
25080: LIST
25081: LIST
25082: PUSH
25083: LD_INT 4
25085: PUSH
25086: LD_INT 4
25088: PUSH
25089: EMPTY
25090: LIST
25091: LIST
25092: PUSH
25093: LD_INT 4
25095: PUSH
25096: LD_INT 3
25098: PUSH
25099: EMPTY
25100: LIST
25101: LIST
25102: PUSH
25103: LD_INT 5
25105: PUSH
25106: LD_INT 4
25108: PUSH
25109: EMPTY
25110: LIST
25111: LIST
25112: PUSH
25113: LD_INT 5
25115: PUSH
25116: LD_INT 5
25118: PUSH
25119: EMPTY
25120: LIST
25121: LIST
25122: PUSH
25123: LD_INT 4
25125: PUSH
25126: LD_INT 5
25128: PUSH
25129: EMPTY
25130: LIST
25131: LIST
25132: PUSH
25133: LD_INT 3
25135: PUSH
25136: LD_INT 4
25138: PUSH
25139: EMPTY
25140: LIST
25141: LIST
25142: PUSH
25143: LD_INT 3
25145: PUSH
25146: LD_INT 3
25148: PUSH
25149: EMPTY
25150: LIST
25151: LIST
25152: PUSH
25153: LD_INT 5
25155: PUSH
25156: LD_INT 3
25158: PUSH
25159: EMPTY
25160: LIST
25161: LIST
25162: PUSH
25163: LD_INT 3
25165: PUSH
25166: LD_INT 5
25168: PUSH
25169: EMPTY
25170: LIST
25171: LIST
25172: PUSH
25173: EMPTY
25174: LIST
25175: LIST
25176: LIST
25177: LIST
25178: LIST
25179: LIST
25180: LIST
25181: LIST
25182: LIST
25183: LIST
25184: LIST
25185: LIST
25186: LIST
25187: LIST
25188: LIST
25189: LIST
25190: LIST
25191: LIST
25192: LIST
25193: LIST
25194: LIST
25195: LIST
25196: LIST
25197: LIST
25198: LIST
25199: LIST
25200: LIST
25201: LIST
25202: LIST
25203: LIST
25204: LIST
25205: LIST
25206: LIST
25207: LIST
25208: LIST
25209: LIST
25210: LIST
25211: LIST
25212: LIST
25213: LIST
25214: LIST
25215: LIST
25216: LIST
25217: LIST
25218: LIST
25219: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25220: LD_ADDR_VAR 0 33
25224: PUSH
25225: LD_INT 4
25227: NEG
25228: PUSH
25229: LD_INT 4
25231: NEG
25232: PUSH
25233: EMPTY
25234: LIST
25235: LIST
25236: PUSH
25237: LD_INT 4
25239: NEG
25240: PUSH
25241: LD_INT 5
25243: NEG
25244: PUSH
25245: EMPTY
25246: LIST
25247: LIST
25248: PUSH
25249: LD_INT 3
25251: NEG
25252: PUSH
25253: LD_INT 4
25255: NEG
25256: PUSH
25257: EMPTY
25258: LIST
25259: LIST
25260: PUSH
25261: LD_INT 3
25263: NEG
25264: PUSH
25265: LD_INT 3
25267: NEG
25268: PUSH
25269: EMPTY
25270: LIST
25271: LIST
25272: PUSH
25273: LD_INT 4
25275: NEG
25276: PUSH
25277: LD_INT 3
25279: NEG
25280: PUSH
25281: EMPTY
25282: LIST
25283: LIST
25284: PUSH
25285: LD_INT 5
25287: NEG
25288: PUSH
25289: LD_INT 4
25291: NEG
25292: PUSH
25293: EMPTY
25294: LIST
25295: LIST
25296: PUSH
25297: LD_INT 5
25299: NEG
25300: PUSH
25301: LD_INT 5
25303: NEG
25304: PUSH
25305: EMPTY
25306: LIST
25307: LIST
25308: PUSH
25309: LD_INT 3
25311: NEG
25312: PUSH
25313: LD_INT 5
25315: NEG
25316: PUSH
25317: EMPTY
25318: LIST
25319: LIST
25320: PUSH
25321: LD_INT 5
25323: NEG
25324: PUSH
25325: LD_INT 3
25327: NEG
25328: PUSH
25329: EMPTY
25330: LIST
25331: LIST
25332: PUSH
25333: LD_INT 0
25335: PUSH
25336: LD_INT 3
25338: NEG
25339: PUSH
25340: EMPTY
25341: LIST
25342: LIST
25343: PUSH
25344: LD_INT 0
25346: PUSH
25347: LD_INT 4
25349: NEG
25350: PUSH
25351: EMPTY
25352: LIST
25353: LIST
25354: PUSH
25355: LD_INT 1
25357: PUSH
25358: LD_INT 3
25360: NEG
25361: PUSH
25362: EMPTY
25363: LIST
25364: LIST
25365: PUSH
25366: LD_INT 1
25368: PUSH
25369: LD_INT 2
25371: NEG
25372: PUSH
25373: EMPTY
25374: LIST
25375: LIST
25376: PUSH
25377: LD_INT 0
25379: PUSH
25380: LD_INT 2
25382: NEG
25383: PUSH
25384: EMPTY
25385: LIST
25386: LIST
25387: PUSH
25388: LD_INT 1
25390: NEG
25391: PUSH
25392: LD_INT 3
25394: NEG
25395: PUSH
25396: EMPTY
25397: LIST
25398: LIST
25399: PUSH
25400: LD_INT 1
25402: NEG
25403: PUSH
25404: LD_INT 4
25406: NEG
25407: PUSH
25408: EMPTY
25409: LIST
25410: LIST
25411: PUSH
25412: LD_INT 2
25414: PUSH
25415: LD_INT 2
25417: NEG
25418: PUSH
25419: EMPTY
25420: LIST
25421: LIST
25422: PUSH
25423: LD_INT 2
25425: NEG
25426: PUSH
25427: LD_INT 4
25429: NEG
25430: PUSH
25431: EMPTY
25432: LIST
25433: LIST
25434: PUSH
25435: LD_INT 4
25437: PUSH
25438: LD_INT 0
25440: PUSH
25441: EMPTY
25442: LIST
25443: LIST
25444: PUSH
25445: LD_INT 4
25447: PUSH
25448: LD_INT 1
25450: NEG
25451: PUSH
25452: EMPTY
25453: LIST
25454: LIST
25455: PUSH
25456: LD_INT 5
25458: PUSH
25459: LD_INT 0
25461: PUSH
25462: EMPTY
25463: LIST
25464: LIST
25465: PUSH
25466: LD_INT 5
25468: PUSH
25469: LD_INT 1
25471: PUSH
25472: EMPTY
25473: LIST
25474: LIST
25475: PUSH
25476: LD_INT 4
25478: PUSH
25479: LD_INT 1
25481: PUSH
25482: EMPTY
25483: LIST
25484: LIST
25485: PUSH
25486: LD_INT 3
25488: PUSH
25489: LD_INT 0
25491: PUSH
25492: EMPTY
25493: LIST
25494: LIST
25495: PUSH
25496: LD_INT 3
25498: PUSH
25499: LD_INT 1
25501: NEG
25502: PUSH
25503: EMPTY
25504: LIST
25505: LIST
25506: PUSH
25507: LD_INT 3
25509: PUSH
25510: LD_INT 2
25512: NEG
25513: PUSH
25514: EMPTY
25515: LIST
25516: LIST
25517: PUSH
25518: LD_INT 5
25520: PUSH
25521: LD_INT 2
25523: PUSH
25524: EMPTY
25525: LIST
25526: LIST
25527: PUSH
25528: LD_INT 3
25530: PUSH
25531: LD_INT 3
25533: PUSH
25534: EMPTY
25535: LIST
25536: LIST
25537: PUSH
25538: LD_INT 3
25540: PUSH
25541: LD_INT 2
25543: PUSH
25544: EMPTY
25545: LIST
25546: LIST
25547: PUSH
25548: LD_INT 4
25550: PUSH
25551: LD_INT 3
25553: PUSH
25554: EMPTY
25555: LIST
25556: LIST
25557: PUSH
25558: LD_INT 4
25560: PUSH
25561: LD_INT 4
25563: PUSH
25564: EMPTY
25565: LIST
25566: LIST
25567: PUSH
25568: LD_INT 3
25570: PUSH
25571: LD_INT 4
25573: PUSH
25574: EMPTY
25575: LIST
25576: LIST
25577: PUSH
25578: LD_INT 2
25580: PUSH
25581: LD_INT 3
25583: PUSH
25584: EMPTY
25585: LIST
25586: LIST
25587: PUSH
25588: LD_INT 2
25590: PUSH
25591: LD_INT 2
25593: PUSH
25594: EMPTY
25595: LIST
25596: LIST
25597: PUSH
25598: LD_INT 4
25600: PUSH
25601: LD_INT 2
25603: PUSH
25604: EMPTY
25605: LIST
25606: LIST
25607: PUSH
25608: LD_INT 2
25610: PUSH
25611: LD_INT 4
25613: PUSH
25614: EMPTY
25615: LIST
25616: LIST
25617: PUSH
25618: LD_INT 0
25620: PUSH
25621: LD_INT 4
25623: PUSH
25624: EMPTY
25625: LIST
25626: LIST
25627: PUSH
25628: LD_INT 0
25630: PUSH
25631: LD_INT 3
25633: PUSH
25634: EMPTY
25635: LIST
25636: LIST
25637: PUSH
25638: LD_INT 1
25640: PUSH
25641: LD_INT 4
25643: PUSH
25644: EMPTY
25645: LIST
25646: LIST
25647: PUSH
25648: LD_INT 1
25650: PUSH
25651: LD_INT 5
25653: PUSH
25654: EMPTY
25655: LIST
25656: LIST
25657: PUSH
25658: LD_INT 0
25660: PUSH
25661: LD_INT 5
25663: PUSH
25664: EMPTY
25665: LIST
25666: LIST
25667: PUSH
25668: LD_INT 1
25670: NEG
25671: PUSH
25672: LD_INT 4
25674: PUSH
25675: EMPTY
25676: LIST
25677: LIST
25678: PUSH
25679: LD_INT 1
25681: NEG
25682: PUSH
25683: LD_INT 3
25685: PUSH
25686: EMPTY
25687: LIST
25688: LIST
25689: PUSH
25690: LD_INT 2
25692: PUSH
25693: LD_INT 5
25695: PUSH
25696: EMPTY
25697: LIST
25698: LIST
25699: PUSH
25700: LD_INT 2
25702: NEG
25703: PUSH
25704: LD_INT 3
25706: PUSH
25707: EMPTY
25708: LIST
25709: LIST
25710: PUSH
25711: EMPTY
25712: LIST
25713: LIST
25714: LIST
25715: LIST
25716: LIST
25717: LIST
25718: LIST
25719: LIST
25720: LIST
25721: LIST
25722: LIST
25723: LIST
25724: LIST
25725: LIST
25726: LIST
25727: LIST
25728: LIST
25729: LIST
25730: LIST
25731: LIST
25732: LIST
25733: LIST
25734: LIST
25735: LIST
25736: LIST
25737: LIST
25738: LIST
25739: LIST
25740: LIST
25741: LIST
25742: LIST
25743: LIST
25744: LIST
25745: LIST
25746: LIST
25747: LIST
25748: LIST
25749: LIST
25750: LIST
25751: LIST
25752: LIST
25753: LIST
25754: LIST
25755: LIST
25756: LIST
25757: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25758: LD_ADDR_VAR 0 34
25762: PUSH
25763: LD_INT 0
25765: PUSH
25766: LD_INT 4
25768: NEG
25769: PUSH
25770: EMPTY
25771: LIST
25772: LIST
25773: PUSH
25774: LD_INT 0
25776: PUSH
25777: LD_INT 5
25779: NEG
25780: PUSH
25781: EMPTY
25782: LIST
25783: LIST
25784: PUSH
25785: LD_INT 1
25787: PUSH
25788: LD_INT 4
25790: NEG
25791: PUSH
25792: EMPTY
25793: LIST
25794: LIST
25795: PUSH
25796: LD_INT 1
25798: PUSH
25799: LD_INT 3
25801: NEG
25802: PUSH
25803: EMPTY
25804: LIST
25805: LIST
25806: PUSH
25807: LD_INT 0
25809: PUSH
25810: LD_INT 3
25812: NEG
25813: PUSH
25814: EMPTY
25815: LIST
25816: LIST
25817: PUSH
25818: LD_INT 1
25820: NEG
25821: PUSH
25822: LD_INT 4
25824: NEG
25825: PUSH
25826: EMPTY
25827: LIST
25828: LIST
25829: PUSH
25830: LD_INT 1
25832: NEG
25833: PUSH
25834: LD_INT 5
25836: NEG
25837: PUSH
25838: EMPTY
25839: LIST
25840: LIST
25841: PUSH
25842: LD_INT 2
25844: PUSH
25845: LD_INT 3
25847: NEG
25848: PUSH
25849: EMPTY
25850: LIST
25851: LIST
25852: PUSH
25853: LD_INT 2
25855: NEG
25856: PUSH
25857: LD_INT 5
25859: NEG
25860: PUSH
25861: EMPTY
25862: LIST
25863: LIST
25864: PUSH
25865: LD_INT 3
25867: PUSH
25868: LD_INT 0
25870: PUSH
25871: EMPTY
25872: LIST
25873: LIST
25874: PUSH
25875: LD_INT 3
25877: PUSH
25878: LD_INT 1
25880: NEG
25881: PUSH
25882: EMPTY
25883: LIST
25884: LIST
25885: PUSH
25886: LD_INT 4
25888: PUSH
25889: LD_INT 0
25891: PUSH
25892: EMPTY
25893: LIST
25894: LIST
25895: PUSH
25896: LD_INT 4
25898: PUSH
25899: LD_INT 1
25901: PUSH
25902: EMPTY
25903: LIST
25904: LIST
25905: PUSH
25906: LD_INT 3
25908: PUSH
25909: LD_INT 1
25911: PUSH
25912: EMPTY
25913: LIST
25914: LIST
25915: PUSH
25916: LD_INT 2
25918: PUSH
25919: LD_INT 0
25921: PUSH
25922: EMPTY
25923: LIST
25924: LIST
25925: PUSH
25926: LD_INT 2
25928: PUSH
25929: LD_INT 1
25931: NEG
25932: PUSH
25933: EMPTY
25934: LIST
25935: LIST
25936: PUSH
25937: LD_INT 2
25939: PUSH
25940: LD_INT 2
25942: NEG
25943: PUSH
25944: EMPTY
25945: LIST
25946: LIST
25947: PUSH
25948: LD_INT 4
25950: PUSH
25951: LD_INT 2
25953: PUSH
25954: EMPTY
25955: LIST
25956: LIST
25957: PUSH
25958: LD_INT 4
25960: PUSH
25961: LD_INT 4
25963: PUSH
25964: EMPTY
25965: LIST
25966: LIST
25967: PUSH
25968: LD_INT 4
25970: PUSH
25971: LD_INT 3
25973: PUSH
25974: EMPTY
25975: LIST
25976: LIST
25977: PUSH
25978: LD_INT 5
25980: PUSH
25981: LD_INT 4
25983: PUSH
25984: EMPTY
25985: LIST
25986: LIST
25987: PUSH
25988: LD_INT 5
25990: PUSH
25991: LD_INT 5
25993: PUSH
25994: EMPTY
25995: LIST
25996: LIST
25997: PUSH
25998: LD_INT 4
26000: PUSH
26001: LD_INT 5
26003: PUSH
26004: EMPTY
26005: LIST
26006: LIST
26007: PUSH
26008: LD_INT 3
26010: PUSH
26011: LD_INT 4
26013: PUSH
26014: EMPTY
26015: LIST
26016: LIST
26017: PUSH
26018: LD_INT 3
26020: PUSH
26021: LD_INT 3
26023: PUSH
26024: EMPTY
26025: LIST
26026: LIST
26027: PUSH
26028: LD_INT 5
26030: PUSH
26031: LD_INT 3
26033: PUSH
26034: EMPTY
26035: LIST
26036: LIST
26037: PUSH
26038: LD_INT 3
26040: PUSH
26041: LD_INT 5
26043: PUSH
26044: EMPTY
26045: LIST
26046: LIST
26047: PUSH
26048: LD_INT 0
26050: PUSH
26051: LD_INT 3
26053: PUSH
26054: EMPTY
26055: LIST
26056: LIST
26057: PUSH
26058: LD_INT 0
26060: PUSH
26061: LD_INT 2
26063: PUSH
26064: EMPTY
26065: LIST
26066: LIST
26067: PUSH
26068: LD_INT 1
26070: PUSH
26071: LD_INT 3
26073: PUSH
26074: EMPTY
26075: LIST
26076: LIST
26077: PUSH
26078: LD_INT 1
26080: PUSH
26081: LD_INT 4
26083: PUSH
26084: EMPTY
26085: LIST
26086: LIST
26087: PUSH
26088: LD_INT 0
26090: PUSH
26091: LD_INT 4
26093: PUSH
26094: EMPTY
26095: LIST
26096: LIST
26097: PUSH
26098: LD_INT 1
26100: NEG
26101: PUSH
26102: LD_INT 3
26104: PUSH
26105: EMPTY
26106: LIST
26107: LIST
26108: PUSH
26109: LD_INT 1
26111: NEG
26112: PUSH
26113: LD_INT 2
26115: PUSH
26116: EMPTY
26117: LIST
26118: LIST
26119: PUSH
26120: LD_INT 2
26122: PUSH
26123: LD_INT 4
26125: PUSH
26126: EMPTY
26127: LIST
26128: LIST
26129: PUSH
26130: LD_INT 2
26132: NEG
26133: PUSH
26134: LD_INT 2
26136: PUSH
26137: EMPTY
26138: LIST
26139: LIST
26140: PUSH
26141: LD_INT 4
26143: NEG
26144: PUSH
26145: LD_INT 0
26147: PUSH
26148: EMPTY
26149: LIST
26150: LIST
26151: PUSH
26152: LD_INT 4
26154: NEG
26155: PUSH
26156: LD_INT 1
26158: NEG
26159: PUSH
26160: EMPTY
26161: LIST
26162: LIST
26163: PUSH
26164: LD_INT 3
26166: NEG
26167: PUSH
26168: LD_INT 0
26170: PUSH
26171: EMPTY
26172: LIST
26173: LIST
26174: PUSH
26175: LD_INT 3
26177: NEG
26178: PUSH
26179: LD_INT 1
26181: PUSH
26182: EMPTY
26183: LIST
26184: LIST
26185: PUSH
26186: LD_INT 4
26188: NEG
26189: PUSH
26190: LD_INT 1
26192: PUSH
26193: EMPTY
26194: LIST
26195: LIST
26196: PUSH
26197: LD_INT 5
26199: NEG
26200: PUSH
26201: LD_INT 0
26203: PUSH
26204: EMPTY
26205: LIST
26206: LIST
26207: PUSH
26208: LD_INT 5
26210: NEG
26211: PUSH
26212: LD_INT 1
26214: NEG
26215: PUSH
26216: EMPTY
26217: LIST
26218: LIST
26219: PUSH
26220: LD_INT 5
26222: NEG
26223: PUSH
26224: LD_INT 2
26226: NEG
26227: PUSH
26228: EMPTY
26229: LIST
26230: LIST
26231: PUSH
26232: LD_INT 3
26234: NEG
26235: PUSH
26236: LD_INT 2
26238: PUSH
26239: EMPTY
26240: LIST
26241: LIST
26242: PUSH
26243: EMPTY
26244: LIST
26245: LIST
26246: LIST
26247: LIST
26248: LIST
26249: LIST
26250: LIST
26251: LIST
26252: LIST
26253: LIST
26254: LIST
26255: LIST
26256: LIST
26257: LIST
26258: LIST
26259: LIST
26260: LIST
26261: LIST
26262: LIST
26263: LIST
26264: LIST
26265: LIST
26266: LIST
26267: LIST
26268: LIST
26269: LIST
26270: LIST
26271: LIST
26272: LIST
26273: LIST
26274: LIST
26275: LIST
26276: LIST
26277: LIST
26278: LIST
26279: LIST
26280: LIST
26281: LIST
26282: LIST
26283: LIST
26284: LIST
26285: LIST
26286: LIST
26287: LIST
26288: LIST
26289: ST_TO_ADDR
// end ; end ;
26290: GO 26293
26292: POP
// case btype of b_depot , b_warehouse :
26293: LD_VAR 0 1
26297: PUSH
26298: LD_INT 0
26300: DOUBLE
26301: EQUAL
26302: IFTRUE 26312
26304: LD_INT 1
26306: DOUBLE
26307: EQUAL
26308: IFTRUE 26312
26310: GO 26513
26312: POP
// case nation of nation_american :
26313: LD_VAR 0 5
26317: PUSH
26318: LD_INT 1
26320: DOUBLE
26321: EQUAL
26322: IFTRUE 26326
26324: GO 26382
26326: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26327: LD_ADDR_VAR 0 9
26331: PUSH
26332: LD_VAR 0 11
26336: PUSH
26337: LD_VAR 0 12
26341: PUSH
26342: LD_VAR 0 13
26346: PUSH
26347: LD_VAR 0 14
26351: PUSH
26352: LD_VAR 0 15
26356: PUSH
26357: LD_VAR 0 16
26361: PUSH
26362: EMPTY
26363: LIST
26364: LIST
26365: LIST
26366: LIST
26367: LIST
26368: LIST
26369: PUSH
26370: LD_VAR 0 4
26374: PUSH
26375: LD_INT 1
26377: PLUS
26378: ARRAY
26379: ST_TO_ADDR
26380: GO 26511
26382: LD_INT 2
26384: DOUBLE
26385: EQUAL
26386: IFTRUE 26390
26388: GO 26446
26390: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26391: LD_ADDR_VAR 0 9
26395: PUSH
26396: LD_VAR 0 17
26400: PUSH
26401: LD_VAR 0 18
26405: PUSH
26406: LD_VAR 0 19
26410: PUSH
26411: LD_VAR 0 20
26415: PUSH
26416: LD_VAR 0 21
26420: PUSH
26421: LD_VAR 0 22
26425: PUSH
26426: EMPTY
26427: LIST
26428: LIST
26429: LIST
26430: LIST
26431: LIST
26432: LIST
26433: PUSH
26434: LD_VAR 0 4
26438: PUSH
26439: LD_INT 1
26441: PLUS
26442: ARRAY
26443: ST_TO_ADDR
26444: GO 26511
26446: LD_INT 3
26448: DOUBLE
26449: EQUAL
26450: IFTRUE 26454
26452: GO 26510
26454: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26455: LD_ADDR_VAR 0 9
26459: PUSH
26460: LD_VAR 0 23
26464: PUSH
26465: LD_VAR 0 24
26469: PUSH
26470: LD_VAR 0 25
26474: PUSH
26475: LD_VAR 0 26
26479: PUSH
26480: LD_VAR 0 27
26484: PUSH
26485: LD_VAR 0 28
26489: PUSH
26490: EMPTY
26491: LIST
26492: LIST
26493: LIST
26494: LIST
26495: LIST
26496: LIST
26497: PUSH
26498: LD_VAR 0 4
26502: PUSH
26503: LD_INT 1
26505: PLUS
26506: ARRAY
26507: ST_TO_ADDR
26508: GO 26511
26510: POP
26511: GO 27060
26513: LD_INT 2
26515: DOUBLE
26516: EQUAL
26517: IFTRUE 26527
26519: LD_INT 3
26521: DOUBLE
26522: EQUAL
26523: IFTRUE 26527
26525: GO 26583
26527: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26528: LD_ADDR_VAR 0 9
26532: PUSH
26533: LD_VAR 0 29
26537: PUSH
26538: LD_VAR 0 30
26542: PUSH
26543: LD_VAR 0 31
26547: PUSH
26548: LD_VAR 0 32
26552: PUSH
26553: LD_VAR 0 33
26557: PUSH
26558: LD_VAR 0 34
26562: PUSH
26563: EMPTY
26564: LIST
26565: LIST
26566: LIST
26567: LIST
26568: LIST
26569: LIST
26570: PUSH
26571: LD_VAR 0 4
26575: PUSH
26576: LD_INT 1
26578: PLUS
26579: ARRAY
26580: ST_TO_ADDR
26581: GO 27060
26583: LD_INT 16
26585: DOUBLE
26586: EQUAL
26587: IFTRUE 26639
26589: LD_INT 17
26591: DOUBLE
26592: EQUAL
26593: IFTRUE 26639
26595: LD_INT 18
26597: DOUBLE
26598: EQUAL
26599: IFTRUE 26639
26601: LD_INT 19
26603: DOUBLE
26604: EQUAL
26605: IFTRUE 26639
26607: LD_INT 20
26609: DOUBLE
26610: EQUAL
26611: IFTRUE 26639
26613: LD_INT 21
26615: DOUBLE
26616: EQUAL
26617: IFTRUE 26639
26619: LD_INT 23
26621: DOUBLE
26622: EQUAL
26623: IFTRUE 26639
26625: LD_INT 24
26627: DOUBLE
26628: EQUAL
26629: IFTRUE 26639
26631: LD_INT 25
26633: DOUBLE
26634: EQUAL
26635: IFTRUE 26639
26637: GO 26695
26639: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26640: LD_ADDR_VAR 0 9
26644: PUSH
26645: LD_VAR 0 35
26649: PUSH
26650: LD_VAR 0 36
26654: PUSH
26655: LD_VAR 0 37
26659: PUSH
26660: LD_VAR 0 38
26664: PUSH
26665: LD_VAR 0 39
26669: PUSH
26670: LD_VAR 0 40
26674: PUSH
26675: EMPTY
26676: LIST
26677: LIST
26678: LIST
26679: LIST
26680: LIST
26681: LIST
26682: PUSH
26683: LD_VAR 0 4
26687: PUSH
26688: LD_INT 1
26690: PLUS
26691: ARRAY
26692: ST_TO_ADDR
26693: GO 27060
26695: LD_INT 6
26697: DOUBLE
26698: EQUAL
26699: IFTRUE 26751
26701: LD_INT 7
26703: DOUBLE
26704: EQUAL
26705: IFTRUE 26751
26707: LD_INT 8
26709: DOUBLE
26710: EQUAL
26711: IFTRUE 26751
26713: LD_INT 13
26715: DOUBLE
26716: EQUAL
26717: IFTRUE 26751
26719: LD_INT 12
26721: DOUBLE
26722: EQUAL
26723: IFTRUE 26751
26725: LD_INT 15
26727: DOUBLE
26728: EQUAL
26729: IFTRUE 26751
26731: LD_INT 11
26733: DOUBLE
26734: EQUAL
26735: IFTRUE 26751
26737: LD_INT 14
26739: DOUBLE
26740: EQUAL
26741: IFTRUE 26751
26743: LD_INT 10
26745: DOUBLE
26746: EQUAL
26747: IFTRUE 26751
26749: GO 26807
26751: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26752: LD_ADDR_VAR 0 9
26756: PUSH
26757: LD_VAR 0 41
26761: PUSH
26762: LD_VAR 0 42
26766: PUSH
26767: LD_VAR 0 43
26771: PUSH
26772: LD_VAR 0 44
26776: PUSH
26777: LD_VAR 0 45
26781: PUSH
26782: LD_VAR 0 46
26786: PUSH
26787: EMPTY
26788: LIST
26789: LIST
26790: LIST
26791: LIST
26792: LIST
26793: LIST
26794: PUSH
26795: LD_VAR 0 4
26799: PUSH
26800: LD_INT 1
26802: PLUS
26803: ARRAY
26804: ST_TO_ADDR
26805: GO 27060
26807: LD_INT 36
26809: DOUBLE
26810: EQUAL
26811: IFTRUE 26815
26813: GO 26871
26815: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26816: LD_ADDR_VAR 0 9
26820: PUSH
26821: LD_VAR 0 47
26825: PUSH
26826: LD_VAR 0 48
26830: PUSH
26831: LD_VAR 0 49
26835: PUSH
26836: LD_VAR 0 50
26840: PUSH
26841: LD_VAR 0 51
26845: PUSH
26846: LD_VAR 0 52
26850: PUSH
26851: EMPTY
26852: LIST
26853: LIST
26854: LIST
26855: LIST
26856: LIST
26857: LIST
26858: PUSH
26859: LD_VAR 0 4
26863: PUSH
26864: LD_INT 1
26866: PLUS
26867: ARRAY
26868: ST_TO_ADDR
26869: GO 27060
26871: LD_INT 4
26873: DOUBLE
26874: EQUAL
26875: IFTRUE 26897
26877: LD_INT 5
26879: DOUBLE
26880: EQUAL
26881: IFTRUE 26897
26883: LD_INT 34
26885: DOUBLE
26886: EQUAL
26887: IFTRUE 26897
26889: LD_INT 37
26891: DOUBLE
26892: EQUAL
26893: IFTRUE 26897
26895: GO 26953
26897: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26898: LD_ADDR_VAR 0 9
26902: PUSH
26903: LD_VAR 0 53
26907: PUSH
26908: LD_VAR 0 54
26912: PUSH
26913: LD_VAR 0 55
26917: PUSH
26918: LD_VAR 0 56
26922: PUSH
26923: LD_VAR 0 57
26927: PUSH
26928: LD_VAR 0 58
26932: PUSH
26933: EMPTY
26934: LIST
26935: LIST
26936: LIST
26937: LIST
26938: LIST
26939: LIST
26940: PUSH
26941: LD_VAR 0 4
26945: PUSH
26946: LD_INT 1
26948: PLUS
26949: ARRAY
26950: ST_TO_ADDR
26951: GO 27060
26953: LD_INT 31
26955: DOUBLE
26956: EQUAL
26957: IFTRUE 27003
26959: LD_INT 32
26961: DOUBLE
26962: EQUAL
26963: IFTRUE 27003
26965: LD_INT 33
26967: DOUBLE
26968: EQUAL
26969: IFTRUE 27003
26971: LD_INT 27
26973: DOUBLE
26974: EQUAL
26975: IFTRUE 27003
26977: LD_INT 26
26979: DOUBLE
26980: EQUAL
26981: IFTRUE 27003
26983: LD_INT 28
26985: DOUBLE
26986: EQUAL
26987: IFTRUE 27003
26989: LD_INT 29
26991: DOUBLE
26992: EQUAL
26993: IFTRUE 27003
26995: LD_INT 30
26997: DOUBLE
26998: EQUAL
26999: IFTRUE 27003
27001: GO 27059
27003: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27004: LD_ADDR_VAR 0 9
27008: PUSH
27009: LD_VAR 0 59
27013: PUSH
27014: LD_VAR 0 60
27018: PUSH
27019: LD_VAR 0 61
27023: PUSH
27024: LD_VAR 0 62
27028: PUSH
27029: LD_VAR 0 63
27033: PUSH
27034: LD_VAR 0 64
27038: PUSH
27039: EMPTY
27040: LIST
27041: LIST
27042: LIST
27043: LIST
27044: LIST
27045: LIST
27046: PUSH
27047: LD_VAR 0 4
27051: PUSH
27052: LD_INT 1
27054: PLUS
27055: ARRAY
27056: ST_TO_ADDR
27057: GO 27060
27059: POP
// temp_list2 = [ ] ;
27060: LD_ADDR_VAR 0 10
27064: PUSH
27065: EMPTY
27066: ST_TO_ADDR
// for i in temp_list do
27067: LD_ADDR_VAR 0 8
27071: PUSH
27072: LD_VAR 0 9
27076: PUSH
27077: FOR_IN
27078: IFFALSE 27130
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27080: LD_ADDR_VAR 0 10
27084: PUSH
27085: LD_VAR 0 10
27089: PUSH
27090: LD_VAR 0 8
27094: PUSH
27095: LD_INT 1
27097: ARRAY
27098: PUSH
27099: LD_VAR 0 2
27103: PLUS
27104: PUSH
27105: LD_VAR 0 8
27109: PUSH
27110: LD_INT 2
27112: ARRAY
27113: PUSH
27114: LD_VAR 0 3
27118: PLUS
27119: PUSH
27120: EMPTY
27121: LIST
27122: LIST
27123: PUSH
27124: EMPTY
27125: LIST
27126: ADD
27127: ST_TO_ADDR
27128: GO 27077
27130: POP
27131: POP
// result = temp_list2 ;
27132: LD_ADDR_VAR 0 7
27136: PUSH
27137: LD_VAR 0 10
27141: ST_TO_ADDR
// end ;
27142: LD_VAR 0 7
27146: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27147: LD_INT 0
27149: PPUSH
27150: PPUSH
27151: PPUSH
// result := false ;
27152: LD_ADDR_VAR 0 4
27156: PUSH
27157: LD_INT 0
27159: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27160: LD_VAR 0 1
27164: NOT
27165: PUSH
27166: LD_VAR 0 2
27170: NOT
27171: OR
27172: PUSH
27173: LD_VAR 0 1
27177: PPUSH
27178: CALL_OW 310
27182: OR
27183: IFFALSE 27187
// exit ;
27185: GO 27391
// if distance < 0 then
27187: LD_VAR 0 3
27191: PUSH
27192: LD_INT 0
27194: LESS
27195: IFFALSE 27205
// distance := 0 ;
27197: LD_ADDR_VAR 0 3
27201: PUSH
27202: LD_INT 0
27204: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27205: LD_ADDR_VAR 0 6
27209: PUSH
27210: LD_VAR 0 2
27214: PPUSH
27215: CALL_OW 266
27219: PPUSH
27220: LD_VAR 0 2
27224: PPUSH
27225: CALL_OW 250
27229: PPUSH
27230: LD_VAR 0 2
27234: PPUSH
27235: CALL_OW 251
27239: PPUSH
27240: LD_VAR 0 2
27244: PPUSH
27245: CALL_OW 254
27249: PPUSH
27250: LD_VAR 0 2
27254: PPUSH
27255: CALL_OW 248
27259: PPUSH
27260: LD_INT 1
27262: PPUSH
27263: CALL 8608 0 6
27267: ST_TO_ADDR
// if not entrance then
27268: LD_VAR 0 6
27272: NOT
27273: IFFALSE 27277
// exit ;
27275: GO 27391
// for i in entrance do
27277: LD_ADDR_VAR 0 5
27281: PUSH
27282: LD_VAR 0 6
27286: PUSH
27287: FOR_IN
27288: IFFALSE 27389
// begin if not distance then
27290: LD_VAR 0 3
27294: NOT
27295: IFFALSE 27340
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27297: LD_VAR 0 1
27301: PPUSH
27302: LD_VAR 0 5
27306: PUSH
27307: LD_INT 1
27309: ARRAY
27310: PPUSH
27311: LD_VAR 0 5
27315: PUSH
27316: LD_INT 2
27318: ARRAY
27319: PPUSH
27320: CALL_OW 307
27324: IFFALSE 27338
// begin result := true ;
27326: LD_ADDR_VAR 0 4
27330: PUSH
27331: LD_INT 1
27333: ST_TO_ADDR
// exit ;
27334: POP
27335: POP
27336: GO 27391
// end ; end else
27338: GO 27387
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27340: LD_VAR 0 1
27344: PPUSH
27345: LD_VAR 0 5
27349: PUSH
27350: LD_INT 1
27352: ARRAY
27353: PPUSH
27354: LD_VAR 0 5
27358: PUSH
27359: LD_INT 2
27361: ARRAY
27362: PPUSH
27363: CALL_OW 297
27367: PUSH
27368: LD_VAR 0 3
27372: LESSEQUAL
27373: IFFALSE 27387
// begin result := true ;
27375: LD_ADDR_VAR 0 4
27379: PUSH
27380: LD_INT 1
27382: ST_TO_ADDR
// exit ;
27383: POP
27384: POP
27385: GO 27391
// end ; end ; end ;
27387: GO 27287
27389: POP
27390: POP
// end ;
27391: LD_VAR 0 4
27395: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27396: LD_INT 0
27398: PPUSH
27399: PPUSH
27400: PPUSH
// result := false ;
27401: LD_ADDR_VAR 0 3
27405: PUSH
27406: LD_INT 0
27408: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27409: LD_VAR 0 1
27413: NOT
27414: PUSH
27415: LD_VAR 0 2
27419: NOT
27420: OR
27421: PUSH
27422: LD_VAR 0 1
27426: PPUSH
27427: CALL_OW 302
27431: NOT
27432: OR
27433: PUSH
27434: LD_VAR 0 2
27438: PPUSH
27439: CALL_OW 302
27443: NOT
27444: OR
27445: IFFALSE 27449
// exit ;
27447: GO 27610
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27449: LD_VAR 0 1
27453: PPUSH
27454: LD_INT 81
27456: PUSH
27457: LD_VAR 0 1
27461: PPUSH
27462: CALL_OW 255
27466: PUSH
27467: EMPTY
27468: LIST
27469: LIST
27470: PUSH
27471: LD_INT 3
27473: PUSH
27474: LD_INT 21
27476: PUSH
27477: LD_INT 3
27479: PUSH
27480: EMPTY
27481: LIST
27482: LIST
27483: PUSH
27484: EMPTY
27485: LIST
27486: LIST
27487: PUSH
27488: EMPTY
27489: LIST
27490: LIST
27491: PPUSH
27492: CALL_OW 69
27496: PPUSH
27497: LD_VAR 0 1
27501: PPUSH
27502: CALL_OW 74
27506: PPUSH
27507: CALL_OW 296
27511: PUSH
27512: LD_INT 8
27514: LESS
27515: IFFALSE 27519
// exit ;
27517: GO 27610
// building := IsInUnit ( unit2 ) ;
27519: LD_ADDR_VAR 0 5
27523: PUSH
27524: LD_VAR 0 2
27528: PPUSH
27529: CALL_OW 310
27533: ST_TO_ADDR
// if building then
27534: LD_VAR 0 5
27538: IFFALSE 27565
// result := IsNearbyEntrance ( unit , building , 2 ) else
27540: LD_ADDR_VAR 0 3
27544: PUSH
27545: LD_VAR 0 1
27549: PPUSH
27550: LD_VAR 0 5
27554: PPUSH
27555: LD_INT 2
27557: PPUSH
27558: CALL 27147 0 3
27562: ST_TO_ADDR
27563: GO 27610
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27565: LD_ADDR_VAR 0 3
27569: PUSH
27570: LD_VAR 0 1
27574: PPUSH
27575: LD_VAR 0 2
27579: PPUSH
27580: CALL_OW 296
27584: PUSH
27585: LD_INT 6
27587: LESS
27588: PUSH
27589: LD_VAR 0 2
27593: PPUSH
27594: CALL_OW 255
27598: PPUSH
27599: LD_VAR 0 1
27603: PPUSH
27604: CALL_OW 292
27608: AND
27609: ST_TO_ADDR
// end ;
27610: LD_VAR 0 3
27614: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27615: LD_INT 0
27617: PPUSH
27618: PPUSH
27619: PPUSH
27620: PPUSH
// tmp := [ ] ;
27621: LD_ADDR_VAR 0 3
27625: PUSH
27626: EMPTY
27627: ST_TO_ADDR
// list := [ ] ;
27628: LD_ADDR_VAR 0 5
27632: PUSH
27633: EMPTY
27634: ST_TO_ADDR
// for i = 16 to 25 do
27635: LD_ADDR_VAR 0 4
27639: PUSH
27640: DOUBLE
27641: LD_INT 16
27643: DEC
27644: ST_TO_ADDR
27645: LD_INT 25
27647: PUSH
27648: FOR_TO
27649: IFFALSE 27722
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27651: LD_ADDR_VAR 0 3
27655: PUSH
27656: LD_VAR 0 3
27660: PUSH
27661: LD_INT 22
27663: PUSH
27664: LD_VAR 0 1
27668: PPUSH
27669: CALL_OW 255
27673: PUSH
27674: EMPTY
27675: LIST
27676: LIST
27677: PUSH
27678: LD_INT 91
27680: PUSH
27681: LD_VAR 0 1
27685: PUSH
27686: LD_INT 6
27688: PUSH
27689: EMPTY
27690: LIST
27691: LIST
27692: LIST
27693: PUSH
27694: LD_INT 30
27696: PUSH
27697: LD_VAR 0 4
27701: PUSH
27702: EMPTY
27703: LIST
27704: LIST
27705: PUSH
27706: EMPTY
27707: LIST
27708: LIST
27709: LIST
27710: PUSH
27711: EMPTY
27712: LIST
27713: PPUSH
27714: CALL_OW 69
27718: ADD
27719: ST_TO_ADDR
27720: GO 27648
27722: POP
27723: POP
// for i = 1 to tmp do
27724: LD_ADDR_VAR 0 4
27728: PUSH
27729: DOUBLE
27730: LD_INT 1
27732: DEC
27733: ST_TO_ADDR
27734: LD_VAR 0 3
27738: PUSH
27739: FOR_TO
27740: IFFALSE 27828
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27742: LD_ADDR_VAR 0 5
27746: PUSH
27747: LD_VAR 0 5
27751: PUSH
27752: LD_VAR 0 3
27756: PUSH
27757: LD_VAR 0 4
27761: ARRAY
27762: PPUSH
27763: CALL_OW 266
27767: PUSH
27768: LD_VAR 0 3
27772: PUSH
27773: LD_VAR 0 4
27777: ARRAY
27778: PPUSH
27779: CALL_OW 250
27783: PUSH
27784: LD_VAR 0 3
27788: PUSH
27789: LD_VAR 0 4
27793: ARRAY
27794: PPUSH
27795: CALL_OW 251
27799: PUSH
27800: LD_VAR 0 3
27804: PUSH
27805: LD_VAR 0 4
27809: ARRAY
27810: PPUSH
27811: CALL_OW 254
27815: PUSH
27816: EMPTY
27817: LIST
27818: LIST
27819: LIST
27820: LIST
27821: PUSH
27822: EMPTY
27823: LIST
27824: ADD
27825: ST_TO_ADDR
27826: GO 27739
27828: POP
27829: POP
// result := list ;
27830: LD_ADDR_VAR 0 2
27834: PUSH
27835: LD_VAR 0 5
27839: ST_TO_ADDR
// end ;
27840: LD_VAR 0 2
27844: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27845: LD_INT 0
27847: PPUSH
27848: PPUSH
27849: PPUSH
27850: PPUSH
27851: PPUSH
27852: PPUSH
27853: PPUSH
// if not factory then
27854: LD_VAR 0 1
27858: NOT
27859: IFFALSE 27863
// exit ;
27861: GO 28388
// if control = control_apeman then
27863: LD_VAR 0 4
27867: PUSH
27868: LD_INT 5
27870: EQUAL
27871: IFFALSE 27980
// begin tmp := UnitsInside ( factory ) ;
27873: LD_ADDR_VAR 0 8
27877: PUSH
27878: LD_VAR 0 1
27882: PPUSH
27883: CALL_OW 313
27887: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27888: LD_VAR 0 8
27892: PPUSH
27893: LD_INT 25
27895: PUSH
27896: LD_INT 12
27898: PUSH
27899: EMPTY
27900: LIST
27901: LIST
27902: PPUSH
27903: CALL_OW 72
27907: NOT
27908: IFFALSE 27918
// control := control_manual ;
27910: LD_ADDR_VAR 0 4
27914: PUSH
27915: LD_INT 1
27917: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27918: LD_ADDR_VAR 0 8
27922: PUSH
27923: LD_VAR 0 1
27927: PPUSH
27928: CALL 27615 0 1
27932: ST_TO_ADDR
// if tmp then
27933: LD_VAR 0 8
27937: IFFALSE 27980
// begin for i in tmp do
27939: LD_ADDR_VAR 0 7
27943: PUSH
27944: LD_VAR 0 8
27948: PUSH
27949: FOR_IN
27950: IFFALSE 27978
// if i [ 1 ] = b_ext_radar then
27952: LD_VAR 0 7
27956: PUSH
27957: LD_INT 1
27959: ARRAY
27960: PUSH
27961: LD_INT 20
27963: EQUAL
27964: IFFALSE 27976
// begin control := control_remote ;
27966: LD_ADDR_VAR 0 4
27970: PUSH
27971: LD_INT 2
27973: ST_TO_ADDR
// break ;
27974: GO 27978
// end ;
27976: GO 27949
27978: POP
27979: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27980: LD_VAR 0 1
27984: PPUSH
27985: LD_VAR 0 2
27989: PPUSH
27990: LD_VAR 0 3
27994: PPUSH
27995: LD_VAR 0 4
27999: PPUSH
28000: LD_VAR 0 5
28004: PPUSH
28005: CALL_OW 448
28009: IFFALSE 28044
// begin result := [ chassis , engine , control , weapon ] ;
28011: LD_ADDR_VAR 0 6
28015: PUSH
28016: LD_VAR 0 2
28020: PUSH
28021: LD_VAR 0 3
28025: PUSH
28026: LD_VAR 0 4
28030: PUSH
28031: LD_VAR 0 5
28035: PUSH
28036: EMPTY
28037: LIST
28038: LIST
28039: LIST
28040: LIST
28041: ST_TO_ADDR
// exit ;
28042: GO 28388
// end ; _chassis := AvailableChassisList ( factory ) ;
28044: LD_ADDR_VAR 0 9
28048: PUSH
28049: LD_VAR 0 1
28053: PPUSH
28054: CALL_OW 475
28058: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28059: LD_ADDR_VAR 0 11
28063: PUSH
28064: LD_VAR 0 1
28068: PPUSH
28069: CALL_OW 476
28073: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28074: LD_ADDR_VAR 0 12
28078: PUSH
28079: LD_VAR 0 1
28083: PPUSH
28084: CALL_OW 477
28088: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28089: LD_ADDR_VAR 0 10
28093: PUSH
28094: LD_VAR 0 1
28098: PPUSH
28099: CALL_OW 478
28103: ST_TO_ADDR
// if not chassis in _chassis then
28104: LD_VAR 0 2
28108: PUSH
28109: LD_VAR 0 9
28113: IN
28114: NOT
28115: IFFALSE 28141
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28117: LD_ADDR_VAR 0 2
28121: PUSH
28122: LD_VAR 0 9
28126: PUSH
28127: LD_INT 1
28129: PPUSH
28130: LD_VAR 0 9
28134: PPUSH
28135: CALL_OW 12
28139: ARRAY
28140: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28141: LD_VAR 0 2
28145: PPUSH
28146: LD_VAR 0 3
28150: PPUSH
28151: CALL 28393 0 2
28155: NOT
28156: IFFALSE 28215
// repeat engine := _engine [ 1 ] ;
28158: LD_ADDR_VAR 0 3
28162: PUSH
28163: LD_VAR 0 11
28167: PUSH
28168: LD_INT 1
28170: ARRAY
28171: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28172: LD_ADDR_VAR 0 11
28176: PUSH
28177: LD_VAR 0 11
28181: PPUSH
28182: LD_INT 1
28184: PPUSH
28185: CALL_OW 3
28189: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28190: LD_VAR 0 2
28194: PPUSH
28195: LD_VAR 0 3
28199: PPUSH
28200: CALL 28393 0 2
28204: PUSH
28205: LD_VAR 0 11
28209: PUSH
28210: EMPTY
28211: EQUAL
28212: OR
28213: IFFALSE 28158
// if not control in _control then
28215: LD_VAR 0 4
28219: PUSH
28220: LD_VAR 0 12
28224: IN
28225: NOT
28226: IFFALSE 28252
// control := _control [ rand ( 1 , _control ) ] ;
28228: LD_ADDR_VAR 0 4
28232: PUSH
28233: LD_VAR 0 12
28237: PUSH
28238: LD_INT 1
28240: PPUSH
28241: LD_VAR 0 12
28245: PPUSH
28246: CALL_OW 12
28250: ARRAY
28251: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28252: LD_VAR 0 2
28256: PPUSH
28257: LD_VAR 0 5
28261: PPUSH
28262: CALL 28613 0 2
28266: NOT
28267: IFFALSE 28326
// repeat weapon := _weapon [ 1 ] ;
28269: LD_ADDR_VAR 0 5
28273: PUSH
28274: LD_VAR 0 10
28278: PUSH
28279: LD_INT 1
28281: ARRAY
28282: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28283: LD_ADDR_VAR 0 10
28287: PUSH
28288: LD_VAR 0 10
28292: PPUSH
28293: LD_INT 1
28295: PPUSH
28296: CALL_OW 3
28300: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28301: LD_VAR 0 2
28305: PPUSH
28306: LD_VAR 0 5
28310: PPUSH
28311: CALL 28613 0 2
28315: PUSH
28316: LD_VAR 0 10
28320: PUSH
28321: EMPTY
28322: EQUAL
28323: OR
28324: IFFALSE 28269
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28326: LD_VAR 0 1
28330: PPUSH
28331: LD_VAR 0 2
28335: PPUSH
28336: LD_VAR 0 3
28340: PPUSH
28341: LD_VAR 0 4
28345: PPUSH
28346: LD_VAR 0 5
28350: PPUSH
28351: CALL_OW 448
28355: IFFALSE 28388
// result := [ chassis , engine , control , weapon ] ;
28357: LD_ADDR_VAR 0 6
28361: PUSH
28362: LD_VAR 0 2
28366: PUSH
28367: LD_VAR 0 3
28371: PUSH
28372: LD_VAR 0 4
28376: PUSH
28377: LD_VAR 0 5
28381: PUSH
28382: EMPTY
28383: LIST
28384: LIST
28385: LIST
28386: LIST
28387: ST_TO_ADDR
// end ;
28388: LD_VAR 0 6
28392: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28393: LD_INT 0
28395: PPUSH
// if not chassis or not engine then
28396: LD_VAR 0 1
28400: NOT
28401: PUSH
28402: LD_VAR 0 2
28406: NOT
28407: OR
28408: IFFALSE 28412
// exit ;
28410: GO 28608
// case engine of engine_solar :
28412: LD_VAR 0 2
28416: PUSH
28417: LD_INT 2
28419: DOUBLE
28420: EQUAL
28421: IFTRUE 28425
28423: GO 28463
28425: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28426: LD_ADDR_VAR 0 3
28430: PUSH
28431: LD_INT 11
28433: PUSH
28434: LD_INT 12
28436: PUSH
28437: LD_INT 13
28439: PUSH
28440: LD_INT 14
28442: PUSH
28443: LD_INT 1
28445: PUSH
28446: LD_INT 2
28448: PUSH
28449: LD_INT 3
28451: PUSH
28452: EMPTY
28453: LIST
28454: LIST
28455: LIST
28456: LIST
28457: LIST
28458: LIST
28459: LIST
28460: ST_TO_ADDR
28461: GO 28592
28463: LD_INT 1
28465: DOUBLE
28466: EQUAL
28467: IFTRUE 28471
28469: GO 28533
28471: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28472: LD_ADDR_VAR 0 3
28476: PUSH
28477: LD_INT 11
28479: PUSH
28480: LD_INT 12
28482: PUSH
28483: LD_INT 13
28485: PUSH
28486: LD_INT 14
28488: PUSH
28489: LD_INT 1
28491: PUSH
28492: LD_INT 2
28494: PUSH
28495: LD_INT 3
28497: PUSH
28498: LD_INT 4
28500: PUSH
28501: LD_INT 5
28503: PUSH
28504: LD_INT 21
28506: PUSH
28507: LD_INT 23
28509: PUSH
28510: LD_INT 22
28512: PUSH
28513: LD_INT 24
28515: PUSH
28516: EMPTY
28517: LIST
28518: LIST
28519: LIST
28520: LIST
28521: LIST
28522: LIST
28523: LIST
28524: LIST
28525: LIST
28526: LIST
28527: LIST
28528: LIST
28529: LIST
28530: ST_TO_ADDR
28531: GO 28592
28533: LD_INT 3
28535: DOUBLE
28536: EQUAL
28537: IFTRUE 28541
28539: GO 28591
28541: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28542: LD_ADDR_VAR 0 3
28546: PUSH
28547: LD_INT 13
28549: PUSH
28550: LD_INT 14
28552: PUSH
28553: LD_INT 2
28555: PUSH
28556: LD_INT 3
28558: PUSH
28559: LD_INT 4
28561: PUSH
28562: LD_INT 5
28564: PUSH
28565: LD_INT 21
28567: PUSH
28568: LD_INT 22
28570: PUSH
28571: LD_INT 23
28573: PUSH
28574: LD_INT 24
28576: PUSH
28577: EMPTY
28578: LIST
28579: LIST
28580: LIST
28581: LIST
28582: LIST
28583: LIST
28584: LIST
28585: LIST
28586: LIST
28587: LIST
28588: ST_TO_ADDR
28589: GO 28592
28591: POP
// result := ( chassis in result ) ;
28592: LD_ADDR_VAR 0 3
28596: PUSH
28597: LD_VAR 0 1
28601: PUSH
28602: LD_VAR 0 3
28606: IN
28607: ST_TO_ADDR
// end ;
28608: LD_VAR 0 3
28612: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28613: LD_INT 0
28615: PPUSH
// if not chassis or not weapon then
28616: LD_VAR 0 1
28620: NOT
28621: PUSH
28622: LD_VAR 0 2
28626: NOT
28627: OR
28628: IFFALSE 28632
// exit ;
28630: GO 29658
// case weapon of us_machine_gun :
28632: LD_VAR 0 2
28636: PUSH
28637: LD_INT 2
28639: DOUBLE
28640: EQUAL
28641: IFTRUE 28645
28643: GO 28675
28645: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28646: LD_ADDR_VAR 0 3
28650: PUSH
28651: LD_INT 1
28653: PUSH
28654: LD_INT 2
28656: PUSH
28657: LD_INT 3
28659: PUSH
28660: LD_INT 4
28662: PUSH
28663: LD_INT 5
28665: PUSH
28666: EMPTY
28667: LIST
28668: LIST
28669: LIST
28670: LIST
28671: LIST
28672: ST_TO_ADDR
28673: GO 29642
28675: LD_INT 3
28677: DOUBLE
28678: EQUAL
28679: IFTRUE 28683
28681: GO 28713
28683: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28684: LD_ADDR_VAR 0 3
28688: PUSH
28689: LD_INT 1
28691: PUSH
28692: LD_INT 2
28694: PUSH
28695: LD_INT 3
28697: PUSH
28698: LD_INT 4
28700: PUSH
28701: LD_INT 5
28703: PUSH
28704: EMPTY
28705: LIST
28706: LIST
28707: LIST
28708: LIST
28709: LIST
28710: ST_TO_ADDR
28711: GO 29642
28713: LD_INT 11
28715: DOUBLE
28716: EQUAL
28717: IFTRUE 28721
28719: GO 28751
28721: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28722: LD_ADDR_VAR 0 3
28726: PUSH
28727: LD_INT 1
28729: PUSH
28730: LD_INT 2
28732: PUSH
28733: LD_INT 3
28735: PUSH
28736: LD_INT 4
28738: PUSH
28739: LD_INT 5
28741: PUSH
28742: EMPTY
28743: LIST
28744: LIST
28745: LIST
28746: LIST
28747: LIST
28748: ST_TO_ADDR
28749: GO 29642
28751: LD_INT 4
28753: DOUBLE
28754: EQUAL
28755: IFTRUE 28759
28757: GO 28785
28759: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28760: LD_ADDR_VAR 0 3
28764: PUSH
28765: LD_INT 2
28767: PUSH
28768: LD_INT 3
28770: PUSH
28771: LD_INT 4
28773: PUSH
28774: LD_INT 5
28776: PUSH
28777: EMPTY
28778: LIST
28779: LIST
28780: LIST
28781: LIST
28782: ST_TO_ADDR
28783: GO 29642
28785: LD_INT 5
28787: DOUBLE
28788: EQUAL
28789: IFTRUE 28793
28791: GO 28819
28793: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28794: LD_ADDR_VAR 0 3
28798: PUSH
28799: LD_INT 2
28801: PUSH
28802: LD_INT 3
28804: PUSH
28805: LD_INT 4
28807: PUSH
28808: LD_INT 5
28810: PUSH
28811: EMPTY
28812: LIST
28813: LIST
28814: LIST
28815: LIST
28816: ST_TO_ADDR
28817: GO 29642
28819: LD_INT 9
28821: DOUBLE
28822: EQUAL
28823: IFTRUE 28827
28825: GO 28853
28827: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28828: LD_ADDR_VAR 0 3
28832: PUSH
28833: LD_INT 2
28835: PUSH
28836: LD_INT 3
28838: PUSH
28839: LD_INT 4
28841: PUSH
28842: LD_INT 5
28844: PUSH
28845: EMPTY
28846: LIST
28847: LIST
28848: LIST
28849: LIST
28850: ST_TO_ADDR
28851: GO 29642
28853: LD_INT 7
28855: DOUBLE
28856: EQUAL
28857: IFTRUE 28861
28859: GO 28887
28861: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28862: LD_ADDR_VAR 0 3
28866: PUSH
28867: LD_INT 2
28869: PUSH
28870: LD_INT 3
28872: PUSH
28873: LD_INT 4
28875: PUSH
28876: LD_INT 5
28878: PUSH
28879: EMPTY
28880: LIST
28881: LIST
28882: LIST
28883: LIST
28884: ST_TO_ADDR
28885: GO 29642
28887: LD_INT 12
28889: DOUBLE
28890: EQUAL
28891: IFTRUE 28895
28893: GO 28921
28895: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28896: LD_ADDR_VAR 0 3
28900: PUSH
28901: LD_INT 2
28903: PUSH
28904: LD_INT 3
28906: PUSH
28907: LD_INT 4
28909: PUSH
28910: LD_INT 5
28912: PUSH
28913: EMPTY
28914: LIST
28915: LIST
28916: LIST
28917: LIST
28918: ST_TO_ADDR
28919: GO 29642
28921: LD_INT 13
28923: DOUBLE
28924: EQUAL
28925: IFTRUE 28929
28927: GO 28955
28929: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28930: LD_ADDR_VAR 0 3
28934: PUSH
28935: LD_INT 2
28937: PUSH
28938: LD_INT 3
28940: PUSH
28941: LD_INT 4
28943: PUSH
28944: LD_INT 5
28946: PUSH
28947: EMPTY
28948: LIST
28949: LIST
28950: LIST
28951: LIST
28952: ST_TO_ADDR
28953: GO 29642
28955: LD_INT 14
28957: DOUBLE
28958: EQUAL
28959: IFTRUE 28963
28961: GO 28981
28963: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28964: LD_ADDR_VAR 0 3
28968: PUSH
28969: LD_INT 4
28971: PUSH
28972: LD_INT 5
28974: PUSH
28975: EMPTY
28976: LIST
28977: LIST
28978: ST_TO_ADDR
28979: GO 29642
28981: LD_INT 6
28983: DOUBLE
28984: EQUAL
28985: IFTRUE 28989
28987: GO 29007
28989: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28990: LD_ADDR_VAR 0 3
28994: PUSH
28995: LD_INT 4
28997: PUSH
28998: LD_INT 5
29000: PUSH
29001: EMPTY
29002: LIST
29003: LIST
29004: ST_TO_ADDR
29005: GO 29642
29007: LD_INT 10
29009: DOUBLE
29010: EQUAL
29011: IFTRUE 29015
29013: GO 29033
29015: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29016: LD_ADDR_VAR 0 3
29020: PUSH
29021: LD_INT 4
29023: PUSH
29024: LD_INT 5
29026: PUSH
29027: EMPTY
29028: LIST
29029: LIST
29030: ST_TO_ADDR
29031: GO 29642
29033: LD_INT 22
29035: DOUBLE
29036: EQUAL
29037: IFTRUE 29041
29039: GO 29067
29041: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29042: LD_ADDR_VAR 0 3
29046: PUSH
29047: LD_INT 11
29049: PUSH
29050: LD_INT 12
29052: PUSH
29053: LD_INT 13
29055: PUSH
29056: LD_INT 14
29058: PUSH
29059: EMPTY
29060: LIST
29061: LIST
29062: LIST
29063: LIST
29064: ST_TO_ADDR
29065: GO 29642
29067: LD_INT 23
29069: DOUBLE
29070: EQUAL
29071: IFTRUE 29075
29073: GO 29101
29075: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29076: LD_ADDR_VAR 0 3
29080: PUSH
29081: LD_INT 11
29083: PUSH
29084: LD_INT 12
29086: PUSH
29087: LD_INT 13
29089: PUSH
29090: LD_INT 14
29092: PUSH
29093: EMPTY
29094: LIST
29095: LIST
29096: LIST
29097: LIST
29098: ST_TO_ADDR
29099: GO 29642
29101: LD_INT 24
29103: DOUBLE
29104: EQUAL
29105: IFTRUE 29109
29107: GO 29135
29109: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29110: LD_ADDR_VAR 0 3
29114: PUSH
29115: LD_INT 11
29117: PUSH
29118: LD_INT 12
29120: PUSH
29121: LD_INT 13
29123: PUSH
29124: LD_INT 14
29126: PUSH
29127: EMPTY
29128: LIST
29129: LIST
29130: LIST
29131: LIST
29132: ST_TO_ADDR
29133: GO 29642
29135: LD_INT 30
29137: DOUBLE
29138: EQUAL
29139: IFTRUE 29143
29141: GO 29169
29143: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29144: LD_ADDR_VAR 0 3
29148: PUSH
29149: LD_INT 11
29151: PUSH
29152: LD_INT 12
29154: PUSH
29155: LD_INT 13
29157: PUSH
29158: LD_INT 14
29160: PUSH
29161: EMPTY
29162: LIST
29163: LIST
29164: LIST
29165: LIST
29166: ST_TO_ADDR
29167: GO 29642
29169: LD_INT 25
29171: DOUBLE
29172: EQUAL
29173: IFTRUE 29177
29175: GO 29195
29177: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29178: LD_ADDR_VAR 0 3
29182: PUSH
29183: LD_INT 13
29185: PUSH
29186: LD_INT 14
29188: PUSH
29189: EMPTY
29190: LIST
29191: LIST
29192: ST_TO_ADDR
29193: GO 29642
29195: LD_INT 27
29197: DOUBLE
29198: EQUAL
29199: IFTRUE 29203
29201: GO 29221
29203: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29204: LD_ADDR_VAR 0 3
29208: PUSH
29209: LD_INT 13
29211: PUSH
29212: LD_INT 14
29214: PUSH
29215: EMPTY
29216: LIST
29217: LIST
29218: ST_TO_ADDR
29219: GO 29642
29221: LD_INT 28
29223: DOUBLE
29224: EQUAL
29225: IFTRUE 29229
29227: GO 29247
29229: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29230: LD_ADDR_VAR 0 3
29234: PUSH
29235: LD_INT 13
29237: PUSH
29238: LD_INT 14
29240: PUSH
29241: EMPTY
29242: LIST
29243: LIST
29244: ST_TO_ADDR
29245: GO 29642
29247: LD_INT 29
29249: DOUBLE
29250: EQUAL
29251: IFTRUE 29255
29253: GO 29273
29255: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29256: LD_ADDR_VAR 0 3
29260: PUSH
29261: LD_INT 13
29263: PUSH
29264: LD_INT 14
29266: PUSH
29267: EMPTY
29268: LIST
29269: LIST
29270: ST_TO_ADDR
29271: GO 29642
29273: LD_INT 31
29275: DOUBLE
29276: EQUAL
29277: IFTRUE 29281
29279: GO 29299
29281: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29282: LD_ADDR_VAR 0 3
29286: PUSH
29287: LD_INT 13
29289: PUSH
29290: LD_INT 14
29292: PUSH
29293: EMPTY
29294: LIST
29295: LIST
29296: ST_TO_ADDR
29297: GO 29642
29299: LD_INT 26
29301: DOUBLE
29302: EQUAL
29303: IFTRUE 29307
29305: GO 29325
29307: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29308: LD_ADDR_VAR 0 3
29312: PUSH
29313: LD_INT 13
29315: PUSH
29316: LD_INT 14
29318: PUSH
29319: EMPTY
29320: LIST
29321: LIST
29322: ST_TO_ADDR
29323: GO 29642
29325: LD_INT 42
29327: DOUBLE
29328: EQUAL
29329: IFTRUE 29333
29331: GO 29359
29333: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29334: LD_ADDR_VAR 0 3
29338: PUSH
29339: LD_INT 21
29341: PUSH
29342: LD_INT 22
29344: PUSH
29345: LD_INT 23
29347: PUSH
29348: LD_INT 24
29350: PUSH
29351: EMPTY
29352: LIST
29353: LIST
29354: LIST
29355: LIST
29356: ST_TO_ADDR
29357: GO 29642
29359: LD_INT 43
29361: DOUBLE
29362: EQUAL
29363: IFTRUE 29367
29365: GO 29393
29367: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29368: LD_ADDR_VAR 0 3
29372: PUSH
29373: LD_INT 21
29375: PUSH
29376: LD_INT 22
29378: PUSH
29379: LD_INT 23
29381: PUSH
29382: LD_INT 24
29384: PUSH
29385: EMPTY
29386: LIST
29387: LIST
29388: LIST
29389: LIST
29390: ST_TO_ADDR
29391: GO 29642
29393: LD_INT 44
29395: DOUBLE
29396: EQUAL
29397: IFTRUE 29401
29399: GO 29427
29401: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29402: LD_ADDR_VAR 0 3
29406: PUSH
29407: LD_INT 21
29409: PUSH
29410: LD_INT 22
29412: PUSH
29413: LD_INT 23
29415: PUSH
29416: LD_INT 24
29418: PUSH
29419: EMPTY
29420: LIST
29421: LIST
29422: LIST
29423: LIST
29424: ST_TO_ADDR
29425: GO 29642
29427: LD_INT 45
29429: DOUBLE
29430: EQUAL
29431: IFTRUE 29435
29433: GO 29461
29435: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29436: LD_ADDR_VAR 0 3
29440: PUSH
29441: LD_INT 21
29443: PUSH
29444: LD_INT 22
29446: PUSH
29447: LD_INT 23
29449: PUSH
29450: LD_INT 24
29452: PUSH
29453: EMPTY
29454: LIST
29455: LIST
29456: LIST
29457: LIST
29458: ST_TO_ADDR
29459: GO 29642
29461: LD_INT 49
29463: DOUBLE
29464: EQUAL
29465: IFTRUE 29469
29467: GO 29495
29469: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29470: LD_ADDR_VAR 0 3
29474: PUSH
29475: LD_INT 21
29477: PUSH
29478: LD_INT 22
29480: PUSH
29481: LD_INT 23
29483: PUSH
29484: LD_INT 24
29486: PUSH
29487: EMPTY
29488: LIST
29489: LIST
29490: LIST
29491: LIST
29492: ST_TO_ADDR
29493: GO 29642
29495: LD_INT 51
29497: DOUBLE
29498: EQUAL
29499: IFTRUE 29503
29501: GO 29529
29503: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29504: LD_ADDR_VAR 0 3
29508: PUSH
29509: LD_INT 21
29511: PUSH
29512: LD_INT 22
29514: PUSH
29515: LD_INT 23
29517: PUSH
29518: LD_INT 24
29520: PUSH
29521: EMPTY
29522: LIST
29523: LIST
29524: LIST
29525: LIST
29526: ST_TO_ADDR
29527: GO 29642
29529: LD_INT 52
29531: DOUBLE
29532: EQUAL
29533: IFTRUE 29537
29535: GO 29563
29537: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29538: LD_ADDR_VAR 0 3
29542: PUSH
29543: LD_INT 21
29545: PUSH
29546: LD_INT 22
29548: PUSH
29549: LD_INT 23
29551: PUSH
29552: LD_INT 24
29554: PUSH
29555: EMPTY
29556: LIST
29557: LIST
29558: LIST
29559: LIST
29560: ST_TO_ADDR
29561: GO 29642
29563: LD_INT 53
29565: DOUBLE
29566: EQUAL
29567: IFTRUE 29571
29569: GO 29589
29571: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29572: LD_ADDR_VAR 0 3
29576: PUSH
29577: LD_INT 23
29579: PUSH
29580: LD_INT 24
29582: PUSH
29583: EMPTY
29584: LIST
29585: LIST
29586: ST_TO_ADDR
29587: GO 29642
29589: LD_INT 46
29591: DOUBLE
29592: EQUAL
29593: IFTRUE 29597
29595: GO 29615
29597: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29598: LD_ADDR_VAR 0 3
29602: PUSH
29603: LD_INT 23
29605: PUSH
29606: LD_INT 24
29608: PUSH
29609: EMPTY
29610: LIST
29611: LIST
29612: ST_TO_ADDR
29613: GO 29642
29615: LD_INT 47
29617: DOUBLE
29618: EQUAL
29619: IFTRUE 29623
29621: GO 29641
29623: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29624: LD_ADDR_VAR 0 3
29628: PUSH
29629: LD_INT 23
29631: PUSH
29632: LD_INT 24
29634: PUSH
29635: EMPTY
29636: LIST
29637: LIST
29638: ST_TO_ADDR
29639: GO 29642
29641: POP
// result := ( chassis in result ) ;
29642: LD_ADDR_VAR 0 3
29646: PUSH
29647: LD_VAR 0 1
29651: PUSH
29652: LD_VAR 0 3
29656: IN
29657: ST_TO_ADDR
// end ;
29658: LD_VAR 0 3
29662: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29663: LD_INT 0
29665: PPUSH
29666: PPUSH
29667: PPUSH
29668: PPUSH
// uc_side = 0 ;
29669: LD_ADDR_OWVAR 20
29673: PUSH
29674: LD_INT 0
29676: ST_TO_ADDR
// uc_nation = 0 ;
29677: LD_ADDR_OWVAR 21
29681: PUSH
29682: LD_INT 0
29684: ST_TO_ADDR
// nat_area := nature_area ;
29685: LD_ADDR_VAR 0 4
29689: PUSH
29690: LD_INT 24
29692: ST_TO_ADDR
// InitHc ;
29693: CALL_OW 19
// for i = 1 to 4 do
29697: LD_ADDR_VAR 0 2
29701: PUSH
29702: DOUBLE
29703: LD_INT 1
29705: DEC
29706: ST_TO_ADDR
29707: LD_INT 4
29709: PUSH
29710: FOR_TO
29711: IFFALSE 29758
// begin hc_class = 18 ;
29713: LD_ADDR_OWVAR 28
29717: PUSH
29718: LD_INT 18
29720: ST_TO_ADDR
// hc_gallery =  ;
29721: LD_ADDR_OWVAR 33
29725: PUSH
29726: LD_STRING 
29728: ST_TO_ADDR
// animal := CreateHuman ;
29729: LD_ADDR_VAR 0 3
29733: PUSH
29734: CALL_OW 44
29738: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29739: LD_VAR 0 3
29743: PPUSH
29744: LD_VAR 0 4
29748: PPUSH
29749: LD_INT 0
29751: PPUSH
29752: CALL_OW 49
// end ;
29756: GO 29710
29758: POP
29759: POP
// for i = 1 to 3 do
29760: LD_ADDR_VAR 0 2
29764: PUSH
29765: DOUBLE
29766: LD_INT 1
29768: DEC
29769: ST_TO_ADDR
29770: LD_INT 3
29772: PUSH
29773: FOR_TO
29774: IFFALSE 29838
// begin hc_class = class_tiger ;
29776: LD_ADDR_OWVAR 28
29780: PUSH
29781: LD_INT 14
29783: ST_TO_ADDR
// hc_gallery =  ;
29784: LD_ADDR_OWVAR 33
29788: PUSH
29789: LD_STRING 
29791: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29792: LD_ADDR_OWVAR 35
29796: PUSH
29797: LD_INT 5
29799: NEG
29800: PPUSH
29801: LD_INT 5
29803: PPUSH
29804: CALL_OW 12
29808: ST_TO_ADDR
// animal := CreateHuman ;
29809: LD_ADDR_VAR 0 3
29813: PUSH
29814: CALL_OW 44
29818: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29819: LD_VAR 0 3
29823: PPUSH
29824: LD_VAR 0 4
29828: PPUSH
29829: LD_INT 0
29831: PPUSH
29832: CALL_OW 49
// end ;
29836: GO 29773
29838: POP
29839: POP
// for i = 1 to 3 do
29840: LD_ADDR_VAR 0 2
29844: PUSH
29845: DOUBLE
29846: LD_INT 1
29848: DEC
29849: ST_TO_ADDR
29850: LD_INT 3
29852: PUSH
29853: FOR_TO
29854: IFFALSE 29957
// begin hc_class = class_apeman ;
29856: LD_ADDR_OWVAR 28
29860: PUSH
29861: LD_INT 12
29863: ST_TO_ADDR
// hc_gallery =  ;
29864: LD_ADDR_OWVAR 33
29868: PUSH
29869: LD_STRING 
29871: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29872: LD_ADDR_OWVAR 35
29876: PUSH
29877: LD_INT 2
29879: NEG
29880: PPUSH
29881: LD_INT 2
29883: PPUSH
29884: CALL_OW 12
29888: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29889: LD_ADDR_OWVAR 31
29893: PUSH
29894: LD_INT 1
29896: PPUSH
29897: LD_INT 3
29899: PPUSH
29900: CALL_OW 12
29904: PUSH
29905: LD_INT 1
29907: PPUSH
29908: LD_INT 3
29910: PPUSH
29911: CALL_OW 12
29915: PUSH
29916: LD_INT 0
29918: PUSH
29919: LD_INT 0
29921: PUSH
29922: EMPTY
29923: LIST
29924: LIST
29925: LIST
29926: LIST
29927: ST_TO_ADDR
// animal := CreateHuman ;
29928: LD_ADDR_VAR 0 3
29932: PUSH
29933: CALL_OW 44
29937: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29938: LD_VAR 0 3
29942: PPUSH
29943: LD_VAR 0 4
29947: PPUSH
29948: LD_INT 0
29950: PPUSH
29951: CALL_OW 49
// end ;
29955: GO 29853
29957: POP
29958: POP
// for i = 1 to 3 do
29959: LD_ADDR_VAR 0 2
29963: PUSH
29964: DOUBLE
29965: LD_INT 1
29967: DEC
29968: ST_TO_ADDR
29969: LD_INT 3
29971: PUSH
29972: FOR_TO
29973: IFFALSE 30020
// begin hc_class = 13 ;
29975: LD_ADDR_OWVAR 28
29979: PUSH
29980: LD_INT 13
29982: ST_TO_ADDR
// hc_gallery =  ;
29983: LD_ADDR_OWVAR 33
29987: PUSH
29988: LD_STRING 
29990: ST_TO_ADDR
// animal := CreateHuman ;
29991: LD_ADDR_VAR 0 3
29995: PUSH
29996: CALL_OW 44
30000: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30001: LD_VAR 0 3
30005: PPUSH
30006: LD_VAR 0 4
30010: PPUSH
30011: LD_INT 0
30013: PPUSH
30014: CALL_OW 49
// end ;
30018: GO 29972
30020: POP
30021: POP
// for i = 1 to 3 do
30022: LD_ADDR_VAR 0 2
30026: PUSH
30027: DOUBLE
30028: LD_INT 1
30030: DEC
30031: ST_TO_ADDR
30032: LD_INT 3
30034: PUSH
30035: FOR_TO
30036: IFFALSE 30081
// begin hc_class = 20 ;
30038: LD_ADDR_OWVAR 28
30042: PUSH
30043: LD_INT 20
30045: ST_TO_ADDR
// hc_gallery =  ;
30046: LD_ADDR_OWVAR 33
30050: PUSH
30051: LD_STRING 
30053: ST_TO_ADDR
// animal := CreateHuman ;
30054: LD_ADDR_VAR 0 3
30058: PUSH
30059: CALL_OW 44
30063: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30064: LD_VAR 0 3
30068: PPUSH
30069: LD_INT 4
30071: PPUSH
30072: LD_INT 0
30074: PPUSH
30075: CALL_OW 49
// end ;
30079: GO 30035
30081: POP
30082: POP
// end ; end_of_file
30083: LD_VAR 0 1
30087: RET
// export function Action ; begin
30088: LD_INT 0
30090: PPUSH
// InGameOn ;
30091: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30095: LD_EXP 11
30099: PPUSH
30100: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30104: LD_EXP 11
30108: PPUSH
30109: LD_STRING D1-JMM-1
30111: PPUSH
30112: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30116: LD_EXP 12
30120: PPUSH
30121: LD_STRING D1-Roth-1
30123: PPUSH
30124: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30128: LD_EXP 11
30132: PPUSH
30133: LD_STRING D1-JMM-2
30135: PPUSH
30136: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30140: LD_EXP 12
30144: PPUSH
30145: LD_STRING D1-Roth-2
30147: PPUSH
30148: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30152: LD_EXP 11
30156: PPUSH
30157: LD_STRING D1-JMM-3
30159: PPUSH
30160: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30164: LD_EXP 12
30168: PPUSH
30169: LD_STRING D1-Roth-3
30171: PPUSH
30172: CALL_OW 88
// ComInvisible ( Roth ) ;
30176: LD_EXP 12
30180: PPUSH
30181: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30185: LD_INT 46
30187: PPUSH
30188: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30192: LD_EXP 11
30196: PPUSH
30197: LD_STRING D1-JMM-4
30199: PPUSH
30200: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30204: LD_INT 10
30206: PPUSH
30207: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30211: LD_EXP 12
30215: PPUSH
30216: LD_EXP 11
30220: PPUSH
30221: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30225: LD_EXP 11
30229: PPUSH
30230: LD_STRING D1-JMM-4a
30232: PPUSH
30233: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30237: LD_EXP 12
30241: PPUSH
30242: LD_STRING D1-Roth-4
30244: PPUSH
30245: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30249: LD_EXP 11
30253: PPUSH
30254: LD_STRING D1-JMM-5
30256: PPUSH
30257: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30261: LD_EXP 12
30265: PPUSH
30266: LD_STRING D1-Roth-5
30268: PPUSH
30269: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30273: LD_EXP 11
30277: PPUSH
30278: LD_STRING D1-JMM-6
30280: PPUSH
30281: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30285: LD_EXP 12
30289: PPUSH
30290: LD_STRING D1-Roth-6
30292: PPUSH
30293: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30297: LD_EXP 11
30301: PPUSH
30302: LD_STRING D1-JMM-7
30304: PPUSH
30305: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30309: LD_EXP 13
30313: PPUSH
30314: LD_EXP 11
30318: PPUSH
30319: CALL_OW 250
30323: PPUSH
30324: LD_EXP 11
30328: PPUSH
30329: CALL_OW 251
30333: PPUSH
30334: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30338: LD_EXP 12
30342: PPUSH
30343: LD_STRING D1-Roth-7
30345: PPUSH
30346: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30350: LD_INT 10
30352: PPUSH
30353: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30357: LD_EXP 13
30361: PPUSH
30362: LD_EXP 11
30366: PPUSH
30367: CALL_OW 296
30371: PUSH
30372: LD_INT 6
30374: LESS
30375: IFFALSE 30350
// ComTurnUnit ( Powell , JMM ) ;
30377: LD_EXP 13
30381: PPUSH
30382: LD_EXP 11
30386: PPUSH
30387: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30391: LD_EXP 13
30395: PPUSH
30396: LD_STRING D1-Pow-7
30398: PPUSH
30399: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30403: LD_EXP 11
30407: PPUSH
30408: LD_EXP 13
30412: PPUSH
30413: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30417: LD_EXP 12
30421: PPUSH
30422: LD_EXP 13
30426: PPUSH
30427: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30431: LD_EXP 11
30435: PPUSH
30436: LD_STRING D1-JMM-8
30438: PPUSH
30439: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30443: LD_EXP 13
30447: PPUSH
30448: LD_STRING D1-Pow-8
30450: PPUSH
30451: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30455: LD_EXP 11
30459: PPUSH
30460: LD_STRING D1-JMM-9
30462: PPUSH
30463: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30467: LD_EXP 13
30471: PPUSH
30472: LD_INT 124
30474: PPUSH
30475: LD_INT 61
30477: PPUSH
30478: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30482: LD_INT 35
30484: PPUSH
30485: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30489: LD_EXP 11
30493: PPUSH
30494: LD_EXP 13
30498: PPUSH
30499: CALL_OW 296
30503: PUSH
30504: LD_INT 6
30506: GREATER
30507: IFFALSE 30482
// SayRadio ( Powell , D1-Pow-9 ) ;
30509: LD_EXP 13
30513: PPUSH
30514: LD_STRING D1-Pow-9
30516: PPUSH
30517: CALL_OW 94
// RemoveUnit ( Powell ) ;
30521: LD_EXP 13
30525: PPUSH
30526: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30530: LD_EXP 13
30534: PPUSH
30535: LD_INT 18
30537: PPUSH
30538: CALL_OW 52
// if Joan and not Joan in selected then
30542: LD_EXP 33
30546: PUSH
30547: LD_EXP 33
30551: PUSH
30552: LD_EXP 3
30556: IN
30557: NOT
30558: AND
30559: IFFALSE 30573
// SayRadio ( Joan , D1-Joan-9 ) ;
30561: LD_EXP 33
30565: PPUSH
30566: LD_STRING D1-Joan-9
30568: PPUSH
30569: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30573: LD_EXP 12
30577: PPUSH
30578: LD_EXP 11
30582: PPUSH
30583: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30587: LD_EXP 11
30591: PPUSH
30592: LD_EXP 12
30596: PPUSH
30597: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30601: LD_EXP 12
30605: PPUSH
30606: LD_STRING D1-Roth-9
30608: PPUSH
30609: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30613: LD_EXP 11
30617: PPUSH
30618: LD_STRING D1-JMM-10
30620: PPUSH
30621: CALL_OW 88
// InGameOff ;
30625: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30629: LD_STRING M1
30631: PPUSH
30632: CALL_OW 337
// SaveForQuickRestart ;
30636: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30640: LD_INT 7
30642: PPUSH
30643: LD_INT 1
30645: PPUSH
30646: LD_INT 2
30648: PPUSH
30649: LD_INT 1
30651: PPUSH
30652: CALL_OW 80
// wait ( 0 0$3 ) ;
30656: LD_INT 105
30658: PPUSH
30659: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30663: LD_EXP 12
30667: PPUSH
30668: LD_INT 124
30670: PPUSH
30671: LD_INT 18
30673: PPUSH
30674: CALL_OW 111
// AddComInvisible ( Roth ) ;
30678: LD_EXP 12
30682: PPUSH
30683: CALL_OW 212
// wait ( 0 0$30 ) ;
30687: LD_INT 1050
30689: PPUSH
30690: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
30694: LD_EXP 12
30698: PPUSH
30699: LD_INT 2100
30701: PPUSH
30702: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30706: LD_EXP 12
30710: PPUSH
30711: LD_INT 156
30713: PPUSH
30714: LD_INT 20
30716: PPUSH
30717: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30721: LD_EXP 12
30725: PPUSH
30726: LD_INT 178
30728: PPUSH
30729: LD_INT 42
30731: PPUSH
30732: CALL_OW 171
// AddComInvisible ( Roth ) ;
30736: LD_EXP 12
30740: PPUSH
30741: CALL_OW 212
// end ;
30745: LD_VAR 0 1
30749: RET
// every 0 0$1 do var i , tmp ;
30750: GO 30752
30752: DISABLE
30753: LD_INT 0
30755: PPUSH
30756: PPUSH
// begin tmp := selected union friends union others ;
30757: LD_ADDR_VAR 0 2
30761: PUSH
30762: LD_EXP 3
30766: PUSH
30767: LD_EXP 4
30771: UNION
30772: PUSH
30773: LD_EXP 5
30777: UNION
30778: ST_TO_ADDR
// if not tmp then
30779: LD_VAR 0 2
30783: NOT
30784: IFFALSE 30788
// exit ;
30786: GO 30860
// repeat wait ( 0 0$1 ) ;
30788: LD_INT 35
30790: PPUSH
30791: CALL_OW 67
// for i in tmp do
30795: LD_ADDR_VAR 0 1
30799: PUSH
30800: LD_VAR 0 2
30804: PUSH
30805: FOR_IN
30806: IFFALSE 30851
// if CanSpot ( JMM , i ) then
30808: LD_EXP 11
30812: PPUSH
30813: LD_VAR 0 1
30817: PPUSH
30818: CALL 27396 0 2
30822: IFFALSE 30849
// begin tmp := tmp diff i ;
30824: LD_ADDR_VAR 0 2
30828: PUSH
30829: LD_VAR 0 2
30833: PUSH
30834: LD_VAR 0 1
30838: DIFF
30839: ST_TO_ADDR
// Spot ( i ) ;
30840: LD_VAR 0 1
30844: PPUSH
30845: CALL 30863 0 1
// end ;
30849: GO 30805
30851: POP
30852: POP
// until not tmp ;
30853: LD_VAR 0 2
30857: NOT
30858: IFFALSE 30788
// end ;
30860: PPOPN 2
30862: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30863: LD_INT 0
30865: PPUSH
30866: PPUSH
30867: PPUSH
30868: PPUSH
// if not unit then
30869: LD_VAR 0 1
30873: NOT
30874: IFFALSE 30878
// exit ;
30876: GO 32767
// InGameOn ;
30878: CALL_OW 8
// side := GetSide ( JMM ) ;
30882: LD_ADDR_VAR 0 4
30886: PUSH
30887: LD_EXP 11
30891: PPUSH
30892: CALL_OW 255
30896: ST_TO_ADDR
// joined := false ;
30897: LD_ADDR_VAR 0 5
30901: PUSH
30902: LD_INT 0
30904: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30905: LD_ADDR_VAR 0 3
30909: PUSH
30910: LD_VAR 0 1
30914: PPUSH
30915: CALL_OW 310
30919: ST_TO_ADDR
// if building then
30920: LD_VAR 0 3
30924: IFFALSE 30983
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30926: LD_EXP 11
30930: PPUSH
30931: LD_VAR 0 1
30935: PPUSH
30936: CALL_OW 255
30940: PPUSH
30941: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30945: LD_EXP 11
30949: PPUSH
30950: LD_VAR 0 3
30954: PPUSH
30955: CALL_OW 120
// repeat wait ( 3 ) ;
30959: LD_INT 3
30961: PPUSH
30962: CALL_OW 67
// until IsInUnit ( JMM ) ;
30966: LD_EXP 11
30970: PPUSH
30971: CALL_OW 310
30975: IFFALSE 30959
// DialogueOn ;
30977: CALL_OW 6
// end else
30981: GO 31015
// begin ComTurnUnit ( JMM , unit ) ;
30983: LD_EXP 11
30987: PPUSH
30988: LD_VAR 0 1
30992: PPUSH
30993: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30997: LD_VAR 0 1
31001: PPUSH
31002: LD_EXP 11
31006: PPUSH
31007: CALL_OW 119
// DialogueOn ;
31011: CALL_OW 6
// end ; if unit = Joan then
31015: LD_VAR 0 1
31019: PUSH
31020: LD_EXP 33
31024: EQUAL
31025: IFFALSE 31135
// begin joined := true ;
31027: LD_ADDR_VAR 0 5
31031: PUSH
31032: LD_INT 1
31034: ST_TO_ADDR
// if Joan in selected then
31035: LD_EXP 33
31039: PUSH
31040: LD_EXP 3
31044: IN
31045: IFFALSE 31073
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31047: LD_EXP 33
31051: PPUSH
31052: LD_STRING D3-Joan-Joan-1
31054: PPUSH
31055: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31059: LD_EXP 11
31063: PPUSH
31064: LD_STRING D3-Joan-JMM-1
31066: PPUSH
31067: CALL_OW 88
// end else
31071: GO 31133
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31073: LD_EXP 33
31077: PPUSH
31078: LD_STRING D4-Joan-Joan-1
31080: PPUSH
31081: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31085: LD_EXP 11
31089: PPUSH
31090: LD_STRING D4-Joan-JMM-1
31092: PPUSH
31093: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31097: LD_EXP 33
31101: PPUSH
31102: LD_STRING D4-Joan-Joan-2
31104: PPUSH
31105: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31109: LD_EXP 11
31113: PPUSH
31114: LD_STRING D4-Joan-JMM-2
31116: PPUSH
31117: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31121: LD_EXP 33
31125: PPUSH
31126: LD_STRING D4-Joan-Joan-3
31128: PPUSH
31129: CALL_OW 88
// end ; end else
31133: GO 32575
// if unit = Lisa then
31135: LD_VAR 0 1
31139: PUSH
31140: LD_EXP 20
31144: EQUAL
31145: IFFALSE 31337
// begin if Lisa in selected then
31147: LD_EXP 20
31151: PUSH
31152: LD_EXP 3
31156: IN
31157: IFFALSE 31270
// begin if GetSide ( Joan ) = 7 then
31159: LD_EXP 33
31163: PPUSH
31164: CALL_OW 255
31168: PUSH
31169: LD_INT 7
31171: EQUAL
31172: IFFALSE 31236
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31174: LD_EXP 20
31178: PPUSH
31179: LD_STRING D3-LisaJ-Lisa-1
31181: PPUSH
31182: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31186: LD_EXP 11
31190: PPUSH
31191: LD_STRING D3-LisaJ-JMM-1
31193: PPUSH
31194: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31198: LD_EXP 20
31202: PPUSH
31203: LD_STRING D3-LisaJ-Lisa-2
31205: PPUSH
31206: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31210: LD_EXP 11
31214: PPUSH
31215: LD_STRING D3-LisaJ-JMM-2
31217: PPUSH
31218: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31222: LD_EXP 20
31226: PPUSH
31227: LD_STRING D3-LisaJ-Lisa-3
31229: PPUSH
31230: CALL_OW 88
// end else
31234: GO 31268
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31236: LD_EXP 20
31240: PPUSH
31241: LD_STRING D3-LisaL-Lisa-1
31243: PPUSH
31244: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31248: LD_EXP 11
31252: PPUSH
31253: LD_STRING D3-LisaL-JMM-1
31255: PPUSH
31256: CALL_OW 88
// joined := true ;
31260: LD_ADDR_VAR 0 5
31264: PUSH
31265: LD_INT 1
31267: ST_TO_ADDR
// end ; end else
31268: GO 31335
// begin if GetSide ( Joan ) = 7 then
31270: LD_EXP 33
31274: PPUSH
31275: CALL_OW 255
31279: PUSH
31280: LD_INT 7
31282: EQUAL
31283: IFFALSE 31323
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31285: LD_EXP 20
31289: PPUSH
31290: LD_STRING D4-LisaJ-Lisa-1
31292: PPUSH
31293: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31297: LD_EXP 11
31301: PPUSH
31302: LD_STRING D4-LisaJ-JMM-1
31304: PPUSH
31305: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31309: LD_EXP 20
31313: PPUSH
31314: LD_STRING D4-LisaJ-Lisa-2
31316: PPUSH
31317: CALL_OW 88
// end else
31321: GO 31335
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31323: LD_EXP 20
31327: PPUSH
31328: LD_STRING D4-LisaL-Lisa-1
31330: PPUSH
31331: CALL_OW 88
// end ; end ; end else
31335: GO 32575
// if unit = Frank then
31337: LD_VAR 0 1
31341: PUSH
31342: LD_EXP 30
31346: EQUAL
31347: IFFALSE 31487
// begin joined := true ;
31349: LD_ADDR_VAR 0 5
31353: PUSH
31354: LD_INT 1
31356: ST_TO_ADDR
// if Frank in selected then
31357: LD_EXP 30
31361: PUSH
31362: LD_EXP 3
31366: IN
31367: IFFALSE 31437
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31369: LD_EXP 30
31373: PPUSH
31374: LD_STRING D3-Frank-Frank-1
31376: PPUSH
31377: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31381: LD_EXP 11
31385: PPUSH
31386: LD_STRING D3-Frank-JMM-1
31388: PPUSH
31389: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31393: LD_EXP 30
31397: PPUSH
31398: LD_STRING D3-Frank-Frank-2
31400: PPUSH
31401: CALL_OW 88
// if reached_lab then
31405: LD_EXP 6
31409: IFFALSE 31435
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31411: LD_EXP 11
31415: PPUSH
31416: LD_STRING D3-Frank-JMM-2
31418: PPUSH
31419: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31423: LD_EXP 30
31427: PPUSH
31428: LD_STRING D3-Frank-Frank-3
31430: PPUSH
31431: CALL_OW 88
// end ; end else
31435: GO 31485
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31437: LD_EXP 30
31441: PPUSH
31442: LD_STRING D4-Frank-Frank-1
31444: PPUSH
31445: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31449: LD_EXP 11
31453: PPUSH
31454: LD_STRING D4-Frank-JMM-1
31456: PPUSH
31457: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31461: LD_EXP 30
31465: PPUSH
31466: LD_STRING D4-Frank-Frank-2
31468: PPUSH
31469: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31473: LD_EXP 11
31477: PPUSH
31478: LD_STRING D4-Frank-JMM-2
31480: PPUSH
31481: CALL_OW 88
// end ; end else
31485: GO 32575
// if unit = Brown then
31487: LD_VAR 0 1
31491: PUSH
31492: LD_EXP 25
31496: EQUAL
31497: IFFALSE 31593
// begin if Brown in selected or gamma_commander = 2 then
31499: LD_EXP 25
31503: PUSH
31504: LD_EXP 3
31508: IN
31509: PUSH
31510: LD_EXP 10
31514: PUSH
31515: LD_INT 2
31517: EQUAL
31518: OR
31519: IFFALSE 31555
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31521: LD_EXP 25
31525: PPUSH
31526: LD_STRING D3-Soldier1-Sol1-1
31528: PPUSH
31529: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31533: LD_EXP 11
31537: PPUSH
31538: LD_STRING D3-Soldier1-JMM-1
31540: PPUSH
31541: CALL_OW 88
// joined := true ;
31545: LD_ADDR_VAR 0 5
31549: PUSH
31550: LD_INT 1
31552: ST_TO_ADDR
// end else
31553: GO 31591
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31555: LD_EXP 25
31559: PPUSH
31560: LD_STRING D4-Soldier1-Sol1-1
31562: PPUSH
31563: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31567: LD_EXP 11
31571: PPUSH
31572: LD_STRING D4-Soldier1-JMM-1
31574: PPUSH
31575: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31579: LD_EXP 25
31583: PPUSH
31584: LD_STRING D4-Soldier1-Sol1-2
31586: PPUSH
31587: CALL_OW 88
// end ; end else
31591: GO 32575
// if unit = Donaldson then
31593: LD_VAR 0 1
31597: PUSH
31598: LD_EXP 21
31602: EQUAL
31603: IFFALSE 31699
// begin if Donaldson in selected or gamma_commander = 1 then
31605: LD_EXP 21
31609: PUSH
31610: LD_EXP 3
31614: IN
31615: PUSH
31616: LD_EXP 10
31620: PUSH
31621: LD_INT 1
31623: EQUAL
31624: OR
31625: IFFALSE 31661
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31627: LD_EXP 21
31631: PPUSH
31632: LD_STRING D3-Soldier2-FSol2-1
31634: PPUSH
31635: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31639: LD_EXP 11
31643: PPUSH
31644: LD_STRING D3-Soldier2-JMM-1
31646: PPUSH
31647: CALL_OW 88
// joined := true ;
31651: LD_ADDR_VAR 0 5
31655: PUSH
31656: LD_INT 1
31658: ST_TO_ADDR
// end else
31659: GO 31697
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31661: LD_VAR 0 1
31665: PPUSH
31666: LD_STRING D4-Soldier1-FSol1-1
31668: PPUSH
31669: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31673: LD_EXP 11
31677: PPUSH
31678: LD_STRING D4-Soldier1-JMM-1
31680: PPUSH
31681: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31685: LD_VAR 0 1
31689: PPUSH
31690: LD_STRING D4-Soldier1-FSol1-2
31692: PPUSH
31693: CALL_OW 88
// end ; end else
31697: GO 32575
// if unit = Cyrus then
31699: LD_VAR 0 1
31703: PUSH
31704: LD_EXP 23
31708: EQUAL
31709: IFFALSE 31783
// begin if Cyrus in selected then
31711: LD_EXP 23
31715: PUSH
31716: LD_EXP 3
31720: IN
31721: IFFALSE 31757
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31723: LD_EXP 23
31727: PPUSH
31728: LD_STRING D3-Cyrus-Cyrus-1
31730: PPUSH
31731: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31735: LD_EXP 11
31739: PPUSH
31740: LD_STRING D3-Cyrus-JMM-1
31742: PPUSH
31743: CALL_OW 88
// joined := true ;
31747: LD_ADDR_VAR 0 5
31751: PUSH
31752: LD_INT 1
31754: ST_TO_ADDR
// end else
31755: GO 31781
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31757: LD_EXP 23
31761: PPUSH
31762: LD_STRING D4-Cyrus-Cyrus-1
31764: PPUSH
31765: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31769: LD_EXP 11
31773: PPUSH
31774: LD_STRING D4-Cyrus-JMM-1
31776: PPUSH
31777: CALL_OW 88
// end ; end else
31781: GO 32575
// if unit = Bobby then
31783: LD_VAR 0 1
31787: PUSH
31788: LD_EXP 22
31792: EQUAL
31793: IFFALSE 31879
// begin if Bobby in selected then
31795: LD_EXP 22
31799: PUSH
31800: LD_EXP 3
31804: IN
31805: IFFALSE 31841
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31807: LD_EXP 22
31811: PPUSH
31812: LD_STRING D3-Bobby-Bobby-1
31814: PPUSH
31815: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31819: LD_EXP 11
31823: PPUSH
31824: LD_STRING D3-Bobby-JMM-1
31826: PPUSH
31827: CALL_OW 88
// joined := true ;
31831: LD_ADDR_VAR 0 5
31835: PUSH
31836: LD_INT 1
31838: ST_TO_ADDR
// end else
31839: GO 31877
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31841: LD_EXP 22
31845: PPUSH
31846: LD_STRING D4-Bobby-Bobby-1
31848: PPUSH
31849: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31853: LD_EXP 11
31857: PPUSH
31858: LD_STRING D4-Bobby-JMM-1
31860: PPUSH
31861: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31865: LD_EXP 22
31869: PPUSH
31870: LD_STRING D4-Bobby-Bobby-2
31872: PPUSH
31873: CALL_OW 88
// end ; end else
31877: GO 32575
// if unit = Cornel then
31879: LD_VAR 0 1
31883: PUSH
31884: LD_EXP 28
31888: EQUAL
31889: IFFALSE 31987
// begin if Cornel in selected then
31891: LD_EXP 28
31895: PUSH
31896: LD_EXP 3
31900: IN
31901: IFFALSE 31949
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31903: LD_EXP 28
31907: PPUSH
31908: LD_STRING D3-Mark-Corn-1
31910: PPUSH
31911: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31915: LD_EXP 11
31919: PPUSH
31920: LD_STRING D3-Mark-JMM-1
31922: PPUSH
31923: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31927: LD_EXP 28
31931: PPUSH
31932: LD_STRING D3-Mark-Corn-2
31934: PPUSH
31935: CALL_OW 88
// joined := true ;
31939: LD_ADDR_VAR 0 5
31943: PUSH
31944: LD_INT 1
31946: ST_TO_ADDR
// end else
31947: GO 31985
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31949: LD_EXP 28
31953: PPUSH
31954: LD_STRING D4-Mark-Corn-1
31956: PPUSH
31957: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31961: LD_EXP 11
31965: PPUSH
31966: LD_STRING D3-Joan-JMM-1
31968: PPUSH
31969: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31973: LD_EXP 28
31977: PPUSH
31978: LD_STRING D4-Mark-Corn-2
31980: PPUSH
31981: CALL_OW 88
// end ; end else
31985: GO 32575
// if unit = Gary then
31987: LD_VAR 0 1
31991: PUSH
31992: LD_EXP 29
31996: EQUAL
31997: IFFALSE 32081
// begin if Gary in selected then
31999: LD_EXP 29
32003: PUSH
32004: LD_EXP 3
32008: IN
32009: IFFALSE 32045
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32011: LD_EXP 29
32015: PPUSH
32016: LD_STRING D3-Gary-Gary-1
32018: PPUSH
32019: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32023: LD_EXP 11
32027: PPUSH
32028: LD_STRING D3-Gary-JMM-1
32030: PPUSH
32031: CALL_OW 88
// joined := true ;
32035: LD_ADDR_VAR 0 5
32039: PUSH
32040: LD_INT 1
32042: ST_TO_ADDR
// end else
32043: GO 32079
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32045: LD_EXP 29
32049: PPUSH
32050: LD_STRING D4-Gary-Gary-1
32052: PPUSH
32053: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32057: LD_EXP 29
32061: PPUSH
32062: LD_INT 1
32064: PPUSH
32065: CALL_OW 235
// DialogueOff ;
32069: CALL_OW 7
// InGameOff ;
32073: CALL_OW 9
// exit ;
32077: GO 32767
// end ; end else
32079: GO 32575
// if unit = Kikuchi then
32081: LD_VAR 0 1
32085: PUSH
32086: LD_EXP 31
32090: EQUAL
32091: IFFALSE 32175
// begin if Kikuchi in selected then
32093: LD_EXP 31
32097: PUSH
32098: LD_EXP 3
32102: IN
32103: IFFALSE 32139
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32105: LD_EXP 31
32109: PPUSH
32110: LD_STRING D3-Yamako-Yam-1
32112: PPUSH
32113: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32117: LD_EXP 11
32121: PPUSH
32122: LD_STRING D3-Soldier2-JMM-1
32124: PPUSH
32125: CALL_OW 88
// joined := true ;
32129: LD_ADDR_VAR 0 5
32133: PUSH
32134: LD_INT 1
32136: ST_TO_ADDR
// end else
32137: GO 32173
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32139: LD_EXP 31
32143: PPUSH
32144: LD_STRING D4-Yamako-Yam-1
32146: PPUSH
32147: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32151: LD_EXP 31
32155: PPUSH
32156: LD_INT 1
32158: PPUSH
32159: CALL_OW 235
// DialogueOff ;
32163: CALL_OW 7
// InGameOff ;
32167: CALL_OW 9
// exit ;
32171: GO 32767
// end ; end else
32173: GO 32575
// if unit = Gladstone then
32175: LD_VAR 0 1
32179: PUSH
32180: LD_EXP 26
32184: EQUAL
32185: IFFALSE 32259
// begin if Gladstone in selected then
32187: LD_EXP 26
32191: PUSH
32192: LD_EXP 3
32196: IN
32197: IFFALSE 32233
// begin joined := true ;
32199: LD_ADDR_VAR 0 5
32203: PUSH
32204: LD_INT 1
32206: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32207: LD_EXP 11
32211: PPUSH
32212: LD_STRING D3-Tim-JMM-1
32214: PPUSH
32215: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32219: LD_EXP 26
32223: PPUSH
32224: LD_STRING D3-Tim-Glad-1
32226: PPUSH
32227: CALL_OW 88
// end else
32231: GO 32257
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32233: LD_EXP 11
32237: PPUSH
32238: LD_STRING D4-Tim-JMM-1
32240: PPUSH
32241: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32245: LD_EXP 26
32249: PPUSH
32250: LD_STRING D4-Tim-Glad-1
32252: PPUSH
32253: CALL_OW 88
// end ; end else
32257: GO 32575
// if unit = Denis then
32259: LD_VAR 0 1
32263: PUSH
32264: LD_EXP 24
32268: EQUAL
32269: IFFALSE 32305
// begin joined := true ;
32271: LD_ADDR_VAR 0 5
32275: PUSH
32276: LD_INT 1
32278: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32279: LD_EXP 24
32283: PPUSH
32284: LD_STRING D3-Denis-Den-1
32286: PPUSH
32287: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32291: LD_EXP 11
32295: PPUSH
32296: LD_STRING D3-Denis-JMM-1
32298: PPUSH
32299: CALL_OW 88
// end else
32303: GO 32575
// if unit = Simms then
32305: LD_VAR 0 1
32309: PUSH
32310: LD_EXP 32
32314: EQUAL
32315: IFFALSE 32351
// begin joined := true ;
32317: LD_ADDR_VAR 0 5
32321: PUSH
32322: LD_INT 1
32324: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32325: LD_EXP 32
32329: PPUSH
32330: LD_STRING D3-Simms-Sim-1
32332: PPUSH
32333: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32337: LD_EXP 11
32341: PPUSH
32342: LD_STRING D3-Simms-JMM-1
32344: PPUSH
32345: CALL_OW 88
// end else
32349: GO 32575
// if unit = DeltaDoctor then
32351: LD_VAR 0 1
32355: PUSH
32356: LD_EXP 34
32360: EQUAL
32361: IFFALSE 32397
// begin joined := true ;
32363: LD_ADDR_VAR 0 5
32367: PUSH
32368: LD_INT 1
32370: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32371: LD_EXP 34
32375: PPUSH
32376: LD_STRING D3-Soldier1-Sol1-1
32378: PPUSH
32379: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32383: LD_EXP 11
32387: PPUSH
32388: LD_STRING D3-Soldier1-JMM-1
32390: PPUSH
32391: CALL_OW 88
// end else
32395: GO 32575
// begin joined := unit in selected ;
32397: LD_ADDR_VAR 0 5
32401: PUSH
32402: LD_VAR 0 1
32406: PUSH
32407: LD_EXP 3
32411: IN
32412: ST_TO_ADDR
// if joined then
32413: LD_VAR 0 5
32417: IFFALSE 32486
// begin if GetSex ( unit ) = sex_male then
32419: LD_VAR 0 1
32423: PPUSH
32424: CALL_OW 258
32428: PUSH
32429: LD_INT 1
32431: EQUAL
32432: IFFALSE 32460
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32434: LD_VAR 0 1
32438: PPUSH
32439: LD_STRING D3-Soldier1-Sol1-1
32441: PPUSH
32442: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32446: LD_EXP 11
32450: PPUSH
32451: LD_STRING D3-Soldier1-JMM-1
32453: PPUSH
32454: CALL_OW 88
// end else
32458: GO 32484
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32460: LD_VAR 0 1
32464: PPUSH
32465: LD_STRING D3-Soldier2-FSol2-1
32467: PPUSH
32468: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32472: LD_EXP 11
32476: PPUSH
32477: LD_STRING D3-Soldier2-JMM-1
32479: PPUSH
32480: CALL_OW 88
// end ; end else
32484: GO 32575
// begin if GetSex ( unit ) = sex_male then
32486: LD_VAR 0 1
32490: PPUSH
32491: CALL_OW 258
32495: PUSH
32496: LD_INT 1
32498: EQUAL
32499: IFFALSE 32539
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32501: LD_VAR 0 1
32505: PPUSH
32506: LD_STRING D4-Soldier2-Sol1-1
32508: PPUSH
32509: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32513: LD_EXP 11
32517: PPUSH
32518: LD_STRING D4-Soldier2-JMM-1
32520: PPUSH
32521: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32525: LD_VAR 0 1
32529: PPUSH
32530: LD_STRING D4-Soldier2-Sol2-1
32532: PPUSH
32533: CALL_OW 88
// end else
32537: GO 32575
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32539: LD_VAR 0 1
32543: PPUSH
32544: LD_STRING D4-Soldier1-FSol1-1
32546: PPUSH
32547: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32551: LD_EXP 11
32555: PPUSH
32556: LD_STRING D4-Soldier1-JMM-1
32558: PPUSH
32559: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32563: LD_VAR 0 1
32567: PPUSH
32568: LD_STRING D4-Soldier1-FSol1-2
32570: PPUSH
32571: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32575: CALL_OW 7
// InGameOff ;
32579: CALL_OW 9
// if building then
32583: LD_VAR 0 3
32587: IFFALSE 32688
// begin SetSide ( JMM , side ) ;
32589: LD_EXP 11
32593: PPUSH
32594: LD_VAR 0 4
32598: PPUSH
32599: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32603: LD_EXP 11
32607: PPUSH
32608: CALL_OW 122
// if joined then
32612: LD_VAR 0 5
32616: IFFALSE 32655
// begin SetSide ( unit , side ) ;
32618: LD_VAR 0 1
32622: PPUSH
32623: LD_VAR 0 4
32627: PPUSH
32628: CALL_OW 235
// SetSide ( building , 1 ) ;
32632: LD_VAR 0 3
32636: PPUSH
32637: LD_INT 1
32639: PPUSH
32640: CALL_OW 235
// ComExitBuilding ( unit ) ;
32644: LD_VAR 0 1
32648: PPUSH
32649: CALL_OW 122
// end else
32653: GO 32686
// begin wait ( 0 0$10 ) ;
32655: LD_INT 350
32657: PPUSH
32658: CALL_OW 67
// SetSide ( unit , 1 ) ;
32662: LD_VAR 0 1
32666: PPUSH
32667: LD_INT 1
32669: PPUSH
32670: CALL_OW 235
// SetSide ( building , 1 ) ;
32674: LD_VAR 0 3
32678: PPUSH
32679: LD_INT 1
32681: PPUSH
32682: CALL_OW 235
// end ; end else
32686: GO 32767
// begin ComStop ( [ JMM , unit ] ) ;
32688: LD_EXP 11
32692: PUSH
32693: LD_VAR 0 1
32697: PUSH
32698: EMPTY
32699: LIST
32700: LIST
32701: PPUSH
32702: CALL_OW 141
// if joined then
32706: LD_VAR 0 5
32710: IFFALSE 32728
// SetSide ( unit , side ) else
32712: LD_VAR 0 1
32716: PPUSH
32717: LD_VAR 0 4
32721: PPUSH
32722: CALL_OW 235
32726: GO 32767
// begin repeat wait ( 0 0$1 ) ;
32728: LD_INT 35
32730: PPUSH
32731: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32735: LD_EXP 11
32739: PPUSH
32740: LD_VAR 0 1
32744: PPUSH
32745: CALL_OW 296
32749: PUSH
32750: LD_INT 10
32752: GREATER
32753: IFFALSE 32728
// SetSide ( unit , 1 ) ;
32755: LD_VAR 0 1
32759: PPUSH
32760: LD_INT 1
32762: PPUSH
32763: CALL_OW 235
// end ; end ; end ;
32767: LD_VAR 0 2
32771: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32772: LD_EXP 11
32776: PPUSH
32777: CALL_OW 310
32781: PUSH
32782: LD_INT 47
32784: EQUAL
32785: IFFALSE 32853
32787: GO 32789
32789: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32790: LD_STRING M1a
32792: PPUSH
32793: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32797: LD_INT 13
32799: PPUSH
32800: LD_INT 1
32802: PPUSH
32803: LD_INT 2
32805: PPUSH
32806: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32810: LD_INT 29
32812: PPUSH
32813: LD_INT 1
32815: PPUSH
32816: LD_INT 2
32818: PPUSH
32819: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32823: LD_EXP 11
32827: PPUSH
32828: LD_INT 9
32830: PPUSH
32831: CALL_OW 336
// can_escape := true ;
32835: LD_ADDR_EXP 7
32839: PUSH
32840: LD_INT 1
32842: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32843: LD_INT 19
32845: PPUSH
32846: LD_INT 1
32848: PPUSH
32849: CALL_OW 424
// end ;
32853: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32854: LD_INT 22
32856: PUSH
32857: LD_INT 4
32859: PUSH
32860: EMPTY
32861: LIST
32862: LIST
32863: PUSH
32864: LD_INT 34
32866: PUSH
32867: LD_INT 12
32869: PUSH
32870: EMPTY
32871: LIST
32872: LIST
32873: PUSH
32874: EMPTY
32875: LIST
32876: LIST
32877: PPUSH
32878: CALL_OW 69
32882: IFFALSE 32964
32884: GO 32886
32886: DISABLE
32887: LD_INT 0
32889: PPUSH
// begin enable ;
32890: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32891: LD_ADDR_VAR 0 1
32895: PUSH
32896: LD_INT 22
32898: PUSH
32899: LD_INT 4
32901: PUSH
32902: EMPTY
32903: LIST
32904: LIST
32905: PUSH
32906: LD_INT 34
32908: PUSH
32909: LD_INT 12
32911: PUSH
32912: EMPTY
32913: LIST
32914: LIST
32915: PUSH
32916: EMPTY
32917: LIST
32918: LIST
32919: PPUSH
32920: CALL_OW 69
32924: PUSH
32925: FOR_IN
32926: IFFALSE 32962
// if GetDistUnits ( i , JMM ) < 6 then
32928: LD_VAR 0 1
32932: PPUSH
32933: LD_EXP 11
32937: PPUSH
32938: CALL_OW 296
32942: PUSH
32943: LD_INT 6
32945: LESS
32946: IFFALSE 32960
// SetSide ( i , 7 ) ;
32948: LD_VAR 0 1
32952: PPUSH
32953: LD_INT 7
32955: PPUSH
32956: CALL_OW 235
32960: GO 32925
32962: POP
32963: POP
// end ;
32964: PPOPN 1
32966: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32967: LD_EXP 7
32971: PUSH
32972: LD_INT 19
32974: PPUSH
32975: LD_INT 22
32977: PUSH
32978: LD_INT 7
32980: PUSH
32981: EMPTY
32982: LIST
32983: LIST
32984: PUSH
32985: LD_INT 21
32987: PUSH
32988: LD_INT 1
32990: PUSH
32991: EMPTY
32992: LIST
32993: LIST
32994: PUSH
32995: EMPTY
32996: LIST
32997: LIST
32998: PPUSH
32999: CALL_OW 71
33003: NOT
33004: AND
33005: PUSH
33006: LD_INT 3
33008: PPUSH
33009: CALL_OW 469
33013: NOT
33014: AND
33015: PUSH
33016: LD_INT 5
33018: PPUSH
33019: CALL_OW 469
33023: NOT
33024: AND
33025: IFFALSE 34251
33027: GO 33029
33029: DISABLE
33030: LD_INT 0
33032: PPUSH
33033: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33034: LD_ADDR_VAR 0 1
33038: PUSH
33039: LD_EXP 3
33043: PPUSH
33044: LD_INT 22
33046: PUSH
33047: LD_INT 4
33049: PUSH
33050: EMPTY
33051: LIST
33052: LIST
33053: PUSH
33054: LD_INT 21
33056: PUSH
33057: LD_INT 1
33059: PUSH
33060: EMPTY
33061: LIST
33062: LIST
33063: PUSH
33064: EMPTY
33065: LIST
33066: LIST
33067: PPUSH
33068: CALL_OW 72
33072: PUSH
33073: LD_INT 0
33075: EQUAL
33076: ST_TO_ADDR
// if not all_taken then
33077: LD_VAR 0 1
33081: NOT
33082: IFFALSE 33223
// case query ( Q1 ) of 1 :
33084: LD_STRING Q1
33086: PPUSH
33087: CALL_OW 97
33091: PUSH
33092: LD_INT 1
33094: DOUBLE
33095: EQUAL
33096: IFTRUE 33100
33098: GO 33211
33100: POP
// begin repeat wait ( 0 0$1 ) ;
33101: LD_INT 35
33103: PPUSH
33104: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33108: LD_EXP 3
33112: PPUSH
33113: LD_INT 22
33115: PUSH
33116: LD_INT 4
33118: PUSH
33119: EMPTY
33120: LIST
33121: LIST
33122: PUSH
33123: LD_INT 21
33125: PUSH
33126: LD_INT 1
33128: PUSH
33129: EMPTY
33130: LIST
33131: LIST
33132: PUSH
33133: EMPTY
33134: LIST
33135: LIST
33136: PPUSH
33137: CALL_OW 72
33141: PUSH
33142: LD_INT 0
33144: EQUAL
33145: PUSH
33146: LD_INT 19
33148: PPUSH
33149: LD_INT 22
33151: PUSH
33152: LD_INT 7
33154: PUSH
33155: EMPTY
33156: LIST
33157: LIST
33158: PUSH
33159: LD_INT 21
33161: PUSH
33162: LD_INT 1
33164: PUSH
33165: EMPTY
33166: LIST
33167: LIST
33168: PUSH
33169: EMPTY
33170: LIST
33171: LIST
33172: PPUSH
33173: CALL_OW 71
33177: NOT
33178: AND
33179: PUSH
33180: LD_INT 3
33182: PPUSH
33183: CALL_OW 469
33187: NOT
33188: AND
33189: PUSH
33190: LD_INT 5
33192: PPUSH
33193: CALL_OW 469
33197: NOT
33198: AND
33199: IFFALSE 33101
// all_taken := true ;
33201: LD_ADDR_VAR 0 1
33205: PUSH
33206: LD_INT 1
33208: ST_TO_ADDR
// end ; 2 :
33209: GO 33223
33211: LD_INT 2
33213: DOUBLE
33214: EQUAL
33215: IFTRUE 33219
33217: GO 33222
33219: POP
// ; end ;
33220: GO 33223
33222: POP
// if team_kill_counter then
33223: LD_EXP 9
33227: IFFALSE 33243
// Say ( JMM , D5-JMM-1 ) else
33229: LD_EXP 11
33233: PPUSH
33234: LD_STRING D5-JMM-1
33236: PPUSH
33237: CALL_OW 88
33241: GO 33255
// Say ( JMM , D5-JMM-1a ) ;
33243: LD_EXP 11
33247: PPUSH
33248: LD_STRING D5-JMM-1a
33250: PPUSH
33251: CALL_OW 88
// if all_taken then
33255: LD_VAR 0 1
33259: IFFALSE 33273
// AddMedal ( All , 1 ) else
33261: LD_STRING All
33263: PPUSH
33264: LD_INT 1
33266: PPUSH
33267: CALL_OW 101
33271: GO 33284
// AddMedal ( All , - 1 ) ;
33273: LD_STRING All
33275: PPUSH
33276: LD_INT 1
33278: NEG
33279: PPUSH
33280: CALL_OW 101
// if team_kill_counter then
33284: LD_EXP 9
33288: IFFALSE 33303
// AddMedal ( Save , - 1 ) else
33290: LD_STRING Save
33292: PPUSH
33293: LD_INT 1
33295: NEG
33296: PPUSH
33297: CALL_OW 101
33301: GO 33313
// AddMedal ( Save , 1 ) ;
33303: LD_STRING Save
33305: PPUSH
33306: LD_INT 1
33308: PPUSH
33309: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33313: LD_EXP 8
33317: PUSH
33318: LD_INT 2
33320: PUSH
33321: LD_INT 1
33323: PUSH
33324: LD_INT 1
33326: PUSH
33327: EMPTY
33328: LIST
33329: LIST
33330: LIST
33331: PUSH
33332: LD_OWVAR 67
33336: ARRAY
33337: GREATEREQUAL
33338: IFFALSE 33353
// AddMedal ( Friendship , - 1 ) else
33340: LD_STRING Friendship
33342: PPUSH
33343: LD_INT 1
33345: NEG
33346: PPUSH
33347: CALL_OW 101
33351: GO 33363
// AddMedal ( Friendship , 1 ) ;
33353: LD_STRING Friendship
33355: PPUSH
33356: LD_INT 1
33358: PPUSH
33359: CALL_OW 101
// GiveMedals ( MAIN ) ;
33363: LD_STRING MAIN
33365: PPUSH
33366: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33370: LD_ADDR_VAR 0 2
33374: PUSH
33375: LD_INT 22
33377: PUSH
33378: LD_INT 7
33380: PUSH
33381: EMPTY
33382: LIST
33383: LIST
33384: PUSH
33385: LD_INT 2
33387: PUSH
33388: LD_INT 25
33390: PUSH
33391: LD_INT 1
33393: PUSH
33394: EMPTY
33395: LIST
33396: LIST
33397: PUSH
33398: LD_INT 25
33400: PUSH
33401: LD_INT 2
33403: PUSH
33404: EMPTY
33405: LIST
33406: LIST
33407: PUSH
33408: LD_INT 25
33410: PUSH
33411: LD_INT 3
33413: PUSH
33414: EMPTY
33415: LIST
33416: LIST
33417: PUSH
33418: LD_INT 25
33420: PUSH
33421: LD_INT 4
33423: PUSH
33424: EMPTY
33425: LIST
33426: LIST
33427: PUSH
33428: LD_INT 25
33430: PUSH
33431: LD_INT 5
33433: PUSH
33434: EMPTY
33435: LIST
33436: LIST
33437: PUSH
33438: LD_INT 25
33440: PUSH
33441: LD_INT 8
33443: PUSH
33444: EMPTY
33445: LIST
33446: LIST
33447: PUSH
33448: LD_INT 25
33450: PUSH
33451: LD_INT 9
33453: PUSH
33454: EMPTY
33455: LIST
33456: LIST
33457: PUSH
33458: EMPTY
33459: LIST
33460: LIST
33461: LIST
33462: LIST
33463: LIST
33464: LIST
33465: LIST
33466: LIST
33467: PUSH
33468: EMPTY
33469: LIST
33470: LIST
33471: PUSH
33472: EMPTY
33473: LIST
33474: PPUSH
33475: CALL_OW 69
33479: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33480: LD_VAR 0 2
33484: PUSH
33485: LD_EXP 12
33489: UNION
33490: PPUSH
33491: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33495: LD_EXP 11
33499: PPUSH
33500: LD_STRING 12a_JMM
33502: PPUSH
33503: CALL_OW 38
// if IsLive ( Roth ) then
33507: LD_EXP 12
33511: PPUSH
33512: CALL_OW 300
33516: IFFALSE 33530
// SaveCharacters ( Roth , 12a_Roth ) ;
33518: LD_EXP 12
33522: PPUSH
33523: LD_STRING 12a_Roth
33525: PPUSH
33526: CALL_OW 38
// if Lisa in tmp then
33530: LD_EXP 20
33534: PUSH
33535: LD_VAR 0 2
33539: IN
33540: IFFALSE 33556
// SaveCharacters ( Lisa , 12a_Lisa ) else
33542: LD_EXP 20
33546: PPUSH
33547: LD_STRING 12a_Lisa
33549: PPUSH
33550: CALL_OW 38
33554: GO 33574
// if Lisa then
33556: LD_EXP 20
33560: IFFALSE 33574
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33562: LD_EXP 20
33566: PPUSH
33567: LD_STRING 12p_Lisa
33569: PPUSH
33570: CALL_OW 38
// if Donaldson in tmp then
33574: LD_EXP 21
33578: PUSH
33579: LD_VAR 0 2
33583: IN
33584: IFFALSE 33600
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33586: LD_EXP 21
33590: PPUSH
33591: LD_STRING 12a_Donaldson
33593: PPUSH
33594: CALL_OW 38
33598: GO 33618
// if Donaldson then
33600: LD_EXP 21
33604: IFFALSE 33618
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33606: LD_EXP 21
33610: PPUSH
33611: LD_STRING 12p_Donaldson
33613: PPUSH
33614: CALL_OW 38
// if Bobby in tmp then
33618: LD_EXP 22
33622: PUSH
33623: LD_VAR 0 2
33627: IN
33628: IFFALSE 33644
// SaveCharacters ( Bobby , 12a_Bobby ) else
33630: LD_EXP 22
33634: PPUSH
33635: LD_STRING 12a_Bobby
33637: PPUSH
33638: CALL_OW 38
33642: GO 33662
// if Bobby then
33644: LD_EXP 22
33648: IFFALSE 33662
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33650: LD_EXP 22
33654: PPUSH
33655: LD_STRING 12p_Bobby
33657: PPUSH
33658: CALL_OW 38
// if Cyrus in tmp then
33662: LD_EXP 23
33666: PUSH
33667: LD_VAR 0 2
33671: IN
33672: IFFALSE 33688
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33674: LD_EXP 23
33678: PPUSH
33679: LD_STRING 12a_Cyrus
33681: PPUSH
33682: CALL_OW 38
33686: GO 33706
// if Cyrus then
33688: LD_EXP 23
33692: IFFALSE 33706
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33694: LD_EXP 23
33698: PPUSH
33699: LD_STRING 12p_Cyrus
33701: PPUSH
33702: CALL_OW 38
// if Denis in tmp then
33706: LD_EXP 24
33710: PUSH
33711: LD_VAR 0 2
33715: IN
33716: IFFALSE 33730
// SaveCharacters ( Denis , 12a_Denis ) ;
33718: LD_EXP 24
33722: PPUSH
33723: LD_STRING 12a_Denis
33725: PPUSH
33726: CALL_OW 38
// if Brown in tmp then
33730: LD_EXP 25
33734: PUSH
33735: LD_VAR 0 2
33739: IN
33740: IFFALSE 33756
// SaveCharacters ( Brown , 12a_Brown ) else
33742: LD_EXP 25
33746: PPUSH
33747: LD_STRING 12a_Brown
33749: PPUSH
33750: CALL_OW 38
33754: GO 33780
// if Brown in tmp then
33756: LD_EXP 25
33760: PUSH
33761: LD_VAR 0 2
33765: IN
33766: IFFALSE 33780
// SaveCharacters ( Brown , 12p_Brown ) ;
33768: LD_EXP 25
33772: PPUSH
33773: LD_STRING 12p_Brown
33775: PPUSH
33776: CALL_OW 38
// if Gladstone in tmp then
33780: LD_EXP 26
33784: PUSH
33785: LD_VAR 0 2
33789: IN
33790: IFFALSE 33806
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33792: LD_EXP 26
33796: PPUSH
33797: LD_STRING 12a_Gladstone
33799: PPUSH
33800: CALL_OW 38
33804: GO 33824
// if Gladstone then
33806: LD_EXP 26
33810: IFFALSE 33824
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33812: LD_EXP 26
33816: PPUSH
33817: LD_STRING 12p_Gladstone
33819: PPUSH
33820: CALL_OW 38
// if Houten in tmp then
33824: LD_EXP 27
33828: PUSH
33829: LD_VAR 0 2
33833: IN
33834: IFFALSE 33850
// SaveCharacters ( Houten , 12a_Houten ) else
33836: LD_EXP 27
33840: PPUSH
33841: LD_STRING 12a_Houten
33843: PPUSH
33844: CALL_OW 38
33848: GO 33868
// if Houten then
33850: LD_EXP 27
33854: IFFALSE 33868
// SaveCharacters ( Houten , 12p_Houten ) ;
33856: LD_EXP 27
33860: PPUSH
33861: LD_STRING 12p_Houten
33863: PPUSH
33864: CALL_OW 38
// if Cornel in tmp then
33868: LD_EXP 28
33872: PUSH
33873: LD_VAR 0 2
33877: IN
33878: IFFALSE 33894
// SaveCharacters ( Cornel , 12a_Cornell ) else
33880: LD_EXP 28
33884: PPUSH
33885: LD_STRING 12a_Cornell
33887: PPUSH
33888: CALL_OW 38
33892: GO 33912
// if Cornel then
33894: LD_EXP 28
33898: IFFALSE 33912
// SaveCharacters ( Cornel , 12p_Cornell ) ;
33900: LD_EXP 28
33904: PPUSH
33905: LD_STRING 12p_Cornell
33907: PPUSH
33908: CALL_OW 38
// if Gary in tmp then
33912: LD_EXP 29
33916: PUSH
33917: LD_VAR 0 2
33921: IN
33922: IFFALSE 33938
// SaveCharacters ( Gary , 12a_Gary ) else
33924: LD_EXP 29
33928: PPUSH
33929: LD_STRING 12a_Gary
33931: PPUSH
33932: CALL_OW 38
33936: GO 33956
// if Gary then
33938: LD_EXP 29
33942: IFFALSE 33956
// SaveCharacters ( Gary , 12p_Gary ) ;
33944: LD_EXP 29
33948: PPUSH
33949: LD_STRING 12p_Gary
33951: PPUSH
33952: CALL_OW 38
// if Frank in tmp then
33956: LD_EXP 30
33960: PUSH
33961: LD_VAR 0 2
33965: IN
33966: IFFALSE 33980
// SaveCharacters ( Frank , 12a_Frank ) ;
33968: LD_EXP 30
33972: PPUSH
33973: LD_STRING 12a_Frank
33975: PPUSH
33976: CALL_OW 38
// if Kikuchi in tmp then
33980: LD_EXP 31
33984: PUSH
33985: LD_VAR 0 2
33989: IN
33990: IFFALSE 34006
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33992: LD_EXP 31
33996: PPUSH
33997: LD_STRING 12a_Kikuchi
33999: PPUSH
34000: CALL_OW 38
34004: GO 34024
// if Kikuchi then
34006: LD_EXP 31
34010: IFFALSE 34024
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34012: LD_EXP 31
34016: PPUSH
34017: LD_STRING 12p_Kikuchi
34019: PPUSH
34020: CALL_OW 38
// if Simms in tmp then
34024: LD_EXP 32
34028: PUSH
34029: LD_VAR 0 2
34033: IN
34034: IFFALSE 34048
// SaveCharacters ( Simms , 12a_Simms ) ;
34036: LD_EXP 32
34040: PPUSH
34041: LD_STRING 12a_Simms
34043: PPUSH
34044: CALL_OW 38
// if Joan in tmp then
34048: LD_EXP 33
34052: PUSH
34053: LD_VAR 0 2
34057: IN
34058: IFFALSE 34072
// SaveCharacters ( Joan , 12a_Joan ) ;
34060: LD_EXP 33
34064: PPUSH
34065: LD_STRING 12a_Joan
34067: PPUSH
34068: CALL_OW 38
// if DeltaDoctor in tmp then
34072: LD_EXP 34
34076: PUSH
34077: LD_VAR 0 2
34081: IN
34082: IFFALSE 34096
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34084: LD_EXP 34
34088: PPUSH
34089: LD_STRING 12a_DeltaDoctor
34091: PPUSH
34092: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34096: LD_ADDR_VAR 0 2
34100: PUSH
34101: LD_VAR 0 2
34105: PUSH
34106: LD_EXP 11
34110: PUSH
34111: LD_EXP 12
34115: PUSH
34116: LD_EXP 20
34120: PUSH
34121: LD_EXP 21
34125: PUSH
34126: LD_EXP 22
34130: PUSH
34131: LD_EXP 23
34135: PUSH
34136: LD_EXP 24
34140: PUSH
34141: LD_EXP 25
34145: PUSH
34146: LD_EXP 26
34150: PUSH
34151: LD_EXP 27
34155: PUSH
34156: LD_EXP 28
34160: PUSH
34161: LD_EXP 29
34165: PUSH
34166: LD_EXP 30
34170: PUSH
34171: LD_EXP 31
34175: PUSH
34176: LD_EXP 32
34180: PUSH
34181: LD_EXP 33
34185: PUSH
34186: LD_EXP 34
34190: PUSH
34191: EMPTY
34192: LIST
34193: LIST
34194: LIST
34195: LIST
34196: LIST
34197: LIST
34198: LIST
34199: LIST
34200: LIST
34201: LIST
34202: LIST
34203: LIST
34204: LIST
34205: LIST
34206: LIST
34207: LIST
34208: LIST
34209: DIFF
34210: ST_TO_ADDR
// if tmp then
34211: LD_VAR 0 2
34215: IFFALSE 34229
// SaveCharacters ( tmp , 12a_others ) ;
34217: LD_VAR 0 2
34221: PPUSH
34222: LD_STRING 12a_others
34224: PPUSH
34225: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
34229: LD_EXP 5
34233: PUSH
34234: LD_VAR 0 2
34238: DIFF
34239: PPUSH
34240: LD_STRING 12p_others
34242: PPUSH
34243: CALL_OW 38
// YouWin ;
34247: CALL_OW 103
// end ; end_of_file
34251: PPOPN 2
34253: END
// on SailEvent ( event ) do var tmp ;
34254: LD_INT 0
34256: PPUSH
// begin if event = 1 then
34257: LD_VAR 0 1
34261: PUSH
34262: LD_INT 1
34264: EQUAL
34265: IFFALSE 34338
// begin if not mobile_patrol then
34267: LD_EXP 14
34271: NOT
34272: IFFALSE 34276
// exit ;
34274: GO 34338
// tmp := mobile_patrol [ mobile_patrol ] ;
34276: LD_ADDR_VAR 0 2
34280: PUSH
34281: LD_EXP 14
34285: PUSH
34286: LD_EXP 14
34290: ARRAY
34291: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34292: LD_ADDR_EXP 14
34296: PUSH
34297: LD_EXP 14
34301: PPUSH
34302: LD_EXP 14
34306: PPUSH
34307: CALL_OW 3
34311: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34312: LD_VAR 0 2
34316: PPUSH
34317: LD_EXP 15
34321: PUSH
34322: LD_EXP 14
34326: PUSH
34327: LD_INT 1
34329: PLUS
34330: ARRAY
34331: PPUSH
34332: EMPTY
34333: PPUSH
34334: CALL 6191 0 3
// end ; end ;
34338: PPOPN 2
34340: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34341: LD_VAR 0 1
34345: PUSH
34346: LD_EXP 11
34350: EQUAL
34351: IFFALSE 34360
// YouLost ( JMM ) ;
34353: LD_STRING JMM
34355: PPUSH
34356: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34360: LD_VAR 0 1
34364: PPUSH
34365: CALL_OW 255
34369: PUSH
34370: LD_INT 7
34372: EQUAL
34373: PUSH
34374: LD_VAR 0 1
34378: PPUSH
34379: CALL_OW 264
34383: PUSH
34384: LD_INT 12
34386: EQUAL
34387: AND
34388: IFFALSE 34397
// YouLost ( Artifact ) ;
34390: LD_STRING Artifact
34392: PPUSH
34393: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
34397: LD_VAR 0 1
34401: PPUSH
34402: CALL_OW 255
34406: PUSH
34407: LD_INT 7
34409: EQUAL
34410: PUSH
34411: LD_VAR 0 1
34415: PPUSH
34416: CALL_OW 247
34420: PUSH
34421: LD_INT 1
34423: EQUAL
34424: AND
34425: IFFALSE 34441
// team_kill_counter := team_kill_counter + 1 ;
34427: LD_ADDR_EXP 9
34431: PUSH
34432: LD_EXP 9
34436: PUSH
34437: LD_INT 1
34439: PLUS
34440: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34441: LD_VAR 0 1
34445: PPUSH
34446: CALL_OW 255
34450: PUSH
34451: LD_INT 1
34453: EQUAL
34454: PUSH
34455: LD_VAR 0 1
34459: PPUSH
34460: CALL_OW 247
34464: PUSH
34465: LD_INT 1
34467: EQUAL
34468: AND
34469: IFFALSE 34485
// friends_kill_counter := friends_kill_counter + 1 ;
34471: LD_ADDR_EXP 8
34475: PUSH
34476: LD_EXP 8
34480: PUSH
34481: LD_INT 1
34483: PLUS
34484: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34485: LD_VAR 0 1
34489: PPUSH
34490: CALL_OW 255
34494: PUSH
34495: LD_INT 1
34497: NONEQUAL
34498: IFFALSE 34502
// exit ;
34500: GO 34579
// if GetControl ( un ) = control_remote then
34502: LD_VAR 0 1
34506: PPUSH
34507: CALL_OW 263
34511: PUSH
34512: LD_INT 2
34514: EQUAL
34515: IFFALSE 34533
// defenders := defenders diff un ;
34517: LD_ADDR_EXP 17
34521: PUSH
34522: LD_EXP 17
34526: PUSH
34527: LD_VAR 0 1
34531: DIFF
34532: ST_TO_ADDR
// if not un in defenders then
34533: LD_VAR 0 1
34537: PUSH
34538: LD_EXP 17
34542: IN
34543: NOT
34544: IFFALSE 34579
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34546: LD_ADDR_EXP 18
34550: PUSH
34551: LD_VAR 0 1
34555: PPUSH
34556: CALL_OW 250
34560: PUSH
34561: LD_VAR 0 1
34565: PPUSH
34566: CALL_OW 251
34570: PUSH
34571: EMPTY
34572: LIST
34573: LIST
34574: ST_TO_ADDR
// Defend ;
34575: CALL 2405 0 0
// end ; end ;
34579: PPOPN 1
34581: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34582: LD_VAR 0 1
34586: PPUSH
34587: CALL_OW 255
34591: PUSH
34592: LD_INT 1
34594: NONEQUAL
34595: IFFALSE 34599
// exit ;
34597: GO 34623
// if GetControl ( veh ) = control_remote then
34599: LD_VAR 0 1
34603: PPUSH
34604: CALL_OW 263
34608: PUSH
34609: LD_INT 2
34611: EQUAL
34612: IFFALSE 34623
// Connect ( veh ) ;
34614: LD_VAR 0 1
34618: PPUSH
34619: CALL 5386 0 1
// end ;
34623: PPOPN 2
34625: END
// on UnitGoesToRed ( un ) do var i , veh ;
34626: LD_INT 0
34628: PPUSH
34629: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34630: LD_VAR 0 1
34634: PPUSH
34635: CALL_OW 255
34639: PUSH
34640: LD_INT 1
34642: EQUAL
34643: PUSH
34644: LD_VAR 0 1
34648: PPUSH
34649: CALL_OW 263
34653: PUSH
34654: LD_INT 2
34656: EQUAL
34657: AND
34658: IFFALSE 34669
// ComUnlink ( un ) ;
34660: LD_VAR 0 1
34664: PPUSH
34665: CALL_OW 136
// if un = ambar0 then
34669: LD_VAR 0 1
34673: PUSH
34674: LD_INT 18
34676: EQUAL
34677: IFFALSE 34787
// begin uc_side := 1 ;
34679: LD_ADDR_OWVAR 20
34683: PUSH
34684: LD_INT 1
34686: ST_TO_ADDR
// uc_nation := 1 ;
34687: LD_ADDR_OWVAR 21
34691: PUSH
34692: LD_INT 1
34694: ST_TO_ADDR
// for i = 1 to 6 do
34695: LD_ADDR_VAR 0 2
34699: PUSH
34700: DOUBLE
34701: LD_INT 1
34703: DEC
34704: ST_TO_ADDR
34705: LD_INT 6
34707: PUSH
34708: FOR_TO
34709: IFFALSE 34785
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34711: LD_INT 3
34713: PPUSH
34714: LD_INT 1
34716: PPUSH
34717: LD_INT 3
34719: PPUSH
34720: LD_INT 4
34722: PPUSH
34723: LD_INT 100
34725: PPUSH
34726: CALL 5150 0 5
// veh := CreateVehicle ;
34730: LD_ADDR_VAR 0 3
34734: PUSH
34735: CALL_OW 45
34739: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34740: LD_VAR 0 3
34744: PPUSH
34745: LD_INT 1
34747: PPUSH
34748: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34752: LD_VAR 0 3
34756: PPUSH
34757: LD_INT 25
34759: PPUSH
34760: LD_INT 0
34762: PPUSH
34763: CALL_OW 49
// defenders := defenders ^ veh ;
34767: LD_ADDR_EXP 17
34771: PUSH
34772: LD_EXP 17
34776: PUSH
34777: LD_VAR 0 3
34781: ADD
34782: ST_TO_ADDR
// end ;
34783: GO 34708
34785: POP
34786: POP
// end ; end ;
34787: PPOPN 3
34789: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
34790: LD_VAR 0 2
34794: PUSH
34795: LD_EXP 13
34799: EQUAL
34800: IFFALSE 34811
// RemoveUnit ( Powell ) ;
34802: LD_EXP 13
34806: PPUSH
34807: CALL_OW 64
// end ;
34811: PPOPN 2
34813: END
