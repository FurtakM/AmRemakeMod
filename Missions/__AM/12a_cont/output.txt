// starting var i ; begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29586 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2785 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30011 0 0
// PreparePatrol ;
 103: CALL 889 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 5072 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 5135 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 0
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defcon_wave := 0 ;
 556: LD_ADDR_EXP 19
 560: PUSH
 561: LD_INT 0
 563: ST_TO_ADDR
// defenders := [ ] ;
 564: LD_ADDR_EXP 17
 568: PUSH
 569: EMPTY
 570: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 571: LD_INT 5
 573: PPUSH
 574: LD_STRING alpha
 576: PPUSH
 577: CALL_OW 500
// uc_side := 1 ;
 581: LD_ADDR_OWVAR 20
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// uc_nation := 1 ;
 589: LD_ADDR_OWVAR 21
 593: PUSH
 594: LD_INT 1
 596: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 597: LD_ADDR_EXP 13
 601: PUSH
 602: LD_STRING Powell
 604: PPUSH
 605: CALL_OW 25
 609: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 610: LD_EXP 13
 614: PPUSH
 615: LD_INT 110
 617: PPUSH
 618: LD_INT 26
 620: PPUSH
 621: LD_INT 0
 623: PPUSH
 624: CALL_OW 48
// ComHold ( Powell ) ;
 628: LD_EXP 13
 632: PPUSH
 633: CALL_OW 140
// for i = 1 to 5 do
 637: LD_ADDR_VAR 0 2
 641: PUSH
 642: DOUBLE
 643: LD_INT 1
 645: DEC
 646: ST_TO_ADDR
 647: LD_INT 5
 649: PUSH
 650: FOR_TO
 651: IFFALSE 707
// begin PrepareHuman ( false , 1 , 10 ) ;
 653: LD_INT 0
 655: PPUSH
 656: LD_INT 1
 658: PPUSH
 659: LD_INT 10
 661: PPUSH
 662: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 666: LD_ADDR_EXP 16
 670: PUSH
 671: LD_EXP 16
 675: PPUSH
 676: LD_INT 1
 678: PPUSH
 679: CALL_OW 44
 683: PPUSH
 684: CALL_OW 2
 688: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 689: LD_EXP 16
 693: PUSH
 694: LD_INT 1
 696: ARRAY
 697: PPUSH
 698: LD_INT 18
 700: PPUSH
 701: CALL_OW 52
// end ;
 705: GO 650
 707: POP
 708: POP
// if Difficulty > 2 then
 709: LD_OWVAR 67
 713: PUSH
 714: LD_INT 2
 716: GREATER
 717: IFFALSE 766
// begin bc_type := b_turret ;
 719: LD_ADDR_OWVAR 42
 723: PUSH
 724: LD_INT 33
 726: ST_TO_ADDR
// bc_level := 7 ;
 727: LD_ADDR_OWVAR 43
 731: PUSH
 732: LD_INT 7
 734: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 735: LD_ADDR_VAR 0 4
 739: PUSH
 740: LD_INT 107
 742: PPUSH
 743: LD_INT 55
 745: PPUSH
 746: LD_INT 5
 748: PPUSH
 749: CALL_OW 47
 753: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 754: LD_VAR 0 4
 758: PPUSH
 759: LD_INT 7
 761: PPUSH
 762: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 766: LD_ADDR_VAR 0 2
 770: PUSH
 771: LD_INT 22
 773: PUSH
 774: LD_INT 1
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: PUSH
 781: LD_INT 30
 783: PUSH
 784: LD_INT 3
 786: PUSH
 787: EMPTY
 788: LIST
 789: LIST
 790: PUSH
 791: EMPTY
 792: LIST
 793: LIST
 794: PPUSH
 795: CALL_OW 69
 799: PUSH
 800: LD_INT 22
 802: PUSH
 803: LD_INT 1
 805: PUSH
 806: EMPTY
 807: LIST
 808: LIST
 809: PUSH
 810: LD_INT 30
 812: PUSH
 813: LD_INT 36
 815: PUSH
 816: EMPTY
 817: LIST
 818: LIST
 819: PUSH
 820: EMPTY
 821: LIST
 822: LIST
 823: PPUSH
 824: CALL_OW 69
 828: ADD
 829: PUSH
 830: FOR_IN
 831: IFFALSE 882
// for j = 1 to 3 do
 833: LD_ADDR_VAR 0 3
 837: PUSH
 838: DOUBLE
 839: LD_INT 1
 841: DEC
 842: ST_TO_ADDR
 843: LD_INT 3
 845: PUSH
 846: FOR_TO
 847: IFFALSE 878
// begin PrepareHuman ( false , 3 , 6 ) ;
 849: LD_INT 0
 851: PPUSH
 852: LD_INT 3
 854: PPUSH
 855: LD_INT 6
 857: PPUSH
 858: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 862: CALL_OW 44
 866: PPUSH
 867: LD_VAR 0 2
 871: PPUSH
 872: CALL_OW 52
// end ;
 876: GO 846
 878: POP
 879: POP
 880: GO 830
 882: POP
 883: POP
// end ;
 884: LD_VAR 0 1
 888: RET
// export function PreparePatrol ; var i , un ; begin
 889: LD_INT 0
 891: PPUSH
 892: PPUSH
 893: PPUSH
// uc_side := 1 ;
 894: LD_ADDR_OWVAR 20
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// uc_nation := 1 ;
 902: LD_ADDR_OWVAR 21
 906: PUSH
 907: LD_INT 1
 909: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 910: LD_ADDR_EXP 15
 914: PUSH
 915: LD_INT 99
 917: PUSH
 918: LD_INT 55
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PUSH
 925: LD_INT 113
 927: PUSH
 928: LD_INT 67
 930: PUSH
 931: EMPTY
 932: LIST
 933: LIST
 934: PUSH
 935: LD_INT 129
 937: PUSH
 938: LD_INT 68
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PUSH
 945: LD_INT 135
 947: PUSH
 948: LD_INT 62
 950: PUSH
 951: EMPTY
 952: LIST
 953: LIST
 954: PUSH
 955: LD_INT 103
 957: PUSH
 958: LD_INT 41
 960: PUSH
 961: EMPTY
 962: LIST
 963: LIST
 964: PUSH
 965: EMPTY
 966: LIST
 967: LIST
 968: LIST
 969: LIST
 970: LIST
 971: PUSH
 972: LD_INT 27
 974: PUSH
 975: LD_INT 49
 977: PUSH
 978: EMPTY
 979: LIST
 980: LIST
 981: PUSH
 982: LD_INT 46
 984: PUSH
 985: LD_INT 49
 987: PUSH
 988: EMPTY
 989: LIST
 990: LIST
 991: PUSH
 992: LD_INT 87
 994: PUSH
 995: LD_INT 70
 997: PUSH
 998: EMPTY
 999: LIST
1000: LIST
1001: PUSH
1002: LD_INT 99
1004: PUSH
1005: LD_INT 79
1007: PUSH
1008: EMPTY
1009: LIST
1010: LIST
1011: PUSH
1012: LD_INT 118
1014: PUSH
1015: LD_INT 111
1017: PUSH
1018: EMPTY
1019: LIST
1020: LIST
1021: PUSH
1022: LD_INT 99
1024: PUSH
1025: LD_INT 79
1027: PUSH
1028: EMPTY
1029: LIST
1030: LIST
1031: PUSH
1032: LD_INT 87
1034: PUSH
1035: LD_INT 70
1037: PUSH
1038: EMPTY
1039: LIST
1040: LIST
1041: PUSH
1042: LD_INT 46
1044: PUSH
1045: LD_INT 49
1047: PUSH
1048: EMPTY
1049: LIST
1050: LIST
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: LIST
1056: LIST
1057: LIST
1058: LIST
1059: LIST
1060: LIST
1061: PUSH
1062: LD_INT 200
1064: PUSH
1065: LD_INT 88
1067: PUSH
1068: EMPTY
1069: LIST
1070: LIST
1071: PUSH
1072: LD_INT 175
1074: PUSH
1075: LD_INT 80
1077: PUSH
1078: EMPTY
1079: LIST
1080: LIST
1081: PUSH
1082: LD_INT 135
1084: PUSH
1085: LD_INT 62
1087: PUSH
1088: EMPTY
1089: LIST
1090: LIST
1091: PUSH
1092: LD_INT 117
1094: PUSH
1095: LD_INT 53
1097: PUSH
1098: EMPTY
1099: LIST
1100: LIST
1101: PUSH
1102: LD_INT 103
1104: PUSH
1105: LD_INT 41
1107: PUSH
1108: EMPTY
1109: LIST
1110: LIST
1111: PUSH
1112: LD_INT 99
1114: PUSH
1115: LD_INT 24
1117: PUSH
1118: EMPTY
1119: LIST
1120: LIST
1121: PUSH
1122: LD_INT 85
1124: PUSH
1125: LD_INT 3
1127: PUSH
1128: EMPTY
1129: LIST
1130: LIST
1131: PUSH
1132: LD_INT 99
1134: PUSH
1135: LD_INT 24
1137: PUSH
1138: EMPTY
1139: LIST
1140: LIST
1141: PUSH
1142: LD_INT 103
1144: PUSH
1145: LD_INT 41
1147: PUSH
1148: EMPTY
1149: LIST
1150: LIST
1151: PUSH
1152: LD_INT 98
1154: PUSH
1155: LD_INT 47
1157: PUSH
1158: EMPTY
1159: LIST
1160: LIST
1161: PUSH
1162: LD_INT 99
1164: PUSH
1165: LD_INT 56
1167: PUSH
1168: EMPTY
1169: LIST
1170: LIST
1171: PUSH
1172: LD_INT 96
1174: PUSH
1175: LD_INT 66
1177: PUSH
1178: EMPTY
1179: LIST
1180: LIST
1181: PUSH
1182: LD_INT 99
1184: PUSH
1185: LD_INT 56
1187: PUSH
1188: EMPTY
1189: LIST
1190: LIST
1191: PUSH
1192: LD_INT 112
1194: PUSH
1195: LD_INT 66
1197: PUSH
1198: EMPTY
1199: LIST
1200: LIST
1201: PUSH
1202: LD_INT 129
1204: PUSH
1205: LD_INT 68
1207: PUSH
1208: EMPTY
1209: LIST
1210: LIST
1211: PUSH
1212: LD_INT 135
1214: PUSH
1215: LD_INT 62
1217: PUSH
1218: EMPTY
1219: LIST
1220: LIST
1221: PUSH
1222: LD_INT 156
1224: PUSH
1225: LD_INT 71
1227: PUSH
1228: EMPTY
1229: LIST
1230: LIST
1231: PUSH
1232: LD_INT 168
1234: PUSH
1235: LD_INT 76
1237: PUSH
1238: EMPTY
1239: LIST
1240: LIST
1241: PUSH
1242: LD_INT 168
1244: PUSH
1245: LD_INT 61
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: PUSH
1252: LD_INT 168
1254: PUSH
1255: LD_INT 75
1257: PUSH
1258: EMPTY
1259: LIST
1260: LIST
1261: PUSH
1262: LD_INT 185
1264: PUSH
1265: LD_INT 85
1267: PUSH
1268: EMPTY
1269: LIST
1270: LIST
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: LIST
1287: LIST
1288: LIST
1289: LIST
1290: LIST
1291: LIST
1292: LIST
1293: LIST
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: ST_TO_ADDR
// mobile_patrol := [ ] ;
1300: LD_ADDR_EXP 14
1304: PUSH
1305: EMPTY
1306: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1307: LD_INT 3
1309: PPUSH
1310: LD_INT 1
1312: PPUSH
1313: LD_INT 3
1315: PPUSH
1316: LD_INT 4
1318: PPUSH
1319: LD_INT 100
1321: PPUSH
1322: CALL 5135 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1326: LD_ADDR_EXP 14
1330: PUSH
1331: LD_EXP 14
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: CALL_OW 45
1343: PPUSH
1344: CALL_OW 2
1348: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1349: LD_EXP 14
1353: PUSH
1354: LD_INT 1
1356: ARRAY
1357: PPUSH
1358: LD_INT 99
1360: PPUSH
1361: LD_INT 55
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1371: LD_INT 2
1373: PPUSH
1374: LD_INT 1
1376: PPUSH
1377: LD_INT 3
1379: PPUSH
1380: LD_INT 4
1382: PPUSH
1383: LD_INT 100
1385: PPUSH
1386: CALL 5135 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1390: LD_ADDR_EXP 14
1394: PUSH
1395: LD_EXP 14
1399: PPUSH
1400: LD_INT 2
1402: PPUSH
1403: CALL_OW 45
1407: PPUSH
1408: CALL_OW 2
1412: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1413: LD_EXP 14
1417: PUSH
1418: LD_INT 2
1420: ARRAY
1421: PPUSH
1422: LD_INT 27
1424: PPUSH
1425: LD_INT 49
1427: PPUSH
1428: LD_INT 0
1430: PPUSH
1431: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1435: LD_INT 3
1437: PPUSH
1438: LD_INT 1
1440: PPUSH
1441: LD_INT 3
1443: PPUSH
1444: LD_INT 7
1446: PPUSH
1447: LD_INT 100
1449: PPUSH
1450: CALL 5135 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1454: LD_ADDR_EXP 14
1458: PUSH
1459: LD_EXP 14
1463: PPUSH
1464: LD_INT 3
1466: PPUSH
1467: CALL_OW 45
1471: PPUSH
1472: CALL_OW 2
1476: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1477: LD_EXP 14
1481: PUSH
1482: LD_INT 3
1484: ARRAY
1485: PPUSH
1486: LD_INT 200
1488: PPUSH
1489: LD_INT 88
1491: PPUSH
1492: LD_INT 0
1494: PPUSH
1495: CALL_OW 48
// for i = mobile_patrol downto 1 do
1499: LD_ADDR_VAR 0 2
1503: PUSH
1504: DOUBLE
1505: LD_EXP 14
1509: INC
1510: ST_TO_ADDR
1511: LD_INT 1
1513: PUSH
1514: FOR_DOWNTO
1515: IFFALSE 1526
// RaiseSailEvent ( 1 ) ;
1517: LD_INT 1
1519: PPUSH
1520: CALL_OW 427
1524: GO 1514
1526: POP
1527: POP
// end ;
1528: LD_VAR 0 1
1532: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1533: LD_INT 0
1535: PPUSH
1536: PPUSH
1537: PPUSH
1538: PPUSH
1539: PPUSH
1540: PPUSH
1541: PPUSH
1542: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1543: LD_ADDR_VAR 0 5
1547: PUSH
1548: LD_INT 20
1550: PUSH
1551: LD_INT 4
1553: PUSH
1554: EMPTY
1555: LIST
1556: LIST
1557: PUSH
1558: LD_INT 21
1560: PUSH
1561: LD_INT 5
1563: PUSH
1564: EMPTY
1565: LIST
1566: LIST
1567: PUSH
1568: LD_INT 22
1570: PUSH
1571: LD_INT 1
1573: PUSH
1574: EMPTY
1575: LIST
1576: LIST
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: LIST
1582: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1583: LD_ADDR_VAR 0 6
1587: PUSH
1588: LD_INT 176
1590: PUSH
1591: LD_INT 81
1593: PUSH
1594: LD_INT 135
1596: PUSH
1597: LD_INT 62
1599: PUSH
1600: LD_INT 114
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 93
1608: PUSH
1609: LD_INT 71
1611: PUSH
1612: LD_INT 76
1614: PUSH
1615: LD_INT 67
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: LIST
1622: LIST
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: PUSH
1630: LD_INT 107
1632: PUSH
1633: LD_INT 92
1635: PUSH
1636: LD_INT 92
1638: PUSH
1639: LD_INT 72
1641: PUSH
1642: LD_INT 77
1644: PUSH
1645: LD_INT 68
1647: PUSH
1648: EMPTY
1649: LIST
1650: LIST
1651: LIST
1652: LIST
1653: LIST
1654: LIST
1655: PUSH
1656: LD_INT 45
1658: PUSH
1659: LD_INT 49
1661: PUSH
1662: LD_INT 67
1664: PUSH
1665: LD_INT 59
1667: PUSH
1668: LD_INT 77
1670: PUSH
1671: LD_INT 68
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: LIST
1679: LIST
1680: LIST
1681: PUSH
1682: EMPTY
1683: LIST
1684: LIST
1685: LIST
1686: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1687: LD_ADDR_VAR 0 4
1691: PUSH
1692: LD_INT 1
1694: PPUSH
1695: LD_VAR 0 5
1699: PPUSH
1700: CALL_OW 12
1704: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1705: LD_ADDR_VAR 0 3
1709: PUSH
1710: LD_INT 1
1712: PPUSH
1713: LD_INT 2
1715: PPUSH
1716: CALL_OW 12
1720: ST_TO_ADDR
// uc_side := 1 ;
1721: LD_ADDR_OWVAR 20
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// uc_nation := 1 ;
1729: LD_ADDR_OWVAR 21
1733: PUSH
1734: LD_INT 1
1736: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1737: LD_INT 2
1739: PPUSH
1740: LD_INT 3
1742: PPUSH
1743: LD_INT 3
1745: PPUSH
1746: LD_INT 12
1748: PPUSH
1749: LD_INT 100
1751: PPUSH
1752: CALL 5135 0 5
// veh := CreateVehicle ;
1756: LD_ADDR_VAR 0 8
1760: PUSH
1761: CALL_OW 45
1765: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1766: LD_VAR 0 8
1770: PPUSH
1771: LD_VAR 0 5
1775: PUSH
1776: LD_VAR 0 4
1780: ARRAY
1781: PUSH
1782: LD_INT 2
1784: ARRAY
1785: PPUSH
1786: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1790: LD_VAR 0 8
1794: PPUSH
1795: LD_VAR 0 5
1799: PUSH
1800: LD_VAR 0 4
1804: ARRAY
1805: PUSH
1806: LD_INT 1
1808: ARRAY
1809: PPUSH
1810: LD_INT 0
1812: PPUSH
1813: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1817: LD_VAR 0 8
1821: PPUSH
1822: LD_INT 1
1824: PUSH
1825: LD_INT 3
1827: PUSH
1828: EMPTY
1829: LIST
1830: LIST
1831: PUSH
1832: LD_VAR 0 3
1836: ARRAY
1837: PPUSH
1838: LD_INT 100
1840: PPUSH
1841: CALL_OW 290
// tmp := road [ k ] ;
1845: LD_ADDR_VAR 0 7
1849: PUSH
1850: LD_VAR 0 6
1854: PUSH
1855: LD_VAR 0 4
1859: ARRAY
1860: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1861: LD_ADDR_VAR 0 2
1865: PUSH
1866: DOUBLE
1867: LD_INT 1
1869: DEC
1870: ST_TO_ADDR
1871: LD_VAR 0 7
1875: PUSH
1876: LD_INT 2
1878: DIV
1879: PUSH
1880: FOR_TO
1881: IFFALSE 1928
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_VAR 0 7
1892: PUSH
1893: LD_VAR 0 2
1897: PUSH
1898: LD_INT 2
1900: MUL
1901: PUSH
1902: LD_INT 1
1904: MINUS
1905: ARRAY
1906: PPUSH
1907: LD_VAR 0 7
1911: PUSH
1912: LD_VAR 0 2
1916: PUSH
1917: LD_INT 2
1919: MUL
1920: ARRAY
1921: PPUSH
1922: CALL_OW 171
1926: GO 1880
1928: POP
1929: POP
// AddComGive ( veh , alfa ) ;
1930: LD_VAR 0 8
1934: PPUSH
1935: LD_INT 5
1937: PPUSH
1938: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1942: LD_VAR 0 8
1946: PPUSH
1947: LD_INT 70
1949: PPUSH
1950: CALL_OW 202
// for i = tmp div 2 downto 1 do
1954: LD_ADDR_VAR 0 2
1958: PUSH
1959: DOUBLE
1960: LD_VAR 0 7
1964: PUSH
1965: LD_INT 2
1967: DIV
1968: INC
1969: ST_TO_ADDR
1970: LD_INT 1
1972: PUSH
1973: FOR_DOWNTO
1974: IFFALSE 2021
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1976: LD_VAR 0 8
1980: PPUSH
1981: LD_VAR 0 7
1985: PUSH
1986: LD_VAR 0 2
1990: PUSH
1991: LD_INT 2
1993: MUL
1994: PUSH
1995: LD_INT 1
1997: MINUS
1998: ARRAY
1999: PPUSH
2000: LD_VAR 0 7
2004: PUSH
2005: LD_VAR 0 2
2009: PUSH
2010: LD_INT 2
2012: MUL
2013: ARRAY
2014: PPUSH
2015: CALL_OW 171
2019: GO 1973
2021: POP
2022: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2023: LD_VAR 0 8
2027: PPUSH
2028: LD_VAR 0 5
2032: PUSH
2033: LD_VAR 0 4
2037: ARRAY
2038: PUSH
2039: LD_INT 1
2041: ARRAY
2042: PPUSH
2043: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2047: LD_INT 35
2049: PPUSH
2050: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2054: LD_VAR 0 8
2058: PPUSH
2059: LD_VAR 0 5
2063: PUSH
2064: LD_VAR 0 4
2068: ARRAY
2069: PUSH
2070: LD_INT 1
2072: ARRAY
2073: PPUSH
2074: CALL_OW 308
2078: PUSH
2079: LD_VAR 0 8
2083: PPUSH
2084: LD_VAR 0 3
2088: PPUSH
2089: CALL_OW 289
2093: PUSH
2094: LD_INT 0
2096: EQUAL
2097: AND
2098: IFFALSE 2047
// RemoveUnit ( veh ) ;
2100: LD_VAR 0 8
2104: PPUSH
2105: CALL_OW 64
// end ;
2109: LD_VAR 0 1
2113: RET
// every 3 3$00 do
2114: GO 2116
2116: DISABLE
// begin enable ;
2117: ENABLE
// SpawnCargo ;
2118: CALL 1533 0 0
// end ;
2122: END
// export function PrepareDefenders ; var i , tmp ; begin
2123: LD_INT 0
2125: PPUSH
2126: PPUSH
2127: PPUSH
// if defenders then
2128: LD_EXP 17
2132: IFFALSE 2136
// exit ;
2134: GO 2400
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2136: LD_ADDR_VAR 0 2
2140: PUSH
2141: DOUBLE
2142: LD_INT 1
2144: DEC
2145: ST_TO_ADDR
2146: LD_INT 4
2148: PUSH
2149: LD_INT 5
2151: PUSH
2152: LD_INT 6
2154: PUSH
2155: EMPTY
2156: LIST
2157: LIST
2158: LIST
2159: PUSH
2160: LD_OWVAR 67
2164: ARRAY
2165: PUSH
2166: FOR_TO
2167: IFFALSE 2306
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2169: LD_ADDR_VAR 0 3
2173: PUSH
2174: LD_INT 6
2176: PPUSH
2177: LD_INT 2
2179: PUSH
2180: LD_INT 3
2182: PUSH
2183: EMPTY
2184: LIST
2185: LIST
2186: PUSH
2187: LD_INT 1
2189: PPUSH
2190: LD_INT 2
2192: PPUSH
2193: CALL_OW 12
2197: ARRAY
2198: PPUSH
2199: LD_INT 1
2201: PUSH
2202: LD_INT 3
2204: PUSH
2205: EMPTY
2206: LIST
2207: LIST
2208: PUSH
2209: LD_INT 1
2211: PPUSH
2212: LD_INT 2
2214: PPUSH
2215: CALL_OW 12
2219: ARRAY
2220: PPUSH
2221: LD_INT 2
2223: PPUSH
2224: LD_INT 4
2226: PUSH
2227: LD_INT 5
2229: PUSH
2230: LD_INT 9
2232: PUSH
2233: EMPTY
2234: LIST
2235: LIST
2236: LIST
2237: PUSH
2238: LD_INT 1
2240: PPUSH
2241: LD_INT 3
2243: PPUSH
2244: CALL_OW 12
2248: ARRAY
2249: PPUSH
2250: CALL 27768 0 5
2254: ST_TO_ADDR
// if tmp then
2255: LD_VAR 0 3
2259: IFFALSE 2304
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2261: LD_INT 6
2263: PPUSH
2264: LD_VAR 0 3
2268: PUSH
2269: LD_INT 1
2271: ARRAY
2272: PPUSH
2273: LD_VAR 0 3
2277: PUSH
2278: LD_INT 2
2280: ARRAY
2281: PPUSH
2282: LD_VAR 0 3
2286: PUSH
2287: LD_INT 3
2289: ARRAY
2290: PPUSH
2291: LD_VAR 0 3
2295: PUSH
2296: LD_INT 4
2298: ARRAY
2299: PPUSH
2300: CALL_OW 185
// end ;
2304: GO 2166
2306: POP
2307: POP
// repeat wait ( 0 0$1 ) ;
2308: LD_INT 35
2310: PPUSH
2311: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2315: LD_INT 22
2317: PUSH
2318: LD_INT 1
2320: PUSH
2321: EMPTY
2322: LIST
2323: LIST
2324: PUSH
2325: LD_INT 33
2327: PUSH
2328: LD_INT 2
2330: PUSH
2331: EMPTY
2332: LIST
2333: LIST
2334: PUSH
2335: EMPTY
2336: LIST
2337: LIST
2338: PPUSH
2339: CALL_OW 69
2343: PUSH
2344: LD_INT 4
2346: PUSH
2347: LD_INT 5
2349: PUSH
2350: LD_INT 6
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: LIST
2357: PUSH
2358: LD_OWVAR 67
2362: ARRAY
2363: GREATEREQUAL
2364: IFFALSE 2308
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2366: LD_ADDR_EXP 17
2370: PUSH
2371: LD_INT 22
2373: PUSH
2374: LD_INT 1
2376: PUSH
2377: EMPTY
2378: LIST
2379: LIST
2380: PUSH
2381: LD_INT 33
2383: PUSH
2384: LD_INT 2
2386: PUSH
2387: EMPTY
2388: LIST
2389: LIST
2390: PUSH
2391: EMPTY
2392: LIST
2393: LIST
2394: PPUSH
2395: CALL_OW 69
2399: ST_TO_ADDR
// end ;
2400: LD_VAR 0 1
2404: RET
// export function Defend ; var i , un , veh , tmp ; begin
2405: LD_INT 0
2407: PPUSH
2408: PPUSH
2409: PPUSH
2410: PPUSH
2411: PPUSH
// defcon_wave := defcon_wave + 1 ;
2412: LD_ADDR_EXP 19
2416: PUSH
2417: LD_EXP 19
2421: PUSH
2422: LD_INT 1
2424: PLUS
2425: ST_TO_ADDR
// if not defenders then
2426: LD_EXP 17
2430: NOT
2431: IFFALSE 2437
// PrepareDefenders ;
2433: CALL 2123 0 0
// if defcon_wave > 1 then
2437: LD_EXP 19
2441: PUSH
2442: LD_INT 1
2444: GREATER
2445: IFFALSE 2671
// begin for i = 1 to defcon_wave + 2 do
2447: LD_ADDR_VAR 0 2
2451: PUSH
2452: DOUBLE
2453: LD_INT 1
2455: DEC
2456: ST_TO_ADDR
2457: LD_EXP 19
2461: PUSH
2462: LD_INT 2
2464: PLUS
2465: PUSH
2466: FOR_TO
2467: IFFALSE 2593
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2469: LD_INT 4
2471: PPUSH
2472: LD_INT 3
2474: PPUSH
2475: LD_INT 1
2477: PPUSH
2478: LD_INT 4
2480: PUSH
2481: LD_INT 6
2483: PUSH
2484: LD_INT 7
2486: PUSH
2487: EMPTY
2488: LIST
2489: LIST
2490: LIST
2491: PUSH
2492: LD_INT 1
2494: PPUSH
2495: LD_INT 3
2497: PPUSH
2498: CALL_OW 12
2502: ARRAY
2503: PPUSH
2504: LD_INT 100
2506: PPUSH
2507: CALL 5135 0 5
// veh := CreateVehicle ;
2511: LD_ADDR_VAR 0 4
2515: PUSH
2516: CALL_OW 45
2520: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2521: LD_VAR 0 4
2525: PPUSH
2526: LD_INT 1
2528: PPUSH
2529: CALL_OW 233
// defenders := defenders ^ veh ;
2533: LD_ADDR_EXP 17
2537: PUSH
2538: LD_EXP 17
2542: PUSH
2543: LD_VAR 0 4
2547: ADD
2548: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2549: LD_INT 0
2551: PPUSH
2552: LD_INT 3
2554: PPUSH
2555: LD_INT 9
2557: PPUSH
2558: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2562: CALL_OW 44
2566: PPUSH
2567: LD_VAR 0 4
2571: PPUSH
2572: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2576: LD_VAR 0 4
2580: PPUSH
2581: LD_INT 25
2583: PPUSH
2584: LD_INT 0
2586: PPUSH
2587: CALL_OW 49
// end ;
2591: GO 2466
2593: POP
2594: POP
// for i = 1 to defcon_wave do
2595: LD_ADDR_VAR 0 2
2599: PUSH
2600: DOUBLE
2601: LD_INT 1
2603: DEC
2604: ST_TO_ADDR
2605: LD_EXP 19
2609: PUSH
2610: FOR_TO
2611: IFFALSE 2669
// begin PrepareHuman ( false , 5 , 9 ) ;
2613: LD_INT 0
2615: PPUSH
2616: LD_INT 5
2618: PPUSH
2619: LD_INT 9
2621: PPUSH
2622: CALL_OW 380
// un := CreateHuman ;
2626: LD_ADDR_VAR 0 3
2630: PUSH
2631: CALL_OW 44
2635: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2636: LD_VAR 0 3
2640: PPUSH
2641: LD_INT 25
2643: PPUSH
2644: LD_INT 0
2646: PPUSH
2647: CALL_OW 49
// defenders := defenders ^ un ;
2651: LD_ADDR_EXP 17
2655: PUSH
2656: LD_EXP 17
2660: PUSH
2661: LD_VAR 0 3
2665: ADD
2666: ST_TO_ADDR
// end ;
2667: GO 2610
2669: POP
2670: POP
// end ; repeat wait ( 0 0$1 ) ;
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 67
// for i in defenders do
2678: LD_ADDR_VAR 0 2
2682: PUSH
2683: LD_EXP 17
2687: PUSH
2688: FOR_IN
2689: IFFALSE 2771
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2691: LD_EXP 18
2695: PUSH
2696: LD_VAR 0 2
2700: PPUSH
2701: LD_EXP 18
2705: PUSH
2706: LD_INT 1
2708: ARRAY
2709: PPUSH
2710: LD_EXP 18
2714: PUSH
2715: LD_INT 2
2717: ARRAY
2718: PPUSH
2719: CALL_OW 297
2723: PUSH
2724: LD_INT 10
2726: GREATER
2727: AND
2728: PUSH
2729: LD_VAR 0 2
2733: PPUSH
2734: CALL_OW 314
2738: NOT
2739: AND
2740: IFFALSE 2769
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2742: LD_VAR 0 2
2746: PPUSH
2747: LD_EXP 18
2751: PUSH
2752: LD_INT 1
2754: ARRAY
2755: PPUSH
2756: LD_EXP 18
2760: PUSH
2761: LD_INT 2
2763: ARRAY
2764: PPUSH
2765: CALL_OW 114
// end ;
2769: GO 2688
2771: POP
2772: POP
// until not defenders ;
2773: LD_EXP 17
2777: NOT
2778: IFFALSE 2671
// end ; end_of_file
2780: LD_VAR 0 1
2784: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2785: LD_INT 0
2787: PPUSH
2788: PPUSH
2789: PPUSH
2790: PPUSH
2791: PPUSH
2792: PPUSH
2793: PPUSH
// uc_side := 4 ;
2794: LD_ADDR_OWVAR 20
2798: PUSH
2799: LD_INT 4
2801: ST_TO_ADDR
// uc_nation := 1 ;
2802: LD_ADDR_OWVAR 21
2806: PUSH
2807: LD_INT 1
2809: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2810: LD_ADDR_EXP 34
2814: PUSH
2815: LD_STRING DeltaDoctor
2817: PPUSH
2818: LD_EXP 1
2822: NOT
2823: PPUSH
2824: LD_STRING 10c_
2826: PPUSH
2827: CALL 5072 0 3
2831: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2832: LD_ADDR_EXP 33
2836: PUSH
2837: LD_STRING Joan
2839: PPUSH
2840: LD_EXP 1
2844: NOT
2845: PPUSH
2846: LD_STRING 10c_
2848: PPUSH
2849: CALL 5072 0 3
2853: ST_TO_ADDR
// if Joan then
2854: LD_EXP 33
2858: IFFALSE 2889
// friends := Insert ( friends , friends + 1 , Joan ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_EXP 4
2869: PPUSH
2870: LD_EXP 4
2874: PUSH
2875: LD_INT 1
2877: PLUS
2878: PPUSH
2879: LD_EXP 33
2883: PPUSH
2884: CALL_OW 2
2888: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2889: LD_ADDR_EXP 32
2893: PUSH
2894: LD_STRING Simms
2896: PPUSH
2897: LD_EXP 1
2901: NOT
2902: PPUSH
2903: LD_STRING 10c_
2905: PPUSH
2906: CALL 5072 0 3
2910: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2911: LD_ADDR_EXP 31
2915: PUSH
2916: LD_STRING Kikuchi
2918: PPUSH
2919: LD_EXP 1
2923: NOT
2924: PPUSH
2925: LD_STRING 11_
2927: PPUSH
2928: CALL 5072 0 3
2932: ST_TO_ADDR
// if Kikuchi then
2933: LD_EXP 31
2937: IFFALSE 2968
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2939: LD_ADDR_EXP 4
2943: PUSH
2944: LD_EXP 4
2948: PPUSH
2949: LD_EXP 4
2953: PUSH
2954: LD_INT 1
2956: PLUS
2957: PPUSH
2958: LD_EXP 31
2962: PPUSH
2963: CALL_OW 2
2967: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2968: LD_ADDR_EXP 30
2972: PUSH
2973: LD_STRING Frank
2975: PPUSH
2976: LD_EXP 1
2980: NOT
2981: PPUSH
2982: LD_STRING 11_
2984: PPUSH
2985: CALL 5072 0 3
2989: ST_TO_ADDR
// if Frank then
2990: LD_EXP 30
2994: IFFALSE 3025
// friends := Insert ( friends , friends + 1 , Frank ) ;
2996: LD_ADDR_EXP 4
3000: PUSH
3001: LD_EXP 4
3005: PPUSH
3006: LD_EXP 4
3010: PUSH
3011: LD_INT 1
3013: PLUS
3014: PPUSH
3015: LD_EXP 30
3019: PPUSH
3020: CALL_OW 2
3024: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3025: LD_ADDR_EXP 29
3029: PUSH
3030: LD_STRING Gary
3032: PPUSH
3033: LD_EXP 1
3037: NOT
3038: PPUSH
3039: LD_STRING 11_
3041: PPUSH
3042: CALL 5072 0 3
3046: ST_TO_ADDR
// if Gary then
3047: LD_EXP 29
3051: IFFALSE 3082
// friends := Insert ( friends , friends + 1 , Gary ) ;
3053: LD_ADDR_EXP 4
3057: PUSH
3058: LD_EXP 4
3062: PPUSH
3063: LD_EXP 4
3067: PUSH
3068: LD_INT 1
3070: PLUS
3071: PPUSH
3072: LD_EXP 29
3076: PPUSH
3077: CALL_OW 2
3081: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
3082: LD_ADDR_EXP 28
3086: PUSH
3087: LD_STRING Cornel
3089: PPUSH
3090: LD_EXP 1
3094: NOT
3095: PPUSH
3096: LD_STRING 11_
3098: PPUSH
3099: CALL 5072 0 3
3103: ST_TO_ADDR
// if Cornel then
3104: LD_EXP 28
3108: IFFALSE 3139
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3110: LD_ADDR_EXP 4
3114: PUSH
3115: LD_EXP 4
3119: PPUSH
3120: LD_EXP 4
3124: PUSH
3125: LD_INT 1
3127: PLUS
3128: PPUSH
3129: LD_EXP 28
3133: PPUSH
3134: CALL_OW 2
3138: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3139: LD_ADDR_EXP 27
3143: PUSH
3144: LD_STRING Houten
3146: PPUSH
3147: LD_EXP 1
3151: NOT
3152: PPUSH
3153: LD_STRING 11_
3155: PPUSH
3156: CALL 5072 0 3
3160: ST_TO_ADDR
// if Houten then
3161: LD_EXP 27
3165: IFFALSE 3196
// friends := Insert ( friends , friends + 1 , Houten ) ;
3167: LD_ADDR_EXP 4
3171: PUSH
3172: LD_EXP 4
3176: PPUSH
3177: LD_EXP 4
3181: PUSH
3182: LD_INT 1
3184: PLUS
3185: PPUSH
3186: LD_EXP 27
3190: PPUSH
3191: CALL_OW 2
3195: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3196: LD_ADDR_EXP 26
3200: PUSH
3201: LD_STRING Gladstone
3203: PPUSH
3204: LD_EXP 1
3208: NOT
3209: PPUSH
3210: LD_STRING 11_
3212: PPUSH
3213: CALL 5072 0 3
3217: ST_TO_ADDR
// if Gladstone then
3218: LD_EXP 26
3222: IFFALSE 3253
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3224: LD_ADDR_EXP 4
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: LD_EXP 4
3238: PUSH
3239: LD_INT 1
3241: PLUS
3242: PPUSH
3243: LD_EXP 26
3247: PPUSH
3248: CALL_OW 2
3252: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3253: LD_ADDR_EXP 20
3257: PUSH
3258: LD_STRING Lisa
3260: PPUSH
3261: LD_EXP 1
3265: NOT
3266: PPUSH
3267: LD_STRING 11_
3269: PPUSH
3270: CALL 5072 0 3
3274: ST_TO_ADDR
// if Lisa then
3275: LD_EXP 20
3279: IFFALSE 3304
// friends := Insert ( friends , 1 , Lisa ) ;
3281: LD_ADDR_EXP 4
3285: PUSH
3286: LD_EXP 4
3290: PPUSH
3291: LD_INT 1
3293: PPUSH
3294: LD_EXP 20
3298: PPUSH
3299: CALL_OW 2
3303: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3304: LD_ADDR_EXP 21
3308: PUSH
3309: LD_STRING Donaldson
3311: PPUSH
3312: LD_EXP 1
3316: NOT
3317: PPUSH
3318: LD_STRING 11_
3320: PPUSH
3321: CALL 5072 0 3
3325: ST_TO_ADDR
// if Donaldson then
3326: LD_EXP 21
3330: IFFALSE 3361
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: LD_EXP 21
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3361: LD_ADDR_EXP 22
3365: PUSH
3366: LD_STRING Bobby
3368: PPUSH
3369: LD_EXP 1
3373: NOT
3374: PPUSH
3375: LD_STRING 11_
3377: PPUSH
3378: CALL 5072 0 3
3382: ST_TO_ADDR
// if Bobby then
3383: LD_EXP 22
3387: IFFALSE 3418
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3389: LD_ADDR_EXP 4
3393: PUSH
3394: LD_EXP 4
3398: PPUSH
3399: LD_EXP 4
3403: PUSH
3404: LD_INT 1
3406: PLUS
3407: PPUSH
3408: LD_EXP 22
3412: PPUSH
3413: CALL_OW 2
3417: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3418: LD_ADDR_EXP 23
3422: PUSH
3423: LD_STRING Cyrus
3425: PPUSH
3426: LD_EXP 1
3430: NOT
3431: PPUSH
3432: LD_STRING 11_
3434: PPUSH
3435: CALL 5072 0 3
3439: ST_TO_ADDR
// if Cyrus then
3440: LD_EXP 23
3444: IFFALSE 3475
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3446: LD_ADDR_EXP 4
3450: PUSH
3451: LD_EXP 4
3455: PPUSH
3456: LD_EXP 4
3460: PUSH
3461: LD_INT 1
3463: PLUS
3464: PPUSH
3465: LD_EXP 23
3469: PPUSH
3470: CALL_OW 2
3474: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3475: LD_ADDR_EXP 24
3479: PUSH
3480: LD_STRING Denis
3482: PPUSH
3483: LD_EXP 1
3487: NOT
3488: PPUSH
3489: LD_STRING 11_
3491: PPUSH
3492: CALL 5072 0 3
3496: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3497: LD_ADDR_EXP 25
3501: PUSH
3502: LD_STRING Brown
3504: PPUSH
3505: LD_EXP 1
3509: NOT
3510: PPUSH
3511: LD_STRING 11_
3513: PPUSH
3514: CALL 5072 0 3
3518: ST_TO_ADDR
// if Brown then
3519: LD_EXP 25
3523: IFFALSE 3554
// friends := Insert ( friends , friends + 1 , Brown ) ;
3525: LD_ADDR_EXP 4
3529: PUSH
3530: LD_EXP 4
3534: PPUSH
3535: LD_EXP 4
3539: PUSH
3540: LD_INT 1
3542: PLUS
3543: PPUSH
3544: LD_EXP 25
3548: PPUSH
3549: CALL_OW 2
3553: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ;
3554: LD_ADDR_EXP 4
3558: PUSH
3559: LD_EXP 4
3563: PUSH
3564: LD_STRING 11c_others
3566: PPUSH
3567: CALL_OW 31
3571: ADD
3572: ST_TO_ADDR
// if friends < 10 then
3573: LD_EXP 4
3577: PUSH
3578: LD_INT 10
3580: LESS
3581: IFFALSE 3653
// for i = 1 to 10 do
3583: LD_ADDR_VAR 0 2
3587: PUSH
3588: DOUBLE
3589: LD_INT 1
3591: DEC
3592: ST_TO_ADDR
3593: LD_INT 10
3595: PUSH
3596: FOR_TO
3597: IFFALSE 3651
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3599: LD_INT 0
3601: PPUSH
3602: LD_INT 1
3604: PPUSH
3605: LD_INT 4
3607: PPUSH
3608: CALL_OW 12
3612: PPUSH
3613: LD_INT 7
3615: PPUSH
3616: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3620: LD_ADDR_EXP 4
3624: PUSH
3625: LD_EXP 4
3629: PPUSH
3630: LD_EXP 4
3634: PUSH
3635: LD_INT 1
3637: PLUS
3638: PPUSH
3639: CALL_OW 44
3643: PPUSH
3644: CALL_OW 2
3648: ST_TO_ADDR
// end ;
3649: GO 3596
3651: POP
3652: POP
// for i in friends do
3653: LD_ADDR_VAR 0 2
3657: PUSH
3658: LD_EXP 4
3662: PUSH
3663: FOR_IN
3664: IFFALSE 3722
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3666: LD_VAR 0 2
3670: PPUSH
3671: LD_INT 1
3673: PPUSH
3674: CALL_OW 259
3678: PUSH
3679: LD_VAR 0 2
3683: PPUSH
3684: LD_INT 4
3686: PPUSH
3687: CALL_OW 259
3691: GREATEREQUAL
3692: IFFALSE 3708
// SetClass ( i , class_soldier ) else
3694: LD_VAR 0 2
3698: PPUSH
3699: LD_INT 1
3701: PPUSH
3702: CALL_OW 336
3706: GO 3720
// SetClass ( i , class_scientistic ) ;
3708: LD_VAR 0 2
3712: PPUSH
3713: LD_INT 4
3715: PPUSH
3716: CALL_OW 336
3720: GO 3663
3722: POP
3723: POP
// if Frank then
3724: LD_EXP 30
3728: IFFALSE 3742
// SetClass ( Frank , class_sniper ) ;
3730: LD_EXP 30
3734: PPUSH
3735: LD_INT 5
3737: PPUSH
3738: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3742: LD_EXP 33
3746: PUSH
3747: LD_EXP 24
3751: PUSH
3752: LD_EXP 34
3756: PUSH
3757: LD_EXP 32
3761: PUSH
3762: EMPTY
3763: LIST
3764: LIST
3765: LIST
3766: LIST
3767: PPUSH
3768: LD_INT 4
3770: PPUSH
3771: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 3 ] , [ class_sniper , 0 , 3 ] ] ) ;
3775: LD_ADDR_EXP 3
3779: PUSH
3780: LD_STRING 
3782: PPUSH
3783: LD_INT 7
3785: PPUSH
3786: LD_INT 7
3788: PPUSH
3789: LD_INT -6
3791: PUSH
3792: LD_EXP 11
3796: PUSH
3797: LD_EXP 12
3801: PUSH
3802: LD_EXP 32
3806: PUSH
3807: LD_EXP 24
3811: PUSH
3812: LD_EXP 34
3816: PUSH
3817: LD_INT -2
3819: PUSH
3820: LD_INT -3
3822: PUSH
3823: LD_INT -5
3825: PUSH
3826: EMPTY
3827: LIST
3828: LIST
3829: LIST
3830: LIST
3831: LIST
3832: LIST
3833: LIST
3834: LIST
3835: LIST
3836: PUSH
3837: LD_EXP 4
3841: ADD
3842: PPUSH
3843: LD_INT 1
3845: PUSH
3846: LD_INT 4
3848: PUSH
3849: LD_INT 3
3851: PUSH
3852: EMPTY
3853: LIST
3854: LIST
3855: PUSH
3856: LD_INT 5
3858: PUSH
3859: LD_INT 0
3861: PUSH
3862: LD_INT 3
3864: PUSH
3865: EMPTY
3866: LIST
3867: LIST
3868: LIST
3869: PUSH
3870: EMPTY
3871: LIST
3872: LIST
3873: LIST
3874: PPUSH
3875: CALL_OW 42
3879: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3880: LD_ADDR_EXP 3
3884: PUSH
3885: LD_EXP 3
3889: PUSH
3890: LD_EXP 24
3894: PUSH
3895: LD_EXP 32
3899: PUSH
3900: EMPTY
3901: LIST
3902: LIST
3903: UNION
3904: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3905: LD_ADDR_EXP 5
3909: PUSH
3910: LD_EXP 4
3914: PUSH
3915: LD_EXP 11
3919: PUSH
3920: LD_EXP 12
3924: PUSH
3925: LD_EXP 20
3929: PUSH
3930: LD_EXP 21
3934: PUSH
3935: LD_EXP 22
3939: PUSH
3940: LD_EXP 23
3944: PUSH
3945: LD_EXP 24
3949: PUSH
3950: LD_EXP 25
3954: PUSH
3955: LD_EXP 26
3959: PUSH
3960: LD_EXP 27
3964: PUSH
3965: LD_EXP 28
3969: PUSH
3970: LD_EXP 29
3974: PUSH
3975: LD_EXP 30
3979: PUSH
3980: LD_EXP 31
3984: PUSH
3985: LD_EXP 32
3989: PUSH
3990: LD_EXP 33
3994: PUSH
3995: LD_EXP 34
3999: PUSH
4000: EMPTY
4001: LIST
4002: LIST
4003: LIST
4004: LIST
4005: LIST
4006: LIST
4007: LIST
4008: LIST
4009: LIST
4010: LIST
4011: LIST
4012: LIST
4013: LIST
4014: LIST
4015: LIST
4016: LIST
4017: LIST
4018: PUSH
4019: LD_EXP 3
4023: ADD
4024: DIFF
4025: ST_TO_ADDR
// friends := friends diff others ;
4026: LD_ADDR_EXP 4
4030: PUSH
4031: LD_EXP 4
4035: PUSH
4036: LD_EXP 5
4040: DIFF
4041: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4042: LD_ADDR_VAR 0 4
4046: PUSH
4047: LD_INT 111
4049: PUSH
4050: LD_INT 137
4052: PUSH
4053: LD_INT 51
4055: PUSH
4056: EMPTY
4057: LIST
4058: LIST
4059: LIST
4060: PUSH
4061: LD_INT 147
4063: PUSH
4064: LD_INT 129
4066: PUSH
4067: LD_INT 25
4069: PUSH
4070: EMPTY
4071: LIST
4072: LIST
4073: LIST
4074: PUSH
4075: EMPTY
4076: LIST
4077: LIST
4078: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4079: LD_ADDR_VAR 0 5
4083: PUSH
4084: LD_INT 5
4086: PUSH
4087: LD_INT 6
4089: PUSH
4090: LD_INT 7
4092: PUSH
4093: LD_INT 8
4095: PUSH
4096: LD_INT 17
4098: PUSH
4099: LD_INT 18
4101: PUSH
4102: EMPTY
4103: LIST
4104: LIST
4105: LIST
4106: LIST
4107: LIST
4108: LIST
4109: ST_TO_ADDR
// for i in buildings do
4110: LD_ADDR_VAR 0 2
4114: PUSH
4115: LD_VAR 0 4
4119: PUSH
4120: FOR_IN
4121: IFFALSE 4137
// SetSide ( i , 4 ) ;
4123: LD_VAR 0 2
4127: PPUSH
4128: LD_INT 4
4130: PPUSH
4131: CALL_OW 235
4135: GO 4120
4137: POP
4138: POP
// for i in selected do
4139: LD_ADDR_VAR 0 2
4143: PUSH
4144: LD_EXP 3
4148: PUSH
4149: FOR_IN
4150: IFFALSE 4412
// begin if GetClass ( i ) in [ 1 , 5 ] then
4152: LD_VAR 0 2
4156: PPUSH
4157: CALL_OW 257
4161: PUSH
4162: LD_INT 1
4164: PUSH
4165: LD_INT 5
4167: PUSH
4168: EMPTY
4169: LIST
4170: LIST
4171: IN
4172: IFFALSE 4293
// begin if buildings [ 1 ] then
4174: LD_VAR 0 4
4178: PUSH
4179: LD_INT 1
4181: ARRAY
4182: IFFALSE 4243
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4184: LD_VAR 0 2
4188: PPUSH
4189: LD_VAR 0 4
4193: PUSH
4194: LD_INT 1
4196: ARRAY
4197: PUSH
4198: LD_INT 1
4200: ARRAY
4201: PPUSH
4202: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4206: LD_ADDR_VAR 0 4
4210: PUSH
4211: LD_VAR 0 4
4215: PPUSH
4216: LD_INT 1
4218: PPUSH
4219: LD_VAR 0 4
4223: PUSH
4224: LD_INT 1
4226: ARRAY
4227: PPUSH
4228: LD_INT 1
4230: PPUSH
4231: CALL_OW 3
4235: PPUSH
4236: CALL_OW 1
4240: ST_TO_ADDR
// end else
4241: GO 4291
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4243: LD_VAR 0 2
4247: PPUSH
4248: LD_VAR 0 5
4252: PUSH
4253: LD_INT 1
4255: ARRAY
4256: PPUSH
4257: LD_INT 0
4259: PPUSH
4260: CALL_OW 49
// ComHold ( i ) ;
4264: LD_VAR 0 2
4268: PPUSH
4269: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4273: LD_ADDR_VAR 0 5
4277: PUSH
4278: LD_VAR 0 5
4282: PPUSH
4283: LD_INT 1
4285: PPUSH
4286: CALL_OW 3
4290: ST_TO_ADDR
// end ; end else
4291: GO 4410
// begin if buildings [ 2 ] then
4293: LD_VAR 0 4
4297: PUSH
4298: LD_INT 2
4300: ARRAY
4301: IFFALSE 4362
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4303: LD_VAR 0 2
4307: PPUSH
4308: LD_VAR 0 4
4312: PUSH
4313: LD_INT 2
4315: ARRAY
4316: PUSH
4317: LD_INT 1
4319: ARRAY
4320: PPUSH
4321: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4325: LD_ADDR_VAR 0 4
4329: PUSH
4330: LD_VAR 0 4
4334: PPUSH
4335: LD_INT 2
4337: PPUSH
4338: LD_VAR 0 4
4342: PUSH
4343: LD_INT 2
4345: ARRAY
4346: PPUSH
4347: LD_INT 1
4349: PPUSH
4350: CALL_OW 3
4354: PPUSH
4355: CALL_OW 1
4359: ST_TO_ADDR
// end else
4360: GO 4410
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4362: LD_VAR 0 2
4366: PPUSH
4367: LD_VAR 0 5
4371: PUSH
4372: LD_INT 1
4374: ARRAY
4375: PPUSH
4376: LD_INT 0
4378: PPUSH
4379: CALL_OW 49
// ComHold ( i ) ;
4383: LD_VAR 0 2
4387: PPUSH
4388: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4392: LD_ADDR_VAR 0 5
4396: PUSH
4397: LD_VAR 0 5
4401: PPUSH
4402: LD_INT 1
4404: PPUSH
4405: CALL_OW 3
4409: ST_TO_ADDR
// end ; end ; end ;
4410: GO 4149
4412: POP
4413: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4414: LD_ADDR_VAR 0 6
4418: PUSH
4419: LD_INT 22
4421: PUSH
4422: LD_INT 1
4424: PUSH
4425: EMPTY
4426: LIST
4427: LIST
4428: PUSH
4429: LD_INT 30
4431: PUSH
4432: LD_INT 32
4434: PUSH
4435: EMPTY
4436: LIST
4437: LIST
4438: PUSH
4439: EMPTY
4440: LIST
4441: LIST
4442: PPUSH
4443: CALL_OW 69
4447: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4448: LD_ADDR_VAR 0 2
4452: PUSH
4453: DOUBLE
4454: LD_VAR 0 6
4458: PUSH
4459: LD_EXP 5
4463: MINUS
4464: INC
4465: ST_TO_ADDR
4466: LD_INT 1
4468: PUSH
4469: FOR_DOWNTO
4470: IFFALSE 4533
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4472: LD_INT 0
4474: PPUSH
4475: LD_INT 1
4477: PPUSH
4478: LD_INT 7
4480: PUSH
4481: LD_INT 8
4483: PUSH
4484: LD_INT 9
4486: PUSH
4487: EMPTY
4488: LIST
4489: LIST
4490: LIST
4491: PUSH
4492: LD_OWVAR 67
4496: ARRAY
4497: PPUSH
4498: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4502: LD_ADDR_EXP 5
4506: PUSH
4507: LD_EXP 5
4511: PPUSH
4512: LD_EXP 5
4516: PUSH
4517: LD_INT 1
4519: PLUS
4520: PPUSH
4521: CALL_OW 44
4525: PPUSH
4526: CALL_OW 2
4530: ST_TO_ADDR
// end ;
4531: GO 4469
4533: POP
4534: POP
// if others then
4535: LD_EXP 5
4539: IFFALSE 4645
// for i = 1 to bunkers do
4541: LD_ADDR_VAR 0 2
4545: PUSH
4546: DOUBLE
4547: LD_INT 1
4549: DEC
4550: ST_TO_ADDR
4551: LD_VAR 0 6
4555: PUSH
4556: FOR_TO
4557: IFFALSE 4643
// begin SetSide ( others [ others ] , 1 ) ;
4559: LD_EXP 5
4563: PUSH
4564: LD_EXP 5
4568: ARRAY
4569: PPUSH
4570: LD_INT 1
4572: PPUSH
4573: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4577: LD_EXP 5
4581: PUSH
4582: LD_EXP 5
4586: ARRAY
4587: PPUSH
4588: LD_INT 1
4590: PPUSH
4591: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4595: LD_EXP 5
4599: PUSH
4600: LD_EXP 5
4604: ARRAY
4605: PPUSH
4606: LD_VAR 0 6
4610: PUSH
4611: LD_VAR 0 2
4615: ARRAY
4616: PPUSH
4617: CALL_OW 52
// others := Delete ( others , others ) ;
4621: LD_ADDR_EXP 5
4625: PUSH
4626: LD_EXP 5
4630: PPUSH
4631: LD_EXP 5
4635: PPUSH
4636: CALL_OW 3
4640: ST_TO_ADDR
// end ;
4641: GO 4556
4643: POP
4644: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4645: LD_ADDR_VAR 0 5
4649: PUSH
4650: LD_VAR 0 5
4654: PUSH
4655: LD_INT 9
4657: PUSH
4658: LD_INT 10
4660: PUSH
4661: LD_INT 11
4663: PUSH
4664: LD_INT 12
4666: PUSH
4667: LD_INT 13
4669: PUSH
4670: LD_INT 14
4672: PUSH
4673: LD_INT 15
4675: PUSH
4676: LD_INT 16
4678: PUSH
4679: EMPTY
4680: LIST
4681: LIST
4682: LIST
4683: LIST
4684: LIST
4685: LIST
4686: LIST
4687: LIST
4688: UNION
4689: ST_TO_ADDR
// for i in friends ^ others do
4690: LD_ADDR_VAR 0 2
4694: PUSH
4695: LD_EXP 4
4699: PUSH
4700: LD_EXP 5
4704: ADD
4705: PUSH
4706: FOR_IN
4707: IFFALSE 5047
// begin SetTag ( i , 2 ) ;
4709: LD_VAR 0 2
4713: PPUSH
4714: LD_INT 2
4716: PPUSH
4717: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4721: LD_VAR 0 2
4725: PUSH
4726: LD_EXP 4
4730: IN
4731: PUSH
4732: LD_VAR 0 2
4736: PPUSH
4737: CALL_OW 257
4741: PUSH
4742: LD_INT 1
4744: EQUAL
4745: AND
4746: PUSH
4747: LD_VAR 0 2
4751: PUSH
4752: LD_EXP 5
4756: IN
4757: OR
4758: PUSH
4759: LD_VAR 0 4
4763: PUSH
4764: LD_INT 1
4766: ARRAY
4767: AND
4768: IFFALSE 4841
// begin SetClass ( i , 1 ) ;
4770: LD_VAR 0 2
4774: PPUSH
4775: LD_INT 1
4777: PPUSH
4778: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4782: LD_VAR 0 2
4786: PPUSH
4787: LD_VAR 0 4
4791: PUSH
4792: LD_INT 1
4794: ARRAY
4795: PUSH
4796: LD_INT 1
4798: ARRAY
4799: PPUSH
4800: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4804: LD_ADDR_VAR 0 4
4808: PUSH
4809: LD_VAR 0 4
4813: PPUSH
4814: LD_INT 1
4816: PPUSH
4817: LD_VAR 0 4
4821: PUSH
4822: LD_INT 1
4824: ARRAY
4825: PPUSH
4826: LD_INT 1
4828: PPUSH
4829: CALL_OW 3
4833: PPUSH
4834: CALL_OW 1
4838: ST_TO_ADDR
// continue ;
4839: GO 4706
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4841: LD_VAR 0 2
4845: PUSH
4846: LD_EXP 4
4850: IN
4851: PUSH
4852: LD_VAR 0 2
4856: PPUSH
4857: CALL_OW 257
4861: PUSH
4862: LD_INT 4
4864: EQUAL
4865: AND
4866: PUSH
4867: LD_VAR 0 2
4871: PUSH
4872: LD_EXP 5
4876: IN
4877: OR
4878: PUSH
4879: LD_VAR 0 4
4883: PUSH
4884: LD_INT 2
4886: ARRAY
4887: AND
4888: IFFALSE 4961
// begin SetClass ( i , 4 ) ;
4890: LD_VAR 0 2
4894: PPUSH
4895: LD_INT 4
4897: PPUSH
4898: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4902: LD_VAR 0 2
4906: PPUSH
4907: LD_VAR 0 4
4911: PUSH
4912: LD_INT 2
4914: ARRAY
4915: PUSH
4916: LD_INT 1
4918: ARRAY
4919: PPUSH
4920: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4924: LD_ADDR_VAR 0 4
4928: PUSH
4929: LD_VAR 0 4
4933: PPUSH
4934: LD_INT 2
4936: PPUSH
4937: LD_VAR 0 4
4941: PUSH
4942: LD_INT 2
4944: ARRAY
4945: PPUSH
4946: LD_INT 1
4948: PPUSH
4949: CALL_OW 3
4953: PPUSH
4954: CALL_OW 1
4958: ST_TO_ADDR
// continue ;
4959: GO 4706
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4961: LD_VAR 0 2
4965: PPUSH
4966: LD_VAR 0 5
4970: PUSH
4971: LD_INT 1
4973: ARRAY
4974: PPUSH
4975: LD_INT 0
4977: PPUSH
4978: CALL_OW 49
// if GetClass ( i ) <> 4 then
4982: LD_VAR 0 2
4986: PPUSH
4987: CALL_OW 257
4991: PUSH
4992: LD_INT 4
4994: NONEQUAL
4995: IFFALSE 5009
// SetClass ( i , 1 ) ;
4997: LD_VAR 0 2
5001: PPUSH
5002: LD_INT 1
5004: PPUSH
5005: CALL_OW 336
// ComHold ( i ) ;
5009: LD_VAR 0 2
5013: PPUSH
5014: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5018: LD_ADDR_VAR 0 5
5022: PUSH
5023: LD_VAR 0 5
5027: PPUSH
5028: LD_INT 1
5030: PPUSH
5031: CALL_OW 3
5035: ST_TO_ADDR
// if not areas then
5036: LD_VAR 0 5
5040: NOT
5041: IFFALSE 5045
// break ;
5043: GO 5047
// end ;
5045: GO 4706
5047: POP
5048: POP
// if Frank then
5049: LD_EXP 30
5053: IFFALSE 5067
// SetClass ( Frank , class_sniper ) ;
5055: LD_EXP 30
5059: PPUSH
5060: LD_INT 5
5062: PPUSH
5063: CALL_OW 336
// end ; end_of_file
5067: LD_VAR 0 1
5071: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5072: LD_INT 0
5074: PPUSH
5075: PPUSH
// if exist_mode then
5076: LD_VAR 0 2
5080: IFFALSE 5105
// unit := CreateCharacter ( prefix & ident ) else
5082: LD_ADDR_VAR 0 5
5086: PUSH
5087: LD_VAR 0 3
5091: PUSH
5092: LD_VAR 0 1
5096: STR
5097: PPUSH
5098: CALL_OW 34
5102: ST_TO_ADDR
5103: GO 5120
// unit := NewCharacter ( ident ) ;
5105: LD_ADDR_VAR 0 5
5109: PUSH
5110: LD_VAR 0 1
5114: PPUSH
5115: CALL_OW 25
5119: ST_TO_ADDR
// result := unit ;
5120: LD_ADDR_VAR 0 4
5124: PUSH
5125: LD_VAR 0 5
5129: ST_TO_ADDR
// end ;
5130: LD_VAR 0 4
5134: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5135: LD_INT 0
5137: PPUSH
// vc_chassis := chassis ;
5138: LD_ADDR_OWVAR 37
5142: PUSH
5143: LD_VAR 0 1
5147: ST_TO_ADDR
// vc_engine := engine ;
5148: LD_ADDR_OWVAR 39
5152: PUSH
5153: LD_VAR 0 2
5157: ST_TO_ADDR
// vc_control := control ;
5158: LD_ADDR_OWVAR 38
5162: PUSH
5163: LD_VAR 0 3
5167: ST_TO_ADDR
// vc_weapon := weapon ;
5168: LD_ADDR_OWVAR 40
5172: PUSH
5173: LD_VAR 0 4
5177: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5178: LD_ADDR_OWVAR 41
5182: PUSH
5183: LD_VAR 0 5
5187: ST_TO_ADDR
// end ;
5188: LD_VAR 0 6
5192: RET
// export function CanSayRand ( side ) ; begin
5193: LD_INT 0
5195: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5196: LD_ADDR_VAR 0 2
5200: PUSH
5201: LD_INT 52
5203: PUSH
5204: EMPTY
5205: LIST
5206: PUSH
5207: LD_INT 22
5209: PUSH
5210: LD_VAR 0 1
5214: PUSH
5215: EMPTY
5216: LIST
5217: LIST
5218: PUSH
5219: LD_INT 2
5221: PUSH
5222: LD_INT 25
5224: PUSH
5225: LD_INT 1
5227: PUSH
5228: EMPTY
5229: LIST
5230: LIST
5231: PUSH
5232: LD_INT 25
5234: PUSH
5235: LD_INT 2
5237: PUSH
5238: EMPTY
5239: LIST
5240: LIST
5241: PUSH
5242: LD_INT 25
5244: PUSH
5245: LD_INT 3
5247: PUSH
5248: EMPTY
5249: LIST
5250: LIST
5251: PUSH
5252: LD_INT 25
5254: PUSH
5255: LD_INT 4
5257: PUSH
5258: EMPTY
5259: LIST
5260: LIST
5261: PUSH
5262: EMPTY
5263: LIST
5264: LIST
5265: LIST
5266: LIST
5267: LIST
5268: PUSH
5269: EMPTY
5270: LIST
5271: LIST
5272: LIST
5273: PPUSH
5274: CALL_OW 69
5278: PUSH
5279: LD_EXP 11
5283: PUSH
5284: LD_EXP 30
5288: PUSH
5289: LD_EXP 20
5293: PUSH
5294: LD_EXP 21
5298: PUSH
5299: LD_EXP 22
5303: PUSH
5304: LD_EXP 23
5308: PUSH
5309: LD_EXP 24
5313: PUSH
5314: LD_EXP 25
5318: PUSH
5319: LD_EXP 26
5323: PUSH
5324: LD_EXP 27
5328: PUSH
5329: LD_EXP 13
5333: PUSH
5334: LD_EXP 28
5338: PUSH
5339: LD_EXP 29
5343: PUSH
5344: LD_EXP 31
5348: PUSH
5349: EMPTY
5350: LIST
5351: LIST
5352: LIST
5353: LIST
5354: LIST
5355: LIST
5356: LIST
5357: LIST
5358: LIST
5359: LIST
5360: LIST
5361: LIST
5362: LIST
5363: LIST
5364: DIFF
5365: ST_TO_ADDR
// end ;
5366: LD_VAR 0 2
5370: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5371: LD_INT 0
5373: PPUSH
5374: PPUSH
5375: PPUSH
5376: PPUSH
5377: PPUSH
5378: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5379: LD_VAR 0 1
5383: NOT
5384: PUSH
5385: LD_VAR 0 1
5389: PPUSH
5390: CALL_OW 263
5394: PUSH
5395: LD_INT 2
5397: EQUAL
5398: NOT
5399: OR
5400: IFFALSE 5404
// exit ;
5402: GO 5720
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5404: LD_ADDR_VAR 0 6
5408: PUSH
5409: LD_INT 22
5411: PUSH
5412: LD_VAR 0 1
5416: PPUSH
5417: CALL_OW 255
5421: PUSH
5422: EMPTY
5423: LIST
5424: LIST
5425: PUSH
5426: LD_INT 2
5428: PUSH
5429: LD_INT 30
5431: PUSH
5432: LD_INT 36
5434: PUSH
5435: EMPTY
5436: LIST
5437: LIST
5438: PUSH
5439: LD_INT 34
5441: PUSH
5442: LD_INT 31
5444: PUSH
5445: EMPTY
5446: LIST
5447: LIST
5448: PUSH
5449: EMPTY
5450: LIST
5451: LIST
5452: LIST
5453: PUSH
5454: EMPTY
5455: LIST
5456: LIST
5457: PPUSH
5458: CALL_OW 69
5462: ST_TO_ADDR
// if not tmp then
5463: LD_VAR 0 6
5467: NOT
5468: IFFALSE 5472
// exit ;
5470: GO 5720
// result := [ ] ;
5472: LD_ADDR_VAR 0 2
5476: PUSH
5477: EMPTY
5478: ST_TO_ADDR
// for i in tmp do
5479: LD_ADDR_VAR 0 3
5483: PUSH
5484: LD_VAR 0 6
5488: PUSH
5489: FOR_IN
5490: IFFALSE 5561
// begin t := UnitsInside ( i ) ;
5492: LD_ADDR_VAR 0 4
5496: PUSH
5497: LD_VAR 0 3
5501: PPUSH
5502: CALL_OW 313
5506: ST_TO_ADDR
// if t then
5507: LD_VAR 0 4
5511: IFFALSE 5559
// for j in t do
5513: LD_ADDR_VAR 0 7
5517: PUSH
5518: LD_VAR 0 4
5522: PUSH
5523: FOR_IN
5524: IFFALSE 5557
// result := Insert ( result , result + 1 , j ) ;
5526: LD_ADDR_VAR 0 2
5530: PUSH
5531: LD_VAR 0 2
5535: PPUSH
5536: LD_VAR 0 2
5540: PUSH
5541: LD_INT 1
5543: PLUS
5544: PPUSH
5545: LD_VAR 0 7
5549: PPUSH
5550: CALL_OW 2
5554: ST_TO_ADDR
5555: GO 5523
5557: POP
5558: POP
// end ;
5559: GO 5489
5561: POP
5562: POP
// if not result then
5563: LD_VAR 0 2
5567: NOT
5568: IFFALSE 5572
// exit ;
5570: GO 5720
// mech := result [ 1 ] ;
5572: LD_ADDR_VAR 0 5
5576: PUSH
5577: LD_VAR 0 2
5581: PUSH
5582: LD_INT 1
5584: ARRAY
5585: ST_TO_ADDR
// if result > 1 then
5586: LD_VAR 0 2
5590: PUSH
5591: LD_INT 1
5593: GREATER
5594: IFFALSE 5706
// for i = 2 to result do
5596: LD_ADDR_VAR 0 3
5600: PUSH
5601: DOUBLE
5602: LD_INT 2
5604: DEC
5605: ST_TO_ADDR
5606: LD_VAR 0 2
5610: PUSH
5611: FOR_TO
5612: IFFALSE 5704
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5614: LD_ADDR_VAR 0 4
5618: PUSH
5619: LD_VAR 0 2
5623: PUSH
5624: LD_VAR 0 3
5628: ARRAY
5629: PPUSH
5630: LD_INT 3
5632: PPUSH
5633: CALL_OW 259
5637: PUSH
5638: LD_VAR 0 2
5642: PUSH
5643: LD_VAR 0 3
5647: ARRAY
5648: PPUSH
5649: CALL_OW 432
5653: MINUS
5654: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5655: LD_VAR 0 4
5659: PUSH
5660: LD_VAR 0 5
5664: PPUSH
5665: LD_INT 3
5667: PPUSH
5668: CALL_OW 259
5672: PUSH
5673: LD_VAR 0 5
5677: PPUSH
5678: CALL_OW 432
5682: MINUS
5683: GREATEREQUAL
5684: IFFALSE 5702
// mech := result [ i ] ;
5686: LD_ADDR_VAR 0 5
5690: PUSH
5691: LD_VAR 0 2
5695: PUSH
5696: LD_VAR 0 3
5700: ARRAY
5701: ST_TO_ADDR
// end ;
5702: GO 5611
5704: POP
5705: POP
// ComLinkTo ( vehicle , mech ) ;
5706: LD_VAR 0 1
5710: PPUSH
5711: LD_VAR 0 5
5715: PPUSH
5716: CALL_OW 135
// end ;
5720: LD_VAR 0 2
5724: RET
// export function SayRand ( sex , dial ) ; begin
5725: LD_INT 0
5727: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5728: LD_ADDR_VAR 0 3
5732: PUSH
5733: LD_INT 52
5735: PUSH
5736: EMPTY
5737: LIST
5738: PUSH
5739: LD_INT 22
5741: PUSH
5742: LD_INT 1
5744: PUSH
5745: EMPTY
5746: LIST
5747: LIST
5748: PUSH
5749: LD_INT 26
5751: PUSH
5752: LD_VAR 0 1
5756: PUSH
5757: EMPTY
5758: LIST
5759: LIST
5760: PUSH
5761: LD_INT 2
5763: PUSH
5764: LD_INT 25
5766: PUSH
5767: LD_INT 1
5769: PUSH
5770: EMPTY
5771: LIST
5772: LIST
5773: PUSH
5774: LD_INT 25
5776: PUSH
5777: LD_INT 2
5779: PUSH
5780: EMPTY
5781: LIST
5782: LIST
5783: PUSH
5784: LD_INT 25
5786: PUSH
5787: LD_INT 3
5789: PUSH
5790: EMPTY
5791: LIST
5792: LIST
5793: PUSH
5794: LD_INT 25
5796: PUSH
5797: LD_INT 4
5799: PUSH
5800: EMPTY
5801: LIST
5802: LIST
5803: PUSH
5804: EMPTY
5805: LIST
5806: LIST
5807: LIST
5808: LIST
5809: LIST
5810: PUSH
5811: EMPTY
5812: LIST
5813: LIST
5814: LIST
5815: LIST
5816: PPUSH
5817: CALL_OW 69
5821: PUSH
5822: LD_EXP 11
5826: PUSH
5827: LD_EXP 30
5831: PUSH
5832: LD_EXP 20
5836: PUSH
5837: LD_EXP 21
5841: PUSH
5842: LD_EXP 22
5846: PUSH
5847: LD_EXP 23
5851: PUSH
5852: LD_EXP 24
5856: PUSH
5857: LD_EXP 25
5861: PUSH
5862: LD_EXP 26
5866: PUSH
5867: LD_EXP 27
5871: PUSH
5872: LD_EXP 13
5876: PUSH
5877: LD_EXP 28
5881: PUSH
5882: LD_EXP 29
5886: PUSH
5887: LD_EXP 31
5891: PUSH
5892: EMPTY
5893: LIST
5894: LIST
5895: LIST
5896: LIST
5897: LIST
5898: LIST
5899: LIST
5900: LIST
5901: LIST
5902: LIST
5903: LIST
5904: LIST
5905: LIST
5906: LIST
5907: DIFF
5908: ST_TO_ADDR
// if not result then
5909: LD_VAR 0 3
5913: NOT
5914: IFFALSE 5918
// exit ;
5916: GO 5946
// result := result [ 1 ] ;
5918: LD_ADDR_VAR 0 3
5922: PUSH
5923: LD_VAR 0 3
5927: PUSH
5928: LD_INT 1
5930: ARRAY
5931: ST_TO_ADDR
// Say ( result , dial ) ;
5932: LD_VAR 0 3
5936: PPUSH
5937: LD_VAR 0 2
5941: PPUSH
5942: CALL_OW 88
// end ;
5946: LD_VAR 0 3
5950: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5951: LD_INT 0
5953: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5954: LD_ADDR_VAR 0 4
5958: PUSH
5959: LD_INT 22
5961: PUSH
5962: LD_INT 1
5964: PUSH
5965: EMPTY
5966: LIST
5967: LIST
5968: PUSH
5969: LD_INT 26
5971: PUSH
5972: LD_VAR 0 1
5976: PUSH
5977: EMPTY
5978: LIST
5979: LIST
5980: PUSH
5981: LD_INT 2
5983: PUSH
5984: LD_INT 25
5986: PUSH
5987: LD_INT 1
5989: PUSH
5990: EMPTY
5991: LIST
5992: LIST
5993: PUSH
5994: LD_INT 25
5996: PUSH
5997: LD_INT 2
5999: PUSH
6000: EMPTY
6001: LIST
6002: LIST
6003: PUSH
6004: LD_INT 25
6006: PUSH
6007: LD_INT 3
6009: PUSH
6010: EMPTY
6011: LIST
6012: LIST
6013: PUSH
6014: LD_INT 25
6016: PUSH
6017: LD_INT 4
6019: PUSH
6020: EMPTY
6021: LIST
6022: LIST
6023: PUSH
6024: EMPTY
6025: LIST
6026: LIST
6027: LIST
6028: LIST
6029: LIST
6030: PUSH
6031: EMPTY
6032: LIST
6033: LIST
6034: LIST
6035: PPUSH
6036: CALL_OW 69
6040: PUSH
6041: LD_EXP 11
6045: PUSH
6046: LD_EXP 30
6050: PUSH
6051: LD_EXP 20
6055: PUSH
6056: LD_EXP 21
6060: PUSH
6061: LD_EXP 22
6065: PUSH
6066: LD_EXP 23
6070: PUSH
6071: LD_EXP 24
6075: PUSH
6076: LD_EXP 25
6080: PUSH
6081: LD_EXP 26
6085: PUSH
6086: LD_EXP 27
6090: PUSH
6091: LD_EXP 13
6095: PUSH
6096: LD_EXP 28
6100: PUSH
6101: LD_EXP 29
6105: PUSH
6106: LD_EXP 31
6110: PUSH
6111: EMPTY
6112: LIST
6113: LIST
6114: LIST
6115: LIST
6116: LIST
6117: LIST
6118: LIST
6119: LIST
6120: LIST
6121: LIST
6122: LIST
6123: LIST
6124: LIST
6125: LIST
6126: PUSH
6127: LD_VAR 0 3
6131: ADD
6132: DIFF
6133: ST_TO_ADDR
// if not result then
6134: LD_VAR 0 4
6138: NOT
6139: IFFALSE 6143
// exit ;
6141: GO 6171
// result := result [ 1 ] ;
6143: LD_ADDR_VAR 0 4
6147: PUSH
6148: LD_VAR 0 4
6152: PUSH
6153: LD_INT 1
6155: ARRAY
6156: ST_TO_ADDR
// Say ( result , dial ) ;
6157: LD_VAR 0 4
6161: PPUSH
6162: LD_VAR 0 2
6166: PPUSH
6167: CALL_OW 88
// end ;
6171: LD_VAR 0 4
6175: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6176: LD_INT 0
6178: PPUSH
6179: PPUSH
6180: PPUSH
6181: PPUSH
6182: PPUSH
6183: PPUSH
6184: PPUSH
6185: PPUSH
6186: PPUSH
6187: PPUSH
6188: PPUSH
6189: PPUSH
6190: PPUSH
6191: PPUSH
6192: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6193: LD_VAR 0 1
6197: NOT
6198: PUSH
6199: LD_VAR 0 2
6203: NOT
6204: OR
6205: PUSH
6206: LD_VAR 0 1
6210: PPUSH
6211: CALL_OW 247
6215: PUSH
6216: LD_INT 3
6218: EQUAL
6219: OR
6220: IFFALSE 6224
// exit ;
6222: GO 7701
// for i = path downto 1 do
6224: LD_ADDR_VAR 0 5
6228: PUSH
6229: DOUBLE
6230: LD_VAR 0 2
6234: INC
6235: ST_TO_ADDR
6236: LD_INT 1
6238: PUSH
6239: FOR_DOWNTO
6240: IFFALSE 6301
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6242: LD_VAR 0 2
6246: PUSH
6247: LD_VAR 0 5
6251: ARRAY
6252: PUSH
6253: LD_INT 1
6255: ARRAY
6256: PPUSH
6257: LD_VAR 0 2
6261: PUSH
6262: LD_VAR 0 5
6266: ARRAY
6267: PUSH
6268: LD_INT 2
6270: ARRAY
6271: PPUSH
6272: CALL_OW 488
6276: NOT
6277: IFFALSE 6299
// path = Delete ( path , i ) ;
6279: LD_ADDR_VAR 0 2
6283: PUSH
6284: LD_VAR 0 2
6288: PPUSH
6289: LD_VAR 0 5
6293: PPUSH
6294: CALL_OW 3
6298: ST_TO_ADDR
// end ;
6299: GO 6239
6301: POP
6302: POP
// if not path then
6303: LD_VAR 0 2
6307: NOT
6308: IFFALSE 6312
// exit ;
6310: GO 7701
// tmp_path := [ ] ;
6312: LD_ADDR_VAR 0 11
6316: PUSH
6317: EMPTY
6318: ST_TO_ADDR
// if flags then
6319: LD_VAR 0 3
6323: IFFALSE 6397
// begin if flags [ 1 ] then
6325: LD_VAR 0 3
6329: PUSH
6330: LD_INT 1
6332: ARRAY
6333: IFFALSE 6349
// safe_place = flags [ 1 ] ;
6335: LD_ADDR_VAR 0 16
6339: PUSH
6340: LD_VAR 0 3
6344: PUSH
6345: LD_INT 1
6347: ARRAY
6348: ST_TO_ADDR
// if flags [ 2 ] then
6349: LD_VAR 0 3
6353: PUSH
6354: LD_INT 2
6356: ARRAY
6357: IFFALSE 6373
// spot_dist = flags [ 2 ] ;
6359: LD_ADDR_VAR 0 15
6363: PUSH
6364: LD_VAR 0 3
6368: PUSH
6369: LD_INT 2
6371: ARRAY
6372: ST_TO_ADDR
// if flags [ 3 ] then
6373: LD_VAR 0 3
6377: PUSH
6378: LD_INT 3
6380: ARRAY
6381: IFFALSE 6397
// chase_range = flags [ 3 ] ;
6383: LD_ADDR_VAR 0 17
6387: PUSH
6388: LD_VAR 0 3
6392: PUSH
6393: LD_INT 3
6395: ARRAY
6396: ST_TO_ADDR
// end ; if not chase_range then
6397: LD_VAR 0 17
6401: NOT
6402: IFFALSE 6412
// chase_range = 8 ;
6404: LD_ADDR_VAR 0 17
6408: PUSH
6409: LD_INT 8
6411: ST_TO_ADDR
// if not spot_dist then
6412: LD_VAR 0 15
6416: NOT
6417: IFFALSE 6427
// spot_dist := 8 ;
6419: LD_ADDR_VAR 0 15
6423: PUSH
6424: LD_INT 8
6426: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6427: LD_ADDR_VAR 0 18
6431: PUSH
6432: LD_VAR 0 1
6436: PPUSH
6437: CALL_OW 247
6441: PUSH
6442: LD_INT 2
6444: EQUAL
6445: PUSH
6446: LD_VAR 0 1
6450: PPUSH
6451: CALL_OW 262
6455: PUSH
6456: LD_INT 3
6458: NONEQUAL
6459: AND
6460: ST_TO_ADDR
// status = 1 ;
6461: LD_ADDR_VAR 0 12
6465: PUSH
6466: LD_INT 1
6468: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6469: LD_ADDR_VAR 0 11
6473: PUSH
6474: LD_INT 1
6476: PUSH
6477: LD_VAR 0 2
6481: PUSH
6482: LD_INT 1
6484: ARRAY
6485: PUSH
6486: EMPTY
6487: LIST
6488: LIST
6489: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6490: LD_INT 35
6492: PPUSH
6493: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6497: LD_VAR 0 18
6501: PUSH
6502: LD_VAR 0 1
6506: PPUSH
6507: CALL_OW 261
6511: PUSH
6512: LD_INT 20
6514: LESS
6515: AND
6516: IFFALSE 6709
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6518: LD_ADDR_VAR 0 10
6522: PUSH
6523: LD_INT 22
6525: PUSH
6526: LD_VAR 0 1
6530: PPUSH
6531: CALL_OW 255
6535: PUSH
6536: EMPTY
6537: LIST
6538: LIST
6539: PUSH
6540: LD_INT 2
6542: PUSH
6543: LD_INT 30
6545: PUSH
6546: LD_INT 0
6548: PUSH
6549: EMPTY
6550: LIST
6551: LIST
6552: PUSH
6553: LD_INT 30
6555: PUSH
6556: LD_INT 1
6558: PUSH
6559: EMPTY
6560: LIST
6561: LIST
6562: PUSH
6563: LD_INT 30
6565: PUSH
6566: LD_INT 29
6568: PUSH
6569: EMPTY
6570: LIST
6571: LIST
6572: PUSH
6573: LD_INT 30
6575: PUSH
6576: LD_INT 3
6578: PUSH
6579: EMPTY
6580: LIST
6581: LIST
6582: PUSH
6583: EMPTY
6584: LIST
6585: LIST
6586: LIST
6587: LIST
6588: LIST
6589: PUSH
6590: EMPTY
6591: LIST
6592: LIST
6593: PPUSH
6594: CALL_OW 69
6598: ST_TO_ADDR
// if not station then
6599: LD_VAR 0 10
6603: NOT
6604: IFFALSE 6620
// begin SetFuel ( unit , 40 ) ;
6606: LD_VAR 0 1
6610: PPUSH
6611: LD_INT 40
6613: PPUSH
6614: CALL_OW 240
// continue ;
6618: GO 6490
// end ; status := 6 ;
6620: LD_ADDR_VAR 0 12
6624: PUSH
6625: LD_INT 6
6627: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6628: LD_ADDR_VAR 0 10
6632: PUSH
6633: LD_VAR 0 10
6637: PPUSH
6638: LD_VAR 0 1
6642: PPUSH
6643: CALL_OW 74
6647: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6648: LD_INT 35
6650: PPUSH
6651: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6655: LD_VAR 0 1
6659: PPUSH
6660: LD_VAR 0 10
6664: PPUSH
6665: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6669: LD_VAR 0 1
6673: PPUSH
6674: LD_VAR 0 10
6678: PPUSH
6679: CALL_OW 296
6683: PUSH
6684: LD_INT 6
6686: LESS
6687: IFFALSE 6648
// SetFuel ( unit , 100 ) ;
6689: LD_VAR 0 1
6693: PPUSH
6694: LD_INT 100
6696: PPUSH
6697: CALL_OW 240
// status := 5 ;
6701: LD_ADDR_VAR 0 12
6705: PUSH
6706: LD_INT 5
6708: ST_TO_ADDR
// end ; if status = 1 then
6709: LD_VAR 0 12
6713: PUSH
6714: LD_INT 1
6716: EQUAL
6717: IFFALSE 7031
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6719: LD_ADDR_VAR 0 13
6723: PUSH
6724: LD_INT 81
6726: PUSH
6727: LD_VAR 0 1
6731: PPUSH
6732: CALL_OW 255
6736: PUSH
6737: EMPTY
6738: LIST
6739: LIST
6740: PUSH
6741: LD_INT 91
6743: PUSH
6744: LD_VAR 0 1
6748: PUSH
6749: LD_VAR 0 15
6753: PUSH
6754: EMPTY
6755: LIST
6756: LIST
6757: LIST
6758: PUSH
6759: LD_INT 101
6761: PUSH
6762: LD_INT 1
6764: PUSH
6765: EMPTY
6766: LIST
6767: LIST
6768: PUSH
6769: EMPTY
6770: LIST
6771: LIST
6772: LIST
6773: PPUSH
6774: CALL_OW 69
6778: ST_TO_ADDR
// if ( enemy ) then
6779: LD_VAR 0 13
6783: IFFALSE 6833
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6785: LD_VAR 0 1
6789: PPUSH
6790: LD_VAR 0 1
6794: PPUSH
6795: CALL_OW 250
6799: PPUSH
6800: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6804: LD_VAR 0 1
6808: PPUSH
6809: LD_VAR 0 1
6813: PPUSH
6814: CALL_OW 251
6818: PPUSH
6819: CALL_OW 232
// status = 2 ;
6823: LD_ADDR_VAR 0 12
6827: PUSH
6828: LD_INT 2
6830: ST_TO_ADDR
// end else
6831: GO 7031
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6833: LD_VAR 0 1
6837: PPUSH
6838: LD_VAR 0 11
6842: PUSH
6843: LD_INT 2
6845: ARRAY
6846: PUSH
6847: LD_INT 1
6849: ARRAY
6850: PPUSH
6851: LD_VAR 0 11
6855: PUSH
6856: LD_INT 2
6858: ARRAY
6859: PUSH
6860: LD_INT 2
6862: ARRAY
6863: PPUSH
6864: CALL_OW 307
6868: PUSH
6869: LD_VAR 0 1
6873: PPUSH
6874: CALL_OW 314
6878: NOT
6879: OR
6880: IFFALSE 7031
// begin wait ( 0 0$2 ) ;
6882: LD_INT 70
6884: PPUSH
6885: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6889: LD_VAR 0 11
6893: PUSH
6894: LD_INT 1
6896: ARRAY
6897: PUSH
6898: LD_INT 1
6900: PLUS
6901: PUSH
6902: LD_VAR 0 2
6906: GREATER
6907: IFFALSE 6932
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6909: LD_ADDR_VAR 0 11
6913: PUSH
6914: LD_VAR 0 11
6918: PPUSH
6919: LD_INT 1
6921: PPUSH
6922: LD_INT 1
6924: PPUSH
6925: CALL_OW 1
6929: ST_TO_ADDR
6930: GO 6963
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
6932: LD_ADDR_VAR 0 11
6936: PUSH
6937: LD_VAR 0 11
6941: PPUSH
6942: LD_INT 1
6944: PPUSH
6945: LD_VAR 0 11
6949: PUSH
6950: LD_INT 1
6952: ARRAY
6953: PUSH
6954: LD_INT 1
6956: PLUS
6957: PPUSH
6958: CALL_OW 1
6962: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
6963: LD_ADDR_VAR 0 11
6967: PUSH
6968: LD_VAR 0 11
6972: PPUSH
6973: LD_INT 2
6975: PPUSH
6976: LD_VAR 0 2
6980: PUSH
6981: LD_VAR 0 11
6985: PUSH
6986: LD_INT 1
6988: ARRAY
6989: ARRAY
6990: PPUSH
6991: CALL_OW 1
6995: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
6996: LD_VAR 0 1
7000: PPUSH
7001: LD_VAR 0 11
7005: PUSH
7006: LD_INT 2
7008: ARRAY
7009: PUSH
7010: LD_INT 1
7012: ARRAY
7013: PPUSH
7014: LD_VAR 0 11
7018: PUSH
7019: LD_INT 2
7021: ARRAY
7022: PUSH
7023: LD_INT 2
7025: ARRAY
7026: PPUSH
7027: CALL_OW 114
// end ; end ; end ; if status = 2 then
7031: LD_VAR 0 12
7035: PUSH
7036: LD_INT 2
7038: EQUAL
7039: IFFALSE 7260
// begin if GetLives ( unit ) < 650 and safe_place then
7041: LD_VAR 0 1
7045: PPUSH
7046: CALL_OW 256
7050: PUSH
7051: LD_INT 650
7053: LESS
7054: PUSH
7055: LD_VAR 0 16
7059: AND
7060: IFFALSE 7072
// begin status = 3 ;
7062: LD_ADDR_VAR 0 12
7066: PUSH
7067: LD_INT 3
7069: ST_TO_ADDR
// continue ;
7070: GO 6490
// end ; x := GetRememberedX ( unit ) ;
7072: LD_ADDR_VAR 0 6
7076: PUSH
7077: LD_VAR 0 1
7081: PPUSH
7082: CALL_OW 252
7086: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7087: LD_ADDR_VAR 0 7
7091: PUSH
7092: LD_VAR 0 1
7096: PPUSH
7097: CALL_OW 253
7101: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7102: LD_ADDR_VAR 0 13
7106: PUSH
7107: LD_INT 81
7109: PUSH
7110: LD_VAR 0 1
7114: PPUSH
7115: CALL_OW 255
7119: PUSH
7120: EMPTY
7121: LIST
7122: LIST
7123: PUSH
7124: LD_INT 92
7126: PUSH
7127: LD_VAR 0 6
7131: PUSH
7132: LD_VAR 0 7
7136: PUSH
7137: LD_VAR 0 15
7141: PUSH
7142: EMPTY
7143: LIST
7144: LIST
7145: LIST
7146: LIST
7147: PUSH
7148: LD_INT 101
7150: PUSH
7151: LD_INT 1
7153: PUSH
7154: EMPTY
7155: LIST
7156: LIST
7157: PUSH
7158: EMPTY
7159: LIST
7160: LIST
7161: LIST
7162: PPUSH
7163: CALL_OW 69
7167: ST_TO_ADDR
// if enemy then
7168: LD_VAR 0 13
7172: IFFALSE 7243
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7174: LD_ADDR_VAR 0 14
7178: PUSH
7179: LD_VAR 0 13
7183: PPUSH
7184: LD_VAR 0 1
7188: PPUSH
7189: CALL_OW 74
7193: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7194: LD_VAR 0 14
7198: PPUSH
7199: LD_VAR 0 6
7203: PPUSH
7204: LD_VAR 0 7
7208: PPUSH
7209: CALL_OW 297
7213: PUSH
7214: LD_VAR 0 15
7218: PUSH
7219: LD_VAR 0 17
7223: PLUS
7224: LESS
7225: IFFALSE 7241
// ComAttackUnit ( unit , e ) ;
7227: LD_VAR 0 1
7231: PPUSH
7232: LD_VAR 0 14
7236: PPUSH
7237: CALL_OW 115
// end else
7241: GO 7260
// begin ComStop ( unit ) ;
7243: LD_VAR 0 1
7247: PPUSH
7248: CALL_OW 141
// status = 5 ;
7252: LD_ADDR_VAR 0 12
7256: PUSH
7257: LD_INT 5
7259: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7260: LD_VAR 0 12
7264: PUSH
7265: LD_INT 3
7267: EQUAL
7268: PUSH
7269: LD_VAR 0 16
7273: AND
7274: IFFALSE 7360
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7276: LD_VAR 0 1
7280: PPUSH
7281: LD_VAR 0 16
7285: PUSH
7286: LD_INT 1
7288: ARRAY
7289: PPUSH
7290: LD_VAR 0 16
7294: PUSH
7295: LD_INT 2
7297: ARRAY
7298: PPUSH
7299: CALL_OW 111
// wait ( 0 0$1 ) ;
7303: LD_INT 35
7305: PPUSH
7306: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7310: LD_VAR 0 1
7314: PPUSH
7315: LD_VAR 0 16
7319: PUSH
7320: LD_INT 1
7322: ARRAY
7323: PPUSH
7324: LD_VAR 0 16
7328: PUSH
7329: LD_INT 2
7331: ARRAY
7332: PPUSH
7333: CALL_OW 297
7337: PUSH
7338: LD_INT 4
7340: LESS
7341: IFFALSE 7276
// ComStop ( unit ) ;
7343: LD_VAR 0 1
7347: PPUSH
7348: CALL_OW 141
// status = 4 ;
7352: LD_ADDR_VAR 0 12
7356: PUSH
7357: LD_INT 4
7359: ST_TO_ADDR
// end ; if status = 4 then
7360: LD_VAR 0 12
7364: PUSH
7365: LD_INT 4
7367: EQUAL
7368: IFFALSE 7400
// begin repeat wait ( 0 0$1 ) ;
7370: LD_INT 35
7372: PPUSH
7373: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7377: LD_VAR 0 1
7381: PPUSH
7382: CALL_OW 256
7386: PUSH
7387: LD_INT 1000
7389: EQUAL
7390: IFFALSE 7370
// status = 5 ;
7392: LD_ADDR_VAR 0 12
7396: PUSH
7397: LD_INT 5
7399: ST_TO_ADDR
// end ; if status = 5 then
7400: LD_VAR 0 12
7404: PUSH
7405: LD_INT 5
7407: EQUAL
7408: IFFALSE 7690
// begin p := 999 ;
7410: LD_ADDR_VAR 0 9
7414: PUSH
7415: LD_INT 999
7417: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7418: LD_ADDR_VAR 0 14
7422: PUSH
7423: LD_VAR 0 11
7427: PUSH
7428: LD_INT 2
7430: ARRAY
7431: PUSH
7432: LD_INT 1
7434: ARRAY
7435: PUSH
7436: LD_VAR 0 11
7440: PUSH
7441: LD_INT 2
7443: ARRAY
7444: PUSH
7445: LD_INT 2
7447: ARRAY
7448: PUSH
7449: EMPTY
7450: LIST
7451: LIST
7452: ST_TO_ADDR
// c := 1 ;
7453: LD_ADDR_VAR 0 8
7457: PUSH
7458: LD_INT 1
7460: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7461: LD_ADDR_VAR 0 5
7465: PUSH
7466: DOUBLE
7467: LD_INT 1
7469: DEC
7470: ST_TO_ADDR
7471: LD_VAR 0 11
7475: PUSH
7476: LD_INT 2
7478: ARRAY
7479: PUSH
7480: LD_INT 2
7482: DIV
7483: PUSH
7484: FOR_TO
7485: IFFALSE 7617
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7487: LD_ADDR_VAR 0 6
7491: PUSH
7492: LD_VAR 0 1
7496: PPUSH
7497: LD_VAR 0 11
7501: PUSH
7502: LD_INT 2
7504: ARRAY
7505: PUSH
7506: LD_VAR 0 8
7510: ARRAY
7511: PPUSH
7512: LD_VAR 0 11
7516: PUSH
7517: LD_INT 2
7519: ARRAY
7520: PUSH
7521: LD_VAR 0 8
7525: PUSH
7526: LD_INT 1
7528: PLUS
7529: ARRAY
7530: PPUSH
7531: CALL_OW 297
7535: ST_TO_ADDR
// if x < p then
7536: LD_VAR 0 6
7540: PUSH
7541: LD_VAR 0 9
7545: LESS
7546: IFFALSE 7601
// begin p := x ;
7548: LD_ADDR_VAR 0 9
7552: PUSH
7553: LD_VAR 0 6
7557: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7558: LD_ADDR_VAR 0 14
7562: PUSH
7563: LD_VAR 0 11
7567: PUSH
7568: LD_INT 2
7570: ARRAY
7571: PUSH
7572: LD_VAR 0 8
7576: ARRAY
7577: PUSH
7578: LD_VAR 0 11
7582: PUSH
7583: LD_INT 2
7585: ARRAY
7586: PUSH
7587: LD_VAR 0 8
7591: PUSH
7592: LD_INT 1
7594: PLUS
7595: ARRAY
7596: PUSH
7597: EMPTY
7598: LIST
7599: LIST
7600: ST_TO_ADDR
// end ; c = c + 2 ;
7601: LD_ADDR_VAR 0 8
7605: PUSH
7606: LD_VAR 0 8
7610: PUSH
7611: LD_INT 2
7613: PLUS
7614: ST_TO_ADDR
// end ;
7615: GO 7484
7617: POP
7618: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7619: LD_VAR 0 1
7623: PPUSH
7624: LD_VAR 0 14
7628: PUSH
7629: LD_INT 1
7631: ARRAY
7632: PPUSH
7633: LD_VAR 0 14
7637: PUSH
7638: LD_INT 2
7640: ARRAY
7641: PPUSH
7642: CALL_OW 111
// wait ( 0 0$1 ) ;
7646: LD_INT 35
7648: PPUSH
7649: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7653: LD_VAR 0 1
7657: PPUSH
7658: LD_VAR 0 14
7662: PUSH
7663: LD_INT 1
7665: ARRAY
7666: PPUSH
7667: LD_VAR 0 14
7671: PUSH
7672: LD_INT 2
7674: ARRAY
7675: PPUSH
7676: CALL_OW 307
7680: IFFALSE 7619
// status = 1 ;
7682: LD_ADDR_VAR 0 12
7686: PUSH
7687: LD_INT 1
7689: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7690: LD_VAR 0 1
7694: PPUSH
7695: CALL_OW 301
7699: IFFALSE 6490
// end ;
7701: LD_VAR 0 4
7705: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7706: LD_INT 0
7708: PPUSH
7709: PPUSH
7710: PPUSH
7711: PPUSH
7712: PPUSH
7713: PPUSH
7714: PPUSH
7715: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7716: LD_VAR 0 1
7720: NOT
7721: PUSH
7722: LD_VAR 0 3
7726: NOT
7727: OR
7728: PUSH
7729: LD_VAR 0 4
7733: PUSH
7734: LD_INT 1
7736: PUSH
7737: LD_INT 2
7739: PUSH
7740: LD_INT 0
7742: PUSH
7743: EMPTY
7744: LIST
7745: LIST
7746: LIST
7747: IN
7748: NOT
7749: OR
7750: PUSH
7751: LD_VAR 0 6
7755: NOT
7756: OR
7757: PUSH
7758: LD_VAR 0 7
7762: NOT
7763: OR
7764: IFFALSE 7768
// exit ;
7766: GO 8159
// sex_id :=  ;
7768: LD_ADDR_VAR 0 14
7772: PUSH
7773: LD_STRING 
7775: ST_TO_ADDR
// case class of 1 :
7776: LD_VAR 0 5
7780: PUSH
7781: LD_INT 1
7783: DOUBLE
7784: EQUAL
7785: IFTRUE 7789
7787: GO 7800
7789: POP
// class_id := Sol ; 2 :
7790: LD_ADDR_VAR 0 15
7794: PUSH
7795: LD_STRING Sol
7797: ST_TO_ADDR
7798: GO 7858
7800: LD_INT 2
7802: DOUBLE
7803: EQUAL
7804: IFTRUE 7808
7806: GO 7819
7808: POP
// class_id := Eng ; 3 :
7809: LD_ADDR_VAR 0 15
7813: PUSH
7814: LD_STRING Eng
7816: ST_TO_ADDR
7817: GO 7858
7819: LD_INT 3
7821: DOUBLE
7822: EQUAL
7823: IFTRUE 7827
7825: GO 7838
7827: POP
// class_id := Mech ; 4 :
7828: LD_ADDR_VAR 0 15
7832: PUSH
7833: LD_STRING Mech
7835: ST_TO_ADDR
7836: GO 7858
7838: LD_INT 4
7840: DOUBLE
7841: EQUAL
7842: IFTRUE 7846
7844: GO 7857
7846: POP
// class_id := Sci ; end ;
7847: LD_ADDR_VAR 0 15
7851: PUSH
7852: LD_STRING Sci
7854: ST_TO_ADDR
7855: GO 7858
7857: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7858: LD_ADDR_VAR 0 11
7862: PUSH
7863: LD_VAR 0 1
7867: PPUSH
7868: LD_INT 25
7870: PUSH
7871: LD_VAR 0 5
7875: PUSH
7876: EMPTY
7877: LIST
7878: LIST
7879: PPUSH
7880: CALL_OW 72
7884: ST_TO_ADDR
// if tmp then
7885: LD_VAR 0 11
7889: IFFALSE 7901
// units := tmp ;
7891: LD_ADDR_VAR 0 1
7895: PUSH
7896: LD_VAR 0 11
7900: ST_TO_ADDR
// if sex then
7901: LD_VAR 0 4
7905: IFFALSE 7961
// begin if sex = sex_female then
7907: LD_VAR 0 4
7911: PUSH
7912: LD_INT 2
7914: EQUAL
7915: IFFALSE 7925
// sex_id := F ;
7917: LD_ADDR_VAR 0 14
7921: PUSH
7922: LD_STRING F
7924: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7925: LD_ADDR_VAR 0 1
7929: PUSH
7930: LD_VAR 0 1
7934: PPUSH
7935: LD_INT 26
7937: PUSH
7938: LD_VAR 0 4
7942: PUSH
7943: EMPTY
7944: LIST
7945: LIST
7946: PPUSH
7947: CALL_OW 72
7951: ST_TO_ADDR
// if not units then
7952: LD_VAR 0 1
7956: NOT
7957: IFFALSE 7961
// exit ;
7959: GO 8159
// end ; unit_id := id ;
7961: LD_ADDR_VAR 0 12
7965: PUSH
7966: LD_VAR 0 6
7970: ST_TO_ADDR
// if unit_id > units then
7971: LD_VAR 0 12
7975: PUSH
7976: LD_VAR 0 1
7980: GREATER
7981: IFFALSE 7991
// unit_id := 1 ;
7983: LD_ADDR_VAR 0 12
7987: PUSH
7988: LD_INT 1
7990: ST_TO_ADDR
// if not units [ unit_id ] then
7991: LD_VAR 0 1
7995: PUSH
7996: LD_VAR 0 12
8000: ARRAY
8001: NOT
8002: IFFALSE 8006
// exit ;
8004: GO 8159
// unit := units [ unit_id ] ;
8006: LD_ADDR_VAR 0 10
8010: PUSH
8011: LD_VAR 0 1
8015: PUSH
8016: LD_VAR 0 12
8020: ARRAY
8021: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8022: LD_ADDR_VAR 0 13
8026: PUSH
8027: LD_STRING D
8029: PUSH
8030: LD_VAR 0 3
8034: STR
8035: PUSH
8036: LD_STRING -
8038: STR
8039: PUSH
8040: LD_VAR 0 14
8044: STR
8045: PUSH
8046: LD_VAR 0 15
8050: STR
8051: PUSH
8052: LD_VAR 0 6
8056: STR
8057: PUSH
8058: LD_STRING -
8060: STR
8061: PUSH
8062: LD_VAR 0 7
8066: STR
8067: ST_TO_ADDR
// case type of 0 :
8068: LD_VAR 0 2
8072: PUSH
8073: LD_INT 0
8075: DOUBLE
8076: EQUAL
8077: IFTRUE 8081
8079: GO 8098
8081: POP
// Say ( unit , dialog_id ) ; 1 :
8082: LD_VAR 0 10
8086: PPUSH
8087: LD_VAR 0 13
8091: PPUSH
8092: CALL_OW 88
8096: GO 8149
8098: LD_INT 1
8100: DOUBLE
8101: EQUAL
8102: IFTRUE 8106
8104: GO 8123
8106: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8107: LD_VAR 0 10
8111: PPUSH
8112: LD_VAR 0 13
8116: PPUSH
8117: CALL_OW 94
8121: GO 8149
8123: LD_INT 2
8125: DOUBLE
8126: EQUAL
8127: IFTRUE 8131
8129: GO 8148
8131: POP
// ForceSay ( unit , dialog_id ) ; end ;
8132: LD_VAR 0 10
8136: PPUSH
8137: LD_VAR 0 13
8141: PPUSH
8142: CALL_OW 91
8146: GO 8149
8148: POP
// result := unit ;
8149: LD_ADDR_VAR 0 8
8153: PUSH
8154: LD_VAR 0 10
8158: ST_TO_ADDR
// end ;
8159: LD_VAR 0 8
8163: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8164: LD_INT 0
8166: PPUSH
8167: PPUSH
8168: PPUSH
8169: PPUSH
8170: PPUSH
8171: PPUSH
8172: PPUSH
// result := array ;
8173: LD_ADDR_VAR 0 5
8177: PUSH
8178: LD_VAR 0 1
8182: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8183: LD_VAR 0 1
8187: NOT
8188: PUSH
8189: LD_VAR 0 2
8193: NOT
8194: OR
8195: PUSH
8196: LD_VAR 0 3
8200: NOT
8201: OR
8202: PUSH
8203: LD_VAR 0 2
8207: PUSH
8208: LD_VAR 0 1
8212: GREATER
8213: OR
8214: PUSH
8215: LD_VAR 0 3
8219: PUSH
8220: LD_VAR 0 1
8224: GREATER
8225: OR
8226: IFFALSE 8230
// exit ;
8228: GO 8526
// if direction then
8230: LD_VAR 0 4
8234: IFFALSE 8298
// begin d := 1 ;
8236: LD_ADDR_VAR 0 9
8240: PUSH
8241: LD_INT 1
8243: ST_TO_ADDR
// if i_from > i_to then
8244: LD_VAR 0 2
8248: PUSH
8249: LD_VAR 0 3
8253: GREATER
8254: IFFALSE 8280
// length := ( array - i_from ) + i_to else
8256: LD_ADDR_VAR 0 11
8260: PUSH
8261: LD_VAR 0 1
8265: PUSH
8266: LD_VAR 0 2
8270: MINUS
8271: PUSH
8272: LD_VAR 0 3
8276: PLUS
8277: ST_TO_ADDR
8278: GO 8296
// length := i_to - i_from ;
8280: LD_ADDR_VAR 0 11
8284: PUSH
8285: LD_VAR 0 3
8289: PUSH
8290: LD_VAR 0 2
8294: MINUS
8295: ST_TO_ADDR
// end else
8296: GO 8359
// begin d := - 1 ;
8298: LD_ADDR_VAR 0 9
8302: PUSH
8303: LD_INT 1
8305: NEG
8306: ST_TO_ADDR
// if i_from > i_to then
8307: LD_VAR 0 2
8311: PUSH
8312: LD_VAR 0 3
8316: GREATER
8317: IFFALSE 8337
// length := i_from - i_to else
8319: LD_ADDR_VAR 0 11
8323: PUSH
8324: LD_VAR 0 2
8328: PUSH
8329: LD_VAR 0 3
8333: MINUS
8334: ST_TO_ADDR
8335: GO 8359
// length := ( array - i_to ) + i_from ;
8337: LD_ADDR_VAR 0 11
8341: PUSH
8342: LD_VAR 0 1
8346: PUSH
8347: LD_VAR 0 3
8351: MINUS
8352: PUSH
8353: LD_VAR 0 2
8357: PLUS
8358: ST_TO_ADDR
// end ; if not length then
8359: LD_VAR 0 11
8363: NOT
8364: IFFALSE 8368
// exit ;
8366: GO 8526
// tmp := array ;
8368: LD_ADDR_VAR 0 10
8372: PUSH
8373: LD_VAR 0 1
8377: ST_TO_ADDR
// for i = 1 to length do
8378: LD_ADDR_VAR 0 6
8382: PUSH
8383: DOUBLE
8384: LD_INT 1
8386: DEC
8387: ST_TO_ADDR
8388: LD_VAR 0 11
8392: PUSH
8393: FOR_TO
8394: IFFALSE 8514
// begin for j = 1 to array do
8396: LD_ADDR_VAR 0 7
8400: PUSH
8401: DOUBLE
8402: LD_INT 1
8404: DEC
8405: ST_TO_ADDR
8406: LD_VAR 0 1
8410: PUSH
8411: FOR_TO
8412: IFFALSE 8500
// begin k := j + d ;
8414: LD_ADDR_VAR 0 8
8418: PUSH
8419: LD_VAR 0 7
8423: PUSH
8424: LD_VAR 0 9
8428: PLUS
8429: ST_TO_ADDR
// if k > array then
8430: LD_VAR 0 8
8434: PUSH
8435: LD_VAR 0 1
8439: GREATER
8440: IFFALSE 8450
// k := 1 ;
8442: LD_ADDR_VAR 0 8
8446: PUSH
8447: LD_INT 1
8449: ST_TO_ADDR
// if not k then
8450: LD_VAR 0 8
8454: NOT
8455: IFFALSE 8467
// k := array ;
8457: LD_ADDR_VAR 0 8
8461: PUSH
8462: LD_VAR 0 1
8466: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8467: LD_ADDR_VAR 0 10
8471: PUSH
8472: LD_VAR 0 10
8476: PPUSH
8477: LD_VAR 0 8
8481: PPUSH
8482: LD_VAR 0 1
8486: PUSH
8487: LD_VAR 0 7
8491: ARRAY
8492: PPUSH
8493: CALL_OW 1
8497: ST_TO_ADDR
// end ;
8498: GO 8411
8500: POP
8501: POP
// array := tmp ;
8502: LD_ADDR_VAR 0 1
8506: PUSH
8507: LD_VAR 0 10
8511: ST_TO_ADDR
// end ;
8512: GO 8393
8514: POP
8515: POP
// result := array ;
8516: LD_ADDR_VAR 0 5
8520: PUSH
8521: LD_VAR 0 1
8525: ST_TO_ADDR
// end ;
8526: LD_VAR 0 5
8530: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8531: LD_INT 0
8533: PPUSH
8534: PPUSH
8535: PPUSH
8536: PPUSH
8537: PPUSH
8538: PPUSH
8539: PPUSH
8540: PPUSH
8541: PPUSH
8542: PPUSH
8543: PPUSH
8544: PPUSH
8545: PPUSH
8546: PPUSH
8547: PPUSH
8548: PPUSH
8549: PPUSH
8550: PPUSH
8551: PPUSH
8552: PPUSH
8553: PPUSH
8554: PPUSH
8555: PPUSH
8556: PPUSH
8557: PPUSH
8558: PPUSH
8559: PPUSH
8560: PPUSH
8561: PPUSH
8562: PPUSH
8563: PPUSH
8564: PPUSH
8565: PPUSH
8566: PPUSH
8567: PPUSH
8568: PPUSH
8569: PPUSH
8570: PPUSH
8571: PPUSH
8572: PPUSH
8573: PPUSH
8574: PPUSH
8575: PPUSH
8576: PPUSH
8577: PPUSH
8578: PPUSH
8579: PPUSH
8580: PPUSH
8581: PPUSH
8582: PPUSH
8583: PPUSH
8584: PPUSH
8585: PPUSH
8586: PPUSH
8587: PPUSH
8588: PPUSH
8589: PPUSH
8590: PPUSH
// result = [ ] ;
8591: LD_ADDR_VAR 0 7
8595: PUSH
8596: EMPTY
8597: ST_TO_ADDR
// temp_list = [ ] ;
8598: LD_ADDR_VAR 0 9
8602: PUSH
8603: EMPTY
8604: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8605: LD_VAR 0 4
8609: PUSH
8610: LD_INT 0
8612: PUSH
8613: LD_INT 1
8615: PUSH
8616: LD_INT 2
8618: PUSH
8619: LD_INT 3
8621: PUSH
8622: LD_INT 4
8624: PUSH
8625: LD_INT 5
8627: PUSH
8628: EMPTY
8629: LIST
8630: LIST
8631: LIST
8632: LIST
8633: LIST
8634: LIST
8635: IN
8636: NOT
8637: PUSH
8638: LD_VAR 0 1
8642: PUSH
8643: LD_INT 0
8645: PUSH
8646: LD_INT 1
8648: PUSH
8649: EMPTY
8650: LIST
8651: LIST
8652: IN
8653: PUSH
8654: LD_VAR 0 5
8658: PUSH
8659: LD_INT 1
8661: PUSH
8662: LD_INT 2
8664: PUSH
8665: LD_INT 3
8667: PUSH
8668: EMPTY
8669: LIST
8670: LIST
8671: LIST
8672: IN
8673: NOT
8674: AND
8675: OR
8676: IFFALSE 8680
// exit ;
8678: GO 27065
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8680: LD_VAR 0 1
8684: PUSH
8685: LD_INT 6
8687: PUSH
8688: LD_INT 7
8690: PUSH
8691: LD_INT 8
8693: PUSH
8694: LD_INT 13
8696: PUSH
8697: LD_INT 12
8699: PUSH
8700: LD_INT 15
8702: PUSH
8703: LD_INT 11
8705: PUSH
8706: LD_INT 14
8708: PUSH
8709: LD_INT 10
8711: PUSH
8712: EMPTY
8713: LIST
8714: LIST
8715: LIST
8716: LIST
8717: LIST
8718: LIST
8719: LIST
8720: LIST
8721: LIST
8722: IN
8723: IFFALSE 8733
// btype = b_lab ;
8725: LD_ADDR_VAR 0 1
8729: PUSH
8730: LD_INT 6
8732: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8733: LD_VAR 0 6
8737: PUSH
8738: LD_INT 0
8740: PUSH
8741: LD_INT 1
8743: PUSH
8744: LD_INT 2
8746: PUSH
8747: EMPTY
8748: LIST
8749: LIST
8750: LIST
8751: IN
8752: NOT
8753: PUSH
8754: LD_VAR 0 1
8758: PUSH
8759: LD_INT 0
8761: PUSH
8762: LD_INT 1
8764: PUSH
8765: LD_INT 2
8767: PUSH
8768: LD_INT 3
8770: PUSH
8771: LD_INT 6
8773: PUSH
8774: LD_INT 36
8776: PUSH
8777: LD_INT 4
8779: PUSH
8780: LD_INT 5
8782: PUSH
8783: LD_INT 31
8785: PUSH
8786: LD_INT 32
8788: PUSH
8789: LD_INT 33
8791: PUSH
8792: EMPTY
8793: LIST
8794: LIST
8795: LIST
8796: LIST
8797: LIST
8798: LIST
8799: LIST
8800: LIST
8801: LIST
8802: LIST
8803: LIST
8804: IN
8805: NOT
8806: PUSH
8807: LD_VAR 0 6
8811: PUSH
8812: LD_INT 1
8814: EQUAL
8815: AND
8816: OR
8817: PUSH
8818: LD_VAR 0 1
8822: PUSH
8823: LD_INT 2
8825: PUSH
8826: LD_INT 3
8828: PUSH
8829: EMPTY
8830: LIST
8831: LIST
8832: IN
8833: NOT
8834: PUSH
8835: LD_VAR 0 6
8839: PUSH
8840: LD_INT 2
8842: EQUAL
8843: AND
8844: OR
8845: IFFALSE 8855
// mode = 0 ;
8847: LD_ADDR_VAR 0 6
8851: PUSH
8852: LD_INT 0
8854: ST_TO_ADDR
// case mode of 0 :
8855: LD_VAR 0 6
8859: PUSH
8860: LD_INT 0
8862: DOUBLE
8863: EQUAL
8864: IFTRUE 8868
8866: GO 20321
8868: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8869: LD_ADDR_VAR 0 11
8873: PUSH
8874: LD_INT 0
8876: PUSH
8877: LD_INT 0
8879: PUSH
8880: EMPTY
8881: LIST
8882: LIST
8883: PUSH
8884: LD_INT 0
8886: PUSH
8887: LD_INT 1
8889: NEG
8890: PUSH
8891: EMPTY
8892: LIST
8893: LIST
8894: PUSH
8895: LD_INT 1
8897: PUSH
8898: LD_INT 0
8900: PUSH
8901: EMPTY
8902: LIST
8903: LIST
8904: PUSH
8905: LD_INT 1
8907: PUSH
8908: LD_INT 1
8910: PUSH
8911: EMPTY
8912: LIST
8913: LIST
8914: PUSH
8915: LD_INT 0
8917: PUSH
8918: LD_INT 1
8920: PUSH
8921: EMPTY
8922: LIST
8923: LIST
8924: PUSH
8925: LD_INT 1
8927: NEG
8928: PUSH
8929: LD_INT 0
8931: PUSH
8932: EMPTY
8933: LIST
8934: LIST
8935: PUSH
8936: LD_INT 1
8938: NEG
8939: PUSH
8940: LD_INT 1
8942: NEG
8943: PUSH
8944: EMPTY
8945: LIST
8946: LIST
8947: PUSH
8948: LD_INT 1
8950: NEG
8951: PUSH
8952: LD_INT 2
8954: NEG
8955: PUSH
8956: EMPTY
8957: LIST
8958: LIST
8959: PUSH
8960: LD_INT 0
8962: PUSH
8963: LD_INT 2
8965: NEG
8966: PUSH
8967: EMPTY
8968: LIST
8969: LIST
8970: PUSH
8971: LD_INT 1
8973: PUSH
8974: LD_INT 1
8976: NEG
8977: PUSH
8978: EMPTY
8979: LIST
8980: LIST
8981: PUSH
8982: LD_INT 1
8984: PUSH
8985: LD_INT 2
8987: PUSH
8988: EMPTY
8989: LIST
8990: LIST
8991: PUSH
8992: LD_INT 0
8994: PUSH
8995: LD_INT 2
8997: PUSH
8998: EMPTY
8999: LIST
9000: LIST
9001: PUSH
9002: LD_INT 1
9004: NEG
9005: PUSH
9006: LD_INT 1
9008: PUSH
9009: EMPTY
9010: LIST
9011: LIST
9012: PUSH
9013: LD_INT 1
9015: PUSH
9016: LD_INT 3
9018: PUSH
9019: EMPTY
9020: LIST
9021: LIST
9022: PUSH
9023: LD_INT 0
9025: PUSH
9026: LD_INT 3
9028: PUSH
9029: EMPTY
9030: LIST
9031: LIST
9032: PUSH
9033: LD_INT 1
9035: NEG
9036: PUSH
9037: LD_INT 2
9039: PUSH
9040: EMPTY
9041: LIST
9042: LIST
9043: PUSH
9044: EMPTY
9045: LIST
9046: LIST
9047: LIST
9048: LIST
9049: LIST
9050: LIST
9051: LIST
9052: LIST
9053: LIST
9054: LIST
9055: LIST
9056: LIST
9057: LIST
9058: LIST
9059: LIST
9060: LIST
9061: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9062: LD_ADDR_VAR 0 12
9066: PUSH
9067: LD_INT 0
9069: PUSH
9070: LD_INT 0
9072: PUSH
9073: EMPTY
9074: LIST
9075: LIST
9076: PUSH
9077: LD_INT 0
9079: PUSH
9080: LD_INT 1
9082: NEG
9083: PUSH
9084: EMPTY
9085: LIST
9086: LIST
9087: PUSH
9088: LD_INT 1
9090: PUSH
9091: LD_INT 0
9093: PUSH
9094: EMPTY
9095: LIST
9096: LIST
9097: PUSH
9098: LD_INT 1
9100: PUSH
9101: LD_INT 1
9103: PUSH
9104: EMPTY
9105: LIST
9106: LIST
9107: PUSH
9108: LD_INT 0
9110: PUSH
9111: LD_INT 1
9113: PUSH
9114: EMPTY
9115: LIST
9116: LIST
9117: PUSH
9118: LD_INT 1
9120: NEG
9121: PUSH
9122: LD_INT 0
9124: PUSH
9125: EMPTY
9126: LIST
9127: LIST
9128: PUSH
9129: LD_INT 1
9131: NEG
9132: PUSH
9133: LD_INT 1
9135: NEG
9136: PUSH
9137: EMPTY
9138: LIST
9139: LIST
9140: PUSH
9141: LD_INT 1
9143: PUSH
9144: LD_INT 1
9146: NEG
9147: PUSH
9148: EMPTY
9149: LIST
9150: LIST
9151: PUSH
9152: LD_INT 2
9154: PUSH
9155: LD_INT 0
9157: PUSH
9158: EMPTY
9159: LIST
9160: LIST
9161: PUSH
9162: LD_INT 2
9164: PUSH
9165: LD_INT 1
9167: PUSH
9168: EMPTY
9169: LIST
9170: LIST
9171: PUSH
9172: LD_INT 1
9174: NEG
9175: PUSH
9176: LD_INT 1
9178: PUSH
9179: EMPTY
9180: LIST
9181: LIST
9182: PUSH
9183: LD_INT 2
9185: NEG
9186: PUSH
9187: LD_INT 0
9189: PUSH
9190: EMPTY
9191: LIST
9192: LIST
9193: PUSH
9194: LD_INT 2
9196: NEG
9197: PUSH
9198: LD_INT 1
9200: NEG
9201: PUSH
9202: EMPTY
9203: LIST
9204: LIST
9205: PUSH
9206: LD_INT 2
9208: NEG
9209: PUSH
9210: LD_INT 1
9212: PUSH
9213: EMPTY
9214: LIST
9215: LIST
9216: PUSH
9217: LD_INT 3
9219: NEG
9220: PUSH
9221: LD_INT 0
9223: PUSH
9224: EMPTY
9225: LIST
9226: LIST
9227: PUSH
9228: LD_INT 3
9230: NEG
9231: PUSH
9232: LD_INT 1
9234: NEG
9235: PUSH
9236: EMPTY
9237: LIST
9238: LIST
9239: PUSH
9240: EMPTY
9241: LIST
9242: LIST
9243: LIST
9244: LIST
9245: LIST
9246: LIST
9247: LIST
9248: LIST
9249: LIST
9250: LIST
9251: LIST
9252: LIST
9253: LIST
9254: LIST
9255: LIST
9256: LIST
9257: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9258: LD_ADDR_VAR 0 13
9262: PUSH
9263: LD_INT 0
9265: PUSH
9266: LD_INT 0
9268: PUSH
9269: EMPTY
9270: LIST
9271: LIST
9272: PUSH
9273: LD_INT 0
9275: PUSH
9276: LD_INT 1
9278: NEG
9279: PUSH
9280: EMPTY
9281: LIST
9282: LIST
9283: PUSH
9284: LD_INT 1
9286: PUSH
9287: LD_INT 0
9289: PUSH
9290: EMPTY
9291: LIST
9292: LIST
9293: PUSH
9294: LD_INT 1
9296: PUSH
9297: LD_INT 1
9299: PUSH
9300: EMPTY
9301: LIST
9302: LIST
9303: PUSH
9304: LD_INT 0
9306: PUSH
9307: LD_INT 1
9309: PUSH
9310: EMPTY
9311: LIST
9312: LIST
9313: PUSH
9314: LD_INT 1
9316: NEG
9317: PUSH
9318: LD_INT 0
9320: PUSH
9321: EMPTY
9322: LIST
9323: LIST
9324: PUSH
9325: LD_INT 1
9327: NEG
9328: PUSH
9329: LD_INT 1
9331: NEG
9332: PUSH
9333: EMPTY
9334: LIST
9335: LIST
9336: PUSH
9337: LD_INT 1
9339: NEG
9340: PUSH
9341: LD_INT 2
9343: NEG
9344: PUSH
9345: EMPTY
9346: LIST
9347: LIST
9348: PUSH
9349: LD_INT 2
9351: PUSH
9352: LD_INT 1
9354: PUSH
9355: EMPTY
9356: LIST
9357: LIST
9358: PUSH
9359: LD_INT 2
9361: PUSH
9362: LD_INT 2
9364: PUSH
9365: EMPTY
9366: LIST
9367: LIST
9368: PUSH
9369: LD_INT 1
9371: PUSH
9372: LD_INT 2
9374: PUSH
9375: EMPTY
9376: LIST
9377: LIST
9378: PUSH
9379: LD_INT 2
9381: NEG
9382: PUSH
9383: LD_INT 1
9385: NEG
9386: PUSH
9387: EMPTY
9388: LIST
9389: LIST
9390: PUSH
9391: LD_INT 2
9393: NEG
9394: PUSH
9395: LD_INT 2
9397: NEG
9398: PUSH
9399: EMPTY
9400: LIST
9401: LIST
9402: PUSH
9403: LD_INT 2
9405: NEG
9406: PUSH
9407: LD_INT 3
9409: NEG
9410: PUSH
9411: EMPTY
9412: LIST
9413: LIST
9414: PUSH
9415: LD_INT 3
9417: NEG
9418: PUSH
9419: LD_INT 2
9421: NEG
9422: PUSH
9423: EMPTY
9424: LIST
9425: LIST
9426: PUSH
9427: LD_INT 3
9429: NEG
9430: PUSH
9431: LD_INT 3
9433: NEG
9434: PUSH
9435: EMPTY
9436: LIST
9437: LIST
9438: PUSH
9439: EMPTY
9440: LIST
9441: LIST
9442: LIST
9443: LIST
9444: LIST
9445: LIST
9446: LIST
9447: LIST
9448: LIST
9449: LIST
9450: LIST
9451: LIST
9452: LIST
9453: LIST
9454: LIST
9455: LIST
9456: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9457: LD_ADDR_VAR 0 14
9461: PUSH
9462: LD_INT 0
9464: PUSH
9465: LD_INT 0
9467: PUSH
9468: EMPTY
9469: LIST
9470: LIST
9471: PUSH
9472: LD_INT 0
9474: PUSH
9475: LD_INT 1
9477: NEG
9478: PUSH
9479: EMPTY
9480: LIST
9481: LIST
9482: PUSH
9483: LD_INT 1
9485: PUSH
9486: LD_INT 0
9488: PUSH
9489: EMPTY
9490: LIST
9491: LIST
9492: PUSH
9493: LD_INT 1
9495: PUSH
9496: LD_INT 1
9498: PUSH
9499: EMPTY
9500: LIST
9501: LIST
9502: PUSH
9503: LD_INT 0
9505: PUSH
9506: LD_INT 1
9508: PUSH
9509: EMPTY
9510: LIST
9511: LIST
9512: PUSH
9513: LD_INT 1
9515: NEG
9516: PUSH
9517: LD_INT 0
9519: PUSH
9520: EMPTY
9521: LIST
9522: LIST
9523: PUSH
9524: LD_INT 1
9526: NEG
9527: PUSH
9528: LD_INT 1
9530: NEG
9531: PUSH
9532: EMPTY
9533: LIST
9534: LIST
9535: PUSH
9536: LD_INT 1
9538: NEG
9539: PUSH
9540: LD_INT 2
9542: NEG
9543: PUSH
9544: EMPTY
9545: LIST
9546: LIST
9547: PUSH
9548: LD_INT 0
9550: PUSH
9551: LD_INT 2
9553: NEG
9554: PUSH
9555: EMPTY
9556: LIST
9557: LIST
9558: PUSH
9559: LD_INT 1
9561: PUSH
9562: LD_INT 1
9564: NEG
9565: PUSH
9566: EMPTY
9567: LIST
9568: LIST
9569: PUSH
9570: LD_INT 1
9572: PUSH
9573: LD_INT 2
9575: PUSH
9576: EMPTY
9577: LIST
9578: LIST
9579: PUSH
9580: LD_INT 0
9582: PUSH
9583: LD_INT 2
9585: PUSH
9586: EMPTY
9587: LIST
9588: LIST
9589: PUSH
9590: LD_INT 1
9592: NEG
9593: PUSH
9594: LD_INT 1
9596: PUSH
9597: EMPTY
9598: LIST
9599: LIST
9600: PUSH
9601: LD_INT 1
9603: NEG
9604: PUSH
9605: LD_INT 3
9607: NEG
9608: PUSH
9609: EMPTY
9610: LIST
9611: LIST
9612: PUSH
9613: LD_INT 0
9615: PUSH
9616: LD_INT 3
9618: NEG
9619: PUSH
9620: EMPTY
9621: LIST
9622: LIST
9623: PUSH
9624: LD_INT 1
9626: PUSH
9627: LD_INT 2
9629: NEG
9630: PUSH
9631: EMPTY
9632: LIST
9633: LIST
9634: PUSH
9635: EMPTY
9636: LIST
9637: LIST
9638: LIST
9639: LIST
9640: LIST
9641: LIST
9642: LIST
9643: LIST
9644: LIST
9645: LIST
9646: LIST
9647: LIST
9648: LIST
9649: LIST
9650: LIST
9651: LIST
9652: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9653: LD_ADDR_VAR 0 15
9657: PUSH
9658: LD_INT 0
9660: PUSH
9661: LD_INT 0
9663: PUSH
9664: EMPTY
9665: LIST
9666: LIST
9667: PUSH
9668: LD_INT 0
9670: PUSH
9671: LD_INT 1
9673: NEG
9674: PUSH
9675: EMPTY
9676: LIST
9677: LIST
9678: PUSH
9679: LD_INT 1
9681: PUSH
9682: LD_INT 0
9684: PUSH
9685: EMPTY
9686: LIST
9687: LIST
9688: PUSH
9689: LD_INT 1
9691: PUSH
9692: LD_INT 1
9694: PUSH
9695: EMPTY
9696: LIST
9697: LIST
9698: PUSH
9699: LD_INT 0
9701: PUSH
9702: LD_INT 1
9704: PUSH
9705: EMPTY
9706: LIST
9707: LIST
9708: PUSH
9709: LD_INT 1
9711: NEG
9712: PUSH
9713: LD_INT 0
9715: PUSH
9716: EMPTY
9717: LIST
9718: LIST
9719: PUSH
9720: LD_INT 1
9722: NEG
9723: PUSH
9724: LD_INT 1
9726: NEG
9727: PUSH
9728: EMPTY
9729: LIST
9730: LIST
9731: PUSH
9732: LD_INT 1
9734: PUSH
9735: LD_INT 1
9737: NEG
9738: PUSH
9739: EMPTY
9740: LIST
9741: LIST
9742: PUSH
9743: LD_INT 2
9745: PUSH
9746: LD_INT 0
9748: PUSH
9749: EMPTY
9750: LIST
9751: LIST
9752: PUSH
9753: LD_INT 2
9755: PUSH
9756: LD_INT 1
9758: PUSH
9759: EMPTY
9760: LIST
9761: LIST
9762: PUSH
9763: LD_INT 1
9765: NEG
9766: PUSH
9767: LD_INT 1
9769: PUSH
9770: EMPTY
9771: LIST
9772: LIST
9773: PUSH
9774: LD_INT 2
9776: NEG
9777: PUSH
9778: LD_INT 0
9780: PUSH
9781: EMPTY
9782: LIST
9783: LIST
9784: PUSH
9785: LD_INT 2
9787: NEG
9788: PUSH
9789: LD_INT 1
9791: NEG
9792: PUSH
9793: EMPTY
9794: LIST
9795: LIST
9796: PUSH
9797: LD_INT 2
9799: PUSH
9800: LD_INT 1
9802: NEG
9803: PUSH
9804: EMPTY
9805: LIST
9806: LIST
9807: PUSH
9808: LD_INT 3
9810: PUSH
9811: LD_INT 0
9813: PUSH
9814: EMPTY
9815: LIST
9816: LIST
9817: PUSH
9818: LD_INT 3
9820: PUSH
9821: LD_INT 1
9823: PUSH
9824: EMPTY
9825: LIST
9826: LIST
9827: PUSH
9828: EMPTY
9829: LIST
9830: LIST
9831: LIST
9832: LIST
9833: LIST
9834: LIST
9835: LIST
9836: LIST
9837: LIST
9838: LIST
9839: LIST
9840: LIST
9841: LIST
9842: LIST
9843: LIST
9844: LIST
9845: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9846: LD_ADDR_VAR 0 16
9850: PUSH
9851: LD_INT 0
9853: PUSH
9854: LD_INT 0
9856: PUSH
9857: EMPTY
9858: LIST
9859: LIST
9860: PUSH
9861: LD_INT 0
9863: PUSH
9864: LD_INT 1
9866: NEG
9867: PUSH
9868: EMPTY
9869: LIST
9870: LIST
9871: PUSH
9872: LD_INT 1
9874: PUSH
9875: LD_INT 0
9877: PUSH
9878: EMPTY
9879: LIST
9880: LIST
9881: PUSH
9882: LD_INT 1
9884: PUSH
9885: LD_INT 1
9887: PUSH
9888: EMPTY
9889: LIST
9890: LIST
9891: PUSH
9892: LD_INT 0
9894: PUSH
9895: LD_INT 1
9897: PUSH
9898: EMPTY
9899: LIST
9900: LIST
9901: PUSH
9902: LD_INT 1
9904: NEG
9905: PUSH
9906: LD_INT 0
9908: PUSH
9909: EMPTY
9910: LIST
9911: LIST
9912: PUSH
9913: LD_INT 1
9915: NEG
9916: PUSH
9917: LD_INT 1
9919: NEG
9920: PUSH
9921: EMPTY
9922: LIST
9923: LIST
9924: PUSH
9925: LD_INT 1
9927: NEG
9928: PUSH
9929: LD_INT 2
9931: NEG
9932: PUSH
9933: EMPTY
9934: LIST
9935: LIST
9936: PUSH
9937: LD_INT 2
9939: PUSH
9940: LD_INT 1
9942: PUSH
9943: EMPTY
9944: LIST
9945: LIST
9946: PUSH
9947: LD_INT 2
9949: PUSH
9950: LD_INT 2
9952: PUSH
9953: EMPTY
9954: LIST
9955: LIST
9956: PUSH
9957: LD_INT 1
9959: PUSH
9960: LD_INT 2
9962: PUSH
9963: EMPTY
9964: LIST
9965: LIST
9966: PUSH
9967: LD_INT 2
9969: NEG
9970: PUSH
9971: LD_INT 1
9973: NEG
9974: PUSH
9975: EMPTY
9976: LIST
9977: LIST
9978: PUSH
9979: LD_INT 2
9981: NEG
9982: PUSH
9983: LD_INT 2
9985: NEG
9986: PUSH
9987: EMPTY
9988: LIST
9989: LIST
9990: PUSH
9991: LD_INT 3
9993: PUSH
9994: LD_INT 2
9996: PUSH
9997: EMPTY
9998: LIST
9999: LIST
10000: PUSH
10001: LD_INT 3
10003: PUSH
10004: LD_INT 3
10006: PUSH
10007: EMPTY
10008: LIST
10009: LIST
10010: PUSH
10011: LD_INT 2
10013: PUSH
10014: LD_INT 3
10016: PUSH
10017: EMPTY
10018: LIST
10019: LIST
10020: PUSH
10021: EMPTY
10022: LIST
10023: LIST
10024: LIST
10025: LIST
10026: LIST
10027: LIST
10028: LIST
10029: LIST
10030: LIST
10031: LIST
10032: LIST
10033: LIST
10034: LIST
10035: LIST
10036: LIST
10037: LIST
10038: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10039: LD_ADDR_VAR 0 17
10043: PUSH
10044: LD_INT 0
10046: PUSH
10047: LD_INT 0
10049: PUSH
10050: EMPTY
10051: LIST
10052: LIST
10053: PUSH
10054: LD_INT 0
10056: PUSH
10057: LD_INT 1
10059: NEG
10060: PUSH
10061: EMPTY
10062: LIST
10063: LIST
10064: PUSH
10065: LD_INT 1
10067: PUSH
10068: LD_INT 0
10070: PUSH
10071: EMPTY
10072: LIST
10073: LIST
10074: PUSH
10075: LD_INT 1
10077: PUSH
10078: LD_INT 1
10080: PUSH
10081: EMPTY
10082: LIST
10083: LIST
10084: PUSH
10085: LD_INT 0
10087: PUSH
10088: LD_INT 1
10090: PUSH
10091: EMPTY
10092: LIST
10093: LIST
10094: PUSH
10095: LD_INT 1
10097: NEG
10098: PUSH
10099: LD_INT 0
10101: PUSH
10102: EMPTY
10103: LIST
10104: LIST
10105: PUSH
10106: LD_INT 1
10108: NEG
10109: PUSH
10110: LD_INT 1
10112: NEG
10113: PUSH
10114: EMPTY
10115: LIST
10116: LIST
10117: PUSH
10118: LD_INT 1
10120: NEG
10121: PUSH
10122: LD_INT 2
10124: NEG
10125: PUSH
10126: EMPTY
10127: LIST
10128: LIST
10129: PUSH
10130: LD_INT 0
10132: PUSH
10133: LD_INT 2
10135: NEG
10136: PUSH
10137: EMPTY
10138: LIST
10139: LIST
10140: PUSH
10141: LD_INT 1
10143: PUSH
10144: LD_INT 1
10146: NEG
10147: PUSH
10148: EMPTY
10149: LIST
10150: LIST
10151: PUSH
10152: LD_INT 2
10154: PUSH
10155: LD_INT 0
10157: PUSH
10158: EMPTY
10159: LIST
10160: LIST
10161: PUSH
10162: LD_INT 2
10164: PUSH
10165: LD_INT 1
10167: PUSH
10168: EMPTY
10169: LIST
10170: LIST
10171: PUSH
10172: LD_INT 2
10174: PUSH
10175: LD_INT 2
10177: PUSH
10178: EMPTY
10179: LIST
10180: LIST
10181: PUSH
10182: LD_INT 1
10184: PUSH
10185: LD_INT 2
10187: PUSH
10188: EMPTY
10189: LIST
10190: LIST
10191: PUSH
10192: LD_INT 0
10194: PUSH
10195: LD_INT 2
10197: PUSH
10198: EMPTY
10199: LIST
10200: LIST
10201: PUSH
10202: LD_INT 1
10204: NEG
10205: PUSH
10206: LD_INT 1
10208: PUSH
10209: EMPTY
10210: LIST
10211: LIST
10212: PUSH
10213: LD_INT 2
10215: NEG
10216: PUSH
10217: LD_INT 0
10219: PUSH
10220: EMPTY
10221: LIST
10222: LIST
10223: PUSH
10224: LD_INT 2
10226: NEG
10227: PUSH
10228: LD_INT 1
10230: NEG
10231: PUSH
10232: EMPTY
10233: LIST
10234: LIST
10235: PUSH
10236: LD_INT 2
10238: NEG
10239: PUSH
10240: LD_INT 2
10242: NEG
10243: PUSH
10244: EMPTY
10245: LIST
10246: LIST
10247: PUSH
10248: EMPTY
10249: LIST
10250: LIST
10251: LIST
10252: LIST
10253: LIST
10254: LIST
10255: LIST
10256: LIST
10257: LIST
10258: LIST
10259: LIST
10260: LIST
10261: LIST
10262: LIST
10263: LIST
10264: LIST
10265: LIST
10266: LIST
10267: LIST
10268: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10269: LD_ADDR_VAR 0 18
10273: PUSH
10274: LD_INT 0
10276: PUSH
10277: LD_INT 0
10279: PUSH
10280: EMPTY
10281: LIST
10282: LIST
10283: PUSH
10284: LD_INT 0
10286: PUSH
10287: LD_INT 1
10289: NEG
10290: PUSH
10291: EMPTY
10292: LIST
10293: LIST
10294: PUSH
10295: LD_INT 1
10297: PUSH
10298: LD_INT 0
10300: PUSH
10301: EMPTY
10302: LIST
10303: LIST
10304: PUSH
10305: LD_INT 1
10307: PUSH
10308: LD_INT 1
10310: PUSH
10311: EMPTY
10312: LIST
10313: LIST
10314: PUSH
10315: LD_INT 0
10317: PUSH
10318: LD_INT 1
10320: PUSH
10321: EMPTY
10322: LIST
10323: LIST
10324: PUSH
10325: LD_INT 1
10327: NEG
10328: PUSH
10329: LD_INT 0
10331: PUSH
10332: EMPTY
10333: LIST
10334: LIST
10335: PUSH
10336: LD_INT 1
10338: NEG
10339: PUSH
10340: LD_INT 1
10342: NEG
10343: PUSH
10344: EMPTY
10345: LIST
10346: LIST
10347: PUSH
10348: LD_INT 1
10350: NEG
10351: PUSH
10352: LD_INT 2
10354: NEG
10355: PUSH
10356: EMPTY
10357: LIST
10358: LIST
10359: PUSH
10360: LD_INT 0
10362: PUSH
10363: LD_INT 2
10365: NEG
10366: PUSH
10367: EMPTY
10368: LIST
10369: LIST
10370: PUSH
10371: LD_INT 1
10373: PUSH
10374: LD_INT 1
10376: NEG
10377: PUSH
10378: EMPTY
10379: LIST
10380: LIST
10381: PUSH
10382: LD_INT 2
10384: PUSH
10385: LD_INT 0
10387: PUSH
10388: EMPTY
10389: LIST
10390: LIST
10391: PUSH
10392: LD_INT 2
10394: PUSH
10395: LD_INT 1
10397: PUSH
10398: EMPTY
10399: LIST
10400: LIST
10401: PUSH
10402: LD_INT 2
10404: PUSH
10405: LD_INT 2
10407: PUSH
10408: EMPTY
10409: LIST
10410: LIST
10411: PUSH
10412: LD_INT 1
10414: PUSH
10415: LD_INT 2
10417: PUSH
10418: EMPTY
10419: LIST
10420: LIST
10421: PUSH
10422: LD_INT 0
10424: PUSH
10425: LD_INT 2
10427: PUSH
10428: EMPTY
10429: LIST
10430: LIST
10431: PUSH
10432: LD_INT 1
10434: NEG
10435: PUSH
10436: LD_INT 1
10438: PUSH
10439: EMPTY
10440: LIST
10441: LIST
10442: PUSH
10443: LD_INT 2
10445: NEG
10446: PUSH
10447: LD_INT 0
10449: PUSH
10450: EMPTY
10451: LIST
10452: LIST
10453: PUSH
10454: LD_INT 2
10456: NEG
10457: PUSH
10458: LD_INT 1
10460: NEG
10461: PUSH
10462: EMPTY
10463: LIST
10464: LIST
10465: PUSH
10466: LD_INT 2
10468: NEG
10469: PUSH
10470: LD_INT 2
10472: NEG
10473: PUSH
10474: EMPTY
10475: LIST
10476: LIST
10477: PUSH
10478: EMPTY
10479: LIST
10480: LIST
10481: LIST
10482: LIST
10483: LIST
10484: LIST
10485: LIST
10486: LIST
10487: LIST
10488: LIST
10489: LIST
10490: LIST
10491: LIST
10492: LIST
10493: LIST
10494: LIST
10495: LIST
10496: LIST
10497: LIST
10498: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10499: LD_ADDR_VAR 0 19
10503: PUSH
10504: LD_INT 0
10506: PUSH
10507: LD_INT 0
10509: PUSH
10510: EMPTY
10511: LIST
10512: LIST
10513: PUSH
10514: LD_INT 0
10516: PUSH
10517: LD_INT 1
10519: NEG
10520: PUSH
10521: EMPTY
10522: LIST
10523: LIST
10524: PUSH
10525: LD_INT 1
10527: PUSH
10528: LD_INT 0
10530: PUSH
10531: EMPTY
10532: LIST
10533: LIST
10534: PUSH
10535: LD_INT 1
10537: PUSH
10538: LD_INT 1
10540: PUSH
10541: EMPTY
10542: LIST
10543: LIST
10544: PUSH
10545: LD_INT 0
10547: PUSH
10548: LD_INT 1
10550: PUSH
10551: EMPTY
10552: LIST
10553: LIST
10554: PUSH
10555: LD_INT 1
10557: NEG
10558: PUSH
10559: LD_INT 0
10561: PUSH
10562: EMPTY
10563: LIST
10564: LIST
10565: PUSH
10566: LD_INT 1
10568: NEG
10569: PUSH
10570: LD_INT 1
10572: NEG
10573: PUSH
10574: EMPTY
10575: LIST
10576: LIST
10577: PUSH
10578: LD_INT 1
10580: NEG
10581: PUSH
10582: LD_INT 2
10584: NEG
10585: PUSH
10586: EMPTY
10587: LIST
10588: LIST
10589: PUSH
10590: LD_INT 0
10592: PUSH
10593: LD_INT 2
10595: NEG
10596: PUSH
10597: EMPTY
10598: LIST
10599: LIST
10600: PUSH
10601: LD_INT 1
10603: PUSH
10604: LD_INT 1
10606: NEG
10607: PUSH
10608: EMPTY
10609: LIST
10610: LIST
10611: PUSH
10612: LD_INT 2
10614: PUSH
10615: LD_INT 0
10617: PUSH
10618: EMPTY
10619: LIST
10620: LIST
10621: PUSH
10622: LD_INT 2
10624: PUSH
10625: LD_INT 1
10627: PUSH
10628: EMPTY
10629: LIST
10630: LIST
10631: PUSH
10632: LD_INT 2
10634: PUSH
10635: LD_INT 2
10637: PUSH
10638: EMPTY
10639: LIST
10640: LIST
10641: PUSH
10642: LD_INT 1
10644: PUSH
10645: LD_INT 2
10647: PUSH
10648: EMPTY
10649: LIST
10650: LIST
10651: PUSH
10652: LD_INT 0
10654: PUSH
10655: LD_INT 2
10657: PUSH
10658: EMPTY
10659: LIST
10660: LIST
10661: PUSH
10662: LD_INT 1
10664: NEG
10665: PUSH
10666: LD_INT 1
10668: PUSH
10669: EMPTY
10670: LIST
10671: LIST
10672: PUSH
10673: LD_INT 2
10675: NEG
10676: PUSH
10677: LD_INT 0
10679: PUSH
10680: EMPTY
10681: LIST
10682: LIST
10683: PUSH
10684: LD_INT 2
10686: NEG
10687: PUSH
10688: LD_INT 1
10690: NEG
10691: PUSH
10692: EMPTY
10693: LIST
10694: LIST
10695: PUSH
10696: LD_INT 2
10698: NEG
10699: PUSH
10700: LD_INT 2
10702: NEG
10703: PUSH
10704: EMPTY
10705: LIST
10706: LIST
10707: PUSH
10708: EMPTY
10709: LIST
10710: LIST
10711: LIST
10712: LIST
10713: LIST
10714: LIST
10715: LIST
10716: LIST
10717: LIST
10718: LIST
10719: LIST
10720: LIST
10721: LIST
10722: LIST
10723: LIST
10724: LIST
10725: LIST
10726: LIST
10727: LIST
10728: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10729: LD_ADDR_VAR 0 20
10733: PUSH
10734: LD_INT 0
10736: PUSH
10737: LD_INT 0
10739: PUSH
10740: EMPTY
10741: LIST
10742: LIST
10743: PUSH
10744: LD_INT 0
10746: PUSH
10747: LD_INT 1
10749: NEG
10750: PUSH
10751: EMPTY
10752: LIST
10753: LIST
10754: PUSH
10755: LD_INT 1
10757: PUSH
10758: LD_INT 0
10760: PUSH
10761: EMPTY
10762: LIST
10763: LIST
10764: PUSH
10765: LD_INT 1
10767: PUSH
10768: LD_INT 1
10770: PUSH
10771: EMPTY
10772: LIST
10773: LIST
10774: PUSH
10775: LD_INT 0
10777: PUSH
10778: LD_INT 1
10780: PUSH
10781: EMPTY
10782: LIST
10783: LIST
10784: PUSH
10785: LD_INT 1
10787: NEG
10788: PUSH
10789: LD_INT 0
10791: PUSH
10792: EMPTY
10793: LIST
10794: LIST
10795: PUSH
10796: LD_INT 1
10798: NEG
10799: PUSH
10800: LD_INT 1
10802: NEG
10803: PUSH
10804: EMPTY
10805: LIST
10806: LIST
10807: PUSH
10808: LD_INT 1
10810: NEG
10811: PUSH
10812: LD_INT 2
10814: NEG
10815: PUSH
10816: EMPTY
10817: LIST
10818: LIST
10819: PUSH
10820: LD_INT 0
10822: PUSH
10823: LD_INT 2
10825: NEG
10826: PUSH
10827: EMPTY
10828: LIST
10829: LIST
10830: PUSH
10831: LD_INT 1
10833: PUSH
10834: LD_INT 1
10836: NEG
10837: PUSH
10838: EMPTY
10839: LIST
10840: LIST
10841: PUSH
10842: LD_INT 2
10844: PUSH
10845: LD_INT 0
10847: PUSH
10848: EMPTY
10849: LIST
10850: LIST
10851: PUSH
10852: LD_INT 2
10854: PUSH
10855: LD_INT 1
10857: PUSH
10858: EMPTY
10859: LIST
10860: LIST
10861: PUSH
10862: LD_INT 2
10864: PUSH
10865: LD_INT 2
10867: PUSH
10868: EMPTY
10869: LIST
10870: LIST
10871: PUSH
10872: LD_INT 1
10874: PUSH
10875: LD_INT 2
10877: PUSH
10878: EMPTY
10879: LIST
10880: LIST
10881: PUSH
10882: LD_INT 0
10884: PUSH
10885: LD_INT 2
10887: PUSH
10888: EMPTY
10889: LIST
10890: LIST
10891: PUSH
10892: LD_INT 1
10894: NEG
10895: PUSH
10896: LD_INT 1
10898: PUSH
10899: EMPTY
10900: LIST
10901: LIST
10902: PUSH
10903: LD_INT 2
10905: NEG
10906: PUSH
10907: LD_INT 0
10909: PUSH
10910: EMPTY
10911: LIST
10912: LIST
10913: PUSH
10914: LD_INT 2
10916: NEG
10917: PUSH
10918: LD_INT 1
10920: NEG
10921: PUSH
10922: EMPTY
10923: LIST
10924: LIST
10925: PUSH
10926: LD_INT 2
10928: NEG
10929: PUSH
10930: LD_INT 2
10932: NEG
10933: PUSH
10934: EMPTY
10935: LIST
10936: LIST
10937: PUSH
10938: EMPTY
10939: LIST
10940: LIST
10941: LIST
10942: LIST
10943: LIST
10944: LIST
10945: LIST
10946: LIST
10947: LIST
10948: LIST
10949: LIST
10950: LIST
10951: LIST
10952: LIST
10953: LIST
10954: LIST
10955: LIST
10956: LIST
10957: LIST
10958: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10959: LD_ADDR_VAR 0 21
10963: PUSH
10964: LD_INT 0
10966: PUSH
10967: LD_INT 0
10969: PUSH
10970: EMPTY
10971: LIST
10972: LIST
10973: PUSH
10974: LD_INT 0
10976: PUSH
10977: LD_INT 1
10979: NEG
10980: PUSH
10981: EMPTY
10982: LIST
10983: LIST
10984: PUSH
10985: LD_INT 1
10987: PUSH
10988: LD_INT 0
10990: PUSH
10991: EMPTY
10992: LIST
10993: LIST
10994: PUSH
10995: LD_INT 1
10997: PUSH
10998: LD_INT 1
11000: PUSH
11001: EMPTY
11002: LIST
11003: LIST
11004: PUSH
11005: LD_INT 0
11007: PUSH
11008: LD_INT 1
11010: PUSH
11011: EMPTY
11012: LIST
11013: LIST
11014: PUSH
11015: LD_INT 1
11017: NEG
11018: PUSH
11019: LD_INT 0
11021: PUSH
11022: EMPTY
11023: LIST
11024: LIST
11025: PUSH
11026: LD_INT 1
11028: NEG
11029: PUSH
11030: LD_INT 1
11032: NEG
11033: PUSH
11034: EMPTY
11035: LIST
11036: LIST
11037: PUSH
11038: LD_INT 1
11040: NEG
11041: PUSH
11042: LD_INT 2
11044: NEG
11045: PUSH
11046: EMPTY
11047: LIST
11048: LIST
11049: PUSH
11050: LD_INT 0
11052: PUSH
11053: LD_INT 2
11055: NEG
11056: PUSH
11057: EMPTY
11058: LIST
11059: LIST
11060: PUSH
11061: LD_INT 1
11063: PUSH
11064: LD_INT 1
11066: NEG
11067: PUSH
11068: EMPTY
11069: LIST
11070: LIST
11071: PUSH
11072: LD_INT 2
11074: PUSH
11075: LD_INT 0
11077: PUSH
11078: EMPTY
11079: LIST
11080: LIST
11081: PUSH
11082: LD_INT 2
11084: PUSH
11085: LD_INT 1
11087: PUSH
11088: EMPTY
11089: LIST
11090: LIST
11091: PUSH
11092: LD_INT 2
11094: PUSH
11095: LD_INT 2
11097: PUSH
11098: EMPTY
11099: LIST
11100: LIST
11101: PUSH
11102: LD_INT 1
11104: PUSH
11105: LD_INT 2
11107: PUSH
11108: EMPTY
11109: LIST
11110: LIST
11111: PUSH
11112: LD_INT 0
11114: PUSH
11115: LD_INT 2
11117: PUSH
11118: EMPTY
11119: LIST
11120: LIST
11121: PUSH
11122: LD_INT 1
11124: NEG
11125: PUSH
11126: LD_INT 1
11128: PUSH
11129: EMPTY
11130: LIST
11131: LIST
11132: PUSH
11133: LD_INT 2
11135: NEG
11136: PUSH
11137: LD_INT 0
11139: PUSH
11140: EMPTY
11141: LIST
11142: LIST
11143: PUSH
11144: LD_INT 2
11146: NEG
11147: PUSH
11148: LD_INT 1
11150: NEG
11151: PUSH
11152: EMPTY
11153: LIST
11154: LIST
11155: PUSH
11156: LD_INT 2
11158: NEG
11159: PUSH
11160: LD_INT 2
11162: NEG
11163: PUSH
11164: EMPTY
11165: LIST
11166: LIST
11167: PUSH
11168: EMPTY
11169: LIST
11170: LIST
11171: LIST
11172: LIST
11173: LIST
11174: LIST
11175: LIST
11176: LIST
11177: LIST
11178: LIST
11179: LIST
11180: LIST
11181: LIST
11182: LIST
11183: LIST
11184: LIST
11185: LIST
11186: LIST
11187: LIST
11188: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11189: LD_ADDR_VAR 0 22
11193: PUSH
11194: LD_INT 0
11196: PUSH
11197: LD_INT 0
11199: PUSH
11200: EMPTY
11201: LIST
11202: LIST
11203: PUSH
11204: LD_INT 0
11206: PUSH
11207: LD_INT 1
11209: NEG
11210: PUSH
11211: EMPTY
11212: LIST
11213: LIST
11214: PUSH
11215: LD_INT 1
11217: PUSH
11218: LD_INT 0
11220: PUSH
11221: EMPTY
11222: LIST
11223: LIST
11224: PUSH
11225: LD_INT 1
11227: PUSH
11228: LD_INT 1
11230: PUSH
11231: EMPTY
11232: LIST
11233: LIST
11234: PUSH
11235: LD_INT 0
11237: PUSH
11238: LD_INT 1
11240: PUSH
11241: EMPTY
11242: LIST
11243: LIST
11244: PUSH
11245: LD_INT 1
11247: NEG
11248: PUSH
11249: LD_INT 0
11251: PUSH
11252: EMPTY
11253: LIST
11254: LIST
11255: PUSH
11256: LD_INT 1
11258: NEG
11259: PUSH
11260: LD_INT 1
11262: NEG
11263: PUSH
11264: EMPTY
11265: LIST
11266: LIST
11267: PUSH
11268: LD_INT 1
11270: NEG
11271: PUSH
11272: LD_INT 2
11274: NEG
11275: PUSH
11276: EMPTY
11277: LIST
11278: LIST
11279: PUSH
11280: LD_INT 0
11282: PUSH
11283: LD_INT 2
11285: NEG
11286: PUSH
11287: EMPTY
11288: LIST
11289: LIST
11290: PUSH
11291: LD_INT 1
11293: PUSH
11294: LD_INT 1
11296: NEG
11297: PUSH
11298: EMPTY
11299: LIST
11300: LIST
11301: PUSH
11302: LD_INT 2
11304: PUSH
11305: LD_INT 0
11307: PUSH
11308: EMPTY
11309: LIST
11310: LIST
11311: PUSH
11312: LD_INT 2
11314: PUSH
11315: LD_INT 1
11317: PUSH
11318: EMPTY
11319: LIST
11320: LIST
11321: PUSH
11322: LD_INT 2
11324: PUSH
11325: LD_INT 2
11327: PUSH
11328: EMPTY
11329: LIST
11330: LIST
11331: PUSH
11332: LD_INT 1
11334: PUSH
11335: LD_INT 2
11337: PUSH
11338: EMPTY
11339: LIST
11340: LIST
11341: PUSH
11342: LD_INT 0
11344: PUSH
11345: LD_INT 2
11347: PUSH
11348: EMPTY
11349: LIST
11350: LIST
11351: PUSH
11352: LD_INT 1
11354: NEG
11355: PUSH
11356: LD_INT 1
11358: PUSH
11359: EMPTY
11360: LIST
11361: LIST
11362: PUSH
11363: LD_INT 2
11365: NEG
11366: PUSH
11367: LD_INT 0
11369: PUSH
11370: EMPTY
11371: LIST
11372: LIST
11373: PUSH
11374: LD_INT 2
11376: NEG
11377: PUSH
11378: LD_INT 1
11380: NEG
11381: PUSH
11382: EMPTY
11383: LIST
11384: LIST
11385: PUSH
11386: LD_INT 2
11388: NEG
11389: PUSH
11390: LD_INT 2
11392: NEG
11393: PUSH
11394: EMPTY
11395: LIST
11396: LIST
11397: PUSH
11398: EMPTY
11399: LIST
11400: LIST
11401: LIST
11402: LIST
11403: LIST
11404: LIST
11405: LIST
11406: LIST
11407: LIST
11408: LIST
11409: LIST
11410: LIST
11411: LIST
11412: LIST
11413: LIST
11414: LIST
11415: LIST
11416: LIST
11417: LIST
11418: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11419: LD_ADDR_VAR 0 23
11423: PUSH
11424: LD_INT 0
11426: PUSH
11427: LD_INT 0
11429: PUSH
11430: EMPTY
11431: LIST
11432: LIST
11433: PUSH
11434: LD_INT 0
11436: PUSH
11437: LD_INT 1
11439: NEG
11440: PUSH
11441: EMPTY
11442: LIST
11443: LIST
11444: PUSH
11445: LD_INT 1
11447: PUSH
11448: LD_INT 0
11450: PUSH
11451: EMPTY
11452: LIST
11453: LIST
11454: PUSH
11455: LD_INT 1
11457: PUSH
11458: LD_INT 1
11460: PUSH
11461: EMPTY
11462: LIST
11463: LIST
11464: PUSH
11465: LD_INT 0
11467: PUSH
11468: LD_INT 1
11470: PUSH
11471: EMPTY
11472: LIST
11473: LIST
11474: PUSH
11475: LD_INT 1
11477: NEG
11478: PUSH
11479: LD_INT 0
11481: PUSH
11482: EMPTY
11483: LIST
11484: LIST
11485: PUSH
11486: LD_INT 1
11488: NEG
11489: PUSH
11490: LD_INT 1
11492: NEG
11493: PUSH
11494: EMPTY
11495: LIST
11496: LIST
11497: PUSH
11498: LD_INT 1
11500: NEG
11501: PUSH
11502: LD_INT 2
11504: NEG
11505: PUSH
11506: EMPTY
11507: LIST
11508: LIST
11509: PUSH
11510: LD_INT 0
11512: PUSH
11513: LD_INT 2
11515: NEG
11516: PUSH
11517: EMPTY
11518: LIST
11519: LIST
11520: PUSH
11521: LD_INT 1
11523: PUSH
11524: LD_INT 1
11526: NEG
11527: PUSH
11528: EMPTY
11529: LIST
11530: LIST
11531: PUSH
11532: LD_INT 2
11534: PUSH
11535: LD_INT 0
11537: PUSH
11538: EMPTY
11539: LIST
11540: LIST
11541: PUSH
11542: LD_INT 2
11544: PUSH
11545: LD_INT 1
11547: PUSH
11548: EMPTY
11549: LIST
11550: LIST
11551: PUSH
11552: LD_INT 2
11554: PUSH
11555: LD_INT 2
11557: PUSH
11558: EMPTY
11559: LIST
11560: LIST
11561: PUSH
11562: LD_INT 1
11564: PUSH
11565: LD_INT 2
11567: PUSH
11568: EMPTY
11569: LIST
11570: LIST
11571: PUSH
11572: LD_INT 0
11574: PUSH
11575: LD_INT 2
11577: PUSH
11578: EMPTY
11579: LIST
11580: LIST
11581: PUSH
11582: LD_INT 1
11584: NEG
11585: PUSH
11586: LD_INT 1
11588: PUSH
11589: EMPTY
11590: LIST
11591: LIST
11592: PUSH
11593: LD_INT 2
11595: NEG
11596: PUSH
11597: LD_INT 0
11599: PUSH
11600: EMPTY
11601: LIST
11602: LIST
11603: PUSH
11604: LD_INT 2
11606: NEG
11607: PUSH
11608: LD_INT 1
11610: NEG
11611: PUSH
11612: EMPTY
11613: LIST
11614: LIST
11615: PUSH
11616: LD_INT 2
11618: NEG
11619: PUSH
11620: LD_INT 2
11622: NEG
11623: PUSH
11624: EMPTY
11625: LIST
11626: LIST
11627: PUSH
11628: LD_INT 2
11630: NEG
11631: PUSH
11632: LD_INT 3
11634: NEG
11635: PUSH
11636: EMPTY
11637: LIST
11638: LIST
11639: PUSH
11640: LD_INT 1
11642: NEG
11643: PUSH
11644: LD_INT 3
11646: NEG
11647: PUSH
11648: EMPTY
11649: LIST
11650: LIST
11651: PUSH
11652: LD_INT 1
11654: PUSH
11655: LD_INT 2
11657: NEG
11658: PUSH
11659: EMPTY
11660: LIST
11661: LIST
11662: PUSH
11663: LD_INT 2
11665: PUSH
11666: LD_INT 1
11668: NEG
11669: PUSH
11670: EMPTY
11671: LIST
11672: LIST
11673: PUSH
11674: EMPTY
11675: LIST
11676: LIST
11677: LIST
11678: LIST
11679: LIST
11680: LIST
11681: LIST
11682: LIST
11683: LIST
11684: LIST
11685: LIST
11686: LIST
11687: LIST
11688: LIST
11689: LIST
11690: LIST
11691: LIST
11692: LIST
11693: LIST
11694: LIST
11695: LIST
11696: LIST
11697: LIST
11698: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11699: LD_ADDR_VAR 0 24
11703: PUSH
11704: LD_INT 0
11706: PUSH
11707: LD_INT 0
11709: PUSH
11710: EMPTY
11711: LIST
11712: LIST
11713: PUSH
11714: LD_INT 0
11716: PUSH
11717: LD_INT 1
11719: NEG
11720: PUSH
11721: EMPTY
11722: LIST
11723: LIST
11724: PUSH
11725: LD_INT 1
11727: PUSH
11728: LD_INT 0
11730: PUSH
11731: EMPTY
11732: LIST
11733: LIST
11734: PUSH
11735: LD_INT 1
11737: PUSH
11738: LD_INT 1
11740: PUSH
11741: EMPTY
11742: LIST
11743: LIST
11744: PUSH
11745: LD_INT 0
11747: PUSH
11748: LD_INT 1
11750: PUSH
11751: EMPTY
11752: LIST
11753: LIST
11754: PUSH
11755: LD_INT 1
11757: NEG
11758: PUSH
11759: LD_INT 0
11761: PUSH
11762: EMPTY
11763: LIST
11764: LIST
11765: PUSH
11766: LD_INT 1
11768: NEG
11769: PUSH
11770: LD_INT 1
11772: NEG
11773: PUSH
11774: EMPTY
11775: LIST
11776: LIST
11777: PUSH
11778: LD_INT 1
11780: NEG
11781: PUSH
11782: LD_INT 2
11784: NEG
11785: PUSH
11786: EMPTY
11787: LIST
11788: LIST
11789: PUSH
11790: LD_INT 0
11792: PUSH
11793: LD_INT 2
11795: NEG
11796: PUSH
11797: EMPTY
11798: LIST
11799: LIST
11800: PUSH
11801: LD_INT 1
11803: PUSH
11804: LD_INT 1
11806: NEG
11807: PUSH
11808: EMPTY
11809: LIST
11810: LIST
11811: PUSH
11812: LD_INT 2
11814: PUSH
11815: LD_INT 0
11817: PUSH
11818: EMPTY
11819: LIST
11820: LIST
11821: PUSH
11822: LD_INT 2
11824: PUSH
11825: LD_INT 1
11827: PUSH
11828: EMPTY
11829: LIST
11830: LIST
11831: PUSH
11832: LD_INT 2
11834: PUSH
11835: LD_INT 2
11837: PUSH
11838: EMPTY
11839: LIST
11840: LIST
11841: PUSH
11842: LD_INT 1
11844: PUSH
11845: LD_INT 2
11847: PUSH
11848: EMPTY
11849: LIST
11850: LIST
11851: PUSH
11852: LD_INT 0
11854: PUSH
11855: LD_INT 2
11857: PUSH
11858: EMPTY
11859: LIST
11860: LIST
11861: PUSH
11862: LD_INT 1
11864: NEG
11865: PUSH
11866: LD_INT 1
11868: PUSH
11869: EMPTY
11870: LIST
11871: LIST
11872: PUSH
11873: LD_INT 2
11875: NEG
11876: PUSH
11877: LD_INT 0
11879: PUSH
11880: EMPTY
11881: LIST
11882: LIST
11883: PUSH
11884: LD_INT 2
11886: NEG
11887: PUSH
11888: LD_INT 1
11890: NEG
11891: PUSH
11892: EMPTY
11893: LIST
11894: LIST
11895: PUSH
11896: LD_INT 2
11898: NEG
11899: PUSH
11900: LD_INT 2
11902: NEG
11903: PUSH
11904: EMPTY
11905: LIST
11906: LIST
11907: PUSH
11908: LD_INT 1
11910: PUSH
11911: LD_INT 2
11913: NEG
11914: PUSH
11915: EMPTY
11916: LIST
11917: LIST
11918: PUSH
11919: LD_INT 2
11921: PUSH
11922: LD_INT 1
11924: NEG
11925: PUSH
11926: EMPTY
11927: LIST
11928: LIST
11929: PUSH
11930: LD_INT 3
11932: PUSH
11933: LD_INT 1
11935: PUSH
11936: EMPTY
11937: LIST
11938: LIST
11939: PUSH
11940: LD_INT 3
11942: PUSH
11943: LD_INT 2
11945: PUSH
11946: EMPTY
11947: LIST
11948: LIST
11949: PUSH
11950: EMPTY
11951: LIST
11952: LIST
11953: LIST
11954: LIST
11955: LIST
11956: LIST
11957: LIST
11958: LIST
11959: LIST
11960: LIST
11961: LIST
11962: LIST
11963: LIST
11964: LIST
11965: LIST
11966: LIST
11967: LIST
11968: LIST
11969: LIST
11970: LIST
11971: LIST
11972: LIST
11973: LIST
11974: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
11975: LD_ADDR_VAR 0 25
11979: PUSH
11980: LD_INT 0
11982: PUSH
11983: LD_INT 0
11985: PUSH
11986: EMPTY
11987: LIST
11988: LIST
11989: PUSH
11990: LD_INT 0
11992: PUSH
11993: LD_INT 1
11995: NEG
11996: PUSH
11997: EMPTY
11998: LIST
11999: LIST
12000: PUSH
12001: LD_INT 1
12003: PUSH
12004: LD_INT 0
12006: PUSH
12007: EMPTY
12008: LIST
12009: LIST
12010: PUSH
12011: LD_INT 1
12013: PUSH
12014: LD_INT 1
12016: PUSH
12017: EMPTY
12018: LIST
12019: LIST
12020: PUSH
12021: LD_INT 0
12023: PUSH
12024: LD_INT 1
12026: PUSH
12027: EMPTY
12028: LIST
12029: LIST
12030: PUSH
12031: LD_INT 1
12033: NEG
12034: PUSH
12035: LD_INT 0
12037: PUSH
12038: EMPTY
12039: LIST
12040: LIST
12041: PUSH
12042: LD_INT 1
12044: NEG
12045: PUSH
12046: LD_INT 1
12048: NEG
12049: PUSH
12050: EMPTY
12051: LIST
12052: LIST
12053: PUSH
12054: LD_INT 1
12056: NEG
12057: PUSH
12058: LD_INT 2
12060: NEG
12061: PUSH
12062: EMPTY
12063: LIST
12064: LIST
12065: PUSH
12066: LD_INT 0
12068: PUSH
12069: LD_INT 2
12071: NEG
12072: PUSH
12073: EMPTY
12074: LIST
12075: LIST
12076: PUSH
12077: LD_INT 1
12079: PUSH
12080: LD_INT 1
12082: NEG
12083: PUSH
12084: EMPTY
12085: LIST
12086: LIST
12087: PUSH
12088: LD_INT 2
12090: PUSH
12091: LD_INT 0
12093: PUSH
12094: EMPTY
12095: LIST
12096: LIST
12097: PUSH
12098: LD_INT 2
12100: PUSH
12101: LD_INT 1
12103: PUSH
12104: EMPTY
12105: LIST
12106: LIST
12107: PUSH
12108: LD_INT 2
12110: PUSH
12111: LD_INT 2
12113: PUSH
12114: EMPTY
12115: LIST
12116: LIST
12117: PUSH
12118: LD_INT 1
12120: PUSH
12121: LD_INT 2
12123: PUSH
12124: EMPTY
12125: LIST
12126: LIST
12127: PUSH
12128: LD_INT 0
12130: PUSH
12131: LD_INT 2
12133: PUSH
12134: EMPTY
12135: LIST
12136: LIST
12137: PUSH
12138: LD_INT 1
12140: NEG
12141: PUSH
12142: LD_INT 1
12144: PUSH
12145: EMPTY
12146: LIST
12147: LIST
12148: PUSH
12149: LD_INT 2
12151: NEG
12152: PUSH
12153: LD_INT 0
12155: PUSH
12156: EMPTY
12157: LIST
12158: LIST
12159: PUSH
12160: LD_INT 2
12162: NEG
12163: PUSH
12164: LD_INT 1
12166: NEG
12167: PUSH
12168: EMPTY
12169: LIST
12170: LIST
12171: PUSH
12172: LD_INT 2
12174: NEG
12175: PUSH
12176: LD_INT 2
12178: NEG
12179: PUSH
12180: EMPTY
12181: LIST
12182: LIST
12183: PUSH
12184: LD_INT 3
12186: PUSH
12187: LD_INT 1
12189: PUSH
12190: EMPTY
12191: LIST
12192: LIST
12193: PUSH
12194: LD_INT 3
12196: PUSH
12197: LD_INT 2
12199: PUSH
12200: EMPTY
12201: LIST
12202: LIST
12203: PUSH
12204: LD_INT 2
12206: PUSH
12207: LD_INT 3
12209: PUSH
12210: EMPTY
12211: LIST
12212: LIST
12213: PUSH
12214: LD_INT 1
12216: PUSH
12217: LD_INT 3
12219: PUSH
12220: EMPTY
12221: LIST
12222: LIST
12223: PUSH
12224: EMPTY
12225: LIST
12226: LIST
12227: LIST
12228: LIST
12229: LIST
12230: LIST
12231: LIST
12232: LIST
12233: LIST
12234: LIST
12235: LIST
12236: LIST
12237: LIST
12238: LIST
12239: LIST
12240: LIST
12241: LIST
12242: LIST
12243: LIST
12244: LIST
12245: LIST
12246: LIST
12247: LIST
12248: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12249: LD_ADDR_VAR 0 26
12253: PUSH
12254: LD_INT 0
12256: PUSH
12257: LD_INT 0
12259: PUSH
12260: EMPTY
12261: LIST
12262: LIST
12263: PUSH
12264: LD_INT 0
12266: PUSH
12267: LD_INT 1
12269: NEG
12270: PUSH
12271: EMPTY
12272: LIST
12273: LIST
12274: PUSH
12275: LD_INT 1
12277: PUSH
12278: LD_INT 0
12280: PUSH
12281: EMPTY
12282: LIST
12283: LIST
12284: PUSH
12285: LD_INT 1
12287: PUSH
12288: LD_INT 1
12290: PUSH
12291: EMPTY
12292: LIST
12293: LIST
12294: PUSH
12295: LD_INT 0
12297: PUSH
12298: LD_INT 1
12300: PUSH
12301: EMPTY
12302: LIST
12303: LIST
12304: PUSH
12305: LD_INT 1
12307: NEG
12308: PUSH
12309: LD_INT 0
12311: PUSH
12312: EMPTY
12313: LIST
12314: LIST
12315: PUSH
12316: LD_INT 1
12318: NEG
12319: PUSH
12320: LD_INT 1
12322: NEG
12323: PUSH
12324: EMPTY
12325: LIST
12326: LIST
12327: PUSH
12328: LD_INT 1
12330: NEG
12331: PUSH
12332: LD_INT 2
12334: NEG
12335: PUSH
12336: EMPTY
12337: LIST
12338: LIST
12339: PUSH
12340: LD_INT 0
12342: PUSH
12343: LD_INT 2
12345: NEG
12346: PUSH
12347: EMPTY
12348: LIST
12349: LIST
12350: PUSH
12351: LD_INT 1
12353: PUSH
12354: LD_INT 1
12356: NEG
12357: PUSH
12358: EMPTY
12359: LIST
12360: LIST
12361: PUSH
12362: LD_INT 2
12364: PUSH
12365: LD_INT 0
12367: PUSH
12368: EMPTY
12369: LIST
12370: LIST
12371: PUSH
12372: LD_INT 2
12374: PUSH
12375: LD_INT 1
12377: PUSH
12378: EMPTY
12379: LIST
12380: LIST
12381: PUSH
12382: LD_INT 2
12384: PUSH
12385: LD_INT 2
12387: PUSH
12388: EMPTY
12389: LIST
12390: LIST
12391: PUSH
12392: LD_INT 1
12394: PUSH
12395: LD_INT 2
12397: PUSH
12398: EMPTY
12399: LIST
12400: LIST
12401: PUSH
12402: LD_INT 0
12404: PUSH
12405: LD_INT 2
12407: PUSH
12408: EMPTY
12409: LIST
12410: LIST
12411: PUSH
12412: LD_INT 1
12414: NEG
12415: PUSH
12416: LD_INT 1
12418: PUSH
12419: EMPTY
12420: LIST
12421: LIST
12422: PUSH
12423: LD_INT 2
12425: NEG
12426: PUSH
12427: LD_INT 0
12429: PUSH
12430: EMPTY
12431: LIST
12432: LIST
12433: PUSH
12434: LD_INT 2
12436: NEG
12437: PUSH
12438: LD_INT 1
12440: NEG
12441: PUSH
12442: EMPTY
12443: LIST
12444: LIST
12445: PUSH
12446: LD_INT 2
12448: NEG
12449: PUSH
12450: LD_INT 2
12452: NEG
12453: PUSH
12454: EMPTY
12455: LIST
12456: LIST
12457: PUSH
12458: LD_INT 2
12460: PUSH
12461: LD_INT 3
12463: PUSH
12464: EMPTY
12465: LIST
12466: LIST
12467: PUSH
12468: LD_INT 1
12470: PUSH
12471: LD_INT 3
12473: PUSH
12474: EMPTY
12475: LIST
12476: LIST
12477: PUSH
12478: LD_INT 1
12480: NEG
12481: PUSH
12482: LD_INT 2
12484: PUSH
12485: EMPTY
12486: LIST
12487: LIST
12488: PUSH
12489: LD_INT 2
12491: NEG
12492: PUSH
12493: LD_INT 1
12495: PUSH
12496: EMPTY
12497: LIST
12498: LIST
12499: PUSH
12500: EMPTY
12501: LIST
12502: LIST
12503: LIST
12504: LIST
12505: LIST
12506: LIST
12507: LIST
12508: LIST
12509: LIST
12510: LIST
12511: LIST
12512: LIST
12513: LIST
12514: LIST
12515: LIST
12516: LIST
12517: LIST
12518: LIST
12519: LIST
12520: LIST
12521: LIST
12522: LIST
12523: LIST
12524: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12525: LD_ADDR_VAR 0 27
12529: PUSH
12530: LD_INT 0
12532: PUSH
12533: LD_INT 0
12535: PUSH
12536: EMPTY
12537: LIST
12538: LIST
12539: PUSH
12540: LD_INT 0
12542: PUSH
12543: LD_INT 1
12545: NEG
12546: PUSH
12547: EMPTY
12548: LIST
12549: LIST
12550: PUSH
12551: LD_INT 1
12553: PUSH
12554: LD_INT 0
12556: PUSH
12557: EMPTY
12558: LIST
12559: LIST
12560: PUSH
12561: LD_INT 1
12563: PUSH
12564: LD_INT 1
12566: PUSH
12567: EMPTY
12568: LIST
12569: LIST
12570: PUSH
12571: LD_INT 0
12573: PUSH
12574: LD_INT 1
12576: PUSH
12577: EMPTY
12578: LIST
12579: LIST
12580: PUSH
12581: LD_INT 1
12583: NEG
12584: PUSH
12585: LD_INT 0
12587: PUSH
12588: EMPTY
12589: LIST
12590: LIST
12591: PUSH
12592: LD_INT 1
12594: NEG
12595: PUSH
12596: LD_INT 1
12598: NEG
12599: PUSH
12600: EMPTY
12601: LIST
12602: LIST
12603: PUSH
12604: LD_INT 1
12606: NEG
12607: PUSH
12608: LD_INT 2
12610: NEG
12611: PUSH
12612: EMPTY
12613: LIST
12614: LIST
12615: PUSH
12616: LD_INT 0
12618: PUSH
12619: LD_INT 2
12621: NEG
12622: PUSH
12623: EMPTY
12624: LIST
12625: LIST
12626: PUSH
12627: LD_INT 1
12629: PUSH
12630: LD_INT 1
12632: NEG
12633: PUSH
12634: EMPTY
12635: LIST
12636: LIST
12637: PUSH
12638: LD_INT 2
12640: PUSH
12641: LD_INT 0
12643: PUSH
12644: EMPTY
12645: LIST
12646: LIST
12647: PUSH
12648: LD_INT 2
12650: PUSH
12651: LD_INT 1
12653: PUSH
12654: EMPTY
12655: LIST
12656: LIST
12657: PUSH
12658: LD_INT 2
12660: PUSH
12661: LD_INT 2
12663: PUSH
12664: EMPTY
12665: LIST
12666: LIST
12667: PUSH
12668: LD_INT 1
12670: PUSH
12671: LD_INT 2
12673: PUSH
12674: EMPTY
12675: LIST
12676: LIST
12677: PUSH
12678: LD_INT 0
12680: PUSH
12681: LD_INT 2
12683: PUSH
12684: EMPTY
12685: LIST
12686: LIST
12687: PUSH
12688: LD_INT 1
12690: NEG
12691: PUSH
12692: LD_INT 1
12694: PUSH
12695: EMPTY
12696: LIST
12697: LIST
12698: PUSH
12699: LD_INT 2
12701: NEG
12702: PUSH
12703: LD_INT 0
12705: PUSH
12706: EMPTY
12707: LIST
12708: LIST
12709: PUSH
12710: LD_INT 2
12712: NEG
12713: PUSH
12714: LD_INT 1
12716: NEG
12717: PUSH
12718: EMPTY
12719: LIST
12720: LIST
12721: PUSH
12722: LD_INT 2
12724: NEG
12725: PUSH
12726: LD_INT 2
12728: NEG
12729: PUSH
12730: EMPTY
12731: LIST
12732: LIST
12733: PUSH
12734: LD_INT 1
12736: NEG
12737: PUSH
12738: LD_INT 2
12740: PUSH
12741: EMPTY
12742: LIST
12743: LIST
12744: PUSH
12745: LD_INT 2
12747: NEG
12748: PUSH
12749: LD_INT 1
12751: PUSH
12752: EMPTY
12753: LIST
12754: LIST
12755: PUSH
12756: LD_INT 3
12758: NEG
12759: PUSH
12760: LD_INT 1
12762: NEG
12763: PUSH
12764: EMPTY
12765: LIST
12766: LIST
12767: PUSH
12768: LD_INT 3
12770: NEG
12771: PUSH
12772: LD_INT 2
12774: NEG
12775: PUSH
12776: EMPTY
12777: LIST
12778: LIST
12779: PUSH
12780: EMPTY
12781: LIST
12782: LIST
12783: LIST
12784: LIST
12785: LIST
12786: LIST
12787: LIST
12788: LIST
12789: LIST
12790: LIST
12791: LIST
12792: LIST
12793: LIST
12794: LIST
12795: LIST
12796: LIST
12797: LIST
12798: LIST
12799: LIST
12800: LIST
12801: LIST
12802: LIST
12803: LIST
12804: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12805: LD_ADDR_VAR 0 28
12809: PUSH
12810: LD_INT 0
12812: PUSH
12813: LD_INT 0
12815: PUSH
12816: EMPTY
12817: LIST
12818: LIST
12819: PUSH
12820: LD_INT 0
12822: PUSH
12823: LD_INT 1
12825: NEG
12826: PUSH
12827: EMPTY
12828: LIST
12829: LIST
12830: PUSH
12831: LD_INT 1
12833: PUSH
12834: LD_INT 0
12836: PUSH
12837: EMPTY
12838: LIST
12839: LIST
12840: PUSH
12841: LD_INT 1
12843: PUSH
12844: LD_INT 1
12846: PUSH
12847: EMPTY
12848: LIST
12849: LIST
12850: PUSH
12851: LD_INT 0
12853: PUSH
12854: LD_INT 1
12856: PUSH
12857: EMPTY
12858: LIST
12859: LIST
12860: PUSH
12861: LD_INT 1
12863: NEG
12864: PUSH
12865: LD_INT 0
12867: PUSH
12868: EMPTY
12869: LIST
12870: LIST
12871: PUSH
12872: LD_INT 1
12874: NEG
12875: PUSH
12876: LD_INT 1
12878: NEG
12879: PUSH
12880: EMPTY
12881: LIST
12882: LIST
12883: PUSH
12884: LD_INT 1
12886: NEG
12887: PUSH
12888: LD_INT 2
12890: NEG
12891: PUSH
12892: EMPTY
12893: LIST
12894: LIST
12895: PUSH
12896: LD_INT 0
12898: PUSH
12899: LD_INT 2
12901: NEG
12902: PUSH
12903: EMPTY
12904: LIST
12905: LIST
12906: PUSH
12907: LD_INT 1
12909: PUSH
12910: LD_INT 1
12912: NEG
12913: PUSH
12914: EMPTY
12915: LIST
12916: LIST
12917: PUSH
12918: LD_INT 2
12920: PUSH
12921: LD_INT 0
12923: PUSH
12924: EMPTY
12925: LIST
12926: LIST
12927: PUSH
12928: LD_INT 2
12930: PUSH
12931: LD_INT 1
12933: PUSH
12934: EMPTY
12935: LIST
12936: LIST
12937: PUSH
12938: LD_INT 2
12940: PUSH
12941: LD_INT 2
12943: PUSH
12944: EMPTY
12945: LIST
12946: LIST
12947: PUSH
12948: LD_INT 1
12950: PUSH
12951: LD_INT 2
12953: PUSH
12954: EMPTY
12955: LIST
12956: LIST
12957: PUSH
12958: LD_INT 0
12960: PUSH
12961: LD_INT 2
12963: PUSH
12964: EMPTY
12965: LIST
12966: LIST
12967: PUSH
12968: LD_INT 1
12970: NEG
12971: PUSH
12972: LD_INT 1
12974: PUSH
12975: EMPTY
12976: LIST
12977: LIST
12978: PUSH
12979: LD_INT 2
12981: NEG
12982: PUSH
12983: LD_INT 0
12985: PUSH
12986: EMPTY
12987: LIST
12988: LIST
12989: PUSH
12990: LD_INT 2
12992: NEG
12993: PUSH
12994: LD_INT 1
12996: NEG
12997: PUSH
12998: EMPTY
12999: LIST
13000: LIST
13001: PUSH
13002: LD_INT 2
13004: NEG
13005: PUSH
13006: LD_INT 2
13008: NEG
13009: PUSH
13010: EMPTY
13011: LIST
13012: LIST
13013: PUSH
13014: LD_INT 2
13016: NEG
13017: PUSH
13018: LD_INT 3
13020: NEG
13021: PUSH
13022: EMPTY
13023: LIST
13024: LIST
13025: PUSH
13026: LD_INT 1
13028: NEG
13029: PUSH
13030: LD_INT 3
13032: NEG
13033: PUSH
13034: EMPTY
13035: LIST
13036: LIST
13037: PUSH
13038: LD_INT 3
13040: NEG
13041: PUSH
13042: LD_INT 1
13044: NEG
13045: PUSH
13046: EMPTY
13047: LIST
13048: LIST
13049: PUSH
13050: LD_INT 3
13052: NEG
13053: PUSH
13054: LD_INT 2
13056: NEG
13057: PUSH
13058: EMPTY
13059: LIST
13060: LIST
13061: PUSH
13062: EMPTY
13063: LIST
13064: LIST
13065: LIST
13066: LIST
13067: LIST
13068: LIST
13069: LIST
13070: LIST
13071: LIST
13072: LIST
13073: LIST
13074: LIST
13075: LIST
13076: LIST
13077: LIST
13078: LIST
13079: LIST
13080: LIST
13081: LIST
13082: LIST
13083: LIST
13084: LIST
13085: LIST
13086: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13087: LD_ADDR_VAR 0 29
13091: PUSH
13092: LD_INT 0
13094: PUSH
13095: LD_INT 0
13097: PUSH
13098: EMPTY
13099: LIST
13100: LIST
13101: PUSH
13102: LD_INT 0
13104: PUSH
13105: LD_INT 1
13107: NEG
13108: PUSH
13109: EMPTY
13110: LIST
13111: LIST
13112: PUSH
13113: LD_INT 1
13115: PUSH
13116: LD_INT 0
13118: PUSH
13119: EMPTY
13120: LIST
13121: LIST
13122: PUSH
13123: LD_INT 1
13125: PUSH
13126: LD_INT 1
13128: PUSH
13129: EMPTY
13130: LIST
13131: LIST
13132: PUSH
13133: LD_INT 0
13135: PUSH
13136: LD_INT 1
13138: PUSH
13139: EMPTY
13140: LIST
13141: LIST
13142: PUSH
13143: LD_INT 1
13145: NEG
13146: PUSH
13147: LD_INT 0
13149: PUSH
13150: EMPTY
13151: LIST
13152: LIST
13153: PUSH
13154: LD_INT 1
13156: NEG
13157: PUSH
13158: LD_INT 1
13160: NEG
13161: PUSH
13162: EMPTY
13163: LIST
13164: LIST
13165: PUSH
13166: LD_INT 1
13168: NEG
13169: PUSH
13170: LD_INT 2
13172: NEG
13173: PUSH
13174: EMPTY
13175: LIST
13176: LIST
13177: PUSH
13178: LD_INT 0
13180: PUSH
13181: LD_INT 2
13183: NEG
13184: PUSH
13185: EMPTY
13186: LIST
13187: LIST
13188: PUSH
13189: LD_INT 1
13191: PUSH
13192: LD_INT 1
13194: NEG
13195: PUSH
13196: EMPTY
13197: LIST
13198: LIST
13199: PUSH
13200: LD_INT 2
13202: PUSH
13203: LD_INT 0
13205: PUSH
13206: EMPTY
13207: LIST
13208: LIST
13209: PUSH
13210: LD_INT 2
13212: PUSH
13213: LD_INT 1
13215: PUSH
13216: EMPTY
13217: LIST
13218: LIST
13219: PUSH
13220: LD_INT 1
13222: PUSH
13223: LD_INT 2
13225: PUSH
13226: EMPTY
13227: LIST
13228: LIST
13229: PUSH
13230: LD_INT 0
13232: PUSH
13233: LD_INT 2
13235: PUSH
13236: EMPTY
13237: LIST
13238: LIST
13239: PUSH
13240: LD_INT 1
13242: NEG
13243: PUSH
13244: LD_INT 1
13246: PUSH
13247: EMPTY
13248: LIST
13249: LIST
13250: PUSH
13251: LD_INT 2
13253: NEG
13254: PUSH
13255: LD_INT 1
13257: NEG
13258: PUSH
13259: EMPTY
13260: LIST
13261: LIST
13262: PUSH
13263: LD_INT 2
13265: NEG
13266: PUSH
13267: LD_INT 2
13269: NEG
13270: PUSH
13271: EMPTY
13272: LIST
13273: LIST
13274: PUSH
13275: LD_INT 2
13277: NEG
13278: PUSH
13279: LD_INT 3
13281: NEG
13282: PUSH
13283: EMPTY
13284: LIST
13285: LIST
13286: PUSH
13287: LD_INT 2
13289: PUSH
13290: LD_INT 1
13292: NEG
13293: PUSH
13294: EMPTY
13295: LIST
13296: LIST
13297: PUSH
13298: LD_INT 3
13300: PUSH
13301: LD_INT 1
13303: PUSH
13304: EMPTY
13305: LIST
13306: LIST
13307: PUSH
13308: LD_INT 1
13310: PUSH
13311: LD_INT 3
13313: PUSH
13314: EMPTY
13315: LIST
13316: LIST
13317: PUSH
13318: LD_INT 1
13320: NEG
13321: PUSH
13322: LD_INT 2
13324: PUSH
13325: EMPTY
13326: LIST
13327: LIST
13328: PUSH
13329: LD_INT 3
13331: NEG
13332: PUSH
13333: LD_INT 2
13335: NEG
13336: PUSH
13337: EMPTY
13338: LIST
13339: LIST
13340: PUSH
13341: EMPTY
13342: LIST
13343: LIST
13344: LIST
13345: LIST
13346: LIST
13347: LIST
13348: LIST
13349: LIST
13350: LIST
13351: LIST
13352: LIST
13353: LIST
13354: LIST
13355: LIST
13356: LIST
13357: LIST
13358: LIST
13359: LIST
13360: LIST
13361: LIST
13362: LIST
13363: LIST
13364: LIST
13365: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13366: LD_ADDR_VAR 0 30
13370: PUSH
13371: LD_INT 0
13373: PUSH
13374: LD_INT 0
13376: PUSH
13377: EMPTY
13378: LIST
13379: LIST
13380: PUSH
13381: LD_INT 0
13383: PUSH
13384: LD_INT 1
13386: NEG
13387: PUSH
13388: EMPTY
13389: LIST
13390: LIST
13391: PUSH
13392: LD_INT 1
13394: PUSH
13395: LD_INT 0
13397: PUSH
13398: EMPTY
13399: LIST
13400: LIST
13401: PUSH
13402: LD_INT 1
13404: PUSH
13405: LD_INT 1
13407: PUSH
13408: EMPTY
13409: LIST
13410: LIST
13411: PUSH
13412: LD_INT 0
13414: PUSH
13415: LD_INT 1
13417: PUSH
13418: EMPTY
13419: LIST
13420: LIST
13421: PUSH
13422: LD_INT 1
13424: NEG
13425: PUSH
13426: LD_INT 0
13428: PUSH
13429: EMPTY
13430: LIST
13431: LIST
13432: PUSH
13433: LD_INT 1
13435: NEG
13436: PUSH
13437: LD_INT 1
13439: NEG
13440: PUSH
13441: EMPTY
13442: LIST
13443: LIST
13444: PUSH
13445: LD_INT 1
13447: NEG
13448: PUSH
13449: LD_INT 2
13451: NEG
13452: PUSH
13453: EMPTY
13454: LIST
13455: LIST
13456: PUSH
13457: LD_INT 0
13459: PUSH
13460: LD_INT 2
13462: NEG
13463: PUSH
13464: EMPTY
13465: LIST
13466: LIST
13467: PUSH
13468: LD_INT 1
13470: PUSH
13471: LD_INT 1
13473: NEG
13474: PUSH
13475: EMPTY
13476: LIST
13477: LIST
13478: PUSH
13479: LD_INT 2
13481: PUSH
13482: LD_INT 0
13484: PUSH
13485: EMPTY
13486: LIST
13487: LIST
13488: PUSH
13489: LD_INT 2
13491: PUSH
13492: LD_INT 1
13494: PUSH
13495: EMPTY
13496: LIST
13497: LIST
13498: PUSH
13499: LD_INT 2
13501: PUSH
13502: LD_INT 2
13504: PUSH
13505: EMPTY
13506: LIST
13507: LIST
13508: PUSH
13509: LD_INT 1
13511: PUSH
13512: LD_INT 2
13514: PUSH
13515: EMPTY
13516: LIST
13517: LIST
13518: PUSH
13519: LD_INT 1
13521: NEG
13522: PUSH
13523: LD_INT 1
13525: PUSH
13526: EMPTY
13527: LIST
13528: LIST
13529: PUSH
13530: LD_INT 2
13532: NEG
13533: PUSH
13534: LD_INT 0
13536: PUSH
13537: EMPTY
13538: LIST
13539: LIST
13540: PUSH
13541: LD_INT 2
13543: NEG
13544: PUSH
13545: LD_INT 1
13547: NEG
13548: PUSH
13549: EMPTY
13550: LIST
13551: LIST
13552: PUSH
13553: LD_INT 1
13555: NEG
13556: PUSH
13557: LD_INT 3
13559: NEG
13560: PUSH
13561: EMPTY
13562: LIST
13563: LIST
13564: PUSH
13565: LD_INT 1
13567: PUSH
13568: LD_INT 2
13570: NEG
13571: PUSH
13572: EMPTY
13573: LIST
13574: LIST
13575: PUSH
13576: LD_INT 3
13578: PUSH
13579: LD_INT 2
13581: PUSH
13582: EMPTY
13583: LIST
13584: LIST
13585: PUSH
13586: LD_INT 2
13588: PUSH
13589: LD_INT 3
13591: PUSH
13592: EMPTY
13593: LIST
13594: LIST
13595: PUSH
13596: LD_INT 2
13598: NEG
13599: PUSH
13600: LD_INT 1
13602: PUSH
13603: EMPTY
13604: LIST
13605: LIST
13606: PUSH
13607: LD_INT 3
13609: NEG
13610: PUSH
13611: LD_INT 1
13613: NEG
13614: PUSH
13615: EMPTY
13616: LIST
13617: LIST
13618: PUSH
13619: EMPTY
13620: LIST
13621: LIST
13622: LIST
13623: LIST
13624: LIST
13625: LIST
13626: LIST
13627: LIST
13628: LIST
13629: LIST
13630: LIST
13631: LIST
13632: LIST
13633: LIST
13634: LIST
13635: LIST
13636: LIST
13637: LIST
13638: LIST
13639: LIST
13640: LIST
13641: LIST
13642: LIST
13643: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13644: LD_ADDR_VAR 0 31
13648: PUSH
13649: LD_INT 0
13651: PUSH
13652: LD_INT 0
13654: PUSH
13655: EMPTY
13656: LIST
13657: LIST
13658: PUSH
13659: LD_INT 0
13661: PUSH
13662: LD_INT 1
13664: NEG
13665: PUSH
13666: EMPTY
13667: LIST
13668: LIST
13669: PUSH
13670: LD_INT 1
13672: PUSH
13673: LD_INT 0
13675: PUSH
13676: EMPTY
13677: LIST
13678: LIST
13679: PUSH
13680: LD_INT 1
13682: PUSH
13683: LD_INT 1
13685: PUSH
13686: EMPTY
13687: LIST
13688: LIST
13689: PUSH
13690: LD_INT 0
13692: PUSH
13693: LD_INT 1
13695: PUSH
13696: EMPTY
13697: LIST
13698: LIST
13699: PUSH
13700: LD_INT 1
13702: NEG
13703: PUSH
13704: LD_INT 0
13706: PUSH
13707: EMPTY
13708: LIST
13709: LIST
13710: PUSH
13711: LD_INT 1
13713: NEG
13714: PUSH
13715: LD_INT 1
13717: NEG
13718: PUSH
13719: EMPTY
13720: LIST
13721: LIST
13722: PUSH
13723: LD_INT 1
13725: NEG
13726: PUSH
13727: LD_INT 2
13729: NEG
13730: PUSH
13731: EMPTY
13732: LIST
13733: LIST
13734: PUSH
13735: LD_INT 1
13737: PUSH
13738: LD_INT 1
13740: NEG
13741: PUSH
13742: EMPTY
13743: LIST
13744: LIST
13745: PUSH
13746: LD_INT 2
13748: PUSH
13749: LD_INT 0
13751: PUSH
13752: EMPTY
13753: LIST
13754: LIST
13755: PUSH
13756: LD_INT 2
13758: PUSH
13759: LD_INT 1
13761: PUSH
13762: EMPTY
13763: LIST
13764: LIST
13765: PUSH
13766: LD_INT 2
13768: PUSH
13769: LD_INT 2
13771: PUSH
13772: EMPTY
13773: LIST
13774: LIST
13775: PUSH
13776: LD_INT 1
13778: PUSH
13779: LD_INT 2
13781: PUSH
13782: EMPTY
13783: LIST
13784: LIST
13785: PUSH
13786: LD_INT 0
13788: PUSH
13789: LD_INT 2
13791: PUSH
13792: EMPTY
13793: LIST
13794: LIST
13795: PUSH
13796: LD_INT 1
13798: NEG
13799: PUSH
13800: LD_INT 1
13802: PUSH
13803: EMPTY
13804: LIST
13805: LIST
13806: PUSH
13807: LD_INT 2
13809: NEG
13810: PUSH
13811: LD_INT 1
13813: NEG
13814: PUSH
13815: EMPTY
13816: LIST
13817: LIST
13818: PUSH
13819: LD_INT 2
13821: NEG
13822: PUSH
13823: LD_INT 2
13825: NEG
13826: PUSH
13827: EMPTY
13828: LIST
13829: LIST
13830: PUSH
13831: LD_INT 2
13833: NEG
13834: PUSH
13835: LD_INT 3
13837: NEG
13838: PUSH
13839: EMPTY
13840: LIST
13841: LIST
13842: PUSH
13843: LD_INT 2
13845: PUSH
13846: LD_INT 1
13848: NEG
13849: PUSH
13850: EMPTY
13851: LIST
13852: LIST
13853: PUSH
13854: LD_INT 3
13856: PUSH
13857: LD_INT 1
13859: PUSH
13860: EMPTY
13861: LIST
13862: LIST
13863: PUSH
13864: LD_INT 1
13866: PUSH
13867: LD_INT 3
13869: PUSH
13870: EMPTY
13871: LIST
13872: LIST
13873: PUSH
13874: LD_INT 1
13876: NEG
13877: PUSH
13878: LD_INT 2
13880: PUSH
13881: EMPTY
13882: LIST
13883: LIST
13884: PUSH
13885: LD_INT 3
13887: NEG
13888: PUSH
13889: LD_INT 2
13891: NEG
13892: PUSH
13893: EMPTY
13894: LIST
13895: LIST
13896: PUSH
13897: EMPTY
13898: LIST
13899: LIST
13900: LIST
13901: LIST
13902: LIST
13903: LIST
13904: LIST
13905: LIST
13906: LIST
13907: LIST
13908: LIST
13909: LIST
13910: LIST
13911: LIST
13912: LIST
13913: LIST
13914: LIST
13915: LIST
13916: LIST
13917: LIST
13918: LIST
13919: LIST
13920: LIST
13921: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13922: LD_ADDR_VAR 0 32
13926: PUSH
13927: LD_INT 0
13929: PUSH
13930: LD_INT 0
13932: PUSH
13933: EMPTY
13934: LIST
13935: LIST
13936: PUSH
13937: LD_INT 0
13939: PUSH
13940: LD_INT 1
13942: NEG
13943: PUSH
13944: EMPTY
13945: LIST
13946: LIST
13947: PUSH
13948: LD_INT 1
13950: PUSH
13951: LD_INT 0
13953: PUSH
13954: EMPTY
13955: LIST
13956: LIST
13957: PUSH
13958: LD_INT 1
13960: PUSH
13961: LD_INT 1
13963: PUSH
13964: EMPTY
13965: LIST
13966: LIST
13967: PUSH
13968: LD_INT 0
13970: PUSH
13971: LD_INT 1
13973: PUSH
13974: EMPTY
13975: LIST
13976: LIST
13977: PUSH
13978: LD_INT 1
13980: NEG
13981: PUSH
13982: LD_INT 0
13984: PUSH
13985: EMPTY
13986: LIST
13987: LIST
13988: PUSH
13989: LD_INT 1
13991: NEG
13992: PUSH
13993: LD_INT 1
13995: NEG
13996: PUSH
13997: EMPTY
13998: LIST
13999: LIST
14000: PUSH
14001: LD_INT 1
14003: NEG
14004: PUSH
14005: LD_INT 2
14007: NEG
14008: PUSH
14009: EMPTY
14010: LIST
14011: LIST
14012: PUSH
14013: LD_INT 0
14015: PUSH
14016: LD_INT 2
14018: NEG
14019: PUSH
14020: EMPTY
14021: LIST
14022: LIST
14023: PUSH
14024: LD_INT 1
14026: PUSH
14027: LD_INT 1
14029: NEG
14030: PUSH
14031: EMPTY
14032: LIST
14033: LIST
14034: PUSH
14035: LD_INT 2
14037: PUSH
14038: LD_INT 1
14040: PUSH
14041: EMPTY
14042: LIST
14043: LIST
14044: PUSH
14045: LD_INT 2
14047: PUSH
14048: LD_INT 2
14050: PUSH
14051: EMPTY
14052: LIST
14053: LIST
14054: PUSH
14055: LD_INT 1
14057: PUSH
14058: LD_INT 2
14060: PUSH
14061: EMPTY
14062: LIST
14063: LIST
14064: PUSH
14065: LD_INT 0
14067: PUSH
14068: LD_INT 2
14070: PUSH
14071: EMPTY
14072: LIST
14073: LIST
14074: PUSH
14075: LD_INT 1
14077: NEG
14078: PUSH
14079: LD_INT 1
14081: PUSH
14082: EMPTY
14083: LIST
14084: LIST
14085: PUSH
14086: LD_INT 2
14088: NEG
14089: PUSH
14090: LD_INT 0
14092: PUSH
14093: EMPTY
14094: LIST
14095: LIST
14096: PUSH
14097: LD_INT 2
14099: NEG
14100: PUSH
14101: LD_INT 1
14103: NEG
14104: PUSH
14105: EMPTY
14106: LIST
14107: LIST
14108: PUSH
14109: LD_INT 1
14111: NEG
14112: PUSH
14113: LD_INT 3
14115: NEG
14116: PUSH
14117: EMPTY
14118: LIST
14119: LIST
14120: PUSH
14121: LD_INT 1
14123: PUSH
14124: LD_INT 2
14126: NEG
14127: PUSH
14128: EMPTY
14129: LIST
14130: LIST
14131: PUSH
14132: LD_INT 3
14134: PUSH
14135: LD_INT 2
14137: PUSH
14138: EMPTY
14139: LIST
14140: LIST
14141: PUSH
14142: LD_INT 2
14144: PUSH
14145: LD_INT 3
14147: PUSH
14148: EMPTY
14149: LIST
14150: LIST
14151: PUSH
14152: LD_INT 2
14154: NEG
14155: PUSH
14156: LD_INT 1
14158: PUSH
14159: EMPTY
14160: LIST
14161: LIST
14162: PUSH
14163: LD_INT 3
14165: NEG
14166: PUSH
14167: LD_INT 1
14169: NEG
14170: PUSH
14171: EMPTY
14172: LIST
14173: LIST
14174: PUSH
14175: EMPTY
14176: LIST
14177: LIST
14178: LIST
14179: LIST
14180: LIST
14181: LIST
14182: LIST
14183: LIST
14184: LIST
14185: LIST
14186: LIST
14187: LIST
14188: LIST
14189: LIST
14190: LIST
14191: LIST
14192: LIST
14193: LIST
14194: LIST
14195: LIST
14196: LIST
14197: LIST
14198: LIST
14199: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14200: LD_ADDR_VAR 0 33
14204: PUSH
14205: LD_INT 0
14207: PUSH
14208: LD_INT 0
14210: PUSH
14211: EMPTY
14212: LIST
14213: LIST
14214: PUSH
14215: LD_INT 0
14217: PUSH
14218: LD_INT 1
14220: NEG
14221: PUSH
14222: EMPTY
14223: LIST
14224: LIST
14225: PUSH
14226: LD_INT 1
14228: PUSH
14229: LD_INT 0
14231: PUSH
14232: EMPTY
14233: LIST
14234: LIST
14235: PUSH
14236: LD_INT 1
14238: PUSH
14239: LD_INT 1
14241: PUSH
14242: EMPTY
14243: LIST
14244: LIST
14245: PUSH
14246: LD_INT 0
14248: PUSH
14249: LD_INT 1
14251: PUSH
14252: EMPTY
14253: LIST
14254: LIST
14255: PUSH
14256: LD_INT 1
14258: NEG
14259: PUSH
14260: LD_INT 0
14262: PUSH
14263: EMPTY
14264: LIST
14265: LIST
14266: PUSH
14267: LD_INT 1
14269: NEG
14270: PUSH
14271: LD_INT 1
14273: NEG
14274: PUSH
14275: EMPTY
14276: LIST
14277: LIST
14278: PUSH
14279: LD_INT 1
14281: NEG
14282: PUSH
14283: LD_INT 2
14285: NEG
14286: PUSH
14287: EMPTY
14288: LIST
14289: LIST
14290: PUSH
14291: LD_INT 1
14293: PUSH
14294: LD_INT 1
14296: NEG
14297: PUSH
14298: EMPTY
14299: LIST
14300: LIST
14301: PUSH
14302: LD_INT 2
14304: PUSH
14305: LD_INT 0
14307: PUSH
14308: EMPTY
14309: LIST
14310: LIST
14311: PUSH
14312: LD_INT 2
14314: PUSH
14315: LD_INT 1
14317: PUSH
14318: EMPTY
14319: LIST
14320: LIST
14321: PUSH
14322: LD_INT 1
14324: PUSH
14325: LD_INT 2
14327: PUSH
14328: EMPTY
14329: LIST
14330: LIST
14331: PUSH
14332: LD_INT 0
14334: PUSH
14335: LD_INT 2
14337: PUSH
14338: EMPTY
14339: LIST
14340: LIST
14341: PUSH
14342: LD_INT 1
14344: NEG
14345: PUSH
14346: LD_INT 1
14348: PUSH
14349: EMPTY
14350: LIST
14351: LIST
14352: PUSH
14353: LD_INT 2
14355: NEG
14356: PUSH
14357: LD_INT 0
14359: PUSH
14360: EMPTY
14361: LIST
14362: LIST
14363: PUSH
14364: LD_INT 2
14366: NEG
14367: PUSH
14368: LD_INT 1
14370: NEG
14371: PUSH
14372: EMPTY
14373: LIST
14374: LIST
14375: PUSH
14376: LD_INT 2
14378: NEG
14379: PUSH
14380: LD_INT 2
14382: NEG
14383: PUSH
14384: EMPTY
14385: LIST
14386: LIST
14387: PUSH
14388: LD_INT 2
14390: NEG
14391: PUSH
14392: LD_INT 3
14394: NEG
14395: PUSH
14396: EMPTY
14397: LIST
14398: LIST
14399: PUSH
14400: LD_INT 2
14402: PUSH
14403: LD_INT 1
14405: NEG
14406: PUSH
14407: EMPTY
14408: LIST
14409: LIST
14410: PUSH
14411: LD_INT 3
14413: PUSH
14414: LD_INT 1
14416: PUSH
14417: EMPTY
14418: LIST
14419: LIST
14420: PUSH
14421: LD_INT 1
14423: PUSH
14424: LD_INT 3
14426: PUSH
14427: EMPTY
14428: LIST
14429: LIST
14430: PUSH
14431: LD_INT 1
14433: NEG
14434: PUSH
14435: LD_INT 2
14437: PUSH
14438: EMPTY
14439: LIST
14440: LIST
14441: PUSH
14442: LD_INT 3
14444: NEG
14445: PUSH
14446: LD_INT 2
14448: NEG
14449: PUSH
14450: EMPTY
14451: LIST
14452: LIST
14453: PUSH
14454: EMPTY
14455: LIST
14456: LIST
14457: LIST
14458: LIST
14459: LIST
14460: LIST
14461: LIST
14462: LIST
14463: LIST
14464: LIST
14465: LIST
14466: LIST
14467: LIST
14468: LIST
14469: LIST
14470: LIST
14471: LIST
14472: LIST
14473: LIST
14474: LIST
14475: LIST
14476: LIST
14477: LIST
14478: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14479: LD_ADDR_VAR 0 34
14483: PUSH
14484: LD_INT 0
14486: PUSH
14487: LD_INT 0
14489: PUSH
14490: EMPTY
14491: LIST
14492: LIST
14493: PUSH
14494: LD_INT 0
14496: PUSH
14497: LD_INT 1
14499: NEG
14500: PUSH
14501: EMPTY
14502: LIST
14503: LIST
14504: PUSH
14505: LD_INT 1
14507: PUSH
14508: LD_INT 0
14510: PUSH
14511: EMPTY
14512: LIST
14513: LIST
14514: PUSH
14515: LD_INT 1
14517: PUSH
14518: LD_INT 1
14520: PUSH
14521: EMPTY
14522: LIST
14523: LIST
14524: PUSH
14525: LD_INT 0
14527: PUSH
14528: LD_INT 1
14530: PUSH
14531: EMPTY
14532: LIST
14533: LIST
14534: PUSH
14535: LD_INT 1
14537: NEG
14538: PUSH
14539: LD_INT 0
14541: PUSH
14542: EMPTY
14543: LIST
14544: LIST
14545: PUSH
14546: LD_INT 1
14548: NEG
14549: PUSH
14550: LD_INT 1
14552: NEG
14553: PUSH
14554: EMPTY
14555: LIST
14556: LIST
14557: PUSH
14558: LD_INT 1
14560: NEG
14561: PUSH
14562: LD_INT 2
14564: NEG
14565: PUSH
14566: EMPTY
14567: LIST
14568: LIST
14569: PUSH
14570: LD_INT 0
14572: PUSH
14573: LD_INT 2
14575: NEG
14576: PUSH
14577: EMPTY
14578: LIST
14579: LIST
14580: PUSH
14581: LD_INT 1
14583: PUSH
14584: LD_INT 1
14586: NEG
14587: PUSH
14588: EMPTY
14589: LIST
14590: LIST
14591: PUSH
14592: LD_INT 2
14594: PUSH
14595: LD_INT 1
14597: PUSH
14598: EMPTY
14599: LIST
14600: LIST
14601: PUSH
14602: LD_INT 2
14604: PUSH
14605: LD_INT 2
14607: PUSH
14608: EMPTY
14609: LIST
14610: LIST
14611: PUSH
14612: LD_INT 1
14614: PUSH
14615: LD_INT 2
14617: PUSH
14618: EMPTY
14619: LIST
14620: LIST
14621: PUSH
14622: LD_INT 1
14624: NEG
14625: PUSH
14626: LD_INT 1
14628: PUSH
14629: EMPTY
14630: LIST
14631: LIST
14632: PUSH
14633: LD_INT 2
14635: NEG
14636: PUSH
14637: LD_INT 0
14639: PUSH
14640: EMPTY
14641: LIST
14642: LIST
14643: PUSH
14644: LD_INT 2
14646: NEG
14647: PUSH
14648: LD_INT 1
14650: NEG
14651: PUSH
14652: EMPTY
14653: LIST
14654: LIST
14655: PUSH
14656: LD_INT 2
14658: NEG
14659: PUSH
14660: LD_INT 2
14662: NEG
14663: PUSH
14664: EMPTY
14665: LIST
14666: LIST
14667: PUSH
14668: LD_INT 1
14670: NEG
14671: PUSH
14672: LD_INT 3
14674: NEG
14675: PUSH
14676: EMPTY
14677: LIST
14678: LIST
14679: PUSH
14680: LD_INT 1
14682: PUSH
14683: LD_INT 2
14685: NEG
14686: PUSH
14687: EMPTY
14688: LIST
14689: LIST
14690: PUSH
14691: LD_INT 3
14693: PUSH
14694: LD_INT 2
14696: PUSH
14697: EMPTY
14698: LIST
14699: LIST
14700: PUSH
14701: LD_INT 2
14703: PUSH
14704: LD_INT 3
14706: PUSH
14707: EMPTY
14708: LIST
14709: LIST
14710: PUSH
14711: LD_INT 2
14713: NEG
14714: PUSH
14715: LD_INT 1
14717: PUSH
14718: EMPTY
14719: LIST
14720: LIST
14721: PUSH
14722: LD_INT 3
14724: NEG
14725: PUSH
14726: LD_INT 1
14728: NEG
14729: PUSH
14730: EMPTY
14731: LIST
14732: LIST
14733: PUSH
14734: EMPTY
14735: LIST
14736: LIST
14737: LIST
14738: LIST
14739: LIST
14740: LIST
14741: LIST
14742: LIST
14743: LIST
14744: LIST
14745: LIST
14746: LIST
14747: LIST
14748: LIST
14749: LIST
14750: LIST
14751: LIST
14752: LIST
14753: LIST
14754: LIST
14755: LIST
14756: LIST
14757: LIST
14758: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14759: LD_ADDR_VAR 0 35
14763: PUSH
14764: LD_INT 0
14766: PUSH
14767: LD_INT 0
14769: PUSH
14770: EMPTY
14771: LIST
14772: LIST
14773: PUSH
14774: LD_INT 0
14776: PUSH
14777: LD_INT 1
14779: NEG
14780: PUSH
14781: EMPTY
14782: LIST
14783: LIST
14784: PUSH
14785: LD_INT 1
14787: PUSH
14788: LD_INT 0
14790: PUSH
14791: EMPTY
14792: LIST
14793: LIST
14794: PUSH
14795: LD_INT 1
14797: PUSH
14798: LD_INT 1
14800: PUSH
14801: EMPTY
14802: LIST
14803: LIST
14804: PUSH
14805: LD_INT 0
14807: PUSH
14808: LD_INT 1
14810: PUSH
14811: EMPTY
14812: LIST
14813: LIST
14814: PUSH
14815: LD_INT 1
14817: NEG
14818: PUSH
14819: LD_INT 0
14821: PUSH
14822: EMPTY
14823: LIST
14824: LIST
14825: PUSH
14826: LD_INT 1
14828: NEG
14829: PUSH
14830: LD_INT 1
14832: NEG
14833: PUSH
14834: EMPTY
14835: LIST
14836: LIST
14837: PUSH
14838: LD_INT 2
14840: PUSH
14841: LD_INT 1
14843: PUSH
14844: EMPTY
14845: LIST
14846: LIST
14847: PUSH
14848: LD_INT 2
14850: NEG
14851: PUSH
14852: LD_INT 1
14854: NEG
14855: PUSH
14856: EMPTY
14857: LIST
14858: LIST
14859: PUSH
14860: EMPTY
14861: LIST
14862: LIST
14863: LIST
14864: LIST
14865: LIST
14866: LIST
14867: LIST
14868: LIST
14869: LIST
14870: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14871: LD_ADDR_VAR 0 36
14875: PUSH
14876: LD_INT 0
14878: PUSH
14879: LD_INT 0
14881: PUSH
14882: EMPTY
14883: LIST
14884: LIST
14885: PUSH
14886: LD_INT 0
14888: PUSH
14889: LD_INT 1
14891: NEG
14892: PUSH
14893: EMPTY
14894: LIST
14895: LIST
14896: PUSH
14897: LD_INT 1
14899: PUSH
14900: LD_INT 0
14902: PUSH
14903: EMPTY
14904: LIST
14905: LIST
14906: PUSH
14907: LD_INT 1
14909: PUSH
14910: LD_INT 1
14912: PUSH
14913: EMPTY
14914: LIST
14915: LIST
14916: PUSH
14917: LD_INT 0
14919: PUSH
14920: LD_INT 1
14922: PUSH
14923: EMPTY
14924: LIST
14925: LIST
14926: PUSH
14927: LD_INT 1
14929: NEG
14930: PUSH
14931: LD_INT 0
14933: PUSH
14934: EMPTY
14935: LIST
14936: LIST
14937: PUSH
14938: LD_INT 1
14940: NEG
14941: PUSH
14942: LD_INT 1
14944: NEG
14945: PUSH
14946: EMPTY
14947: LIST
14948: LIST
14949: PUSH
14950: LD_INT 1
14952: NEG
14953: PUSH
14954: LD_INT 2
14956: NEG
14957: PUSH
14958: EMPTY
14959: LIST
14960: LIST
14961: PUSH
14962: LD_INT 1
14964: PUSH
14965: LD_INT 2
14967: PUSH
14968: EMPTY
14969: LIST
14970: LIST
14971: PUSH
14972: EMPTY
14973: LIST
14974: LIST
14975: LIST
14976: LIST
14977: LIST
14978: LIST
14979: LIST
14980: LIST
14981: LIST
14982: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
14983: LD_ADDR_VAR 0 37
14987: PUSH
14988: LD_INT 0
14990: PUSH
14991: LD_INT 0
14993: PUSH
14994: EMPTY
14995: LIST
14996: LIST
14997: PUSH
14998: LD_INT 0
15000: PUSH
15001: LD_INT 1
15003: NEG
15004: PUSH
15005: EMPTY
15006: LIST
15007: LIST
15008: PUSH
15009: LD_INT 1
15011: PUSH
15012: LD_INT 0
15014: PUSH
15015: EMPTY
15016: LIST
15017: LIST
15018: PUSH
15019: LD_INT 1
15021: PUSH
15022: LD_INT 1
15024: PUSH
15025: EMPTY
15026: LIST
15027: LIST
15028: PUSH
15029: LD_INT 0
15031: PUSH
15032: LD_INT 1
15034: PUSH
15035: EMPTY
15036: LIST
15037: LIST
15038: PUSH
15039: LD_INT 1
15041: NEG
15042: PUSH
15043: LD_INT 0
15045: PUSH
15046: EMPTY
15047: LIST
15048: LIST
15049: PUSH
15050: LD_INT 1
15052: NEG
15053: PUSH
15054: LD_INT 1
15056: NEG
15057: PUSH
15058: EMPTY
15059: LIST
15060: LIST
15061: PUSH
15062: LD_INT 1
15064: PUSH
15065: LD_INT 1
15067: NEG
15068: PUSH
15069: EMPTY
15070: LIST
15071: LIST
15072: PUSH
15073: LD_INT 1
15075: NEG
15076: PUSH
15077: LD_INT 1
15079: PUSH
15080: EMPTY
15081: LIST
15082: LIST
15083: PUSH
15084: EMPTY
15085: LIST
15086: LIST
15087: LIST
15088: LIST
15089: LIST
15090: LIST
15091: LIST
15092: LIST
15093: LIST
15094: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15095: LD_ADDR_VAR 0 38
15099: PUSH
15100: LD_INT 0
15102: PUSH
15103: LD_INT 0
15105: PUSH
15106: EMPTY
15107: LIST
15108: LIST
15109: PUSH
15110: LD_INT 0
15112: PUSH
15113: LD_INT 1
15115: NEG
15116: PUSH
15117: EMPTY
15118: LIST
15119: LIST
15120: PUSH
15121: LD_INT 1
15123: PUSH
15124: LD_INT 0
15126: PUSH
15127: EMPTY
15128: LIST
15129: LIST
15130: PUSH
15131: LD_INT 1
15133: PUSH
15134: LD_INT 1
15136: PUSH
15137: EMPTY
15138: LIST
15139: LIST
15140: PUSH
15141: LD_INT 0
15143: PUSH
15144: LD_INT 1
15146: PUSH
15147: EMPTY
15148: LIST
15149: LIST
15150: PUSH
15151: LD_INT 1
15153: NEG
15154: PUSH
15155: LD_INT 0
15157: PUSH
15158: EMPTY
15159: LIST
15160: LIST
15161: PUSH
15162: LD_INT 1
15164: NEG
15165: PUSH
15166: LD_INT 1
15168: NEG
15169: PUSH
15170: EMPTY
15171: LIST
15172: LIST
15173: PUSH
15174: LD_INT 2
15176: PUSH
15177: LD_INT 1
15179: PUSH
15180: EMPTY
15181: LIST
15182: LIST
15183: PUSH
15184: LD_INT 2
15186: NEG
15187: PUSH
15188: LD_INT 1
15190: NEG
15191: PUSH
15192: EMPTY
15193: LIST
15194: LIST
15195: PUSH
15196: EMPTY
15197: LIST
15198: LIST
15199: LIST
15200: LIST
15201: LIST
15202: LIST
15203: LIST
15204: LIST
15205: LIST
15206: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15207: LD_ADDR_VAR 0 39
15211: PUSH
15212: LD_INT 0
15214: PUSH
15215: LD_INT 0
15217: PUSH
15218: EMPTY
15219: LIST
15220: LIST
15221: PUSH
15222: LD_INT 0
15224: PUSH
15225: LD_INT 1
15227: NEG
15228: PUSH
15229: EMPTY
15230: LIST
15231: LIST
15232: PUSH
15233: LD_INT 1
15235: PUSH
15236: LD_INT 0
15238: PUSH
15239: EMPTY
15240: LIST
15241: LIST
15242: PUSH
15243: LD_INT 1
15245: PUSH
15246: LD_INT 1
15248: PUSH
15249: EMPTY
15250: LIST
15251: LIST
15252: PUSH
15253: LD_INT 0
15255: PUSH
15256: LD_INT 1
15258: PUSH
15259: EMPTY
15260: LIST
15261: LIST
15262: PUSH
15263: LD_INT 1
15265: NEG
15266: PUSH
15267: LD_INT 0
15269: PUSH
15270: EMPTY
15271: LIST
15272: LIST
15273: PUSH
15274: LD_INT 1
15276: NEG
15277: PUSH
15278: LD_INT 1
15280: NEG
15281: PUSH
15282: EMPTY
15283: LIST
15284: LIST
15285: PUSH
15286: LD_INT 1
15288: NEG
15289: PUSH
15290: LD_INT 2
15292: NEG
15293: PUSH
15294: EMPTY
15295: LIST
15296: LIST
15297: PUSH
15298: LD_INT 1
15300: PUSH
15301: LD_INT 2
15303: PUSH
15304: EMPTY
15305: LIST
15306: LIST
15307: PUSH
15308: EMPTY
15309: LIST
15310: LIST
15311: LIST
15312: LIST
15313: LIST
15314: LIST
15315: LIST
15316: LIST
15317: LIST
15318: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15319: LD_ADDR_VAR 0 40
15323: PUSH
15324: LD_INT 0
15326: PUSH
15327: LD_INT 0
15329: PUSH
15330: EMPTY
15331: LIST
15332: LIST
15333: PUSH
15334: LD_INT 0
15336: PUSH
15337: LD_INT 1
15339: NEG
15340: PUSH
15341: EMPTY
15342: LIST
15343: LIST
15344: PUSH
15345: LD_INT 1
15347: PUSH
15348: LD_INT 0
15350: PUSH
15351: EMPTY
15352: LIST
15353: LIST
15354: PUSH
15355: LD_INT 1
15357: PUSH
15358: LD_INT 1
15360: PUSH
15361: EMPTY
15362: LIST
15363: LIST
15364: PUSH
15365: LD_INT 0
15367: PUSH
15368: LD_INT 1
15370: PUSH
15371: EMPTY
15372: LIST
15373: LIST
15374: PUSH
15375: LD_INT 1
15377: NEG
15378: PUSH
15379: LD_INT 0
15381: PUSH
15382: EMPTY
15383: LIST
15384: LIST
15385: PUSH
15386: LD_INT 1
15388: NEG
15389: PUSH
15390: LD_INT 1
15392: NEG
15393: PUSH
15394: EMPTY
15395: LIST
15396: LIST
15397: PUSH
15398: LD_INT 1
15400: PUSH
15401: LD_INT 1
15403: NEG
15404: PUSH
15405: EMPTY
15406: LIST
15407: LIST
15408: PUSH
15409: LD_INT 1
15411: NEG
15412: PUSH
15413: LD_INT 1
15415: PUSH
15416: EMPTY
15417: LIST
15418: LIST
15419: PUSH
15420: EMPTY
15421: LIST
15422: LIST
15423: LIST
15424: LIST
15425: LIST
15426: LIST
15427: LIST
15428: LIST
15429: LIST
15430: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15431: LD_ADDR_VAR 0 41
15435: PUSH
15436: LD_INT 0
15438: PUSH
15439: LD_INT 0
15441: PUSH
15442: EMPTY
15443: LIST
15444: LIST
15445: PUSH
15446: LD_INT 0
15448: PUSH
15449: LD_INT 1
15451: NEG
15452: PUSH
15453: EMPTY
15454: LIST
15455: LIST
15456: PUSH
15457: LD_INT 1
15459: PUSH
15460: LD_INT 0
15462: PUSH
15463: EMPTY
15464: LIST
15465: LIST
15466: PUSH
15467: LD_INT 1
15469: PUSH
15470: LD_INT 1
15472: PUSH
15473: EMPTY
15474: LIST
15475: LIST
15476: PUSH
15477: LD_INT 0
15479: PUSH
15480: LD_INT 1
15482: PUSH
15483: EMPTY
15484: LIST
15485: LIST
15486: PUSH
15487: LD_INT 1
15489: NEG
15490: PUSH
15491: LD_INT 0
15493: PUSH
15494: EMPTY
15495: LIST
15496: LIST
15497: PUSH
15498: LD_INT 1
15500: NEG
15501: PUSH
15502: LD_INT 1
15504: NEG
15505: PUSH
15506: EMPTY
15507: LIST
15508: LIST
15509: PUSH
15510: LD_INT 1
15512: NEG
15513: PUSH
15514: LD_INT 2
15516: NEG
15517: PUSH
15518: EMPTY
15519: LIST
15520: LIST
15521: PUSH
15522: LD_INT 1
15524: PUSH
15525: LD_INT 1
15527: NEG
15528: PUSH
15529: EMPTY
15530: LIST
15531: LIST
15532: PUSH
15533: LD_INT 2
15535: PUSH
15536: LD_INT 0
15538: PUSH
15539: EMPTY
15540: LIST
15541: LIST
15542: PUSH
15543: LD_INT 2
15545: PUSH
15546: LD_INT 1
15548: PUSH
15549: EMPTY
15550: LIST
15551: LIST
15552: PUSH
15553: LD_INT 2
15555: PUSH
15556: LD_INT 2
15558: PUSH
15559: EMPTY
15560: LIST
15561: LIST
15562: PUSH
15563: LD_INT 1
15565: PUSH
15566: LD_INT 2
15568: PUSH
15569: EMPTY
15570: LIST
15571: LIST
15572: PUSH
15573: LD_INT 1
15575: NEG
15576: PUSH
15577: LD_INT 1
15579: PUSH
15580: EMPTY
15581: LIST
15582: LIST
15583: PUSH
15584: LD_INT 2
15586: NEG
15587: PUSH
15588: LD_INT 0
15590: PUSH
15591: EMPTY
15592: LIST
15593: LIST
15594: PUSH
15595: LD_INT 2
15597: NEG
15598: PUSH
15599: LD_INT 1
15601: NEG
15602: PUSH
15603: EMPTY
15604: LIST
15605: LIST
15606: PUSH
15607: LD_INT 2
15609: NEG
15610: PUSH
15611: LD_INT 2
15613: NEG
15614: PUSH
15615: EMPTY
15616: LIST
15617: LIST
15618: PUSH
15619: LD_INT 2
15621: NEG
15622: PUSH
15623: LD_INT 3
15625: NEG
15626: PUSH
15627: EMPTY
15628: LIST
15629: LIST
15630: PUSH
15631: LD_INT 2
15633: PUSH
15634: LD_INT 1
15636: NEG
15637: PUSH
15638: EMPTY
15639: LIST
15640: LIST
15641: PUSH
15642: LD_INT 3
15644: PUSH
15645: LD_INT 0
15647: PUSH
15648: EMPTY
15649: LIST
15650: LIST
15651: PUSH
15652: LD_INT 3
15654: PUSH
15655: LD_INT 1
15657: PUSH
15658: EMPTY
15659: LIST
15660: LIST
15661: PUSH
15662: LD_INT 3
15664: PUSH
15665: LD_INT 2
15667: PUSH
15668: EMPTY
15669: LIST
15670: LIST
15671: PUSH
15672: LD_INT 3
15674: PUSH
15675: LD_INT 3
15677: PUSH
15678: EMPTY
15679: LIST
15680: LIST
15681: PUSH
15682: LD_INT 2
15684: PUSH
15685: LD_INT 3
15687: PUSH
15688: EMPTY
15689: LIST
15690: LIST
15691: PUSH
15692: LD_INT 2
15694: NEG
15695: PUSH
15696: LD_INT 1
15698: PUSH
15699: EMPTY
15700: LIST
15701: LIST
15702: PUSH
15703: LD_INT 3
15705: NEG
15706: PUSH
15707: LD_INT 0
15709: PUSH
15710: EMPTY
15711: LIST
15712: LIST
15713: PUSH
15714: LD_INT 3
15716: NEG
15717: PUSH
15718: LD_INT 1
15720: NEG
15721: PUSH
15722: EMPTY
15723: LIST
15724: LIST
15725: PUSH
15726: LD_INT 3
15728: NEG
15729: PUSH
15730: LD_INT 2
15732: NEG
15733: PUSH
15734: EMPTY
15735: LIST
15736: LIST
15737: PUSH
15738: LD_INT 3
15740: NEG
15741: PUSH
15742: LD_INT 3
15744: NEG
15745: PUSH
15746: EMPTY
15747: LIST
15748: LIST
15749: PUSH
15750: EMPTY
15751: LIST
15752: LIST
15753: LIST
15754: LIST
15755: LIST
15756: LIST
15757: LIST
15758: LIST
15759: LIST
15760: LIST
15761: LIST
15762: LIST
15763: LIST
15764: LIST
15765: LIST
15766: LIST
15767: LIST
15768: LIST
15769: LIST
15770: LIST
15771: LIST
15772: LIST
15773: LIST
15774: LIST
15775: LIST
15776: LIST
15777: LIST
15778: LIST
15779: LIST
15780: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15781: LD_ADDR_VAR 0 42
15785: PUSH
15786: LD_INT 0
15788: PUSH
15789: LD_INT 0
15791: PUSH
15792: EMPTY
15793: LIST
15794: LIST
15795: PUSH
15796: LD_INT 0
15798: PUSH
15799: LD_INT 1
15801: NEG
15802: PUSH
15803: EMPTY
15804: LIST
15805: LIST
15806: PUSH
15807: LD_INT 1
15809: PUSH
15810: LD_INT 0
15812: PUSH
15813: EMPTY
15814: LIST
15815: LIST
15816: PUSH
15817: LD_INT 1
15819: PUSH
15820: LD_INT 1
15822: PUSH
15823: EMPTY
15824: LIST
15825: LIST
15826: PUSH
15827: LD_INT 0
15829: PUSH
15830: LD_INT 1
15832: PUSH
15833: EMPTY
15834: LIST
15835: LIST
15836: PUSH
15837: LD_INT 1
15839: NEG
15840: PUSH
15841: LD_INT 0
15843: PUSH
15844: EMPTY
15845: LIST
15846: LIST
15847: PUSH
15848: LD_INT 1
15850: NEG
15851: PUSH
15852: LD_INT 1
15854: NEG
15855: PUSH
15856: EMPTY
15857: LIST
15858: LIST
15859: PUSH
15860: LD_INT 1
15862: NEG
15863: PUSH
15864: LD_INT 2
15866: NEG
15867: PUSH
15868: EMPTY
15869: LIST
15870: LIST
15871: PUSH
15872: LD_INT 0
15874: PUSH
15875: LD_INT 2
15877: NEG
15878: PUSH
15879: EMPTY
15880: LIST
15881: LIST
15882: PUSH
15883: LD_INT 1
15885: PUSH
15886: LD_INT 1
15888: NEG
15889: PUSH
15890: EMPTY
15891: LIST
15892: LIST
15893: PUSH
15894: LD_INT 2
15896: PUSH
15897: LD_INT 1
15899: PUSH
15900: EMPTY
15901: LIST
15902: LIST
15903: PUSH
15904: LD_INT 2
15906: PUSH
15907: LD_INT 2
15909: PUSH
15910: EMPTY
15911: LIST
15912: LIST
15913: PUSH
15914: LD_INT 1
15916: PUSH
15917: LD_INT 2
15919: PUSH
15920: EMPTY
15921: LIST
15922: LIST
15923: PUSH
15924: LD_INT 0
15926: PUSH
15927: LD_INT 2
15929: PUSH
15930: EMPTY
15931: LIST
15932: LIST
15933: PUSH
15934: LD_INT 1
15936: NEG
15937: PUSH
15938: LD_INT 1
15940: PUSH
15941: EMPTY
15942: LIST
15943: LIST
15944: PUSH
15945: LD_INT 2
15947: NEG
15948: PUSH
15949: LD_INT 1
15951: NEG
15952: PUSH
15953: EMPTY
15954: LIST
15955: LIST
15956: PUSH
15957: LD_INT 2
15959: NEG
15960: PUSH
15961: LD_INT 2
15963: NEG
15964: PUSH
15965: EMPTY
15966: LIST
15967: LIST
15968: PUSH
15969: LD_INT 2
15971: NEG
15972: PUSH
15973: LD_INT 3
15975: NEG
15976: PUSH
15977: EMPTY
15978: LIST
15979: LIST
15980: PUSH
15981: LD_INT 1
15983: NEG
15984: PUSH
15985: LD_INT 3
15987: NEG
15988: PUSH
15989: EMPTY
15990: LIST
15991: LIST
15992: PUSH
15993: LD_INT 0
15995: PUSH
15996: LD_INT 3
15998: NEG
15999: PUSH
16000: EMPTY
16001: LIST
16002: LIST
16003: PUSH
16004: LD_INT 1
16006: PUSH
16007: LD_INT 2
16009: NEG
16010: PUSH
16011: EMPTY
16012: LIST
16013: LIST
16014: PUSH
16015: LD_INT 3
16017: PUSH
16018: LD_INT 2
16020: PUSH
16021: EMPTY
16022: LIST
16023: LIST
16024: PUSH
16025: LD_INT 3
16027: PUSH
16028: LD_INT 3
16030: PUSH
16031: EMPTY
16032: LIST
16033: LIST
16034: PUSH
16035: LD_INT 2
16037: PUSH
16038: LD_INT 3
16040: PUSH
16041: EMPTY
16042: LIST
16043: LIST
16044: PUSH
16045: LD_INT 1
16047: PUSH
16048: LD_INT 3
16050: PUSH
16051: EMPTY
16052: LIST
16053: LIST
16054: PUSH
16055: LD_INT 0
16057: PUSH
16058: LD_INT 3
16060: PUSH
16061: EMPTY
16062: LIST
16063: LIST
16064: PUSH
16065: LD_INT 1
16067: NEG
16068: PUSH
16069: LD_INT 2
16071: PUSH
16072: EMPTY
16073: LIST
16074: LIST
16075: PUSH
16076: LD_INT 3
16078: NEG
16079: PUSH
16080: LD_INT 2
16082: NEG
16083: PUSH
16084: EMPTY
16085: LIST
16086: LIST
16087: PUSH
16088: LD_INT 3
16090: NEG
16091: PUSH
16092: LD_INT 3
16094: NEG
16095: PUSH
16096: EMPTY
16097: LIST
16098: LIST
16099: PUSH
16100: EMPTY
16101: LIST
16102: LIST
16103: LIST
16104: LIST
16105: LIST
16106: LIST
16107: LIST
16108: LIST
16109: LIST
16110: LIST
16111: LIST
16112: LIST
16113: LIST
16114: LIST
16115: LIST
16116: LIST
16117: LIST
16118: LIST
16119: LIST
16120: LIST
16121: LIST
16122: LIST
16123: LIST
16124: LIST
16125: LIST
16126: LIST
16127: LIST
16128: LIST
16129: LIST
16130: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16131: LD_ADDR_VAR 0 43
16135: PUSH
16136: LD_INT 0
16138: PUSH
16139: LD_INT 0
16141: PUSH
16142: EMPTY
16143: LIST
16144: LIST
16145: PUSH
16146: LD_INT 0
16148: PUSH
16149: LD_INT 1
16151: NEG
16152: PUSH
16153: EMPTY
16154: LIST
16155: LIST
16156: PUSH
16157: LD_INT 1
16159: PUSH
16160: LD_INT 0
16162: PUSH
16163: EMPTY
16164: LIST
16165: LIST
16166: PUSH
16167: LD_INT 1
16169: PUSH
16170: LD_INT 1
16172: PUSH
16173: EMPTY
16174: LIST
16175: LIST
16176: PUSH
16177: LD_INT 0
16179: PUSH
16180: LD_INT 1
16182: PUSH
16183: EMPTY
16184: LIST
16185: LIST
16186: PUSH
16187: LD_INT 1
16189: NEG
16190: PUSH
16191: LD_INT 0
16193: PUSH
16194: EMPTY
16195: LIST
16196: LIST
16197: PUSH
16198: LD_INT 1
16200: NEG
16201: PUSH
16202: LD_INT 1
16204: NEG
16205: PUSH
16206: EMPTY
16207: LIST
16208: LIST
16209: PUSH
16210: LD_INT 1
16212: NEG
16213: PUSH
16214: LD_INT 2
16216: NEG
16217: PUSH
16218: EMPTY
16219: LIST
16220: LIST
16221: PUSH
16222: LD_INT 0
16224: PUSH
16225: LD_INT 2
16227: NEG
16228: PUSH
16229: EMPTY
16230: LIST
16231: LIST
16232: PUSH
16233: LD_INT 1
16235: PUSH
16236: LD_INT 1
16238: NEG
16239: PUSH
16240: EMPTY
16241: LIST
16242: LIST
16243: PUSH
16244: LD_INT 2
16246: PUSH
16247: LD_INT 0
16249: PUSH
16250: EMPTY
16251: LIST
16252: LIST
16253: PUSH
16254: LD_INT 2
16256: PUSH
16257: LD_INT 1
16259: PUSH
16260: EMPTY
16261: LIST
16262: LIST
16263: PUSH
16264: LD_INT 1
16266: PUSH
16267: LD_INT 2
16269: PUSH
16270: EMPTY
16271: LIST
16272: LIST
16273: PUSH
16274: LD_INT 0
16276: PUSH
16277: LD_INT 2
16279: PUSH
16280: EMPTY
16281: LIST
16282: LIST
16283: PUSH
16284: LD_INT 1
16286: NEG
16287: PUSH
16288: LD_INT 1
16290: PUSH
16291: EMPTY
16292: LIST
16293: LIST
16294: PUSH
16295: LD_INT 2
16297: NEG
16298: PUSH
16299: LD_INT 0
16301: PUSH
16302: EMPTY
16303: LIST
16304: LIST
16305: PUSH
16306: LD_INT 2
16308: NEG
16309: PUSH
16310: LD_INT 1
16312: NEG
16313: PUSH
16314: EMPTY
16315: LIST
16316: LIST
16317: PUSH
16318: LD_INT 1
16320: NEG
16321: PUSH
16322: LD_INT 3
16324: NEG
16325: PUSH
16326: EMPTY
16327: LIST
16328: LIST
16329: PUSH
16330: LD_INT 0
16332: PUSH
16333: LD_INT 3
16335: NEG
16336: PUSH
16337: EMPTY
16338: LIST
16339: LIST
16340: PUSH
16341: LD_INT 1
16343: PUSH
16344: LD_INT 2
16346: NEG
16347: PUSH
16348: EMPTY
16349: LIST
16350: LIST
16351: PUSH
16352: LD_INT 2
16354: PUSH
16355: LD_INT 1
16357: NEG
16358: PUSH
16359: EMPTY
16360: LIST
16361: LIST
16362: PUSH
16363: LD_INT 3
16365: PUSH
16366: LD_INT 0
16368: PUSH
16369: EMPTY
16370: LIST
16371: LIST
16372: PUSH
16373: LD_INT 3
16375: PUSH
16376: LD_INT 1
16378: PUSH
16379: EMPTY
16380: LIST
16381: LIST
16382: PUSH
16383: LD_INT 1
16385: PUSH
16386: LD_INT 3
16388: PUSH
16389: EMPTY
16390: LIST
16391: LIST
16392: PUSH
16393: LD_INT 0
16395: PUSH
16396: LD_INT 3
16398: PUSH
16399: EMPTY
16400: LIST
16401: LIST
16402: PUSH
16403: LD_INT 1
16405: NEG
16406: PUSH
16407: LD_INT 2
16409: PUSH
16410: EMPTY
16411: LIST
16412: LIST
16413: PUSH
16414: LD_INT 2
16416: NEG
16417: PUSH
16418: LD_INT 1
16420: PUSH
16421: EMPTY
16422: LIST
16423: LIST
16424: PUSH
16425: LD_INT 3
16427: NEG
16428: PUSH
16429: LD_INT 0
16431: PUSH
16432: EMPTY
16433: LIST
16434: LIST
16435: PUSH
16436: LD_INT 3
16438: NEG
16439: PUSH
16440: LD_INT 1
16442: NEG
16443: PUSH
16444: EMPTY
16445: LIST
16446: LIST
16447: PUSH
16448: EMPTY
16449: LIST
16450: LIST
16451: LIST
16452: LIST
16453: LIST
16454: LIST
16455: LIST
16456: LIST
16457: LIST
16458: LIST
16459: LIST
16460: LIST
16461: LIST
16462: LIST
16463: LIST
16464: LIST
16465: LIST
16466: LIST
16467: LIST
16468: LIST
16469: LIST
16470: LIST
16471: LIST
16472: LIST
16473: LIST
16474: LIST
16475: LIST
16476: LIST
16477: LIST
16478: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16479: LD_ADDR_VAR 0 44
16483: PUSH
16484: LD_INT 0
16486: PUSH
16487: LD_INT 0
16489: PUSH
16490: EMPTY
16491: LIST
16492: LIST
16493: PUSH
16494: LD_INT 0
16496: PUSH
16497: LD_INT 1
16499: NEG
16500: PUSH
16501: EMPTY
16502: LIST
16503: LIST
16504: PUSH
16505: LD_INT 1
16507: PUSH
16508: LD_INT 0
16510: PUSH
16511: EMPTY
16512: LIST
16513: LIST
16514: PUSH
16515: LD_INT 1
16517: PUSH
16518: LD_INT 1
16520: PUSH
16521: EMPTY
16522: LIST
16523: LIST
16524: PUSH
16525: LD_INT 0
16527: PUSH
16528: LD_INT 1
16530: PUSH
16531: EMPTY
16532: LIST
16533: LIST
16534: PUSH
16535: LD_INT 1
16537: NEG
16538: PUSH
16539: LD_INT 0
16541: PUSH
16542: EMPTY
16543: LIST
16544: LIST
16545: PUSH
16546: LD_INT 1
16548: NEG
16549: PUSH
16550: LD_INT 1
16552: NEG
16553: PUSH
16554: EMPTY
16555: LIST
16556: LIST
16557: PUSH
16558: LD_INT 1
16560: NEG
16561: PUSH
16562: LD_INT 2
16564: NEG
16565: PUSH
16566: EMPTY
16567: LIST
16568: LIST
16569: PUSH
16570: LD_INT 1
16572: PUSH
16573: LD_INT 1
16575: NEG
16576: PUSH
16577: EMPTY
16578: LIST
16579: LIST
16580: PUSH
16581: LD_INT 2
16583: PUSH
16584: LD_INT 0
16586: PUSH
16587: EMPTY
16588: LIST
16589: LIST
16590: PUSH
16591: LD_INT 2
16593: PUSH
16594: LD_INT 1
16596: PUSH
16597: EMPTY
16598: LIST
16599: LIST
16600: PUSH
16601: LD_INT 2
16603: PUSH
16604: LD_INT 2
16606: PUSH
16607: EMPTY
16608: LIST
16609: LIST
16610: PUSH
16611: LD_INT 1
16613: PUSH
16614: LD_INT 2
16616: PUSH
16617: EMPTY
16618: LIST
16619: LIST
16620: PUSH
16621: LD_INT 1
16623: NEG
16624: PUSH
16625: LD_INT 1
16627: PUSH
16628: EMPTY
16629: LIST
16630: LIST
16631: PUSH
16632: LD_INT 2
16634: NEG
16635: PUSH
16636: LD_INT 0
16638: PUSH
16639: EMPTY
16640: LIST
16641: LIST
16642: PUSH
16643: LD_INT 2
16645: NEG
16646: PUSH
16647: LD_INT 1
16649: NEG
16650: PUSH
16651: EMPTY
16652: LIST
16653: LIST
16654: PUSH
16655: LD_INT 2
16657: NEG
16658: PUSH
16659: LD_INT 2
16661: NEG
16662: PUSH
16663: EMPTY
16664: LIST
16665: LIST
16666: PUSH
16667: LD_INT 2
16669: NEG
16670: PUSH
16671: LD_INT 3
16673: NEG
16674: PUSH
16675: EMPTY
16676: LIST
16677: LIST
16678: PUSH
16679: LD_INT 2
16681: PUSH
16682: LD_INT 1
16684: NEG
16685: PUSH
16686: EMPTY
16687: LIST
16688: LIST
16689: PUSH
16690: LD_INT 3
16692: PUSH
16693: LD_INT 0
16695: PUSH
16696: EMPTY
16697: LIST
16698: LIST
16699: PUSH
16700: LD_INT 3
16702: PUSH
16703: LD_INT 1
16705: PUSH
16706: EMPTY
16707: LIST
16708: LIST
16709: PUSH
16710: LD_INT 3
16712: PUSH
16713: LD_INT 2
16715: PUSH
16716: EMPTY
16717: LIST
16718: LIST
16719: PUSH
16720: LD_INT 3
16722: PUSH
16723: LD_INT 3
16725: PUSH
16726: EMPTY
16727: LIST
16728: LIST
16729: PUSH
16730: LD_INT 2
16732: PUSH
16733: LD_INT 3
16735: PUSH
16736: EMPTY
16737: LIST
16738: LIST
16739: PUSH
16740: LD_INT 2
16742: NEG
16743: PUSH
16744: LD_INT 1
16746: PUSH
16747: EMPTY
16748: LIST
16749: LIST
16750: PUSH
16751: LD_INT 3
16753: NEG
16754: PUSH
16755: LD_INT 0
16757: PUSH
16758: EMPTY
16759: LIST
16760: LIST
16761: PUSH
16762: LD_INT 3
16764: NEG
16765: PUSH
16766: LD_INT 1
16768: NEG
16769: PUSH
16770: EMPTY
16771: LIST
16772: LIST
16773: PUSH
16774: LD_INT 3
16776: NEG
16777: PUSH
16778: LD_INT 2
16780: NEG
16781: PUSH
16782: EMPTY
16783: LIST
16784: LIST
16785: PUSH
16786: LD_INT 3
16788: NEG
16789: PUSH
16790: LD_INT 3
16792: NEG
16793: PUSH
16794: EMPTY
16795: LIST
16796: LIST
16797: PUSH
16798: EMPTY
16799: LIST
16800: LIST
16801: LIST
16802: LIST
16803: LIST
16804: LIST
16805: LIST
16806: LIST
16807: LIST
16808: LIST
16809: LIST
16810: LIST
16811: LIST
16812: LIST
16813: LIST
16814: LIST
16815: LIST
16816: LIST
16817: LIST
16818: LIST
16819: LIST
16820: LIST
16821: LIST
16822: LIST
16823: LIST
16824: LIST
16825: LIST
16826: LIST
16827: LIST
16828: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16829: LD_ADDR_VAR 0 45
16833: PUSH
16834: LD_INT 0
16836: PUSH
16837: LD_INT 0
16839: PUSH
16840: EMPTY
16841: LIST
16842: LIST
16843: PUSH
16844: LD_INT 0
16846: PUSH
16847: LD_INT 1
16849: NEG
16850: PUSH
16851: EMPTY
16852: LIST
16853: LIST
16854: PUSH
16855: LD_INT 1
16857: PUSH
16858: LD_INT 0
16860: PUSH
16861: EMPTY
16862: LIST
16863: LIST
16864: PUSH
16865: LD_INT 1
16867: PUSH
16868: LD_INT 1
16870: PUSH
16871: EMPTY
16872: LIST
16873: LIST
16874: PUSH
16875: LD_INT 0
16877: PUSH
16878: LD_INT 1
16880: PUSH
16881: EMPTY
16882: LIST
16883: LIST
16884: PUSH
16885: LD_INT 1
16887: NEG
16888: PUSH
16889: LD_INT 0
16891: PUSH
16892: EMPTY
16893: LIST
16894: LIST
16895: PUSH
16896: LD_INT 1
16898: NEG
16899: PUSH
16900: LD_INT 1
16902: NEG
16903: PUSH
16904: EMPTY
16905: LIST
16906: LIST
16907: PUSH
16908: LD_INT 1
16910: NEG
16911: PUSH
16912: LD_INT 2
16914: NEG
16915: PUSH
16916: EMPTY
16917: LIST
16918: LIST
16919: PUSH
16920: LD_INT 0
16922: PUSH
16923: LD_INT 2
16925: NEG
16926: PUSH
16927: EMPTY
16928: LIST
16929: LIST
16930: PUSH
16931: LD_INT 1
16933: PUSH
16934: LD_INT 1
16936: NEG
16937: PUSH
16938: EMPTY
16939: LIST
16940: LIST
16941: PUSH
16942: LD_INT 2
16944: PUSH
16945: LD_INT 1
16947: PUSH
16948: EMPTY
16949: LIST
16950: LIST
16951: PUSH
16952: LD_INT 2
16954: PUSH
16955: LD_INT 2
16957: PUSH
16958: EMPTY
16959: LIST
16960: LIST
16961: PUSH
16962: LD_INT 1
16964: PUSH
16965: LD_INT 2
16967: PUSH
16968: EMPTY
16969: LIST
16970: LIST
16971: PUSH
16972: LD_INT 0
16974: PUSH
16975: LD_INT 2
16977: PUSH
16978: EMPTY
16979: LIST
16980: LIST
16981: PUSH
16982: LD_INT 1
16984: NEG
16985: PUSH
16986: LD_INT 1
16988: PUSH
16989: EMPTY
16990: LIST
16991: LIST
16992: PUSH
16993: LD_INT 2
16995: NEG
16996: PUSH
16997: LD_INT 1
16999: NEG
17000: PUSH
17001: EMPTY
17002: LIST
17003: LIST
17004: PUSH
17005: LD_INT 2
17007: NEG
17008: PUSH
17009: LD_INT 2
17011: NEG
17012: PUSH
17013: EMPTY
17014: LIST
17015: LIST
17016: PUSH
17017: LD_INT 2
17019: NEG
17020: PUSH
17021: LD_INT 3
17023: NEG
17024: PUSH
17025: EMPTY
17026: LIST
17027: LIST
17028: PUSH
17029: LD_INT 1
17031: NEG
17032: PUSH
17033: LD_INT 3
17035: NEG
17036: PUSH
17037: EMPTY
17038: LIST
17039: LIST
17040: PUSH
17041: LD_INT 0
17043: PUSH
17044: LD_INT 3
17046: NEG
17047: PUSH
17048: EMPTY
17049: LIST
17050: LIST
17051: PUSH
17052: LD_INT 1
17054: PUSH
17055: LD_INT 2
17057: NEG
17058: PUSH
17059: EMPTY
17060: LIST
17061: LIST
17062: PUSH
17063: LD_INT 3
17065: PUSH
17066: LD_INT 2
17068: PUSH
17069: EMPTY
17070: LIST
17071: LIST
17072: PUSH
17073: LD_INT 3
17075: PUSH
17076: LD_INT 3
17078: PUSH
17079: EMPTY
17080: LIST
17081: LIST
17082: PUSH
17083: LD_INT 2
17085: PUSH
17086: LD_INT 3
17088: PUSH
17089: EMPTY
17090: LIST
17091: LIST
17092: PUSH
17093: LD_INT 1
17095: PUSH
17096: LD_INT 3
17098: PUSH
17099: EMPTY
17100: LIST
17101: LIST
17102: PUSH
17103: LD_INT 0
17105: PUSH
17106: LD_INT 3
17108: PUSH
17109: EMPTY
17110: LIST
17111: LIST
17112: PUSH
17113: LD_INT 1
17115: NEG
17116: PUSH
17117: LD_INT 2
17119: PUSH
17120: EMPTY
17121: LIST
17122: LIST
17123: PUSH
17124: LD_INT 3
17126: NEG
17127: PUSH
17128: LD_INT 2
17130: NEG
17131: PUSH
17132: EMPTY
17133: LIST
17134: LIST
17135: PUSH
17136: LD_INT 3
17138: NEG
17139: PUSH
17140: LD_INT 3
17142: NEG
17143: PUSH
17144: EMPTY
17145: LIST
17146: LIST
17147: PUSH
17148: EMPTY
17149: LIST
17150: LIST
17151: LIST
17152: LIST
17153: LIST
17154: LIST
17155: LIST
17156: LIST
17157: LIST
17158: LIST
17159: LIST
17160: LIST
17161: LIST
17162: LIST
17163: LIST
17164: LIST
17165: LIST
17166: LIST
17167: LIST
17168: LIST
17169: LIST
17170: LIST
17171: LIST
17172: LIST
17173: LIST
17174: LIST
17175: LIST
17176: LIST
17177: LIST
17178: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17179: LD_ADDR_VAR 0 46
17183: PUSH
17184: LD_INT 0
17186: PUSH
17187: LD_INT 0
17189: PUSH
17190: EMPTY
17191: LIST
17192: LIST
17193: PUSH
17194: LD_INT 0
17196: PUSH
17197: LD_INT 1
17199: NEG
17200: PUSH
17201: EMPTY
17202: LIST
17203: LIST
17204: PUSH
17205: LD_INT 1
17207: PUSH
17208: LD_INT 0
17210: PUSH
17211: EMPTY
17212: LIST
17213: LIST
17214: PUSH
17215: LD_INT 1
17217: PUSH
17218: LD_INT 1
17220: PUSH
17221: EMPTY
17222: LIST
17223: LIST
17224: PUSH
17225: LD_INT 0
17227: PUSH
17228: LD_INT 1
17230: PUSH
17231: EMPTY
17232: LIST
17233: LIST
17234: PUSH
17235: LD_INT 1
17237: NEG
17238: PUSH
17239: LD_INT 0
17241: PUSH
17242: EMPTY
17243: LIST
17244: LIST
17245: PUSH
17246: LD_INT 1
17248: NEG
17249: PUSH
17250: LD_INT 1
17252: NEG
17253: PUSH
17254: EMPTY
17255: LIST
17256: LIST
17257: PUSH
17258: LD_INT 1
17260: NEG
17261: PUSH
17262: LD_INT 2
17264: NEG
17265: PUSH
17266: EMPTY
17267: LIST
17268: LIST
17269: PUSH
17270: LD_INT 0
17272: PUSH
17273: LD_INT 2
17275: NEG
17276: PUSH
17277: EMPTY
17278: LIST
17279: LIST
17280: PUSH
17281: LD_INT 1
17283: PUSH
17284: LD_INT 1
17286: NEG
17287: PUSH
17288: EMPTY
17289: LIST
17290: LIST
17291: PUSH
17292: LD_INT 2
17294: PUSH
17295: LD_INT 0
17297: PUSH
17298: EMPTY
17299: LIST
17300: LIST
17301: PUSH
17302: LD_INT 2
17304: PUSH
17305: LD_INT 1
17307: PUSH
17308: EMPTY
17309: LIST
17310: LIST
17311: PUSH
17312: LD_INT 1
17314: PUSH
17315: LD_INT 2
17317: PUSH
17318: EMPTY
17319: LIST
17320: LIST
17321: PUSH
17322: LD_INT 0
17324: PUSH
17325: LD_INT 2
17327: PUSH
17328: EMPTY
17329: LIST
17330: LIST
17331: PUSH
17332: LD_INT 1
17334: NEG
17335: PUSH
17336: LD_INT 1
17338: PUSH
17339: EMPTY
17340: LIST
17341: LIST
17342: PUSH
17343: LD_INT 2
17345: NEG
17346: PUSH
17347: LD_INT 0
17349: PUSH
17350: EMPTY
17351: LIST
17352: LIST
17353: PUSH
17354: LD_INT 2
17356: NEG
17357: PUSH
17358: LD_INT 1
17360: NEG
17361: PUSH
17362: EMPTY
17363: LIST
17364: LIST
17365: PUSH
17366: LD_INT 1
17368: NEG
17369: PUSH
17370: LD_INT 3
17372: NEG
17373: PUSH
17374: EMPTY
17375: LIST
17376: LIST
17377: PUSH
17378: LD_INT 0
17380: PUSH
17381: LD_INT 3
17383: NEG
17384: PUSH
17385: EMPTY
17386: LIST
17387: LIST
17388: PUSH
17389: LD_INT 1
17391: PUSH
17392: LD_INT 2
17394: NEG
17395: PUSH
17396: EMPTY
17397: LIST
17398: LIST
17399: PUSH
17400: LD_INT 2
17402: PUSH
17403: LD_INT 1
17405: NEG
17406: PUSH
17407: EMPTY
17408: LIST
17409: LIST
17410: PUSH
17411: LD_INT 3
17413: PUSH
17414: LD_INT 0
17416: PUSH
17417: EMPTY
17418: LIST
17419: LIST
17420: PUSH
17421: LD_INT 3
17423: PUSH
17424: LD_INT 1
17426: PUSH
17427: EMPTY
17428: LIST
17429: LIST
17430: PUSH
17431: LD_INT 1
17433: PUSH
17434: LD_INT 3
17436: PUSH
17437: EMPTY
17438: LIST
17439: LIST
17440: PUSH
17441: LD_INT 0
17443: PUSH
17444: LD_INT 3
17446: PUSH
17447: EMPTY
17448: LIST
17449: LIST
17450: PUSH
17451: LD_INT 1
17453: NEG
17454: PUSH
17455: LD_INT 2
17457: PUSH
17458: EMPTY
17459: LIST
17460: LIST
17461: PUSH
17462: LD_INT 2
17464: NEG
17465: PUSH
17466: LD_INT 1
17468: PUSH
17469: EMPTY
17470: LIST
17471: LIST
17472: PUSH
17473: LD_INT 3
17475: NEG
17476: PUSH
17477: LD_INT 0
17479: PUSH
17480: EMPTY
17481: LIST
17482: LIST
17483: PUSH
17484: LD_INT 3
17486: NEG
17487: PUSH
17488: LD_INT 1
17490: NEG
17491: PUSH
17492: EMPTY
17493: LIST
17494: LIST
17495: PUSH
17496: EMPTY
17497: LIST
17498: LIST
17499: LIST
17500: LIST
17501: LIST
17502: LIST
17503: LIST
17504: LIST
17505: LIST
17506: LIST
17507: LIST
17508: LIST
17509: LIST
17510: LIST
17511: LIST
17512: LIST
17513: LIST
17514: LIST
17515: LIST
17516: LIST
17517: LIST
17518: LIST
17519: LIST
17520: LIST
17521: LIST
17522: LIST
17523: LIST
17524: LIST
17525: LIST
17526: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17527: LD_ADDR_VAR 0 47
17531: PUSH
17532: LD_INT 0
17534: PUSH
17535: LD_INT 0
17537: PUSH
17538: EMPTY
17539: LIST
17540: LIST
17541: PUSH
17542: LD_INT 0
17544: PUSH
17545: LD_INT 1
17547: NEG
17548: PUSH
17549: EMPTY
17550: LIST
17551: LIST
17552: PUSH
17553: LD_INT 1
17555: PUSH
17556: LD_INT 0
17558: PUSH
17559: EMPTY
17560: LIST
17561: LIST
17562: PUSH
17563: LD_INT 1
17565: PUSH
17566: LD_INT 1
17568: PUSH
17569: EMPTY
17570: LIST
17571: LIST
17572: PUSH
17573: LD_INT 0
17575: PUSH
17576: LD_INT 1
17578: PUSH
17579: EMPTY
17580: LIST
17581: LIST
17582: PUSH
17583: LD_INT 1
17585: NEG
17586: PUSH
17587: LD_INT 0
17589: PUSH
17590: EMPTY
17591: LIST
17592: LIST
17593: PUSH
17594: LD_INT 1
17596: NEG
17597: PUSH
17598: LD_INT 1
17600: NEG
17601: PUSH
17602: EMPTY
17603: LIST
17604: LIST
17605: PUSH
17606: LD_INT 1
17608: NEG
17609: PUSH
17610: LD_INT 2
17612: NEG
17613: PUSH
17614: EMPTY
17615: LIST
17616: LIST
17617: PUSH
17618: LD_INT 0
17620: PUSH
17621: LD_INT 2
17623: NEG
17624: PUSH
17625: EMPTY
17626: LIST
17627: LIST
17628: PUSH
17629: LD_INT 1
17631: PUSH
17632: LD_INT 1
17634: NEG
17635: PUSH
17636: EMPTY
17637: LIST
17638: LIST
17639: PUSH
17640: LD_INT 2
17642: NEG
17643: PUSH
17644: LD_INT 1
17646: NEG
17647: PUSH
17648: EMPTY
17649: LIST
17650: LIST
17651: PUSH
17652: LD_INT 2
17654: NEG
17655: PUSH
17656: LD_INT 2
17658: NEG
17659: PUSH
17660: EMPTY
17661: LIST
17662: LIST
17663: PUSH
17664: EMPTY
17665: LIST
17666: LIST
17667: LIST
17668: LIST
17669: LIST
17670: LIST
17671: LIST
17672: LIST
17673: LIST
17674: LIST
17675: LIST
17676: LIST
17677: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17678: LD_ADDR_VAR 0 48
17682: PUSH
17683: LD_INT 0
17685: PUSH
17686: LD_INT 0
17688: PUSH
17689: EMPTY
17690: LIST
17691: LIST
17692: PUSH
17693: LD_INT 0
17695: PUSH
17696: LD_INT 1
17698: NEG
17699: PUSH
17700: EMPTY
17701: LIST
17702: LIST
17703: PUSH
17704: LD_INT 1
17706: PUSH
17707: LD_INT 0
17709: PUSH
17710: EMPTY
17711: LIST
17712: LIST
17713: PUSH
17714: LD_INT 1
17716: PUSH
17717: LD_INT 1
17719: PUSH
17720: EMPTY
17721: LIST
17722: LIST
17723: PUSH
17724: LD_INT 0
17726: PUSH
17727: LD_INT 1
17729: PUSH
17730: EMPTY
17731: LIST
17732: LIST
17733: PUSH
17734: LD_INT 1
17736: NEG
17737: PUSH
17738: LD_INT 0
17740: PUSH
17741: EMPTY
17742: LIST
17743: LIST
17744: PUSH
17745: LD_INT 1
17747: NEG
17748: PUSH
17749: LD_INT 1
17751: NEG
17752: PUSH
17753: EMPTY
17754: LIST
17755: LIST
17756: PUSH
17757: LD_INT 1
17759: NEG
17760: PUSH
17761: LD_INT 2
17763: NEG
17764: PUSH
17765: EMPTY
17766: LIST
17767: LIST
17768: PUSH
17769: LD_INT 0
17771: PUSH
17772: LD_INT 2
17774: NEG
17775: PUSH
17776: EMPTY
17777: LIST
17778: LIST
17779: PUSH
17780: LD_INT 1
17782: PUSH
17783: LD_INT 1
17785: NEG
17786: PUSH
17787: EMPTY
17788: LIST
17789: LIST
17790: PUSH
17791: LD_INT 2
17793: PUSH
17794: LD_INT 0
17796: PUSH
17797: EMPTY
17798: LIST
17799: LIST
17800: PUSH
17801: LD_INT 2
17803: PUSH
17804: LD_INT 1
17806: PUSH
17807: EMPTY
17808: LIST
17809: LIST
17810: PUSH
17811: EMPTY
17812: LIST
17813: LIST
17814: LIST
17815: LIST
17816: LIST
17817: LIST
17818: LIST
17819: LIST
17820: LIST
17821: LIST
17822: LIST
17823: LIST
17824: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17825: LD_ADDR_VAR 0 49
17829: PUSH
17830: LD_INT 0
17832: PUSH
17833: LD_INT 0
17835: PUSH
17836: EMPTY
17837: LIST
17838: LIST
17839: PUSH
17840: LD_INT 0
17842: PUSH
17843: LD_INT 1
17845: NEG
17846: PUSH
17847: EMPTY
17848: LIST
17849: LIST
17850: PUSH
17851: LD_INT 1
17853: PUSH
17854: LD_INT 0
17856: PUSH
17857: EMPTY
17858: LIST
17859: LIST
17860: PUSH
17861: LD_INT 1
17863: PUSH
17864: LD_INT 1
17866: PUSH
17867: EMPTY
17868: LIST
17869: LIST
17870: PUSH
17871: LD_INT 0
17873: PUSH
17874: LD_INT 1
17876: PUSH
17877: EMPTY
17878: LIST
17879: LIST
17880: PUSH
17881: LD_INT 1
17883: NEG
17884: PUSH
17885: LD_INT 0
17887: PUSH
17888: EMPTY
17889: LIST
17890: LIST
17891: PUSH
17892: LD_INT 1
17894: NEG
17895: PUSH
17896: LD_INT 1
17898: NEG
17899: PUSH
17900: EMPTY
17901: LIST
17902: LIST
17903: PUSH
17904: LD_INT 1
17906: PUSH
17907: LD_INT 1
17909: NEG
17910: PUSH
17911: EMPTY
17912: LIST
17913: LIST
17914: PUSH
17915: LD_INT 2
17917: PUSH
17918: LD_INT 0
17920: PUSH
17921: EMPTY
17922: LIST
17923: LIST
17924: PUSH
17925: LD_INT 2
17927: PUSH
17928: LD_INT 1
17930: PUSH
17931: EMPTY
17932: LIST
17933: LIST
17934: PUSH
17935: LD_INT 2
17937: PUSH
17938: LD_INT 2
17940: PUSH
17941: EMPTY
17942: LIST
17943: LIST
17944: PUSH
17945: LD_INT 1
17947: PUSH
17948: LD_INT 2
17950: PUSH
17951: EMPTY
17952: LIST
17953: LIST
17954: PUSH
17955: EMPTY
17956: LIST
17957: LIST
17958: LIST
17959: LIST
17960: LIST
17961: LIST
17962: LIST
17963: LIST
17964: LIST
17965: LIST
17966: LIST
17967: LIST
17968: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
17969: LD_ADDR_VAR 0 50
17973: PUSH
17974: LD_INT 0
17976: PUSH
17977: LD_INT 0
17979: PUSH
17980: EMPTY
17981: LIST
17982: LIST
17983: PUSH
17984: LD_INT 0
17986: PUSH
17987: LD_INT 1
17989: NEG
17990: PUSH
17991: EMPTY
17992: LIST
17993: LIST
17994: PUSH
17995: LD_INT 1
17997: PUSH
17998: LD_INT 0
18000: PUSH
18001: EMPTY
18002: LIST
18003: LIST
18004: PUSH
18005: LD_INT 1
18007: PUSH
18008: LD_INT 1
18010: PUSH
18011: EMPTY
18012: LIST
18013: LIST
18014: PUSH
18015: LD_INT 0
18017: PUSH
18018: LD_INT 1
18020: PUSH
18021: EMPTY
18022: LIST
18023: LIST
18024: PUSH
18025: LD_INT 1
18027: NEG
18028: PUSH
18029: LD_INT 0
18031: PUSH
18032: EMPTY
18033: LIST
18034: LIST
18035: PUSH
18036: LD_INT 1
18038: NEG
18039: PUSH
18040: LD_INT 1
18042: NEG
18043: PUSH
18044: EMPTY
18045: LIST
18046: LIST
18047: PUSH
18048: LD_INT 2
18050: PUSH
18051: LD_INT 1
18053: PUSH
18054: EMPTY
18055: LIST
18056: LIST
18057: PUSH
18058: LD_INT 2
18060: PUSH
18061: LD_INT 2
18063: PUSH
18064: EMPTY
18065: LIST
18066: LIST
18067: PUSH
18068: LD_INT 1
18070: PUSH
18071: LD_INT 2
18073: PUSH
18074: EMPTY
18075: LIST
18076: LIST
18077: PUSH
18078: LD_INT 0
18080: PUSH
18081: LD_INT 2
18083: PUSH
18084: EMPTY
18085: LIST
18086: LIST
18087: PUSH
18088: LD_INT 1
18090: NEG
18091: PUSH
18092: LD_INT 1
18094: PUSH
18095: EMPTY
18096: LIST
18097: LIST
18098: PUSH
18099: EMPTY
18100: LIST
18101: LIST
18102: LIST
18103: LIST
18104: LIST
18105: LIST
18106: LIST
18107: LIST
18108: LIST
18109: LIST
18110: LIST
18111: LIST
18112: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18113: LD_ADDR_VAR 0 51
18117: PUSH
18118: LD_INT 0
18120: PUSH
18121: LD_INT 0
18123: PUSH
18124: EMPTY
18125: LIST
18126: LIST
18127: PUSH
18128: LD_INT 0
18130: PUSH
18131: LD_INT 1
18133: NEG
18134: PUSH
18135: EMPTY
18136: LIST
18137: LIST
18138: PUSH
18139: LD_INT 1
18141: PUSH
18142: LD_INT 0
18144: PUSH
18145: EMPTY
18146: LIST
18147: LIST
18148: PUSH
18149: LD_INT 1
18151: PUSH
18152: LD_INT 1
18154: PUSH
18155: EMPTY
18156: LIST
18157: LIST
18158: PUSH
18159: LD_INT 0
18161: PUSH
18162: LD_INT 1
18164: PUSH
18165: EMPTY
18166: LIST
18167: LIST
18168: PUSH
18169: LD_INT 1
18171: NEG
18172: PUSH
18173: LD_INT 0
18175: PUSH
18176: EMPTY
18177: LIST
18178: LIST
18179: PUSH
18180: LD_INT 1
18182: NEG
18183: PUSH
18184: LD_INT 1
18186: NEG
18187: PUSH
18188: EMPTY
18189: LIST
18190: LIST
18191: PUSH
18192: LD_INT 1
18194: PUSH
18195: LD_INT 2
18197: PUSH
18198: EMPTY
18199: LIST
18200: LIST
18201: PUSH
18202: LD_INT 0
18204: PUSH
18205: LD_INT 2
18207: PUSH
18208: EMPTY
18209: LIST
18210: LIST
18211: PUSH
18212: LD_INT 1
18214: NEG
18215: PUSH
18216: LD_INT 1
18218: PUSH
18219: EMPTY
18220: LIST
18221: LIST
18222: PUSH
18223: LD_INT 2
18225: NEG
18226: PUSH
18227: LD_INT 0
18229: PUSH
18230: EMPTY
18231: LIST
18232: LIST
18233: PUSH
18234: LD_INT 2
18236: NEG
18237: PUSH
18238: LD_INT 1
18240: NEG
18241: PUSH
18242: EMPTY
18243: LIST
18244: LIST
18245: PUSH
18246: EMPTY
18247: LIST
18248: LIST
18249: LIST
18250: LIST
18251: LIST
18252: LIST
18253: LIST
18254: LIST
18255: LIST
18256: LIST
18257: LIST
18258: LIST
18259: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18260: LD_ADDR_VAR 0 52
18264: PUSH
18265: LD_INT 0
18267: PUSH
18268: LD_INT 0
18270: PUSH
18271: EMPTY
18272: LIST
18273: LIST
18274: PUSH
18275: LD_INT 0
18277: PUSH
18278: LD_INT 1
18280: NEG
18281: PUSH
18282: EMPTY
18283: LIST
18284: LIST
18285: PUSH
18286: LD_INT 1
18288: PUSH
18289: LD_INT 0
18291: PUSH
18292: EMPTY
18293: LIST
18294: LIST
18295: PUSH
18296: LD_INT 1
18298: PUSH
18299: LD_INT 1
18301: PUSH
18302: EMPTY
18303: LIST
18304: LIST
18305: PUSH
18306: LD_INT 0
18308: PUSH
18309: LD_INT 1
18311: PUSH
18312: EMPTY
18313: LIST
18314: LIST
18315: PUSH
18316: LD_INT 1
18318: NEG
18319: PUSH
18320: LD_INT 0
18322: PUSH
18323: EMPTY
18324: LIST
18325: LIST
18326: PUSH
18327: LD_INT 1
18329: NEG
18330: PUSH
18331: LD_INT 1
18333: NEG
18334: PUSH
18335: EMPTY
18336: LIST
18337: LIST
18338: PUSH
18339: LD_INT 1
18341: NEG
18342: PUSH
18343: LD_INT 2
18345: NEG
18346: PUSH
18347: EMPTY
18348: LIST
18349: LIST
18350: PUSH
18351: LD_INT 1
18353: NEG
18354: PUSH
18355: LD_INT 1
18357: PUSH
18358: EMPTY
18359: LIST
18360: LIST
18361: PUSH
18362: LD_INT 2
18364: NEG
18365: PUSH
18366: LD_INT 0
18368: PUSH
18369: EMPTY
18370: LIST
18371: LIST
18372: PUSH
18373: LD_INT 2
18375: NEG
18376: PUSH
18377: LD_INT 1
18379: NEG
18380: PUSH
18381: EMPTY
18382: LIST
18383: LIST
18384: PUSH
18385: LD_INT 2
18387: NEG
18388: PUSH
18389: LD_INT 2
18391: NEG
18392: PUSH
18393: EMPTY
18394: LIST
18395: LIST
18396: PUSH
18397: EMPTY
18398: LIST
18399: LIST
18400: LIST
18401: LIST
18402: LIST
18403: LIST
18404: LIST
18405: LIST
18406: LIST
18407: LIST
18408: LIST
18409: LIST
18410: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18411: LD_ADDR_VAR 0 53
18415: PUSH
18416: LD_INT 0
18418: PUSH
18419: LD_INT 0
18421: PUSH
18422: EMPTY
18423: LIST
18424: LIST
18425: PUSH
18426: LD_INT 0
18428: PUSH
18429: LD_INT 1
18431: NEG
18432: PUSH
18433: EMPTY
18434: LIST
18435: LIST
18436: PUSH
18437: LD_INT 1
18439: PUSH
18440: LD_INT 0
18442: PUSH
18443: EMPTY
18444: LIST
18445: LIST
18446: PUSH
18447: LD_INT 1
18449: PUSH
18450: LD_INT 1
18452: PUSH
18453: EMPTY
18454: LIST
18455: LIST
18456: PUSH
18457: LD_INT 0
18459: PUSH
18460: LD_INT 1
18462: PUSH
18463: EMPTY
18464: LIST
18465: LIST
18466: PUSH
18467: LD_INT 1
18469: NEG
18470: PUSH
18471: LD_INT 0
18473: PUSH
18474: EMPTY
18475: LIST
18476: LIST
18477: PUSH
18478: LD_INT 1
18480: NEG
18481: PUSH
18482: LD_INT 1
18484: NEG
18485: PUSH
18486: EMPTY
18487: LIST
18488: LIST
18489: PUSH
18490: LD_INT 1
18492: NEG
18493: PUSH
18494: LD_INT 2
18496: NEG
18497: PUSH
18498: EMPTY
18499: LIST
18500: LIST
18501: PUSH
18502: LD_INT 0
18504: PUSH
18505: LD_INT 2
18507: NEG
18508: PUSH
18509: EMPTY
18510: LIST
18511: LIST
18512: PUSH
18513: LD_INT 1
18515: PUSH
18516: LD_INT 1
18518: NEG
18519: PUSH
18520: EMPTY
18521: LIST
18522: LIST
18523: PUSH
18524: LD_INT 2
18526: PUSH
18527: LD_INT 0
18529: PUSH
18530: EMPTY
18531: LIST
18532: LIST
18533: PUSH
18534: LD_INT 2
18536: PUSH
18537: LD_INT 1
18539: PUSH
18540: EMPTY
18541: LIST
18542: LIST
18543: PUSH
18544: LD_INT 2
18546: PUSH
18547: LD_INT 2
18549: PUSH
18550: EMPTY
18551: LIST
18552: LIST
18553: PUSH
18554: LD_INT 1
18556: PUSH
18557: LD_INT 2
18559: PUSH
18560: EMPTY
18561: LIST
18562: LIST
18563: PUSH
18564: LD_INT 0
18566: PUSH
18567: LD_INT 2
18569: PUSH
18570: EMPTY
18571: LIST
18572: LIST
18573: PUSH
18574: LD_INT 1
18576: NEG
18577: PUSH
18578: LD_INT 1
18580: PUSH
18581: EMPTY
18582: LIST
18583: LIST
18584: PUSH
18585: LD_INT 2
18587: NEG
18588: PUSH
18589: LD_INT 0
18591: PUSH
18592: EMPTY
18593: LIST
18594: LIST
18595: PUSH
18596: LD_INT 2
18598: NEG
18599: PUSH
18600: LD_INT 1
18602: NEG
18603: PUSH
18604: EMPTY
18605: LIST
18606: LIST
18607: PUSH
18608: LD_INT 2
18610: NEG
18611: PUSH
18612: LD_INT 2
18614: NEG
18615: PUSH
18616: EMPTY
18617: LIST
18618: LIST
18619: PUSH
18620: EMPTY
18621: LIST
18622: LIST
18623: LIST
18624: LIST
18625: LIST
18626: LIST
18627: LIST
18628: LIST
18629: LIST
18630: LIST
18631: LIST
18632: LIST
18633: LIST
18634: LIST
18635: LIST
18636: LIST
18637: LIST
18638: LIST
18639: LIST
18640: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18641: LD_ADDR_VAR 0 54
18645: PUSH
18646: LD_INT 0
18648: PUSH
18649: LD_INT 0
18651: PUSH
18652: EMPTY
18653: LIST
18654: LIST
18655: PUSH
18656: LD_INT 0
18658: PUSH
18659: LD_INT 1
18661: NEG
18662: PUSH
18663: EMPTY
18664: LIST
18665: LIST
18666: PUSH
18667: LD_INT 1
18669: PUSH
18670: LD_INT 0
18672: PUSH
18673: EMPTY
18674: LIST
18675: LIST
18676: PUSH
18677: LD_INT 1
18679: PUSH
18680: LD_INT 1
18682: PUSH
18683: EMPTY
18684: LIST
18685: LIST
18686: PUSH
18687: LD_INT 0
18689: PUSH
18690: LD_INT 1
18692: PUSH
18693: EMPTY
18694: LIST
18695: LIST
18696: PUSH
18697: LD_INT 1
18699: NEG
18700: PUSH
18701: LD_INT 0
18703: PUSH
18704: EMPTY
18705: LIST
18706: LIST
18707: PUSH
18708: LD_INT 1
18710: NEG
18711: PUSH
18712: LD_INT 1
18714: NEG
18715: PUSH
18716: EMPTY
18717: LIST
18718: LIST
18719: PUSH
18720: LD_INT 1
18722: NEG
18723: PUSH
18724: LD_INT 2
18726: NEG
18727: PUSH
18728: EMPTY
18729: LIST
18730: LIST
18731: PUSH
18732: LD_INT 0
18734: PUSH
18735: LD_INT 2
18737: NEG
18738: PUSH
18739: EMPTY
18740: LIST
18741: LIST
18742: PUSH
18743: LD_INT 1
18745: PUSH
18746: LD_INT 1
18748: NEG
18749: PUSH
18750: EMPTY
18751: LIST
18752: LIST
18753: PUSH
18754: LD_INT 2
18756: PUSH
18757: LD_INT 0
18759: PUSH
18760: EMPTY
18761: LIST
18762: LIST
18763: PUSH
18764: LD_INT 2
18766: PUSH
18767: LD_INT 1
18769: PUSH
18770: EMPTY
18771: LIST
18772: LIST
18773: PUSH
18774: LD_INT 2
18776: PUSH
18777: LD_INT 2
18779: PUSH
18780: EMPTY
18781: LIST
18782: LIST
18783: PUSH
18784: LD_INT 1
18786: PUSH
18787: LD_INT 2
18789: PUSH
18790: EMPTY
18791: LIST
18792: LIST
18793: PUSH
18794: LD_INT 0
18796: PUSH
18797: LD_INT 2
18799: PUSH
18800: EMPTY
18801: LIST
18802: LIST
18803: PUSH
18804: LD_INT 1
18806: NEG
18807: PUSH
18808: LD_INT 1
18810: PUSH
18811: EMPTY
18812: LIST
18813: LIST
18814: PUSH
18815: LD_INT 2
18817: NEG
18818: PUSH
18819: LD_INT 0
18821: PUSH
18822: EMPTY
18823: LIST
18824: LIST
18825: PUSH
18826: LD_INT 2
18828: NEG
18829: PUSH
18830: LD_INT 1
18832: NEG
18833: PUSH
18834: EMPTY
18835: LIST
18836: LIST
18837: PUSH
18838: LD_INT 2
18840: NEG
18841: PUSH
18842: LD_INT 2
18844: NEG
18845: PUSH
18846: EMPTY
18847: LIST
18848: LIST
18849: PUSH
18850: EMPTY
18851: LIST
18852: LIST
18853: LIST
18854: LIST
18855: LIST
18856: LIST
18857: LIST
18858: LIST
18859: LIST
18860: LIST
18861: LIST
18862: LIST
18863: LIST
18864: LIST
18865: LIST
18866: LIST
18867: LIST
18868: LIST
18869: LIST
18870: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18871: LD_ADDR_VAR 0 55
18875: PUSH
18876: LD_INT 0
18878: PUSH
18879: LD_INT 0
18881: PUSH
18882: EMPTY
18883: LIST
18884: LIST
18885: PUSH
18886: LD_INT 0
18888: PUSH
18889: LD_INT 1
18891: NEG
18892: PUSH
18893: EMPTY
18894: LIST
18895: LIST
18896: PUSH
18897: LD_INT 1
18899: PUSH
18900: LD_INT 0
18902: PUSH
18903: EMPTY
18904: LIST
18905: LIST
18906: PUSH
18907: LD_INT 1
18909: PUSH
18910: LD_INT 1
18912: PUSH
18913: EMPTY
18914: LIST
18915: LIST
18916: PUSH
18917: LD_INT 0
18919: PUSH
18920: LD_INT 1
18922: PUSH
18923: EMPTY
18924: LIST
18925: LIST
18926: PUSH
18927: LD_INT 1
18929: NEG
18930: PUSH
18931: LD_INT 0
18933: PUSH
18934: EMPTY
18935: LIST
18936: LIST
18937: PUSH
18938: LD_INT 1
18940: NEG
18941: PUSH
18942: LD_INT 1
18944: NEG
18945: PUSH
18946: EMPTY
18947: LIST
18948: LIST
18949: PUSH
18950: LD_INT 1
18952: NEG
18953: PUSH
18954: LD_INT 2
18956: NEG
18957: PUSH
18958: EMPTY
18959: LIST
18960: LIST
18961: PUSH
18962: LD_INT 0
18964: PUSH
18965: LD_INT 2
18967: NEG
18968: PUSH
18969: EMPTY
18970: LIST
18971: LIST
18972: PUSH
18973: LD_INT 1
18975: PUSH
18976: LD_INT 1
18978: NEG
18979: PUSH
18980: EMPTY
18981: LIST
18982: LIST
18983: PUSH
18984: LD_INT 2
18986: PUSH
18987: LD_INT 0
18989: PUSH
18990: EMPTY
18991: LIST
18992: LIST
18993: PUSH
18994: LD_INT 2
18996: PUSH
18997: LD_INT 1
18999: PUSH
19000: EMPTY
19001: LIST
19002: LIST
19003: PUSH
19004: LD_INT 2
19006: PUSH
19007: LD_INT 2
19009: PUSH
19010: EMPTY
19011: LIST
19012: LIST
19013: PUSH
19014: LD_INT 1
19016: PUSH
19017: LD_INT 2
19019: PUSH
19020: EMPTY
19021: LIST
19022: LIST
19023: PUSH
19024: LD_INT 0
19026: PUSH
19027: LD_INT 2
19029: PUSH
19030: EMPTY
19031: LIST
19032: LIST
19033: PUSH
19034: LD_INT 1
19036: NEG
19037: PUSH
19038: LD_INT 1
19040: PUSH
19041: EMPTY
19042: LIST
19043: LIST
19044: PUSH
19045: LD_INT 2
19047: NEG
19048: PUSH
19049: LD_INT 0
19051: PUSH
19052: EMPTY
19053: LIST
19054: LIST
19055: PUSH
19056: LD_INT 2
19058: NEG
19059: PUSH
19060: LD_INT 1
19062: NEG
19063: PUSH
19064: EMPTY
19065: LIST
19066: LIST
19067: PUSH
19068: LD_INT 2
19070: NEG
19071: PUSH
19072: LD_INT 2
19074: NEG
19075: PUSH
19076: EMPTY
19077: LIST
19078: LIST
19079: PUSH
19080: EMPTY
19081: LIST
19082: LIST
19083: LIST
19084: LIST
19085: LIST
19086: LIST
19087: LIST
19088: LIST
19089: LIST
19090: LIST
19091: LIST
19092: LIST
19093: LIST
19094: LIST
19095: LIST
19096: LIST
19097: LIST
19098: LIST
19099: LIST
19100: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19101: LD_ADDR_VAR 0 56
19105: PUSH
19106: LD_INT 0
19108: PUSH
19109: LD_INT 0
19111: PUSH
19112: EMPTY
19113: LIST
19114: LIST
19115: PUSH
19116: LD_INT 0
19118: PUSH
19119: LD_INT 1
19121: NEG
19122: PUSH
19123: EMPTY
19124: LIST
19125: LIST
19126: PUSH
19127: LD_INT 1
19129: PUSH
19130: LD_INT 0
19132: PUSH
19133: EMPTY
19134: LIST
19135: LIST
19136: PUSH
19137: LD_INT 1
19139: PUSH
19140: LD_INT 1
19142: PUSH
19143: EMPTY
19144: LIST
19145: LIST
19146: PUSH
19147: LD_INT 0
19149: PUSH
19150: LD_INT 1
19152: PUSH
19153: EMPTY
19154: LIST
19155: LIST
19156: PUSH
19157: LD_INT 1
19159: NEG
19160: PUSH
19161: LD_INT 0
19163: PUSH
19164: EMPTY
19165: LIST
19166: LIST
19167: PUSH
19168: LD_INT 1
19170: NEG
19171: PUSH
19172: LD_INT 1
19174: NEG
19175: PUSH
19176: EMPTY
19177: LIST
19178: LIST
19179: PUSH
19180: LD_INT 1
19182: NEG
19183: PUSH
19184: LD_INT 2
19186: NEG
19187: PUSH
19188: EMPTY
19189: LIST
19190: LIST
19191: PUSH
19192: LD_INT 0
19194: PUSH
19195: LD_INT 2
19197: NEG
19198: PUSH
19199: EMPTY
19200: LIST
19201: LIST
19202: PUSH
19203: LD_INT 1
19205: PUSH
19206: LD_INT 1
19208: NEG
19209: PUSH
19210: EMPTY
19211: LIST
19212: LIST
19213: PUSH
19214: LD_INT 2
19216: PUSH
19217: LD_INT 0
19219: PUSH
19220: EMPTY
19221: LIST
19222: LIST
19223: PUSH
19224: LD_INT 2
19226: PUSH
19227: LD_INT 1
19229: PUSH
19230: EMPTY
19231: LIST
19232: LIST
19233: PUSH
19234: LD_INT 2
19236: PUSH
19237: LD_INT 2
19239: PUSH
19240: EMPTY
19241: LIST
19242: LIST
19243: PUSH
19244: LD_INT 1
19246: PUSH
19247: LD_INT 2
19249: PUSH
19250: EMPTY
19251: LIST
19252: LIST
19253: PUSH
19254: LD_INT 0
19256: PUSH
19257: LD_INT 2
19259: PUSH
19260: EMPTY
19261: LIST
19262: LIST
19263: PUSH
19264: LD_INT 1
19266: NEG
19267: PUSH
19268: LD_INT 1
19270: PUSH
19271: EMPTY
19272: LIST
19273: LIST
19274: PUSH
19275: LD_INT 2
19277: NEG
19278: PUSH
19279: LD_INT 0
19281: PUSH
19282: EMPTY
19283: LIST
19284: LIST
19285: PUSH
19286: LD_INT 2
19288: NEG
19289: PUSH
19290: LD_INT 1
19292: NEG
19293: PUSH
19294: EMPTY
19295: LIST
19296: LIST
19297: PUSH
19298: LD_INT 2
19300: NEG
19301: PUSH
19302: LD_INT 2
19304: NEG
19305: PUSH
19306: EMPTY
19307: LIST
19308: LIST
19309: PUSH
19310: EMPTY
19311: LIST
19312: LIST
19313: LIST
19314: LIST
19315: LIST
19316: LIST
19317: LIST
19318: LIST
19319: LIST
19320: LIST
19321: LIST
19322: LIST
19323: LIST
19324: LIST
19325: LIST
19326: LIST
19327: LIST
19328: LIST
19329: LIST
19330: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19331: LD_ADDR_VAR 0 57
19335: PUSH
19336: LD_INT 0
19338: PUSH
19339: LD_INT 0
19341: PUSH
19342: EMPTY
19343: LIST
19344: LIST
19345: PUSH
19346: LD_INT 0
19348: PUSH
19349: LD_INT 1
19351: NEG
19352: PUSH
19353: EMPTY
19354: LIST
19355: LIST
19356: PUSH
19357: LD_INT 1
19359: PUSH
19360: LD_INT 0
19362: PUSH
19363: EMPTY
19364: LIST
19365: LIST
19366: PUSH
19367: LD_INT 1
19369: PUSH
19370: LD_INT 1
19372: PUSH
19373: EMPTY
19374: LIST
19375: LIST
19376: PUSH
19377: LD_INT 0
19379: PUSH
19380: LD_INT 1
19382: PUSH
19383: EMPTY
19384: LIST
19385: LIST
19386: PUSH
19387: LD_INT 1
19389: NEG
19390: PUSH
19391: LD_INT 0
19393: PUSH
19394: EMPTY
19395: LIST
19396: LIST
19397: PUSH
19398: LD_INT 1
19400: NEG
19401: PUSH
19402: LD_INT 1
19404: NEG
19405: PUSH
19406: EMPTY
19407: LIST
19408: LIST
19409: PUSH
19410: LD_INT 1
19412: NEG
19413: PUSH
19414: LD_INT 2
19416: NEG
19417: PUSH
19418: EMPTY
19419: LIST
19420: LIST
19421: PUSH
19422: LD_INT 0
19424: PUSH
19425: LD_INT 2
19427: NEG
19428: PUSH
19429: EMPTY
19430: LIST
19431: LIST
19432: PUSH
19433: LD_INT 1
19435: PUSH
19436: LD_INT 1
19438: NEG
19439: PUSH
19440: EMPTY
19441: LIST
19442: LIST
19443: PUSH
19444: LD_INT 2
19446: PUSH
19447: LD_INT 0
19449: PUSH
19450: EMPTY
19451: LIST
19452: LIST
19453: PUSH
19454: LD_INT 2
19456: PUSH
19457: LD_INT 1
19459: PUSH
19460: EMPTY
19461: LIST
19462: LIST
19463: PUSH
19464: LD_INT 2
19466: PUSH
19467: LD_INT 2
19469: PUSH
19470: EMPTY
19471: LIST
19472: LIST
19473: PUSH
19474: LD_INT 1
19476: PUSH
19477: LD_INT 2
19479: PUSH
19480: EMPTY
19481: LIST
19482: LIST
19483: PUSH
19484: LD_INT 0
19486: PUSH
19487: LD_INT 2
19489: PUSH
19490: EMPTY
19491: LIST
19492: LIST
19493: PUSH
19494: LD_INT 1
19496: NEG
19497: PUSH
19498: LD_INT 1
19500: PUSH
19501: EMPTY
19502: LIST
19503: LIST
19504: PUSH
19505: LD_INT 2
19507: NEG
19508: PUSH
19509: LD_INT 0
19511: PUSH
19512: EMPTY
19513: LIST
19514: LIST
19515: PUSH
19516: LD_INT 2
19518: NEG
19519: PUSH
19520: LD_INT 1
19522: NEG
19523: PUSH
19524: EMPTY
19525: LIST
19526: LIST
19527: PUSH
19528: LD_INT 2
19530: NEG
19531: PUSH
19532: LD_INT 2
19534: NEG
19535: PUSH
19536: EMPTY
19537: LIST
19538: LIST
19539: PUSH
19540: EMPTY
19541: LIST
19542: LIST
19543: LIST
19544: LIST
19545: LIST
19546: LIST
19547: LIST
19548: LIST
19549: LIST
19550: LIST
19551: LIST
19552: LIST
19553: LIST
19554: LIST
19555: LIST
19556: LIST
19557: LIST
19558: LIST
19559: LIST
19560: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19561: LD_ADDR_VAR 0 58
19565: PUSH
19566: LD_INT 0
19568: PUSH
19569: LD_INT 0
19571: PUSH
19572: EMPTY
19573: LIST
19574: LIST
19575: PUSH
19576: LD_INT 0
19578: PUSH
19579: LD_INT 1
19581: NEG
19582: PUSH
19583: EMPTY
19584: LIST
19585: LIST
19586: PUSH
19587: LD_INT 1
19589: PUSH
19590: LD_INT 0
19592: PUSH
19593: EMPTY
19594: LIST
19595: LIST
19596: PUSH
19597: LD_INT 1
19599: PUSH
19600: LD_INT 1
19602: PUSH
19603: EMPTY
19604: LIST
19605: LIST
19606: PUSH
19607: LD_INT 0
19609: PUSH
19610: LD_INT 1
19612: PUSH
19613: EMPTY
19614: LIST
19615: LIST
19616: PUSH
19617: LD_INT 1
19619: NEG
19620: PUSH
19621: LD_INT 0
19623: PUSH
19624: EMPTY
19625: LIST
19626: LIST
19627: PUSH
19628: LD_INT 1
19630: NEG
19631: PUSH
19632: LD_INT 1
19634: NEG
19635: PUSH
19636: EMPTY
19637: LIST
19638: LIST
19639: PUSH
19640: LD_INT 1
19642: NEG
19643: PUSH
19644: LD_INT 2
19646: NEG
19647: PUSH
19648: EMPTY
19649: LIST
19650: LIST
19651: PUSH
19652: LD_INT 0
19654: PUSH
19655: LD_INT 2
19657: NEG
19658: PUSH
19659: EMPTY
19660: LIST
19661: LIST
19662: PUSH
19663: LD_INT 1
19665: PUSH
19666: LD_INT 1
19668: NEG
19669: PUSH
19670: EMPTY
19671: LIST
19672: LIST
19673: PUSH
19674: LD_INT 2
19676: PUSH
19677: LD_INT 0
19679: PUSH
19680: EMPTY
19681: LIST
19682: LIST
19683: PUSH
19684: LD_INT 2
19686: PUSH
19687: LD_INT 1
19689: PUSH
19690: EMPTY
19691: LIST
19692: LIST
19693: PUSH
19694: LD_INT 2
19696: PUSH
19697: LD_INT 2
19699: PUSH
19700: EMPTY
19701: LIST
19702: LIST
19703: PUSH
19704: LD_INT 1
19706: PUSH
19707: LD_INT 2
19709: PUSH
19710: EMPTY
19711: LIST
19712: LIST
19713: PUSH
19714: LD_INT 0
19716: PUSH
19717: LD_INT 2
19719: PUSH
19720: EMPTY
19721: LIST
19722: LIST
19723: PUSH
19724: LD_INT 1
19726: NEG
19727: PUSH
19728: LD_INT 1
19730: PUSH
19731: EMPTY
19732: LIST
19733: LIST
19734: PUSH
19735: LD_INT 2
19737: NEG
19738: PUSH
19739: LD_INT 0
19741: PUSH
19742: EMPTY
19743: LIST
19744: LIST
19745: PUSH
19746: LD_INT 2
19748: NEG
19749: PUSH
19750: LD_INT 1
19752: NEG
19753: PUSH
19754: EMPTY
19755: LIST
19756: LIST
19757: PUSH
19758: LD_INT 2
19760: NEG
19761: PUSH
19762: LD_INT 2
19764: NEG
19765: PUSH
19766: EMPTY
19767: LIST
19768: LIST
19769: PUSH
19770: EMPTY
19771: LIST
19772: LIST
19773: LIST
19774: LIST
19775: LIST
19776: LIST
19777: LIST
19778: LIST
19779: LIST
19780: LIST
19781: LIST
19782: LIST
19783: LIST
19784: LIST
19785: LIST
19786: LIST
19787: LIST
19788: LIST
19789: LIST
19790: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19791: LD_ADDR_VAR 0 59
19795: PUSH
19796: LD_INT 0
19798: PUSH
19799: LD_INT 0
19801: PUSH
19802: EMPTY
19803: LIST
19804: LIST
19805: PUSH
19806: LD_INT 0
19808: PUSH
19809: LD_INT 1
19811: NEG
19812: PUSH
19813: EMPTY
19814: LIST
19815: LIST
19816: PUSH
19817: LD_INT 1
19819: PUSH
19820: LD_INT 0
19822: PUSH
19823: EMPTY
19824: LIST
19825: LIST
19826: PUSH
19827: LD_INT 1
19829: PUSH
19830: LD_INT 1
19832: PUSH
19833: EMPTY
19834: LIST
19835: LIST
19836: PUSH
19837: LD_INT 0
19839: PUSH
19840: LD_INT 1
19842: PUSH
19843: EMPTY
19844: LIST
19845: LIST
19846: PUSH
19847: LD_INT 1
19849: NEG
19850: PUSH
19851: LD_INT 0
19853: PUSH
19854: EMPTY
19855: LIST
19856: LIST
19857: PUSH
19858: LD_INT 1
19860: NEG
19861: PUSH
19862: LD_INT 1
19864: NEG
19865: PUSH
19866: EMPTY
19867: LIST
19868: LIST
19869: PUSH
19870: EMPTY
19871: LIST
19872: LIST
19873: LIST
19874: LIST
19875: LIST
19876: LIST
19877: LIST
19878: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19879: LD_ADDR_VAR 0 60
19883: PUSH
19884: LD_INT 0
19886: PUSH
19887: LD_INT 0
19889: PUSH
19890: EMPTY
19891: LIST
19892: LIST
19893: PUSH
19894: LD_INT 0
19896: PUSH
19897: LD_INT 1
19899: NEG
19900: PUSH
19901: EMPTY
19902: LIST
19903: LIST
19904: PUSH
19905: LD_INT 1
19907: PUSH
19908: LD_INT 0
19910: PUSH
19911: EMPTY
19912: LIST
19913: LIST
19914: PUSH
19915: LD_INT 1
19917: PUSH
19918: LD_INT 1
19920: PUSH
19921: EMPTY
19922: LIST
19923: LIST
19924: PUSH
19925: LD_INT 0
19927: PUSH
19928: LD_INT 1
19930: PUSH
19931: EMPTY
19932: LIST
19933: LIST
19934: PUSH
19935: LD_INT 1
19937: NEG
19938: PUSH
19939: LD_INT 0
19941: PUSH
19942: EMPTY
19943: LIST
19944: LIST
19945: PUSH
19946: LD_INT 1
19948: NEG
19949: PUSH
19950: LD_INT 1
19952: NEG
19953: PUSH
19954: EMPTY
19955: LIST
19956: LIST
19957: PUSH
19958: EMPTY
19959: LIST
19960: LIST
19961: LIST
19962: LIST
19963: LIST
19964: LIST
19965: LIST
19966: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19967: LD_ADDR_VAR 0 61
19971: PUSH
19972: LD_INT 0
19974: PUSH
19975: LD_INT 0
19977: PUSH
19978: EMPTY
19979: LIST
19980: LIST
19981: PUSH
19982: LD_INT 0
19984: PUSH
19985: LD_INT 1
19987: NEG
19988: PUSH
19989: EMPTY
19990: LIST
19991: LIST
19992: PUSH
19993: LD_INT 1
19995: PUSH
19996: LD_INT 0
19998: PUSH
19999: EMPTY
20000: LIST
20001: LIST
20002: PUSH
20003: LD_INT 1
20005: PUSH
20006: LD_INT 1
20008: PUSH
20009: EMPTY
20010: LIST
20011: LIST
20012: PUSH
20013: LD_INT 0
20015: PUSH
20016: LD_INT 1
20018: PUSH
20019: EMPTY
20020: LIST
20021: LIST
20022: PUSH
20023: LD_INT 1
20025: NEG
20026: PUSH
20027: LD_INT 0
20029: PUSH
20030: EMPTY
20031: LIST
20032: LIST
20033: PUSH
20034: LD_INT 1
20036: NEG
20037: PUSH
20038: LD_INT 1
20040: NEG
20041: PUSH
20042: EMPTY
20043: LIST
20044: LIST
20045: PUSH
20046: EMPTY
20047: LIST
20048: LIST
20049: LIST
20050: LIST
20051: LIST
20052: LIST
20053: LIST
20054: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20055: LD_ADDR_VAR 0 62
20059: PUSH
20060: LD_INT 0
20062: PUSH
20063: LD_INT 0
20065: PUSH
20066: EMPTY
20067: LIST
20068: LIST
20069: PUSH
20070: LD_INT 0
20072: PUSH
20073: LD_INT 1
20075: NEG
20076: PUSH
20077: EMPTY
20078: LIST
20079: LIST
20080: PUSH
20081: LD_INT 1
20083: PUSH
20084: LD_INT 0
20086: PUSH
20087: EMPTY
20088: LIST
20089: LIST
20090: PUSH
20091: LD_INT 1
20093: PUSH
20094: LD_INT 1
20096: PUSH
20097: EMPTY
20098: LIST
20099: LIST
20100: PUSH
20101: LD_INT 0
20103: PUSH
20104: LD_INT 1
20106: PUSH
20107: EMPTY
20108: LIST
20109: LIST
20110: PUSH
20111: LD_INT 1
20113: NEG
20114: PUSH
20115: LD_INT 0
20117: PUSH
20118: EMPTY
20119: LIST
20120: LIST
20121: PUSH
20122: LD_INT 1
20124: NEG
20125: PUSH
20126: LD_INT 1
20128: NEG
20129: PUSH
20130: EMPTY
20131: LIST
20132: LIST
20133: PUSH
20134: EMPTY
20135: LIST
20136: LIST
20137: LIST
20138: LIST
20139: LIST
20140: LIST
20141: LIST
20142: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20143: LD_ADDR_VAR 0 63
20147: PUSH
20148: LD_INT 0
20150: PUSH
20151: LD_INT 0
20153: PUSH
20154: EMPTY
20155: LIST
20156: LIST
20157: PUSH
20158: LD_INT 0
20160: PUSH
20161: LD_INT 1
20163: NEG
20164: PUSH
20165: EMPTY
20166: LIST
20167: LIST
20168: PUSH
20169: LD_INT 1
20171: PUSH
20172: LD_INT 0
20174: PUSH
20175: EMPTY
20176: LIST
20177: LIST
20178: PUSH
20179: LD_INT 1
20181: PUSH
20182: LD_INT 1
20184: PUSH
20185: EMPTY
20186: LIST
20187: LIST
20188: PUSH
20189: LD_INT 0
20191: PUSH
20192: LD_INT 1
20194: PUSH
20195: EMPTY
20196: LIST
20197: LIST
20198: PUSH
20199: LD_INT 1
20201: NEG
20202: PUSH
20203: LD_INT 0
20205: PUSH
20206: EMPTY
20207: LIST
20208: LIST
20209: PUSH
20210: LD_INT 1
20212: NEG
20213: PUSH
20214: LD_INT 1
20216: NEG
20217: PUSH
20218: EMPTY
20219: LIST
20220: LIST
20221: PUSH
20222: EMPTY
20223: LIST
20224: LIST
20225: LIST
20226: LIST
20227: LIST
20228: LIST
20229: LIST
20230: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20231: LD_ADDR_VAR 0 64
20235: PUSH
20236: LD_INT 0
20238: PUSH
20239: LD_INT 0
20241: PUSH
20242: EMPTY
20243: LIST
20244: LIST
20245: PUSH
20246: LD_INT 0
20248: PUSH
20249: LD_INT 1
20251: NEG
20252: PUSH
20253: EMPTY
20254: LIST
20255: LIST
20256: PUSH
20257: LD_INT 1
20259: PUSH
20260: LD_INT 0
20262: PUSH
20263: EMPTY
20264: LIST
20265: LIST
20266: PUSH
20267: LD_INT 1
20269: PUSH
20270: LD_INT 1
20272: PUSH
20273: EMPTY
20274: LIST
20275: LIST
20276: PUSH
20277: LD_INT 0
20279: PUSH
20280: LD_INT 1
20282: PUSH
20283: EMPTY
20284: LIST
20285: LIST
20286: PUSH
20287: LD_INT 1
20289: NEG
20290: PUSH
20291: LD_INT 0
20293: PUSH
20294: EMPTY
20295: LIST
20296: LIST
20297: PUSH
20298: LD_INT 1
20300: NEG
20301: PUSH
20302: LD_INT 1
20304: NEG
20305: PUSH
20306: EMPTY
20307: LIST
20308: LIST
20309: PUSH
20310: EMPTY
20311: LIST
20312: LIST
20313: LIST
20314: LIST
20315: LIST
20316: LIST
20317: LIST
20318: ST_TO_ADDR
// end ; 1 :
20319: GO 26216
20321: LD_INT 1
20323: DOUBLE
20324: EQUAL
20325: IFTRUE 20329
20327: GO 22952
20329: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20330: LD_ADDR_VAR 0 11
20334: PUSH
20335: LD_INT 1
20337: NEG
20338: PUSH
20339: LD_INT 3
20341: NEG
20342: PUSH
20343: EMPTY
20344: LIST
20345: LIST
20346: PUSH
20347: LD_INT 0
20349: PUSH
20350: LD_INT 3
20352: NEG
20353: PUSH
20354: EMPTY
20355: LIST
20356: LIST
20357: PUSH
20358: LD_INT 1
20360: PUSH
20361: LD_INT 2
20363: NEG
20364: PUSH
20365: EMPTY
20366: LIST
20367: LIST
20368: PUSH
20369: EMPTY
20370: LIST
20371: LIST
20372: LIST
20373: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20374: LD_ADDR_VAR 0 12
20378: PUSH
20379: LD_INT 2
20381: PUSH
20382: LD_INT 1
20384: NEG
20385: PUSH
20386: EMPTY
20387: LIST
20388: LIST
20389: PUSH
20390: LD_INT 3
20392: PUSH
20393: LD_INT 0
20395: PUSH
20396: EMPTY
20397: LIST
20398: LIST
20399: PUSH
20400: LD_INT 3
20402: PUSH
20403: LD_INT 1
20405: PUSH
20406: EMPTY
20407: LIST
20408: LIST
20409: PUSH
20410: EMPTY
20411: LIST
20412: LIST
20413: LIST
20414: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20415: LD_ADDR_VAR 0 13
20419: PUSH
20420: LD_INT 3
20422: PUSH
20423: LD_INT 2
20425: PUSH
20426: EMPTY
20427: LIST
20428: LIST
20429: PUSH
20430: LD_INT 3
20432: PUSH
20433: LD_INT 3
20435: PUSH
20436: EMPTY
20437: LIST
20438: LIST
20439: PUSH
20440: LD_INT 2
20442: PUSH
20443: LD_INT 3
20445: PUSH
20446: EMPTY
20447: LIST
20448: LIST
20449: PUSH
20450: EMPTY
20451: LIST
20452: LIST
20453: LIST
20454: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20455: LD_ADDR_VAR 0 14
20459: PUSH
20460: LD_INT 1
20462: PUSH
20463: LD_INT 3
20465: PUSH
20466: EMPTY
20467: LIST
20468: LIST
20469: PUSH
20470: LD_INT 0
20472: PUSH
20473: LD_INT 3
20475: PUSH
20476: EMPTY
20477: LIST
20478: LIST
20479: PUSH
20480: LD_INT 1
20482: NEG
20483: PUSH
20484: LD_INT 2
20486: PUSH
20487: EMPTY
20488: LIST
20489: LIST
20490: PUSH
20491: EMPTY
20492: LIST
20493: LIST
20494: LIST
20495: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20496: LD_ADDR_VAR 0 15
20500: PUSH
20501: LD_INT 2
20503: NEG
20504: PUSH
20505: LD_INT 1
20507: PUSH
20508: EMPTY
20509: LIST
20510: LIST
20511: PUSH
20512: LD_INT 3
20514: NEG
20515: PUSH
20516: LD_INT 0
20518: PUSH
20519: EMPTY
20520: LIST
20521: LIST
20522: PUSH
20523: LD_INT 3
20525: NEG
20526: PUSH
20527: LD_INT 1
20529: NEG
20530: PUSH
20531: EMPTY
20532: LIST
20533: LIST
20534: PUSH
20535: EMPTY
20536: LIST
20537: LIST
20538: LIST
20539: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20540: LD_ADDR_VAR 0 16
20544: PUSH
20545: LD_INT 2
20547: NEG
20548: PUSH
20549: LD_INT 3
20551: NEG
20552: PUSH
20553: EMPTY
20554: LIST
20555: LIST
20556: PUSH
20557: LD_INT 3
20559: NEG
20560: PUSH
20561: LD_INT 2
20563: NEG
20564: PUSH
20565: EMPTY
20566: LIST
20567: LIST
20568: PUSH
20569: LD_INT 3
20571: NEG
20572: PUSH
20573: LD_INT 3
20575: NEG
20576: PUSH
20577: EMPTY
20578: LIST
20579: LIST
20580: PUSH
20581: EMPTY
20582: LIST
20583: LIST
20584: LIST
20585: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20586: LD_ADDR_VAR 0 17
20590: PUSH
20591: LD_INT 1
20593: NEG
20594: PUSH
20595: LD_INT 3
20597: NEG
20598: PUSH
20599: EMPTY
20600: LIST
20601: LIST
20602: PUSH
20603: LD_INT 0
20605: PUSH
20606: LD_INT 3
20608: NEG
20609: PUSH
20610: EMPTY
20611: LIST
20612: LIST
20613: PUSH
20614: LD_INT 1
20616: PUSH
20617: LD_INT 2
20619: NEG
20620: PUSH
20621: EMPTY
20622: LIST
20623: LIST
20624: PUSH
20625: EMPTY
20626: LIST
20627: LIST
20628: LIST
20629: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20630: LD_ADDR_VAR 0 18
20634: PUSH
20635: LD_INT 2
20637: PUSH
20638: LD_INT 1
20640: NEG
20641: PUSH
20642: EMPTY
20643: LIST
20644: LIST
20645: PUSH
20646: LD_INT 3
20648: PUSH
20649: LD_INT 0
20651: PUSH
20652: EMPTY
20653: LIST
20654: LIST
20655: PUSH
20656: LD_INT 3
20658: PUSH
20659: LD_INT 1
20661: PUSH
20662: EMPTY
20663: LIST
20664: LIST
20665: PUSH
20666: EMPTY
20667: LIST
20668: LIST
20669: LIST
20670: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20671: LD_ADDR_VAR 0 19
20675: PUSH
20676: LD_INT 3
20678: PUSH
20679: LD_INT 2
20681: PUSH
20682: EMPTY
20683: LIST
20684: LIST
20685: PUSH
20686: LD_INT 3
20688: PUSH
20689: LD_INT 3
20691: PUSH
20692: EMPTY
20693: LIST
20694: LIST
20695: PUSH
20696: LD_INT 2
20698: PUSH
20699: LD_INT 3
20701: PUSH
20702: EMPTY
20703: LIST
20704: LIST
20705: PUSH
20706: EMPTY
20707: LIST
20708: LIST
20709: LIST
20710: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20711: LD_ADDR_VAR 0 20
20715: PUSH
20716: LD_INT 1
20718: PUSH
20719: LD_INT 3
20721: PUSH
20722: EMPTY
20723: LIST
20724: LIST
20725: PUSH
20726: LD_INT 0
20728: PUSH
20729: LD_INT 3
20731: PUSH
20732: EMPTY
20733: LIST
20734: LIST
20735: PUSH
20736: LD_INT 1
20738: NEG
20739: PUSH
20740: LD_INT 2
20742: PUSH
20743: EMPTY
20744: LIST
20745: LIST
20746: PUSH
20747: EMPTY
20748: LIST
20749: LIST
20750: LIST
20751: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20752: LD_ADDR_VAR 0 21
20756: PUSH
20757: LD_INT 2
20759: NEG
20760: PUSH
20761: LD_INT 1
20763: PUSH
20764: EMPTY
20765: LIST
20766: LIST
20767: PUSH
20768: LD_INT 3
20770: NEG
20771: PUSH
20772: LD_INT 0
20774: PUSH
20775: EMPTY
20776: LIST
20777: LIST
20778: PUSH
20779: LD_INT 3
20781: NEG
20782: PUSH
20783: LD_INT 1
20785: NEG
20786: PUSH
20787: EMPTY
20788: LIST
20789: LIST
20790: PUSH
20791: EMPTY
20792: LIST
20793: LIST
20794: LIST
20795: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20796: LD_ADDR_VAR 0 22
20800: PUSH
20801: LD_INT 2
20803: NEG
20804: PUSH
20805: LD_INT 3
20807: NEG
20808: PUSH
20809: EMPTY
20810: LIST
20811: LIST
20812: PUSH
20813: LD_INT 3
20815: NEG
20816: PUSH
20817: LD_INT 2
20819: NEG
20820: PUSH
20821: EMPTY
20822: LIST
20823: LIST
20824: PUSH
20825: LD_INT 3
20827: NEG
20828: PUSH
20829: LD_INT 3
20831: NEG
20832: PUSH
20833: EMPTY
20834: LIST
20835: LIST
20836: PUSH
20837: EMPTY
20838: LIST
20839: LIST
20840: LIST
20841: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20842: LD_ADDR_VAR 0 23
20846: PUSH
20847: LD_INT 0
20849: PUSH
20850: LD_INT 3
20852: NEG
20853: PUSH
20854: EMPTY
20855: LIST
20856: LIST
20857: PUSH
20858: LD_INT 1
20860: NEG
20861: PUSH
20862: LD_INT 4
20864: NEG
20865: PUSH
20866: EMPTY
20867: LIST
20868: LIST
20869: PUSH
20870: LD_INT 1
20872: PUSH
20873: LD_INT 3
20875: NEG
20876: PUSH
20877: EMPTY
20878: LIST
20879: LIST
20880: PUSH
20881: EMPTY
20882: LIST
20883: LIST
20884: LIST
20885: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20886: LD_ADDR_VAR 0 24
20890: PUSH
20891: LD_INT 3
20893: PUSH
20894: LD_INT 0
20896: PUSH
20897: EMPTY
20898: LIST
20899: LIST
20900: PUSH
20901: LD_INT 3
20903: PUSH
20904: LD_INT 1
20906: NEG
20907: PUSH
20908: EMPTY
20909: LIST
20910: LIST
20911: PUSH
20912: LD_INT 4
20914: PUSH
20915: LD_INT 1
20917: PUSH
20918: EMPTY
20919: LIST
20920: LIST
20921: PUSH
20922: EMPTY
20923: LIST
20924: LIST
20925: LIST
20926: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20927: LD_ADDR_VAR 0 25
20931: PUSH
20932: LD_INT 3
20934: PUSH
20935: LD_INT 3
20937: PUSH
20938: EMPTY
20939: LIST
20940: LIST
20941: PUSH
20942: LD_INT 4
20944: PUSH
20945: LD_INT 3
20947: PUSH
20948: EMPTY
20949: LIST
20950: LIST
20951: PUSH
20952: LD_INT 3
20954: PUSH
20955: LD_INT 4
20957: PUSH
20958: EMPTY
20959: LIST
20960: LIST
20961: PUSH
20962: EMPTY
20963: LIST
20964: LIST
20965: LIST
20966: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
20967: LD_ADDR_VAR 0 26
20971: PUSH
20972: LD_INT 0
20974: PUSH
20975: LD_INT 3
20977: PUSH
20978: EMPTY
20979: LIST
20980: LIST
20981: PUSH
20982: LD_INT 1
20984: PUSH
20985: LD_INT 4
20987: PUSH
20988: EMPTY
20989: LIST
20990: LIST
20991: PUSH
20992: LD_INT 1
20994: NEG
20995: PUSH
20996: LD_INT 3
20998: PUSH
20999: EMPTY
21000: LIST
21001: LIST
21002: PUSH
21003: EMPTY
21004: LIST
21005: LIST
21006: LIST
21007: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21008: LD_ADDR_VAR 0 27
21012: PUSH
21013: LD_INT 3
21015: NEG
21016: PUSH
21017: LD_INT 0
21019: PUSH
21020: EMPTY
21021: LIST
21022: LIST
21023: PUSH
21024: LD_INT 3
21026: NEG
21027: PUSH
21028: LD_INT 1
21030: PUSH
21031: EMPTY
21032: LIST
21033: LIST
21034: PUSH
21035: LD_INT 4
21037: NEG
21038: PUSH
21039: LD_INT 1
21041: NEG
21042: PUSH
21043: EMPTY
21044: LIST
21045: LIST
21046: PUSH
21047: EMPTY
21048: LIST
21049: LIST
21050: LIST
21051: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21052: LD_ADDR_VAR 0 28
21056: PUSH
21057: LD_INT 3
21059: NEG
21060: PUSH
21061: LD_INT 3
21063: NEG
21064: PUSH
21065: EMPTY
21066: LIST
21067: LIST
21068: PUSH
21069: LD_INT 3
21071: NEG
21072: PUSH
21073: LD_INT 4
21075: NEG
21076: PUSH
21077: EMPTY
21078: LIST
21079: LIST
21080: PUSH
21081: LD_INT 4
21083: NEG
21084: PUSH
21085: LD_INT 3
21087: NEG
21088: PUSH
21089: EMPTY
21090: LIST
21091: LIST
21092: PUSH
21093: EMPTY
21094: LIST
21095: LIST
21096: LIST
21097: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21098: LD_ADDR_VAR 0 29
21102: PUSH
21103: LD_INT 1
21105: NEG
21106: PUSH
21107: LD_INT 3
21109: NEG
21110: PUSH
21111: EMPTY
21112: LIST
21113: LIST
21114: PUSH
21115: LD_INT 0
21117: PUSH
21118: LD_INT 3
21120: NEG
21121: PUSH
21122: EMPTY
21123: LIST
21124: LIST
21125: PUSH
21126: LD_INT 1
21128: PUSH
21129: LD_INT 2
21131: NEG
21132: PUSH
21133: EMPTY
21134: LIST
21135: LIST
21136: PUSH
21137: LD_INT 1
21139: NEG
21140: PUSH
21141: LD_INT 4
21143: NEG
21144: PUSH
21145: EMPTY
21146: LIST
21147: LIST
21148: PUSH
21149: LD_INT 0
21151: PUSH
21152: LD_INT 4
21154: NEG
21155: PUSH
21156: EMPTY
21157: LIST
21158: LIST
21159: PUSH
21160: LD_INT 1
21162: PUSH
21163: LD_INT 3
21165: NEG
21166: PUSH
21167: EMPTY
21168: LIST
21169: LIST
21170: PUSH
21171: LD_INT 1
21173: NEG
21174: PUSH
21175: LD_INT 5
21177: NEG
21178: PUSH
21179: EMPTY
21180: LIST
21181: LIST
21182: PUSH
21183: LD_INT 0
21185: PUSH
21186: LD_INT 5
21188: NEG
21189: PUSH
21190: EMPTY
21191: LIST
21192: LIST
21193: PUSH
21194: LD_INT 1
21196: PUSH
21197: LD_INT 4
21199: NEG
21200: PUSH
21201: EMPTY
21202: LIST
21203: LIST
21204: PUSH
21205: LD_INT 1
21207: NEG
21208: PUSH
21209: LD_INT 6
21211: NEG
21212: PUSH
21213: EMPTY
21214: LIST
21215: LIST
21216: PUSH
21217: LD_INT 0
21219: PUSH
21220: LD_INT 6
21222: NEG
21223: PUSH
21224: EMPTY
21225: LIST
21226: LIST
21227: PUSH
21228: LD_INT 1
21230: PUSH
21231: LD_INT 5
21233: NEG
21234: PUSH
21235: EMPTY
21236: LIST
21237: LIST
21238: PUSH
21239: EMPTY
21240: LIST
21241: LIST
21242: LIST
21243: LIST
21244: LIST
21245: LIST
21246: LIST
21247: LIST
21248: LIST
21249: LIST
21250: LIST
21251: LIST
21252: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21253: LD_ADDR_VAR 0 30
21257: PUSH
21258: LD_INT 2
21260: PUSH
21261: LD_INT 1
21263: NEG
21264: PUSH
21265: EMPTY
21266: LIST
21267: LIST
21268: PUSH
21269: LD_INT 3
21271: PUSH
21272: LD_INT 0
21274: PUSH
21275: EMPTY
21276: LIST
21277: LIST
21278: PUSH
21279: LD_INT 3
21281: PUSH
21282: LD_INT 1
21284: PUSH
21285: EMPTY
21286: LIST
21287: LIST
21288: PUSH
21289: LD_INT 3
21291: PUSH
21292: LD_INT 1
21294: NEG
21295: PUSH
21296: EMPTY
21297: LIST
21298: LIST
21299: PUSH
21300: LD_INT 4
21302: PUSH
21303: LD_INT 0
21305: PUSH
21306: EMPTY
21307: LIST
21308: LIST
21309: PUSH
21310: LD_INT 4
21312: PUSH
21313: LD_INT 1
21315: PUSH
21316: EMPTY
21317: LIST
21318: LIST
21319: PUSH
21320: LD_INT 4
21322: PUSH
21323: LD_INT 1
21325: NEG
21326: PUSH
21327: EMPTY
21328: LIST
21329: LIST
21330: PUSH
21331: LD_INT 5
21333: PUSH
21334: LD_INT 0
21336: PUSH
21337: EMPTY
21338: LIST
21339: LIST
21340: PUSH
21341: LD_INT 5
21343: PUSH
21344: LD_INT 1
21346: PUSH
21347: EMPTY
21348: LIST
21349: LIST
21350: PUSH
21351: LD_INT 5
21353: PUSH
21354: LD_INT 1
21356: NEG
21357: PUSH
21358: EMPTY
21359: LIST
21360: LIST
21361: PUSH
21362: LD_INT 6
21364: PUSH
21365: LD_INT 0
21367: PUSH
21368: EMPTY
21369: LIST
21370: LIST
21371: PUSH
21372: LD_INT 6
21374: PUSH
21375: LD_INT 1
21377: PUSH
21378: EMPTY
21379: LIST
21380: LIST
21381: PUSH
21382: EMPTY
21383: LIST
21384: LIST
21385: LIST
21386: LIST
21387: LIST
21388: LIST
21389: LIST
21390: LIST
21391: LIST
21392: LIST
21393: LIST
21394: LIST
21395: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21396: LD_ADDR_VAR 0 31
21400: PUSH
21401: LD_INT 3
21403: PUSH
21404: LD_INT 2
21406: PUSH
21407: EMPTY
21408: LIST
21409: LIST
21410: PUSH
21411: LD_INT 3
21413: PUSH
21414: LD_INT 3
21416: PUSH
21417: EMPTY
21418: LIST
21419: LIST
21420: PUSH
21421: LD_INT 2
21423: PUSH
21424: LD_INT 3
21426: PUSH
21427: EMPTY
21428: LIST
21429: LIST
21430: PUSH
21431: LD_INT 4
21433: PUSH
21434: LD_INT 3
21436: PUSH
21437: EMPTY
21438: LIST
21439: LIST
21440: PUSH
21441: LD_INT 4
21443: PUSH
21444: LD_INT 4
21446: PUSH
21447: EMPTY
21448: LIST
21449: LIST
21450: PUSH
21451: LD_INT 3
21453: PUSH
21454: LD_INT 4
21456: PUSH
21457: EMPTY
21458: LIST
21459: LIST
21460: PUSH
21461: LD_INT 5
21463: PUSH
21464: LD_INT 4
21466: PUSH
21467: EMPTY
21468: LIST
21469: LIST
21470: PUSH
21471: LD_INT 5
21473: PUSH
21474: LD_INT 5
21476: PUSH
21477: EMPTY
21478: LIST
21479: LIST
21480: PUSH
21481: LD_INT 4
21483: PUSH
21484: LD_INT 5
21486: PUSH
21487: EMPTY
21488: LIST
21489: LIST
21490: PUSH
21491: LD_INT 6
21493: PUSH
21494: LD_INT 5
21496: PUSH
21497: EMPTY
21498: LIST
21499: LIST
21500: PUSH
21501: LD_INT 6
21503: PUSH
21504: LD_INT 6
21506: PUSH
21507: EMPTY
21508: LIST
21509: LIST
21510: PUSH
21511: LD_INT 5
21513: PUSH
21514: LD_INT 6
21516: PUSH
21517: EMPTY
21518: LIST
21519: LIST
21520: PUSH
21521: EMPTY
21522: LIST
21523: LIST
21524: LIST
21525: LIST
21526: LIST
21527: LIST
21528: LIST
21529: LIST
21530: LIST
21531: LIST
21532: LIST
21533: LIST
21534: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21535: LD_ADDR_VAR 0 32
21539: PUSH
21540: LD_INT 1
21542: PUSH
21543: LD_INT 3
21545: PUSH
21546: EMPTY
21547: LIST
21548: LIST
21549: PUSH
21550: LD_INT 0
21552: PUSH
21553: LD_INT 3
21555: PUSH
21556: EMPTY
21557: LIST
21558: LIST
21559: PUSH
21560: LD_INT 1
21562: NEG
21563: PUSH
21564: LD_INT 2
21566: PUSH
21567: EMPTY
21568: LIST
21569: LIST
21570: PUSH
21571: LD_INT 1
21573: PUSH
21574: LD_INT 4
21576: PUSH
21577: EMPTY
21578: LIST
21579: LIST
21580: PUSH
21581: LD_INT 0
21583: PUSH
21584: LD_INT 4
21586: PUSH
21587: EMPTY
21588: LIST
21589: LIST
21590: PUSH
21591: LD_INT 1
21593: NEG
21594: PUSH
21595: LD_INT 3
21597: PUSH
21598: EMPTY
21599: LIST
21600: LIST
21601: PUSH
21602: LD_INT 1
21604: PUSH
21605: LD_INT 5
21607: PUSH
21608: EMPTY
21609: LIST
21610: LIST
21611: PUSH
21612: LD_INT 0
21614: PUSH
21615: LD_INT 5
21617: PUSH
21618: EMPTY
21619: LIST
21620: LIST
21621: PUSH
21622: LD_INT 1
21624: NEG
21625: PUSH
21626: LD_INT 4
21628: PUSH
21629: EMPTY
21630: LIST
21631: LIST
21632: PUSH
21633: LD_INT 1
21635: PUSH
21636: LD_INT 6
21638: PUSH
21639: EMPTY
21640: LIST
21641: LIST
21642: PUSH
21643: LD_INT 0
21645: PUSH
21646: LD_INT 6
21648: PUSH
21649: EMPTY
21650: LIST
21651: LIST
21652: PUSH
21653: LD_INT 1
21655: NEG
21656: PUSH
21657: LD_INT 5
21659: PUSH
21660: EMPTY
21661: LIST
21662: LIST
21663: PUSH
21664: EMPTY
21665: LIST
21666: LIST
21667: LIST
21668: LIST
21669: LIST
21670: LIST
21671: LIST
21672: LIST
21673: LIST
21674: LIST
21675: LIST
21676: LIST
21677: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21678: LD_ADDR_VAR 0 33
21682: PUSH
21683: LD_INT 2
21685: NEG
21686: PUSH
21687: LD_INT 1
21689: PUSH
21690: EMPTY
21691: LIST
21692: LIST
21693: PUSH
21694: LD_INT 3
21696: NEG
21697: PUSH
21698: LD_INT 0
21700: PUSH
21701: EMPTY
21702: LIST
21703: LIST
21704: PUSH
21705: LD_INT 3
21707: NEG
21708: PUSH
21709: LD_INT 1
21711: NEG
21712: PUSH
21713: EMPTY
21714: LIST
21715: LIST
21716: PUSH
21717: LD_INT 3
21719: NEG
21720: PUSH
21721: LD_INT 1
21723: PUSH
21724: EMPTY
21725: LIST
21726: LIST
21727: PUSH
21728: LD_INT 4
21730: NEG
21731: PUSH
21732: LD_INT 0
21734: PUSH
21735: EMPTY
21736: LIST
21737: LIST
21738: PUSH
21739: LD_INT 4
21741: NEG
21742: PUSH
21743: LD_INT 1
21745: NEG
21746: PUSH
21747: EMPTY
21748: LIST
21749: LIST
21750: PUSH
21751: LD_INT 4
21753: NEG
21754: PUSH
21755: LD_INT 1
21757: PUSH
21758: EMPTY
21759: LIST
21760: LIST
21761: PUSH
21762: LD_INT 5
21764: NEG
21765: PUSH
21766: LD_INT 0
21768: PUSH
21769: EMPTY
21770: LIST
21771: LIST
21772: PUSH
21773: LD_INT 5
21775: NEG
21776: PUSH
21777: LD_INT 1
21779: NEG
21780: PUSH
21781: EMPTY
21782: LIST
21783: LIST
21784: PUSH
21785: LD_INT 5
21787: NEG
21788: PUSH
21789: LD_INT 1
21791: PUSH
21792: EMPTY
21793: LIST
21794: LIST
21795: PUSH
21796: LD_INT 6
21798: NEG
21799: PUSH
21800: LD_INT 0
21802: PUSH
21803: EMPTY
21804: LIST
21805: LIST
21806: PUSH
21807: LD_INT 6
21809: NEG
21810: PUSH
21811: LD_INT 1
21813: NEG
21814: PUSH
21815: EMPTY
21816: LIST
21817: LIST
21818: PUSH
21819: EMPTY
21820: LIST
21821: LIST
21822: LIST
21823: LIST
21824: LIST
21825: LIST
21826: LIST
21827: LIST
21828: LIST
21829: LIST
21830: LIST
21831: LIST
21832: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21833: LD_ADDR_VAR 0 34
21837: PUSH
21838: LD_INT 2
21840: NEG
21841: PUSH
21842: LD_INT 3
21844: NEG
21845: PUSH
21846: EMPTY
21847: LIST
21848: LIST
21849: PUSH
21850: LD_INT 3
21852: NEG
21853: PUSH
21854: LD_INT 2
21856: NEG
21857: PUSH
21858: EMPTY
21859: LIST
21860: LIST
21861: PUSH
21862: LD_INT 3
21864: NEG
21865: PUSH
21866: LD_INT 3
21868: NEG
21869: PUSH
21870: EMPTY
21871: LIST
21872: LIST
21873: PUSH
21874: LD_INT 3
21876: NEG
21877: PUSH
21878: LD_INT 4
21880: NEG
21881: PUSH
21882: EMPTY
21883: LIST
21884: LIST
21885: PUSH
21886: LD_INT 4
21888: NEG
21889: PUSH
21890: LD_INT 3
21892: NEG
21893: PUSH
21894: EMPTY
21895: LIST
21896: LIST
21897: PUSH
21898: LD_INT 4
21900: NEG
21901: PUSH
21902: LD_INT 4
21904: NEG
21905: PUSH
21906: EMPTY
21907: LIST
21908: LIST
21909: PUSH
21910: LD_INT 4
21912: NEG
21913: PUSH
21914: LD_INT 5
21916: NEG
21917: PUSH
21918: EMPTY
21919: LIST
21920: LIST
21921: PUSH
21922: LD_INT 5
21924: NEG
21925: PUSH
21926: LD_INT 4
21928: NEG
21929: PUSH
21930: EMPTY
21931: LIST
21932: LIST
21933: PUSH
21934: LD_INT 5
21936: NEG
21937: PUSH
21938: LD_INT 5
21940: NEG
21941: PUSH
21942: EMPTY
21943: LIST
21944: LIST
21945: PUSH
21946: LD_INT 5
21948: NEG
21949: PUSH
21950: LD_INT 6
21952: NEG
21953: PUSH
21954: EMPTY
21955: LIST
21956: LIST
21957: PUSH
21958: LD_INT 6
21960: NEG
21961: PUSH
21962: LD_INT 5
21964: NEG
21965: PUSH
21966: EMPTY
21967: LIST
21968: LIST
21969: PUSH
21970: LD_INT 6
21972: NEG
21973: PUSH
21974: LD_INT 6
21976: NEG
21977: PUSH
21978: EMPTY
21979: LIST
21980: LIST
21981: PUSH
21982: EMPTY
21983: LIST
21984: LIST
21985: LIST
21986: LIST
21987: LIST
21988: LIST
21989: LIST
21990: LIST
21991: LIST
21992: LIST
21993: LIST
21994: LIST
21995: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
21996: LD_ADDR_VAR 0 41
22000: PUSH
22001: LD_INT 0
22003: PUSH
22004: LD_INT 2
22006: NEG
22007: PUSH
22008: EMPTY
22009: LIST
22010: LIST
22011: PUSH
22012: LD_INT 1
22014: NEG
22015: PUSH
22016: LD_INT 3
22018: NEG
22019: PUSH
22020: EMPTY
22021: LIST
22022: LIST
22023: PUSH
22024: LD_INT 1
22026: PUSH
22027: LD_INT 2
22029: NEG
22030: PUSH
22031: EMPTY
22032: LIST
22033: LIST
22034: PUSH
22035: EMPTY
22036: LIST
22037: LIST
22038: LIST
22039: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22040: LD_ADDR_VAR 0 42
22044: PUSH
22045: LD_INT 2
22047: PUSH
22048: LD_INT 0
22050: PUSH
22051: EMPTY
22052: LIST
22053: LIST
22054: PUSH
22055: LD_INT 2
22057: PUSH
22058: LD_INT 1
22060: NEG
22061: PUSH
22062: EMPTY
22063: LIST
22064: LIST
22065: PUSH
22066: LD_INT 3
22068: PUSH
22069: LD_INT 1
22071: PUSH
22072: EMPTY
22073: LIST
22074: LIST
22075: PUSH
22076: EMPTY
22077: LIST
22078: LIST
22079: LIST
22080: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22081: LD_ADDR_VAR 0 43
22085: PUSH
22086: LD_INT 2
22088: PUSH
22089: LD_INT 2
22091: PUSH
22092: EMPTY
22093: LIST
22094: LIST
22095: PUSH
22096: LD_INT 3
22098: PUSH
22099: LD_INT 2
22101: PUSH
22102: EMPTY
22103: LIST
22104: LIST
22105: PUSH
22106: LD_INT 2
22108: PUSH
22109: LD_INT 3
22111: PUSH
22112: EMPTY
22113: LIST
22114: LIST
22115: PUSH
22116: EMPTY
22117: LIST
22118: LIST
22119: LIST
22120: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22121: LD_ADDR_VAR 0 44
22125: PUSH
22126: LD_INT 0
22128: PUSH
22129: LD_INT 2
22131: PUSH
22132: EMPTY
22133: LIST
22134: LIST
22135: PUSH
22136: LD_INT 1
22138: PUSH
22139: LD_INT 3
22141: PUSH
22142: EMPTY
22143: LIST
22144: LIST
22145: PUSH
22146: LD_INT 1
22148: NEG
22149: PUSH
22150: LD_INT 2
22152: PUSH
22153: EMPTY
22154: LIST
22155: LIST
22156: PUSH
22157: EMPTY
22158: LIST
22159: LIST
22160: LIST
22161: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22162: LD_ADDR_VAR 0 45
22166: PUSH
22167: LD_INT 2
22169: NEG
22170: PUSH
22171: LD_INT 0
22173: PUSH
22174: EMPTY
22175: LIST
22176: LIST
22177: PUSH
22178: LD_INT 2
22180: NEG
22181: PUSH
22182: LD_INT 1
22184: PUSH
22185: EMPTY
22186: LIST
22187: LIST
22188: PUSH
22189: LD_INT 3
22191: NEG
22192: PUSH
22193: LD_INT 1
22195: NEG
22196: PUSH
22197: EMPTY
22198: LIST
22199: LIST
22200: PUSH
22201: EMPTY
22202: LIST
22203: LIST
22204: LIST
22205: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22206: LD_ADDR_VAR 0 46
22210: PUSH
22211: LD_INT 2
22213: NEG
22214: PUSH
22215: LD_INT 2
22217: NEG
22218: PUSH
22219: EMPTY
22220: LIST
22221: LIST
22222: PUSH
22223: LD_INT 2
22225: NEG
22226: PUSH
22227: LD_INT 3
22229: NEG
22230: PUSH
22231: EMPTY
22232: LIST
22233: LIST
22234: PUSH
22235: LD_INT 3
22237: NEG
22238: PUSH
22239: LD_INT 2
22241: NEG
22242: PUSH
22243: EMPTY
22244: LIST
22245: LIST
22246: PUSH
22247: EMPTY
22248: LIST
22249: LIST
22250: LIST
22251: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22252: LD_ADDR_VAR 0 47
22256: PUSH
22257: LD_INT 2
22259: NEG
22260: PUSH
22261: LD_INT 3
22263: NEG
22264: PUSH
22265: EMPTY
22266: LIST
22267: LIST
22268: PUSH
22269: LD_INT 1
22271: NEG
22272: PUSH
22273: LD_INT 3
22275: NEG
22276: PUSH
22277: EMPTY
22278: LIST
22279: LIST
22280: PUSH
22281: EMPTY
22282: LIST
22283: LIST
22284: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22285: LD_ADDR_VAR 0 48
22289: PUSH
22290: LD_INT 1
22292: PUSH
22293: LD_INT 2
22295: NEG
22296: PUSH
22297: EMPTY
22298: LIST
22299: LIST
22300: PUSH
22301: LD_INT 2
22303: PUSH
22304: LD_INT 1
22306: NEG
22307: PUSH
22308: EMPTY
22309: LIST
22310: LIST
22311: PUSH
22312: EMPTY
22313: LIST
22314: LIST
22315: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22316: LD_ADDR_VAR 0 49
22320: PUSH
22321: LD_INT 3
22323: PUSH
22324: LD_INT 1
22326: PUSH
22327: EMPTY
22328: LIST
22329: LIST
22330: PUSH
22331: LD_INT 3
22333: PUSH
22334: LD_INT 2
22336: PUSH
22337: EMPTY
22338: LIST
22339: LIST
22340: PUSH
22341: EMPTY
22342: LIST
22343: LIST
22344: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22345: LD_ADDR_VAR 0 50
22349: PUSH
22350: LD_INT 2
22352: PUSH
22353: LD_INT 3
22355: PUSH
22356: EMPTY
22357: LIST
22358: LIST
22359: PUSH
22360: LD_INT 1
22362: PUSH
22363: LD_INT 3
22365: PUSH
22366: EMPTY
22367: LIST
22368: LIST
22369: PUSH
22370: EMPTY
22371: LIST
22372: LIST
22373: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22374: LD_ADDR_VAR 0 51
22378: PUSH
22379: LD_INT 1
22381: NEG
22382: PUSH
22383: LD_INT 2
22385: PUSH
22386: EMPTY
22387: LIST
22388: LIST
22389: PUSH
22390: LD_INT 2
22392: NEG
22393: PUSH
22394: LD_INT 1
22396: PUSH
22397: EMPTY
22398: LIST
22399: LIST
22400: PUSH
22401: EMPTY
22402: LIST
22403: LIST
22404: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22405: LD_ADDR_VAR 0 52
22409: PUSH
22410: LD_INT 3
22412: NEG
22413: PUSH
22414: LD_INT 1
22416: NEG
22417: PUSH
22418: EMPTY
22419: LIST
22420: LIST
22421: PUSH
22422: LD_INT 3
22424: NEG
22425: PUSH
22426: LD_INT 2
22428: NEG
22429: PUSH
22430: EMPTY
22431: LIST
22432: LIST
22433: PUSH
22434: EMPTY
22435: LIST
22436: LIST
22437: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22438: LD_ADDR_VAR 0 53
22442: PUSH
22443: LD_INT 1
22445: NEG
22446: PUSH
22447: LD_INT 3
22449: NEG
22450: PUSH
22451: EMPTY
22452: LIST
22453: LIST
22454: PUSH
22455: LD_INT 0
22457: PUSH
22458: LD_INT 3
22460: NEG
22461: PUSH
22462: EMPTY
22463: LIST
22464: LIST
22465: PUSH
22466: LD_INT 1
22468: PUSH
22469: LD_INT 2
22471: NEG
22472: PUSH
22473: EMPTY
22474: LIST
22475: LIST
22476: PUSH
22477: EMPTY
22478: LIST
22479: LIST
22480: LIST
22481: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22482: LD_ADDR_VAR 0 54
22486: PUSH
22487: LD_INT 2
22489: PUSH
22490: LD_INT 1
22492: NEG
22493: PUSH
22494: EMPTY
22495: LIST
22496: LIST
22497: PUSH
22498: LD_INT 3
22500: PUSH
22501: LD_INT 0
22503: PUSH
22504: EMPTY
22505: LIST
22506: LIST
22507: PUSH
22508: LD_INT 3
22510: PUSH
22511: LD_INT 1
22513: PUSH
22514: EMPTY
22515: LIST
22516: LIST
22517: PUSH
22518: EMPTY
22519: LIST
22520: LIST
22521: LIST
22522: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22523: LD_ADDR_VAR 0 55
22527: PUSH
22528: LD_INT 3
22530: PUSH
22531: LD_INT 2
22533: PUSH
22534: EMPTY
22535: LIST
22536: LIST
22537: PUSH
22538: LD_INT 3
22540: PUSH
22541: LD_INT 3
22543: PUSH
22544: EMPTY
22545: LIST
22546: LIST
22547: PUSH
22548: LD_INT 2
22550: PUSH
22551: LD_INT 3
22553: PUSH
22554: EMPTY
22555: LIST
22556: LIST
22557: PUSH
22558: EMPTY
22559: LIST
22560: LIST
22561: LIST
22562: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22563: LD_ADDR_VAR 0 56
22567: PUSH
22568: LD_INT 1
22570: PUSH
22571: LD_INT 3
22573: PUSH
22574: EMPTY
22575: LIST
22576: LIST
22577: PUSH
22578: LD_INT 0
22580: PUSH
22581: LD_INT 3
22583: PUSH
22584: EMPTY
22585: LIST
22586: LIST
22587: PUSH
22588: LD_INT 1
22590: NEG
22591: PUSH
22592: LD_INT 2
22594: PUSH
22595: EMPTY
22596: LIST
22597: LIST
22598: PUSH
22599: EMPTY
22600: LIST
22601: LIST
22602: LIST
22603: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22604: LD_ADDR_VAR 0 57
22608: PUSH
22609: LD_INT 2
22611: NEG
22612: PUSH
22613: LD_INT 1
22615: PUSH
22616: EMPTY
22617: LIST
22618: LIST
22619: PUSH
22620: LD_INT 3
22622: NEG
22623: PUSH
22624: LD_INT 0
22626: PUSH
22627: EMPTY
22628: LIST
22629: LIST
22630: PUSH
22631: LD_INT 3
22633: NEG
22634: PUSH
22635: LD_INT 1
22637: NEG
22638: PUSH
22639: EMPTY
22640: LIST
22641: LIST
22642: PUSH
22643: EMPTY
22644: LIST
22645: LIST
22646: LIST
22647: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22648: LD_ADDR_VAR 0 58
22652: PUSH
22653: LD_INT 2
22655: NEG
22656: PUSH
22657: LD_INT 3
22659: NEG
22660: PUSH
22661: EMPTY
22662: LIST
22663: LIST
22664: PUSH
22665: LD_INT 3
22667: NEG
22668: PUSH
22669: LD_INT 2
22671: NEG
22672: PUSH
22673: EMPTY
22674: LIST
22675: LIST
22676: PUSH
22677: LD_INT 3
22679: NEG
22680: PUSH
22681: LD_INT 3
22683: NEG
22684: PUSH
22685: EMPTY
22686: LIST
22687: LIST
22688: PUSH
22689: EMPTY
22690: LIST
22691: LIST
22692: LIST
22693: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22694: LD_ADDR_VAR 0 59
22698: PUSH
22699: LD_INT 1
22701: NEG
22702: PUSH
22703: LD_INT 2
22705: NEG
22706: PUSH
22707: EMPTY
22708: LIST
22709: LIST
22710: PUSH
22711: LD_INT 0
22713: PUSH
22714: LD_INT 2
22716: NEG
22717: PUSH
22718: EMPTY
22719: LIST
22720: LIST
22721: PUSH
22722: LD_INT 1
22724: PUSH
22725: LD_INT 1
22727: NEG
22728: PUSH
22729: EMPTY
22730: LIST
22731: LIST
22732: PUSH
22733: EMPTY
22734: LIST
22735: LIST
22736: LIST
22737: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22738: LD_ADDR_VAR 0 60
22742: PUSH
22743: LD_INT 1
22745: PUSH
22746: LD_INT 1
22748: NEG
22749: PUSH
22750: EMPTY
22751: LIST
22752: LIST
22753: PUSH
22754: LD_INT 2
22756: PUSH
22757: LD_INT 0
22759: PUSH
22760: EMPTY
22761: LIST
22762: LIST
22763: PUSH
22764: LD_INT 2
22766: PUSH
22767: LD_INT 1
22769: PUSH
22770: EMPTY
22771: LIST
22772: LIST
22773: PUSH
22774: EMPTY
22775: LIST
22776: LIST
22777: LIST
22778: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22779: LD_ADDR_VAR 0 61
22783: PUSH
22784: LD_INT 2
22786: PUSH
22787: LD_INT 1
22789: PUSH
22790: EMPTY
22791: LIST
22792: LIST
22793: PUSH
22794: LD_INT 2
22796: PUSH
22797: LD_INT 2
22799: PUSH
22800: EMPTY
22801: LIST
22802: LIST
22803: PUSH
22804: LD_INT 1
22806: PUSH
22807: LD_INT 2
22809: PUSH
22810: EMPTY
22811: LIST
22812: LIST
22813: PUSH
22814: EMPTY
22815: LIST
22816: LIST
22817: LIST
22818: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22819: LD_ADDR_VAR 0 62
22823: PUSH
22824: LD_INT 1
22826: PUSH
22827: LD_INT 2
22829: PUSH
22830: EMPTY
22831: LIST
22832: LIST
22833: PUSH
22834: LD_INT 0
22836: PUSH
22837: LD_INT 2
22839: PUSH
22840: EMPTY
22841: LIST
22842: LIST
22843: PUSH
22844: LD_INT 1
22846: NEG
22847: PUSH
22848: LD_INT 1
22850: PUSH
22851: EMPTY
22852: LIST
22853: LIST
22854: PUSH
22855: EMPTY
22856: LIST
22857: LIST
22858: LIST
22859: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22860: LD_ADDR_VAR 0 63
22864: PUSH
22865: LD_INT 1
22867: NEG
22868: PUSH
22869: LD_INT 1
22871: PUSH
22872: EMPTY
22873: LIST
22874: LIST
22875: PUSH
22876: LD_INT 2
22878: NEG
22879: PUSH
22880: LD_INT 0
22882: PUSH
22883: EMPTY
22884: LIST
22885: LIST
22886: PUSH
22887: LD_INT 2
22889: NEG
22890: PUSH
22891: LD_INT 1
22893: NEG
22894: PUSH
22895: EMPTY
22896: LIST
22897: LIST
22898: PUSH
22899: EMPTY
22900: LIST
22901: LIST
22902: LIST
22903: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22904: LD_ADDR_VAR 0 64
22908: PUSH
22909: LD_INT 1
22911: NEG
22912: PUSH
22913: LD_INT 2
22915: NEG
22916: PUSH
22917: EMPTY
22918: LIST
22919: LIST
22920: PUSH
22921: LD_INT 2
22923: NEG
22924: PUSH
22925: LD_INT 1
22927: NEG
22928: PUSH
22929: EMPTY
22930: LIST
22931: LIST
22932: PUSH
22933: LD_INT 2
22935: NEG
22936: PUSH
22937: LD_INT 2
22939: NEG
22940: PUSH
22941: EMPTY
22942: LIST
22943: LIST
22944: PUSH
22945: EMPTY
22946: LIST
22947: LIST
22948: LIST
22949: ST_TO_ADDR
// end ; 2 :
22950: GO 26216
22952: LD_INT 2
22954: DOUBLE
22955: EQUAL
22956: IFTRUE 22960
22958: GO 26215
22960: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
22961: LD_ADDR_VAR 0 29
22965: PUSH
22966: LD_INT 4
22968: PUSH
22969: LD_INT 0
22971: PUSH
22972: EMPTY
22973: LIST
22974: LIST
22975: PUSH
22976: LD_INT 4
22978: PUSH
22979: LD_INT 1
22981: NEG
22982: PUSH
22983: EMPTY
22984: LIST
22985: LIST
22986: PUSH
22987: LD_INT 5
22989: PUSH
22990: LD_INT 0
22992: PUSH
22993: EMPTY
22994: LIST
22995: LIST
22996: PUSH
22997: LD_INT 5
22999: PUSH
23000: LD_INT 1
23002: PUSH
23003: EMPTY
23004: LIST
23005: LIST
23006: PUSH
23007: LD_INT 4
23009: PUSH
23010: LD_INT 1
23012: PUSH
23013: EMPTY
23014: LIST
23015: LIST
23016: PUSH
23017: LD_INT 3
23019: PUSH
23020: LD_INT 0
23022: PUSH
23023: EMPTY
23024: LIST
23025: LIST
23026: PUSH
23027: LD_INT 3
23029: PUSH
23030: LD_INT 1
23032: NEG
23033: PUSH
23034: EMPTY
23035: LIST
23036: LIST
23037: PUSH
23038: LD_INT 3
23040: PUSH
23041: LD_INT 2
23043: NEG
23044: PUSH
23045: EMPTY
23046: LIST
23047: LIST
23048: PUSH
23049: LD_INT 5
23051: PUSH
23052: LD_INT 2
23054: PUSH
23055: EMPTY
23056: LIST
23057: LIST
23058: PUSH
23059: LD_INT 3
23061: PUSH
23062: LD_INT 3
23064: PUSH
23065: EMPTY
23066: LIST
23067: LIST
23068: PUSH
23069: LD_INT 3
23071: PUSH
23072: LD_INT 2
23074: PUSH
23075: EMPTY
23076: LIST
23077: LIST
23078: PUSH
23079: LD_INT 4
23081: PUSH
23082: LD_INT 3
23084: PUSH
23085: EMPTY
23086: LIST
23087: LIST
23088: PUSH
23089: LD_INT 4
23091: PUSH
23092: LD_INT 4
23094: PUSH
23095: EMPTY
23096: LIST
23097: LIST
23098: PUSH
23099: LD_INT 3
23101: PUSH
23102: LD_INT 4
23104: PUSH
23105: EMPTY
23106: LIST
23107: LIST
23108: PUSH
23109: LD_INT 2
23111: PUSH
23112: LD_INT 3
23114: PUSH
23115: EMPTY
23116: LIST
23117: LIST
23118: PUSH
23119: LD_INT 2
23121: PUSH
23122: LD_INT 2
23124: PUSH
23125: EMPTY
23126: LIST
23127: LIST
23128: PUSH
23129: LD_INT 4
23131: PUSH
23132: LD_INT 2
23134: PUSH
23135: EMPTY
23136: LIST
23137: LIST
23138: PUSH
23139: LD_INT 2
23141: PUSH
23142: LD_INT 4
23144: PUSH
23145: EMPTY
23146: LIST
23147: LIST
23148: PUSH
23149: LD_INT 0
23151: PUSH
23152: LD_INT 4
23154: PUSH
23155: EMPTY
23156: LIST
23157: LIST
23158: PUSH
23159: LD_INT 0
23161: PUSH
23162: LD_INT 3
23164: PUSH
23165: EMPTY
23166: LIST
23167: LIST
23168: PUSH
23169: LD_INT 1
23171: PUSH
23172: LD_INT 4
23174: PUSH
23175: EMPTY
23176: LIST
23177: LIST
23178: PUSH
23179: LD_INT 1
23181: PUSH
23182: LD_INT 5
23184: PUSH
23185: EMPTY
23186: LIST
23187: LIST
23188: PUSH
23189: LD_INT 0
23191: PUSH
23192: LD_INT 5
23194: PUSH
23195: EMPTY
23196: LIST
23197: LIST
23198: PUSH
23199: LD_INT 1
23201: NEG
23202: PUSH
23203: LD_INT 4
23205: PUSH
23206: EMPTY
23207: LIST
23208: LIST
23209: PUSH
23210: LD_INT 1
23212: NEG
23213: PUSH
23214: LD_INT 3
23216: PUSH
23217: EMPTY
23218: LIST
23219: LIST
23220: PUSH
23221: LD_INT 2
23223: PUSH
23224: LD_INT 5
23226: PUSH
23227: EMPTY
23228: LIST
23229: LIST
23230: PUSH
23231: LD_INT 2
23233: NEG
23234: PUSH
23235: LD_INT 3
23237: PUSH
23238: EMPTY
23239: LIST
23240: LIST
23241: PUSH
23242: LD_INT 3
23244: NEG
23245: PUSH
23246: LD_INT 0
23248: PUSH
23249: EMPTY
23250: LIST
23251: LIST
23252: PUSH
23253: LD_INT 3
23255: NEG
23256: PUSH
23257: LD_INT 1
23259: NEG
23260: PUSH
23261: EMPTY
23262: LIST
23263: LIST
23264: PUSH
23265: LD_INT 2
23267: NEG
23268: PUSH
23269: LD_INT 0
23271: PUSH
23272: EMPTY
23273: LIST
23274: LIST
23275: PUSH
23276: LD_INT 2
23278: NEG
23279: PUSH
23280: LD_INT 1
23282: PUSH
23283: EMPTY
23284: LIST
23285: LIST
23286: PUSH
23287: LD_INT 3
23289: NEG
23290: PUSH
23291: LD_INT 1
23293: PUSH
23294: EMPTY
23295: LIST
23296: LIST
23297: PUSH
23298: LD_INT 4
23300: NEG
23301: PUSH
23302: LD_INT 0
23304: PUSH
23305: EMPTY
23306: LIST
23307: LIST
23308: PUSH
23309: LD_INT 4
23311: NEG
23312: PUSH
23313: LD_INT 1
23315: NEG
23316: PUSH
23317: EMPTY
23318: LIST
23319: LIST
23320: PUSH
23321: LD_INT 4
23323: NEG
23324: PUSH
23325: LD_INT 2
23327: NEG
23328: PUSH
23329: EMPTY
23330: LIST
23331: LIST
23332: PUSH
23333: LD_INT 2
23335: NEG
23336: PUSH
23337: LD_INT 2
23339: PUSH
23340: EMPTY
23341: LIST
23342: LIST
23343: PUSH
23344: LD_INT 4
23346: NEG
23347: PUSH
23348: LD_INT 4
23350: NEG
23351: PUSH
23352: EMPTY
23353: LIST
23354: LIST
23355: PUSH
23356: LD_INT 4
23358: NEG
23359: PUSH
23360: LD_INT 5
23362: NEG
23363: PUSH
23364: EMPTY
23365: LIST
23366: LIST
23367: PUSH
23368: LD_INT 3
23370: NEG
23371: PUSH
23372: LD_INT 4
23374: NEG
23375: PUSH
23376: EMPTY
23377: LIST
23378: LIST
23379: PUSH
23380: LD_INT 3
23382: NEG
23383: PUSH
23384: LD_INT 3
23386: NEG
23387: PUSH
23388: EMPTY
23389: LIST
23390: LIST
23391: PUSH
23392: LD_INT 4
23394: NEG
23395: PUSH
23396: LD_INT 3
23398: NEG
23399: PUSH
23400: EMPTY
23401: LIST
23402: LIST
23403: PUSH
23404: LD_INT 5
23406: NEG
23407: PUSH
23408: LD_INT 4
23410: NEG
23411: PUSH
23412: EMPTY
23413: LIST
23414: LIST
23415: PUSH
23416: LD_INT 5
23418: NEG
23419: PUSH
23420: LD_INT 5
23422: NEG
23423: PUSH
23424: EMPTY
23425: LIST
23426: LIST
23427: PUSH
23428: LD_INT 3
23430: NEG
23431: PUSH
23432: LD_INT 5
23434: NEG
23435: PUSH
23436: EMPTY
23437: LIST
23438: LIST
23439: PUSH
23440: LD_INT 5
23442: NEG
23443: PUSH
23444: LD_INT 3
23446: NEG
23447: PUSH
23448: EMPTY
23449: LIST
23450: LIST
23451: PUSH
23452: EMPTY
23453: LIST
23454: LIST
23455: LIST
23456: LIST
23457: LIST
23458: LIST
23459: LIST
23460: LIST
23461: LIST
23462: LIST
23463: LIST
23464: LIST
23465: LIST
23466: LIST
23467: LIST
23468: LIST
23469: LIST
23470: LIST
23471: LIST
23472: LIST
23473: LIST
23474: LIST
23475: LIST
23476: LIST
23477: LIST
23478: LIST
23479: LIST
23480: LIST
23481: LIST
23482: LIST
23483: LIST
23484: LIST
23485: LIST
23486: LIST
23487: LIST
23488: LIST
23489: LIST
23490: LIST
23491: LIST
23492: LIST
23493: LIST
23494: LIST
23495: LIST
23496: LIST
23497: LIST
23498: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23499: LD_ADDR_VAR 0 30
23503: PUSH
23504: LD_INT 4
23506: PUSH
23507: LD_INT 4
23509: PUSH
23510: EMPTY
23511: LIST
23512: LIST
23513: PUSH
23514: LD_INT 4
23516: PUSH
23517: LD_INT 3
23519: PUSH
23520: EMPTY
23521: LIST
23522: LIST
23523: PUSH
23524: LD_INT 5
23526: PUSH
23527: LD_INT 4
23529: PUSH
23530: EMPTY
23531: LIST
23532: LIST
23533: PUSH
23534: LD_INT 5
23536: PUSH
23537: LD_INT 5
23539: PUSH
23540: EMPTY
23541: LIST
23542: LIST
23543: PUSH
23544: LD_INT 4
23546: PUSH
23547: LD_INT 5
23549: PUSH
23550: EMPTY
23551: LIST
23552: LIST
23553: PUSH
23554: LD_INT 3
23556: PUSH
23557: LD_INT 4
23559: PUSH
23560: EMPTY
23561: LIST
23562: LIST
23563: PUSH
23564: LD_INT 3
23566: PUSH
23567: LD_INT 3
23569: PUSH
23570: EMPTY
23571: LIST
23572: LIST
23573: PUSH
23574: LD_INT 5
23576: PUSH
23577: LD_INT 3
23579: PUSH
23580: EMPTY
23581: LIST
23582: LIST
23583: PUSH
23584: LD_INT 3
23586: PUSH
23587: LD_INT 5
23589: PUSH
23590: EMPTY
23591: LIST
23592: LIST
23593: PUSH
23594: LD_INT 0
23596: PUSH
23597: LD_INT 3
23599: PUSH
23600: EMPTY
23601: LIST
23602: LIST
23603: PUSH
23604: LD_INT 0
23606: PUSH
23607: LD_INT 2
23609: PUSH
23610: EMPTY
23611: LIST
23612: LIST
23613: PUSH
23614: LD_INT 1
23616: PUSH
23617: LD_INT 3
23619: PUSH
23620: EMPTY
23621: LIST
23622: LIST
23623: PUSH
23624: LD_INT 1
23626: PUSH
23627: LD_INT 4
23629: PUSH
23630: EMPTY
23631: LIST
23632: LIST
23633: PUSH
23634: LD_INT 0
23636: PUSH
23637: LD_INT 4
23639: PUSH
23640: EMPTY
23641: LIST
23642: LIST
23643: PUSH
23644: LD_INT 1
23646: NEG
23647: PUSH
23648: LD_INT 3
23650: PUSH
23651: EMPTY
23652: LIST
23653: LIST
23654: PUSH
23655: LD_INT 1
23657: NEG
23658: PUSH
23659: LD_INT 2
23661: PUSH
23662: EMPTY
23663: LIST
23664: LIST
23665: PUSH
23666: LD_INT 2
23668: PUSH
23669: LD_INT 4
23671: PUSH
23672: EMPTY
23673: LIST
23674: LIST
23675: PUSH
23676: LD_INT 2
23678: NEG
23679: PUSH
23680: LD_INT 2
23682: PUSH
23683: EMPTY
23684: LIST
23685: LIST
23686: PUSH
23687: LD_INT 4
23689: NEG
23690: PUSH
23691: LD_INT 0
23693: PUSH
23694: EMPTY
23695: LIST
23696: LIST
23697: PUSH
23698: LD_INT 4
23700: NEG
23701: PUSH
23702: LD_INT 1
23704: NEG
23705: PUSH
23706: EMPTY
23707: LIST
23708: LIST
23709: PUSH
23710: LD_INT 3
23712: NEG
23713: PUSH
23714: LD_INT 0
23716: PUSH
23717: EMPTY
23718: LIST
23719: LIST
23720: PUSH
23721: LD_INT 3
23723: NEG
23724: PUSH
23725: LD_INT 1
23727: PUSH
23728: EMPTY
23729: LIST
23730: LIST
23731: PUSH
23732: LD_INT 4
23734: NEG
23735: PUSH
23736: LD_INT 1
23738: PUSH
23739: EMPTY
23740: LIST
23741: LIST
23742: PUSH
23743: LD_INT 5
23745: NEG
23746: PUSH
23747: LD_INT 0
23749: PUSH
23750: EMPTY
23751: LIST
23752: LIST
23753: PUSH
23754: LD_INT 5
23756: NEG
23757: PUSH
23758: LD_INT 1
23760: NEG
23761: PUSH
23762: EMPTY
23763: LIST
23764: LIST
23765: PUSH
23766: LD_INT 5
23768: NEG
23769: PUSH
23770: LD_INT 2
23772: NEG
23773: PUSH
23774: EMPTY
23775: LIST
23776: LIST
23777: PUSH
23778: LD_INT 3
23780: NEG
23781: PUSH
23782: LD_INT 2
23784: PUSH
23785: EMPTY
23786: LIST
23787: LIST
23788: PUSH
23789: LD_INT 3
23791: NEG
23792: PUSH
23793: LD_INT 3
23795: NEG
23796: PUSH
23797: EMPTY
23798: LIST
23799: LIST
23800: PUSH
23801: LD_INT 3
23803: NEG
23804: PUSH
23805: LD_INT 4
23807: NEG
23808: PUSH
23809: EMPTY
23810: LIST
23811: LIST
23812: PUSH
23813: LD_INT 2
23815: NEG
23816: PUSH
23817: LD_INT 3
23819: NEG
23820: PUSH
23821: EMPTY
23822: LIST
23823: LIST
23824: PUSH
23825: LD_INT 2
23827: NEG
23828: PUSH
23829: LD_INT 2
23831: NEG
23832: PUSH
23833: EMPTY
23834: LIST
23835: LIST
23836: PUSH
23837: LD_INT 3
23839: NEG
23840: PUSH
23841: LD_INT 2
23843: NEG
23844: PUSH
23845: EMPTY
23846: LIST
23847: LIST
23848: PUSH
23849: LD_INT 4
23851: NEG
23852: PUSH
23853: LD_INT 3
23855: NEG
23856: PUSH
23857: EMPTY
23858: LIST
23859: LIST
23860: PUSH
23861: LD_INT 4
23863: NEG
23864: PUSH
23865: LD_INT 4
23867: NEG
23868: PUSH
23869: EMPTY
23870: LIST
23871: LIST
23872: PUSH
23873: LD_INT 2
23875: NEG
23876: PUSH
23877: LD_INT 4
23879: NEG
23880: PUSH
23881: EMPTY
23882: LIST
23883: LIST
23884: PUSH
23885: LD_INT 4
23887: NEG
23888: PUSH
23889: LD_INT 2
23891: NEG
23892: PUSH
23893: EMPTY
23894: LIST
23895: LIST
23896: PUSH
23897: LD_INT 0
23899: PUSH
23900: LD_INT 4
23902: NEG
23903: PUSH
23904: EMPTY
23905: LIST
23906: LIST
23907: PUSH
23908: LD_INT 0
23910: PUSH
23911: LD_INT 5
23913: NEG
23914: PUSH
23915: EMPTY
23916: LIST
23917: LIST
23918: PUSH
23919: LD_INT 1
23921: PUSH
23922: LD_INT 4
23924: NEG
23925: PUSH
23926: EMPTY
23927: LIST
23928: LIST
23929: PUSH
23930: LD_INT 1
23932: PUSH
23933: LD_INT 3
23935: NEG
23936: PUSH
23937: EMPTY
23938: LIST
23939: LIST
23940: PUSH
23941: LD_INT 0
23943: PUSH
23944: LD_INT 3
23946: NEG
23947: PUSH
23948: EMPTY
23949: LIST
23950: LIST
23951: PUSH
23952: LD_INT 1
23954: NEG
23955: PUSH
23956: LD_INT 4
23958: NEG
23959: PUSH
23960: EMPTY
23961: LIST
23962: LIST
23963: PUSH
23964: LD_INT 1
23966: NEG
23967: PUSH
23968: LD_INT 5
23970: NEG
23971: PUSH
23972: EMPTY
23973: LIST
23974: LIST
23975: PUSH
23976: LD_INT 2
23978: PUSH
23979: LD_INT 3
23981: NEG
23982: PUSH
23983: EMPTY
23984: LIST
23985: LIST
23986: PUSH
23987: LD_INT 2
23989: NEG
23990: PUSH
23991: LD_INT 5
23993: NEG
23994: PUSH
23995: EMPTY
23996: LIST
23997: LIST
23998: PUSH
23999: EMPTY
24000: LIST
24001: LIST
24002: LIST
24003: LIST
24004: LIST
24005: LIST
24006: LIST
24007: LIST
24008: LIST
24009: LIST
24010: LIST
24011: LIST
24012: LIST
24013: LIST
24014: LIST
24015: LIST
24016: LIST
24017: LIST
24018: LIST
24019: LIST
24020: LIST
24021: LIST
24022: LIST
24023: LIST
24024: LIST
24025: LIST
24026: LIST
24027: LIST
24028: LIST
24029: LIST
24030: LIST
24031: LIST
24032: LIST
24033: LIST
24034: LIST
24035: LIST
24036: LIST
24037: LIST
24038: LIST
24039: LIST
24040: LIST
24041: LIST
24042: LIST
24043: LIST
24044: LIST
24045: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24046: LD_ADDR_VAR 0 31
24050: PUSH
24051: LD_INT 0
24053: PUSH
24054: LD_INT 4
24056: PUSH
24057: EMPTY
24058: LIST
24059: LIST
24060: PUSH
24061: LD_INT 0
24063: PUSH
24064: LD_INT 3
24066: PUSH
24067: EMPTY
24068: LIST
24069: LIST
24070: PUSH
24071: LD_INT 1
24073: PUSH
24074: LD_INT 4
24076: PUSH
24077: EMPTY
24078: LIST
24079: LIST
24080: PUSH
24081: LD_INT 1
24083: PUSH
24084: LD_INT 5
24086: PUSH
24087: EMPTY
24088: LIST
24089: LIST
24090: PUSH
24091: LD_INT 0
24093: PUSH
24094: LD_INT 5
24096: PUSH
24097: EMPTY
24098: LIST
24099: LIST
24100: PUSH
24101: LD_INT 1
24103: NEG
24104: PUSH
24105: LD_INT 4
24107: PUSH
24108: EMPTY
24109: LIST
24110: LIST
24111: PUSH
24112: LD_INT 1
24114: NEG
24115: PUSH
24116: LD_INT 3
24118: PUSH
24119: EMPTY
24120: LIST
24121: LIST
24122: PUSH
24123: LD_INT 2
24125: PUSH
24126: LD_INT 5
24128: PUSH
24129: EMPTY
24130: LIST
24131: LIST
24132: PUSH
24133: LD_INT 2
24135: NEG
24136: PUSH
24137: LD_INT 3
24139: PUSH
24140: EMPTY
24141: LIST
24142: LIST
24143: PUSH
24144: LD_INT 3
24146: NEG
24147: PUSH
24148: LD_INT 0
24150: PUSH
24151: EMPTY
24152: LIST
24153: LIST
24154: PUSH
24155: LD_INT 3
24157: NEG
24158: PUSH
24159: LD_INT 1
24161: NEG
24162: PUSH
24163: EMPTY
24164: LIST
24165: LIST
24166: PUSH
24167: LD_INT 2
24169: NEG
24170: PUSH
24171: LD_INT 0
24173: PUSH
24174: EMPTY
24175: LIST
24176: LIST
24177: PUSH
24178: LD_INT 2
24180: NEG
24181: PUSH
24182: LD_INT 1
24184: PUSH
24185: EMPTY
24186: LIST
24187: LIST
24188: PUSH
24189: LD_INT 3
24191: NEG
24192: PUSH
24193: LD_INT 1
24195: PUSH
24196: EMPTY
24197: LIST
24198: LIST
24199: PUSH
24200: LD_INT 4
24202: NEG
24203: PUSH
24204: LD_INT 0
24206: PUSH
24207: EMPTY
24208: LIST
24209: LIST
24210: PUSH
24211: LD_INT 4
24213: NEG
24214: PUSH
24215: LD_INT 1
24217: NEG
24218: PUSH
24219: EMPTY
24220: LIST
24221: LIST
24222: PUSH
24223: LD_INT 4
24225: NEG
24226: PUSH
24227: LD_INT 2
24229: NEG
24230: PUSH
24231: EMPTY
24232: LIST
24233: LIST
24234: PUSH
24235: LD_INT 2
24237: NEG
24238: PUSH
24239: LD_INT 2
24241: PUSH
24242: EMPTY
24243: LIST
24244: LIST
24245: PUSH
24246: LD_INT 4
24248: NEG
24249: PUSH
24250: LD_INT 4
24252: NEG
24253: PUSH
24254: EMPTY
24255: LIST
24256: LIST
24257: PUSH
24258: LD_INT 4
24260: NEG
24261: PUSH
24262: LD_INT 5
24264: NEG
24265: PUSH
24266: EMPTY
24267: LIST
24268: LIST
24269: PUSH
24270: LD_INT 3
24272: NEG
24273: PUSH
24274: LD_INT 4
24276: NEG
24277: PUSH
24278: EMPTY
24279: LIST
24280: LIST
24281: PUSH
24282: LD_INT 3
24284: NEG
24285: PUSH
24286: LD_INT 3
24288: NEG
24289: PUSH
24290: EMPTY
24291: LIST
24292: LIST
24293: PUSH
24294: LD_INT 4
24296: NEG
24297: PUSH
24298: LD_INT 3
24300: NEG
24301: PUSH
24302: EMPTY
24303: LIST
24304: LIST
24305: PUSH
24306: LD_INT 5
24308: NEG
24309: PUSH
24310: LD_INT 4
24312: NEG
24313: PUSH
24314: EMPTY
24315: LIST
24316: LIST
24317: PUSH
24318: LD_INT 5
24320: NEG
24321: PUSH
24322: LD_INT 5
24324: NEG
24325: PUSH
24326: EMPTY
24327: LIST
24328: LIST
24329: PUSH
24330: LD_INT 3
24332: NEG
24333: PUSH
24334: LD_INT 5
24336: NEG
24337: PUSH
24338: EMPTY
24339: LIST
24340: LIST
24341: PUSH
24342: LD_INT 5
24344: NEG
24345: PUSH
24346: LD_INT 3
24348: NEG
24349: PUSH
24350: EMPTY
24351: LIST
24352: LIST
24353: PUSH
24354: LD_INT 0
24356: PUSH
24357: LD_INT 3
24359: NEG
24360: PUSH
24361: EMPTY
24362: LIST
24363: LIST
24364: PUSH
24365: LD_INT 0
24367: PUSH
24368: LD_INT 4
24370: NEG
24371: PUSH
24372: EMPTY
24373: LIST
24374: LIST
24375: PUSH
24376: LD_INT 1
24378: PUSH
24379: LD_INT 3
24381: NEG
24382: PUSH
24383: EMPTY
24384: LIST
24385: LIST
24386: PUSH
24387: LD_INT 1
24389: PUSH
24390: LD_INT 2
24392: NEG
24393: PUSH
24394: EMPTY
24395: LIST
24396: LIST
24397: PUSH
24398: LD_INT 0
24400: PUSH
24401: LD_INT 2
24403: NEG
24404: PUSH
24405: EMPTY
24406: LIST
24407: LIST
24408: PUSH
24409: LD_INT 1
24411: NEG
24412: PUSH
24413: LD_INT 3
24415: NEG
24416: PUSH
24417: EMPTY
24418: LIST
24419: LIST
24420: PUSH
24421: LD_INT 1
24423: NEG
24424: PUSH
24425: LD_INT 4
24427: NEG
24428: PUSH
24429: EMPTY
24430: LIST
24431: LIST
24432: PUSH
24433: LD_INT 2
24435: PUSH
24436: LD_INT 2
24438: NEG
24439: PUSH
24440: EMPTY
24441: LIST
24442: LIST
24443: PUSH
24444: LD_INT 2
24446: NEG
24447: PUSH
24448: LD_INT 4
24450: NEG
24451: PUSH
24452: EMPTY
24453: LIST
24454: LIST
24455: PUSH
24456: LD_INT 4
24458: PUSH
24459: LD_INT 0
24461: PUSH
24462: EMPTY
24463: LIST
24464: LIST
24465: PUSH
24466: LD_INT 4
24468: PUSH
24469: LD_INT 1
24471: NEG
24472: PUSH
24473: EMPTY
24474: LIST
24475: LIST
24476: PUSH
24477: LD_INT 5
24479: PUSH
24480: LD_INT 0
24482: PUSH
24483: EMPTY
24484: LIST
24485: LIST
24486: PUSH
24487: LD_INT 5
24489: PUSH
24490: LD_INT 1
24492: PUSH
24493: EMPTY
24494: LIST
24495: LIST
24496: PUSH
24497: LD_INT 4
24499: PUSH
24500: LD_INT 1
24502: PUSH
24503: EMPTY
24504: LIST
24505: LIST
24506: PUSH
24507: LD_INT 3
24509: PUSH
24510: LD_INT 0
24512: PUSH
24513: EMPTY
24514: LIST
24515: LIST
24516: PUSH
24517: LD_INT 3
24519: PUSH
24520: LD_INT 1
24522: NEG
24523: PUSH
24524: EMPTY
24525: LIST
24526: LIST
24527: PUSH
24528: LD_INT 3
24530: PUSH
24531: LD_INT 2
24533: NEG
24534: PUSH
24535: EMPTY
24536: LIST
24537: LIST
24538: PUSH
24539: LD_INT 5
24541: PUSH
24542: LD_INT 2
24544: PUSH
24545: EMPTY
24546: LIST
24547: LIST
24548: PUSH
24549: EMPTY
24550: LIST
24551: LIST
24552: LIST
24553: LIST
24554: LIST
24555: LIST
24556: LIST
24557: LIST
24558: LIST
24559: LIST
24560: LIST
24561: LIST
24562: LIST
24563: LIST
24564: LIST
24565: LIST
24566: LIST
24567: LIST
24568: LIST
24569: LIST
24570: LIST
24571: LIST
24572: LIST
24573: LIST
24574: LIST
24575: LIST
24576: LIST
24577: LIST
24578: LIST
24579: LIST
24580: LIST
24581: LIST
24582: LIST
24583: LIST
24584: LIST
24585: LIST
24586: LIST
24587: LIST
24588: LIST
24589: LIST
24590: LIST
24591: LIST
24592: LIST
24593: LIST
24594: LIST
24595: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24596: LD_ADDR_VAR 0 32
24600: PUSH
24601: LD_INT 4
24603: NEG
24604: PUSH
24605: LD_INT 0
24607: PUSH
24608: EMPTY
24609: LIST
24610: LIST
24611: PUSH
24612: LD_INT 4
24614: NEG
24615: PUSH
24616: LD_INT 1
24618: NEG
24619: PUSH
24620: EMPTY
24621: LIST
24622: LIST
24623: PUSH
24624: LD_INT 3
24626: NEG
24627: PUSH
24628: LD_INT 0
24630: PUSH
24631: EMPTY
24632: LIST
24633: LIST
24634: PUSH
24635: LD_INT 3
24637: NEG
24638: PUSH
24639: LD_INT 1
24641: PUSH
24642: EMPTY
24643: LIST
24644: LIST
24645: PUSH
24646: LD_INT 4
24648: NEG
24649: PUSH
24650: LD_INT 1
24652: PUSH
24653: EMPTY
24654: LIST
24655: LIST
24656: PUSH
24657: LD_INT 5
24659: NEG
24660: PUSH
24661: LD_INT 0
24663: PUSH
24664: EMPTY
24665: LIST
24666: LIST
24667: PUSH
24668: LD_INT 5
24670: NEG
24671: PUSH
24672: LD_INT 1
24674: NEG
24675: PUSH
24676: EMPTY
24677: LIST
24678: LIST
24679: PUSH
24680: LD_INT 5
24682: NEG
24683: PUSH
24684: LD_INT 2
24686: NEG
24687: PUSH
24688: EMPTY
24689: LIST
24690: LIST
24691: PUSH
24692: LD_INT 3
24694: NEG
24695: PUSH
24696: LD_INT 2
24698: PUSH
24699: EMPTY
24700: LIST
24701: LIST
24702: PUSH
24703: LD_INT 3
24705: NEG
24706: PUSH
24707: LD_INT 3
24709: NEG
24710: PUSH
24711: EMPTY
24712: LIST
24713: LIST
24714: PUSH
24715: LD_INT 3
24717: NEG
24718: PUSH
24719: LD_INT 4
24721: NEG
24722: PUSH
24723: EMPTY
24724: LIST
24725: LIST
24726: PUSH
24727: LD_INT 2
24729: NEG
24730: PUSH
24731: LD_INT 3
24733: NEG
24734: PUSH
24735: EMPTY
24736: LIST
24737: LIST
24738: PUSH
24739: LD_INT 2
24741: NEG
24742: PUSH
24743: LD_INT 2
24745: NEG
24746: PUSH
24747: EMPTY
24748: LIST
24749: LIST
24750: PUSH
24751: LD_INT 3
24753: NEG
24754: PUSH
24755: LD_INT 2
24757: NEG
24758: PUSH
24759: EMPTY
24760: LIST
24761: LIST
24762: PUSH
24763: LD_INT 4
24765: NEG
24766: PUSH
24767: LD_INT 3
24769: NEG
24770: PUSH
24771: EMPTY
24772: LIST
24773: LIST
24774: PUSH
24775: LD_INT 4
24777: NEG
24778: PUSH
24779: LD_INT 4
24781: NEG
24782: PUSH
24783: EMPTY
24784: LIST
24785: LIST
24786: PUSH
24787: LD_INT 2
24789: NEG
24790: PUSH
24791: LD_INT 4
24793: NEG
24794: PUSH
24795: EMPTY
24796: LIST
24797: LIST
24798: PUSH
24799: LD_INT 4
24801: NEG
24802: PUSH
24803: LD_INT 2
24805: NEG
24806: PUSH
24807: EMPTY
24808: LIST
24809: LIST
24810: PUSH
24811: LD_INT 0
24813: PUSH
24814: LD_INT 4
24816: NEG
24817: PUSH
24818: EMPTY
24819: LIST
24820: LIST
24821: PUSH
24822: LD_INT 0
24824: PUSH
24825: LD_INT 5
24827: NEG
24828: PUSH
24829: EMPTY
24830: LIST
24831: LIST
24832: PUSH
24833: LD_INT 1
24835: PUSH
24836: LD_INT 4
24838: NEG
24839: PUSH
24840: EMPTY
24841: LIST
24842: LIST
24843: PUSH
24844: LD_INT 1
24846: PUSH
24847: LD_INT 3
24849: NEG
24850: PUSH
24851: EMPTY
24852: LIST
24853: LIST
24854: PUSH
24855: LD_INT 0
24857: PUSH
24858: LD_INT 3
24860: NEG
24861: PUSH
24862: EMPTY
24863: LIST
24864: LIST
24865: PUSH
24866: LD_INT 1
24868: NEG
24869: PUSH
24870: LD_INT 4
24872: NEG
24873: PUSH
24874: EMPTY
24875: LIST
24876: LIST
24877: PUSH
24878: LD_INT 1
24880: NEG
24881: PUSH
24882: LD_INT 5
24884: NEG
24885: PUSH
24886: EMPTY
24887: LIST
24888: LIST
24889: PUSH
24890: LD_INT 2
24892: PUSH
24893: LD_INT 3
24895: NEG
24896: PUSH
24897: EMPTY
24898: LIST
24899: LIST
24900: PUSH
24901: LD_INT 2
24903: NEG
24904: PUSH
24905: LD_INT 5
24907: NEG
24908: PUSH
24909: EMPTY
24910: LIST
24911: LIST
24912: PUSH
24913: LD_INT 3
24915: PUSH
24916: LD_INT 0
24918: PUSH
24919: EMPTY
24920: LIST
24921: LIST
24922: PUSH
24923: LD_INT 3
24925: PUSH
24926: LD_INT 1
24928: NEG
24929: PUSH
24930: EMPTY
24931: LIST
24932: LIST
24933: PUSH
24934: LD_INT 4
24936: PUSH
24937: LD_INT 0
24939: PUSH
24940: EMPTY
24941: LIST
24942: LIST
24943: PUSH
24944: LD_INT 4
24946: PUSH
24947: LD_INT 1
24949: PUSH
24950: EMPTY
24951: LIST
24952: LIST
24953: PUSH
24954: LD_INT 3
24956: PUSH
24957: LD_INT 1
24959: PUSH
24960: EMPTY
24961: LIST
24962: LIST
24963: PUSH
24964: LD_INT 2
24966: PUSH
24967: LD_INT 0
24969: PUSH
24970: EMPTY
24971: LIST
24972: LIST
24973: PUSH
24974: LD_INT 2
24976: PUSH
24977: LD_INT 1
24979: NEG
24980: PUSH
24981: EMPTY
24982: LIST
24983: LIST
24984: PUSH
24985: LD_INT 2
24987: PUSH
24988: LD_INT 2
24990: NEG
24991: PUSH
24992: EMPTY
24993: LIST
24994: LIST
24995: PUSH
24996: LD_INT 4
24998: PUSH
24999: LD_INT 2
25001: PUSH
25002: EMPTY
25003: LIST
25004: LIST
25005: PUSH
25006: LD_INT 4
25008: PUSH
25009: LD_INT 4
25011: PUSH
25012: EMPTY
25013: LIST
25014: LIST
25015: PUSH
25016: LD_INT 4
25018: PUSH
25019: LD_INT 3
25021: PUSH
25022: EMPTY
25023: LIST
25024: LIST
25025: PUSH
25026: LD_INT 5
25028: PUSH
25029: LD_INT 4
25031: PUSH
25032: EMPTY
25033: LIST
25034: LIST
25035: PUSH
25036: LD_INT 5
25038: PUSH
25039: LD_INT 5
25041: PUSH
25042: EMPTY
25043: LIST
25044: LIST
25045: PUSH
25046: LD_INT 4
25048: PUSH
25049: LD_INT 5
25051: PUSH
25052: EMPTY
25053: LIST
25054: LIST
25055: PUSH
25056: LD_INT 3
25058: PUSH
25059: LD_INT 4
25061: PUSH
25062: EMPTY
25063: LIST
25064: LIST
25065: PUSH
25066: LD_INT 3
25068: PUSH
25069: LD_INT 3
25071: PUSH
25072: EMPTY
25073: LIST
25074: LIST
25075: PUSH
25076: LD_INT 5
25078: PUSH
25079: LD_INT 3
25081: PUSH
25082: EMPTY
25083: LIST
25084: LIST
25085: PUSH
25086: LD_INT 3
25088: PUSH
25089: LD_INT 5
25091: PUSH
25092: EMPTY
25093: LIST
25094: LIST
25095: PUSH
25096: EMPTY
25097: LIST
25098: LIST
25099: LIST
25100: LIST
25101: LIST
25102: LIST
25103: LIST
25104: LIST
25105: LIST
25106: LIST
25107: LIST
25108: LIST
25109: LIST
25110: LIST
25111: LIST
25112: LIST
25113: LIST
25114: LIST
25115: LIST
25116: LIST
25117: LIST
25118: LIST
25119: LIST
25120: LIST
25121: LIST
25122: LIST
25123: LIST
25124: LIST
25125: LIST
25126: LIST
25127: LIST
25128: LIST
25129: LIST
25130: LIST
25131: LIST
25132: LIST
25133: LIST
25134: LIST
25135: LIST
25136: LIST
25137: LIST
25138: LIST
25139: LIST
25140: LIST
25141: LIST
25142: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25143: LD_ADDR_VAR 0 33
25147: PUSH
25148: LD_INT 4
25150: NEG
25151: PUSH
25152: LD_INT 4
25154: NEG
25155: PUSH
25156: EMPTY
25157: LIST
25158: LIST
25159: PUSH
25160: LD_INT 4
25162: NEG
25163: PUSH
25164: LD_INT 5
25166: NEG
25167: PUSH
25168: EMPTY
25169: LIST
25170: LIST
25171: PUSH
25172: LD_INT 3
25174: NEG
25175: PUSH
25176: LD_INT 4
25178: NEG
25179: PUSH
25180: EMPTY
25181: LIST
25182: LIST
25183: PUSH
25184: LD_INT 3
25186: NEG
25187: PUSH
25188: LD_INT 3
25190: NEG
25191: PUSH
25192: EMPTY
25193: LIST
25194: LIST
25195: PUSH
25196: LD_INT 4
25198: NEG
25199: PUSH
25200: LD_INT 3
25202: NEG
25203: PUSH
25204: EMPTY
25205: LIST
25206: LIST
25207: PUSH
25208: LD_INT 5
25210: NEG
25211: PUSH
25212: LD_INT 4
25214: NEG
25215: PUSH
25216: EMPTY
25217: LIST
25218: LIST
25219: PUSH
25220: LD_INT 5
25222: NEG
25223: PUSH
25224: LD_INT 5
25226: NEG
25227: PUSH
25228: EMPTY
25229: LIST
25230: LIST
25231: PUSH
25232: LD_INT 3
25234: NEG
25235: PUSH
25236: LD_INT 5
25238: NEG
25239: PUSH
25240: EMPTY
25241: LIST
25242: LIST
25243: PUSH
25244: LD_INT 5
25246: NEG
25247: PUSH
25248: LD_INT 3
25250: NEG
25251: PUSH
25252: EMPTY
25253: LIST
25254: LIST
25255: PUSH
25256: LD_INT 0
25258: PUSH
25259: LD_INT 3
25261: NEG
25262: PUSH
25263: EMPTY
25264: LIST
25265: LIST
25266: PUSH
25267: LD_INT 0
25269: PUSH
25270: LD_INT 4
25272: NEG
25273: PUSH
25274: EMPTY
25275: LIST
25276: LIST
25277: PUSH
25278: LD_INT 1
25280: PUSH
25281: LD_INT 3
25283: NEG
25284: PUSH
25285: EMPTY
25286: LIST
25287: LIST
25288: PUSH
25289: LD_INT 1
25291: PUSH
25292: LD_INT 2
25294: NEG
25295: PUSH
25296: EMPTY
25297: LIST
25298: LIST
25299: PUSH
25300: LD_INT 0
25302: PUSH
25303: LD_INT 2
25305: NEG
25306: PUSH
25307: EMPTY
25308: LIST
25309: LIST
25310: PUSH
25311: LD_INT 1
25313: NEG
25314: PUSH
25315: LD_INT 3
25317: NEG
25318: PUSH
25319: EMPTY
25320: LIST
25321: LIST
25322: PUSH
25323: LD_INT 1
25325: NEG
25326: PUSH
25327: LD_INT 4
25329: NEG
25330: PUSH
25331: EMPTY
25332: LIST
25333: LIST
25334: PUSH
25335: LD_INT 2
25337: PUSH
25338: LD_INT 2
25340: NEG
25341: PUSH
25342: EMPTY
25343: LIST
25344: LIST
25345: PUSH
25346: LD_INT 2
25348: NEG
25349: PUSH
25350: LD_INT 4
25352: NEG
25353: PUSH
25354: EMPTY
25355: LIST
25356: LIST
25357: PUSH
25358: LD_INT 4
25360: PUSH
25361: LD_INT 0
25363: PUSH
25364: EMPTY
25365: LIST
25366: LIST
25367: PUSH
25368: LD_INT 4
25370: PUSH
25371: LD_INT 1
25373: NEG
25374: PUSH
25375: EMPTY
25376: LIST
25377: LIST
25378: PUSH
25379: LD_INT 5
25381: PUSH
25382: LD_INT 0
25384: PUSH
25385: EMPTY
25386: LIST
25387: LIST
25388: PUSH
25389: LD_INT 5
25391: PUSH
25392: LD_INT 1
25394: PUSH
25395: EMPTY
25396: LIST
25397: LIST
25398: PUSH
25399: LD_INT 4
25401: PUSH
25402: LD_INT 1
25404: PUSH
25405: EMPTY
25406: LIST
25407: LIST
25408: PUSH
25409: LD_INT 3
25411: PUSH
25412: LD_INT 0
25414: PUSH
25415: EMPTY
25416: LIST
25417: LIST
25418: PUSH
25419: LD_INT 3
25421: PUSH
25422: LD_INT 1
25424: NEG
25425: PUSH
25426: EMPTY
25427: LIST
25428: LIST
25429: PUSH
25430: LD_INT 3
25432: PUSH
25433: LD_INT 2
25435: NEG
25436: PUSH
25437: EMPTY
25438: LIST
25439: LIST
25440: PUSH
25441: LD_INT 5
25443: PUSH
25444: LD_INT 2
25446: PUSH
25447: EMPTY
25448: LIST
25449: LIST
25450: PUSH
25451: LD_INT 3
25453: PUSH
25454: LD_INT 3
25456: PUSH
25457: EMPTY
25458: LIST
25459: LIST
25460: PUSH
25461: LD_INT 3
25463: PUSH
25464: LD_INT 2
25466: PUSH
25467: EMPTY
25468: LIST
25469: LIST
25470: PUSH
25471: LD_INT 4
25473: PUSH
25474: LD_INT 3
25476: PUSH
25477: EMPTY
25478: LIST
25479: LIST
25480: PUSH
25481: LD_INT 4
25483: PUSH
25484: LD_INT 4
25486: PUSH
25487: EMPTY
25488: LIST
25489: LIST
25490: PUSH
25491: LD_INT 3
25493: PUSH
25494: LD_INT 4
25496: PUSH
25497: EMPTY
25498: LIST
25499: LIST
25500: PUSH
25501: LD_INT 2
25503: PUSH
25504: LD_INT 3
25506: PUSH
25507: EMPTY
25508: LIST
25509: LIST
25510: PUSH
25511: LD_INT 2
25513: PUSH
25514: LD_INT 2
25516: PUSH
25517: EMPTY
25518: LIST
25519: LIST
25520: PUSH
25521: LD_INT 4
25523: PUSH
25524: LD_INT 2
25526: PUSH
25527: EMPTY
25528: LIST
25529: LIST
25530: PUSH
25531: LD_INT 2
25533: PUSH
25534: LD_INT 4
25536: PUSH
25537: EMPTY
25538: LIST
25539: LIST
25540: PUSH
25541: LD_INT 0
25543: PUSH
25544: LD_INT 4
25546: PUSH
25547: EMPTY
25548: LIST
25549: LIST
25550: PUSH
25551: LD_INT 0
25553: PUSH
25554: LD_INT 3
25556: PUSH
25557: EMPTY
25558: LIST
25559: LIST
25560: PUSH
25561: LD_INT 1
25563: PUSH
25564: LD_INT 4
25566: PUSH
25567: EMPTY
25568: LIST
25569: LIST
25570: PUSH
25571: LD_INT 1
25573: PUSH
25574: LD_INT 5
25576: PUSH
25577: EMPTY
25578: LIST
25579: LIST
25580: PUSH
25581: LD_INT 0
25583: PUSH
25584: LD_INT 5
25586: PUSH
25587: EMPTY
25588: LIST
25589: LIST
25590: PUSH
25591: LD_INT 1
25593: NEG
25594: PUSH
25595: LD_INT 4
25597: PUSH
25598: EMPTY
25599: LIST
25600: LIST
25601: PUSH
25602: LD_INT 1
25604: NEG
25605: PUSH
25606: LD_INT 3
25608: PUSH
25609: EMPTY
25610: LIST
25611: LIST
25612: PUSH
25613: LD_INT 2
25615: PUSH
25616: LD_INT 5
25618: PUSH
25619: EMPTY
25620: LIST
25621: LIST
25622: PUSH
25623: LD_INT 2
25625: NEG
25626: PUSH
25627: LD_INT 3
25629: PUSH
25630: EMPTY
25631: LIST
25632: LIST
25633: PUSH
25634: EMPTY
25635: LIST
25636: LIST
25637: LIST
25638: LIST
25639: LIST
25640: LIST
25641: LIST
25642: LIST
25643: LIST
25644: LIST
25645: LIST
25646: LIST
25647: LIST
25648: LIST
25649: LIST
25650: LIST
25651: LIST
25652: LIST
25653: LIST
25654: LIST
25655: LIST
25656: LIST
25657: LIST
25658: LIST
25659: LIST
25660: LIST
25661: LIST
25662: LIST
25663: LIST
25664: LIST
25665: LIST
25666: LIST
25667: LIST
25668: LIST
25669: LIST
25670: LIST
25671: LIST
25672: LIST
25673: LIST
25674: LIST
25675: LIST
25676: LIST
25677: LIST
25678: LIST
25679: LIST
25680: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25681: LD_ADDR_VAR 0 34
25685: PUSH
25686: LD_INT 0
25688: PUSH
25689: LD_INT 4
25691: NEG
25692: PUSH
25693: EMPTY
25694: LIST
25695: LIST
25696: PUSH
25697: LD_INT 0
25699: PUSH
25700: LD_INT 5
25702: NEG
25703: PUSH
25704: EMPTY
25705: LIST
25706: LIST
25707: PUSH
25708: LD_INT 1
25710: PUSH
25711: LD_INT 4
25713: NEG
25714: PUSH
25715: EMPTY
25716: LIST
25717: LIST
25718: PUSH
25719: LD_INT 1
25721: PUSH
25722: LD_INT 3
25724: NEG
25725: PUSH
25726: EMPTY
25727: LIST
25728: LIST
25729: PUSH
25730: LD_INT 0
25732: PUSH
25733: LD_INT 3
25735: NEG
25736: PUSH
25737: EMPTY
25738: LIST
25739: LIST
25740: PUSH
25741: LD_INT 1
25743: NEG
25744: PUSH
25745: LD_INT 4
25747: NEG
25748: PUSH
25749: EMPTY
25750: LIST
25751: LIST
25752: PUSH
25753: LD_INT 1
25755: NEG
25756: PUSH
25757: LD_INT 5
25759: NEG
25760: PUSH
25761: EMPTY
25762: LIST
25763: LIST
25764: PUSH
25765: LD_INT 2
25767: PUSH
25768: LD_INT 3
25770: NEG
25771: PUSH
25772: EMPTY
25773: LIST
25774: LIST
25775: PUSH
25776: LD_INT 2
25778: NEG
25779: PUSH
25780: LD_INT 5
25782: NEG
25783: PUSH
25784: EMPTY
25785: LIST
25786: LIST
25787: PUSH
25788: LD_INT 3
25790: PUSH
25791: LD_INT 0
25793: PUSH
25794: EMPTY
25795: LIST
25796: LIST
25797: PUSH
25798: LD_INT 3
25800: PUSH
25801: LD_INT 1
25803: NEG
25804: PUSH
25805: EMPTY
25806: LIST
25807: LIST
25808: PUSH
25809: LD_INT 4
25811: PUSH
25812: LD_INT 0
25814: PUSH
25815: EMPTY
25816: LIST
25817: LIST
25818: PUSH
25819: LD_INT 4
25821: PUSH
25822: LD_INT 1
25824: PUSH
25825: EMPTY
25826: LIST
25827: LIST
25828: PUSH
25829: LD_INT 3
25831: PUSH
25832: LD_INT 1
25834: PUSH
25835: EMPTY
25836: LIST
25837: LIST
25838: PUSH
25839: LD_INT 2
25841: PUSH
25842: LD_INT 0
25844: PUSH
25845: EMPTY
25846: LIST
25847: LIST
25848: PUSH
25849: LD_INT 2
25851: PUSH
25852: LD_INT 1
25854: NEG
25855: PUSH
25856: EMPTY
25857: LIST
25858: LIST
25859: PUSH
25860: LD_INT 2
25862: PUSH
25863: LD_INT 2
25865: NEG
25866: PUSH
25867: EMPTY
25868: LIST
25869: LIST
25870: PUSH
25871: LD_INT 4
25873: PUSH
25874: LD_INT 2
25876: PUSH
25877: EMPTY
25878: LIST
25879: LIST
25880: PUSH
25881: LD_INT 4
25883: PUSH
25884: LD_INT 4
25886: PUSH
25887: EMPTY
25888: LIST
25889: LIST
25890: PUSH
25891: LD_INT 4
25893: PUSH
25894: LD_INT 3
25896: PUSH
25897: EMPTY
25898: LIST
25899: LIST
25900: PUSH
25901: LD_INT 5
25903: PUSH
25904: LD_INT 4
25906: PUSH
25907: EMPTY
25908: LIST
25909: LIST
25910: PUSH
25911: LD_INT 5
25913: PUSH
25914: LD_INT 5
25916: PUSH
25917: EMPTY
25918: LIST
25919: LIST
25920: PUSH
25921: LD_INT 4
25923: PUSH
25924: LD_INT 5
25926: PUSH
25927: EMPTY
25928: LIST
25929: LIST
25930: PUSH
25931: LD_INT 3
25933: PUSH
25934: LD_INT 4
25936: PUSH
25937: EMPTY
25938: LIST
25939: LIST
25940: PUSH
25941: LD_INT 3
25943: PUSH
25944: LD_INT 3
25946: PUSH
25947: EMPTY
25948: LIST
25949: LIST
25950: PUSH
25951: LD_INT 5
25953: PUSH
25954: LD_INT 3
25956: PUSH
25957: EMPTY
25958: LIST
25959: LIST
25960: PUSH
25961: LD_INT 3
25963: PUSH
25964: LD_INT 5
25966: PUSH
25967: EMPTY
25968: LIST
25969: LIST
25970: PUSH
25971: LD_INT 0
25973: PUSH
25974: LD_INT 3
25976: PUSH
25977: EMPTY
25978: LIST
25979: LIST
25980: PUSH
25981: LD_INT 0
25983: PUSH
25984: LD_INT 2
25986: PUSH
25987: EMPTY
25988: LIST
25989: LIST
25990: PUSH
25991: LD_INT 1
25993: PUSH
25994: LD_INT 3
25996: PUSH
25997: EMPTY
25998: LIST
25999: LIST
26000: PUSH
26001: LD_INT 1
26003: PUSH
26004: LD_INT 4
26006: PUSH
26007: EMPTY
26008: LIST
26009: LIST
26010: PUSH
26011: LD_INT 0
26013: PUSH
26014: LD_INT 4
26016: PUSH
26017: EMPTY
26018: LIST
26019: LIST
26020: PUSH
26021: LD_INT 1
26023: NEG
26024: PUSH
26025: LD_INT 3
26027: PUSH
26028: EMPTY
26029: LIST
26030: LIST
26031: PUSH
26032: LD_INT 1
26034: NEG
26035: PUSH
26036: LD_INT 2
26038: PUSH
26039: EMPTY
26040: LIST
26041: LIST
26042: PUSH
26043: LD_INT 2
26045: PUSH
26046: LD_INT 4
26048: PUSH
26049: EMPTY
26050: LIST
26051: LIST
26052: PUSH
26053: LD_INT 2
26055: NEG
26056: PUSH
26057: LD_INT 2
26059: PUSH
26060: EMPTY
26061: LIST
26062: LIST
26063: PUSH
26064: LD_INT 4
26066: NEG
26067: PUSH
26068: LD_INT 0
26070: PUSH
26071: EMPTY
26072: LIST
26073: LIST
26074: PUSH
26075: LD_INT 4
26077: NEG
26078: PUSH
26079: LD_INT 1
26081: NEG
26082: PUSH
26083: EMPTY
26084: LIST
26085: LIST
26086: PUSH
26087: LD_INT 3
26089: NEG
26090: PUSH
26091: LD_INT 0
26093: PUSH
26094: EMPTY
26095: LIST
26096: LIST
26097: PUSH
26098: LD_INT 3
26100: NEG
26101: PUSH
26102: LD_INT 1
26104: PUSH
26105: EMPTY
26106: LIST
26107: LIST
26108: PUSH
26109: LD_INT 4
26111: NEG
26112: PUSH
26113: LD_INT 1
26115: PUSH
26116: EMPTY
26117: LIST
26118: LIST
26119: PUSH
26120: LD_INT 5
26122: NEG
26123: PUSH
26124: LD_INT 0
26126: PUSH
26127: EMPTY
26128: LIST
26129: LIST
26130: PUSH
26131: LD_INT 5
26133: NEG
26134: PUSH
26135: LD_INT 1
26137: NEG
26138: PUSH
26139: EMPTY
26140: LIST
26141: LIST
26142: PUSH
26143: LD_INT 5
26145: NEG
26146: PUSH
26147: LD_INT 2
26149: NEG
26150: PUSH
26151: EMPTY
26152: LIST
26153: LIST
26154: PUSH
26155: LD_INT 3
26157: NEG
26158: PUSH
26159: LD_INT 2
26161: PUSH
26162: EMPTY
26163: LIST
26164: LIST
26165: PUSH
26166: EMPTY
26167: LIST
26168: LIST
26169: LIST
26170: LIST
26171: LIST
26172: LIST
26173: LIST
26174: LIST
26175: LIST
26176: LIST
26177: LIST
26178: LIST
26179: LIST
26180: LIST
26181: LIST
26182: LIST
26183: LIST
26184: LIST
26185: LIST
26186: LIST
26187: LIST
26188: LIST
26189: LIST
26190: LIST
26191: LIST
26192: LIST
26193: LIST
26194: LIST
26195: LIST
26196: LIST
26197: LIST
26198: LIST
26199: LIST
26200: LIST
26201: LIST
26202: LIST
26203: LIST
26204: LIST
26205: LIST
26206: LIST
26207: LIST
26208: LIST
26209: LIST
26210: LIST
26211: LIST
26212: ST_TO_ADDR
// end ; end ;
26213: GO 26216
26215: POP
// case btype of b_depot , b_warehouse :
26216: LD_VAR 0 1
26220: PUSH
26221: LD_INT 0
26223: DOUBLE
26224: EQUAL
26225: IFTRUE 26235
26227: LD_INT 1
26229: DOUBLE
26230: EQUAL
26231: IFTRUE 26235
26233: GO 26436
26235: POP
// case nation of nation_american :
26236: LD_VAR 0 5
26240: PUSH
26241: LD_INT 1
26243: DOUBLE
26244: EQUAL
26245: IFTRUE 26249
26247: GO 26305
26249: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26250: LD_ADDR_VAR 0 9
26254: PUSH
26255: LD_VAR 0 11
26259: PUSH
26260: LD_VAR 0 12
26264: PUSH
26265: LD_VAR 0 13
26269: PUSH
26270: LD_VAR 0 14
26274: PUSH
26275: LD_VAR 0 15
26279: PUSH
26280: LD_VAR 0 16
26284: PUSH
26285: EMPTY
26286: LIST
26287: LIST
26288: LIST
26289: LIST
26290: LIST
26291: LIST
26292: PUSH
26293: LD_VAR 0 4
26297: PUSH
26298: LD_INT 1
26300: PLUS
26301: ARRAY
26302: ST_TO_ADDR
26303: GO 26434
26305: LD_INT 2
26307: DOUBLE
26308: EQUAL
26309: IFTRUE 26313
26311: GO 26369
26313: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26314: LD_ADDR_VAR 0 9
26318: PUSH
26319: LD_VAR 0 17
26323: PUSH
26324: LD_VAR 0 18
26328: PUSH
26329: LD_VAR 0 19
26333: PUSH
26334: LD_VAR 0 20
26338: PUSH
26339: LD_VAR 0 21
26343: PUSH
26344: LD_VAR 0 22
26348: PUSH
26349: EMPTY
26350: LIST
26351: LIST
26352: LIST
26353: LIST
26354: LIST
26355: LIST
26356: PUSH
26357: LD_VAR 0 4
26361: PUSH
26362: LD_INT 1
26364: PLUS
26365: ARRAY
26366: ST_TO_ADDR
26367: GO 26434
26369: LD_INT 3
26371: DOUBLE
26372: EQUAL
26373: IFTRUE 26377
26375: GO 26433
26377: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26378: LD_ADDR_VAR 0 9
26382: PUSH
26383: LD_VAR 0 23
26387: PUSH
26388: LD_VAR 0 24
26392: PUSH
26393: LD_VAR 0 25
26397: PUSH
26398: LD_VAR 0 26
26402: PUSH
26403: LD_VAR 0 27
26407: PUSH
26408: LD_VAR 0 28
26412: PUSH
26413: EMPTY
26414: LIST
26415: LIST
26416: LIST
26417: LIST
26418: LIST
26419: LIST
26420: PUSH
26421: LD_VAR 0 4
26425: PUSH
26426: LD_INT 1
26428: PLUS
26429: ARRAY
26430: ST_TO_ADDR
26431: GO 26434
26433: POP
26434: GO 26983
26436: LD_INT 2
26438: DOUBLE
26439: EQUAL
26440: IFTRUE 26450
26442: LD_INT 3
26444: DOUBLE
26445: EQUAL
26446: IFTRUE 26450
26448: GO 26506
26450: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26451: LD_ADDR_VAR 0 9
26455: PUSH
26456: LD_VAR 0 29
26460: PUSH
26461: LD_VAR 0 30
26465: PUSH
26466: LD_VAR 0 31
26470: PUSH
26471: LD_VAR 0 32
26475: PUSH
26476: LD_VAR 0 33
26480: PUSH
26481: LD_VAR 0 34
26485: PUSH
26486: EMPTY
26487: LIST
26488: LIST
26489: LIST
26490: LIST
26491: LIST
26492: LIST
26493: PUSH
26494: LD_VAR 0 4
26498: PUSH
26499: LD_INT 1
26501: PLUS
26502: ARRAY
26503: ST_TO_ADDR
26504: GO 26983
26506: LD_INT 16
26508: DOUBLE
26509: EQUAL
26510: IFTRUE 26562
26512: LD_INT 17
26514: DOUBLE
26515: EQUAL
26516: IFTRUE 26562
26518: LD_INT 18
26520: DOUBLE
26521: EQUAL
26522: IFTRUE 26562
26524: LD_INT 19
26526: DOUBLE
26527: EQUAL
26528: IFTRUE 26562
26530: LD_INT 20
26532: DOUBLE
26533: EQUAL
26534: IFTRUE 26562
26536: LD_INT 21
26538: DOUBLE
26539: EQUAL
26540: IFTRUE 26562
26542: LD_INT 23
26544: DOUBLE
26545: EQUAL
26546: IFTRUE 26562
26548: LD_INT 24
26550: DOUBLE
26551: EQUAL
26552: IFTRUE 26562
26554: LD_INT 25
26556: DOUBLE
26557: EQUAL
26558: IFTRUE 26562
26560: GO 26618
26562: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26563: LD_ADDR_VAR 0 9
26567: PUSH
26568: LD_VAR 0 35
26572: PUSH
26573: LD_VAR 0 36
26577: PUSH
26578: LD_VAR 0 37
26582: PUSH
26583: LD_VAR 0 38
26587: PUSH
26588: LD_VAR 0 39
26592: PUSH
26593: LD_VAR 0 40
26597: PUSH
26598: EMPTY
26599: LIST
26600: LIST
26601: LIST
26602: LIST
26603: LIST
26604: LIST
26605: PUSH
26606: LD_VAR 0 4
26610: PUSH
26611: LD_INT 1
26613: PLUS
26614: ARRAY
26615: ST_TO_ADDR
26616: GO 26983
26618: LD_INT 6
26620: DOUBLE
26621: EQUAL
26622: IFTRUE 26674
26624: LD_INT 7
26626: DOUBLE
26627: EQUAL
26628: IFTRUE 26674
26630: LD_INT 8
26632: DOUBLE
26633: EQUAL
26634: IFTRUE 26674
26636: LD_INT 13
26638: DOUBLE
26639: EQUAL
26640: IFTRUE 26674
26642: LD_INT 12
26644: DOUBLE
26645: EQUAL
26646: IFTRUE 26674
26648: LD_INT 15
26650: DOUBLE
26651: EQUAL
26652: IFTRUE 26674
26654: LD_INT 11
26656: DOUBLE
26657: EQUAL
26658: IFTRUE 26674
26660: LD_INT 14
26662: DOUBLE
26663: EQUAL
26664: IFTRUE 26674
26666: LD_INT 10
26668: DOUBLE
26669: EQUAL
26670: IFTRUE 26674
26672: GO 26730
26674: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26675: LD_ADDR_VAR 0 9
26679: PUSH
26680: LD_VAR 0 41
26684: PUSH
26685: LD_VAR 0 42
26689: PUSH
26690: LD_VAR 0 43
26694: PUSH
26695: LD_VAR 0 44
26699: PUSH
26700: LD_VAR 0 45
26704: PUSH
26705: LD_VAR 0 46
26709: PUSH
26710: EMPTY
26711: LIST
26712: LIST
26713: LIST
26714: LIST
26715: LIST
26716: LIST
26717: PUSH
26718: LD_VAR 0 4
26722: PUSH
26723: LD_INT 1
26725: PLUS
26726: ARRAY
26727: ST_TO_ADDR
26728: GO 26983
26730: LD_INT 36
26732: DOUBLE
26733: EQUAL
26734: IFTRUE 26738
26736: GO 26794
26738: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26739: LD_ADDR_VAR 0 9
26743: PUSH
26744: LD_VAR 0 47
26748: PUSH
26749: LD_VAR 0 48
26753: PUSH
26754: LD_VAR 0 49
26758: PUSH
26759: LD_VAR 0 50
26763: PUSH
26764: LD_VAR 0 51
26768: PUSH
26769: LD_VAR 0 52
26773: PUSH
26774: EMPTY
26775: LIST
26776: LIST
26777: LIST
26778: LIST
26779: LIST
26780: LIST
26781: PUSH
26782: LD_VAR 0 4
26786: PUSH
26787: LD_INT 1
26789: PLUS
26790: ARRAY
26791: ST_TO_ADDR
26792: GO 26983
26794: LD_INT 4
26796: DOUBLE
26797: EQUAL
26798: IFTRUE 26820
26800: LD_INT 5
26802: DOUBLE
26803: EQUAL
26804: IFTRUE 26820
26806: LD_INT 34
26808: DOUBLE
26809: EQUAL
26810: IFTRUE 26820
26812: LD_INT 37
26814: DOUBLE
26815: EQUAL
26816: IFTRUE 26820
26818: GO 26876
26820: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26821: LD_ADDR_VAR 0 9
26825: PUSH
26826: LD_VAR 0 53
26830: PUSH
26831: LD_VAR 0 54
26835: PUSH
26836: LD_VAR 0 55
26840: PUSH
26841: LD_VAR 0 56
26845: PUSH
26846: LD_VAR 0 57
26850: PUSH
26851: LD_VAR 0 58
26855: PUSH
26856: EMPTY
26857: LIST
26858: LIST
26859: LIST
26860: LIST
26861: LIST
26862: LIST
26863: PUSH
26864: LD_VAR 0 4
26868: PUSH
26869: LD_INT 1
26871: PLUS
26872: ARRAY
26873: ST_TO_ADDR
26874: GO 26983
26876: LD_INT 31
26878: DOUBLE
26879: EQUAL
26880: IFTRUE 26926
26882: LD_INT 32
26884: DOUBLE
26885: EQUAL
26886: IFTRUE 26926
26888: LD_INT 33
26890: DOUBLE
26891: EQUAL
26892: IFTRUE 26926
26894: LD_INT 27
26896: DOUBLE
26897: EQUAL
26898: IFTRUE 26926
26900: LD_INT 26
26902: DOUBLE
26903: EQUAL
26904: IFTRUE 26926
26906: LD_INT 28
26908: DOUBLE
26909: EQUAL
26910: IFTRUE 26926
26912: LD_INT 29
26914: DOUBLE
26915: EQUAL
26916: IFTRUE 26926
26918: LD_INT 30
26920: DOUBLE
26921: EQUAL
26922: IFTRUE 26926
26924: GO 26982
26926: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26927: LD_ADDR_VAR 0 9
26931: PUSH
26932: LD_VAR 0 59
26936: PUSH
26937: LD_VAR 0 60
26941: PUSH
26942: LD_VAR 0 61
26946: PUSH
26947: LD_VAR 0 62
26951: PUSH
26952: LD_VAR 0 63
26956: PUSH
26957: LD_VAR 0 64
26961: PUSH
26962: EMPTY
26963: LIST
26964: LIST
26965: LIST
26966: LIST
26967: LIST
26968: LIST
26969: PUSH
26970: LD_VAR 0 4
26974: PUSH
26975: LD_INT 1
26977: PLUS
26978: ARRAY
26979: ST_TO_ADDR
26980: GO 26983
26982: POP
// temp_list2 = [ ] ;
26983: LD_ADDR_VAR 0 10
26987: PUSH
26988: EMPTY
26989: ST_TO_ADDR
// for i in temp_list do
26990: LD_ADDR_VAR 0 8
26994: PUSH
26995: LD_VAR 0 9
26999: PUSH
27000: FOR_IN
27001: IFFALSE 27053
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27003: LD_ADDR_VAR 0 10
27007: PUSH
27008: LD_VAR 0 10
27012: PUSH
27013: LD_VAR 0 8
27017: PUSH
27018: LD_INT 1
27020: ARRAY
27021: PUSH
27022: LD_VAR 0 2
27026: PLUS
27027: PUSH
27028: LD_VAR 0 8
27032: PUSH
27033: LD_INT 2
27035: ARRAY
27036: PUSH
27037: LD_VAR 0 3
27041: PLUS
27042: PUSH
27043: EMPTY
27044: LIST
27045: LIST
27046: PUSH
27047: EMPTY
27048: LIST
27049: ADD
27050: ST_TO_ADDR
27051: GO 27000
27053: POP
27054: POP
// result = temp_list2 ;
27055: LD_ADDR_VAR 0 7
27059: PUSH
27060: LD_VAR 0 10
27064: ST_TO_ADDR
// end ;
27065: LD_VAR 0 7
27069: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27070: LD_INT 0
27072: PPUSH
27073: PPUSH
27074: PPUSH
// result := false ;
27075: LD_ADDR_VAR 0 4
27079: PUSH
27080: LD_INT 0
27082: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27083: LD_VAR 0 1
27087: NOT
27088: PUSH
27089: LD_VAR 0 2
27093: NOT
27094: OR
27095: PUSH
27096: LD_VAR 0 1
27100: PPUSH
27101: CALL_OW 310
27105: OR
27106: IFFALSE 27110
// exit ;
27108: GO 27314
// if distance < 0 then
27110: LD_VAR 0 3
27114: PUSH
27115: LD_INT 0
27117: LESS
27118: IFFALSE 27128
// distance := 0 ;
27120: LD_ADDR_VAR 0 3
27124: PUSH
27125: LD_INT 0
27127: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27128: LD_ADDR_VAR 0 6
27132: PUSH
27133: LD_VAR 0 2
27137: PPUSH
27138: CALL_OW 266
27142: PPUSH
27143: LD_VAR 0 2
27147: PPUSH
27148: CALL_OW 250
27152: PPUSH
27153: LD_VAR 0 2
27157: PPUSH
27158: CALL_OW 251
27162: PPUSH
27163: LD_VAR 0 2
27167: PPUSH
27168: CALL_OW 254
27172: PPUSH
27173: LD_VAR 0 2
27177: PPUSH
27178: CALL_OW 248
27182: PPUSH
27183: LD_INT 1
27185: PPUSH
27186: CALL 8531 0 6
27190: ST_TO_ADDR
// if not entrance then
27191: LD_VAR 0 6
27195: NOT
27196: IFFALSE 27200
// exit ;
27198: GO 27314
// for i in entrance do
27200: LD_ADDR_VAR 0 5
27204: PUSH
27205: LD_VAR 0 6
27209: PUSH
27210: FOR_IN
27211: IFFALSE 27312
// begin if not distance then
27213: LD_VAR 0 3
27217: NOT
27218: IFFALSE 27263
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27220: LD_VAR 0 1
27224: PPUSH
27225: LD_VAR 0 5
27229: PUSH
27230: LD_INT 1
27232: ARRAY
27233: PPUSH
27234: LD_VAR 0 5
27238: PUSH
27239: LD_INT 2
27241: ARRAY
27242: PPUSH
27243: CALL_OW 307
27247: IFFALSE 27261
// begin result := true ;
27249: LD_ADDR_VAR 0 4
27253: PUSH
27254: LD_INT 1
27256: ST_TO_ADDR
// exit ;
27257: POP
27258: POP
27259: GO 27314
// end ; end else
27261: GO 27310
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27263: LD_VAR 0 1
27267: PPUSH
27268: LD_VAR 0 5
27272: PUSH
27273: LD_INT 1
27275: ARRAY
27276: PPUSH
27277: LD_VAR 0 5
27281: PUSH
27282: LD_INT 2
27284: ARRAY
27285: PPUSH
27286: CALL_OW 297
27290: PUSH
27291: LD_VAR 0 3
27295: LESSEQUAL
27296: IFFALSE 27310
// begin result := true ;
27298: LD_ADDR_VAR 0 4
27302: PUSH
27303: LD_INT 1
27305: ST_TO_ADDR
// exit ;
27306: POP
27307: POP
27308: GO 27314
// end ; end ; end ;
27310: GO 27210
27312: POP
27313: POP
// end ;
27314: LD_VAR 0 4
27318: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27319: LD_INT 0
27321: PPUSH
27322: PPUSH
27323: PPUSH
// result := false ;
27324: LD_ADDR_VAR 0 3
27328: PUSH
27329: LD_INT 0
27331: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27332: LD_VAR 0 1
27336: NOT
27337: PUSH
27338: LD_VAR 0 2
27342: NOT
27343: OR
27344: PUSH
27345: LD_VAR 0 1
27349: PPUSH
27350: CALL_OW 302
27354: NOT
27355: OR
27356: PUSH
27357: LD_VAR 0 2
27361: PPUSH
27362: CALL_OW 302
27366: NOT
27367: OR
27368: IFFALSE 27372
// exit ;
27370: GO 27533
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27372: LD_VAR 0 1
27376: PPUSH
27377: LD_INT 81
27379: PUSH
27380: LD_VAR 0 1
27384: PPUSH
27385: CALL_OW 255
27389: PUSH
27390: EMPTY
27391: LIST
27392: LIST
27393: PUSH
27394: LD_INT 3
27396: PUSH
27397: LD_INT 21
27399: PUSH
27400: LD_INT 3
27402: PUSH
27403: EMPTY
27404: LIST
27405: LIST
27406: PUSH
27407: EMPTY
27408: LIST
27409: LIST
27410: PUSH
27411: EMPTY
27412: LIST
27413: LIST
27414: PPUSH
27415: CALL_OW 69
27419: PPUSH
27420: LD_VAR 0 1
27424: PPUSH
27425: CALL_OW 74
27429: PPUSH
27430: CALL_OW 296
27434: PUSH
27435: LD_INT 8
27437: LESS
27438: IFFALSE 27442
// exit ;
27440: GO 27533
// building := IsInUnit ( unit2 ) ;
27442: LD_ADDR_VAR 0 5
27446: PUSH
27447: LD_VAR 0 2
27451: PPUSH
27452: CALL_OW 310
27456: ST_TO_ADDR
// if building then
27457: LD_VAR 0 5
27461: IFFALSE 27488
// result := IsNearbyEntrance ( unit , building , 2 ) else
27463: LD_ADDR_VAR 0 3
27467: PUSH
27468: LD_VAR 0 1
27472: PPUSH
27473: LD_VAR 0 5
27477: PPUSH
27478: LD_INT 2
27480: PPUSH
27481: CALL 27070 0 3
27485: ST_TO_ADDR
27486: GO 27533
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27488: LD_ADDR_VAR 0 3
27492: PUSH
27493: LD_VAR 0 1
27497: PPUSH
27498: LD_VAR 0 2
27502: PPUSH
27503: CALL_OW 296
27507: PUSH
27508: LD_INT 6
27510: LESS
27511: PUSH
27512: LD_VAR 0 2
27516: PPUSH
27517: CALL_OW 255
27521: PPUSH
27522: LD_VAR 0 1
27526: PPUSH
27527: CALL_OW 292
27531: AND
27532: ST_TO_ADDR
// end ;
27533: LD_VAR 0 3
27537: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27538: LD_INT 0
27540: PPUSH
27541: PPUSH
27542: PPUSH
27543: PPUSH
// tmp := [ ] ;
27544: LD_ADDR_VAR 0 3
27548: PUSH
27549: EMPTY
27550: ST_TO_ADDR
// list := [ ] ;
27551: LD_ADDR_VAR 0 5
27555: PUSH
27556: EMPTY
27557: ST_TO_ADDR
// for i = 16 to 25 do
27558: LD_ADDR_VAR 0 4
27562: PUSH
27563: DOUBLE
27564: LD_INT 16
27566: DEC
27567: ST_TO_ADDR
27568: LD_INT 25
27570: PUSH
27571: FOR_TO
27572: IFFALSE 27645
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27574: LD_ADDR_VAR 0 3
27578: PUSH
27579: LD_VAR 0 3
27583: PUSH
27584: LD_INT 22
27586: PUSH
27587: LD_VAR 0 1
27591: PPUSH
27592: CALL_OW 255
27596: PUSH
27597: EMPTY
27598: LIST
27599: LIST
27600: PUSH
27601: LD_INT 91
27603: PUSH
27604: LD_VAR 0 1
27608: PUSH
27609: LD_INT 6
27611: PUSH
27612: EMPTY
27613: LIST
27614: LIST
27615: LIST
27616: PUSH
27617: LD_INT 30
27619: PUSH
27620: LD_VAR 0 4
27624: PUSH
27625: EMPTY
27626: LIST
27627: LIST
27628: PUSH
27629: EMPTY
27630: LIST
27631: LIST
27632: LIST
27633: PUSH
27634: EMPTY
27635: LIST
27636: PPUSH
27637: CALL_OW 69
27641: ADD
27642: ST_TO_ADDR
27643: GO 27571
27645: POP
27646: POP
// for i = 1 to tmp do
27647: LD_ADDR_VAR 0 4
27651: PUSH
27652: DOUBLE
27653: LD_INT 1
27655: DEC
27656: ST_TO_ADDR
27657: LD_VAR 0 3
27661: PUSH
27662: FOR_TO
27663: IFFALSE 27751
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27665: LD_ADDR_VAR 0 5
27669: PUSH
27670: LD_VAR 0 5
27674: PUSH
27675: LD_VAR 0 3
27679: PUSH
27680: LD_VAR 0 4
27684: ARRAY
27685: PPUSH
27686: CALL_OW 266
27690: PUSH
27691: LD_VAR 0 3
27695: PUSH
27696: LD_VAR 0 4
27700: ARRAY
27701: PPUSH
27702: CALL_OW 250
27706: PUSH
27707: LD_VAR 0 3
27711: PUSH
27712: LD_VAR 0 4
27716: ARRAY
27717: PPUSH
27718: CALL_OW 251
27722: PUSH
27723: LD_VAR 0 3
27727: PUSH
27728: LD_VAR 0 4
27732: ARRAY
27733: PPUSH
27734: CALL_OW 254
27738: PUSH
27739: EMPTY
27740: LIST
27741: LIST
27742: LIST
27743: LIST
27744: PUSH
27745: EMPTY
27746: LIST
27747: ADD
27748: ST_TO_ADDR
27749: GO 27662
27751: POP
27752: POP
// result := list ;
27753: LD_ADDR_VAR 0 2
27757: PUSH
27758: LD_VAR 0 5
27762: ST_TO_ADDR
// end ;
27763: LD_VAR 0 2
27767: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27768: LD_INT 0
27770: PPUSH
27771: PPUSH
27772: PPUSH
27773: PPUSH
27774: PPUSH
27775: PPUSH
27776: PPUSH
// if not factory then
27777: LD_VAR 0 1
27781: NOT
27782: IFFALSE 27786
// exit ;
27784: GO 28311
// if control = control_apeman then
27786: LD_VAR 0 4
27790: PUSH
27791: LD_INT 5
27793: EQUAL
27794: IFFALSE 27903
// begin tmp := UnitsInside ( factory ) ;
27796: LD_ADDR_VAR 0 8
27800: PUSH
27801: LD_VAR 0 1
27805: PPUSH
27806: CALL_OW 313
27810: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27811: LD_VAR 0 8
27815: PPUSH
27816: LD_INT 25
27818: PUSH
27819: LD_INT 12
27821: PUSH
27822: EMPTY
27823: LIST
27824: LIST
27825: PPUSH
27826: CALL_OW 72
27830: NOT
27831: IFFALSE 27841
// control := control_manual ;
27833: LD_ADDR_VAR 0 4
27837: PUSH
27838: LD_INT 1
27840: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27841: LD_ADDR_VAR 0 8
27845: PUSH
27846: LD_VAR 0 1
27850: PPUSH
27851: CALL 27538 0 1
27855: ST_TO_ADDR
// if tmp then
27856: LD_VAR 0 8
27860: IFFALSE 27903
// begin for i in tmp do
27862: LD_ADDR_VAR 0 7
27866: PUSH
27867: LD_VAR 0 8
27871: PUSH
27872: FOR_IN
27873: IFFALSE 27901
// if i [ 1 ] = b_ext_radar then
27875: LD_VAR 0 7
27879: PUSH
27880: LD_INT 1
27882: ARRAY
27883: PUSH
27884: LD_INT 20
27886: EQUAL
27887: IFFALSE 27899
// begin control := control_remote ;
27889: LD_ADDR_VAR 0 4
27893: PUSH
27894: LD_INT 2
27896: ST_TO_ADDR
// break ;
27897: GO 27901
// end ;
27899: GO 27872
27901: POP
27902: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27903: LD_VAR 0 1
27907: PPUSH
27908: LD_VAR 0 2
27912: PPUSH
27913: LD_VAR 0 3
27917: PPUSH
27918: LD_VAR 0 4
27922: PPUSH
27923: LD_VAR 0 5
27927: PPUSH
27928: CALL_OW 448
27932: IFFALSE 27967
// begin result := [ chassis , engine , control , weapon ] ;
27934: LD_ADDR_VAR 0 6
27938: PUSH
27939: LD_VAR 0 2
27943: PUSH
27944: LD_VAR 0 3
27948: PUSH
27949: LD_VAR 0 4
27953: PUSH
27954: LD_VAR 0 5
27958: PUSH
27959: EMPTY
27960: LIST
27961: LIST
27962: LIST
27963: LIST
27964: ST_TO_ADDR
// exit ;
27965: GO 28311
// end ; _chassis := AvailableChassisList ( factory ) ;
27967: LD_ADDR_VAR 0 9
27971: PUSH
27972: LD_VAR 0 1
27976: PPUSH
27977: CALL_OW 475
27981: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
27982: LD_ADDR_VAR 0 11
27986: PUSH
27987: LD_VAR 0 1
27991: PPUSH
27992: CALL_OW 476
27996: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
27997: LD_ADDR_VAR 0 12
28001: PUSH
28002: LD_VAR 0 1
28006: PPUSH
28007: CALL_OW 477
28011: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28012: LD_ADDR_VAR 0 10
28016: PUSH
28017: LD_VAR 0 1
28021: PPUSH
28022: CALL_OW 478
28026: ST_TO_ADDR
// if not chassis in _chassis then
28027: LD_VAR 0 2
28031: PUSH
28032: LD_VAR 0 9
28036: IN
28037: NOT
28038: IFFALSE 28064
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28040: LD_ADDR_VAR 0 2
28044: PUSH
28045: LD_VAR 0 9
28049: PUSH
28050: LD_INT 1
28052: PPUSH
28053: LD_VAR 0 9
28057: PPUSH
28058: CALL_OW 12
28062: ARRAY
28063: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28064: LD_VAR 0 2
28068: PPUSH
28069: LD_VAR 0 3
28073: PPUSH
28074: CALL 28316 0 2
28078: NOT
28079: IFFALSE 28138
// repeat engine := _engine [ 1 ] ;
28081: LD_ADDR_VAR 0 3
28085: PUSH
28086: LD_VAR 0 11
28090: PUSH
28091: LD_INT 1
28093: ARRAY
28094: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28095: LD_ADDR_VAR 0 11
28099: PUSH
28100: LD_VAR 0 11
28104: PPUSH
28105: LD_INT 1
28107: PPUSH
28108: CALL_OW 3
28112: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28113: LD_VAR 0 2
28117: PPUSH
28118: LD_VAR 0 3
28122: PPUSH
28123: CALL 28316 0 2
28127: PUSH
28128: LD_VAR 0 11
28132: PUSH
28133: EMPTY
28134: EQUAL
28135: OR
28136: IFFALSE 28081
// if not control in _control then
28138: LD_VAR 0 4
28142: PUSH
28143: LD_VAR 0 12
28147: IN
28148: NOT
28149: IFFALSE 28175
// control := _control [ rand ( 1 , _control ) ] ;
28151: LD_ADDR_VAR 0 4
28155: PUSH
28156: LD_VAR 0 12
28160: PUSH
28161: LD_INT 1
28163: PPUSH
28164: LD_VAR 0 12
28168: PPUSH
28169: CALL_OW 12
28173: ARRAY
28174: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28175: LD_VAR 0 2
28179: PPUSH
28180: LD_VAR 0 5
28184: PPUSH
28185: CALL 28536 0 2
28189: NOT
28190: IFFALSE 28249
// repeat weapon := _weapon [ 1 ] ;
28192: LD_ADDR_VAR 0 5
28196: PUSH
28197: LD_VAR 0 10
28201: PUSH
28202: LD_INT 1
28204: ARRAY
28205: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28206: LD_ADDR_VAR 0 10
28210: PUSH
28211: LD_VAR 0 10
28215: PPUSH
28216: LD_INT 1
28218: PPUSH
28219: CALL_OW 3
28223: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28224: LD_VAR 0 2
28228: PPUSH
28229: LD_VAR 0 5
28233: PPUSH
28234: CALL 28536 0 2
28238: PUSH
28239: LD_VAR 0 10
28243: PUSH
28244: EMPTY
28245: EQUAL
28246: OR
28247: IFFALSE 28192
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28249: LD_VAR 0 1
28253: PPUSH
28254: LD_VAR 0 2
28258: PPUSH
28259: LD_VAR 0 3
28263: PPUSH
28264: LD_VAR 0 4
28268: PPUSH
28269: LD_VAR 0 5
28273: PPUSH
28274: CALL_OW 448
28278: IFFALSE 28311
// result := [ chassis , engine , control , weapon ] ;
28280: LD_ADDR_VAR 0 6
28284: PUSH
28285: LD_VAR 0 2
28289: PUSH
28290: LD_VAR 0 3
28294: PUSH
28295: LD_VAR 0 4
28299: PUSH
28300: LD_VAR 0 5
28304: PUSH
28305: EMPTY
28306: LIST
28307: LIST
28308: LIST
28309: LIST
28310: ST_TO_ADDR
// end ;
28311: LD_VAR 0 6
28315: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28316: LD_INT 0
28318: PPUSH
// if not chassis or not engine then
28319: LD_VAR 0 1
28323: NOT
28324: PUSH
28325: LD_VAR 0 2
28329: NOT
28330: OR
28331: IFFALSE 28335
// exit ;
28333: GO 28531
// case engine of engine_solar :
28335: LD_VAR 0 2
28339: PUSH
28340: LD_INT 2
28342: DOUBLE
28343: EQUAL
28344: IFTRUE 28348
28346: GO 28386
28348: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28349: LD_ADDR_VAR 0 3
28353: PUSH
28354: LD_INT 11
28356: PUSH
28357: LD_INT 12
28359: PUSH
28360: LD_INT 13
28362: PUSH
28363: LD_INT 14
28365: PUSH
28366: LD_INT 1
28368: PUSH
28369: LD_INT 2
28371: PUSH
28372: LD_INT 3
28374: PUSH
28375: EMPTY
28376: LIST
28377: LIST
28378: LIST
28379: LIST
28380: LIST
28381: LIST
28382: LIST
28383: ST_TO_ADDR
28384: GO 28515
28386: LD_INT 1
28388: DOUBLE
28389: EQUAL
28390: IFTRUE 28394
28392: GO 28456
28394: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28395: LD_ADDR_VAR 0 3
28399: PUSH
28400: LD_INT 11
28402: PUSH
28403: LD_INT 12
28405: PUSH
28406: LD_INT 13
28408: PUSH
28409: LD_INT 14
28411: PUSH
28412: LD_INT 1
28414: PUSH
28415: LD_INT 2
28417: PUSH
28418: LD_INT 3
28420: PUSH
28421: LD_INT 4
28423: PUSH
28424: LD_INT 5
28426: PUSH
28427: LD_INT 21
28429: PUSH
28430: LD_INT 23
28432: PUSH
28433: LD_INT 22
28435: PUSH
28436: LD_INT 24
28438: PUSH
28439: EMPTY
28440: LIST
28441: LIST
28442: LIST
28443: LIST
28444: LIST
28445: LIST
28446: LIST
28447: LIST
28448: LIST
28449: LIST
28450: LIST
28451: LIST
28452: LIST
28453: ST_TO_ADDR
28454: GO 28515
28456: LD_INT 3
28458: DOUBLE
28459: EQUAL
28460: IFTRUE 28464
28462: GO 28514
28464: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28465: LD_ADDR_VAR 0 3
28469: PUSH
28470: LD_INT 13
28472: PUSH
28473: LD_INT 14
28475: PUSH
28476: LD_INT 2
28478: PUSH
28479: LD_INT 3
28481: PUSH
28482: LD_INT 4
28484: PUSH
28485: LD_INT 5
28487: PUSH
28488: LD_INT 21
28490: PUSH
28491: LD_INT 22
28493: PUSH
28494: LD_INT 23
28496: PUSH
28497: LD_INT 24
28499: PUSH
28500: EMPTY
28501: LIST
28502: LIST
28503: LIST
28504: LIST
28505: LIST
28506: LIST
28507: LIST
28508: LIST
28509: LIST
28510: LIST
28511: ST_TO_ADDR
28512: GO 28515
28514: POP
// result := ( chassis in result ) ;
28515: LD_ADDR_VAR 0 3
28519: PUSH
28520: LD_VAR 0 1
28524: PUSH
28525: LD_VAR 0 3
28529: IN
28530: ST_TO_ADDR
// end ;
28531: LD_VAR 0 3
28535: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28536: LD_INT 0
28538: PPUSH
// if not chassis or not weapon then
28539: LD_VAR 0 1
28543: NOT
28544: PUSH
28545: LD_VAR 0 2
28549: NOT
28550: OR
28551: IFFALSE 28555
// exit ;
28553: GO 29581
// case weapon of us_machine_gun :
28555: LD_VAR 0 2
28559: PUSH
28560: LD_INT 2
28562: DOUBLE
28563: EQUAL
28564: IFTRUE 28568
28566: GO 28598
28568: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28569: LD_ADDR_VAR 0 3
28573: PUSH
28574: LD_INT 1
28576: PUSH
28577: LD_INT 2
28579: PUSH
28580: LD_INT 3
28582: PUSH
28583: LD_INT 4
28585: PUSH
28586: LD_INT 5
28588: PUSH
28589: EMPTY
28590: LIST
28591: LIST
28592: LIST
28593: LIST
28594: LIST
28595: ST_TO_ADDR
28596: GO 29565
28598: LD_INT 3
28600: DOUBLE
28601: EQUAL
28602: IFTRUE 28606
28604: GO 28636
28606: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28607: LD_ADDR_VAR 0 3
28611: PUSH
28612: LD_INT 1
28614: PUSH
28615: LD_INT 2
28617: PUSH
28618: LD_INT 3
28620: PUSH
28621: LD_INT 4
28623: PUSH
28624: LD_INT 5
28626: PUSH
28627: EMPTY
28628: LIST
28629: LIST
28630: LIST
28631: LIST
28632: LIST
28633: ST_TO_ADDR
28634: GO 29565
28636: LD_INT 11
28638: DOUBLE
28639: EQUAL
28640: IFTRUE 28644
28642: GO 28674
28644: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28645: LD_ADDR_VAR 0 3
28649: PUSH
28650: LD_INT 1
28652: PUSH
28653: LD_INT 2
28655: PUSH
28656: LD_INT 3
28658: PUSH
28659: LD_INT 4
28661: PUSH
28662: LD_INT 5
28664: PUSH
28665: EMPTY
28666: LIST
28667: LIST
28668: LIST
28669: LIST
28670: LIST
28671: ST_TO_ADDR
28672: GO 29565
28674: LD_INT 4
28676: DOUBLE
28677: EQUAL
28678: IFTRUE 28682
28680: GO 28708
28682: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28683: LD_ADDR_VAR 0 3
28687: PUSH
28688: LD_INT 2
28690: PUSH
28691: LD_INT 3
28693: PUSH
28694: LD_INT 4
28696: PUSH
28697: LD_INT 5
28699: PUSH
28700: EMPTY
28701: LIST
28702: LIST
28703: LIST
28704: LIST
28705: ST_TO_ADDR
28706: GO 29565
28708: LD_INT 5
28710: DOUBLE
28711: EQUAL
28712: IFTRUE 28716
28714: GO 28742
28716: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28717: LD_ADDR_VAR 0 3
28721: PUSH
28722: LD_INT 2
28724: PUSH
28725: LD_INT 3
28727: PUSH
28728: LD_INT 4
28730: PUSH
28731: LD_INT 5
28733: PUSH
28734: EMPTY
28735: LIST
28736: LIST
28737: LIST
28738: LIST
28739: ST_TO_ADDR
28740: GO 29565
28742: LD_INT 9
28744: DOUBLE
28745: EQUAL
28746: IFTRUE 28750
28748: GO 28776
28750: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28751: LD_ADDR_VAR 0 3
28755: PUSH
28756: LD_INT 2
28758: PUSH
28759: LD_INT 3
28761: PUSH
28762: LD_INT 4
28764: PUSH
28765: LD_INT 5
28767: PUSH
28768: EMPTY
28769: LIST
28770: LIST
28771: LIST
28772: LIST
28773: ST_TO_ADDR
28774: GO 29565
28776: LD_INT 7
28778: DOUBLE
28779: EQUAL
28780: IFTRUE 28784
28782: GO 28810
28784: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28785: LD_ADDR_VAR 0 3
28789: PUSH
28790: LD_INT 2
28792: PUSH
28793: LD_INT 3
28795: PUSH
28796: LD_INT 4
28798: PUSH
28799: LD_INT 5
28801: PUSH
28802: EMPTY
28803: LIST
28804: LIST
28805: LIST
28806: LIST
28807: ST_TO_ADDR
28808: GO 29565
28810: LD_INT 12
28812: DOUBLE
28813: EQUAL
28814: IFTRUE 28818
28816: GO 28844
28818: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28819: LD_ADDR_VAR 0 3
28823: PUSH
28824: LD_INT 2
28826: PUSH
28827: LD_INT 3
28829: PUSH
28830: LD_INT 4
28832: PUSH
28833: LD_INT 5
28835: PUSH
28836: EMPTY
28837: LIST
28838: LIST
28839: LIST
28840: LIST
28841: ST_TO_ADDR
28842: GO 29565
28844: LD_INT 13
28846: DOUBLE
28847: EQUAL
28848: IFTRUE 28852
28850: GO 28878
28852: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28853: LD_ADDR_VAR 0 3
28857: PUSH
28858: LD_INT 2
28860: PUSH
28861: LD_INT 3
28863: PUSH
28864: LD_INT 4
28866: PUSH
28867: LD_INT 5
28869: PUSH
28870: EMPTY
28871: LIST
28872: LIST
28873: LIST
28874: LIST
28875: ST_TO_ADDR
28876: GO 29565
28878: LD_INT 14
28880: DOUBLE
28881: EQUAL
28882: IFTRUE 28886
28884: GO 28904
28886: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28887: LD_ADDR_VAR 0 3
28891: PUSH
28892: LD_INT 4
28894: PUSH
28895: LD_INT 5
28897: PUSH
28898: EMPTY
28899: LIST
28900: LIST
28901: ST_TO_ADDR
28902: GO 29565
28904: LD_INT 6
28906: DOUBLE
28907: EQUAL
28908: IFTRUE 28912
28910: GO 28930
28912: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28913: LD_ADDR_VAR 0 3
28917: PUSH
28918: LD_INT 4
28920: PUSH
28921: LD_INT 5
28923: PUSH
28924: EMPTY
28925: LIST
28926: LIST
28927: ST_TO_ADDR
28928: GO 29565
28930: LD_INT 10
28932: DOUBLE
28933: EQUAL
28934: IFTRUE 28938
28936: GO 28956
28938: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
28939: LD_ADDR_VAR 0 3
28943: PUSH
28944: LD_INT 4
28946: PUSH
28947: LD_INT 5
28949: PUSH
28950: EMPTY
28951: LIST
28952: LIST
28953: ST_TO_ADDR
28954: GO 29565
28956: LD_INT 22
28958: DOUBLE
28959: EQUAL
28960: IFTRUE 28964
28962: GO 28990
28964: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
28965: LD_ADDR_VAR 0 3
28969: PUSH
28970: LD_INT 11
28972: PUSH
28973: LD_INT 12
28975: PUSH
28976: LD_INT 13
28978: PUSH
28979: LD_INT 14
28981: PUSH
28982: EMPTY
28983: LIST
28984: LIST
28985: LIST
28986: LIST
28987: ST_TO_ADDR
28988: GO 29565
28990: LD_INT 23
28992: DOUBLE
28993: EQUAL
28994: IFTRUE 28998
28996: GO 29024
28998: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
28999: LD_ADDR_VAR 0 3
29003: PUSH
29004: LD_INT 11
29006: PUSH
29007: LD_INT 12
29009: PUSH
29010: LD_INT 13
29012: PUSH
29013: LD_INT 14
29015: PUSH
29016: EMPTY
29017: LIST
29018: LIST
29019: LIST
29020: LIST
29021: ST_TO_ADDR
29022: GO 29565
29024: LD_INT 24
29026: DOUBLE
29027: EQUAL
29028: IFTRUE 29032
29030: GO 29058
29032: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29033: LD_ADDR_VAR 0 3
29037: PUSH
29038: LD_INT 11
29040: PUSH
29041: LD_INT 12
29043: PUSH
29044: LD_INT 13
29046: PUSH
29047: LD_INT 14
29049: PUSH
29050: EMPTY
29051: LIST
29052: LIST
29053: LIST
29054: LIST
29055: ST_TO_ADDR
29056: GO 29565
29058: LD_INT 30
29060: DOUBLE
29061: EQUAL
29062: IFTRUE 29066
29064: GO 29092
29066: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29067: LD_ADDR_VAR 0 3
29071: PUSH
29072: LD_INT 11
29074: PUSH
29075: LD_INT 12
29077: PUSH
29078: LD_INT 13
29080: PUSH
29081: LD_INT 14
29083: PUSH
29084: EMPTY
29085: LIST
29086: LIST
29087: LIST
29088: LIST
29089: ST_TO_ADDR
29090: GO 29565
29092: LD_INT 25
29094: DOUBLE
29095: EQUAL
29096: IFTRUE 29100
29098: GO 29118
29100: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29101: LD_ADDR_VAR 0 3
29105: PUSH
29106: LD_INT 13
29108: PUSH
29109: LD_INT 14
29111: PUSH
29112: EMPTY
29113: LIST
29114: LIST
29115: ST_TO_ADDR
29116: GO 29565
29118: LD_INT 27
29120: DOUBLE
29121: EQUAL
29122: IFTRUE 29126
29124: GO 29144
29126: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29127: LD_ADDR_VAR 0 3
29131: PUSH
29132: LD_INT 13
29134: PUSH
29135: LD_INT 14
29137: PUSH
29138: EMPTY
29139: LIST
29140: LIST
29141: ST_TO_ADDR
29142: GO 29565
29144: LD_INT 28
29146: DOUBLE
29147: EQUAL
29148: IFTRUE 29152
29150: GO 29170
29152: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29153: LD_ADDR_VAR 0 3
29157: PUSH
29158: LD_INT 13
29160: PUSH
29161: LD_INT 14
29163: PUSH
29164: EMPTY
29165: LIST
29166: LIST
29167: ST_TO_ADDR
29168: GO 29565
29170: LD_INT 29
29172: DOUBLE
29173: EQUAL
29174: IFTRUE 29178
29176: GO 29196
29178: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29179: LD_ADDR_VAR 0 3
29183: PUSH
29184: LD_INT 13
29186: PUSH
29187: LD_INT 14
29189: PUSH
29190: EMPTY
29191: LIST
29192: LIST
29193: ST_TO_ADDR
29194: GO 29565
29196: LD_INT 31
29198: DOUBLE
29199: EQUAL
29200: IFTRUE 29204
29202: GO 29222
29204: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29205: LD_ADDR_VAR 0 3
29209: PUSH
29210: LD_INT 13
29212: PUSH
29213: LD_INT 14
29215: PUSH
29216: EMPTY
29217: LIST
29218: LIST
29219: ST_TO_ADDR
29220: GO 29565
29222: LD_INT 26
29224: DOUBLE
29225: EQUAL
29226: IFTRUE 29230
29228: GO 29248
29230: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29231: LD_ADDR_VAR 0 3
29235: PUSH
29236: LD_INT 13
29238: PUSH
29239: LD_INT 14
29241: PUSH
29242: EMPTY
29243: LIST
29244: LIST
29245: ST_TO_ADDR
29246: GO 29565
29248: LD_INT 42
29250: DOUBLE
29251: EQUAL
29252: IFTRUE 29256
29254: GO 29282
29256: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29257: LD_ADDR_VAR 0 3
29261: PUSH
29262: LD_INT 21
29264: PUSH
29265: LD_INT 22
29267: PUSH
29268: LD_INT 23
29270: PUSH
29271: LD_INT 24
29273: PUSH
29274: EMPTY
29275: LIST
29276: LIST
29277: LIST
29278: LIST
29279: ST_TO_ADDR
29280: GO 29565
29282: LD_INT 43
29284: DOUBLE
29285: EQUAL
29286: IFTRUE 29290
29288: GO 29316
29290: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29291: LD_ADDR_VAR 0 3
29295: PUSH
29296: LD_INT 21
29298: PUSH
29299: LD_INT 22
29301: PUSH
29302: LD_INT 23
29304: PUSH
29305: LD_INT 24
29307: PUSH
29308: EMPTY
29309: LIST
29310: LIST
29311: LIST
29312: LIST
29313: ST_TO_ADDR
29314: GO 29565
29316: LD_INT 44
29318: DOUBLE
29319: EQUAL
29320: IFTRUE 29324
29322: GO 29350
29324: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29325: LD_ADDR_VAR 0 3
29329: PUSH
29330: LD_INT 21
29332: PUSH
29333: LD_INT 22
29335: PUSH
29336: LD_INT 23
29338: PUSH
29339: LD_INT 24
29341: PUSH
29342: EMPTY
29343: LIST
29344: LIST
29345: LIST
29346: LIST
29347: ST_TO_ADDR
29348: GO 29565
29350: LD_INT 45
29352: DOUBLE
29353: EQUAL
29354: IFTRUE 29358
29356: GO 29384
29358: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29359: LD_ADDR_VAR 0 3
29363: PUSH
29364: LD_INT 21
29366: PUSH
29367: LD_INT 22
29369: PUSH
29370: LD_INT 23
29372: PUSH
29373: LD_INT 24
29375: PUSH
29376: EMPTY
29377: LIST
29378: LIST
29379: LIST
29380: LIST
29381: ST_TO_ADDR
29382: GO 29565
29384: LD_INT 49
29386: DOUBLE
29387: EQUAL
29388: IFTRUE 29392
29390: GO 29418
29392: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29393: LD_ADDR_VAR 0 3
29397: PUSH
29398: LD_INT 21
29400: PUSH
29401: LD_INT 22
29403: PUSH
29404: LD_INT 23
29406: PUSH
29407: LD_INT 24
29409: PUSH
29410: EMPTY
29411: LIST
29412: LIST
29413: LIST
29414: LIST
29415: ST_TO_ADDR
29416: GO 29565
29418: LD_INT 51
29420: DOUBLE
29421: EQUAL
29422: IFTRUE 29426
29424: GO 29452
29426: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29427: LD_ADDR_VAR 0 3
29431: PUSH
29432: LD_INT 21
29434: PUSH
29435: LD_INT 22
29437: PUSH
29438: LD_INT 23
29440: PUSH
29441: LD_INT 24
29443: PUSH
29444: EMPTY
29445: LIST
29446: LIST
29447: LIST
29448: LIST
29449: ST_TO_ADDR
29450: GO 29565
29452: LD_INT 52
29454: DOUBLE
29455: EQUAL
29456: IFTRUE 29460
29458: GO 29486
29460: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29461: LD_ADDR_VAR 0 3
29465: PUSH
29466: LD_INT 21
29468: PUSH
29469: LD_INT 22
29471: PUSH
29472: LD_INT 23
29474: PUSH
29475: LD_INT 24
29477: PUSH
29478: EMPTY
29479: LIST
29480: LIST
29481: LIST
29482: LIST
29483: ST_TO_ADDR
29484: GO 29565
29486: LD_INT 53
29488: DOUBLE
29489: EQUAL
29490: IFTRUE 29494
29492: GO 29512
29494: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29495: LD_ADDR_VAR 0 3
29499: PUSH
29500: LD_INT 23
29502: PUSH
29503: LD_INT 24
29505: PUSH
29506: EMPTY
29507: LIST
29508: LIST
29509: ST_TO_ADDR
29510: GO 29565
29512: LD_INT 46
29514: DOUBLE
29515: EQUAL
29516: IFTRUE 29520
29518: GO 29538
29520: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29521: LD_ADDR_VAR 0 3
29525: PUSH
29526: LD_INT 23
29528: PUSH
29529: LD_INT 24
29531: PUSH
29532: EMPTY
29533: LIST
29534: LIST
29535: ST_TO_ADDR
29536: GO 29565
29538: LD_INT 47
29540: DOUBLE
29541: EQUAL
29542: IFTRUE 29546
29544: GO 29564
29546: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29547: LD_ADDR_VAR 0 3
29551: PUSH
29552: LD_INT 23
29554: PUSH
29555: LD_INT 24
29557: PUSH
29558: EMPTY
29559: LIST
29560: LIST
29561: ST_TO_ADDR
29562: GO 29565
29564: POP
// result := ( chassis in result ) ;
29565: LD_ADDR_VAR 0 3
29569: PUSH
29570: LD_VAR 0 1
29574: PUSH
29575: LD_VAR 0 3
29579: IN
29580: ST_TO_ADDR
// end ;
29581: LD_VAR 0 3
29585: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29586: LD_INT 0
29588: PPUSH
29589: PPUSH
29590: PPUSH
29591: PPUSH
// uc_side = 0 ;
29592: LD_ADDR_OWVAR 20
29596: PUSH
29597: LD_INT 0
29599: ST_TO_ADDR
// uc_nation = 0 ;
29600: LD_ADDR_OWVAR 21
29604: PUSH
29605: LD_INT 0
29607: ST_TO_ADDR
// nat_area := nature_area ;
29608: LD_ADDR_VAR 0 4
29612: PUSH
29613: LD_INT 24
29615: ST_TO_ADDR
// InitHc ;
29616: CALL_OW 19
// for i = 1 to 4 do
29620: LD_ADDR_VAR 0 2
29624: PUSH
29625: DOUBLE
29626: LD_INT 1
29628: DEC
29629: ST_TO_ADDR
29630: LD_INT 4
29632: PUSH
29633: FOR_TO
29634: IFFALSE 29681
// begin hc_class = 18 ;
29636: LD_ADDR_OWVAR 28
29640: PUSH
29641: LD_INT 18
29643: ST_TO_ADDR
// hc_gallery =  ;
29644: LD_ADDR_OWVAR 33
29648: PUSH
29649: LD_STRING 
29651: ST_TO_ADDR
// animal := CreateHuman ;
29652: LD_ADDR_VAR 0 3
29656: PUSH
29657: CALL_OW 44
29661: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29662: LD_VAR 0 3
29666: PPUSH
29667: LD_VAR 0 4
29671: PPUSH
29672: LD_INT 0
29674: PPUSH
29675: CALL_OW 49
// end ;
29679: GO 29633
29681: POP
29682: POP
// for i = 1 to 3 do
29683: LD_ADDR_VAR 0 2
29687: PUSH
29688: DOUBLE
29689: LD_INT 1
29691: DEC
29692: ST_TO_ADDR
29693: LD_INT 3
29695: PUSH
29696: FOR_TO
29697: IFFALSE 29761
// begin hc_class = class_tiger ;
29699: LD_ADDR_OWVAR 28
29703: PUSH
29704: LD_INT 14
29706: ST_TO_ADDR
// hc_gallery =  ;
29707: LD_ADDR_OWVAR 33
29711: PUSH
29712: LD_STRING 
29714: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29715: LD_ADDR_OWVAR 35
29719: PUSH
29720: LD_INT 5
29722: NEG
29723: PPUSH
29724: LD_INT 5
29726: PPUSH
29727: CALL_OW 12
29731: ST_TO_ADDR
// animal := CreateHuman ;
29732: LD_ADDR_VAR 0 3
29736: PUSH
29737: CALL_OW 44
29741: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29742: LD_VAR 0 3
29746: PPUSH
29747: LD_VAR 0 4
29751: PPUSH
29752: LD_INT 0
29754: PPUSH
29755: CALL_OW 49
// end ;
29759: GO 29696
29761: POP
29762: POP
// for i = 1 to 3 do
29763: LD_ADDR_VAR 0 2
29767: PUSH
29768: DOUBLE
29769: LD_INT 1
29771: DEC
29772: ST_TO_ADDR
29773: LD_INT 3
29775: PUSH
29776: FOR_TO
29777: IFFALSE 29880
// begin hc_class = class_apeman ;
29779: LD_ADDR_OWVAR 28
29783: PUSH
29784: LD_INT 12
29786: ST_TO_ADDR
// hc_gallery =  ;
29787: LD_ADDR_OWVAR 33
29791: PUSH
29792: LD_STRING 
29794: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29795: LD_ADDR_OWVAR 35
29799: PUSH
29800: LD_INT 2
29802: NEG
29803: PPUSH
29804: LD_INT 2
29806: PPUSH
29807: CALL_OW 12
29811: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29812: LD_ADDR_OWVAR 31
29816: PUSH
29817: LD_INT 1
29819: PPUSH
29820: LD_INT 3
29822: PPUSH
29823: CALL_OW 12
29827: PUSH
29828: LD_INT 1
29830: PPUSH
29831: LD_INT 3
29833: PPUSH
29834: CALL_OW 12
29838: PUSH
29839: LD_INT 0
29841: PUSH
29842: LD_INT 0
29844: PUSH
29845: EMPTY
29846: LIST
29847: LIST
29848: LIST
29849: LIST
29850: ST_TO_ADDR
// animal := CreateHuman ;
29851: LD_ADDR_VAR 0 3
29855: PUSH
29856: CALL_OW 44
29860: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29861: LD_VAR 0 3
29865: PPUSH
29866: LD_VAR 0 4
29870: PPUSH
29871: LD_INT 0
29873: PPUSH
29874: CALL_OW 49
// end ;
29878: GO 29776
29880: POP
29881: POP
// for i = 1 to 3 do
29882: LD_ADDR_VAR 0 2
29886: PUSH
29887: DOUBLE
29888: LD_INT 1
29890: DEC
29891: ST_TO_ADDR
29892: LD_INT 3
29894: PUSH
29895: FOR_TO
29896: IFFALSE 29943
// begin hc_class = 13 ;
29898: LD_ADDR_OWVAR 28
29902: PUSH
29903: LD_INT 13
29905: ST_TO_ADDR
// hc_gallery =  ;
29906: LD_ADDR_OWVAR 33
29910: PUSH
29911: LD_STRING 
29913: ST_TO_ADDR
// animal := CreateHuman ;
29914: LD_ADDR_VAR 0 3
29918: PUSH
29919: CALL_OW 44
29923: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29924: LD_VAR 0 3
29928: PPUSH
29929: LD_VAR 0 4
29933: PPUSH
29934: LD_INT 0
29936: PPUSH
29937: CALL_OW 49
// end ;
29941: GO 29895
29943: POP
29944: POP
// for i = 1 to 3 do
29945: LD_ADDR_VAR 0 2
29949: PUSH
29950: DOUBLE
29951: LD_INT 1
29953: DEC
29954: ST_TO_ADDR
29955: LD_INT 3
29957: PUSH
29958: FOR_TO
29959: IFFALSE 30004
// begin hc_class = 20 ;
29961: LD_ADDR_OWVAR 28
29965: PUSH
29966: LD_INT 20
29968: ST_TO_ADDR
// hc_gallery =  ;
29969: LD_ADDR_OWVAR 33
29973: PUSH
29974: LD_STRING 
29976: ST_TO_ADDR
// animal := CreateHuman ;
29977: LD_ADDR_VAR 0 3
29981: PUSH
29982: CALL_OW 44
29986: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
29987: LD_VAR 0 3
29991: PPUSH
29992: LD_INT 4
29994: PPUSH
29995: LD_INT 0
29997: PPUSH
29998: CALL_OW 49
// end ;
30002: GO 29958
30004: POP
30005: POP
// end ; end_of_file
30006: LD_VAR 0 1
30010: RET
// export function Action ; begin
30011: LD_INT 0
30013: PPUSH
// InGameOn ;
30014: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30018: LD_EXP 11
30022: PPUSH
30023: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30027: LD_EXP 11
30031: PPUSH
30032: LD_STRING D1-JMM-1
30034: PPUSH
30035: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30039: LD_EXP 12
30043: PPUSH
30044: LD_STRING D1-Roth-1
30046: PPUSH
30047: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30051: LD_EXP 11
30055: PPUSH
30056: LD_STRING D1-JMM-2
30058: PPUSH
30059: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30063: LD_EXP 12
30067: PPUSH
30068: LD_STRING D1-Roth-2
30070: PPUSH
30071: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30075: LD_EXP 11
30079: PPUSH
30080: LD_STRING D1-JMM-3
30082: PPUSH
30083: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30087: LD_EXP 12
30091: PPUSH
30092: LD_STRING D1-Roth-3
30094: PPUSH
30095: CALL_OW 88
// ComInvisible ( Roth ) ;
30099: LD_EXP 12
30103: PPUSH
30104: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30108: LD_INT 46
30110: PPUSH
30111: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30115: LD_EXP 11
30119: PPUSH
30120: LD_STRING D1-JMM-4
30122: PPUSH
30123: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30127: LD_INT 10
30129: PPUSH
30130: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30134: LD_EXP 12
30138: PPUSH
30139: LD_EXP 11
30143: PPUSH
30144: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30148: LD_EXP 11
30152: PPUSH
30153: LD_STRING D1-JMM-4a
30155: PPUSH
30156: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30160: LD_EXP 12
30164: PPUSH
30165: LD_STRING D1-Roth-4
30167: PPUSH
30168: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30172: LD_EXP 11
30176: PPUSH
30177: LD_STRING D1-JMM-5
30179: PPUSH
30180: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30184: LD_EXP 12
30188: PPUSH
30189: LD_STRING D1-Roth-5
30191: PPUSH
30192: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30196: LD_EXP 11
30200: PPUSH
30201: LD_STRING D1-JMM-6
30203: PPUSH
30204: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30208: LD_EXP 12
30212: PPUSH
30213: LD_STRING D1-Roth-6
30215: PPUSH
30216: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30220: LD_EXP 11
30224: PPUSH
30225: LD_STRING D1-JMM-7
30227: PPUSH
30228: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30232: LD_EXP 13
30236: PPUSH
30237: LD_EXP 11
30241: PPUSH
30242: CALL_OW 250
30246: PPUSH
30247: LD_EXP 11
30251: PPUSH
30252: CALL_OW 251
30256: PPUSH
30257: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30261: LD_EXP 12
30265: PPUSH
30266: LD_STRING D1-Roth-7
30268: PPUSH
30269: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30273: LD_INT 10
30275: PPUSH
30276: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30280: LD_EXP 13
30284: PPUSH
30285: LD_EXP 11
30289: PPUSH
30290: CALL_OW 296
30294: PUSH
30295: LD_INT 6
30297: LESS
30298: IFFALSE 30273
// ComTurnUnit ( Powell , JMM ) ;
30300: LD_EXP 13
30304: PPUSH
30305: LD_EXP 11
30309: PPUSH
30310: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30314: LD_EXP 13
30318: PPUSH
30319: LD_STRING D1-Pow-7
30321: PPUSH
30322: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30326: LD_EXP 11
30330: PPUSH
30331: LD_EXP 13
30335: PPUSH
30336: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30340: LD_EXP 12
30344: PPUSH
30345: LD_EXP 13
30349: PPUSH
30350: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30354: LD_EXP 11
30358: PPUSH
30359: LD_STRING D1-JMM-8
30361: PPUSH
30362: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30366: LD_EXP 13
30370: PPUSH
30371: LD_STRING D1-Pow-8
30373: PPUSH
30374: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30378: LD_EXP 11
30382: PPUSH
30383: LD_STRING D1-JMM-9
30385: PPUSH
30386: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30390: LD_EXP 13
30394: PPUSH
30395: LD_INT 124
30397: PPUSH
30398: LD_INT 61
30400: PPUSH
30401: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30405: LD_INT 35
30407: PPUSH
30408: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30412: LD_EXP 11
30416: PPUSH
30417: LD_EXP 13
30421: PPUSH
30422: CALL_OW 296
30426: PUSH
30427: LD_INT 6
30429: GREATER
30430: IFFALSE 30405
// SayRadio ( Powell , D1-Pow-9 ) ;
30432: LD_EXP 13
30436: PPUSH
30437: LD_STRING D1-Pow-9
30439: PPUSH
30440: CALL_OW 94
// RemoveUnit ( Powell ) ;
30444: LD_EXP 13
30448: PPUSH
30449: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30453: LD_EXP 13
30457: PPUSH
30458: LD_INT 18
30460: PPUSH
30461: CALL_OW 52
// if Joan and not Joan in selected then
30465: LD_EXP 33
30469: PUSH
30470: LD_EXP 33
30474: PUSH
30475: LD_EXP 3
30479: IN
30480: NOT
30481: AND
30482: IFFALSE 30496
// SayRadio ( Joan , D1-Joan-9 ) ;
30484: LD_EXP 33
30488: PPUSH
30489: LD_STRING D1-Joan-9
30491: PPUSH
30492: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30496: LD_EXP 12
30500: PPUSH
30501: LD_EXP 11
30505: PPUSH
30506: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30510: LD_EXP 11
30514: PPUSH
30515: LD_EXP 12
30519: PPUSH
30520: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30524: LD_EXP 12
30528: PPUSH
30529: LD_STRING D1-Roth-9
30531: PPUSH
30532: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30536: LD_EXP 11
30540: PPUSH
30541: LD_STRING D1-JMM-10
30543: PPUSH
30544: CALL_OW 88
// InGameOff ;
30548: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30552: LD_STRING M1
30554: PPUSH
30555: CALL_OW 337
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30559: LD_INT 7
30561: PPUSH
30562: LD_INT 1
30564: PPUSH
30565: LD_INT 2
30567: PPUSH
30568: LD_INT 1
30570: PPUSH
30571: CALL_OW 80
// wait ( 0 0$3 ) ;
30575: LD_INT 105
30577: PPUSH
30578: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30582: LD_EXP 12
30586: PPUSH
30587: LD_INT 124
30589: PPUSH
30590: LD_INT 18
30592: PPUSH
30593: CALL_OW 111
// AddComInvisible ( Roth ) ;
30597: LD_EXP 12
30601: PPUSH
30602: CALL_OW 212
// AddComWait ( Roth , 1 1$30 ) ;
30606: LD_EXP 12
30610: PPUSH
30611: LD_INT 3150
30613: PPUSH
30614: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30618: LD_EXP 12
30622: PPUSH
30623: LD_INT 156
30625: PPUSH
30626: LD_INT 20
30628: PPUSH
30629: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30633: LD_EXP 12
30637: PPUSH
30638: LD_INT 178
30640: PPUSH
30641: LD_INT 42
30643: PPUSH
30644: CALL_OW 171
// AddComInvisible ( Roth ) ;
30648: LD_EXP 12
30652: PPUSH
30653: CALL_OW 212
// end ;
30657: LD_VAR 0 1
30661: RET
// every 0 0$1 do var i , tmp ;
30662: GO 30664
30664: DISABLE
30665: LD_INT 0
30667: PPUSH
30668: PPUSH
// begin tmp := selected union friends union others ;
30669: LD_ADDR_VAR 0 2
30673: PUSH
30674: LD_EXP 3
30678: PUSH
30679: LD_EXP 4
30683: UNION
30684: PUSH
30685: LD_EXP 5
30689: UNION
30690: ST_TO_ADDR
// if not tmp then
30691: LD_VAR 0 2
30695: NOT
30696: IFFALSE 30700
// exit ;
30698: GO 30772
// repeat wait ( 0 0$1 ) ;
30700: LD_INT 35
30702: PPUSH
30703: CALL_OW 67
// for i in tmp do
30707: LD_ADDR_VAR 0 1
30711: PUSH
30712: LD_VAR 0 2
30716: PUSH
30717: FOR_IN
30718: IFFALSE 30763
// if CanSpot ( JMM , i ) then
30720: LD_EXP 11
30724: PPUSH
30725: LD_VAR 0 1
30729: PPUSH
30730: CALL 27319 0 2
30734: IFFALSE 30761
// begin tmp := tmp diff i ;
30736: LD_ADDR_VAR 0 2
30740: PUSH
30741: LD_VAR 0 2
30745: PUSH
30746: LD_VAR 0 1
30750: DIFF
30751: ST_TO_ADDR
// Spot ( i ) ;
30752: LD_VAR 0 1
30756: PPUSH
30757: CALL 30775 0 1
// end ;
30761: GO 30717
30763: POP
30764: POP
// until not tmp ;
30765: LD_VAR 0 2
30769: NOT
30770: IFFALSE 30700
// end ;
30772: PPOPN 2
30774: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30775: LD_INT 0
30777: PPUSH
30778: PPUSH
30779: PPUSH
30780: PPUSH
// if not unit then
30781: LD_VAR 0 1
30785: NOT
30786: IFFALSE 30790
// exit ;
30788: GO 32679
// InGameOn ;
30790: CALL_OW 8
// side := GetSide ( JMM ) ;
30794: LD_ADDR_VAR 0 4
30798: PUSH
30799: LD_EXP 11
30803: PPUSH
30804: CALL_OW 255
30808: ST_TO_ADDR
// joined := false ;
30809: LD_ADDR_VAR 0 5
30813: PUSH
30814: LD_INT 0
30816: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30817: LD_ADDR_VAR 0 3
30821: PUSH
30822: LD_VAR 0 1
30826: PPUSH
30827: CALL_OW 310
30831: ST_TO_ADDR
// if building then
30832: LD_VAR 0 3
30836: IFFALSE 30895
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30838: LD_EXP 11
30842: PPUSH
30843: LD_VAR 0 1
30847: PPUSH
30848: CALL_OW 255
30852: PPUSH
30853: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30857: LD_EXP 11
30861: PPUSH
30862: LD_VAR 0 3
30866: PPUSH
30867: CALL_OW 120
// repeat wait ( 3 ) ;
30871: LD_INT 3
30873: PPUSH
30874: CALL_OW 67
// until IsInUnit ( JMM ) ;
30878: LD_EXP 11
30882: PPUSH
30883: CALL_OW 310
30887: IFFALSE 30871
// DialogueOn ;
30889: CALL_OW 6
// end else
30893: GO 30927
// begin ComTurnUnit ( JMM , unit ) ;
30895: LD_EXP 11
30899: PPUSH
30900: LD_VAR 0 1
30904: PPUSH
30905: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30909: LD_VAR 0 1
30913: PPUSH
30914: LD_EXP 11
30918: PPUSH
30919: CALL_OW 119
// DialogueOn ;
30923: CALL_OW 6
// end ; if unit = Joan then
30927: LD_VAR 0 1
30931: PUSH
30932: LD_EXP 33
30936: EQUAL
30937: IFFALSE 31047
// begin joined := true ;
30939: LD_ADDR_VAR 0 5
30943: PUSH
30944: LD_INT 1
30946: ST_TO_ADDR
// if Joan in selected then
30947: LD_EXP 33
30951: PUSH
30952: LD_EXP 3
30956: IN
30957: IFFALSE 30985
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
30959: LD_EXP 33
30963: PPUSH
30964: LD_STRING D3-Joan-Joan-1
30966: PPUSH
30967: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
30971: LD_EXP 11
30975: PPUSH
30976: LD_STRING D3-Joan-JMM-1
30978: PPUSH
30979: CALL_OW 88
// end else
30983: GO 31045
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
30985: LD_EXP 33
30989: PPUSH
30990: LD_STRING D4-Joan-Joan-1
30992: PPUSH
30993: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
30997: LD_EXP 11
31001: PPUSH
31002: LD_STRING D4-Joan-JMM-1
31004: PPUSH
31005: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31009: LD_EXP 33
31013: PPUSH
31014: LD_STRING D4-Joan-Joan-2
31016: PPUSH
31017: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31021: LD_EXP 11
31025: PPUSH
31026: LD_STRING D4-Joan-JMM-2
31028: PPUSH
31029: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31033: LD_EXP 33
31037: PPUSH
31038: LD_STRING D4-Joan-Joan-3
31040: PPUSH
31041: CALL_OW 88
// end ; end else
31045: GO 32487
// if unit = Lisa then
31047: LD_VAR 0 1
31051: PUSH
31052: LD_EXP 20
31056: EQUAL
31057: IFFALSE 31249
// begin if Lisa in selected then
31059: LD_EXP 20
31063: PUSH
31064: LD_EXP 3
31068: IN
31069: IFFALSE 31182
// begin if GetSide ( Joan ) = 7 then
31071: LD_EXP 33
31075: PPUSH
31076: CALL_OW 255
31080: PUSH
31081: LD_INT 7
31083: EQUAL
31084: IFFALSE 31148
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31086: LD_EXP 20
31090: PPUSH
31091: LD_STRING D3-LisaJ-Lisa-1
31093: PPUSH
31094: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31098: LD_EXP 11
31102: PPUSH
31103: LD_STRING D3-LisaJ-JMM-1
31105: PPUSH
31106: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31110: LD_EXP 20
31114: PPUSH
31115: LD_STRING D3-LisaJ-Lisa-2
31117: PPUSH
31118: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31122: LD_EXP 11
31126: PPUSH
31127: LD_STRING D3-LisaJ-JMM-2
31129: PPUSH
31130: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31134: LD_EXP 20
31138: PPUSH
31139: LD_STRING D3-LisaJ-Lisa-3
31141: PPUSH
31142: CALL_OW 88
// end else
31146: GO 31180
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31148: LD_EXP 20
31152: PPUSH
31153: LD_STRING D3-LisaL-Lisa-1
31155: PPUSH
31156: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31160: LD_EXP 11
31164: PPUSH
31165: LD_STRING D3-LisaL-JMM-1
31167: PPUSH
31168: CALL_OW 88
// joined := true ;
31172: LD_ADDR_VAR 0 5
31176: PUSH
31177: LD_INT 1
31179: ST_TO_ADDR
// end ; end else
31180: GO 31247
// begin if GetSide ( Joan ) = 7 then
31182: LD_EXP 33
31186: PPUSH
31187: CALL_OW 255
31191: PUSH
31192: LD_INT 7
31194: EQUAL
31195: IFFALSE 31235
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31197: LD_EXP 20
31201: PPUSH
31202: LD_STRING D4-LisaJ-Lisa-1
31204: PPUSH
31205: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31209: LD_EXP 11
31213: PPUSH
31214: LD_STRING D4-LisaJ-JMM-1
31216: PPUSH
31217: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31221: LD_EXP 20
31225: PPUSH
31226: LD_STRING D4-LisaJ-Lisa-2
31228: PPUSH
31229: CALL_OW 88
// end else
31233: GO 31247
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31235: LD_EXP 20
31239: PPUSH
31240: LD_STRING D4-LisaL-Lisa-1
31242: PPUSH
31243: CALL_OW 88
// end ; end ; end else
31247: GO 32487
// if unit = Frank then
31249: LD_VAR 0 1
31253: PUSH
31254: LD_EXP 30
31258: EQUAL
31259: IFFALSE 31399
// begin joined := true ;
31261: LD_ADDR_VAR 0 5
31265: PUSH
31266: LD_INT 1
31268: ST_TO_ADDR
// if Frank in selected then
31269: LD_EXP 30
31273: PUSH
31274: LD_EXP 3
31278: IN
31279: IFFALSE 31349
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31281: LD_EXP 30
31285: PPUSH
31286: LD_STRING D3-Frank-Frank-1
31288: PPUSH
31289: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31293: LD_EXP 11
31297: PPUSH
31298: LD_STRING D3-Frank-JMM-1
31300: PPUSH
31301: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31305: LD_EXP 30
31309: PPUSH
31310: LD_STRING D3-Frank-Frank-2
31312: PPUSH
31313: CALL_OW 88
// if reached_lab then
31317: LD_EXP 6
31321: IFFALSE 31347
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31323: LD_EXP 11
31327: PPUSH
31328: LD_STRING D3-Frank-JMM-2
31330: PPUSH
31331: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31335: LD_EXP 30
31339: PPUSH
31340: LD_STRING D3-Frank-Frank-3
31342: PPUSH
31343: CALL_OW 88
// end ; end else
31347: GO 31397
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31349: LD_EXP 30
31353: PPUSH
31354: LD_STRING D4-Frank-Frank-1
31356: PPUSH
31357: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31361: LD_EXP 11
31365: PPUSH
31366: LD_STRING D4-Frank-JMM-1
31368: PPUSH
31369: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31373: LD_EXP 30
31377: PPUSH
31378: LD_STRING D4-Frank-Frank-2
31380: PPUSH
31381: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31385: LD_EXP 11
31389: PPUSH
31390: LD_STRING D4-Frank-JMM-2
31392: PPUSH
31393: CALL_OW 88
// end ; end else
31397: GO 32487
// if unit = Brown then
31399: LD_VAR 0 1
31403: PUSH
31404: LD_EXP 25
31408: EQUAL
31409: IFFALSE 31505
// begin if Brown in selected or gamma_commander = 2 then
31411: LD_EXP 25
31415: PUSH
31416: LD_EXP 3
31420: IN
31421: PUSH
31422: LD_EXP 10
31426: PUSH
31427: LD_INT 2
31429: EQUAL
31430: OR
31431: IFFALSE 31467
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31433: LD_EXP 25
31437: PPUSH
31438: LD_STRING D3-Soldier1-Sol1-1
31440: PPUSH
31441: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31445: LD_EXP 11
31449: PPUSH
31450: LD_STRING D3-Soldier1-JMM-1
31452: PPUSH
31453: CALL_OW 88
// joined := true ;
31457: LD_ADDR_VAR 0 5
31461: PUSH
31462: LD_INT 1
31464: ST_TO_ADDR
// end else
31465: GO 31503
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31467: LD_EXP 25
31471: PPUSH
31472: LD_STRING D4-Soldier1-Sol1-1
31474: PPUSH
31475: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31479: LD_EXP 11
31483: PPUSH
31484: LD_STRING D4-Soldier1-JMM-1
31486: PPUSH
31487: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31491: LD_EXP 25
31495: PPUSH
31496: LD_STRING D4-Soldier1-Sol1-2
31498: PPUSH
31499: CALL_OW 88
// end ; end else
31503: GO 32487
// if unit = Donaldson then
31505: LD_VAR 0 1
31509: PUSH
31510: LD_EXP 21
31514: EQUAL
31515: IFFALSE 31611
// begin if Donaldson in selected or gamma_commander = 1 then
31517: LD_EXP 21
31521: PUSH
31522: LD_EXP 3
31526: IN
31527: PUSH
31528: LD_EXP 10
31532: PUSH
31533: LD_INT 1
31535: EQUAL
31536: OR
31537: IFFALSE 31573
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31539: LD_EXP 21
31543: PPUSH
31544: LD_STRING D3-Soldier2-FSol2-1
31546: PPUSH
31547: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31551: LD_EXP 11
31555: PPUSH
31556: LD_STRING D3-Soldier2-JMM-1
31558: PPUSH
31559: CALL_OW 88
// joined := true ;
31563: LD_ADDR_VAR 0 5
31567: PUSH
31568: LD_INT 1
31570: ST_TO_ADDR
// end else
31571: GO 31609
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31573: LD_VAR 0 1
31577: PPUSH
31578: LD_STRING D4-Soldier1-FSol1-1
31580: PPUSH
31581: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31585: LD_EXP 11
31589: PPUSH
31590: LD_STRING D4-Soldier1-JMM-1
31592: PPUSH
31593: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31597: LD_VAR 0 1
31601: PPUSH
31602: LD_STRING D4-Soldier1-FSol1-2
31604: PPUSH
31605: CALL_OW 88
// end ; end else
31609: GO 32487
// if unit = Cyrus then
31611: LD_VAR 0 1
31615: PUSH
31616: LD_EXP 23
31620: EQUAL
31621: IFFALSE 31695
// begin if Cyrus in selected then
31623: LD_EXP 23
31627: PUSH
31628: LD_EXP 3
31632: IN
31633: IFFALSE 31669
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31635: LD_EXP 23
31639: PPUSH
31640: LD_STRING D3-Cyrus-Cyrus-1
31642: PPUSH
31643: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31647: LD_EXP 11
31651: PPUSH
31652: LD_STRING D3-Cyrus-JMM-1
31654: PPUSH
31655: CALL_OW 88
// joined := true ;
31659: LD_ADDR_VAR 0 5
31663: PUSH
31664: LD_INT 1
31666: ST_TO_ADDR
// end else
31667: GO 31693
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31669: LD_EXP 23
31673: PPUSH
31674: LD_STRING D4-Cyrus-Cyrus-1
31676: PPUSH
31677: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31681: LD_EXP 11
31685: PPUSH
31686: LD_STRING D4-Cyrus-JMM-1
31688: PPUSH
31689: CALL_OW 88
// end ; end else
31693: GO 32487
// if unit = Bobby then
31695: LD_VAR 0 1
31699: PUSH
31700: LD_EXP 22
31704: EQUAL
31705: IFFALSE 31791
// begin if Bobby in selected then
31707: LD_EXP 22
31711: PUSH
31712: LD_EXP 3
31716: IN
31717: IFFALSE 31753
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31719: LD_EXP 22
31723: PPUSH
31724: LD_STRING D3-Bobby-Bobby-1
31726: PPUSH
31727: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31731: LD_EXP 11
31735: PPUSH
31736: LD_STRING D3-Bobby-JMM-1
31738: PPUSH
31739: CALL_OW 88
// joined := true ;
31743: LD_ADDR_VAR 0 5
31747: PUSH
31748: LD_INT 1
31750: ST_TO_ADDR
// end else
31751: GO 31789
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31753: LD_EXP 22
31757: PPUSH
31758: LD_STRING D4-Bobby-Bobby-1
31760: PPUSH
31761: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31765: LD_EXP 11
31769: PPUSH
31770: LD_STRING D4-Bobby-JMM-1
31772: PPUSH
31773: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31777: LD_EXP 22
31781: PPUSH
31782: LD_STRING D4-Bobby-Bobby-2
31784: PPUSH
31785: CALL_OW 88
// end ; end else
31789: GO 32487
// if unit = Cornel then
31791: LD_VAR 0 1
31795: PUSH
31796: LD_EXP 28
31800: EQUAL
31801: IFFALSE 31899
// begin if Cornel in selected then
31803: LD_EXP 28
31807: PUSH
31808: LD_EXP 3
31812: IN
31813: IFFALSE 31861
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31815: LD_EXP 28
31819: PPUSH
31820: LD_STRING D3-Mark-Corn-1
31822: PPUSH
31823: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31827: LD_EXP 11
31831: PPUSH
31832: LD_STRING D3-Mark-JMM-1
31834: PPUSH
31835: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31839: LD_EXP 28
31843: PPUSH
31844: LD_STRING D3-Mark-Corn-2
31846: PPUSH
31847: CALL_OW 88
// joined := true ;
31851: LD_ADDR_VAR 0 5
31855: PUSH
31856: LD_INT 1
31858: ST_TO_ADDR
// end else
31859: GO 31897
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31861: LD_EXP 28
31865: PPUSH
31866: LD_STRING D4-Mark-Corn-1
31868: PPUSH
31869: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31873: LD_EXP 11
31877: PPUSH
31878: LD_STRING D3-Joan-JMM-1
31880: PPUSH
31881: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31885: LD_EXP 28
31889: PPUSH
31890: LD_STRING D4-Mark-Corn-2
31892: PPUSH
31893: CALL_OW 88
// end ; end else
31897: GO 32487
// if unit = Gary then
31899: LD_VAR 0 1
31903: PUSH
31904: LD_EXP 29
31908: EQUAL
31909: IFFALSE 31993
// begin if Gary in selected then
31911: LD_EXP 29
31915: PUSH
31916: LD_EXP 3
31920: IN
31921: IFFALSE 31957
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
31923: LD_EXP 29
31927: PPUSH
31928: LD_STRING D3-Gary-Gary-1
31930: PPUSH
31931: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
31935: LD_EXP 11
31939: PPUSH
31940: LD_STRING D3-Gary-JMM-1
31942: PPUSH
31943: CALL_OW 88
// joined := true ;
31947: LD_ADDR_VAR 0 5
31951: PUSH
31952: LD_INT 1
31954: ST_TO_ADDR
// end else
31955: GO 31991
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
31957: LD_EXP 29
31961: PPUSH
31962: LD_STRING D4-Gary-Gary-1
31964: PPUSH
31965: CALL_OW 88
// SetSide ( Gary , 1 ) ;
31969: LD_EXP 29
31973: PPUSH
31974: LD_INT 1
31976: PPUSH
31977: CALL_OW 235
// DialogueOff ;
31981: CALL_OW 7
// InGameOff ;
31985: CALL_OW 9
// exit ;
31989: GO 32679
// end ; end else
31991: GO 32487
// if unit = Kikuchi then
31993: LD_VAR 0 1
31997: PUSH
31998: LD_EXP 31
32002: EQUAL
32003: IFFALSE 32087
// begin if Kikuchi in selected then
32005: LD_EXP 31
32009: PUSH
32010: LD_EXP 3
32014: IN
32015: IFFALSE 32051
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32017: LD_EXP 31
32021: PPUSH
32022: LD_STRING D3-Yamako-Yam-1
32024: PPUSH
32025: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32029: LD_EXP 11
32033: PPUSH
32034: LD_STRING D3-Soldier2-JMM-1
32036: PPUSH
32037: CALL_OW 88
// joined := true ;
32041: LD_ADDR_VAR 0 5
32045: PUSH
32046: LD_INT 1
32048: ST_TO_ADDR
// end else
32049: GO 32085
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32051: LD_EXP 31
32055: PPUSH
32056: LD_STRING D4-Yamako-Yam-1
32058: PPUSH
32059: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32063: LD_EXP 31
32067: PPUSH
32068: LD_INT 1
32070: PPUSH
32071: CALL_OW 235
// DialogueOff ;
32075: CALL_OW 7
// InGameOff ;
32079: CALL_OW 9
// exit ;
32083: GO 32679
// end ; end else
32085: GO 32487
// if unit = Gladstone then
32087: LD_VAR 0 1
32091: PUSH
32092: LD_EXP 26
32096: EQUAL
32097: IFFALSE 32171
// begin if Gladstone in selected then
32099: LD_EXP 26
32103: PUSH
32104: LD_EXP 3
32108: IN
32109: IFFALSE 32145
// begin joined := true ;
32111: LD_ADDR_VAR 0 5
32115: PUSH
32116: LD_INT 1
32118: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32119: LD_EXP 11
32123: PPUSH
32124: LD_STRING D3-Tim-JMM-1
32126: PPUSH
32127: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32131: LD_EXP 26
32135: PPUSH
32136: LD_STRING D3-Tim-Glad-1
32138: PPUSH
32139: CALL_OW 88
// end else
32143: GO 32169
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32145: LD_EXP 11
32149: PPUSH
32150: LD_STRING D4-Tim-JMM-1
32152: PPUSH
32153: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32157: LD_EXP 26
32161: PPUSH
32162: LD_STRING D4-Tim-Glad-1
32164: PPUSH
32165: CALL_OW 88
// end ; end else
32169: GO 32487
// if unit = Denis then
32171: LD_VAR 0 1
32175: PUSH
32176: LD_EXP 24
32180: EQUAL
32181: IFFALSE 32217
// begin joined := true ;
32183: LD_ADDR_VAR 0 5
32187: PUSH
32188: LD_INT 1
32190: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32191: LD_EXP 24
32195: PPUSH
32196: LD_STRING D3-Denis-Den-1
32198: PPUSH
32199: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32203: LD_EXP 11
32207: PPUSH
32208: LD_STRING D3-Denis-JMM-1
32210: PPUSH
32211: CALL_OW 88
// end else
32215: GO 32487
// if unit = Simms then
32217: LD_VAR 0 1
32221: PUSH
32222: LD_EXP 32
32226: EQUAL
32227: IFFALSE 32263
// begin joined := true ;
32229: LD_ADDR_VAR 0 5
32233: PUSH
32234: LD_INT 1
32236: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32237: LD_EXP 32
32241: PPUSH
32242: LD_STRING D3-Simms-Sim-1
32244: PPUSH
32245: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32249: LD_EXP 11
32253: PPUSH
32254: LD_STRING D3-Simms-JMM-1
32256: PPUSH
32257: CALL_OW 88
// end else
32261: GO 32487
// if unit = DeltaDoctor then
32263: LD_VAR 0 1
32267: PUSH
32268: LD_EXP 34
32272: EQUAL
32273: IFFALSE 32309
// begin joined := true ;
32275: LD_ADDR_VAR 0 5
32279: PUSH
32280: LD_INT 1
32282: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32283: LD_EXP 34
32287: PPUSH
32288: LD_STRING D3-Soldier1-Sol1-1
32290: PPUSH
32291: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32295: LD_EXP 11
32299: PPUSH
32300: LD_STRING D3-Soldier1-JMM-1
32302: PPUSH
32303: CALL_OW 88
// end else
32307: GO 32487
// begin joined := unit in selected ;
32309: LD_ADDR_VAR 0 5
32313: PUSH
32314: LD_VAR 0 1
32318: PUSH
32319: LD_EXP 3
32323: IN
32324: ST_TO_ADDR
// if joined then
32325: LD_VAR 0 5
32329: IFFALSE 32398
// begin if GetSex ( unit ) = sex_male then
32331: LD_VAR 0 1
32335: PPUSH
32336: CALL_OW 258
32340: PUSH
32341: LD_INT 1
32343: EQUAL
32344: IFFALSE 32372
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32346: LD_VAR 0 1
32350: PPUSH
32351: LD_STRING D3-Soldier1-Sol1-1
32353: PPUSH
32354: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32358: LD_EXP 11
32362: PPUSH
32363: LD_STRING D3-Soldier1-JMM-1
32365: PPUSH
32366: CALL_OW 88
// end else
32370: GO 32396
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32372: LD_VAR 0 1
32376: PPUSH
32377: LD_STRING D3-Soldier2-FSol2-1
32379: PPUSH
32380: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32384: LD_EXP 11
32388: PPUSH
32389: LD_STRING D3-Soldier2-JMM-1
32391: PPUSH
32392: CALL_OW 88
// end ; end else
32396: GO 32487
// begin if GetSex ( unit ) = sex_male then
32398: LD_VAR 0 1
32402: PPUSH
32403: CALL_OW 258
32407: PUSH
32408: LD_INT 1
32410: EQUAL
32411: IFFALSE 32451
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32413: LD_VAR 0 1
32417: PPUSH
32418: LD_STRING D4-Soldier2-Sol1-1
32420: PPUSH
32421: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32425: LD_EXP 11
32429: PPUSH
32430: LD_STRING D4-Soldier2-JMM-1
32432: PPUSH
32433: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32437: LD_VAR 0 1
32441: PPUSH
32442: LD_STRING D4-Soldier2-Sol2-1
32444: PPUSH
32445: CALL_OW 88
// end else
32449: GO 32487
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32451: LD_VAR 0 1
32455: PPUSH
32456: LD_STRING D4-Soldier1-FSol1-1
32458: PPUSH
32459: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32463: LD_EXP 11
32467: PPUSH
32468: LD_STRING D4-Soldier1-JMM-1
32470: PPUSH
32471: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32475: LD_VAR 0 1
32479: PPUSH
32480: LD_STRING D4-Soldier1-FSol1-2
32482: PPUSH
32483: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32487: CALL_OW 7
// InGameOff ;
32491: CALL_OW 9
// if building then
32495: LD_VAR 0 3
32499: IFFALSE 32600
// begin SetSide ( JMM , side ) ;
32501: LD_EXP 11
32505: PPUSH
32506: LD_VAR 0 4
32510: PPUSH
32511: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32515: LD_EXP 11
32519: PPUSH
32520: CALL_OW 122
// if joined then
32524: LD_VAR 0 5
32528: IFFALSE 32567
// begin SetSide ( unit , side ) ;
32530: LD_VAR 0 1
32534: PPUSH
32535: LD_VAR 0 4
32539: PPUSH
32540: CALL_OW 235
// SetSide ( building , 1 ) ;
32544: LD_VAR 0 3
32548: PPUSH
32549: LD_INT 1
32551: PPUSH
32552: CALL_OW 235
// ComExitBuilding ( unit ) ;
32556: LD_VAR 0 1
32560: PPUSH
32561: CALL_OW 122
// end else
32565: GO 32598
// begin wait ( 0 0$10 ) ;
32567: LD_INT 350
32569: PPUSH
32570: CALL_OW 67
// SetSide ( unit , 1 ) ;
32574: LD_VAR 0 1
32578: PPUSH
32579: LD_INT 1
32581: PPUSH
32582: CALL_OW 235
// SetSide ( building , 1 ) ;
32586: LD_VAR 0 3
32590: PPUSH
32591: LD_INT 1
32593: PPUSH
32594: CALL_OW 235
// end ; end else
32598: GO 32679
// begin ComStop ( [ JMM , unit ] ) ;
32600: LD_EXP 11
32604: PUSH
32605: LD_VAR 0 1
32609: PUSH
32610: EMPTY
32611: LIST
32612: LIST
32613: PPUSH
32614: CALL_OW 141
// if joined then
32618: LD_VAR 0 5
32622: IFFALSE 32640
// SetSide ( unit , side ) else
32624: LD_VAR 0 1
32628: PPUSH
32629: LD_VAR 0 4
32633: PPUSH
32634: CALL_OW 235
32638: GO 32679
// begin repeat wait ( 0 0$1 ) ;
32640: LD_INT 35
32642: PPUSH
32643: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32647: LD_EXP 11
32651: PPUSH
32652: LD_VAR 0 1
32656: PPUSH
32657: CALL_OW 296
32661: PUSH
32662: LD_INT 10
32664: GREATER
32665: IFFALSE 32640
// SetSide ( unit , 1 ) ;
32667: LD_VAR 0 1
32671: PPUSH
32672: LD_INT 1
32674: PPUSH
32675: CALL_OW 235
// end ; end ; end ;
32679: LD_VAR 0 2
32683: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32684: LD_EXP 11
32688: PPUSH
32689: CALL_OW 310
32693: PUSH
32694: LD_INT 47
32696: EQUAL
32697: IFFALSE 32765
32699: GO 32701
32701: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32702: LD_STRING M1a
32704: PPUSH
32705: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32709: LD_INT 13
32711: PPUSH
32712: LD_INT 1
32714: PPUSH
32715: LD_INT 2
32717: PPUSH
32718: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32722: LD_INT 29
32724: PPUSH
32725: LD_INT 1
32727: PPUSH
32728: LD_INT 2
32730: PPUSH
32731: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32735: LD_EXP 11
32739: PPUSH
32740: LD_INT 9
32742: PPUSH
32743: CALL_OW 336
// can_escape := true ;
32747: LD_ADDR_EXP 7
32751: PUSH
32752: LD_INT 1
32754: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32755: LD_INT 19
32757: PPUSH
32758: LD_INT 1
32760: PPUSH
32761: CALL_OW 424
// end ;
32765: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32766: LD_INT 22
32768: PUSH
32769: LD_INT 4
32771: PUSH
32772: EMPTY
32773: LIST
32774: LIST
32775: PUSH
32776: LD_INT 34
32778: PUSH
32779: LD_INT 12
32781: PUSH
32782: EMPTY
32783: LIST
32784: LIST
32785: PUSH
32786: EMPTY
32787: LIST
32788: LIST
32789: PPUSH
32790: CALL_OW 69
32794: IFFALSE 32876
32796: GO 32798
32798: DISABLE
32799: LD_INT 0
32801: PPUSH
// begin enable ;
32802: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32803: LD_ADDR_VAR 0 1
32807: PUSH
32808: LD_INT 22
32810: PUSH
32811: LD_INT 4
32813: PUSH
32814: EMPTY
32815: LIST
32816: LIST
32817: PUSH
32818: LD_INT 34
32820: PUSH
32821: LD_INT 12
32823: PUSH
32824: EMPTY
32825: LIST
32826: LIST
32827: PUSH
32828: EMPTY
32829: LIST
32830: LIST
32831: PPUSH
32832: CALL_OW 69
32836: PUSH
32837: FOR_IN
32838: IFFALSE 32874
// if GetDistUnits ( i , JMM ) < 6 then
32840: LD_VAR 0 1
32844: PPUSH
32845: LD_EXP 11
32849: PPUSH
32850: CALL_OW 296
32854: PUSH
32855: LD_INT 6
32857: LESS
32858: IFFALSE 32872
// SetSide ( i , 7 ) ;
32860: LD_VAR 0 1
32864: PPUSH
32865: LD_INT 7
32867: PPUSH
32868: CALL_OW 235
32872: GO 32837
32874: POP
32875: POP
// end ;
32876: PPOPN 1
32878: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32879: LD_EXP 7
32883: PUSH
32884: LD_INT 19
32886: PPUSH
32887: LD_INT 22
32889: PUSH
32890: LD_INT 7
32892: PUSH
32893: EMPTY
32894: LIST
32895: LIST
32896: PUSH
32897: LD_INT 21
32899: PUSH
32900: LD_INT 1
32902: PUSH
32903: EMPTY
32904: LIST
32905: LIST
32906: PUSH
32907: EMPTY
32908: LIST
32909: LIST
32910: PPUSH
32911: CALL_OW 71
32915: NOT
32916: AND
32917: PUSH
32918: LD_INT 3
32920: PPUSH
32921: CALL_OW 469
32925: NOT
32926: AND
32927: PUSH
32928: LD_INT 5
32930: PPUSH
32931: CALL_OW 469
32935: NOT
32936: AND
32937: IFFALSE 34107
32939: GO 32941
32941: DISABLE
32942: LD_INT 0
32944: PPUSH
32945: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
32946: LD_ADDR_VAR 0 1
32950: PUSH
32951: LD_EXP 3
32955: PPUSH
32956: LD_INT 22
32958: PUSH
32959: LD_INT 4
32961: PUSH
32962: EMPTY
32963: LIST
32964: LIST
32965: PUSH
32966: LD_INT 21
32968: PUSH
32969: LD_INT 1
32971: PUSH
32972: EMPTY
32973: LIST
32974: LIST
32975: PUSH
32976: EMPTY
32977: LIST
32978: LIST
32979: PPUSH
32980: CALL_OW 72
32984: PUSH
32985: LD_INT 0
32987: EQUAL
32988: ST_TO_ADDR
// if not all_taken then
32989: LD_VAR 0 1
32993: NOT
32994: IFFALSE 33135
// case query ( Q1 ) of 1 :
32996: LD_STRING Q1
32998: PPUSH
32999: CALL_OW 97
33003: PUSH
33004: LD_INT 1
33006: DOUBLE
33007: EQUAL
33008: IFTRUE 33012
33010: GO 33123
33012: POP
// begin repeat wait ( 0 0$1 ) ;
33013: LD_INT 35
33015: PPUSH
33016: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33020: LD_EXP 3
33024: PPUSH
33025: LD_INT 22
33027: PUSH
33028: LD_INT 4
33030: PUSH
33031: EMPTY
33032: LIST
33033: LIST
33034: PUSH
33035: LD_INT 21
33037: PUSH
33038: LD_INT 1
33040: PUSH
33041: EMPTY
33042: LIST
33043: LIST
33044: PUSH
33045: EMPTY
33046: LIST
33047: LIST
33048: PPUSH
33049: CALL_OW 72
33053: PUSH
33054: LD_INT 0
33056: EQUAL
33057: PUSH
33058: LD_INT 19
33060: PPUSH
33061: LD_INT 22
33063: PUSH
33064: LD_INT 7
33066: PUSH
33067: EMPTY
33068: LIST
33069: LIST
33070: PUSH
33071: LD_INT 21
33073: PUSH
33074: LD_INT 1
33076: PUSH
33077: EMPTY
33078: LIST
33079: LIST
33080: PUSH
33081: EMPTY
33082: LIST
33083: LIST
33084: PPUSH
33085: CALL_OW 71
33089: NOT
33090: AND
33091: PUSH
33092: LD_INT 3
33094: PPUSH
33095: CALL_OW 469
33099: NOT
33100: AND
33101: PUSH
33102: LD_INT 5
33104: PPUSH
33105: CALL_OW 469
33109: NOT
33110: AND
33111: IFFALSE 33013
// all_taken := true ;
33113: LD_ADDR_VAR 0 1
33117: PUSH
33118: LD_INT 1
33120: ST_TO_ADDR
// end ; 2 :
33121: GO 33135
33123: LD_INT 2
33125: DOUBLE
33126: EQUAL
33127: IFTRUE 33131
33129: GO 33134
33131: POP
// ; end ;
33132: GO 33135
33134: POP
// if all_taken then
33135: LD_VAR 0 1
33139: IFFALSE 33153
// AddMedal ( All , 1 ) else
33141: LD_STRING All
33143: PPUSH
33144: LD_INT 1
33146: PPUSH
33147: CALL_OW 101
33151: GO 33164
// AddMedal ( All , - 1 ) ;
33153: LD_STRING All
33155: PPUSH
33156: LD_INT 1
33158: NEG
33159: PPUSH
33160: CALL_OW 101
// if team_kill_counter then
33164: LD_EXP 9
33168: IFFALSE 33183
// AddMedal ( Save , - 1 ) else
33170: LD_STRING Save
33172: PPUSH
33173: LD_INT 1
33175: NEG
33176: PPUSH
33177: CALL_OW 101
33181: GO 33193
// AddMedal ( Save , 1 ) ;
33183: LD_STRING Save
33185: PPUSH
33186: LD_INT 1
33188: PPUSH
33189: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33193: LD_EXP 8
33197: PUSH
33198: LD_INT 2
33200: PUSH
33201: LD_INT 1
33203: PUSH
33204: LD_INT 1
33206: PUSH
33207: EMPTY
33208: LIST
33209: LIST
33210: LIST
33211: PUSH
33212: LD_OWVAR 67
33216: ARRAY
33217: GREATEREQUAL
33218: IFFALSE 33233
// AddMedal ( Friendship , - 1 ) else
33220: LD_STRING Friendship
33222: PPUSH
33223: LD_INT 1
33225: NEG
33226: PPUSH
33227: CALL_OW 101
33231: GO 33243
// AddMedal ( Friendship , 1 ) ;
33233: LD_STRING Friendship
33235: PPUSH
33236: LD_INT 1
33238: PPUSH
33239: CALL_OW 101
// GiveMedals ( MAIN ) ;
33243: LD_STRING MAIN
33245: PPUSH
33246: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33250: LD_ADDR_VAR 0 2
33254: PUSH
33255: LD_INT 22
33257: PUSH
33258: LD_INT 7
33260: PUSH
33261: EMPTY
33262: LIST
33263: LIST
33264: PUSH
33265: LD_INT 2
33267: PUSH
33268: LD_INT 25
33270: PUSH
33271: LD_INT 1
33273: PUSH
33274: EMPTY
33275: LIST
33276: LIST
33277: PUSH
33278: LD_INT 25
33280: PUSH
33281: LD_INT 2
33283: PUSH
33284: EMPTY
33285: LIST
33286: LIST
33287: PUSH
33288: LD_INT 25
33290: PUSH
33291: LD_INT 3
33293: PUSH
33294: EMPTY
33295: LIST
33296: LIST
33297: PUSH
33298: LD_INT 25
33300: PUSH
33301: LD_INT 4
33303: PUSH
33304: EMPTY
33305: LIST
33306: LIST
33307: PUSH
33308: LD_INT 25
33310: PUSH
33311: LD_INT 5
33313: PUSH
33314: EMPTY
33315: LIST
33316: LIST
33317: PUSH
33318: LD_INT 25
33320: PUSH
33321: LD_INT 8
33323: PUSH
33324: EMPTY
33325: LIST
33326: LIST
33327: PUSH
33328: LD_INT 25
33330: PUSH
33331: LD_INT 9
33333: PUSH
33334: EMPTY
33335: LIST
33336: LIST
33337: PUSH
33338: EMPTY
33339: LIST
33340: LIST
33341: LIST
33342: LIST
33343: LIST
33344: LIST
33345: LIST
33346: LIST
33347: PUSH
33348: EMPTY
33349: LIST
33350: LIST
33351: PUSH
33352: EMPTY
33353: LIST
33354: PPUSH
33355: CALL_OW 69
33359: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33360: LD_VAR 0 2
33364: PUSH
33365: LD_EXP 12
33369: UNION
33370: PPUSH
33371: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33375: LD_EXP 11
33379: PPUSH
33380: LD_STRING 12a_JMM
33382: PPUSH
33383: CALL_OW 38
// if IsLive ( Roth ) then
33387: LD_EXP 12
33391: PPUSH
33392: CALL_OW 300
33396: IFFALSE 33410
// SaveCharacters ( Roth , 12a_Roth ) ;
33398: LD_EXP 12
33402: PPUSH
33403: LD_STRING 12a_Roth
33405: PPUSH
33406: CALL_OW 38
// if Lisa in tmp then
33410: LD_EXP 20
33414: PUSH
33415: LD_VAR 0 2
33419: IN
33420: IFFALSE 33436
// SaveCharacters ( Lisa , 12a_Lisa ) else
33422: LD_EXP 20
33426: PPUSH
33427: LD_STRING 12a_Lisa
33429: PPUSH
33430: CALL_OW 38
33434: GO 33454
// if Lisa then
33436: LD_EXP 20
33440: IFFALSE 33454
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33442: LD_EXP 20
33446: PPUSH
33447: LD_STRING 12p_Lisa
33449: PPUSH
33450: CALL_OW 38
// if Donaldson in tmp then
33454: LD_EXP 21
33458: PUSH
33459: LD_VAR 0 2
33463: IN
33464: IFFALSE 33480
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33466: LD_EXP 21
33470: PPUSH
33471: LD_STRING 12a_Donaldson
33473: PPUSH
33474: CALL_OW 38
33478: GO 33498
// if Donaldson then
33480: LD_EXP 21
33484: IFFALSE 33498
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33486: LD_EXP 21
33490: PPUSH
33491: LD_STRING 12p_Donaldson
33493: PPUSH
33494: CALL_OW 38
// if Bobby in tmp then
33498: LD_EXP 22
33502: PUSH
33503: LD_VAR 0 2
33507: IN
33508: IFFALSE 33524
// SaveCharacters ( Bobby , 12a_Bobby ) else
33510: LD_EXP 22
33514: PPUSH
33515: LD_STRING 12a_Bobby
33517: PPUSH
33518: CALL_OW 38
33522: GO 33542
// if Bobby then
33524: LD_EXP 22
33528: IFFALSE 33542
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33530: LD_EXP 22
33534: PPUSH
33535: LD_STRING 12p_Bobby
33537: PPUSH
33538: CALL_OW 38
// if Cyrus in tmp then
33542: LD_EXP 23
33546: PUSH
33547: LD_VAR 0 2
33551: IN
33552: IFFALSE 33568
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33554: LD_EXP 23
33558: PPUSH
33559: LD_STRING 12a_Cyrus
33561: PPUSH
33562: CALL_OW 38
33566: GO 33586
// if Cyrus then
33568: LD_EXP 23
33572: IFFALSE 33586
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33574: LD_EXP 23
33578: PPUSH
33579: LD_STRING 12p_Cyrus
33581: PPUSH
33582: CALL_OW 38
// if Denis in tmp then
33586: LD_EXP 24
33590: PUSH
33591: LD_VAR 0 2
33595: IN
33596: IFFALSE 33610
// SaveCharacters ( Denis , 12a_Denis ) ;
33598: LD_EXP 24
33602: PPUSH
33603: LD_STRING 12a_Denis
33605: PPUSH
33606: CALL_OW 38
// if Brown in tmp then
33610: LD_EXP 25
33614: PUSH
33615: LD_VAR 0 2
33619: IN
33620: IFFALSE 33636
// SaveCharacters ( Brown , 12a_Brown ) else
33622: LD_EXP 25
33626: PPUSH
33627: LD_STRING 12a_Brown
33629: PPUSH
33630: CALL_OW 38
33634: GO 33660
// if Brown in tmp then
33636: LD_EXP 25
33640: PUSH
33641: LD_VAR 0 2
33645: IN
33646: IFFALSE 33660
// SaveCharacters ( Brown , 12p_Brown ) ;
33648: LD_EXP 25
33652: PPUSH
33653: LD_STRING 12p_Brown
33655: PPUSH
33656: CALL_OW 38
// if Gladstone in tmp then
33660: LD_EXP 26
33664: PUSH
33665: LD_VAR 0 2
33669: IN
33670: IFFALSE 33686
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33672: LD_EXP 26
33676: PPUSH
33677: LD_STRING 12a_Gladstone
33679: PPUSH
33680: CALL_OW 38
33684: GO 33704
// if Gladstone then
33686: LD_EXP 26
33690: IFFALSE 33704
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33692: LD_EXP 26
33696: PPUSH
33697: LD_STRING 12p_Gladstone
33699: PPUSH
33700: CALL_OW 38
// if Houten in tmp then
33704: LD_EXP 27
33708: PUSH
33709: LD_VAR 0 2
33713: IN
33714: IFFALSE 33730
// SaveCharacters ( Houten , 12a_Houten ) else
33716: LD_EXP 27
33720: PPUSH
33721: LD_STRING 12a_Houten
33723: PPUSH
33724: CALL_OW 38
33728: GO 33748
// if Houten then
33730: LD_EXP 27
33734: IFFALSE 33748
// SaveCharacters ( Houten , 12p_Houten ) ;
33736: LD_EXP 27
33740: PPUSH
33741: LD_STRING 12p_Houten
33743: PPUSH
33744: CALL_OW 38
// if Cornel in tmp then
33748: LD_EXP 28
33752: PUSH
33753: LD_VAR 0 2
33757: IN
33758: IFFALSE 33774
// SaveCharacters ( Cornel , 12a_Cornel ) else
33760: LD_EXP 28
33764: PPUSH
33765: LD_STRING 12a_Cornel
33767: PPUSH
33768: CALL_OW 38
33772: GO 33792
// if Cornel then
33774: LD_EXP 28
33778: IFFALSE 33792
// SaveCharacters ( Cornel , 12p_Cornel ) ;
33780: LD_EXP 28
33784: PPUSH
33785: LD_STRING 12p_Cornel
33787: PPUSH
33788: CALL_OW 38
// if Gary in tmp then
33792: LD_EXP 29
33796: PUSH
33797: LD_VAR 0 2
33801: IN
33802: IFFALSE 33818
// SaveCharacters ( Gary , 12a_Gary ) else
33804: LD_EXP 29
33808: PPUSH
33809: LD_STRING 12a_Gary
33811: PPUSH
33812: CALL_OW 38
33816: GO 33836
// if Gary then
33818: LD_EXP 29
33822: IFFALSE 33836
// SaveCharacters ( Gary , 12p_Gary ) ;
33824: LD_EXP 29
33828: PPUSH
33829: LD_STRING 12p_Gary
33831: PPUSH
33832: CALL_OW 38
// if Kikuchi in tmp then
33836: LD_EXP 31
33840: PUSH
33841: LD_VAR 0 2
33845: IN
33846: IFFALSE 33862
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33848: LD_EXP 31
33852: PPUSH
33853: LD_STRING 12a_Kikuchi
33855: PPUSH
33856: CALL_OW 38
33860: GO 33880
// if Kikuchi then
33862: LD_EXP 31
33866: IFFALSE 33880
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
33868: LD_EXP 31
33872: PPUSH
33873: LD_STRING 12p_Kikuchi
33875: PPUSH
33876: CALL_OW 38
// if Simms in tmp then
33880: LD_EXP 32
33884: PUSH
33885: LD_VAR 0 2
33889: IN
33890: IFFALSE 33904
// SaveCharacters ( Simms , 12a_Simms ) ;
33892: LD_EXP 32
33896: PPUSH
33897: LD_STRING 12a_Simms
33899: PPUSH
33900: CALL_OW 38
// if Joan in tmp then
33904: LD_EXP 33
33908: PUSH
33909: LD_VAR 0 2
33913: IN
33914: IFFALSE 33928
// SaveCharacters ( Joan , 12a_Joan ) ;
33916: LD_EXP 33
33920: PPUSH
33921: LD_STRING 12a_Joan
33923: PPUSH
33924: CALL_OW 38
// if DeltaDoctor in tmp then
33928: LD_EXP 34
33932: PUSH
33933: LD_VAR 0 2
33937: IN
33938: IFFALSE 33952
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
33940: LD_EXP 34
33944: PPUSH
33945: LD_STRING 12a_DeltaDoctor
33947: PPUSH
33948: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
33952: LD_ADDR_VAR 0 2
33956: PUSH
33957: LD_VAR 0 2
33961: PUSH
33962: LD_EXP 11
33966: PUSH
33967: LD_EXP 12
33971: PUSH
33972: LD_EXP 20
33976: PUSH
33977: LD_EXP 21
33981: PUSH
33982: LD_EXP 22
33986: PUSH
33987: LD_EXP 23
33991: PUSH
33992: LD_EXP 24
33996: PUSH
33997: LD_EXP 25
34001: PUSH
34002: LD_EXP 26
34006: PUSH
34007: LD_EXP 27
34011: PUSH
34012: LD_EXP 28
34016: PUSH
34017: LD_EXP 29
34021: PUSH
34022: LD_EXP 30
34026: PUSH
34027: LD_EXP 31
34031: PUSH
34032: LD_EXP 32
34036: PUSH
34037: LD_EXP 33
34041: PUSH
34042: LD_EXP 34
34046: PUSH
34047: EMPTY
34048: LIST
34049: LIST
34050: LIST
34051: LIST
34052: LIST
34053: LIST
34054: LIST
34055: LIST
34056: LIST
34057: LIST
34058: LIST
34059: LIST
34060: LIST
34061: LIST
34062: LIST
34063: LIST
34064: LIST
34065: DIFF
34066: ST_TO_ADDR
// if tmp then
34067: LD_VAR 0 2
34071: IFFALSE 34085
// SaveCharacters ( tmp , 12a_others ) ;
34073: LD_VAR 0 2
34077: PPUSH
34078: LD_STRING 12a_others
34080: PPUSH
34081: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
34085: LD_EXP 5
34089: PUSH
34090: LD_VAR 0 2
34094: DIFF
34095: PPUSH
34096: LD_STRING 12p_others
34098: PPUSH
34099: CALL_OW 38
// YouWin ;
34103: CALL_OW 103
// end ; end_of_file
34107: PPOPN 2
34109: END
// on SailEvent ( event ) do var tmp ;
34110: LD_INT 0
34112: PPUSH
// begin if event = 1 then
34113: LD_VAR 0 1
34117: PUSH
34118: LD_INT 1
34120: EQUAL
34121: IFFALSE 34194
// begin if not mobile_patrol then
34123: LD_EXP 14
34127: NOT
34128: IFFALSE 34132
// exit ;
34130: GO 34194
// tmp := mobile_patrol [ mobile_patrol ] ;
34132: LD_ADDR_VAR 0 2
34136: PUSH
34137: LD_EXP 14
34141: PUSH
34142: LD_EXP 14
34146: ARRAY
34147: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34148: LD_ADDR_EXP 14
34152: PUSH
34153: LD_EXP 14
34157: PPUSH
34158: LD_EXP 14
34162: PPUSH
34163: CALL_OW 3
34167: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34168: LD_VAR 0 2
34172: PPUSH
34173: LD_EXP 15
34177: PUSH
34178: LD_EXP 14
34182: PUSH
34183: LD_INT 1
34185: PLUS
34186: ARRAY
34187: PPUSH
34188: EMPTY
34189: PPUSH
34190: CALL 6176 0 3
// end ; end ;
34194: PPOPN 2
34196: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34197: LD_VAR 0 1
34201: PUSH
34202: LD_EXP 11
34206: EQUAL
34207: IFFALSE 34216
// YouLost ( JMM ) ;
34209: LD_STRING JMM
34211: PPUSH
34212: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34216: LD_VAR 0 1
34220: PPUSH
34221: CALL_OW 255
34225: PUSH
34226: LD_INT 7
34228: EQUAL
34229: PUSH
34230: LD_VAR 0 1
34234: PPUSH
34235: CALL_OW 264
34239: PUSH
34240: LD_INT 12
34242: EQUAL
34243: AND
34244: IFFALSE 34253
// YouLost ( Artifact ) ;
34246: LD_STRING Artifact
34248: PPUSH
34249: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
34253: LD_VAR 0 1
34257: PPUSH
34258: CALL_OW 255
34262: PUSH
34263: LD_INT 7
34265: EQUAL
34266: PUSH
34267: LD_VAR 0 1
34271: PPUSH
34272: CALL_OW 247
34276: PUSH
34277: LD_INT 1
34279: EQUAL
34280: AND
34281: IFFALSE 34297
// team_kill_counter := team_kill_counter + 1 ;
34283: LD_ADDR_EXP 9
34287: PUSH
34288: LD_EXP 9
34292: PUSH
34293: LD_INT 1
34295: PLUS
34296: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34297: LD_VAR 0 1
34301: PPUSH
34302: CALL_OW 255
34306: PUSH
34307: LD_INT 1
34309: EQUAL
34310: PUSH
34311: LD_VAR 0 1
34315: PPUSH
34316: CALL_OW 247
34320: PUSH
34321: LD_INT 1
34323: EQUAL
34324: AND
34325: IFFALSE 34341
// friends_kill_counter := friends_kill_counter + 1 ;
34327: LD_ADDR_EXP 8
34331: PUSH
34332: LD_EXP 8
34336: PUSH
34337: LD_INT 1
34339: PLUS
34340: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34341: LD_VAR 0 1
34345: PPUSH
34346: CALL_OW 255
34350: PUSH
34351: LD_INT 1
34353: NONEQUAL
34354: IFFALSE 34358
// exit ;
34356: GO 34435
// if GetControl ( un ) = control_remote then
34358: LD_VAR 0 1
34362: PPUSH
34363: CALL_OW 263
34367: PUSH
34368: LD_INT 2
34370: EQUAL
34371: IFFALSE 34389
// defenders := defenders diff un ;
34373: LD_ADDR_EXP 17
34377: PUSH
34378: LD_EXP 17
34382: PUSH
34383: LD_VAR 0 1
34387: DIFF
34388: ST_TO_ADDR
// if not un in defenders then
34389: LD_VAR 0 1
34393: PUSH
34394: LD_EXP 17
34398: IN
34399: NOT
34400: IFFALSE 34435
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34402: LD_ADDR_EXP 18
34406: PUSH
34407: LD_VAR 0 1
34411: PPUSH
34412: CALL_OW 250
34416: PUSH
34417: LD_VAR 0 1
34421: PPUSH
34422: CALL_OW 251
34426: PUSH
34427: EMPTY
34428: LIST
34429: LIST
34430: ST_TO_ADDR
// Defend ;
34431: CALL 2405 0 0
// end ; end ;
34435: PPOPN 1
34437: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34438: LD_VAR 0 1
34442: PPUSH
34443: CALL_OW 255
34447: PUSH
34448: LD_INT 1
34450: NONEQUAL
34451: IFFALSE 34455
// exit ;
34453: GO 34479
// if GetControl ( veh ) = control_remote then
34455: LD_VAR 0 1
34459: PPUSH
34460: CALL_OW 263
34464: PUSH
34465: LD_INT 2
34467: EQUAL
34468: IFFALSE 34479
// Connect ( veh ) ;
34470: LD_VAR 0 1
34474: PPUSH
34475: CALL 5371 0 1
// end ;
34479: PPOPN 2
34481: END
// on UnitGoesToRed ( un ) do var i , veh ;
34482: LD_INT 0
34484: PPUSH
34485: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34486: LD_VAR 0 1
34490: PPUSH
34491: CALL_OW 255
34495: PUSH
34496: LD_INT 1
34498: EQUAL
34499: PUSH
34500: LD_VAR 0 1
34504: PPUSH
34505: CALL_OW 263
34509: PUSH
34510: LD_INT 2
34512: EQUAL
34513: AND
34514: IFFALSE 34525
// ComUnlink ( un ) ;
34516: LD_VAR 0 1
34520: PPUSH
34521: CALL_OW 136
// if un = ambar0 then
34525: LD_VAR 0 1
34529: PUSH
34530: LD_INT 18
34532: EQUAL
34533: IFFALSE 34643
// begin uc_side := 1 ;
34535: LD_ADDR_OWVAR 20
34539: PUSH
34540: LD_INT 1
34542: ST_TO_ADDR
// uc_nation := 1 ;
34543: LD_ADDR_OWVAR 21
34547: PUSH
34548: LD_INT 1
34550: ST_TO_ADDR
// for i = 1 to 6 do
34551: LD_ADDR_VAR 0 2
34555: PUSH
34556: DOUBLE
34557: LD_INT 1
34559: DEC
34560: ST_TO_ADDR
34561: LD_INT 6
34563: PUSH
34564: FOR_TO
34565: IFFALSE 34641
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34567: LD_INT 3
34569: PPUSH
34570: LD_INT 1
34572: PPUSH
34573: LD_INT 3
34575: PPUSH
34576: LD_INT 4
34578: PPUSH
34579: LD_INT 100
34581: PPUSH
34582: CALL 5135 0 5
// veh := CreateVehicle ;
34586: LD_ADDR_VAR 0 3
34590: PUSH
34591: CALL_OW 45
34595: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34596: LD_VAR 0 3
34600: PPUSH
34601: LD_INT 1
34603: PPUSH
34604: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34608: LD_VAR 0 3
34612: PPUSH
34613: LD_INT 25
34615: PPUSH
34616: LD_INT 0
34618: PPUSH
34619: CALL_OW 49
// defenders := defenders ^ veh ;
34623: LD_ADDR_EXP 17
34627: PUSH
34628: LD_EXP 17
34632: PUSH
34633: LD_VAR 0 3
34637: ADD
34638: ST_TO_ADDR
// end ;
34639: GO 34564
34641: POP
34642: POP
// end ; end ;
34643: PPOPN 3
34645: END
