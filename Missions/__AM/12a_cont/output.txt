// starting var i ; begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29328 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2527 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 29753 0 0
// PreparePatrol ;
 103: CALL 881 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 4814 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 4877 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , true ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 1
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defenders := [ ] ;
 556: LD_ADDR_EXP 17
 560: PUSH
 561: EMPTY
 562: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 563: LD_INT 5
 565: PPUSH
 566: LD_STRING alpha
 568: PPUSH
 569: CALL_OW 500
// uc_side := 1 ;
 573: LD_ADDR_OWVAR 20
 577: PUSH
 578: LD_INT 1
 580: ST_TO_ADDR
// uc_nation := 1 ;
 581: LD_ADDR_OWVAR 21
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 589: LD_ADDR_EXP 13
 593: PUSH
 594: LD_STRING Powell
 596: PPUSH
 597: CALL_OW 25
 601: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 602: LD_EXP 13
 606: PPUSH
 607: LD_INT 110
 609: PPUSH
 610: LD_INT 26
 612: PPUSH
 613: LD_INT 0
 615: PPUSH
 616: CALL_OW 48
// ComHold ( Powell ) ;
 620: LD_EXP 13
 624: PPUSH
 625: CALL_OW 140
// for i = 1 to 5 do
 629: LD_ADDR_VAR 0 2
 633: PUSH
 634: DOUBLE
 635: LD_INT 1
 637: DEC
 638: ST_TO_ADDR
 639: LD_INT 5
 641: PUSH
 642: FOR_TO
 643: IFFALSE 699
// begin PrepareHuman ( false , 1 , 10 ) ;
 645: LD_INT 0
 647: PPUSH
 648: LD_INT 1
 650: PPUSH
 651: LD_INT 10
 653: PPUSH
 654: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 658: LD_ADDR_EXP 16
 662: PUSH
 663: LD_EXP 16
 667: PPUSH
 668: LD_INT 1
 670: PPUSH
 671: CALL_OW 44
 675: PPUSH
 676: CALL_OW 2
 680: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 681: LD_EXP 16
 685: PUSH
 686: LD_INT 1
 688: ARRAY
 689: PPUSH
 690: LD_INT 18
 692: PPUSH
 693: CALL_OW 52
// end ;
 697: GO 642
 699: POP
 700: POP
// if Difficulty > 2 then
 701: LD_OWVAR 67
 705: PUSH
 706: LD_INT 2
 708: GREATER
 709: IFFALSE 758
// begin bc_type := b_turret ;
 711: LD_ADDR_OWVAR 42
 715: PUSH
 716: LD_INT 33
 718: ST_TO_ADDR
// bc_level := 7 ;
 719: LD_ADDR_OWVAR 43
 723: PUSH
 724: LD_INT 7
 726: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 727: LD_ADDR_VAR 0 4
 731: PUSH
 732: LD_INT 107
 734: PPUSH
 735: LD_INT 55
 737: PPUSH
 738: LD_INT 5
 740: PPUSH
 741: CALL_OW 47
 745: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 746: LD_VAR 0 4
 750: PPUSH
 751: LD_INT 7
 753: PPUSH
 754: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 758: LD_ADDR_VAR 0 2
 762: PUSH
 763: LD_INT 22
 765: PUSH
 766: LD_INT 1
 768: PUSH
 769: EMPTY
 770: LIST
 771: LIST
 772: PUSH
 773: LD_INT 30
 775: PUSH
 776: LD_INT 3
 778: PUSH
 779: EMPTY
 780: LIST
 781: LIST
 782: PUSH
 783: EMPTY
 784: LIST
 785: LIST
 786: PPUSH
 787: CALL_OW 69
 791: PUSH
 792: LD_INT 22
 794: PUSH
 795: LD_INT 1
 797: PUSH
 798: EMPTY
 799: LIST
 800: LIST
 801: PUSH
 802: LD_INT 30
 804: PUSH
 805: LD_INT 36
 807: PUSH
 808: EMPTY
 809: LIST
 810: LIST
 811: PUSH
 812: EMPTY
 813: LIST
 814: LIST
 815: PPUSH
 816: CALL_OW 69
 820: ADD
 821: PUSH
 822: FOR_IN
 823: IFFALSE 874
// for j = 1 to 3 do
 825: LD_ADDR_VAR 0 3
 829: PUSH
 830: DOUBLE
 831: LD_INT 1
 833: DEC
 834: ST_TO_ADDR
 835: LD_INT 3
 837: PUSH
 838: FOR_TO
 839: IFFALSE 870
// begin PrepareHuman ( false , 3 , 6 ) ;
 841: LD_INT 0
 843: PPUSH
 844: LD_INT 3
 846: PPUSH
 847: LD_INT 6
 849: PPUSH
 850: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 854: CALL_OW 44
 858: PPUSH
 859: LD_VAR 0 2
 863: PPUSH
 864: CALL_OW 52
// end ;
 868: GO 838
 870: POP
 871: POP
 872: GO 822
 874: POP
 875: POP
// end ;
 876: LD_VAR 0 1
 880: RET
// export function PreparePatrol ; var i , un ; begin
 881: LD_INT 0
 883: PPUSH
 884: PPUSH
 885: PPUSH
// uc_side := 1 ;
 886: LD_ADDR_OWVAR 20
 890: PUSH
 891: LD_INT 1
 893: ST_TO_ADDR
// uc_nation := 1 ;
 894: LD_ADDR_OWVAR 21
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 902: LD_ADDR_EXP 15
 906: PUSH
 907: LD_INT 99
 909: PUSH
 910: LD_INT 55
 912: PUSH
 913: EMPTY
 914: LIST
 915: LIST
 916: PUSH
 917: LD_INT 113
 919: PUSH
 920: LD_INT 67
 922: PUSH
 923: EMPTY
 924: LIST
 925: LIST
 926: PUSH
 927: LD_INT 129
 929: PUSH
 930: LD_INT 68
 932: PUSH
 933: EMPTY
 934: LIST
 935: LIST
 936: PUSH
 937: LD_INT 135
 939: PUSH
 940: LD_INT 62
 942: PUSH
 943: EMPTY
 944: LIST
 945: LIST
 946: PUSH
 947: LD_INT 103
 949: PUSH
 950: LD_INT 41
 952: PUSH
 953: EMPTY
 954: LIST
 955: LIST
 956: PUSH
 957: EMPTY
 958: LIST
 959: LIST
 960: LIST
 961: LIST
 962: LIST
 963: PUSH
 964: LD_INT 27
 966: PUSH
 967: LD_INT 49
 969: PUSH
 970: EMPTY
 971: LIST
 972: LIST
 973: PUSH
 974: LD_INT 46
 976: PUSH
 977: LD_INT 49
 979: PUSH
 980: EMPTY
 981: LIST
 982: LIST
 983: PUSH
 984: LD_INT 87
 986: PUSH
 987: LD_INT 70
 989: PUSH
 990: EMPTY
 991: LIST
 992: LIST
 993: PUSH
 994: LD_INT 99
 996: PUSH
 997: LD_INT 79
 999: PUSH
1000: EMPTY
1001: LIST
1002: LIST
1003: PUSH
1004: LD_INT 118
1006: PUSH
1007: LD_INT 111
1009: PUSH
1010: EMPTY
1011: LIST
1012: LIST
1013: PUSH
1014: LD_INT 99
1016: PUSH
1017: LD_INT 79
1019: PUSH
1020: EMPTY
1021: LIST
1022: LIST
1023: PUSH
1024: LD_INT 87
1026: PUSH
1027: LD_INT 70
1029: PUSH
1030: EMPTY
1031: LIST
1032: LIST
1033: PUSH
1034: LD_INT 46
1036: PUSH
1037: LD_INT 49
1039: PUSH
1040: EMPTY
1041: LIST
1042: LIST
1043: PUSH
1044: EMPTY
1045: LIST
1046: LIST
1047: LIST
1048: LIST
1049: LIST
1050: LIST
1051: LIST
1052: LIST
1053: PUSH
1054: LD_INT 200
1056: PUSH
1057: LD_INT 88
1059: PUSH
1060: EMPTY
1061: LIST
1062: LIST
1063: PUSH
1064: LD_INT 175
1066: PUSH
1067: LD_INT 80
1069: PUSH
1070: EMPTY
1071: LIST
1072: LIST
1073: PUSH
1074: LD_INT 135
1076: PUSH
1077: LD_INT 62
1079: PUSH
1080: EMPTY
1081: LIST
1082: LIST
1083: PUSH
1084: LD_INT 117
1086: PUSH
1087: LD_INT 53
1089: PUSH
1090: EMPTY
1091: LIST
1092: LIST
1093: PUSH
1094: LD_INT 103
1096: PUSH
1097: LD_INT 41
1099: PUSH
1100: EMPTY
1101: LIST
1102: LIST
1103: PUSH
1104: LD_INT 99
1106: PUSH
1107: LD_INT 24
1109: PUSH
1110: EMPTY
1111: LIST
1112: LIST
1113: PUSH
1114: LD_INT 85
1116: PUSH
1117: LD_INT 3
1119: PUSH
1120: EMPTY
1121: LIST
1122: LIST
1123: PUSH
1124: LD_INT 99
1126: PUSH
1127: LD_INT 24
1129: PUSH
1130: EMPTY
1131: LIST
1132: LIST
1133: PUSH
1134: LD_INT 103
1136: PUSH
1137: LD_INT 41
1139: PUSH
1140: EMPTY
1141: LIST
1142: LIST
1143: PUSH
1144: LD_INT 98
1146: PUSH
1147: LD_INT 47
1149: PUSH
1150: EMPTY
1151: LIST
1152: LIST
1153: PUSH
1154: LD_INT 99
1156: PUSH
1157: LD_INT 56
1159: PUSH
1160: EMPTY
1161: LIST
1162: LIST
1163: PUSH
1164: LD_INT 96
1166: PUSH
1167: LD_INT 66
1169: PUSH
1170: EMPTY
1171: LIST
1172: LIST
1173: PUSH
1174: LD_INT 99
1176: PUSH
1177: LD_INT 56
1179: PUSH
1180: EMPTY
1181: LIST
1182: LIST
1183: PUSH
1184: LD_INT 112
1186: PUSH
1187: LD_INT 66
1189: PUSH
1190: EMPTY
1191: LIST
1192: LIST
1193: PUSH
1194: LD_INT 129
1196: PUSH
1197: LD_INT 68
1199: PUSH
1200: EMPTY
1201: LIST
1202: LIST
1203: PUSH
1204: LD_INT 135
1206: PUSH
1207: LD_INT 62
1209: PUSH
1210: EMPTY
1211: LIST
1212: LIST
1213: PUSH
1214: LD_INT 156
1216: PUSH
1217: LD_INT 71
1219: PUSH
1220: EMPTY
1221: LIST
1222: LIST
1223: PUSH
1224: LD_INT 168
1226: PUSH
1227: LD_INT 76
1229: PUSH
1230: EMPTY
1231: LIST
1232: LIST
1233: PUSH
1234: LD_INT 168
1236: PUSH
1237: LD_INT 61
1239: PUSH
1240: EMPTY
1241: LIST
1242: LIST
1243: PUSH
1244: LD_INT 168
1246: PUSH
1247: LD_INT 75
1249: PUSH
1250: EMPTY
1251: LIST
1252: LIST
1253: PUSH
1254: LD_INT 185
1256: PUSH
1257: LD_INT 85
1259: PUSH
1260: EMPTY
1261: LIST
1262: LIST
1263: PUSH
1264: EMPTY
1265: LIST
1266: LIST
1267: LIST
1268: LIST
1269: LIST
1270: LIST
1271: LIST
1272: LIST
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: PUSH
1287: EMPTY
1288: LIST
1289: LIST
1290: LIST
1291: ST_TO_ADDR
// mobile_patrol := [ ] ;
1292: LD_ADDR_EXP 14
1296: PUSH
1297: EMPTY
1298: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1299: LD_INT 3
1301: PPUSH
1302: LD_INT 1
1304: PPUSH
1305: LD_INT 3
1307: PPUSH
1308: LD_INT 4
1310: PPUSH
1311: LD_INT 100
1313: PPUSH
1314: CALL 4877 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1318: LD_ADDR_EXP 14
1322: PUSH
1323: LD_EXP 14
1327: PPUSH
1328: LD_INT 1
1330: PPUSH
1331: CALL_OW 45
1335: PPUSH
1336: CALL_OW 2
1340: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1341: LD_EXP 14
1345: PUSH
1346: LD_INT 1
1348: ARRAY
1349: PPUSH
1350: LD_INT 99
1352: PPUSH
1353: LD_INT 55
1355: PPUSH
1356: LD_INT 0
1358: PPUSH
1359: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1363: LD_INT 2
1365: PPUSH
1366: LD_INT 1
1368: PPUSH
1369: LD_INT 3
1371: PPUSH
1372: LD_INT 4
1374: PPUSH
1375: LD_INT 100
1377: PPUSH
1378: CALL 4877 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1382: LD_ADDR_EXP 14
1386: PUSH
1387: LD_EXP 14
1391: PPUSH
1392: LD_INT 2
1394: PPUSH
1395: CALL_OW 45
1399: PPUSH
1400: CALL_OW 2
1404: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1405: LD_EXP 14
1409: PUSH
1410: LD_INT 2
1412: ARRAY
1413: PPUSH
1414: LD_INT 27
1416: PPUSH
1417: LD_INT 49
1419: PPUSH
1420: LD_INT 0
1422: PPUSH
1423: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1427: LD_INT 3
1429: PPUSH
1430: LD_INT 1
1432: PPUSH
1433: LD_INT 3
1435: PPUSH
1436: LD_INT 7
1438: PPUSH
1439: LD_INT 100
1441: PPUSH
1442: CALL 4877 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1446: LD_ADDR_EXP 14
1450: PUSH
1451: LD_EXP 14
1455: PPUSH
1456: LD_INT 3
1458: PPUSH
1459: CALL_OW 45
1463: PPUSH
1464: CALL_OW 2
1468: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1469: LD_EXP 14
1473: PUSH
1474: LD_INT 3
1476: ARRAY
1477: PPUSH
1478: LD_INT 200
1480: PPUSH
1481: LD_INT 88
1483: PPUSH
1484: LD_INT 0
1486: PPUSH
1487: CALL_OW 48
// for i = mobile_patrol downto 1 do
1491: LD_ADDR_VAR 0 2
1495: PUSH
1496: DOUBLE
1497: LD_EXP 14
1501: INC
1502: ST_TO_ADDR
1503: LD_INT 1
1505: PUSH
1506: FOR_DOWNTO
1507: IFFALSE 1518
// RaiseSailEvent ( 1 ) ;
1509: LD_INT 1
1511: PPUSH
1512: CALL_OW 427
1516: GO 1506
1518: POP
1519: POP
// end ;
1520: LD_VAR 0 1
1524: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1525: LD_INT 0
1527: PPUSH
1528: PPUSH
1529: PPUSH
1530: PPUSH
1531: PPUSH
1532: PPUSH
1533: PPUSH
1534: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1535: LD_ADDR_VAR 0 5
1539: PUSH
1540: LD_INT 20
1542: PUSH
1543: LD_INT 4
1545: PUSH
1546: EMPTY
1547: LIST
1548: LIST
1549: PUSH
1550: LD_INT 21
1552: PUSH
1553: LD_INT 5
1555: PUSH
1556: EMPTY
1557: LIST
1558: LIST
1559: PUSH
1560: LD_INT 22
1562: PUSH
1563: LD_INT 1
1565: PUSH
1566: EMPTY
1567: LIST
1568: LIST
1569: PUSH
1570: EMPTY
1571: LIST
1572: LIST
1573: LIST
1574: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1575: LD_ADDR_VAR 0 6
1579: PUSH
1580: LD_INT 176
1582: PUSH
1583: LD_INT 81
1585: PUSH
1586: LD_INT 135
1588: PUSH
1589: LD_INT 62
1591: PUSH
1592: LD_INT 114
1594: PUSH
1595: LD_INT 67
1597: PUSH
1598: LD_INT 93
1600: PUSH
1601: LD_INT 71
1603: PUSH
1604: LD_INT 76
1606: PUSH
1607: LD_INT 67
1609: PUSH
1610: EMPTY
1611: LIST
1612: LIST
1613: LIST
1614: LIST
1615: LIST
1616: LIST
1617: LIST
1618: LIST
1619: LIST
1620: LIST
1621: PUSH
1622: LD_INT 107
1624: PUSH
1625: LD_INT 92
1627: PUSH
1628: LD_INT 92
1630: PUSH
1631: LD_INT 72
1633: PUSH
1634: LD_INT 77
1636: PUSH
1637: LD_INT 68
1639: PUSH
1640: EMPTY
1641: LIST
1642: LIST
1643: LIST
1644: LIST
1645: LIST
1646: LIST
1647: PUSH
1648: LD_INT 45
1650: PUSH
1651: LD_INT 49
1653: PUSH
1654: LD_INT 67
1656: PUSH
1657: LD_INT 59
1659: PUSH
1660: LD_INT 77
1662: PUSH
1663: LD_INT 68
1665: PUSH
1666: EMPTY
1667: LIST
1668: LIST
1669: LIST
1670: LIST
1671: LIST
1672: LIST
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1679: LD_ADDR_VAR 0 4
1683: PUSH
1684: LD_INT 1
1686: PPUSH
1687: LD_VAR 0 5
1691: PPUSH
1692: CALL_OW 12
1696: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1697: LD_ADDR_VAR 0 3
1701: PUSH
1702: LD_INT 1
1704: PPUSH
1705: LD_INT 2
1707: PPUSH
1708: CALL_OW 12
1712: ST_TO_ADDR
// uc_side := 1 ;
1713: LD_ADDR_OWVAR 20
1717: PUSH
1718: LD_INT 1
1720: ST_TO_ADDR
// uc_nation := 1 ;
1721: LD_ADDR_OWVAR 21
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1729: LD_INT 2
1731: PPUSH
1732: LD_INT 3
1734: PPUSH
1735: LD_INT 3
1737: PPUSH
1738: LD_INT 12
1740: PPUSH
1741: LD_INT 100
1743: PPUSH
1744: CALL 4877 0 5
// veh := CreateVehicle ;
1748: LD_ADDR_VAR 0 8
1752: PUSH
1753: CALL_OW 45
1757: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1758: LD_VAR 0 8
1762: PPUSH
1763: LD_VAR 0 5
1767: PUSH
1768: LD_VAR 0 4
1772: ARRAY
1773: PUSH
1774: LD_INT 2
1776: ARRAY
1777: PPUSH
1778: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1782: LD_VAR 0 8
1786: PPUSH
1787: LD_VAR 0 5
1791: PUSH
1792: LD_VAR 0 4
1796: ARRAY
1797: PUSH
1798: LD_INT 1
1800: ARRAY
1801: PPUSH
1802: LD_INT 0
1804: PPUSH
1805: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1809: LD_VAR 0 8
1813: PPUSH
1814: LD_INT 1
1816: PUSH
1817: LD_INT 3
1819: PUSH
1820: EMPTY
1821: LIST
1822: LIST
1823: PUSH
1824: LD_VAR 0 3
1828: ARRAY
1829: PPUSH
1830: LD_INT 100
1832: PPUSH
1833: CALL_OW 290
// tmp := road [ k ] ;
1837: LD_ADDR_VAR 0 7
1841: PUSH
1842: LD_VAR 0 6
1846: PUSH
1847: LD_VAR 0 4
1851: ARRAY
1852: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1853: LD_ADDR_VAR 0 2
1857: PUSH
1858: DOUBLE
1859: LD_INT 1
1861: DEC
1862: ST_TO_ADDR
1863: LD_VAR 0 7
1867: PUSH
1868: LD_INT 2
1870: DIV
1871: PUSH
1872: FOR_TO
1873: IFFALSE 1920
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1875: LD_VAR 0 8
1879: PPUSH
1880: LD_VAR 0 7
1884: PUSH
1885: LD_VAR 0 2
1889: PUSH
1890: LD_INT 2
1892: MUL
1893: PUSH
1894: LD_INT 1
1896: MINUS
1897: ARRAY
1898: PPUSH
1899: LD_VAR 0 7
1903: PUSH
1904: LD_VAR 0 2
1908: PUSH
1909: LD_INT 2
1911: MUL
1912: ARRAY
1913: PPUSH
1914: CALL_OW 171
1918: GO 1872
1920: POP
1921: POP
// AddComGive ( veh , alfa ) ;
1922: LD_VAR 0 8
1926: PPUSH
1927: LD_INT 5
1929: PPUSH
1930: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1934: LD_VAR 0 8
1938: PPUSH
1939: LD_INT 70
1941: PPUSH
1942: CALL_OW 202
// for i = tmp div 2 downto 1 do
1946: LD_ADDR_VAR 0 2
1950: PUSH
1951: DOUBLE
1952: LD_VAR 0 7
1956: PUSH
1957: LD_INT 2
1959: DIV
1960: INC
1961: ST_TO_ADDR
1962: LD_INT 1
1964: PUSH
1965: FOR_DOWNTO
1966: IFFALSE 2013
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1968: LD_VAR 0 8
1972: PPUSH
1973: LD_VAR 0 7
1977: PUSH
1978: LD_VAR 0 2
1982: PUSH
1983: LD_INT 2
1985: MUL
1986: PUSH
1987: LD_INT 1
1989: MINUS
1990: ARRAY
1991: PPUSH
1992: LD_VAR 0 7
1996: PUSH
1997: LD_VAR 0 2
2001: PUSH
2002: LD_INT 2
2004: MUL
2005: ARRAY
2006: PPUSH
2007: CALL_OW 171
2011: GO 1965
2013: POP
2014: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2015: LD_VAR 0 8
2019: PPUSH
2020: LD_VAR 0 5
2024: PUSH
2025: LD_VAR 0 4
2029: ARRAY
2030: PUSH
2031: LD_INT 1
2033: ARRAY
2034: PPUSH
2035: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2039: LD_INT 35
2041: PPUSH
2042: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2046: LD_VAR 0 8
2050: PPUSH
2051: LD_VAR 0 5
2055: PUSH
2056: LD_VAR 0 4
2060: ARRAY
2061: PUSH
2062: LD_INT 1
2064: ARRAY
2065: PPUSH
2066: CALL_OW 308
2070: PUSH
2071: LD_VAR 0 8
2075: PPUSH
2076: LD_VAR 0 3
2080: PPUSH
2081: CALL_OW 289
2085: PUSH
2086: LD_INT 0
2088: EQUAL
2089: AND
2090: IFFALSE 2039
// RemoveUnit ( veh ) ;
2092: LD_VAR 0 8
2096: PPUSH
2097: CALL_OW 64
// end ;
2101: LD_VAR 0 1
2105: RET
// every 3 3$00 do
2106: GO 2108
2108: DISABLE
// begin enable ;
2109: ENABLE
// SpawnCargo ;
2110: CALL 1525 0 0
// end ;
2114: END
// export function PrepareDefenders ; var i , tmp ; begin
2115: LD_INT 0
2117: PPUSH
2118: PPUSH
2119: PPUSH
// if defenders then
2120: LD_EXP 17
2124: IFFALSE 2128
// exit ;
2126: GO 2392
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2128: LD_ADDR_VAR 0 2
2132: PUSH
2133: DOUBLE
2134: LD_INT 1
2136: DEC
2137: ST_TO_ADDR
2138: LD_INT 4
2140: PUSH
2141: LD_INT 5
2143: PUSH
2144: LD_INT 6
2146: PUSH
2147: EMPTY
2148: LIST
2149: LIST
2150: LIST
2151: PUSH
2152: LD_OWVAR 67
2156: ARRAY
2157: PUSH
2158: FOR_TO
2159: IFFALSE 2298
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2161: LD_ADDR_VAR 0 3
2165: PUSH
2166: LD_INT 6
2168: PPUSH
2169: LD_INT 2
2171: PUSH
2172: LD_INT 3
2174: PUSH
2175: EMPTY
2176: LIST
2177: LIST
2178: PUSH
2179: LD_INT 1
2181: PPUSH
2182: LD_INT 2
2184: PPUSH
2185: CALL_OW 12
2189: ARRAY
2190: PPUSH
2191: LD_INT 1
2193: PUSH
2194: LD_INT 3
2196: PUSH
2197: EMPTY
2198: LIST
2199: LIST
2200: PUSH
2201: LD_INT 1
2203: PPUSH
2204: LD_INT 2
2206: PPUSH
2207: CALL_OW 12
2211: ARRAY
2212: PPUSH
2213: LD_INT 2
2215: PPUSH
2216: LD_INT 4
2218: PUSH
2219: LD_INT 5
2221: PUSH
2222: LD_INT 9
2224: PUSH
2225: EMPTY
2226: LIST
2227: LIST
2228: LIST
2229: PUSH
2230: LD_INT 1
2232: PPUSH
2233: LD_INT 3
2235: PPUSH
2236: CALL_OW 12
2240: ARRAY
2241: PPUSH
2242: CALL 27510 0 5
2246: ST_TO_ADDR
// if tmp then
2247: LD_VAR 0 3
2251: IFFALSE 2296
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2253: LD_INT 6
2255: PPUSH
2256: LD_VAR 0 3
2260: PUSH
2261: LD_INT 1
2263: ARRAY
2264: PPUSH
2265: LD_VAR 0 3
2269: PUSH
2270: LD_INT 2
2272: ARRAY
2273: PPUSH
2274: LD_VAR 0 3
2278: PUSH
2279: LD_INT 3
2281: ARRAY
2282: PPUSH
2283: LD_VAR 0 3
2287: PUSH
2288: LD_INT 4
2290: ARRAY
2291: PPUSH
2292: CALL_OW 185
// end ;
2296: GO 2158
2298: POP
2299: POP
// repeat wait ( 0 0$1 ) ;
2300: LD_INT 35
2302: PPUSH
2303: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2307: LD_INT 22
2309: PUSH
2310: LD_INT 1
2312: PUSH
2313: EMPTY
2314: LIST
2315: LIST
2316: PUSH
2317: LD_INT 33
2319: PUSH
2320: LD_INT 2
2322: PUSH
2323: EMPTY
2324: LIST
2325: LIST
2326: PUSH
2327: EMPTY
2328: LIST
2329: LIST
2330: PPUSH
2331: CALL_OW 69
2335: PUSH
2336: LD_INT 4
2338: PUSH
2339: LD_INT 5
2341: PUSH
2342: LD_INT 6
2344: PUSH
2345: EMPTY
2346: LIST
2347: LIST
2348: LIST
2349: PUSH
2350: LD_OWVAR 67
2354: ARRAY
2355: GREATEREQUAL
2356: IFFALSE 2300
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2358: LD_ADDR_EXP 17
2362: PUSH
2363: LD_INT 22
2365: PUSH
2366: LD_INT 1
2368: PUSH
2369: EMPTY
2370: LIST
2371: LIST
2372: PUSH
2373: LD_INT 33
2375: PUSH
2376: LD_INT 2
2378: PUSH
2379: EMPTY
2380: LIST
2381: LIST
2382: PUSH
2383: EMPTY
2384: LIST
2385: LIST
2386: PPUSH
2387: CALL_OW 69
2391: ST_TO_ADDR
// end ;
2392: LD_VAR 0 1
2396: RET
// export function Defend ; var i , tmp ; begin
2397: LD_INT 0
2399: PPUSH
2400: PPUSH
2401: PPUSH
// if not defenders then
2402: LD_EXP 17
2406: NOT
2407: IFFALSE 2413
// PrepareDefenders ;
2409: CALL 2115 0 0
// repeat wait ( 0 0$1 ) ;
2413: LD_INT 35
2415: PPUSH
2416: CALL_OW 67
// for i in defenders do
2420: LD_ADDR_VAR 0 2
2424: PUSH
2425: LD_EXP 17
2429: PUSH
2430: FOR_IN
2431: IFFALSE 2513
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2433: LD_EXP 18
2437: PUSH
2438: LD_VAR 0 2
2442: PPUSH
2443: LD_EXP 18
2447: PUSH
2448: LD_INT 1
2450: ARRAY
2451: PPUSH
2452: LD_EXP 18
2456: PUSH
2457: LD_INT 2
2459: ARRAY
2460: PPUSH
2461: CALL_OW 297
2465: PUSH
2466: LD_INT 10
2468: GREATER
2469: AND
2470: PUSH
2471: LD_VAR 0 2
2475: PPUSH
2476: CALL_OW 314
2480: NOT
2481: AND
2482: IFFALSE 2511
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2484: LD_VAR 0 2
2488: PPUSH
2489: LD_EXP 18
2493: PUSH
2494: LD_INT 1
2496: ARRAY
2497: PPUSH
2498: LD_EXP 18
2502: PUSH
2503: LD_INT 2
2505: ARRAY
2506: PPUSH
2507: CALL_OW 114
// end ;
2511: GO 2430
2513: POP
2514: POP
// until not defenders ;
2515: LD_EXP 17
2519: NOT
2520: IFFALSE 2413
// end ; end_of_file
2522: LD_VAR 0 1
2526: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2527: LD_INT 0
2529: PPUSH
2530: PPUSH
2531: PPUSH
2532: PPUSH
2533: PPUSH
2534: PPUSH
2535: PPUSH
// uc_side := 4 ;
2536: LD_ADDR_OWVAR 20
2540: PUSH
2541: LD_INT 4
2543: ST_TO_ADDR
// uc_nation := 1 ;
2544: LD_ADDR_OWVAR 21
2548: PUSH
2549: LD_INT 1
2551: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2552: LD_ADDR_EXP 33
2556: PUSH
2557: LD_STRING DeltaDoctor
2559: PPUSH
2560: LD_EXP 1
2564: NOT
2565: PPUSH
2566: LD_STRING 10c_
2568: PPUSH
2569: CALL 4814 0 3
2573: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2574: LD_ADDR_EXP 32
2578: PUSH
2579: LD_STRING Joan
2581: PPUSH
2582: LD_EXP 1
2586: NOT
2587: PPUSH
2588: LD_STRING 10c_
2590: PPUSH
2591: CALL 4814 0 3
2595: ST_TO_ADDR
// if Joan then
2596: LD_EXP 32
2600: IFFALSE 2631
// friends := Insert ( friends , friends + 1 , Joan ) ;
2602: LD_ADDR_EXP 4
2606: PUSH
2607: LD_EXP 4
2611: PPUSH
2612: LD_EXP 4
2616: PUSH
2617: LD_INT 1
2619: PLUS
2620: PPUSH
2621: LD_EXP 32
2625: PPUSH
2626: CALL_OW 2
2630: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2631: LD_ADDR_EXP 31
2635: PUSH
2636: LD_STRING Simms
2638: PPUSH
2639: LD_EXP 1
2643: NOT
2644: PPUSH
2645: LD_STRING 10c_
2647: PPUSH
2648: CALL 4814 0 3
2652: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2653: LD_ADDR_EXP 30
2657: PUSH
2658: LD_STRING Kikuchi
2660: PPUSH
2661: LD_EXP 1
2665: NOT
2666: PPUSH
2667: LD_STRING 11_
2669: PPUSH
2670: CALL 4814 0 3
2674: ST_TO_ADDR
// if Kikuchi then
2675: LD_EXP 30
2679: IFFALSE 2710
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2681: LD_ADDR_EXP 4
2685: PUSH
2686: LD_EXP 4
2690: PPUSH
2691: LD_EXP 4
2695: PUSH
2696: LD_INT 1
2698: PLUS
2699: PPUSH
2700: LD_EXP 30
2704: PPUSH
2705: CALL_OW 2
2709: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2710: LD_ADDR_EXP 29
2714: PUSH
2715: LD_STRING Frank
2717: PPUSH
2718: LD_EXP 1
2722: NOT
2723: PPUSH
2724: LD_STRING 11_
2726: PPUSH
2727: CALL 4814 0 3
2731: ST_TO_ADDR
// if Frank then
2732: LD_EXP 29
2736: IFFALSE 2767
// friends := Insert ( friends , friends + 1 , Frank ) ;
2738: LD_ADDR_EXP 4
2742: PUSH
2743: LD_EXP 4
2747: PPUSH
2748: LD_EXP 4
2752: PUSH
2753: LD_INT 1
2755: PLUS
2756: PPUSH
2757: LD_EXP 29
2761: PPUSH
2762: CALL_OW 2
2766: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
2767: LD_ADDR_EXP 28
2771: PUSH
2772: LD_STRING Gary
2774: PPUSH
2775: LD_EXP 1
2779: NOT
2780: PPUSH
2781: LD_STRING 11_
2783: PPUSH
2784: CALL 4814 0 3
2788: ST_TO_ADDR
// if Gary then
2789: LD_EXP 28
2793: IFFALSE 2824
// friends := Insert ( friends , friends + 1 , Gary ) ;
2795: LD_ADDR_EXP 4
2799: PUSH
2800: LD_EXP 4
2804: PPUSH
2805: LD_EXP 4
2809: PUSH
2810: LD_INT 1
2812: PLUS
2813: PPUSH
2814: LD_EXP 28
2818: PPUSH
2819: CALL_OW 2
2823: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
2824: LD_ADDR_EXP 27
2828: PUSH
2829: LD_STRING Cornel
2831: PPUSH
2832: LD_EXP 1
2836: NOT
2837: PPUSH
2838: LD_STRING 11_
2840: PPUSH
2841: CALL 4814 0 3
2845: ST_TO_ADDR
// if Cornel then
2846: LD_EXP 27
2850: IFFALSE 2881
// friends := Insert ( friends , friends + 1 , Cornel ) ;
2852: LD_ADDR_EXP 4
2856: PUSH
2857: LD_EXP 4
2861: PPUSH
2862: LD_EXP 4
2866: PUSH
2867: LD_INT 1
2869: PLUS
2870: PPUSH
2871: LD_EXP 27
2875: PPUSH
2876: CALL_OW 2
2880: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
2881: LD_ADDR_EXP 26
2885: PUSH
2886: LD_STRING Houten
2888: PPUSH
2889: LD_EXP 1
2893: NOT
2894: PPUSH
2895: LD_STRING 11_
2897: PPUSH
2898: CALL 4814 0 3
2902: ST_TO_ADDR
// if Houten then
2903: LD_EXP 26
2907: IFFALSE 2938
// friends := Insert ( friends , friends + 1 , Houten ) ;
2909: LD_ADDR_EXP 4
2913: PUSH
2914: LD_EXP 4
2918: PPUSH
2919: LD_EXP 4
2923: PUSH
2924: LD_INT 1
2926: PLUS
2927: PPUSH
2928: LD_EXP 26
2932: PPUSH
2933: CALL_OW 2
2937: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
2938: LD_ADDR_EXP 25
2942: PUSH
2943: LD_STRING Gladstone
2945: PPUSH
2946: LD_EXP 1
2950: NOT
2951: PPUSH
2952: LD_STRING 11_
2954: PPUSH
2955: CALL 4814 0 3
2959: ST_TO_ADDR
// if Gladstone then
2960: LD_EXP 25
2964: IFFALSE 2995
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
2966: LD_ADDR_EXP 4
2970: PUSH
2971: LD_EXP 4
2975: PPUSH
2976: LD_EXP 4
2980: PUSH
2981: LD_INT 1
2983: PLUS
2984: PPUSH
2985: LD_EXP 25
2989: PPUSH
2990: CALL_OW 2
2994: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
2995: LD_ADDR_EXP 19
2999: PUSH
3000: LD_STRING Lisa
3002: PPUSH
3003: LD_EXP 1
3007: NOT
3008: PPUSH
3009: LD_STRING 11_
3011: PPUSH
3012: CALL 4814 0 3
3016: ST_TO_ADDR
// if Lisa then
3017: LD_EXP 19
3021: IFFALSE 3046
// friends := Insert ( friends , 1 , Lisa ) ;
3023: LD_ADDR_EXP 4
3027: PUSH
3028: LD_EXP 4
3032: PPUSH
3033: LD_INT 1
3035: PPUSH
3036: LD_EXP 19
3040: PPUSH
3041: CALL_OW 2
3045: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3046: LD_ADDR_EXP 20
3050: PUSH
3051: LD_STRING Donaldson
3053: PPUSH
3054: LD_EXP 1
3058: NOT
3059: PPUSH
3060: LD_STRING 11_
3062: PPUSH
3063: CALL 4814 0 3
3067: ST_TO_ADDR
// if Donaldson then
3068: LD_EXP 20
3072: IFFALSE 3103
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3074: LD_ADDR_EXP 4
3078: PUSH
3079: LD_EXP 4
3083: PPUSH
3084: LD_EXP 4
3088: PUSH
3089: LD_INT 1
3091: PLUS
3092: PPUSH
3093: LD_EXP 20
3097: PPUSH
3098: CALL_OW 2
3102: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3103: LD_ADDR_EXP 21
3107: PUSH
3108: LD_STRING Bobby
3110: PPUSH
3111: LD_EXP 1
3115: NOT
3116: PPUSH
3117: LD_STRING 11_
3119: PPUSH
3120: CALL 4814 0 3
3124: ST_TO_ADDR
// if Bobby then
3125: LD_EXP 21
3129: IFFALSE 3160
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3131: LD_ADDR_EXP 4
3135: PUSH
3136: LD_EXP 4
3140: PPUSH
3141: LD_EXP 4
3145: PUSH
3146: LD_INT 1
3148: PLUS
3149: PPUSH
3150: LD_EXP 21
3154: PPUSH
3155: CALL_OW 2
3159: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3160: LD_ADDR_EXP 22
3164: PUSH
3165: LD_STRING Cyrus
3167: PPUSH
3168: LD_EXP 1
3172: NOT
3173: PPUSH
3174: LD_STRING 11_
3176: PPUSH
3177: CALL 4814 0 3
3181: ST_TO_ADDR
// if Cyrus then
3182: LD_EXP 22
3186: IFFALSE 3217
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3188: LD_ADDR_EXP 4
3192: PUSH
3193: LD_EXP 4
3197: PPUSH
3198: LD_EXP 4
3202: PUSH
3203: LD_INT 1
3205: PLUS
3206: PPUSH
3207: LD_EXP 22
3211: PPUSH
3212: CALL_OW 2
3216: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3217: LD_ADDR_EXP 23
3221: PUSH
3222: LD_STRING Denis
3224: PPUSH
3225: LD_EXP 1
3229: NOT
3230: PPUSH
3231: LD_STRING 11_
3233: PPUSH
3234: CALL 4814 0 3
3238: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3239: LD_ADDR_EXP 24
3243: PUSH
3244: LD_STRING Brown
3246: PPUSH
3247: LD_EXP 1
3251: NOT
3252: PPUSH
3253: LD_STRING 11_
3255: PPUSH
3256: CALL 4814 0 3
3260: ST_TO_ADDR
// if Brown then
3261: LD_EXP 24
3265: IFFALSE 3296
// friends := Insert ( friends , friends + 1 , Brown ) ;
3267: LD_ADDR_EXP 4
3271: PUSH
3272: LD_EXP 4
3276: PPUSH
3277: LD_EXP 4
3281: PUSH
3282: LD_INT 1
3284: PLUS
3285: PPUSH
3286: LD_EXP 24
3290: PPUSH
3291: CALL_OW 2
3295: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ;
3296: LD_ADDR_EXP 4
3300: PUSH
3301: LD_EXP 4
3305: PUSH
3306: LD_STRING 11c_others
3308: PPUSH
3309: CALL_OW 31
3313: ADD
3314: ST_TO_ADDR
// if friends < 10 then
3315: LD_EXP 4
3319: PUSH
3320: LD_INT 10
3322: LESS
3323: IFFALSE 3395
// for i = 1 to 10 do
3325: LD_ADDR_VAR 0 2
3329: PUSH
3330: DOUBLE
3331: LD_INT 1
3333: DEC
3334: ST_TO_ADDR
3335: LD_INT 10
3337: PUSH
3338: FOR_TO
3339: IFFALSE 3393
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3341: LD_INT 0
3343: PPUSH
3344: LD_INT 1
3346: PPUSH
3347: LD_INT 4
3349: PPUSH
3350: CALL_OW 12
3354: PPUSH
3355: LD_INT 7
3357: PPUSH
3358: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3362: LD_ADDR_EXP 4
3366: PUSH
3367: LD_EXP 4
3371: PPUSH
3372: LD_EXP 4
3376: PUSH
3377: LD_INT 1
3379: PLUS
3380: PPUSH
3381: CALL_OW 44
3385: PPUSH
3386: CALL_OW 2
3390: ST_TO_ADDR
// end ;
3391: GO 3338
3393: POP
3394: POP
// for i in friends do
3395: LD_ADDR_VAR 0 2
3399: PUSH
3400: LD_EXP 4
3404: PUSH
3405: FOR_IN
3406: IFFALSE 3464
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3408: LD_VAR 0 2
3412: PPUSH
3413: LD_INT 1
3415: PPUSH
3416: CALL_OW 259
3420: PUSH
3421: LD_VAR 0 2
3425: PPUSH
3426: LD_INT 4
3428: PPUSH
3429: CALL_OW 259
3433: GREATEREQUAL
3434: IFFALSE 3450
// SetClass ( i , class_soldier ) else
3436: LD_VAR 0 2
3440: PPUSH
3441: LD_INT 1
3443: PPUSH
3444: CALL_OW 336
3448: GO 3462
// SetClass ( i , class_scientistic ) ;
3450: LD_VAR 0 2
3454: PPUSH
3455: LD_INT 4
3457: PPUSH
3458: CALL_OW 336
3462: GO 3405
3464: POP
3465: POP
// if Frank then
3466: LD_EXP 29
3470: IFFALSE 3484
// SetClass ( Frank , class_sniper ) ;
3472: LD_EXP 29
3476: PPUSH
3477: LD_INT 5
3479: PPUSH
3480: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3484: LD_EXP 32
3488: PUSH
3489: LD_EXP 23
3493: PUSH
3494: LD_EXP 33
3498: PUSH
3499: LD_EXP 31
3503: PUSH
3504: EMPTY
3505: LIST
3506: LIST
3507: LIST
3508: LIST
3509: PPUSH
3510: LD_INT 4
3512: PPUSH
3513: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 3 ] , [ class_sniper , 0 , 3 ] ] ) ;
3517: LD_ADDR_EXP 3
3521: PUSH
3522: LD_STRING 
3524: PPUSH
3525: LD_INT 7
3527: PPUSH
3528: LD_INT 7
3530: PPUSH
3531: LD_INT -6
3533: PUSH
3534: LD_EXP 11
3538: PUSH
3539: LD_EXP 12
3543: PUSH
3544: LD_EXP 31
3548: PUSH
3549: LD_EXP 23
3553: PUSH
3554: LD_EXP 33
3558: PUSH
3559: LD_INT -2
3561: PUSH
3562: LD_INT -3
3564: PUSH
3565: LD_INT -5
3567: PUSH
3568: EMPTY
3569: LIST
3570: LIST
3571: LIST
3572: LIST
3573: LIST
3574: LIST
3575: LIST
3576: LIST
3577: LIST
3578: PUSH
3579: LD_EXP 4
3583: ADD
3584: PPUSH
3585: LD_INT 1
3587: PUSH
3588: LD_INT 4
3590: PUSH
3591: LD_INT 3
3593: PUSH
3594: EMPTY
3595: LIST
3596: LIST
3597: PUSH
3598: LD_INT 5
3600: PUSH
3601: LD_INT 0
3603: PUSH
3604: LD_INT 3
3606: PUSH
3607: EMPTY
3608: LIST
3609: LIST
3610: LIST
3611: PUSH
3612: EMPTY
3613: LIST
3614: LIST
3615: LIST
3616: PPUSH
3617: CALL_OW 42
3621: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3622: LD_ADDR_EXP 3
3626: PUSH
3627: LD_EXP 3
3631: PUSH
3632: LD_EXP 23
3636: PUSH
3637: LD_EXP 31
3641: PUSH
3642: EMPTY
3643: LIST
3644: LIST
3645: UNION
3646: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3647: LD_ADDR_EXP 5
3651: PUSH
3652: LD_EXP 4
3656: PUSH
3657: LD_EXP 11
3661: PUSH
3662: LD_EXP 12
3666: PUSH
3667: LD_EXP 19
3671: PUSH
3672: LD_EXP 20
3676: PUSH
3677: LD_EXP 21
3681: PUSH
3682: LD_EXP 22
3686: PUSH
3687: LD_EXP 23
3691: PUSH
3692: LD_EXP 24
3696: PUSH
3697: LD_EXP 25
3701: PUSH
3702: LD_EXP 26
3706: PUSH
3707: LD_EXP 27
3711: PUSH
3712: LD_EXP 28
3716: PUSH
3717: LD_EXP 29
3721: PUSH
3722: LD_EXP 30
3726: PUSH
3727: LD_EXP 31
3731: PUSH
3732: LD_EXP 32
3736: PUSH
3737: LD_EXP 33
3741: PUSH
3742: EMPTY
3743: LIST
3744: LIST
3745: LIST
3746: LIST
3747: LIST
3748: LIST
3749: LIST
3750: LIST
3751: LIST
3752: LIST
3753: LIST
3754: LIST
3755: LIST
3756: LIST
3757: LIST
3758: LIST
3759: LIST
3760: PUSH
3761: LD_EXP 3
3765: ADD
3766: DIFF
3767: ST_TO_ADDR
// friends := friends diff others ;
3768: LD_ADDR_EXP 4
3772: PUSH
3773: LD_EXP 4
3777: PUSH
3778: LD_EXP 5
3782: DIFF
3783: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
3784: LD_ADDR_VAR 0 4
3788: PUSH
3789: LD_INT 111
3791: PUSH
3792: LD_INT 137
3794: PUSH
3795: LD_INT 51
3797: PUSH
3798: EMPTY
3799: LIST
3800: LIST
3801: LIST
3802: PUSH
3803: LD_INT 147
3805: PUSH
3806: LD_INT 129
3808: PUSH
3809: LD_INT 25
3811: PUSH
3812: EMPTY
3813: LIST
3814: LIST
3815: LIST
3816: PUSH
3817: EMPTY
3818: LIST
3819: LIST
3820: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
3821: LD_ADDR_VAR 0 5
3825: PUSH
3826: LD_INT 5
3828: PUSH
3829: LD_INT 6
3831: PUSH
3832: LD_INT 7
3834: PUSH
3835: LD_INT 8
3837: PUSH
3838: LD_INT 17
3840: PUSH
3841: LD_INT 18
3843: PUSH
3844: EMPTY
3845: LIST
3846: LIST
3847: LIST
3848: LIST
3849: LIST
3850: LIST
3851: ST_TO_ADDR
// for i in buildings do
3852: LD_ADDR_VAR 0 2
3856: PUSH
3857: LD_VAR 0 4
3861: PUSH
3862: FOR_IN
3863: IFFALSE 3879
// SetSide ( i , 4 ) ;
3865: LD_VAR 0 2
3869: PPUSH
3870: LD_INT 4
3872: PPUSH
3873: CALL_OW 235
3877: GO 3862
3879: POP
3880: POP
// for i in selected do
3881: LD_ADDR_VAR 0 2
3885: PUSH
3886: LD_EXP 3
3890: PUSH
3891: FOR_IN
3892: IFFALSE 4154
// begin if GetClass ( i ) in [ 1 , 5 ] then
3894: LD_VAR 0 2
3898: PPUSH
3899: CALL_OW 257
3903: PUSH
3904: LD_INT 1
3906: PUSH
3907: LD_INT 5
3909: PUSH
3910: EMPTY
3911: LIST
3912: LIST
3913: IN
3914: IFFALSE 4035
// begin if buildings [ 1 ] then
3916: LD_VAR 0 4
3920: PUSH
3921: LD_INT 1
3923: ARRAY
3924: IFFALSE 3985
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
3926: LD_VAR 0 2
3930: PPUSH
3931: LD_VAR 0 4
3935: PUSH
3936: LD_INT 1
3938: ARRAY
3939: PUSH
3940: LD_INT 1
3942: ARRAY
3943: PPUSH
3944: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
3948: LD_ADDR_VAR 0 4
3952: PUSH
3953: LD_VAR 0 4
3957: PPUSH
3958: LD_INT 1
3960: PPUSH
3961: LD_VAR 0 4
3965: PUSH
3966: LD_INT 1
3968: ARRAY
3969: PPUSH
3970: LD_INT 1
3972: PPUSH
3973: CALL_OW 3
3977: PPUSH
3978: CALL_OW 1
3982: ST_TO_ADDR
// end else
3983: GO 4033
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
3985: LD_VAR 0 2
3989: PPUSH
3990: LD_VAR 0 5
3994: PUSH
3995: LD_INT 1
3997: ARRAY
3998: PPUSH
3999: LD_INT 0
4001: PPUSH
4002: CALL_OW 49
// ComHold ( i ) ;
4006: LD_VAR 0 2
4010: PPUSH
4011: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4015: LD_ADDR_VAR 0 5
4019: PUSH
4020: LD_VAR 0 5
4024: PPUSH
4025: LD_INT 1
4027: PPUSH
4028: CALL_OW 3
4032: ST_TO_ADDR
// end ; end else
4033: GO 4152
// begin if buildings [ 2 ] then
4035: LD_VAR 0 4
4039: PUSH
4040: LD_INT 2
4042: ARRAY
4043: IFFALSE 4104
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4045: LD_VAR 0 2
4049: PPUSH
4050: LD_VAR 0 4
4054: PUSH
4055: LD_INT 2
4057: ARRAY
4058: PUSH
4059: LD_INT 1
4061: ARRAY
4062: PPUSH
4063: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4067: LD_ADDR_VAR 0 4
4071: PUSH
4072: LD_VAR 0 4
4076: PPUSH
4077: LD_INT 2
4079: PPUSH
4080: LD_VAR 0 4
4084: PUSH
4085: LD_INT 2
4087: ARRAY
4088: PPUSH
4089: LD_INT 1
4091: PPUSH
4092: CALL_OW 3
4096: PPUSH
4097: CALL_OW 1
4101: ST_TO_ADDR
// end else
4102: GO 4152
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4104: LD_VAR 0 2
4108: PPUSH
4109: LD_VAR 0 5
4113: PUSH
4114: LD_INT 1
4116: ARRAY
4117: PPUSH
4118: LD_INT 0
4120: PPUSH
4121: CALL_OW 49
// ComHold ( i ) ;
4125: LD_VAR 0 2
4129: PPUSH
4130: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4134: LD_ADDR_VAR 0 5
4138: PUSH
4139: LD_VAR 0 5
4143: PPUSH
4144: LD_INT 1
4146: PPUSH
4147: CALL_OW 3
4151: ST_TO_ADDR
// end ; end ; end ;
4152: GO 3891
4154: POP
4155: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4156: LD_ADDR_VAR 0 6
4160: PUSH
4161: LD_INT 22
4163: PUSH
4164: LD_INT 1
4166: PUSH
4167: EMPTY
4168: LIST
4169: LIST
4170: PUSH
4171: LD_INT 30
4173: PUSH
4174: LD_INT 32
4176: PUSH
4177: EMPTY
4178: LIST
4179: LIST
4180: PUSH
4181: EMPTY
4182: LIST
4183: LIST
4184: PPUSH
4185: CALL_OW 69
4189: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4190: LD_ADDR_VAR 0 2
4194: PUSH
4195: DOUBLE
4196: LD_VAR 0 6
4200: PUSH
4201: LD_EXP 5
4205: MINUS
4206: INC
4207: ST_TO_ADDR
4208: LD_INT 1
4210: PUSH
4211: FOR_DOWNTO
4212: IFFALSE 4275
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4214: LD_INT 0
4216: PPUSH
4217: LD_INT 1
4219: PPUSH
4220: LD_INT 7
4222: PUSH
4223: LD_INT 8
4225: PUSH
4226: LD_INT 9
4228: PUSH
4229: EMPTY
4230: LIST
4231: LIST
4232: LIST
4233: PUSH
4234: LD_OWVAR 67
4238: ARRAY
4239: PPUSH
4240: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4244: LD_ADDR_EXP 5
4248: PUSH
4249: LD_EXP 5
4253: PPUSH
4254: LD_EXP 5
4258: PUSH
4259: LD_INT 1
4261: PLUS
4262: PPUSH
4263: CALL_OW 44
4267: PPUSH
4268: CALL_OW 2
4272: ST_TO_ADDR
// end ;
4273: GO 4211
4275: POP
4276: POP
// if others then
4277: LD_EXP 5
4281: IFFALSE 4387
// for i = 1 to bunkers do
4283: LD_ADDR_VAR 0 2
4287: PUSH
4288: DOUBLE
4289: LD_INT 1
4291: DEC
4292: ST_TO_ADDR
4293: LD_VAR 0 6
4297: PUSH
4298: FOR_TO
4299: IFFALSE 4385
// begin SetSide ( others [ others ] , 1 ) ;
4301: LD_EXP 5
4305: PUSH
4306: LD_EXP 5
4310: ARRAY
4311: PPUSH
4312: LD_INT 1
4314: PPUSH
4315: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4319: LD_EXP 5
4323: PUSH
4324: LD_EXP 5
4328: ARRAY
4329: PPUSH
4330: LD_INT 1
4332: PPUSH
4333: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4337: LD_EXP 5
4341: PUSH
4342: LD_EXP 5
4346: ARRAY
4347: PPUSH
4348: LD_VAR 0 6
4352: PUSH
4353: LD_VAR 0 2
4357: ARRAY
4358: PPUSH
4359: CALL_OW 52
// others := Delete ( others , others ) ;
4363: LD_ADDR_EXP 5
4367: PUSH
4368: LD_EXP 5
4372: PPUSH
4373: LD_EXP 5
4377: PPUSH
4378: CALL_OW 3
4382: ST_TO_ADDR
// end ;
4383: GO 4298
4385: POP
4386: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4387: LD_ADDR_VAR 0 5
4391: PUSH
4392: LD_VAR 0 5
4396: PUSH
4397: LD_INT 9
4399: PUSH
4400: LD_INT 10
4402: PUSH
4403: LD_INT 11
4405: PUSH
4406: LD_INT 12
4408: PUSH
4409: LD_INT 13
4411: PUSH
4412: LD_INT 14
4414: PUSH
4415: LD_INT 15
4417: PUSH
4418: LD_INT 16
4420: PUSH
4421: EMPTY
4422: LIST
4423: LIST
4424: LIST
4425: LIST
4426: LIST
4427: LIST
4428: LIST
4429: LIST
4430: UNION
4431: ST_TO_ADDR
// for i in friends ^ others do
4432: LD_ADDR_VAR 0 2
4436: PUSH
4437: LD_EXP 4
4441: PUSH
4442: LD_EXP 5
4446: ADD
4447: PUSH
4448: FOR_IN
4449: IFFALSE 4789
// begin SetTag ( i , 2 ) ;
4451: LD_VAR 0 2
4455: PPUSH
4456: LD_INT 2
4458: PPUSH
4459: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4463: LD_VAR 0 2
4467: PUSH
4468: LD_EXP 4
4472: IN
4473: PUSH
4474: LD_VAR 0 2
4478: PPUSH
4479: CALL_OW 257
4483: PUSH
4484: LD_INT 1
4486: EQUAL
4487: AND
4488: PUSH
4489: LD_VAR 0 2
4493: PUSH
4494: LD_EXP 5
4498: IN
4499: OR
4500: PUSH
4501: LD_VAR 0 4
4505: PUSH
4506: LD_INT 1
4508: ARRAY
4509: AND
4510: IFFALSE 4583
// begin SetClass ( i , 1 ) ;
4512: LD_VAR 0 2
4516: PPUSH
4517: LD_INT 1
4519: PPUSH
4520: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4524: LD_VAR 0 2
4528: PPUSH
4529: LD_VAR 0 4
4533: PUSH
4534: LD_INT 1
4536: ARRAY
4537: PUSH
4538: LD_INT 1
4540: ARRAY
4541: PPUSH
4542: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4546: LD_ADDR_VAR 0 4
4550: PUSH
4551: LD_VAR 0 4
4555: PPUSH
4556: LD_INT 1
4558: PPUSH
4559: LD_VAR 0 4
4563: PUSH
4564: LD_INT 1
4566: ARRAY
4567: PPUSH
4568: LD_INT 1
4570: PPUSH
4571: CALL_OW 3
4575: PPUSH
4576: CALL_OW 1
4580: ST_TO_ADDR
// continue ;
4581: GO 4448
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4583: LD_VAR 0 2
4587: PUSH
4588: LD_EXP 4
4592: IN
4593: PUSH
4594: LD_VAR 0 2
4598: PPUSH
4599: CALL_OW 257
4603: PUSH
4604: LD_INT 4
4606: EQUAL
4607: AND
4608: PUSH
4609: LD_VAR 0 2
4613: PUSH
4614: LD_EXP 5
4618: IN
4619: OR
4620: PUSH
4621: LD_VAR 0 4
4625: PUSH
4626: LD_INT 2
4628: ARRAY
4629: AND
4630: IFFALSE 4703
// begin SetClass ( i , 4 ) ;
4632: LD_VAR 0 2
4636: PPUSH
4637: LD_INT 4
4639: PPUSH
4640: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4644: LD_VAR 0 2
4648: PPUSH
4649: LD_VAR 0 4
4653: PUSH
4654: LD_INT 2
4656: ARRAY
4657: PUSH
4658: LD_INT 1
4660: ARRAY
4661: PPUSH
4662: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4666: LD_ADDR_VAR 0 4
4670: PUSH
4671: LD_VAR 0 4
4675: PPUSH
4676: LD_INT 2
4678: PPUSH
4679: LD_VAR 0 4
4683: PUSH
4684: LD_INT 2
4686: ARRAY
4687: PPUSH
4688: LD_INT 1
4690: PPUSH
4691: CALL_OW 3
4695: PPUSH
4696: CALL_OW 1
4700: ST_TO_ADDR
// continue ;
4701: GO 4448
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4703: LD_VAR 0 2
4707: PPUSH
4708: LD_VAR 0 5
4712: PUSH
4713: LD_INT 1
4715: ARRAY
4716: PPUSH
4717: LD_INT 0
4719: PPUSH
4720: CALL_OW 49
// if GetClass ( i ) <> 4 then
4724: LD_VAR 0 2
4728: PPUSH
4729: CALL_OW 257
4733: PUSH
4734: LD_INT 4
4736: NONEQUAL
4737: IFFALSE 4751
// SetClass ( i , 1 ) ;
4739: LD_VAR 0 2
4743: PPUSH
4744: LD_INT 1
4746: PPUSH
4747: CALL_OW 336
// ComHold ( i ) ;
4751: LD_VAR 0 2
4755: PPUSH
4756: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4760: LD_ADDR_VAR 0 5
4764: PUSH
4765: LD_VAR 0 5
4769: PPUSH
4770: LD_INT 1
4772: PPUSH
4773: CALL_OW 3
4777: ST_TO_ADDR
// if not areas then
4778: LD_VAR 0 5
4782: NOT
4783: IFFALSE 4787
// break ;
4785: GO 4789
// end ;
4787: GO 4448
4789: POP
4790: POP
// if Frank then
4791: LD_EXP 29
4795: IFFALSE 4809
// SetClass ( Frank , class_sniper ) ;
4797: LD_EXP 29
4801: PPUSH
4802: LD_INT 5
4804: PPUSH
4805: CALL_OW 336
// end ; end_of_file
4809: LD_VAR 0 1
4813: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
4814: LD_INT 0
4816: PPUSH
4817: PPUSH
// if exist_mode then
4818: LD_VAR 0 2
4822: IFFALSE 4847
// unit := CreateCharacter ( prefix & ident ) else
4824: LD_ADDR_VAR 0 5
4828: PUSH
4829: LD_VAR 0 3
4833: PUSH
4834: LD_VAR 0 1
4838: STR
4839: PPUSH
4840: CALL_OW 34
4844: ST_TO_ADDR
4845: GO 4862
// unit := NewCharacter ( ident ) ;
4847: LD_ADDR_VAR 0 5
4851: PUSH
4852: LD_VAR 0 1
4856: PPUSH
4857: CALL_OW 25
4861: ST_TO_ADDR
// result := unit ;
4862: LD_ADDR_VAR 0 4
4866: PUSH
4867: LD_VAR 0 5
4871: ST_TO_ADDR
// end ;
4872: LD_VAR 0 4
4876: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
4877: LD_INT 0
4879: PPUSH
// vc_chassis := chassis ;
4880: LD_ADDR_OWVAR 37
4884: PUSH
4885: LD_VAR 0 1
4889: ST_TO_ADDR
// vc_engine := engine ;
4890: LD_ADDR_OWVAR 39
4894: PUSH
4895: LD_VAR 0 2
4899: ST_TO_ADDR
// vc_control := control ;
4900: LD_ADDR_OWVAR 38
4904: PUSH
4905: LD_VAR 0 3
4909: ST_TO_ADDR
// vc_weapon := weapon ;
4910: LD_ADDR_OWVAR 40
4914: PUSH
4915: LD_VAR 0 4
4919: ST_TO_ADDR
// vc_fuel_battery := fuel ;
4920: LD_ADDR_OWVAR 41
4924: PUSH
4925: LD_VAR 0 5
4929: ST_TO_ADDR
// end ;
4930: LD_VAR 0 6
4934: RET
// export function CanSayRand ( side ) ; begin
4935: LD_INT 0
4937: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
4938: LD_ADDR_VAR 0 2
4942: PUSH
4943: LD_INT 52
4945: PUSH
4946: EMPTY
4947: LIST
4948: PUSH
4949: LD_INT 22
4951: PUSH
4952: LD_VAR 0 1
4956: PUSH
4957: EMPTY
4958: LIST
4959: LIST
4960: PUSH
4961: LD_INT 2
4963: PUSH
4964: LD_INT 25
4966: PUSH
4967: LD_INT 1
4969: PUSH
4970: EMPTY
4971: LIST
4972: LIST
4973: PUSH
4974: LD_INT 25
4976: PUSH
4977: LD_INT 2
4979: PUSH
4980: EMPTY
4981: LIST
4982: LIST
4983: PUSH
4984: LD_INT 25
4986: PUSH
4987: LD_INT 3
4989: PUSH
4990: EMPTY
4991: LIST
4992: LIST
4993: PUSH
4994: LD_INT 25
4996: PUSH
4997: LD_INT 4
4999: PUSH
5000: EMPTY
5001: LIST
5002: LIST
5003: PUSH
5004: EMPTY
5005: LIST
5006: LIST
5007: LIST
5008: LIST
5009: LIST
5010: PUSH
5011: EMPTY
5012: LIST
5013: LIST
5014: LIST
5015: PPUSH
5016: CALL_OW 69
5020: PUSH
5021: LD_EXP 11
5025: PUSH
5026: LD_EXP 29
5030: PUSH
5031: LD_EXP 19
5035: PUSH
5036: LD_EXP 20
5040: PUSH
5041: LD_EXP 21
5045: PUSH
5046: LD_EXP 22
5050: PUSH
5051: LD_EXP 23
5055: PUSH
5056: LD_EXP 24
5060: PUSH
5061: LD_EXP 25
5065: PUSH
5066: LD_EXP 26
5070: PUSH
5071: LD_EXP 13
5075: PUSH
5076: LD_EXP 27
5080: PUSH
5081: LD_EXP 28
5085: PUSH
5086: LD_EXP 30
5090: PUSH
5091: EMPTY
5092: LIST
5093: LIST
5094: LIST
5095: LIST
5096: LIST
5097: LIST
5098: LIST
5099: LIST
5100: LIST
5101: LIST
5102: LIST
5103: LIST
5104: LIST
5105: LIST
5106: DIFF
5107: ST_TO_ADDR
// end ;
5108: LD_VAR 0 2
5112: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5113: LD_INT 0
5115: PPUSH
5116: PPUSH
5117: PPUSH
5118: PPUSH
5119: PPUSH
5120: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5121: LD_VAR 0 1
5125: NOT
5126: PUSH
5127: LD_VAR 0 1
5131: PPUSH
5132: CALL_OW 263
5136: PUSH
5137: LD_INT 2
5139: EQUAL
5140: NOT
5141: OR
5142: IFFALSE 5146
// exit ;
5144: GO 5462
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5146: LD_ADDR_VAR 0 6
5150: PUSH
5151: LD_INT 22
5153: PUSH
5154: LD_VAR 0 1
5158: PPUSH
5159: CALL_OW 255
5163: PUSH
5164: EMPTY
5165: LIST
5166: LIST
5167: PUSH
5168: LD_INT 2
5170: PUSH
5171: LD_INT 30
5173: PUSH
5174: LD_INT 36
5176: PUSH
5177: EMPTY
5178: LIST
5179: LIST
5180: PUSH
5181: LD_INT 34
5183: PUSH
5184: LD_INT 31
5186: PUSH
5187: EMPTY
5188: LIST
5189: LIST
5190: PUSH
5191: EMPTY
5192: LIST
5193: LIST
5194: LIST
5195: PUSH
5196: EMPTY
5197: LIST
5198: LIST
5199: PPUSH
5200: CALL_OW 69
5204: ST_TO_ADDR
// if not tmp then
5205: LD_VAR 0 6
5209: NOT
5210: IFFALSE 5214
// exit ;
5212: GO 5462
// result := [ ] ;
5214: LD_ADDR_VAR 0 2
5218: PUSH
5219: EMPTY
5220: ST_TO_ADDR
// for i in tmp do
5221: LD_ADDR_VAR 0 3
5225: PUSH
5226: LD_VAR 0 6
5230: PUSH
5231: FOR_IN
5232: IFFALSE 5303
// begin t := UnitsInside ( i ) ;
5234: LD_ADDR_VAR 0 4
5238: PUSH
5239: LD_VAR 0 3
5243: PPUSH
5244: CALL_OW 313
5248: ST_TO_ADDR
// if t then
5249: LD_VAR 0 4
5253: IFFALSE 5301
// for j in t do
5255: LD_ADDR_VAR 0 7
5259: PUSH
5260: LD_VAR 0 4
5264: PUSH
5265: FOR_IN
5266: IFFALSE 5299
// result := Insert ( result , result + 1 , j ) ;
5268: LD_ADDR_VAR 0 2
5272: PUSH
5273: LD_VAR 0 2
5277: PPUSH
5278: LD_VAR 0 2
5282: PUSH
5283: LD_INT 1
5285: PLUS
5286: PPUSH
5287: LD_VAR 0 7
5291: PPUSH
5292: CALL_OW 2
5296: ST_TO_ADDR
5297: GO 5265
5299: POP
5300: POP
// end ;
5301: GO 5231
5303: POP
5304: POP
// if not result then
5305: LD_VAR 0 2
5309: NOT
5310: IFFALSE 5314
// exit ;
5312: GO 5462
// mech := result [ 1 ] ;
5314: LD_ADDR_VAR 0 5
5318: PUSH
5319: LD_VAR 0 2
5323: PUSH
5324: LD_INT 1
5326: ARRAY
5327: ST_TO_ADDR
// if result > 1 then
5328: LD_VAR 0 2
5332: PUSH
5333: LD_INT 1
5335: GREATER
5336: IFFALSE 5448
// for i = 2 to result do
5338: LD_ADDR_VAR 0 3
5342: PUSH
5343: DOUBLE
5344: LD_INT 2
5346: DEC
5347: ST_TO_ADDR
5348: LD_VAR 0 2
5352: PUSH
5353: FOR_TO
5354: IFFALSE 5446
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5356: LD_ADDR_VAR 0 4
5360: PUSH
5361: LD_VAR 0 2
5365: PUSH
5366: LD_VAR 0 3
5370: ARRAY
5371: PPUSH
5372: LD_INT 3
5374: PPUSH
5375: CALL_OW 259
5379: PUSH
5380: LD_VAR 0 2
5384: PUSH
5385: LD_VAR 0 3
5389: ARRAY
5390: PPUSH
5391: CALL_OW 432
5395: MINUS
5396: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5397: LD_VAR 0 4
5401: PUSH
5402: LD_VAR 0 5
5406: PPUSH
5407: LD_INT 3
5409: PPUSH
5410: CALL_OW 259
5414: PUSH
5415: LD_VAR 0 5
5419: PPUSH
5420: CALL_OW 432
5424: MINUS
5425: GREATEREQUAL
5426: IFFALSE 5444
// mech := result [ i ] ;
5428: LD_ADDR_VAR 0 5
5432: PUSH
5433: LD_VAR 0 2
5437: PUSH
5438: LD_VAR 0 3
5442: ARRAY
5443: ST_TO_ADDR
// end ;
5444: GO 5353
5446: POP
5447: POP
// ComLinkTo ( vehicle , mech ) ;
5448: LD_VAR 0 1
5452: PPUSH
5453: LD_VAR 0 5
5457: PPUSH
5458: CALL_OW 135
// end ;
5462: LD_VAR 0 2
5466: RET
// export function SayRand ( sex , dial ) ; begin
5467: LD_INT 0
5469: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5470: LD_ADDR_VAR 0 3
5474: PUSH
5475: LD_INT 52
5477: PUSH
5478: EMPTY
5479: LIST
5480: PUSH
5481: LD_INT 22
5483: PUSH
5484: LD_INT 1
5486: PUSH
5487: EMPTY
5488: LIST
5489: LIST
5490: PUSH
5491: LD_INT 26
5493: PUSH
5494: LD_VAR 0 1
5498: PUSH
5499: EMPTY
5500: LIST
5501: LIST
5502: PUSH
5503: LD_INT 2
5505: PUSH
5506: LD_INT 25
5508: PUSH
5509: LD_INT 1
5511: PUSH
5512: EMPTY
5513: LIST
5514: LIST
5515: PUSH
5516: LD_INT 25
5518: PUSH
5519: LD_INT 2
5521: PUSH
5522: EMPTY
5523: LIST
5524: LIST
5525: PUSH
5526: LD_INT 25
5528: PUSH
5529: LD_INT 3
5531: PUSH
5532: EMPTY
5533: LIST
5534: LIST
5535: PUSH
5536: LD_INT 25
5538: PUSH
5539: LD_INT 4
5541: PUSH
5542: EMPTY
5543: LIST
5544: LIST
5545: PUSH
5546: EMPTY
5547: LIST
5548: LIST
5549: LIST
5550: LIST
5551: LIST
5552: PUSH
5553: EMPTY
5554: LIST
5555: LIST
5556: LIST
5557: LIST
5558: PPUSH
5559: CALL_OW 69
5563: PUSH
5564: LD_EXP 11
5568: PUSH
5569: LD_EXP 29
5573: PUSH
5574: LD_EXP 19
5578: PUSH
5579: LD_EXP 20
5583: PUSH
5584: LD_EXP 21
5588: PUSH
5589: LD_EXP 22
5593: PUSH
5594: LD_EXP 23
5598: PUSH
5599: LD_EXP 24
5603: PUSH
5604: LD_EXP 25
5608: PUSH
5609: LD_EXP 26
5613: PUSH
5614: LD_EXP 13
5618: PUSH
5619: LD_EXP 27
5623: PUSH
5624: LD_EXP 28
5628: PUSH
5629: LD_EXP 30
5633: PUSH
5634: EMPTY
5635: LIST
5636: LIST
5637: LIST
5638: LIST
5639: LIST
5640: LIST
5641: LIST
5642: LIST
5643: LIST
5644: LIST
5645: LIST
5646: LIST
5647: LIST
5648: LIST
5649: DIFF
5650: ST_TO_ADDR
// if not result then
5651: LD_VAR 0 3
5655: NOT
5656: IFFALSE 5660
// exit ;
5658: GO 5688
// result := result [ 1 ] ;
5660: LD_ADDR_VAR 0 3
5664: PUSH
5665: LD_VAR 0 3
5669: PUSH
5670: LD_INT 1
5672: ARRAY
5673: ST_TO_ADDR
// Say ( result , dial ) ;
5674: LD_VAR 0 3
5678: PPUSH
5679: LD_VAR 0 2
5683: PPUSH
5684: CALL_OW 88
// end ;
5688: LD_VAR 0 3
5692: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5693: LD_INT 0
5695: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5696: LD_ADDR_VAR 0 4
5700: PUSH
5701: LD_INT 22
5703: PUSH
5704: LD_INT 1
5706: PUSH
5707: EMPTY
5708: LIST
5709: LIST
5710: PUSH
5711: LD_INT 26
5713: PUSH
5714: LD_VAR 0 1
5718: PUSH
5719: EMPTY
5720: LIST
5721: LIST
5722: PUSH
5723: LD_INT 2
5725: PUSH
5726: LD_INT 25
5728: PUSH
5729: LD_INT 1
5731: PUSH
5732: EMPTY
5733: LIST
5734: LIST
5735: PUSH
5736: LD_INT 25
5738: PUSH
5739: LD_INT 2
5741: PUSH
5742: EMPTY
5743: LIST
5744: LIST
5745: PUSH
5746: LD_INT 25
5748: PUSH
5749: LD_INT 3
5751: PUSH
5752: EMPTY
5753: LIST
5754: LIST
5755: PUSH
5756: LD_INT 25
5758: PUSH
5759: LD_INT 4
5761: PUSH
5762: EMPTY
5763: LIST
5764: LIST
5765: PUSH
5766: EMPTY
5767: LIST
5768: LIST
5769: LIST
5770: LIST
5771: LIST
5772: PUSH
5773: EMPTY
5774: LIST
5775: LIST
5776: LIST
5777: PPUSH
5778: CALL_OW 69
5782: PUSH
5783: LD_EXP 11
5787: PUSH
5788: LD_EXP 29
5792: PUSH
5793: LD_EXP 19
5797: PUSH
5798: LD_EXP 20
5802: PUSH
5803: LD_EXP 21
5807: PUSH
5808: LD_EXP 22
5812: PUSH
5813: LD_EXP 23
5817: PUSH
5818: LD_EXP 24
5822: PUSH
5823: LD_EXP 25
5827: PUSH
5828: LD_EXP 26
5832: PUSH
5833: LD_EXP 13
5837: PUSH
5838: LD_EXP 27
5842: PUSH
5843: LD_EXP 28
5847: PUSH
5848: LD_EXP 30
5852: PUSH
5853: EMPTY
5854: LIST
5855: LIST
5856: LIST
5857: LIST
5858: LIST
5859: LIST
5860: LIST
5861: LIST
5862: LIST
5863: LIST
5864: LIST
5865: LIST
5866: LIST
5867: LIST
5868: PUSH
5869: LD_VAR 0 3
5873: ADD
5874: DIFF
5875: ST_TO_ADDR
// if not result then
5876: LD_VAR 0 4
5880: NOT
5881: IFFALSE 5885
// exit ;
5883: GO 5913
// result := result [ 1 ] ;
5885: LD_ADDR_VAR 0 4
5889: PUSH
5890: LD_VAR 0 4
5894: PUSH
5895: LD_INT 1
5897: ARRAY
5898: ST_TO_ADDR
// Say ( result , dial ) ;
5899: LD_VAR 0 4
5903: PPUSH
5904: LD_VAR 0 2
5908: PPUSH
5909: CALL_OW 88
// end ;
5913: LD_VAR 0 4
5917: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
5918: LD_INT 0
5920: PPUSH
5921: PPUSH
5922: PPUSH
5923: PPUSH
5924: PPUSH
5925: PPUSH
5926: PPUSH
5927: PPUSH
5928: PPUSH
5929: PPUSH
5930: PPUSH
5931: PPUSH
5932: PPUSH
5933: PPUSH
5934: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
5935: LD_VAR 0 1
5939: NOT
5940: PUSH
5941: LD_VAR 0 2
5945: NOT
5946: OR
5947: PUSH
5948: LD_VAR 0 1
5952: PPUSH
5953: CALL_OW 247
5957: PUSH
5958: LD_INT 3
5960: EQUAL
5961: OR
5962: IFFALSE 5966
// exit ;
5964: GO 7443
// for i = path downto 1 do
5966: LD_ADDR_VAR 0 5
5970: PUSH
5971: DOUBLE
5972: LD_VAR 0 2
5976: INC
5977: ST_TO_ADDR
5978: LD_INT 1
5980: PUSH
5981: FOR_DOWNTO
5982: IFFALSE 6043
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
5984: LD_VAR 0 2
5988: PUSH
5989: LD_VAR 0 5
5993: ARRAY
5994: PUSH
5995: LD_INT 1
5997: ARRAY
5998: PPUSH
5999: LD_VAR 0 2
6003: PUSH
6004: LD_VAR 0 5
6008: ARRAY
6009: PUSH
6010: LD_INT 2
6012: ARRAY
6013: PPUSH
6014: CALL_OW 488
6018: NOT
6019: IFFALSE 6041
// path = Delete ( path , i ) ;
6021: LD_ADDR_VAR 0 2
6025: PUSH
6026: LD_VAR 0 2
6030: PPUSH
6031: LD_VAR 0 5
6035: PPUSH
6036: CALL_OW 3
6040: ST_TO_ADDR
// end ;
6041: GO 5981
6043: POP
6044: POP
// if not path then
6045: LD_VAR 0 2
6049: NOT
6050: IFFALSE 6054
// exit ;
6052: GO 7443
// tmp_path := [ ] ;
6054: LD_ADDR_VAR 0 11
6058: PUSH
6059: EMPTY
6060: ST_TO_ADDR
// if flags then
6061: LD_VAR 0 3
6065: IFFALSE 6139
// begin if flags [ 1 ] then
6067: LD_VAR 0 3
6071: PUSH
6072: LD_INT 1
6074: ARRAY
6075: IFFALSE 6091
// safe_place = flags [ 1 ] ;
6077: LD_ADDR_VAR 0 16
6081: PUSH
6082: LD_VAR 0 3
6086: PUSH
6087: LD_INT 1
6089: ARRAY
6090: ST_TO_ADDR
// if flags [ 2 ] then
6091: LD_VAR 0 3
6095: PUSH
6096: LD_INT 2
6098: ARRAY
6099: IFFALSE 6115
// spot_dist = flags [ 2 ] ;
6101: LD_ADDR_VAR 0 15
6105: PUSH
6106: LD_VAR 0 3
6110: PUSH
6111: LD_INT 2
6113: ARRAY
6114: ST_TO_ADDR
// if flags [ 3 ] then
6115: LD_VAR 0 3
6119: PUSH
6120: LD_INT 3
6122: ARRAY
6123: IFFALSE 6139
// chase_range = flags [ 3 ] ;
6125: LD_ADDR_VAR 0 17
6129: PUSH
6130: LD_VAR 0 3
6134: PUSH
6135: LD_INT 3
6137: ARRAY
6138: ST_TO_ADDR
// end ; if not chase_range then
6139: LD_VAR 0 17
6143: NOT
6144: IFFALSE 6154
// chase_range = 8 ;
6146: LD_ADDR_VAR 0 17
6150: PUSH
6151: LD_INT 8
6153: ST_TO_ADDR
// if not spot_dist then
6154: LD_VAR 0 15
6158: NOT
6159: IFFALSE 6169
// spot_dist := 8 ;
6161: LD_ADDR_VAR 0 15
6165: PUSH
6166: LD_INT 8
6168: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6169: LD_ADDR_VAR 0 18
6173: PUSH
6174: LD_VAR 0 1
6178: PPUSH
6179: CALL_OW 247
6183: PUSH
6184: LD_INT 2
6186: EQUAL
6187: PUSH
6188: LD_VAR 0 1
6192: PPUSH
6193: CALL_OW 262
6197: PUSH
6198: LD_INT 3
6200: NONEQUAL
6201: AND
6202: ST_TO_ADDR
// status = 1 ;
6203: LD_ADDR_VAR 0 12
6207: PUSH
6208: LD_INT 1
6210: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6211: LD_ADDR_VAR 0 11
6215: PUSH
6216: LD_INT 1
6218: PUSH
6219: LD_VAR 0 2
6223: PUSH
6224: LD_INT 1
6226: ARRAY
6227: PUSH
6228: EMPTY
6229: LIST
6230: LIST
6231: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6232: LD_INT 35
6234: PPUSH
6235: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6239: LD_VAR 0 18
6243: PUSH
6244: LD_VAR 0 1
6248: PPUSH
6249: CALL_OW 261
6253: PUSH
6254: LD_INT 20
6256: LESS
6257: AND
6258: IFFALSE 6451
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6260: LD_ADDR_VAR 0 10
6264: PUSH
6265: LD_INT 22
6267: PUSH
6268: LD_VAR 0 1
6272: PPUSH
6273: CALL_OW 255
6277: PUSH
6278: EMPTY
6279: LIST
6280: LIST
6281: PUSH
6282: LD_INT 2
6284: PUSH
6285: LD_INT 30
6287: PUSH
6288: LD_INT 0
6290: PUSH
6291: EMPTY
6292: LIST
6293: LIST
6294: PUSH
6295: LD_INT 30
6297: PUSH
6298: LD_INT 1
6300: PUSH
6301: EMPTY
6302: LIST
6303: LIST
6304: PUSH
6305: LD_INT 30
6307: PUSH
6308: LD_INT 29
6310: PUSH
6311: EMPTY
6312: LIST
6313: LIST
6314: PUSH
6315: LD_INT 30
6317: PUSH
6318: LD_INT 3
6320: PUSH
6321: EMPTY
6322: LIST
6323: LIST
6324: PUSH
6325: EMPTY
6326: LIST
6327: LIST
6328: LIST
6329: LIST
6330: LIST
6331: PUSH
6332: EMPTY
6333: LIST
6334: LIST
6335: PPUSH
6336: CALL_OW 69
6340: ST_TO_ADDR
// if not station then
6341: LD_VAR 0 10
6345: NOT
6346: IFFALSE 6362
// begin SetFuel ( unit , 40 ) ;
6348: LD_VAR 0 1
6352: PPUSH
6353: LD_INT 40
6355: PPUSH
6356: CALL_OW 240
// continue ;
6360: GO 6232
// end ; status := 6 ;
6362: LD_ADDR_VAR 0 12
6366: PUSH
6367: LD_INT 6
6369: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6370: LD_ADDR_VAR 0 10
6374: PUSH
6375: LD_VAR 0 10
6379: PPUSH
6380: LD_VAR 0 1
6384: PPUSH
6385: CALL_OW 74
6389: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6390: LD_INT 35
6392: PPUSH
6393: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6397: LD_VAR 0 1
6401: PPUSH
6402: LD_VAR 0 10
6406: PPUSH
6407: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6411: LD_VAR 0 1
6415: PPUSH
6416: LD_VAR 0 10
6420: PPUSH
6421: CALL_OW 296
6425: PUSH
6426: LD_INT 6
6428: LESS
6429: IFFALSE 6390
// SetFuel ( unit , 100 ) ;
6431: LD_VAR 0 1
6435: PPUSH
6436: LD_INT 100
6438: PPUSH
6439: CALL_OW 240
// status := 5 ;
6443: LD_ADDR_VAR 0 12
6447: PUSH
6448: LD_INT 5
6450: ST_TO_ADDR
// end ; if status = 1 then
6451: LD_VAR 0 12
6455: PUSH
6456: LD_INT 1
6458: EQUAL
6459: IFFALSE 6773
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6461: LD_ADDR_VAR 0 13
6465: PUSH
6466: LD_INT 81
6468: PUSH
6469: LD_VAR 0 1
6473: PPUSH
6474: CALL_OW 255
6478: PUSH
6479: EMPTY
6480: LIST
6481: LIST
6482: PUSH
6483: LD_INT 91
6485: PUSH
6486: LD_VAR 0 1
6490: PUSH
6491: LD_VAR 0 15
6495: PUSH
6496: EMPTY
6497: LIST
6498: LIST
6499: LIST
6500: PUSH
6501: LD_INT 101
6503: PUSH
6504: LD_INT 1
6506: PUSH
6507: EMPTY
6508: LIST
6509: LIST
6510: PUSH
6511: EMPTY
6512: LIST
6513: LIST
6514: LIST
6515: PPUSH
6516: CALL_OW 69
6520: ST_TO_ADDR
// if ( enemy ) then
6521: LD_VAR 0 13
6525: IFFALSE 6575
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6527: LD_VAR 0 1
6531: PPUSH
6532: LD_VAR 0 1
6536: PPUSH
6537: CALL_OW 250
6541: PPUSH
6542: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6546: LD_VAR 0 1
6550: PPUSH
6551: LD_VAR 0 1
6555: PPUSH
6556: CALL_OW 251
6560: PPUSH
6561: CALL_OW 232
// status = 2 ;
6565: LD_ADDR_VAR 0 12
6569: PUSH
6570: LD_INT 2
6572: ST_TO_ADDR
// end else
6573: GO 6773
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6575: LD_VAR 0 1
6579: PPUSH
6580: LD_VAR 0 11
6584: PUSH
6585: LD_INT 2
6587: ARRAY
6588: PUSH
6589: LD_INT 1
6591: ARRAY
6592: PPUSH
6593: LD_VAR 0 11
6597: PUSH
6598: LD_INT 2
6600: ARRAY
6601: PUSH
6602: LD_INT 2
6604: ARRAY
6605: PPUSH
6606: CALL_OW 307
6610: PUSH
6611: LD_VAR 0 1
6615: PPUSH
6616: CALL_OW 314
6620: NOT
6621: OR
6622: IFFALSE 6773
// begin wait ( 0 0$2 ) ;
6624: LD_INT 70
6626: PPUSH
6627: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6631: LD_VAR 0 11
6635: PUSH
6636: LD_INT 1
6638: ARRAY
6639: PUSH
6640: LD_INT 1
6642: PLUS
6643: PUSH
6644: LD_VAR 0 2
6648: GREATER
6649: IFFALSE 6674
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6651: LD_ADDR_VAR 0 11
6655: PUSH
6656: LD_VAR 0 11
6660: PPUSH
6661: LD_INT 1
6663: PPUSH
6664: LD_INT 1
6666: PPUSH
6667: CALL_OW 1
6671: ST_TO_ADDR
6672: GO 6705
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
6674: LD_ADDR_VAR 0 11
6678: PUSH
6679: LD_VAR 0 11
6683: PPUSH
6684: LD_INT 1
6686: PPUSH
6687: LD_VAR 0 11
6691: PUSH
6692: LD_INT 1
6694: ARRAY
6695: PUSH
6696: LD_INT 1
6698: PLUS
6699: PPUSH
6700: CALL_OW 1
6704: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
6705: LD_ADDR_VAR 0 11
6709: PUSH
6710: LD_VAR 0 11
6714: PPUSH
6715: LD_INT 2
6717: PPUSH
6718: LD_VAR 0 2
6722: PUSH
6723: LD_VAR 0 11
6727: PUSH
6728: LD_INT 1
6730: ARRAY
6731: ARRAY
6732: PPUSH
6733: CALL_OW 1
6737: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
6738: LD_VAR 0 1
6742: PPUSH
6743: LD_VAR 0 11
6747: PUSH
6748: LD_INT 2
6750: ARRAY
6751: PUSH
6752: LD_INT 1
6754: ARRAY
6755: PPUSH
6756: LD_VAR 0 11
6760: PUSH
6761: LD_INT 2
6763: ARRAY
6764: PUSH
6765: LD_INT 2
6767: ARRAY
6768: PPUSH
6769: CALL_OW 114
// end ; end ; end ; if status = 2 then
6773: LD_VAR 0 12
6777: PUSH
6778: LD_INT 2
6780: EQUAL
6781: IFFALSE 7002
// begin if GetLives ( unit ) < 650 and safe_place then
6783: LD_VAR 0 1
6787: PPUSH
6788: CALL_OW 256
6792: PUSH
6793: LD_INT 650
6795: LESS
6796: PUSH
6797: LD_VAR 0 16
6801: AND
6802: IFFALSE 6814
// begin status = 3 ;
6804: LD_ADDR_VAR 0 12
6808: PUSH
6809: LD_INT 3
6811: ST_TO_ADDR
// continue ;
6812: GO 6232
// end ; x := GetRememberedX ( unit ) ;
6814: LD_ADDR_VAR 0 6
6818: PUSH
6819: LD_VAR 0 1
6823: PPUSH
6824: CALL_OW 252
6828: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
6829: LD_ADDR_VAR 0 7
6833: PUSH
6834: LD_VAR 0 1
6838: PPUSH
6839: CALL_OW 253
6843: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
6844: LD_ADDR_VAR 0 13
6848: PUSH
6849: LD_INT 81
6851: PUSH
6852: LD_VAR 0 1
6856: PPUSH
6857: CALL_OW 255
6861: PUSH
6862: EMPTY
6863: LIST
6864: LIST
6865: PUSH
6866: LD_INT 92
6868: PUSH
6869: LD_VAR 0 6
6873: PUSH
6874: LD_VAR 0 7
6878: PUSH
6879: LD_VAR 0 15
6883: PUSH
6884: EMPTY
6885: LIST
6886: LIST
6887: LIST
6888: LIST
6889: PUSH
6890: LD_INT 101
6892: PUSH
6893: LD_INT 1
6895: PUSH
6896: EMPTY
6897: LIST
6898: LIST
6899: PUSH
6900: EMPTY
6901: LIST
6902: LIST
6903: LIST
6904: PPUSH
6905: CALL_OW 69
6909: ST_TO_ADDR
// if enemy then
6910: LD_VAR 0 13
6914: IFFALSE 6985
// begin e := NearestUnitToUnit ( enemy , unit ) ;
6916: LD_ADDR_VAR 0 14
6920: PUSH
6921: LD_VAR 0 13
6925: PPUSH
6926: LD_VAR 0 1
6930: PPUSH
6931: CALL_OW 74
6935: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
6936: LD_VAR 0 14
6940: PPUSH
6941: LD_VAR 0 6
6945: PPUSH
6946: LD_VAR 0 7
6950: PPUSH
6951: CALL_OW 297
6955: PUSH
6956: LD_VAR 0 15
6960: PUSH
6961: LD_VAR 0 17
6965: PLUS
6966: LESS
6967: IFFALSE 6983
// ComAttackUnit ( unit , e ) ;
6969: LD_VAR 0 1
6973: PPUSH
6974: LD_VAR 0 14
6978: PPUSH
6979: CALL_OW 115
// end else
6983: GO 7002
// begin ComStop ( unit ) ;
6985: LD_VAR 0 1
6989: PPUSH
6990: CALL_OW 141
// status = 5 ;
6994: LD_ADDR_VAR 0 12
6998: PUSH
6999: LD_INT 5
7001: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7002: LD_VAR 0 12
7006: PUSH
7007: LD_INT 3
7009: EQUAL
7010: PUSH
7011: LD_VAR 0 16
7015: AND
7016: IFFALSE 7102
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7018: LD_VAR 0 1
7022: PPUSH
7023: LD_VAR 0 16
7027: PUSH
7028: LD_INT 1
7030: ARRAY
7031: PPUSH
7032: LD_VAR 0 16
7036: PUSH
7037: LD_INT 2
7039: ARRAY
7040: PPUSH
7041: CALL_OW 111
// wait ( 0 0$1 ) ;
7045: LD_INT 35
7047: PPUSH
7048: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7052: LD_VAR 0 1
7056: PPUSH
7057: LD_VAR 0 16
7061: PUSH
7062: LD_INT 1
7064: ARRAY
7065: PPUSH
7066: LD_VAR 0 16
7070: PUSH
7071: LD_INT 2
7073: ARRAY
7074: PPUSH
7075: CALL_OW 297
7079: PUSH
7080: LD_INT 4
7082: LESS
7083: IFFALSE 7018
// ComStop ( unit ) ;
7085: LD_VAR 0 1
7089: PPUSH
7090: CALL_OW 141
// status = 4 ;
7094: LD_ADDR_VAR 0 12
7098: PUSH
7099: LD_INT 4
7101: ST_TO_ADDR
// end ; if status = 4 then
7102: LD_VAR 0 12
7106: PUSH
7107: LD_INT 4
7109: EQUAL
7110: IFFALSE 7142
// begin repeat wait ( 0 0$1 ) ;
7112: LD_INT 35
7114: PPUSH
7115: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7119: LD_VAR 0 1
7123: PPUSH
7124: CALL_OW 256
7128: PUSH
7129: LD_INT 1000
7131: EQUAL
7132: IFFALSE 7112
// status = 5 ;
7134: LD_ADDR_VAR 0 12
7138: PUSH
7139: LD_INT 5
7141: ST_TO_ADDR
// end ; if status = 5 then
7142: LD_VAR 0 12
7146: PUSH
7147: LD_INT 5
7149: EQUAL
7150: IFFALSE 7432
// begin p := 999 ;
7152: LD_ADDR_VAR 0 9
7156: PUSH
7157: LD_INT 999
7159: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7160: LD_ADDR_VAR 0 14
7164: PUSH
7165: LD_VAR 0 11
7169: PUSH
7170: LD_INT 2
7172: ARRAY
7173: PUSH
7174: LD_INT 1
7176: ARRAY
7177: PUSH
7178: LD_VAR 0 11
7182: PUSH
7183: LD_INT 2
7185: ARRAY
7186: PUSH
7187: LD_INT 2
7189: ARRAY
7190: PUSH
7191: EMPTY
7192: LIST
7193: LIST
7194: ST_TO_ADDR
// c := 1 ;
7195: LD_ADDR_VAR 0 8
7199: PUSH
7200: LD_INT 1
7202: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7203: LD_ADDR_VAR 0 5
7207: PUSH
7208: DOUBLE
7209: LD_INT 1
7211: DEC
7212: ST_TO_ADDR
7213: LD_VAR 0 11
7217: PUSH
7218: LD_INT 2
7220: ARRAY
7221: PUSH
7222: LD_INT 2
7224: DIV
7225: PUSH
7226: FOR_TO
7227: IFFALSE 7359
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7229: LD_ADDR_VAR 0 6
7233: PUSH
7234: LD_VAR 0 1
7238: PPUSH
7239: LD_VAR 0 11
7243: PUSH
7244: LD_INT 2
7246: ARRAY
7247: PUSH
7248: LD_VAR 0 8
7252: ARRAY
7253: PPUSH
7254: LD_VAR 0 11
7258: PUSH
7259: LD_INT 2
7261: ARRAY
7262: PUSH
7263: LD_VAR 0 8
7267: PUSH
7268: LD_INT 1
7270: PLUS
7271: ARRAY
7272: PPUSH
7273: CALL_OW 297
7277: ST_TO_ADDR
// if x < p then
7278: LD_VAR 0 6
7282: PUSH
7283: LD_VAR 0 9
7287: LESS
7288: IFFALSE 7343
// begin p := x ;
7290: LD_ADDR_VAR 0 9
7294: PUSH
7295: LD_VAR 0 6
7299: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7300: LD_ADDR_VAR 0 14
7304: PUSH
7305: LD_VAR 0 11
7309: PUSH
7310: LD_INT 2
7312: ARRAY
7313: PUSH
7314: LD_VAR 0 8
7318: ARRAY
7319: PUSH
7320: LD_VAR 0 11
7324: PUSH
7325: LD_INT 2
7327: ARRAY
7328: PUSH
7329: LD_VAR 0 8
7333: PUSH
7334: LD_INT 1
7336: PLUS
7337: ARRAY
7338: PUSH
7339: EMPTY
7340: LIST
7341: LIST
7342: ST_TO_ADDR
// end ; c = c + 2 ;
7343: LD_ADDR_VAR 0 8
7347: PUSH
7348: LD_VAR 0 8
7352: PUSH
7353: LD_INT 2
7355: PLUS
7356: ST_TO_ADDR
// end ;
7357: GO 7226
7359: POP
7360: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7361: LD_VAR 0 1
7365: PPUSH
7366: LD_VAR 0 14
7370: PUSH
7371: LD_INT 1
7373: ARRAY
7374: PPUSH
7375: LD_VAR 0 14
7379: PUSH
7380: LD_INT 2
7382: ARRAY
7383: PPUSH
7384: CALL_OW 111
// wait ( 0 0$1 ) ;
7388: LD_INT 35
7390: PPUSH
7391: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7395: LD_VAR 0 1
7399: PPUSH
7400: LD_VAR 0 14
7404: PUSH
7405: LD_INT 1
7407: ARRAY
7408: PPUSH
7409: LD_VAR 0 14
7413: PUSH
7414: LD_INT 2
7416: ARRAY
7417: PPUSH
7418: CALL_OW 307
7422: IFFALSE 7361
// status = 1 ;
7424: LD_ADDR_VAR 0 12
7428: PUSH
7429: LD_INT 1
7431: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7432: LD_VAR 0 1
7436: PPUSH
7437: CALL_OW 301
7441: IFFALSE 6232
// end ;
7443: LD_VAR 0 4
7447: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7448: LD_INT 0
7450: PPUSH
7451: PPUSH
7452: PPUSH
7453: PPUSH
7454: PPUSH
7455: PPUSH
7456: PPUSH
7457: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7458: LD_VAR 0 1
7462: NOT
7463: PUSH
7464: LD_VAR 0 3
7468: NOT
7469: OR
7470: PUSH
7471: LD_VAR 0 4
7475: PUSH
7476: LD_INT 1
7478: PUSH
7479: LD_INT 2
7481: PUSH
7482: LD_INT 0
7484: PUSH
7485: EMPTY
7486: LIST
7487: LIST
7488: LIST
7489: IN
7490: NOT
7491: OR
7492: PUSH
7493: LD_VAR 0 6
7497: NOT
7498: OR
7499: PUSH
7500: LD_VAR 0 7
7504: NOT
7505: OR
7506: IFFALSE 7510
// exit ;
7508: GO 7901
// sex_id :=  ;
7510: LD_ADDR_VAR 0 14
7514: PUSH
7515: LD_STRING 
7517: ST_TO_ADDR
// case class of 1 :
7518: LD_VAR 0 5
7522: PUSH
7523: LD_INT 1
7525: DOUBLE
7526: EQUAL
7527: IFTRUE 7531
7529: GO 7542
7531: POP
// class_id := Sol ; 2 :
7532: LD_ADDR_VAR 0 15
7536: PUSH
7537: LD_STRING Sol
7539: ST_TO_ADDR
7540: GO 7600
7542: LD_INT 2
7544: DOUBLE
7545: EQUAL
7546: IFTRUE 7550
7548: GO 7561
7550: POP
// class_id := Eng ; 3 :
7551: LD_ADDR_VAR 0 15
7555: PUSH
7556: LD_STRING Eng
7558: ST_TO_ADDR
7559: GO 7600
7561: LD_INT 3
7563: DOUBLE
7564: EQUAL
7565: IFTRUE 7569
7567: GO 7580
7569: POP
// class_id := Mech ; 4 :
7570: LD_ADDR_VAR 0 15
7574: PUSH
7575: LD_STRING Mech
7577: ST_TO_ADDR
7578: GO 7600
7580: LD_INT 4
7582: DOUBLE
7583: EQUAL
7584: IFTRUE 7588
7586: GO 7599
7588: POP
// class_id := Sci ; end ;
7589: LD_ADDR_VAR 0 15
7593: PUSH
7594: LD_STRING Sci
7596: ST_TO_ADDR
7597: GO 7600
7599: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7600: LD_ADDR_VAR 0 11
7604: PUSH
7605: LD_VAR 0 1
7609: PPUSH
7610: LD_INT 25
7612: PUSH
7613: LD_VAR 0 5
7617: PUSH
7618: EMPTY
7619: LIST
7620: LIST
7621: PPUSH
7622: CALL_OW 72
7626: ST_TO_ADDR
// if tmp then
7627: LD_VAR 0 11
7631: IFFALSE 7643
// units := tmp ;
7633: LD_ADDR_VAR 0 1
7637: PUSH
7638: LD_VAR 0 11
7642: ST_TO_ADDR
// if sex then
7643: LD_VAR 0 4
7647: IFFALSE 7703
// begin if sex = sex_female then
7649: LD_VAR 0 4
7653: PUSH
7654: LD_INT 2
7656: EQUAL
7657: IFFALSE 7667
// sex_id := F ;
7659: LD_ADDR_VAR 0 14
7663: PUSH
7664: LD_STRING F
7666: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7667: LD_ADDR_VAR 0 1
7671: PUSH
7672: LD_VAR 0 1
7676: PPUSH
7677: LD_INT 26
7679: PUSH
7680: LD_VAR 0 4
7684: PUSH
7685: EMPTY
7686: LIST
7687: LIST
7688: PPUSH
7689: CALL_OW 72
7693: ST_TO_ADDR
// if not units then
7694: LD_VAR 0 1
7698: NOT
7699: IFFALSE 7703
// exit ;
7701: GO 7901
// end ; unit_id := id ;
7703: LD_ADDR_VAR 0 12
7707: PUSH
7708: LD_VAR 0 6
7712: ST_TO_ADDR
// if unit_id > units then
7713: LD_VAR 0 12
7717: PUSH
7718: LD_VAR 0 1
7722: GREATER
7723: IFFALSE 7733
// unit_id := 1 ;
7725: LD_ADDR_VAR 0 12
7729: PUSH
7730: LD_INT 1
7732: ST_TO_ADDR
// if not units [ unit_id ] then
7733: LD_VAR 0 1
7737: PUSH
7738: LD_VAR 0 12
7742: ARRAY
7743: NOT
7744: IFFALSE 7748
// exit ;
7746: GO 7901
// unit := units [ unit_id ] ;
7748: LD_ADDR_VAR 0 10
7752: PUSH
7753: LD_VAR 0 1
7757: PUSH
7758: LD_VAR 0 12
7762: ARRAY
7763: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
7764: LD_ADDR_VAR 0 13
7768: PUSH
7769: LD_STRING D
7771: PUSH
7772: LD_VAR 0 3
7776: STR
7777: PUSH
7778: LD_STRING -
7780: STR
7781: PUSH
7782: LD_VAR 0 14
7786: STR
7787: PUSH
7788: LD_VAR 0 15
7792: STR
7793: PUSH
7794: LD_VAR 0 6
7798: STR
7799: PUSH
7800: LD_STRING -
7802: STR
7803: PUSH
7804: LD_VAR 0 7
7808: STR
7809: ST_TO_ADDR
// case type of 0 :
7810: LD_VAR 0 2
7814: PUSH
7815: LD_INT 0
7817: DOUBLE
7818: EQUAL
7819: IFTRUE 7823
7821: GO 7840
7823: POP
// Say ( unit , dialog_id ) ; 1 :
7824: LD_VAR 0 10
7828: PPUSH
7829: LD_VAR 0 13
7833: PPUSH
7834: CALL_OW 88
7838: GO 7891
7840: LD_INT 1
7842: DOUBLE
7843: EQUAL
7844: IFTRUE 7848
7846: GO 7865
7848: POP
// SayRadio ( unit , dialog_id ) ; 2 :
7849: LD_VAR 0 10
7853: PPUSH
7854: LD_VAR 0 13
7858: PPUSH
7859: CALL_OW 94
7863: GO 7891
7865: LD_INT 2
7867: DOUBLE
7868: EQUAL
7869: IFTRUE 7873
7871: GO 7890
7873: POP
// ForceSay ( unit , dialog_id ) ; end ;
7874: LD_VAR 0 10
7878: PPUSH
7879: LD_VAR 0 13
7883: PPUSH
7884: CALL_OW 91
7888: GO 7891
7890: POP
// result := unit ;
7891: LD_ADDR_VAR 0 8
7895: PUSH
7896: LD_VAR 0 10
7900: ST_TO_ADDR
// end ;
7901: LD_VAR 0 8
7905: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
7906: LD_INT 0
7908: PPUSH
7909: PPUSH
7910: PPUSH
7911: PPUSH
7912: PPUSH
7913: PPUSH
7914: PPUSH
// result := array ;
7915: LD_ADDR_VAR 0 5
7919: PUSH
7920: LD_VAR 0 1
7924: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
7925: LD_VAR 0 1
7929: NOT
7930: PUSH
7931: LD_VAR 0 2
7935: NOT
7936: OR
7937: PUSH
7938: LD_VAR 0 3
7942: NOT
7943: OR
7944: PUSH
7945: LD_VAR 0 2
7949: PUSH
7950: LD_VAR 0 1
7954: GREATER
7955: OR
7956: PUSH
7957: LD_VAR 0 3
7961: PUSH
7962: LD_VAR 0 1
7966: GREATER
7967: OR
7968: IFFALSE 7972
// exit ;
7970: GO 8268
// if direction then
7972: LD_VAR 0 4
7976: IFFALSE 8040
// begin d := 1 ;
7978: LD_ADDR_VAR 0 9
7982: PUSH
7983: LD_INT 1
7985: ST_TO_ADDR
// if i_from > i_to then
7986: LD_VAR 0 2
7990: PUSH
7991: LD_VAR 0 3
7995: GREATER
7996: IFFALSE 8022
// length := ( array - i_from ) + i_to else
7998: LD_ADDR_VAR 0 11
8002: PUSH
8003: LD_VAR 0 1
8007: PUSH
8008: LD_VAR 0 2
8012: MINUS
8013: PUSH
8014: LD_VAR 0 3
8018: PLUS
8019: ST_TO_ADDR
8020: GO 8038
// length := i_to - i_from ;
8022: LD_ADDR_VAR 0 11
8026: PUSH
8027: LD_VAR 0 3
8031: PUSH
8032: LD_VAR 0 2
8036: MINUS
8037: ST_TO_ADDR
// end else
8038: GO 8101
// begin d := - 1 ;
8040: LD_ADDR_VAR 0 9
8044: PUSH
8045: LD_INT 1
8047: NEG
8048: ST_TO_ADDR
// if i_from > i_to then
8049: LD_VAR 0 2
8053: PUSH
8054: LD_VAR 0 3
8058: GREATER
8059: IFFALSE 8079
// length := i_from - i_to else
8061: LD_ADDR_VAR 0 11
8065: PUSH
8066: LD_VAR 0 2
8070: PUSH
8071: LD_VAR 0 3
8075: MINUS
8076: ST_TO_ADDR
8077: GO 8101
// length := ( array - i_to ) + i_from ;
8079: LD_ADDR_VAR 0 11
8083: PUSH
8084: LD_VAR 0 1
8088: PUSH
8089: LD_VAR 0 3
8093: MINUS
8094: PUSH
8095: LD_VAR 0 2
8099: PLUS
8100: ST_TO_ADDR
// end ; if not length then
8101: LD_VAR 0 11
8105: NOT
8106: IFFALSE 8110
// exit ;
8108: GO 8268
// tmp := array ;
8110: LD_ADDR_VAR 0 10
8114: PUSH
8115: LD_VAR 0 1
8119: ST_TO_ADDR
// for i = 1 to length do
8120: LD_ADDR_VAR 0 6
8124: PUSH
8125: DOUBLE
8126: LD_INT 1
8128: DEC
8129: ST_TO_ADDR
8130: LD_VAR 0 11
8134: PUSH
8135: FOR_TO
8136: IFFALSE 8256
// begin for j = 1 to array do
8138: LD_ADDR_VAR 0 7
8142: PUSH
8143: DOUBLE
8144: LD_INT 1
8146: DEC
8147: ST_TO_ADDR
8148: LD_VAR 0 1
8152: PUSH
8153: FOR_TO
8154: IFFALSE 8242
// begin k := j + d ;
8156: LD_ADDR_VAR 0 8
8160: PUSH
8161: LD_VAR 0 7
8165: PUSH
8166: LD_VAR 0 9
8170: PLUS
8171: ST_TO_ADDR
// if k > array then
8172: LD_VAR 0 8
8176: PUSH
8177: LD_VAR 0 1
8181: GREATER
8182: IFFALSE 8192
// k := 1 ;
8184: LD_ADDR_VAR 0 8
8188: PUSH
8189: LD_INT 1
8191: ST_TO_ADDR
// if not k then
8192: LD_VAR 0 8
8196: NOT
8197: IFFALSE 8209
// k := array ;
8199: LD_ADDR_VAR 0 8
8203: PUSH
8204: LD_VAR 0 1
8208: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8209: LD_ADDR_VAR 0 10
8213: PUSH
8214: LD_VAR 0 10
8218: PPUSH
8219: LD_VAR 0 8
8223: PPUSH
8224: LD_VAR 0 1
8228: PUSH
8229: LD_VAR 0 7
8233: ARRAY
8234: PPUSH
8235: CALL_OW 1
8239: ST_TO_ADDR
// end ;
8240: GO 8153
8242: POP
8243: POP
// array := tmp ;
8244: LD_ADDR_VAR 0 1
8248: PUSH
8249: LD_VAR 0 10
8253: ST_TO_ADDR
// end ;
8254: GO 8135
8256: POP
8257: POP
// result := array ;
8258: LD_ADDR_VAR 0 5
8262: PUSH
8263: LD_VAR 0 1
8267: ST_TO_ADDR
// end ;
8268: LD_VAR 0 5
8272: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8273: LD_INT 0
8275: PPUSH
8276: PPUSH
8277: PPUSH
8278: PPUSH
8279: PPUSH
8280: PPUSH
8281: PPUSH
8282: PPUSH
8283: PPUSH
8284: PPUSH
8285: PPUSH
8286: PPUSH
8287: PPUSH
8288: PPUSH
8289: PPUSH
8290: PPUSH
8291: PPUSH
8292: PPUSH
8293: PPUSH
8294: PPUSH
8295: PPUSH
8296: PPUSH
8297: PPUSH
8298: PPUSH
8299: PPUSH
8300: PPUSH
8301: PPUSH
8302: PPUSH
8303: PPUSH
8304: PPUSH
8305: PPUSH
8306: PPUSH
8307: PPUSH
8308: PPUSH
8309: PPUSH
8310: PPUSH
8311: PPUSH
8312: PPUSH
8313: PPUSH
8314: PPUSH
8315: PPUSH
8316: PPUSH
8317: PPUSH
8318: PPUSH
8319: PPUSH
8320: PPUSH
8321: PPUSH
8322: PPUSH
8323: PPUSH
8324: PPUSH
8325: PPUSH
8326: PPUSH
8327: PPUSH
8328: PPUSH
8329: PPUSH
8330: PPUSH
8331: PPUSH
8332: PPUSH
// result = [ ] ;
8333: LD_ADDR_VAR 0 7
8337: PUSH
8338: EMPTY
8339: ST_TO_ADDR
// temp_list = [ ] ;
8340: LD_ADDR_VAR 0 9
8344: PUSH
8345: EMPTY
8346: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8347: LD_VAR 0 4
8351: PUSH
8352: LD_INT 0
8354: PUSH
8355: LD_INT 1
8357: PUSH
8358: LD_INT 2
8360: PUSH
8361: LD_INT 3
8363: PUSH
8364: LD_INT 4
8366: PUSH
8367: LD_INT 5
8369: PUSH
8370: EMPTY
8371: LIST
8372: LIST
8373: LIST
8374: LIST
8375: LIST
8376: LIST
8377: IN
8378: NOT
8379: PUSH
8380: LD_VAR 0 1
8384: PUSH
8385: LD_INT 0
8387: PUSH
8388: LD_INT 1
8390: PUSH
8391: EMPTY
8392: LIST
8393: LIST
8394: IN
8395: PUSH
8396: LD_VAR 0 5
8400: PUSH
8401: LD_INT 1
8403: PUSH
8404: LD_INT 2
8406: PUSH
8407: LD_INT 3
8409: PUSH
8410: EMPTY
8411: LIST
8412: LIST
8413: LIST
8414: IN
8415: NOT
8416: AND
8417: OR
8418: IFFALSE 8422
// exit ;
8420: GO 26807
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8422: LD_VAR 0 1
8426: PUSH
8427: LD_INT 6
8429: PUSH
8430: LD_INT 7
8432: PUSH
8433: LD_INT 8
8435: PUSH
8436: LD_INT 13
8438: PUSH
8439: LD_INT 12
8441: PUSH
8442: LD_INT 15
8444: PUSH
8445: LD_INT 11
8447: PUSH
8448: LD_INT 14
8450: PUSH
8451: LD_INT 10
8453: PUSH
8454: EMPTY
8455: LIST
8456: LIST
8457: LIST
8458: LIST
8459: LIST
8460: LIST
8461: LIST
8462: LIST
8463: LIST
8464: IN
8465: IFFALSE 8475
// btype = b_lab ;
8467: LD_ADDR_VAR 0 1
8471: PUSH
8472: LD_INT 6
8474: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8475: LD_VAR 0 6
8479: PUSH
8480: LD_INT 0
8482: PUSH
8483: LD_INT 1
8485: PUSH
8486: LD_INT 2
8488: PUSH
8489: EMPTY
8490: LIST
8491: LIST
8492: LIST
8493: IN
8494: NOT
8495: PUSH
8496: LD_VAR 0 1
8500: PUSH
8501: LD_INT 0
8503: PUSH
8504: LD_INT 1
8506: PUSH
8507: LD_INT 2
8509: PUSH
8510: LD_INT 3
8512: PUSH
8513: LD_INT 6
8515: PUSH
8516: LD_INT 36
8518: PUSH
8519: LD_INT 4
8521: PUSH
8522: LD_INT 5
8524: PUSH
8525: LD_INT 31
8527: PUSH
8528: LD_INT 32
8530: PUSH
8531: LD_INT 33
8533: PUSH
8534: EMPTY
8535: LIST
8536: LIST
8537: LIST
8538: LIST
8539: LIST
8540: LIST
8541: LIST
8542: LIST
8543: LIST
8544: LIST
8545: LIST
8546: IN
8547: NOT
8548: PUSH
8549: LD_VAR 0 6
8553: PUSH
8554: LD_INT 1
8556: EQUAL
8557: AND
8558: OR
8559: PUSH
8560: LD_VAR 0 1
8564: PUSH
8565: LD_INT 2
8567: PUSH
8568: LD_INT 3
8570: PUSH
8571: EMPTY
8572: LIST
8573: LIST
8574: IN
8575: NOT
8576: PUSH
8577: LD_VAR 0 6
8581: PUSH
8582: LD_INT 2
8584: EQUAL
8585: AND
8586: OR
8587: IFFALSE 8597
// mode = 0 ;
8589: LD_ADDR_VAR 0 6
8593: PUSH
8594: LD_INT 0
8596: ST_TO_ADDR
// case mode of 0 :
8597: LD_VAR 0 6
8601: PUSH
8602: LD_INT 0
8604: DOUBLE
8605: EQUAL
8606: IFTRUE 8610
8608: GO 20063
8610: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8611: LD_ADDR_VAR 0 11
8615: PUSH
8616: LD_INT 0
8618: PUSH
8619: LD_INT 0
8621: PUSH
8622: EMPTY
8623: LIST
8624: LIST
8625: PUSH
8626: LD_INT 0
8628: PUSH
8629: LD_INT 1
8631: NEG
8632: PUSH
8633: EMPTY
8634: LIST
8635: LIST
8636: PUSH
8637: LD_INT 1
8639: PUSH
8640: LD_INT 0
8642: PUSH
8643: EMPTY
8644: LIST
8645: LIST
8646: PUSH
8647: LD_INT 1
8649: PUSH
8650: LD_INT 1
8652: PUSH
8653: EMPTY
8654: LIST
8655: LIST
8656: PUSH
8657: LD_INT 0
8659: PUSH
8660: LD_INT 1
8662: PUSH
8663: EMPTY
8664: LIST
8665: LIST
8666: PUSH
8667: LD_INT 1
8669: NEG
8670: PUSH
8671: LD_INT 0
8673: PUSH
8674: EMPTY
8675: LIST
8676: LIST
8677: PUSH
8678: LD_INT 1
8680: NEG
8681: PUSH
8682: LD_INT 1
8684: NEG
8685: PUSH
8686: EMPTY
8687: LIST
8688: LIST
8689: PUSH
8690: LD_INT 1
8692: NEG
8693: PUSH
8694: LD_INT 2
8696: NEG
8697: PUSH
8698: EMPTY
8699: LIST
8700: LIST
8701: PUSH
8702: LD_INT 0
8704: PUSH
8705: LD_INT 2
8707: NEG
8708: PUSH
8709: EMPTY
8710: LIST
8711: LIST
8712: PUSH
8713: LD_INT 1
8715: PUSH
8716: LD_INT 1
8718: NEG
8719: PUSH
8720: EMPTY
8721: LIST
8722: LIST
8723: PUSH
8724: LD_INT 1
8726: PUSH
8727: LD_INT 2
8729: PUSH
8730: EMPTY
8731: LIST
8732: LIST
8733: PUSH
8734: LD_INT 0
8736: PUSH
8737: LD_INT 2
8739: PUSH
8740: EMPTY
8741: LIST
8742: LIST
8743: PUSH
8744: LD_INT 1
8746: NEG
8747: PUSH
8748: LD_INT 1
8750: PUSH
8751: EMPTY
8752: LIST
8753: LIST
8754: PUSH
8755: LD_INT 1
8757: PUSH
8758: LD_INT 3
8760: PUSH
8761: EMPTY
8762: LIST
8763: LIST
8764: PUSH
8765: LD_INT 0
8767: PUSH
8768: LD_INT 3
8770: PUSH
8771: EMPTY
8772: LIST
8773: LIST
8774: PUSH
8775: LD_INT 1
8777: NEG
8778: PUSH
8779: LD_INT 2
8781: PUSH
8782: EMPTY
8783: LIST
8784: LIST
8785: PUSH
8786: EMPTY
8787: LIST
8788: LIST
8789: LIST
8790: LIST
8791: LIST
8792: LIST
8793: LIST
8794: LIST
8795: LIST
8796: LIST
8797: LIST
8798: LIST
8799: LIST
8800: LIST
8801: LIST
8802: LIST
8803: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
8804: LD_ADDR_VAR 0 12
8808: PUSH
8809: LD_INT 0
8811: PUSH
8812: LD_INT 0
8814: PUSH
8815: EMPTY
8816: LIST
8817: LIST
8818: PUSH
8819: LD_INT 0
8821: PUSH
8822: LD_INT 1
8824: NEG
8825: PUSH
8826: EMPTY
8827: LIST
8828: LIST
8829: PUSH
8830: LD_INT 1
8832: PUSH
8833: LD_INT 0
8835: PUSH
8836: EMPTY
8837: LIST
8838: LIST
8839: PUSH
8840: LD_INT 1
8842: PUSH
8843: LD_INT 1
8845: PUSH
8846: EMPTY
8847: LIST
8848: LIST
8849: PUSH
8850: LD_INT 0
8852: PUSH
8853: LD_INT 1
8855: PUSH
8856: EMPTY
8857: LIST
8858: LIST
8859: PUSH
8860: LD_INT 1
8862: NEG
8863: PUSH
8864: LD_INT 0
8866: PUSH
8867: EMPTY
8868: LIST
8869: LIST
8870: PUSH
8871: LD_INT 1
8873: NEG
8874: PUSH
8875: LD_INT 1
8877: NEG
8878: PUSH
8879: EMPTY
8880: LIST
8881: LIST
8882: PUSH
8883: LD_INT 1
8885: PUSH
8886: LD_INT 1
8888: NEG
8889: PUSH
8890: EMPTY
8891: LIST
8892: LIST
8893: PUSH
8894: LD_INT 2
8896: PUSH
8897: LD_INT 0
8899: PUSH
8900: EMPTY
8901: LIST
8902: LIST
8903: PUSH
8904: LD_INT 2
8906: PUSH
8907: LD_INT 1
8909: PUSH
8910: EMPTY
8911: LIST
8912: LIST
8913: PUSH
8914: LD_INT 1
8916: NEG
8917: PUSH
8918: LD_INT 1
8920: PUSH
8921: EMPTY
8922: LIST
8923: LIST
8924: PUSH
8925: LD_INT 2
8927: NEG
8928: PUSH
8929: LD_INT 0
8931: PUSH
8932: EMPTY
8933: LIST
8934: LIST
8935: PUSH
8936: LD_INT 2
8938: NEG
8939: PUSH
8940: LD_INT 1
8942: NEG
8943: PUSH
8944: EMPTY
8945: LIST
8946: LIST
8947: PUSH
8948: LD_INT 2
8950: NEG
8951: PUSH
8952: LD_INT 1
8954: PUSH
8955: EMPTY
8956: LIST
8957: LIST
8958: PUSH
8959: LD_INT 3
8961: NEG
8962: PUSH
8963: LD_INT 0
8965: PUSH
8966: EMPTY
8967: LIST
8968: LIST
8969: PUSH
8970: LD_INT 3
8972: NEG
8973: PUSH
8974: LD_INT 1
8976: NEG
8977: PUSH
8978: EMPTY
8979: LIST
8980: LIST
8981: PUSH
8982: EMPTY
8983: LIST
8984: LIST
8985: LIST
8986: LIST
8987: LIST
8988: LIST
8989: LIST
8990: LIST
8991: LIST
8992: LIST
8993: LIST
8994: LIST
8995: LIST
8996: LIST
8997: LIST
8998: LIST
8999: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9000: LD_ADDR_VAR 0 13
9004: PUSH
9005: LD_INT 0
9007: PUSH
9008: LD_INT 0
9010: PUSH
9011: EMPTY
9012: LIST
9013: LIST
9014: PUSH
9015: LD_INT 0
9017: PUSH
9018: LD_INT 1
9020: NEG
9021: PUSH
9022: EMPTY
9023: LIST
9024: LIST
9025: PUSH
9026: LD_INT 1
9028: PUSH
9029: LD_INT 0
9031: PUSH
9032: EMPTY
9033: LIST
9034: LIST
9035: PUSH
9036: LD_INT 1
9038: PUSH
9039: LD_INT 1
9041: PUSH
9042: EMPTY
9043: LIST
9044: LIST
9045: PUSH
9046: LD_INT 0
9048: PUSH
9049: LD_INT 1
9051: PUSH
9052: EMPTY
9053: LIST
9054: LIST
9055: PUSH
9056: LD_INT 1
9058: NEG
9059: PUSH
9060: LD_INT 0
9062: PUSH
9063: EMPTY
9064: LIST
9065: LIST
9066: PUSH
9067: LD_INT 1
9069: NEG
9070: PUSH
9071: LD_INT 1
9073: NEG
9074: PUSH
9075: EMPTY
9076: LIST
9077: LIST
9078: PUSH
9079: LD_INT 1
9081: NEG
9082: PUSH
9083: LD_INT 2
9085: NEG
9086: PUSH
9087: EMPTY
9088: LIST
9089: LIST
9090: PUSH
9091: LD_INT 2
9093: PUSH
9094: LD_INT 1
9096: PUSH
9097: EMPTY
9098: LIST
9099: LIST
9100: PUSH
9101: LD_INT 2
9103: PUSH
9104: LD_INT 2
9106: PUSH
9107: EMPTY
9108: LIST
9109: LIST
9110: PUSH
9111: LD_INT 1
9113: PUSH
9114: LD_INT 2
9116: PUSH
9117: EMPTY
9118: LIST
9119: LIST
9120: PUSH
9121: LD_INT 2
9123: NEG
9124: PUSH
9125: LD_INT 1
9127: NEG
9128: PUSH
9129: EMPTY
9130: LIST
9131: LIST
9132: PUSH
9133: LD_INT 2
9135: NEG
9136: PUSH
9137: LD_INT 2
9139: NEG
9140: PUSH
9141: EMPTY
9142: LIST
9143: LIST
9144: PUSH
9145: LD_INT 2
9147: NEG
9148: PUSH
9149: LD_INT 3
9151: NEG
9152: PUSH
9153: EMPTY
9154: LIST
9155: LIST
9156: PUSH
9157: LD_INT 3
9159: NEG
9160: PUSH
9161: LD_INT 2
9163: NEG
9164: PUSH
9165: EMPTY
9166: LIST
9167: LIST
9168: PUSH
9169: LD_INT 3
9171: NEG
9172: PUSH
9173: LD_INT 3
9175: NEG
9176: PUSH
9177: EMPTY
9178: LIST
9179: LIST
9180: PUSH
9181: EMPTY
9182: LIST
9183: LIST
9184: LIST
9185: LIST
9186: LIST
9187: LIST
9188: LIST
9189: LIST
9190: LIST
9191: LIST
9192: LIST
9193: LIST
9194: LIST
9195: LIST
9196: LIST
9197: LIST
9198: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9199: LD_ADDR_VAR 0 14
9203: PUSH
9204: LD_INT 0
9206: PUSH
9207: LD_INT 0
9209: PUSH
9210: EMPTY
9211: LIST
9212: LIST
9213: PUSH
9214: LD_INT 0
9216: PUSH
9217: LD_INT 1
9219: NEG
9220: PUSH
9221: EMPTY
9222: LIST
9223: LIST
9224: PUSH
9225: LD_INT 1
9227: PUSH
9228: LD_INT 0
9230: PUSH
9231: EMPTY
9232: LIST
9233: LIST
9234: PUSH
9235: LD_INT 1
9237: PUSH
9238: LD_INT 1
9240: PUSH
9241: EMPTY
9242: LIST
9243: LIST
9244: PUSH
9245: LD_INT 0
9247: PUSH
9248: LD_INT 1
9250: PUSH
9251: EMPTY
9252: LIST
9253: LIST
9254: PUSH
9255: LD_INT 1
9257: NEG
9258: PUSH
9259: LD_INT 0
9261: PUSH
9262: EMPTY
9263: LIST
9264: LIST
9265: PUSH
9266: LD_INT 1
9268: NEG
9269: PUSH
9270: LD_INT 1
9272: NEG
9273: PUSH
9274: EMPTY
9275: LIST
9276: LIST
9277: PUSH
9278: LD_INT 1
9280: NEG
9281: PUSH
9282: LD_INT 2
9284: NEG
9285: PUSH
9286: EMPTY
9287: LIST
9288: LIST
9289: PUSH
9290: LD_INT 0
9292: PUSH
9293: LD_INT 2
9295: NEG
9296: PUSH
9297: EMPTY
9298: LIST
9299: LIST
9300: PUSH
9301: LD_INT 1
9303: PUSH
9304: LD_INT 1
9306: NEG
9307: PUSH
9308: EMPTY
9309: LIST
9310: LIST
9311: PUSH
9312: LD_INT 1
9314: PUSH
9315: LD_INT 2
9317: PUSH
9318: EMPTY
9319: LIST
9320: LIST
9321: PUSH
9322: LD_INT 0
9324: PUSH
9325: LD_INT 2
9327: PUSH
9328: EMPTY
9329: LIST
9330: LIST
9331: PUSH
9332: LD_INT 1
9334: NEG
9335: PUSH
9336: LD_INT 1
9338: PUSH
9339: EMPTY
9340: LIST
9341: LIST
9342: PUSH
9343: LD_INT 1
9345: NEG
9346: PUSH
9347: LD_INT 3
9349: NEG
9350: PUSH
9351: EMPTY
9352: LIST
9353: LIST
9354: PUSH
9355: LD_INT 0
9357: PUSH
9358: LD_INT 3
9360: NEG
9361: PUSH
9362: EMPTY
9363: LIST
9364: LIST
9365: PUSH
9366: LD_INT 1
9368: PUSH
9369: LD_INT 2
9371: NEG
9372: PUSH
9373: EMPTY
9374: LIST
9375: LIST
9376: PUSH
9377: EMPTY
9378: LIST
9379: LIST
9380: LIST
9381: LIST
9382: LIST
9383: LIST
9384: LIST
9385: LIST
9386: LIST
9387: LIST
9388: LIST
9389: LIST
9390: LIST
9391: LIST
9392: LIST
9393: LIST
9394: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9395: LD_ADDR_VAR 0 15
9399: PUSH
9400: LD_INT 0
9402: PUSH
9403: LD_INT 0
9405: PUSH
9406: EMPTY
9407: LIST
9408: LIST
9409: PUSH
9410: LD_INT 0
9412: PUSH
9413: LD_INT 1
9415: NEG
9416: PUSH
9417: EMPTY
9418: LIST
9419: LIST
9420: PUSH
9421: LD_INT 1
9423: PUSH
9424: LD_INT 0
9426: PUSH
9427: EMPTY
9428: LIST
9429: LIST
9430: PUSH
9431: LD_INT 1
9433: PUSH
9434: LD_INT 1
9436: PUSH
9437: EMPTY
9438: LIST
9439: LIST
9440: PUSH
9441: LD_INT 0
9443: PUSH
9444: LD_INT 1
9446: PUSH
9447: EMPTY
9448: LIST
9449: LIST
9450: PUSH
9451: LD_INT 1
9453: NEG
9454: PUSH
9455: LD_INT 0
9457: PUSH
9458: EMPTY
9459: LIST
9460: LIST
9461: PUSH
9462: LD_INT 1
9464: NEG
9465: PUSH
9466: LD_INT 1
9468: NEG
9469: PUSH
9470: EMPTY
9471: LIST
9472: LIST
9473: PUSH
9474: LD_INT 1
9476: PUSH
9477: LD_INT 1
9479: NEG
9480: PUSH
9481: EMPTY
9482: LIST
9483: LIST
9484: PUSH
9485: LD_INT 2
9487: PUSH
9488: LD_INT 0
9490: PUSH
9491: EMPTY
9492: LIST
9493: LIST
9494: PUSH
9495: LD_INT 2
9497: PUSH
9498: LD_INT 1
9500: PUSH
9501: EMPTY
9502: LIST
9503: LIST
9504: PUSH
9505: LD_INT 1
9507: NEG
9508: PUSH
9509: LD_INT 1
9511: PUSH
9512: EMPTY
9513: LIST
9514: LIST
9515: PUSH
9516: LD_INT 2
9518: NEG
9519: PUSH
9520: LD_INT 0
9522: PUSH
9523: EMPTY
9524: LIST
9525: LIST
9526: PUSH
9527: LD_INT 2
9529: NEG
9530: PUSH
9531: LD_INT 1
9533: NEG
9534: PUSH
9535: EMPTY
9536: LIST
9537: LIST
9538: PUSH
9539: LD_INT 2
9541: PUSH
9542: LD_INT 1
9544: NEG
9545: PUSH
9546: EMPTY
9547: LIST
9548: LIST
9549: PUSH
9550: LD_INT 3
9552: PUSH
9553: LD_INT 0
9555: PUSH
9556: EMPTY
9557: LIST
9558: LIST
9559: PUSH
9560: LD_INT 3
9562: PUSH
9563: LD_INT 1
9565: PUSH
9566: EMPTY
9567: LIST
9568: LIST
9569: PUSH
9570: EMPTY
9571: LIST
9572: LIST
9573: LIST
9574: LIST
9575: LIST
9576: LIST
9577: LIST
9578: LIST
9579: LIST
9580: LIST
9581: LIST
9582: LIST
9583: LIST
9584: LIST
9585: LIST
9586: LIST
9587: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9588: LD_ADDR_VAR 0 16
9592: PUSH
9593: LD_INT 0
9595: PUSH
9596: LD_INT 0
9598: PUSH
9599: EMPTY
9600: LIST
9601: LIST
9602: PUSH
9603: LD_INT 0
9605: PUSH
9606: LD_INT 1
9608: NEG
9609: PUSH
9610: EMPTY
9611: LIST
9612: LIST
9613: PUSH
9614: LD_INT 1
9616: PUSH
9617: LD_INT 0
9619: PUSH
9620: EMPTY
9621: LIST
9622: LIST
9623: PUSH
9624: LD_INT 1
9626: PUSH
9627: LD_INT 1
9629: PUSH
9630: EMPTY
9631: LIST
9632: LIST
9633: PUSH
9634: LD_INT 0
9636: PUSH
9637: LD_INT 1
9639: PUSH
9640: EMPTY
9641: LIST
9642: LIST
9643: PUSH
9644: LD_INT 1
9646: NEG
9647: PUSH
9648: LD_INT 0
9650: PUSH
9651: EMPTY
9652: LIST
9653: LIST
9654: PUSH
9655: LD_INT 1
9657: NEG
9658: PUSH
9659: LD_INT 1
9661: NEG
9662: PUSH
9663: EMPTY
9664: LIST
9665: LIST
9666: PUSH
9667: LD_INT 1
9669: NEG
9670: PUSH
9671: LD_INT 2
9673: NEG
9674: PUSH
9675: EMPTY
9676: LIST
9677: LIST
9678: PUSH
9679: LD_INT 2
9681: PUSH
9682: LD_INT 1
9684: PUSH
9685: EMPTY
9686: LIST
9687: LIST
9688: PUSH
9689: LD_INT 2
9691: PUSH
9692: LD_INT 2
9694: PUSH
9695: EMPTY
9696: LIST
9697: LIST
9698: PUSH
9699: LD_INT 1
9701: PUSH
9702: LD_INT 2
9704: PUSH
9705: EMPTY
9706: LIST
9707: LIST
9708: PUSH
9709: LD_INT 2
9711: NEG
9712: PUSH
9713: LD_INT 1
9715: NEG
9716: PUSH
9717: EMPTY
9718: LIST
9719: LIST
9720: PUSH
9721: LD_INT 2
9723: NEG
9724: PUSH
9725: LD_INT 2
9727: NEG
9728: PUSH
9729: EMPTY
9730: LIST
9731: LIST
9732: PUSH
9733: LD_INT 3
9735: PUSH
9736: LD_INT 2
9738: PUSH
9739: EMPTY
9740: LIST
9741: LIST
9742: PUSH
9743: LD_INT 3
9745: PUSH
9746: LD_INT 3
9748: PUSH
9749: EMPTY
9750: LIST
9751: LIST
9752: PUSH
9753: LD_INT 2
9755: PUSH
9756: LD_INT 3
9758: PUSH
9759: EMPTY
9760: LIST
9761: LIST
9762: PUSH
9763: EMPTY
9764: LIST
9765: LIST
9766: LIST
9767: LIST
9768: LIST
9769: LIST
9770: LIST
9771: LIST
9772: LIST
9773: LIST
9774: LIST
9775: LIST
9776: LIST
9777: LIST
9778: LIST
9779: LIST
9780: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
9781: LD_ADDR_VAR 0 17
9785: PUSH
9786: LD_INT 0
9788: PUSH
9789: LD_INT 0
9791: PUSH
9792: EMPTY
9793: LIST
9794: LIST
9795: PUSH
9796: LD_INT 0
9798: PUSH
9799: LD_INT 1
9801: NEG
9802: PUSH
9803: EMPTY
9804: LIST
9805: LIST
9806: PUSH
9807: LD_INT 1
9809: PUSH
9810: LD_INT 0
9812: PUSH
9813: EMPTY
9814: LIST
9815: LIST
9816: PUSH
9817: LD_INT 1
9819: PUSH
9820: LD_INT 1
9822: PUSH
9823: EMPTY
9824: LIST
9825: LIST
9826: PUSH
9827: LD_INT 0
9829: PUSH
9830: LD_INT 1
9832: PUSH
9833: EMPTY
9834: LIST
9835: LIST
9836: PUSH
9837: LD_INT 1
9839: NEG
9840: PUSH
9841: LD_INT 0
9843: PUSH
9844: EMPTY
9845: LIST
9846: LIST
9847: PUSH
9848: LD_INT 1
9850: NEG
9851: PUSH
9852: LD_INT 1
9854: NEG
9855: PUSH
9856: EMPTY
9857: LIST
9858: LIST
9859: PUSH
9860: LD_INT 1
9862: NEG
9863: PUSH
9864: LD_INT 2
9866: NEG
9867: PUSH
9868: EMPTY
9869: LIST
9870: LIST
9871: PUSH
9872: LD_INT 0
9874: PUSH
9875: LD_INT 2
9877: NEG
9878: PUSH
9879: EMPTY
9880: LIST
9881: LIST
9882: PUSH
9883: LD_INT 1
9885: PUSH
9886: LD_INT 1
9888: NEG
9889: PUSH
9890: EMPTY
9891: LIST
9892: LIST
9893: PUSH
9894: LD_INT 2
9896: PUSH
9897: LD_INT 0
9899: PUSH
9900: EMPTY
9901: LIST
9902: LIST
9903: PUSH
9904: LD_INT 2
9906: PUSH
9907: LD_INT 1
9909: PUSH
9910: EMPTY
9911: LIST
9912: LIST
9913: PUSH
9914: LD_INT 2
9916: PUSH
9917: LD_INT 2
9919: PUSH
9920: EMPTY
9921: LIST
9922: LIST
9923: PUSH
9924: LD_INT 1
9926: PUSH
9927: LD_INT 2
9929: PUSH
9930: EMPTY
9931: LIST
9932: LIST
9933: PUSH
9934: LD_INT 0
9936: PUSH
9937: LD_INT 2
9939: PUSH
9940: EMPTY
9941: LIST
9942: LIST
9943: PUSH
9944: LD_INT 1
9946: NEG
9947: PUSH
9948: LD_INT 1
9950: PUSH
9951: EMPTY
9952: LIST
9953: LIST
9954: PUSH
9955: LD_INT 2
9957: NEG
9958: PUSH
9959: LD_INT 0
9961: PUSH
9962: EMPTY
9963: LIST
9964: LIST
9965: PUSH
9966: LD_INT 2
9968: NEG
9969: PUSH
9970: LD_INT 1
9972: NEG
9973: PUSH
9974: EMPTY
9975: LIST
9976: LIST
9977: PUSH
9978: LD_INT 2
9980: NEG
9981: PUSH
9982: LD_INT 2
9984: NEG
9985: PUSH
9986: EMPTY
9987: LIST
9988: LIST
9989: PUSH
9990: EMPTY
9991: LIST
9992: LIST
9993: LIST
9994: LIST
9995: LIST
9996: LIST
9997: LIST
9998: LIST
9999: LIST
10000: LIST
10001: LIST
10002: LIST
10003: LIST
10004: LIST
10005: LIST
10006: LIST
10007: LIST
10008: LIST
10009: LIST
10010: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10011: LD_ADDR_VAR 0 18
10015: PUSH
10016: LD_INT 0
10018: PUSH
10019: LD_INT 0
10021: PUSH
10022: EMPTY
10023: LIST
10024: LIST
10025: PUSH
10026: LD_INT 0
10028: PUSH
10029: LD_INT 1
10031: NEG
10032: PUSH
10033: EMPTY
10034: LIST
10035: LIST
10036: PUSH
10037: LD_INT 1
10039: PUSH
10040: LD_INT 0
10042: PUSH
10043: EMPTY
10044: LIST
10045: LIST
10046: PUSH
10047: LD_INT 1
10049: PUSH
10050: LD_INT 1
10052: PUSH
10053: EMPTY
10054: LIST
10055: LIST
10056: PUSH
10057: LD_INT 0
10059: PUSH
10060: LD_INT 1
10062: PUSH
10063: EMPTY
10064: LIST
10065: LIST
10066: PUSH
10067: LD_INT 1
10069: NEG
10070: PUSH
10071: LD_INT 0
10073: PUSH
10074: EMPTY
10075: LIST
10076: LIST
10077: PUSH
10078: LD_INT 1
10080: NEG
10081: PUSH
10082: LD_INT 1
10084: NEG
10085: PUSH
10086: EMPTY
10087: LIST
10088: LIST
10089: PUSH
10090: LD_INT 1
10092: NEG
10093: PUSH
10094: LD_INT 2
10096: NEG
10097: PUSH
10098: EMPTY
10099: LIST
10100: LIST
10101: PUSH
10102: LD_INT 0
10104: PUSH
10105: LD_INT 2
10107: NEG
10108: PUSH
10109: EMPTY
10110: LIST
10111: LIST
10112: PUSH
10113: LD_INT 1
10115: PUSH
10116: LD_INT 1
10118: NEG
10119: PUSH
10120: EMPTY
10121: LIST
10122: LIST
10123: PUSH
10124: LD_INT 2
10126: PUSH
10127: LD_INT 0
10129: PUSH
10130: EMPTY
10131: LIST
10132: LIST
10133: PUSH
10134: LD_INT 2
10136: PUSH
10137: LD_INT 1
10139: PUSH
10140: EMPTY
10141: LIST
10142: LIST
10143: PUSH
10144: LD_INT 2
10146: PUSH
10147: LD_INT 2
10149: PUSH
10150: EMPTY
10151: LIST
10152: LIST
10153: PUSH
10154: LD_INT 1
10156: PUSH
10157: LD_INT 2
10159: PUSH
10160: EMPTY
10161: LIST
10162: LIST
10163: PUSH
10164: LD_INT 0
10166: PUSH
10167: LD_INT 2
10169: PUSH
10170: EMPTY
10171: LIST
10172: LIST
10173: PUSH
10174: LD_INT 1
10176: NEG
10177: PUSH
10178: LD_INT 1
10180: PUSH
10181: EMPTY
10182: LIST
10183: LIST
10184: PUSH
10185: LD_INT 2
10187: NEG
10188: PUSH
10189: LD_INT 0
10191: PUSH
10192: EMPTY
10193: LIST
10194: LIST
10195: PUSH
10196: LD_INT 2
10198: NEG
10199: PUSH
10200: LD_INT 1
10202: NEG
10203: PUSH
10204: EMPTY
10205: LIST
10206: LIST
10207: PUSH
10208: LD_INT 2
10210: NEG
10211: PUSH
10212: LD_INT 2
10214: NEG
10215: PUSH
10216: EMPTY
10217: LIST
10218: LIST
10219: PUSH
10220: EMPTY
10221: LIST
10222: LIST
10223: LIST
10224: LIST
10225: LIST
10226: LIST
10227: LIST
10228: LIST
10229: LIST
10230: LIST
10231: LIST
10232: LIST
10233: LIST
10234: LIST
10235: LIST
10236: LIST
10237: LIST
10238: LIST
10239: LIST
10240: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10241: LD_ADDR_VAR 0 19
10245: PUSH
10246: LD_INT 0
10248: PUSH
10249: LD_INT 0
10251: PUSH
10252: EMPTY
10253: LIST
10254: LIST
10255: PUSH
10256: LD_INT 0
10258: PUSH
10259: LD_INT 1
10261: NEG
10262: PUSH
10263: EMPTY
10264: LIST
10265: LIST
10266: PUSH
10267: LD_INT 1
10269: PUSH
10270: LD_INT 0
10272: PUSH
10273: EMPTY
10274: LIST
10275: LIST
10276: PUSH
10277: LD_INT 1
10279: PUSH
10280: LD_INT 1
10282: PUSH
10283: EMPTY
10284: LIST
10285: LIST
10286: PUSH
10287: LD_INT 0
10289: PUSH
10290: LD_INT 1
10292: PUSH
10293: EMPTY
10294: LIST
10295: LIST
10296: PUSH
10297: LD_INT 1
10299: NEG
10300: PUSH
10301: LD_INT 0
10303: PUSH
10304: EMPTY
10305: LIST
10306: LIST
10307: PUSH
10308: LD_INT 1
10310: NEG
10311: PUSH
10312: LD_INT 1
10314: NEG
10315: PUSH
10316: EMPTY
10317: LIST
10318: LIST
10319: PUSH
10320: LD_INT 1
10322: NEG
10323: PUSH
10324: LD_INT 2
10326: NEG
10327: PUSH
10328: EMPTY
10329: LIST
10330: LIST
10331: PUSH
10332: LD_INT 0
10334: PUSH
10335: LD_INT 2
10337: NEG
10338: PUSH
10339: EMPTY
10340: LIST
10341: LIST
10342: PUSH
10343: LD_INT 1
10345: PUSH
10346: LD_INT 1
10348: NEG
10349: PUSH
10350: EMPTY
10351: LIST
10352: LIST
10353: PUSH
10354: LD_INT 2
10356: PUSH
10357: LD_INT 0
10359: PUSH
10360: EMPTY
10361: LIST
10362: LIST
10363: PUSH
10364: LD_INT 2
10366: PUSH
10367: LD_INT 1
10369: PUSH
10370: EMPTY
10371: LIST
10372: LIST
10373: PUSH
10374: LD_INT 2
10376: PUSH
10377: LD_INT 2
10379: PUSH
10380: EMPTY
10381: LIST
10382: LIST
10383: PUSH
10384: LD_INT 1
10386: PUSH
10387: LD_INT 2
10389: PUSH
10390: EMPTY
10391: LIST
10392: LIST
10393: PUSH
10394: LD_INT 0
10396: PUSH
10397: LD_INT 2
10399: PUSH
10400: EMPTY
10401: LIST
10402: LIST
10403: PUSH
10404: LD_INT 1
10406: NEG
10407: PUSH
10408: LD_INT 1
10410: PUSH
10411: EMPTY
10412: LIST
10413: LIST
10414: PUSH
10415: LD_INT 2
10417: NEG
10418: PUSH
10419: LD_INT 0
10421: PUSH
10422: EMPTY
10423: LIST
10424: LIST
10425: PUSH
10426: LD_INT 2
10428: NEG
10429: PUSH
10430: LD_INT 1
10432: NEG
10433: PUSH
10434: EMPTY
10435: LIST
10436: LIST
10437: PUSH
10438: LD_INT 2
10440: NEG
10441: PUSH
10442: LD_INT 2
10444: NEG
10445: PUSH
10446: EMPTY
10447: LIST
10448: LIST
10449: PUSH
10450: EMPTY
10451: LIST
10452: LIST
10453: LIST
10454: LIST
10455: LIST
10456: LIST
10457: LIST
10458: LIST
10459: LIST
10460: LIST
10461: LIST
10462: LIST
10463: LIST
10464: LIST
10465: LIST
10466: LIST
10467: LIST
10468: LIST
10469: LIST
10470: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10471: LD_ADDR_VAR 0 20
10475: PUSH
10476: LD_INT 0
10478: PUSH
10479: LD_INT 0
10481: PUSH
10482: EMPTY
10483: LIST
10484: LIST
10485: PUSH
10486: LD_INT 0
10488: PUSH
10489: LD_INT 1
10491: NEG
10492: PUSH
10493: EMPTY
10494: LIST
10495: LIST
10496: PUSH
10497: LD_INT 1
10499: PUSH
10500: LD_INT 0
10502: PUSH
10503: EMPTY
10504: LIST
10505: LIST
10506: PUSH
10507: LD_INT 1
10509: PUSH
10510: LD_INT 1
10512: PUSH
10513: EMPTY
10514: LIST
10515: LIST
10516: PUSH
10517: LD_INT 0
10519: PUSH
10520: LD_INT 1
10522: PUSH
10523: EMPTY
10524: LIST
10525: LIST
10526: PUSH
10527: LD_INT 1
10529: NEG
10530: PUSH
10531: LD_INT 0
10533: PUSH
10534: EMPTY
10535: LIST
10536: LIST
10537: PUSH
10538: LD_INT 1
10540: NEG
10541: PUSH
10542: LD_INT 1
10544: NEG
10545: PUSH
10546: EMPTY
10547: LIST
10548: LIST
10549: PUSH
10550: LD_INT 1
10552: NEG
10553: PUSH
10554: LD_INT 2
10556: NEG
10557: PUSH
10558: EMPTY
10559: LIST
10560: LIST
10561: PUSH
10562: LD_INT 0
10564: PUSH
10565: LD_INT 2
10567: NEG
10568: PUSH
10569: EMPTY
10570: LIST
10571: LIST
10572: PUSH
10573: LD_INT 1
10575: PUSH
10576: LD_INT 1
10578: NEG
10579: PUSH
10580: EMPTY
10581: LIST
10582: LIST
10583: PUSH
10584: LD_INT 2
10586: PUSH
10587: LD_INT 0
10589: PUSH
10590: EMPTY
10591: LIST
10592: LIST
10593: PUSH
10594: LD_INT 2
10596: PUSH
10597: LD_INT 1
10599: PUSH
10600: EMPTY
10601: LIST
10602: LIST
10603: PUSH
10604: LD_INT 2
10606: PUSH
10607: LD_INT 2
10609: PUSH
10610: EMPTY
10611: LIST
10612: LIST
10613: PUSH
10614: LD_INT 1
10616: PUSH
10617: LD_INT 2
10619: PUSH
10620: EMPTY
10621: LIST
10622: LIST
10623: PUSH
10624: LD_INT 0
10626: PUSH
10627: LD_INT 2
10629: PUSH
10630: EMPTY
10631: LIST
10632: LIST
10633: PUSH
10634: LD_INT 1
10636: NEG
10637: PUSH
10638: LD_INT 1
10640: PUSH
10641: EMPTY
10642: LIST
10643: LIST
10644: PUSH
10645: LD_INT 2
10647: NEG
10648: PUSH
10649: LD_INT 0
10651: PUSH
10652: EMPTY
10653: LIST
10654: LIST
10655: PUSH
10656: LD_INT 2
10658: NEG
10659: PUSH
10660: LD_INT 1
10662: NEG
10663: PUSH
10664: EMPTY
10665: LIST
10666: LIST
10667: PUSH
10668: LD_INT 2
10670: NEG
10671: PUSH
10672: LD_INT 2
10674: NEG
10675: PUSH
10676: EMPTY
10677: LIST
10678: LIST
10679: PUSH
10680: EMPTY
10681: LIST
10682: LIST
10683: LIST
10684: LIST
10685: LIST
10686: LIST
10687: LIST
10688: LIST
10689: LIST
10690: LIST
10691: LIST
10692: LIST
10693: LIST
10694: LIST
10695: LIST
10696: LIST
10697: LIST
10698: LIST
10699: LIST
10700: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10701: LD_ADDR_VAR 0 21
10705: PUSH
10706: LD_INT 0
10708: PUSH
10709: LD_INT 0
10711: PUSH
10712: EMPTY
10713: LIST
10714: LIST
10715: PUSH
10716: LD_INT 0
10718: PUSH
10719: LD_INT 1
10721: NEG
10722: PUSH
10723: EMPTY
10724: LIST
10725: LIST
10726: PUSH
10727: LD_INT 1
10729: PUSH
10730: LD_INT 0
10732: PUSH
10733: EMPTY
10734: LIST
10735: LIST
10736: PUSH
10737: LD_INT 1
10739: PUSH
10740: LD_INT 1
10742: PUSH
10743: EMPTY
10744: LIST
10745: LIST
10746: PUSH
10747: LD_INT 0
10749: PUSH
10750: LD_INT 1
10752: PUSH
10753: EMPTY
10754: LIST
10755: LIST
10756: PUSH
10757: LD_INT 1
10759: NEG
10760: PUSH
10761: LD_INT 0
10763: PUSH
10764: EMPTY
10765: LIST
10766: LIST
10767: PUSH
10768: LD_INT 1
10770: NEG
10771: PUSH
10772: LD_INT 1
10774: NEG
10775: PUSH
10776: EMPTY
10777: LIST
10778: LIST
10779: PUSH
10780: LD_INT 1
10782: NEG
10783: PUSH
10784: LD_INT 2
10786: NEG
10787: PUSH
10788: EMPTY
10789: LIST
10790: LIST
10791: PUSH
10792: LD_INT 0
10794: PUSH
10795: LD_INT 2
10797: NEG
10798: PUSH
10799: EMPTY
10800: LIST
10801: LIST
10802: PUSH
10803: LD_INT 1
10805: PUSH
10806: LD_INT 1
10808: NEG
10809: PUSH
10810: EMPTY
10811: LIST
10812: LIST
10813: PUSH
10814: LD_INT 2
10816: PUSH
10817: LD_INT 0
10819: PUSH
10820: EMPTY
10821: LIST
10822: LIST
10823: PUSH
10824: LD_INT 2
10826: PUSH
10827: LD_INT 1
10829: PUSH
10830: EMPTY
10831: LIST
10832: LIST
10833: PUSH
10834: LD_INT 2
10836: PUSH
10837: LD_INT 2
10839: PUSH
10840: EMPTY
10841: LIST
10842: LIST
10843: PUSH
10844: LD_INT 1
10846: PUSH
10847: LD_INT 2
10849: PUSH
10850: EMPTY
10851: LIST
10852: LIST
10853: PUSH
10854: LD_INT 0
10856: PUSH
10857: LD_INT 2
10859: PUSH
10860: EMPTY
10861: LIST
10862: LIST
10863: PUSH
10864: LD_INT 1
10866: NEG
10867: PUSH
10868: LD_INT 1
10870: PUSH
10871: EMPTY
10872: LIST
10873: LIST
10874: PUSH
10875: LD_INT 2
10877: NEG
10878: PUSH
10879: LD_INT 0
10881: PUSH
10882: EMPTY
10883: LIST
10884: LIST
10885: PUSH
10886: LD_INT 2
10888: NEG
10889: PUSH
10890: LD_INT 1
10892: NEG
10893: PUSH
10894: EMPTY
10895: LIST
10896: LIST
10897: PUSH
10898: LD_INT 2
10900: NEG
10901: PUSH
10902: LD_INT 2
10904: NEG
10905: PUSH
10906: EMPTY
10907: LIST
10908: LIST
10909: PUSH
10910: EMPTY
10911: LIST
10912: LIST
10913: LIST
10914: LIST
10915: LIST
10916: LIST
10917: LIST
10918: LIST
10919: LIST
10920: LIST
10921: LIST
10922: LIST
10923: LIST
10924: LIST
10925: LIST
10926: LIST
10927: LIST
10928: LIST
10929: LIST
10930: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10931: LD_ADDR_VAR 0 22
10935: PUSH
10936: LD_INT 0
10938: PUSH
10939: LD_INT 0
10941: PUSH
10942: EMPTY
10943: LIST
10944: LIST
10945: PUSH
10946: LD_INT 0
10948: PUSH
10949: LD_INT 1
10951: NEG
10952: PUSH
10953: EMPTY
10954: LIST
10955: LIST
10956: PUSH
10957: LD_INT 1
10959: PUSH
10960: LD_INT 0
10962: PUSH
10963: EMPTY
10964: LIST
10965: LIST
10966: PUSH
10967: LD_INT 1
10969: PUSH
10970: LD_INT 1
10972: PUSH
10973: EMPTY
10974: LIST
10975: LIST
10976: PUSH
10977: LD_INT 0
10979: PUSH
10980: LD_INT 1
10982: PUSH
10983: EMPTY
10984: LIST
10985: LIST
10986: PUSH
10987: LD_INT 1
10989: NEG
10990: PUSH
10991: LD_INT 0
10993: PUSH
10994: EMPTY
10995: LIST
10996: LIST
10997: PUSH
10998: LD_INT 1
11000: NEG
11001: PUSH
11002: LD_INT 1
11004: NEG
11005: PUSH
11006: EMPTY
11007: LIST
11008: LIST
11009: PUSH
11010: LD_INT 1
11012: NEG
11013: PUSH
11014: LD_INT 2
11016: NEG
11017: PUSH
11018: EMPTY
11019: LIST
11020: LIST
11021: PUSH
11022: LD_INT 0
11024: PUSH
11025: LD_INT 2
11027: NEG
11028: PUSH
11029: EMPTY
11030: LIST
11031: LIST
11032: PUSH
11033: LD_INT 1
11035: PUSH
11036: LD_INT 1
11038: NEG
11039: PUSH
11040: EMPTY
11041: LIST
11042: LIST
11043: PUSH
11044: LD_INT 2
11046: PUSH
11047: LD_INT 0
11049: PUSH
11050: EMPTY
11051: LIST
11052: LIST
11053: PUSH
11054: LD_INT 2
11056: PUSH
11057: LD_INT 1
11059: PUSH
11060: EMPTY
11061: LIST
11062: LIST
11063: PUSH
11064: LD_INT 2
11066: PUSH
11067: LD_INT 2
11069: PUSH
11070: EMPTY
11071: LIST
11072: LIST
11073: PUSH
11074: LD_INT 1
11076: PUSH
11077: LD_INT 2
11079: PUSH
11080: EMPTY
11081: LIST
11082: LIST
11083: PUSH
11084: LD_INT 0
11086: PUSH
11087: LD_INT 2
11089: PUSH
11090: EMPTY
11091: LIST
11092: LIST
11093: PUSH
11094: LD_INT 1
11096: NEG
11097: PUSH
11098: LD_INT 1
11100: PUSH
11101: EMPTY
11102: LIST
11103: LIST
11104: PUSH
11105: LD_INT 2
11107: NEG
11108: PUSH
11109: LD_INT 0
11111: PUSH
11112: EMPTY
11113: LIST
11114: LIST
11115: PUSH
11116: LD_INT 2
11118: NEG
11119: PUSH
11120: LD_INT 1
11122: NEG
11123: PUSH
11124: EMPTY
11125: LIST
11126: LIST
11127: PUSH
11128: LD_INT 2
11130: NEG
11131: PUSH
11132: LD_INT 2
11134: NEG
11135: PUSH
11136: EMPTY
11137: LIST
11138: LIST
11139: PUSH
11140: EMPTY
11141: LIST
11142: LIST
11143: LIST
11144: LIST
11145: LIST
11146: LIST
11147: LIST
11148: LIST
11149: LIST
11150: LIST
11151: LIST
11152: LIST
11153: LIST
11154: LIST
11155: LIST
11156: LIST
11157: LIST
11158: LIST
11159: LIST
11160: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11161: LD_ADDR_VAR 0 23
11165: PUSH
11166: LD_INT 0
11168: PUSH
11169: LD_INT 0
11171: PUSH
11172: EMPTY
11173: LIST
11174: LIST
11175: PUSH
11176: LD_INT 0
11178: PUSH
11179: LD_INT 1
11181: NEG
11182: PUSH
11183: EMPTY
11184: LIST
11185: LIST
11186: PUSH
11187: LD_INT 1
11189: PUSH
11190: LD_INT 0
11192: PUSH
11193: EMPTY
11194: LIST
11195: LIST
11196: PUSH
11197: LD_INT 1
11199: PUSH
11200: LD_INT 1
11202: PUSH
11203: EMPTY
11204: LIST
11205: LIST
11206: PUSH
11207: LD_INT 0
11209: PUSH
11210: LD_INT 1
11212: PUSH
11213: EMPTY
11214: LIST
11215: LIST
11216: PUSH
11217: LD_INT 1
11219: NEG
11220: PUSH
11221: LD_INT 0
11223: PUSH
11224: EMPTY
11225: LIST
11226: LIST
11227: PUSH
11228: LD_INT 1
11230: NEG
11231: PUSH
11232: LD_INT 1
11234: NEG
11235: PUSH
11236: EMPTY
11237: LIST
11238: LIST
11239: PUSH
11240: LD_INT 1
11242: NEG
11243: PUSH
11244: LD_INT 2
11246: NEG
11247: PUSH
11248: EMPTY
11249: LIST
11250: LIST
11251: PUSH
11252: LD_INT 0
11254: PUSH
11255: LD_INT 2
11257: NEG
11258: PUSH
11259: EMPTY
11260: LIST
11261: LIST
11262: PUSH
11263: LD_INT 1
11265: PUSH
11266: LD_INT 1
11268: NEG
11269: PUSH
11270: EMPTY
11271: LIST
11272: LIST
11273: PUSH
11274: LD_INT 2
11276: PUSH
11277: LD_INT 0
11279: PUSH
11280: EMPTY
11281: LIST
11282: LIST
11283: PUSH
11284: LD_INT 2
11286: PUSH
11287: LD_INT 1
11289: PUSH
11290: EMPTY
11291: LIST
11292: LIST
11293: PUSH
11294: LD_INT 2
11296: PUSH
11297: LD_INT 2
11299: PUSH
11300: EMPTY
11301: LIST
11302: LIST
11303: PUSH
11304: LD_INT 1
11306: PUSH
11307: LD_INT 2
11309: PUSH
11310: EMPTY
11311: LIST
11312: LIST
11313: PUSH
11314: LD_INT 0
11316: PUSH
11317: LD_INT 2
11319: PUSH
11320: EMPTY
11321: LIST
11322: LIST
11323: PUSH
11324: LD_INT 1
11326: NEG
11327: PUSH
11328: LD_INT 1
11330: PUSH
11331: EMPTY
11332: LIST
11333: LIST
11334: PUSH
11335: LD_INT 2
11337: NEG
11338: PUSH
11339: LD_INT 0
11341: PUSH
11342: EMPTY
11343: LIST
11344: LIST
11345: PUSH
11346: LD_INT 2
11348: NEG
11349: PUSH
11350: LD_INT 1
11352: NEG
11353: PUSH
11354: EMPTY
11355: LIST
11356: LIST
11357: PUSH
11358: LD_INT 2
11360: NEG
11361: PUSH
11362: LD_INT 2
11364: NEG
11365: PUSH
11366: EMPTY
11367: LIST
11368: LIST
11369: PUSH
11370: LD_INT 2
11372: NEG
11373: PUSH
11374: LD_INT 3
11376: NEG
11377: PUSH
11378: EMPTY
11379: LIST
11380: LIST
11381: PUSH
11382: LD_INT 1
11384: NEG
11385: PUSH
11386: LD_INT 3
11388: NEG
11389: PUSH
11390: EMPTY
11391: LIST
11392: LIST
11393: PUSH
11394: LD_INT 1
11396: PUSH
11397: LD_INT 2
11399: NEG
11400: PUSH
11401: EMPTY
11402: LIST
11403: LIST
11404: PUSH
11405: LD_INT 2
11407: PUSH
11408: LD_INT 1
11410: NEG
11411: PUSH
11412: EMPTY
11413: LIST
11414: LIST
11415: PUSH
11416: EMPTY
11417: LIST
11418: LIST
11419: LIST
11420: LIST
11421: LIST
11422: LIST
11423: LIST
11424: LIST
11425: LIST
11426: LIST
11427: LIST
11428: LIST
11429: LIST
11430: LIST
11431: LIST
11432: LIST
11433: LIST
11434: LIST
11435: LIST
11436: LIST
11437: LIST
11438: LIST
11439: LIST
11440: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11441: LD_ADDR_VAR 0 24
11445: PUSH
11446: LD_INT 0
11448: PUSH
11449: LD_INT 0
11451: PUSH
11452: EMPTY
11453: LIST
11454: LIST
11455: PUSH
11456: LD_INT 0
11458: PUSH
11459: LD_INT 1
11461: NEG
11462: PUSH
11463: EMPTY
11464: LIST
11465: LIST
11466: PUSH
11467: LD_INT 1
11469: PUSH
11470: LD_INT 0
11472: PUSH
11473: EMPTY
11474: LIST
11475: LIST
11476: PUSH
11477: LD_INT 1
11479: PUSH
11480: LD_INT 1
11482: PUSH
11483: EMPTY
11484: LIST
11485: LIST
11486: PUSH
11487: LD_INT 0
11489: PUSH
11490: LD_INT 1
11492: PUSH
11493: EMPTY
11494: LIST
11495: LIST
11496: PUSH
11497: LD_INT 1
11499: NEG
11500: PUSH
11501: LD_INT 0
11503: PUSH
11504: EMPTY
11505: LIST
11506: LIST
11507: PUSH
11508: LD_INT 1
11510: NEG
11511: PUSH
11512: LD_INT 1
11514: NEG
11515: PUSH
11516: EMPTY
11517: LIST
11518: LIST
11519: PUSH
11520: LD_INT 1
11522: NEG
11523: PUSH
11524: LD_INT 2
11526: NEG
11527: PUSH
11528: EMPTY
11529: LIST
11530: LIST
11531: PUSH
11532: LD_INT 0
11534: PUSH
11535: LD_INT 2
11537: NEG
11538: PUSH
11539: EMPTY
11540: LIST
11541: LIST
11542: PUSH
11543: LD_INT 1
11545: PUSH
11546: LD_INT 1
11548: NEG
11549: PUSH
11550: EMPTY
11551: LIST
11552: LIST
11553: PUSH
11554: LD_INT 2
11556: PUSH
11557: LD_INT 0
11559: PUSH
11560: EMPTY
11561: LIST
11562: LIST
11563: PUSH
11564: LD_INT 2
11566: PUSH
11567: LD_INT 1
11569: PUSH
11570: EMPTY
11571: LIST
11572: LIST
11573: PUSH
11574: LD_INT 2
11576: PUSH
11577: LD_INT 2
11579: PUSH
11580: EMPTY
11581: LIST
11582: LIST
11583: PUSH
11584: LD_INT 1
11586: PUSH
11587: LD_INT 2
11589: PUSH
11590: EMPTY
11591: LIST
11592: LIST
11593: PUSH
11594: LD_INT 0
11596: PUSH
11597: LD_INT 2
11599: PUSH
11600: EMPTY
11601: LIST
11602: LIST
11603: PUSH
11604: LD_INT 1
11606: NEG
11607: PUSH
11608: LD_INT 1
11610: PUSH
11611: EMPTY
11612: LIST
11613: LIST
11614: PUSH
11615: LD_INT 2
11617: NEG
11618: PUSH
11619: LD_INT 0
11621: PUSH
11622: EMPTY
11623: LIST
11624: LIST
11625: PUSH
11626: LD_INT 2
11628: NEG
11629: PUSH
11630: LD_INT 1
11632: NEG
11633: PUSH
11634: EMPTY
11635: LIST
11636: LIST
11637: PUSH
11638: LD_INT 2
11640: NEG
11641: PUSH
11642: LD_INT 2
11644: NEG
11645: PUSH
11646: EMPTY
11647: LIST
11648: LIST
11649: PUSH
11650: LD_INT 1
11652: PUSH
11653: LD_INT 2
11655: NEG
11656: PUSH
11657: EMPTY
11658: LIST
11659: LIST
11660: PUSH
11661: LD_INT 2
11663: PUSH
11664: LD_INT 1
11666: NEG
11667: PUSH
11668: EMPTY
11669: LIST
11670: LIST
11671: PUSH
11672: LD_INT 3
11674: PUSH
11675: LD_INT 1
11677: PUSH
11678: EMPTY
11679: LIST
11680: LIST
11681: PUSH
11682: LD_INT 3
11684: PUSH
11685: LD_INT 2
11687: PUSH
11688: EMPTY
11689: LIST
11690: LIST
11691: PUSH
11692: EMPTY
11693: LIST
11694: LIST
11695: LIST
11696: LIST
11697: LIST
11698: LIST
11699: LIST
11700: LIST
11701: LIST
11702: LIST
11703: LIST
11704: LIST
11705: LIST
11706: LIST
11707: LIST
11708: LIST
11709: LIST
11710: LIST
11711: LIST
11712: LIST
11713: LIST
11714: LIST
11715: LIST
11716: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
11717: LD_ADDR_VAR 0 25
11721: PUSH
11722: LD_INT 0
11724: PUSH
11725: LD_INT 0
11727: PUSH
11728: EMPTY
11729: LIST
11730: LIST
11731: PUSH
11732: LD_INT 0
11734: PUSH
11735: LD_INT 1
11737: NEG
11738: PUSH
11739: EMPTY
11740: LIST
11741: LIST
11742: PUSH
11743: LD_INT 1
11745: PUSH
11746: LD_INT 0
11748: PUSH
11749: EMPTY
11750: LIST
11751: LIST
11752: PUSH
11753: LD_INT 1
11755: PUSH
11756: LD_INT 1
11758: PUSH
11759: EMPTY
11760: LIST
11761: LIST
11762: PUSH
11763: LD_INT 0
11765: PUSH
11766: LD_INT 1
11768: PUSH
11769: EMPTY
11770: LIST
11771: LIST
11772: PUSH
11773: LD_INT 1
11775: NEG
11776: PUSH
11777: LD_INT 0
11779: PUSH
11780: EMPTY
11781: LIST
11782: LIST
11783: PUSH
11784: LD_INT 1
11786: NEG
11787: PUSH
11788: LD_INT 1
11790: NEG
11791: PUSH
11792: EMPTY
11793: LIST
11794: LIST
11795: PUSH
11796: LD_INT 1
11798: NEG
11799: PUSH
11800: LD_INT 2
11802: NEG
11803: PUSH
11804: EMPTY
11805: LIST
11806: LIST
11807: PUSH
11808: LD_INT 0
11810: PUSH
11811: LD_INT 2
11813: NEG
11814: PUSH
11815: EMPTY
11816: LIST
11817: LIST
11818: PUSH
11819: LD_INT 1
11821: PUSH
11822: LD_INT 1
11824: NEG
11825: PUSH
11826: EMPTY
11827: LIST
11828: LIST
11829: PUSH
11830: LD_INT 2
11832: PUSH
11833: LD_INT 0
11835: PUSH
11836: EMPTY
11837: LIST
11838: LIST
11839: PUSH
11840: LD_INT 2
11842: PUSH
11843: LD_INT 1
11845: PUSH
11846: EMPTY
11847: LIST
11848: LIST
11849: PUSH
11850: LD_INT 2
11852: PUSH
11853: LD_INT 2
11855: PUSH
11856: EMPTY
11857: LIST
11858: LIST
11859: PUSH
11860: LD_INT 1
11862: PUSH
11863: LD_INT 2
11865: PUSH
11866: EMPTY
11867: LIST
11868: LIST
11869: PUSH
11870: LD_INT 0
11872: PUSH
11873: LD_INT 2
11875: PUSH
11876: EMPTY
11877: LIST
11878: LIST
11879: PUSH
11880: LD_INT 1
11882: NEG
11883: PUSH
11884: LD_INT 1
11886: PUSH
11887: EMPTY
11888: LIST
11889: LIST
11890: PUSH
11891: LD_INT 2
11893: NEG
11894: PUSH
11895: LD_INT 0
11897: PUSH
11898: EMPTY
11899: LIST
11900: LIST
11901: PUSH
11902: LD_INT 2
11904: NEG
11905: PUSH
11906: LD_INT 1
11908: NEG
11909: PUSH
11910: EMPTY
11911: LIST
11912: LIST
11913: PUSH
11914: LD_INT 2
11916: NEG
11917: PUSH
11918: LD_INT 2
11920: NEG
11921: PUSH
11922: EMPTY
11923: LIST
11924: LIST
11925: PUSH
11926: LD_INT 3
11928: PUSH
11929: LD_INT 1
11931: PUSH
11932: EMPTY
11933: LIST
11934: LIST
11935: PUSH
11936: LD_INT 3
11938: PUSH
11939: LD_INT 2
11941: PUSH
11942: EMPTY
11943: LIST
11944: LIST
11945: PUSH
11946: LD_INT 2
11948: PUSH
11949: LD_INT 3
11951: PUSH
11952: EMPTY
11953: LIST
11954: LIST
11955: PUSH
11956: LD_INT 1
11958: PUSH
11959: LD_INT 3
11961: PUSH
11962: EMPTY
11963: LIST
11964: LIST
11965: PUSH
11966: EMPTY
11967: LIST
11968: LIST
11969: LIST
11970: LIST
11971: LIST
11972: LIST
11973: LIST
11974: LIST
11975: LIST
11976: LIST
11977: LIST
11978: LIST
11979: LIST
11980: LIST
11981: LIST
11982: LIST
11983: LIST
11984: LIST
11985: LIST
11986: LIST
11987: LIST
11988: LIST
11989: LIST
11990: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
11991: LD_ADDR_VAR 0 26
11995: PUSH
11996: LD_INT 0
11998: PUSH
11999: LD_INT 0
12001: PUSH
12002: EMPTY
12003: LIST
12004: LIST
12005: PUSH
12006: LD_INT 0
12008: PUSH
12009: LD_INT 1
12011: NEG
12012: PUSH
12013: EMPTY
12014: LIST
12015: LIST
12016: PUSH
12017: LD_INT 1
12019: PUSH
12020: LD_INT 0
12022: PUSH
12023: EMPTY
12024: LIST
12025: LIST
12026: PUSH
12027: LD_INT 1
12029: PUSH
12030: LD_INT 1
12032: PUSH
12033: EMPTY
12034: LIST
12035: LIST
12036: PUSH
12037: LD_INT 0
12039: PUSH
12040: LD_INT 1
12042: PUSH
12043: EMPTY
12044: LIST
12045: LIST
12046: PUSH
12047: LD_INT 1
12049: NEG
12050: PUSH
12051: LD_INT 0
12053: PUSH
12054: EMPTY
12055: LIST
12056: LIST
12057: PUSH
12058: LD_INT 1
12060: NEG
12061: PUSH
12062: LD_INT 1
12064: NEG
12065: PUSH
12066: EMPTY
12067: LIST
12068: LIST
12069: PUSH
12070: LD_INT 1
12072: NEG
12073: PUSH
12074: LD_INT 2
12076: NEG
12077: PUSH
12078: EMPTY
12079: LIST
12080: LIST
12081: PUSH
12082: LD_INT 0
12084: PUSH
12085: LD_INT 2
12087: NEG
12088: PUSH
12089: EMPTY
12090: LIST
12091: LIST
12092: PUSH
12093: LD_INT 1
12095: PUSH
12096: LD_INT 1
12098: NEG
12099: PUSH
12100: EMPTY
12101: LIST
12102: LIST
12103: PUSH
12104: LD_INT 2
12106: PUSH
12107: LD_INT 0
12109: PUSH
12110: EMPTY
12111: LIST
12112: LIST
12113: PUSH
12114: LD_INT 2
12116: PUSH
12117: LD_INT 1
12119: PUSH
12120: EMPTY
12121: LIST
12122: LIST
12123: PUSH
12124: LD_INT 2
12126: PUSH
12127: LD_INT 2
12129: PUSH
12130: EMPTY
12131: LIST
12132: LIST
12133: PUSH
12134: LD_INT 1
12136: PUSH
12137: LD_INT 2
12139: PUSH
12140: EMPTY
12141: LIST
12142: LIST
12143: PUSH
12144: LD_INT 0
12146: PUSH
12147: LD_INT 2
12149: PUSH
12150: EMPTY
12151: LIST
12152: LIST
12153: PUSH
12154: LD_INT 1
12156: NEG
12157: PUSH
12158: LD_INT 1
12160: PUSH
12161: EMPTY
12162: LIST
12163: LIST
12164: PUSH
12165: LD_INT 2
12167: NEG
12168: PUSH
12169: LD_INT 0
12171: PUSH
12172: EMPTY
12173: LIST
12174: LIST
12175: PUSH
12176: LD_INT 2
12178: NEG
12179: PUSH
12180: LD_INT 1
12182: NEG
12183: PUSH
12184: EMPTY
12185: LIST
12186: LIST
12187: PUSH
12188: LD_INT 2
12190: NEG
12191: PUSH
12192: LD_INT 2
12194: NEG
12195: PUSH
12196: EMPTY
12197: LIST
12198: LIST
12199: PUSH
12200: LD_INT 2
12202: PUSH
12203: LD_INT 3
12205: PUSH
12206: EMPTY
12207: LIST
12208: LIST
12209: PUSH
12210: LD_INT 1
12212: PUSH
12213: LD_INT 3
12215: PUSH
12216: EMPTY
12217: LIST
12218: LIST
12219: PUSH
12220: LD_INT 1
12222: NEG
12223: PUSH
12224: LD_INT 2
12226: PUSH
12227: EMPTY
12228: LIST
12229: LIST
12230: PUSH
12231: LD_INT 2
12233: NEG
12234: PUSH
12235: LD_INT 1
12237: PUSH
12238: EMPTY
12239: LIST
12240: LIST
12241: PUSH
12242: EMPTY
12243: LIST
12244: LIST
12245: LIST
12246: LIST
12247: LIST
12248: LIST
12249: LIST
12250: LIST
12251: LIST
12252: LIST
12253: LIST
12254: LIST
12255: LIST
12256: LIST
12257: LIST
12258: LIST
12259: LIST
12260: LIST
12261: LIST
12262: LIST
12263: LIST
12264: LIST
12265: LIST
12266: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12267: LD_ADDR_VAR 0 27
12271: PUSH
12272: LD_INT 0
12274: PUSH
12275: LD_INT 0
12277: PUSH
12278: EMPTY
12279: LIST
12280: LIST
12281: PUSH
12282: LD_INT 0
12284: PUSH
12285: LD_INT 1
12287: NEG
12288: PUSH
12289: EMPTY
12290: LIST
12291: LIST
12292: PUSH
12293: LD_INT 1
12295: PUSH
12296: LD_INT 0
12298: PUSH
12299: EMPTY
12300: LIST
12301: LIST
12302: PUSH
12303: LD_INT 1
12305: PUSH
12306: LD_INT 1
12308: PUSH
12309: EMPTY
12310: LIST
12311: LIST
12312: PUSH
12313: LD_INT 0
12315: PUSH
12316: LD_INT 1
12318: PUSH
12319: EMPTY
12320: LIST
12321: LIST
12322: PUSH
12323: LD_INT 1
12325: NEG
12326: PUSH
12327: LD_INT 0
12329: PUSH
12330: EMPTY
12331: LIST
12332: LIST
12333: PUSH
12334: LD_INT 1
12336: NEG
12337: PUSH
12338: LD_INT 1
12340: NEG
12341: PUSH
12342: EMPTY
12343: LIST
12344: LIST
12345: PUSH
12346: LD_INT 1
12348: NEG
12349: PUSH
12350: LD_INT 2
12352: NEG
12353: PUSH
12354: EMPTY
12355: LIST
12356: LIST
12357: PUSH
12358: LD_INT 0
12360: PUSH
12361: LD_INT 2
12363: NEG
12364: PUSH
12365: EMPTY
12366: LIST
12367: LIST
12368: PUSH
12369: LD_INT 1
12371: PUSH
12372: LD_INT 1
12374: NEG
12375: PUSH
12376: EMPTY
12377: LIST
12378: LIST
12379: PUSH
12380: LD_INT 2
12382: PUSH
12383: LD_INT 0
12385: PUSH
12386: EMPTY
12387: LIST
12388: LIST
12389: PUSH
12390: LD_INT 2
12392: PUSH
12393: LD_INT 1
12395: PUSH
12396: EMPTY
12397: LIST
12398: LIST
12399: PUSH
12400: LD_INT 2
12402: PUSH
12403: LD_INT 2
12405: PUSH
12406: EMPTY
12407: LIST
12408: LIST
12409: PUSH
12410: LD_INT 1
12412: PUSH
12413: LD_INT 2
12415: PUSH
12416: EMPTY
12417: LIST
12418: LIST
12419: PUSH
12420: LD_INT 0
12422: PUSH
12423: LD_INT 2
12425: PUSH
12426: EMPTY
12427: LIST
12428: LIST
12429: PUSH
12430: LD_INT 1
12432: NEG
12433: PUSH
12434: LD_INT 1
12436: PUSH
12437: EMPTY
12438: LIST
12439: LIST
12440: PUSH
12441: LD_INT 2
12443: NEG
12444: PUSH
12445: LD_INT 0
12447: PUSH
12448: EMPTY
12449: LIST
12450: LIST
12451: PUSH
12452: LD_INT 2
12454: NEG
12455: PUSH
12456: LD_INT 1
12458: NEG
12459: PUSH
12460: EMPTY
12461: LIST
12462: LIST
12463: PUSH
12464: LD_INT 2
12466: NEG
12467: PUSH
12468: LD_INT 2
12470: NEG
12471: PUSH
12472: EMPTY
12473: LIST
12474: LIST
12475: PUSH
12476: LD_INT 1
12478: NEG
12479: PUSH
12480: LD_INT 2
12482: PUSH
12483: EMPTY
12484: LIST
12485: LIST
12486: PUSH
12487: LD_INT 2
12489: NEG
12490: PUSH
12491: LD_INT 1
12493: PUSH
12494: EMPTY
12495: LIST
12496: LIST
12497: PUSH
12498: LD_INT 3
12500: NEG
12501: PUSH
12502: LD_INT 1
12504: NEG
12505: PUSH
12506: EMPTY
12507: LIST
12508: LIST
12509: PUSH
12510: LD_INT 3
12512: NEG
12513: PUSH
12514: LD_INT 2
12516: NEG
12517: PUSH
12518: EMPTY
12519: LIST
12520: LIST
12521: PUSH
12522: EMPTY
12523: LIST
12524: LIST
12525: LIST
12526: LIST
12527: LIST
12528: LIST
12529: LIST
12530: LIST
12531: LIST
12532: LIST
12533: LIST
12534: LIST
12535: LIST
12536: LIST
12537: LIST
12538: LIST
12539: LIST
12540: LIST
12541: LIST
12542: LIST
12543: LIST
12544: LIST
12545: LIST
12546: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12547: LD_ADDR_VAR 0 28
12551: PUSH
12552: LD_INT 0
12554: PUSH
12555: LD_INT 0
12557: PUSH
12558: EMPTY
12559: LIST
12560: LIST
12561: PUSH
12562: LD_INT 0
12564: PUSH
12565: LD_INT 1
12567: NEG
12568: PUSH
12569: EMPTY
12570: LIST
12571: LIST
12572: PUSH
12573: LD_INT 1
12575: PUSH
12576: LD_INT 0
12578: PUSH
12579: EMPTY
12580: LIST
12581: LIST
12582: PUSH
12583: LD_INT 1
12585: PUSH
12586: LD_INT 1
12588: PUSH
12589: EMPTY
12590: LIST
12591: LIST
12592: PUSH
12593: LD_INT 0
12595: PUSH
12596: LD_INT 1
12598: PUSH
12599: EMPTY
12600: LIST
12601: LIST
12602: PUSH
12603: LD_INT 1
12605: NEG
12606: PUSH
12607: LD_INT 0
12609: PUSH
12610: EMPTY
12611: LIST
12612: LIST
12613: PUSH
12614: LD_INT 1
12616: NEG
12617: PUSH
12618: LD_INT 1
12620: NEG
12621: PUSH
12622: EMPTY
12623: LIST
12624: LIST
12625: PUSH
12626: LD_INT 1
12628: NEG
12629: PUSH
12630: LD_INT 2
12632: NEG
12633: PUSH
12634: EMPTY
12635: LIST
12636: LIST
12637: PUSH
12638: LD_INT 0
12640: PUSH
12641: LD_INT 2
12643: NEG
12644: PUSH
12645: EMPTY
12646: LIST
12647: LIST
12648: PUSH
12649: LD_INT 1
12651: PUSH
12652: LD_INT 1
12654: NEG
12655: PUSH
12656: EMPTY
12657: LIST
12658: LIST
12659: PUSH
12660: LD_INT 2
12662: PUSH
12663: LD_INT 0
12665: PUSH
12666: EMPTY
12667: LIST
12668: LIST
12669: PUSH
12670: LD_INT 2
12672: PUSH
12673: LD_INT 1
12675: PUSH
12676: EMPTY
12677: LIST
12678: LIST
12679: PUSH
12680: LD_INT 2
12682: PUSH
12683: LD_INT 2
12685: PUSH
12686: EMPTY
12687: LIST
12688: LIST
12689: PUSH
12690: LD_INT 1
12692: PUSH
12693: LD_INT 2
12695: PUSH
12696: EMPTY
12697: LIST
12698: LIST
12699: PUSH
12700: LD_INT 0
12702: PUSH
12703: LD_INT 2
12705: PUSH
12706: EMPTY
12707: LIST
12708: LIST
12709: PUSH
12710: LD_INT 1
12712: NEG
12713: PUSH
12714: LD_INT 1
12716: PUSH
12717: EMPTY
12718: LIST
12719: LIST
12720: PUSH
12721: LD_INT 2
12723: NEG
12724: PUSH
12725: LD_INT 0
12727: PUSH
12728: EMPTY
12729: LIST
12730: LIST
12731: PUSH
12732: LD_INT 2
12734: NEG
12735: PUSH
12736: LD_INT 1
12738: NEG
12739: PUSH
12740: EMPTY
12741: LIST
12742: LIST
12743: PUSH
12744: LD_INT 2
12746: NEG
12747: PUSH
12748: LD_INT 2
12750: NEG
12751: PUSH
12752: EMPTY
12753: LIST
12754: LIST
12755: PUSH
12756: LD_INT 2
12758: NEG
12759: PUSH
12760: LD_INT 3
12762: NEG
12763: PUSH
12764: EMPTY
12765: LIST
12766: LIST
12767: PUSH
12768: LD_INT 1
12770: NEG
12771: PUSH
12772: LD_INT 3
12774: NEG
12775: PUSH
12776: EMPTY
12777: LIST
12778: LIST
12779: PUSH
12780: LD_INT 3
12782: NEG
12783: PUSH
12784: LD_INT 1
12786: NEG
12787: PUSH
12788: EMPTY
12789: LIST
12790: LIST
12791: PUSH
12792: LD_INT 3
12794: NEG
12795: PUSH
12796: LD_INT 2
12798: NEG
12799: PUSH
12800: EMPTY
12801: LIST
12802: LIST
12803: PUSH
12804: EMPTY
12805: LIST
12806: LIST
12807: LIST
12808: LIST
12809: LIST
12810: LIST
12811: LIST
12812: LIST
12813: LIST
12814: LIST
12815: LIST
12816: LIST
12817: LIST
12818: LIST
12819: LIST
12820: LIST
12821: LIST
12822: LIST
12823: LIST
12824: LIST
12825: LIST
12826: LIST
12827: LIST
12828: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
12829: LD_ADDR_VAR 0 29
12833: PUSH
12834: LD_INT 0
12836: PUSH
12837: LD_INT 0
12839: PUSH
12840: EMPTY
12841: LIST
12842: LIST
12843: PUSH
12844: LD_INT 0
12846: PUSH
12847: LD_INT 1
12849: NEG
12850: PUSH
12851: EMPTY
12852: LIST
12853: LIST
12854: PUSH
12855: LD_INT 1
12857: PUSH
12858: LD_INT 0
12860: PUSH
12861: EMPTY
12862: LIST
12863: LIST
12864: PUSH
12865: LD_INT 1
12867: PUSH
12868: LD_INT 1
12870: PUSH
12871: EMPTY
12872: LIST
12873: LIST
12874: PUSH
12875: LD_INT 0
12877: PUSH
12878: LD_INT 1
12880: PUSH
12881: EMPTY
12882: LIST
12883: LIST
12884: PUSH
12885: LD_INT 1
12887: NEG
12888: PUSH
12889: LD_INT 0
12891: PUSH
12892: EMPTY
12893: LIST
12894: LIST
12895: PUSH
12896: LD_INT 1
12898: NEG
12899: PUSH
12900: LD_INT 1
12902: NEG
12903: PUSH
12904: EMPTY
12905: LIST
12906: LIST
12907: PUSH
12908: LD_INT 1
12910: NEG
12911: PUSH
12912: LD_INT 2
12914: NEG
12915: PUSH
12916: EMPTY
12917: LIST
12918: LIST
12919: PUSH
12920: LD_INT 0
12922: PUSH
12923: LD_INT 2
12925: NEG
12926: PUSH
12927: EMPTY
12928: LIST
12929: LIST
12930: PUSH
12931: LD_INT 1
12933: PUSH
12934: LD_INT 1
12936: NEG
12937: PUSH
12938: EMPTY
12939: LIST
12940: LIST
12941: PUSH
12942: LD_INT 2
12944: PUSH
12945: LD_INT 0
12947: PUSH
12948: EMPTY
12949: LIST
12950: LIST
12951: PUSH
12952: LD_INT 2
12954: PUSH
12955: LD_INT 1
12957: PUSH
12958: EMPTY
12959: LIST
12960: LIST
12961: PUSH
12962: LD_INT 1
12964: PUSH
12965: LD_INT 2
12967: PUSH
12968: EMPTY
12969: LIST
12970: LIST
12971: PUSH
12972: LD_INT 0
12974: PUSH
12975: LD_INT 2
12977: PUSH
12978: EMPTY
12979: LIST
12980: LIST
12981: PUSH
12982: LD_INT 1
12984: NEG
12985: PUSH
12986: LD_INT 1
12988: PUSH
12989: EMPTY
12990: LIST
12991: LIST
12992: PUSH
12993: LD_INT 2
12995: NEG
12996: PUSH
12997: LD_INT 1
12999: NEG
13000: PUSH
13001: EMPTY
13002: LIST
13003: LIST
13004: PUSH
13005: LD_INT 2
13007: NEG
13008: PUSH
13009: LD_INT 2
13011: NEG
13012: PUSH
13013: EMPTY
13014: LIST
13015: LIST
13016: PUSH
13017: LD_INT 2
13019: NEG
13020: PUSH
13021: LD_INT 3
13023: NEG
13024: PUSH
13025: EMPTY
13026: LIST
13027: LIST
13028: PUSH
13029: LD_INT 2
13031: PUSH
13032: LD_INT 1
13034: NEG
13035: PUSH
13036: EMPTY
13037: LIST
13038: LIST
13039: PUSH
13040: LD_INT 3
13042: PUSH
13043: LD_INT 1
13045: PUSH
13046: EMPTY
13047: LIST
13048: LIST
13049: PUSH
13050: LD_INT 1
13052: PUSH
13053: LD_INT 3
13055: PUSH
13056: EMPTY
13057: LIST
13058: LIST
13059: PUSH
13060: LD_INT 1
13062: NEG
13063: PUSH
13064: LD_INT 2
13066: PUSH
13067: EMPTY
13068: LIST
13069: LIST
13070: PUSH
13071: LD_INT 3
13073: NEG
13074: PUSH
13075: LD_INT 2
13077: NEG
13078: PUSH
13079: EMPTY
13080: LIST
13081: LIST
13082: PUSH
13083: EMPTY
13084: LIST
13085: LIST
13086: LIST
13087: LIST
13088: LIST
13089: LIST
13090: LIST
13091: LIST
13092: LIST
13093: LIST
13094: LIST
13095: LIST
13096: LIST
13097: LIST
13098: LIST
13099: LIST
13100: LIST
13101: LIST
13102: LIST
13103: LIST
13104: LIST
13105: LIST
13106: LIST
13107: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13108: LD_ADDR_VAR 0 30
13112: PUSH
13113: LD_INT 0
13115: PUSH
13116: LD_INT 0
13118: PUSH
13119: EMPTY
13120: LIST
13121: LIST
13122: PUSH
13123: LD_INT 0
13125: PUSH
13126: LD_INT 1
13128: NEG
13129: PUSH
13130: EMPTY
13131: LIST
13132: LIST
13133: PUSH
13134: LD_INT 1
13136: PUSH
13137: LD_INT 0
13139: PUSH
13140: EMPTY
13141: LIST
13142: LIST
13143: PUSH
13144: LD_INT 1
13146: PUSH
13147: LD_INT 1
13149: PUSH
13150: EMPTY
13151: LIST
13152: LIST
13153: PUSH
13154: LD_INT 0
13156: PUSH
13157: LD_INT 1
13159: PUSH
13160: EMPTY
13161: LIST
13162: LIST
13163: PUSH
13164: LD_INT 1
13166: NEG
13167: PUSH
13168: LD_INT 0
13170: PUSH
13171: EMPTY
13172: LIST
13173: LIST
13174: PUSH
13175: LD_INT 1
13177: NEG
13178: PUSH
13179: LD_INT 1
13181: NEG
13182: PUSH
13183: EMPTY
13184: LIST
13185: LIST
13186: PUSH
13187: LD_INT 1
13189: NEG
13190: PUSH
13191: LD_INT 2
13193: NEG
13194: PUSH
13195: EMPTY
13196: LIST
13197: LIST
13198: PUSH
13199: LD_INT 0
13201: PUSH
13202: LD_INT 2
13204: NEG
13205: PUSH
13206: EMPTY
13207: LIST
13208: LIST
13209: PUSH
13210: LD_INT 1
13212: PUSH
13213: LD_INT 1
13215: NEG
13216: PUSH
13217: EMPTY
13218: LIST
13219: LIST
13220: PUSH
13221: LD_INT 2
13223: PUSH
13224: LD_INT 0
13226: PUSH
13227: EMPTY
13228: LIST
13229: LIST
13230: PUSH
13231: LD_INT 2
13233: PUSH
13234: LD_INT 1
13236: PUSH
13237: EMPTY
13238: LIST
13239: LIST
13240: PUSH
13241: LD_INT 2
13243: PUSH
13244: LD_INT 2
13246: PUSH
13247: EMPTY
13248: LIST
13249: LIST
13250: PUSH
13251: LD_INT 1
13253: PUSH
13254: LD_INT 2
13256: PUSH
13257: EMPTY
13258: LIST
13259: LIST
13260: PUSH
13261: LD_INT 1
13263: NEG
13264: PUSH
13265: LD_INT 1
13267: PUSH
13268: EMPTY
13269: LIST
13270: LIST
13271: PUSH
13272: LD_INT 2
13274: NEG
13275: PUSH
13276: LD_INT 0
13278: PUSH
13279: EMPTY
13280: LIST
13281: LIST
13282: PUSH
13283: LD_INT 2
13285: NEG
13286: PUSH
13287: LD_INT 1
13289: NEG
13290: PUSH
13291: EMPTY
13292: LIST
13293: LIST
13294: PUSH
13295: LD_INT 1
13297: NEG
13298: PUSH
13299: LD_INT 3
13301: NEG
13302: PUSH
13303: EMPTY
13304: LIST
13305: LIST
13306: PUSH
13307: LD_INT 1
13309: PUSH
13310: LD_INT 2
13312: NEG
13313: PUSH
13314: EMPTY
13315: LIST
13316: LIST
13317: PUSH
13318: LD_INT 3
13320: PUSH
13321: LD_INT 2
13323: PUSH
13324: EMPTY
13325: LIST
13326: LIST
13327: PUSH
13328: LD_INT 2
13330: PUSH
13331: LD_INT 3
13333: PUSH
13334: EMPTY
13335: LIST
13336: LIST
13337: PUSH
13338: LD_INT 2
13340: NEG
13341: PUSH
13342: LD_INT 1
13344: PUSH
13345: EMPTY
13346: LIST
13347: LIST
13348: PUSH
13349: LD_INT 3
13351: NEG
13352: PUSH
13353: LD_INT 1
13355: NEG
13356: PUSH
13357: EMPTY
13358: LIST
13359: LIST
13360: PUSH
13361: EMPTY
13362: LIST
13363: LIST
13364: LIST
13365: LIST
13366: LIST
13367: LIST
13368: LIST
13369: LIST
13370: LIST
13371: LIST
13372: LIST
13373: LIST
13374: LIST
13375: LIST
13376: LIST
13377: LIST
13378: LIST
13379: LIST
13380: LIST
13381: LIST
13382: LIST
13383: LIST
13384: LIST
13385: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13386: LD_ADDR_VAR 0 31
13390: PUSH
13391: LD_INT 0
13393: PUSH
13394: LD_INT 0
13396: PUSH
13397: EMPTY
13398: LIST
13399: LIST
13400: PUSH
13401: LD_INT 0
13403: PUSH
13404: LD_INT 1
13406: NEG
13407: PUSH
13408: EMPTY
13409: LIST
13410: LIST
13411: PUSH
13412: LD_INT 1
13414: PUSH
13415: LD_INT 0
13417: PUSH
13418: EMPTY
13419: LIST
13420: LIST
13421: PUSH
13422: LD_INT 1
13424: PUSH
13425: LD_INT 1
13427: PUSH
13428: EMPTY
13429: LIST
13430: LIST
13431: PUSH
13432: LD_INT 0
13434: PUSH
13435: LD_INT 1
13437: PUSH
13438: EMPTY
13439: LIST
13440: LIST
13441: PUSH
13442: LD_INT 1
13444: NEG
13445: PUSH
13446: LD_INT 0
13448: PUSH
13449: EMPTY
13450: LIST
13451: LIST
13452: PUSH
13453: LD_INT 1
13455: NEG
13456: PUSH
13457: LD_INT 1
13459: NEG
13460: PUSH
13461: EMPTY
13462: LIST
13463: LIST
13464: PUSH
13465: LD_INT 1
13467: NEG
13468: PUSH
13469: LD_INT 2
13471: NEG
13472: PUSH
13473: EMPTY
13474: LIST
13475: LIST
13476: PUSH
13477: LD_INT 1
13479: PUSH
13480: LD_INT 1
13482: NEG
13483: PUSH
13484: EMPTY
13485: LIST
13486: LIST
13487: PUSH
13488: LD_INT 2
13490: PUSH
13491: LD_INT 0
13493: PUSH
13494: EMPTY
13495: LIST
13496: LIST
13497: PUSH
13498: LD_INT 2
13500: PUSH
13501: LD_INT 1
13503: PUSH
13504: EMPTY
13505: LIST
13506: LIST
13507: PUSH
13508: LD_INT 2
13510: PUSH
13511: LD_INT 2
13513: PUSH
13514: EMPTY
13515: LIST
13516: LIST
13517: PUSH
13518: LD_INT 1
13520: PUSH
13521: LD_INT 2
13523: PUSH
13524: EMPTY
13525: LIST
13526: LIST
13527: PUSH
13528: LD_INT 0
13530: PUSH
13531: LD_INT 2
13533: PUSH
13534: EMPTY
13535: LIST
13536: LIST
13537: PUSH
13538: LD_INT 1
13540: NEG
13541: PUSH
13542: LD_INT 1
13544: PUSH
13545: EMPTY
13546: LIST
13547: LIST
13548: PUSH
13549: LD_INT 2
13551: NEG
13552: PUSH
13553: LD_INT 1
13555: NEG
13556: PUSH
13557: EMPTY
13558: LIST
13559: LIST
13560: PUSH
13561: LD_INT 2
13563: NEG
13564: PUSH
13565: LD_INT 2
13567: NEG
13568: PUSH
13569: EMPTY
13570: LIST
13571: LIST
13572: PUSH
13573: LD_INT 2
13575: NEG
13576: PUSH
13577: LD_INT 3
13579: NEG
13580: PUSH
13581: EMPTY
13582: LIST
13583: LIST
13584: PUSH
13585: LD_INT 2
13587: PUSH
13588: LD_INT 1
13590: NEG
13591: PUSH
13592: EMPTY
13593: LIST
13594: LIST
13595: PUSH
13596: LD_INT 3
13598: PUSH
13599: LD_INT 1
13601: PUSH
13602: EMPTY
13603: LIST
13604: LIST
13605: PUSH
13606: LD_INT 1
13608: PUSH
13609: LD_INT 3
13611: PUSH
13612: EMPTY
13613: LIST
13614: LIST
13615: PUSH
13616: LD_INT 1
13618: NEG
13619: PUSH
13620: LD_INT 2
13622: PUSH
13623: EMPTY
13624: LIST
13625: LIST
13626: PUSH
13627: LD_INT 3
13629: NEG
13630: PUSH
13631: LD_INT 2
13633: NEG
13634: PUSH
13635: EMPTY
13636: LIST
13637: LIST
13638: PUSH
13639: EMPTY
13640: LIST
13641: LIST
13642: LIST
13643: LIST
13644: LIST
13645: LIST
13646: LIST
13647: LIST
13648: LIST
13649: LIST
13650: LIST
13651: LIST
13652: LIST
13653: LIST
13654: LIST
13655: LIST
13656: LIST
13657: LIST
13658: LIST
13659: LIST
13660: LIST
13661: LIST
13662: LIST
13663: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13664: LD_ADDR_VAR 0 32
13668: PUSH
13669: LD_INT 0
13671: PUSH
13672: LD_INT 0
13674: PUSH
13675: EMPTY
13676: LIST
13677: LIST
13678: PUSH
13679: LD_INT 0
13681: PUSH
13682: LD_INT 1
13684: NEG
13685: PUSH
13686: EMPTY
13687: LIST
13688: LIST
13689: PUSH
13690: LD_INT 1
13692: PUSH
13693: LD_INT 0
13695: PUSH
13696: EMPTY
13697: LIST
13698: LIST
13699: PUSH
13700: LD_INT 1
13702: PUSH
13703: LD_INT 1
13705: PUSH
13706: EMPTY
13707: LIST
13708: LIST
13709: PUSH
13710: LD_INT 0
13712: PUSH
13713: LD_INT 1
13715: PUSH
13716: EMPTY
13717: LIST
13718: LIST
13719: PUSH
13720: LD_INT 1
13722: NEG
13723: PUSH
13724: LD_INT 0
13726: PUSH
13727: EMPTY
13728: LIST
13729: LIST
13730: PUSH
13731: LD_INT 1
13733: NEG
13734: PUSH
13735: LD_INT 1
13737: NEG
13738: PUSH
13739: EMPTY
13740: LIST
13741: LIST
13742: PUSH
13743: LD_INT 1
13745: NEG
13746: PUSH
13747: LD_INT 2
13749: NEG
13750: PUSH
13751: EMPTY
13752: LIST
13753: LIST
13754: PUSH
13755: LD_INT 0
13757: PUSH
13758: LD_INT 2
13760: NEG
13761: PUSH
13762: EMPTY
13763: LIST
13764: LIST
13765: PUSH
13766: LD_INT 1
13768: PUSH
13769: LD_INT 1
13771: NEG
13772: PUSH
13773: EMPTY
13774: LIST
13775: LIST
13776: PUSH
13777: LD_INT 2
13779: PUSH
13780: LD_INT 1
13782: PUSH
13783: EMPTY
13784: LIST
13785: LIST
13786: PUSH
13787: LD_INT 2
13789: PUSH
13790: LD_INT 2
13792: PUSH
13793: EMPTY
13794: LIST
13795: LIST
13796: PUSH
13797: LD_INT 1
13799: PUSH
13800: LD_INT 2
13802: PUSH
13803: EMPTY
13804: LIST
13805: LIST
13806: PUSH
13807: LD_INT 0
13809: PUSH
13810: LD_INT 2
13812: PUSH
13813: EMPTY
13814: LIST
13815: LIST
13816: PUSH
13817: LD_INT 1
13819: NEG
13820: PUSH
13821: LD_INT 1
13823: PUSH
13824: EMPTY
13825: LIST
13826: LIST
13827: PUSH
13828: LD_INT 2
13830: NEG
13831: PUSH
13832: LD_INT 0
13834: PUSH
13835: EMPTY
13836: LIST
13837: LIST
13838: PUSH
13839: LD_INT 2
13841: NEG
13842: PUSH
13843: LD_INT 1
13845: NEG
13846: PUSH
13847: EMPTY
13848: LIST
13849: LIST
13850: PUSH
13851: LD_INT 1
13853: NEG
13854: PUSH
13855: LD_INT 3
13857: NEG
13858: PUSH
13859: EMPTY
13860: LIST
13861: LIST
13862: PUSH
13863: LD_INT 1
13865: PUSH
13866: LD_INT 2
13868: NEG
13869: PUSH
13870: EMPTY
13871: LIST
13872: LIST
13873: PUSH
13874: LD_INT 3
13876: PUSH
13877: LD_INT 2
13879: PUSH
13880: EMPTY
13881: LIST
13882: LIST
13883: PUSH
13884: LD_INT 2
13886: PUSH
13887: LD_INT 3
13889: PUSH
13890: EMPTY
13891: LIST
13892: LIST
13893: PUSH
13894: LD_INT 2
13896: NEG
13897: PUSH
13898: LD_INT 1
13900: PUSH
13901: EMPTY
13902: LIST
13903: LIST
13904: PUSH
13905: LD_INT 3
13907: NEG
13908: PUSH
13909: LD_INT 1
13911: NEG
13912: PUSH
13913: EMPTY
13914: LIST
13915: LIST
13916: PUSH
13917: EMPTY
13918: LIST
13919: LIST
13920: LIST
13921: LIST
13922: LIST
13923: LIST
13924: LIST
13925: LIST
13926: LIST
13927: LIST
13928: LIST
13929: LIST
13930: LIST
13931: LIST
13932: LIST
13933: LIST
13934: LIST
13935: LIST
13936: LIST
13937: LIST
13938: LIST
13939: LIST
13940: LIST
13941: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13942: LD_ADDR_VAR 0 33
13946: PUSH
13947: LD_INT 0
13949: PUSH
13950: LD_INT 0
13952: PUSH
13953: EMPTY
13954: LIST
13955: LIST
13956: PUSH
13957: LD_INT 0
13959: PUSH
13960: LD_INT 1
13962: NEG
13963: PUSH
13964: EMPTY
13965: LIST
13966: LIST
13967: PUSH
13968: LD_INT 1
13970: PUSH
13971: LD_INT 0
13973: PUSH
13974: EMPTY
13975: LIST
13976: LIST
13977: PUSH
13978: LD_INT 1
13980: PUSH
13981: LD_INT 1
13983: PUSH
13984: EMPTY
13985: LIST
13986: LIST
13987: PUSH
13988: LD_INT 0
13990: PUSH
13991: LD_INT 1
13993: PUSH
13994: EMPTY
13995: LIST
13996: LIST
13997: PUSH
13998: LD_INT 1
14000: NEG
14001: PUSH
14002: LD_INT 0
14004: PUSH
14005: EMPTY
14006: LIST
14007: LIST
14008: PUSH
14009: LD_INT 1
14011: NEG
14012: PUSH
14013: LD_INT 1
14015: NEG
14016: PUSH
14017: EMPTY
14018: LIST
14019: LIST
14020: PUSH
14021: LD_INT 1
14023: NEG
14024: PUSH
14025: LD_INT 2
14027: NEG
14028: PUSH
14029: EMPTY
14030: LIST
14031: LIST
14032: PUSH
14033: LD_INT 1
14035: PUSH
14036: LD_INT 1
14038: NEG
14039: PUSH
14040: EMPTY
14041: LIST
14042: LIST
14043: PUSH
14044: LD_INT 2
14046: PUSH
14047: LD_INT 0
14049: PUSH
14050: EMPTY
14051: LIST
14052: LIST
14053: PUSH
14054: LD_INT 2
14056: PUSH
14057: LD_INT 1
14059: PUSH
14060: EMPTY
14061: LIST
14062: LIST
14063: PUSH
14064: LD_INT 1
14066: PUSH
14067: LD_INT 2
14069: PUSH
14070: EMPTY
14071: LIST
14072: LIST
14073: PUSH
14074: LD_INT 0
14076: PUSH
14077: LD_INT 2
14079: PUSH
14080: EMPTY
14081: LIST
14082: LIST
14083: PUSH
14084: LD_INT 1
14086: NEG
14087: PUSH
14088: LD_INT 1
14090: PUSH
14091: EMPTY
14092: LIST
14093: LIST
14094: PUSH
14095: LD_INT 2
14097: NEG
14098: PUSH
14099: LD_INT 0
14101: PUSH
14102: EMPTY
14103: LIST
14104: LIST
14105: PUSH
14106: LD_INT 2
14108: NEG
14109: PUSH
14110: LD_INT 1
14112: NEG
14113: PUSH
14114: EMPTY
14115: LIST
14116: LIST
14117: PUSH
14118: LD_INT 2
14120: NEG
14121: PUSH
14122: LD_INT 2
14124: NEG
14125: PUSH
14126: EMPTY
14127: LIST
14128: LIST
14129: PUSH
14130: LD_INT 2
14132: NEG
14133: PUSH
14134: LD_INT 3
14136: NEG
14137: PUSH
14138: EMPTY
14139: LIST
14140: LIST
14141: PUSH
14142: LD_INT 2
14144: PUSH
14145: LD_INT 1
14147: NEG
14148: PUSH
14149: EMPTY
14150: LIST
14151: LIST
14152: PUSH
14153: LD_INT 3
14155: PUSH
14156: LD_INT 1
14158: PUSH
14159: EMPTY
14160: LIST
14161: LIST
14162: PUSH
14163: LD_INT 1
14165: PUSH
14166: LD_INT 3
14168: PUSH
14169: EMPTY
14170: LIST
14171: LIST
14172: PUSH
14173: LD_INT 1
14175: NEG
14176: PUSH
14177: LD_INT 2
14179: PUSH
14180: EMPTY
14181: LIST
14182: LIST
14183: PUSH
14184: LD_INT 3
14186: NEG
14187: PUSH
14188: LD_INT 2
14190: NEG
14191: PUSH
14192: EMPTY
14193: LIST
14194: LIST
14195: PUSH
14196: EMPTY
14197: LIST
14198: LIST
14199: LIST
14200: LIST
14201: LIST
14202: LIST
14203: LIST
14204: LIST
14205: LIST
14206: LIST
14207: LIST
14208: LIST
14209: LIST
14210: LIST
14211: LIST
14212: LIST
14213: LIST
14214: LIST
14215: LIST
14216: LIST
14217: LIST
14218: LIST
14219: LIST
14220: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14221: LD_ADDR_VAR 0 34
14225: PUSH
14226: LD_INT 0
14228: PUSH
14229: LD_INT 0
14231: PUSH
14232: EMPTY
14233: LIST
14234: LIST
14235: PUSH
14236: LD_INT 0
14238: PUSH
14239: LD_INT 1
14241: NEG
14242: PUSH
14243: EMPTY
14244: LIST
14245: LIST
14246: PUSH
14247: LD_INT 1
14249: PUSH
14250: LD_INT 0
14252: PUSH
14253: EMPTY
14254: LIST
14255: LIST
14256: PUSH
14257: LD_INT 1
14259: PUSH
14260: LD_INT 1
14262: PUSH
14263: EMPTY
14264: LIST
14265: LIST
14266: PUSH
14267: LD_INT 0
14269: PUSH
14270: LD_INT 1
14272: PUSH
14273: EMPTY
14274: LIST
14275: LIST
14276: PUSH
14277: LD_INT 1
14279: NEG
14280: PUSH
14281: LD_INT 0
14283: PUSH
14284: EMPTY
14285: LIST
14286: LIST
14287: PUSH
14288: LD_INT 1
14290: NEG
14291: PUSH
14292: LD_INT 1
14294: NEG
14295: PUSH
14296: EMPTY
14297: LIST
14298: LIST
14299: PUSH
14300: LD_INT 1
14302: NEG
14303: PUSH
14304: LD_INT 2
14306: NEG
14307: PUSH
14308: EMPTY
14309: LIST
14310: LIST
14311: PUSH
14312: LD_INT 0
14314: PUSH
14315: LD_INT 2
14317: NEG
14318: PUSH
14319: EMPTY
14320: LIST
14321: LIST
14322: PUSH
14323: LD_INT 1
14325: PUSH
14326: LD_INT 1
14328: NEG
14329: PUSH
14330: EMPTY
14331: LIST
14332: LIST
14333: PUSH
14334: LD_INT 2
14336: PUSH
14337: LD_INT 1
14339: PUSH
14340: EMPTY
14341: LIST
14342: LIST
14343: PUSH
14344: LD_INT 2
14346: PUSH
14347: LD_INT 2
14349: PUSH
14350: EMPTY
14351: LIST
14352: LIST
14353: PUSH
14354: LD_INT 1
14356: PUSH
14357: LD_INT 2
14359: PUSH
14360: EMPTY
14361: LIST
14362: LIST
14363: PUSH
14364: LD_INT 1
14366: NEG
14367: PUSH
14368: LD_INT 1
14370: PUSH
14371: EMPTY
14372: LIST
14373: LIST
14374: PUSH
14375: LD_INT 2
14377: NEG
14378: PUSH
14379: LD_INT 0
14381: PUSH
14382: EMPTY
14383: LIST
14384: LIST
14385: PUSH
14386: LD_INT 2
14388: NEG
14389: PUSH
14390: LD_INT 1
14392: NEG
14393: PUSH
14394: EMPTY
14395: LIST
14396: LIST
14397: PUSH
14398: LD_INT 2
14400: NEG
14401: PUSH
14402: LD_INT 2
14404: NEG
14405: PUSH
14406: EMPTY
14407: LIST
14408: LIST
14409: PUSH
14410: LD_INT 1
14412: NEG
14413: PUSH
14414: LD_INT 3
14416: NEG
14417: PUSH
14418: EMPTY
14419: LIST
14420: LIST
14421: PUSH
14422: LD_INT 1
14424: PUSH
14425: LD_INT 2
14427: NEG
14428: PUSH
14429: EMPTY
14430: LIST
14431: LIST
14432: PUSH
14433: LD_INT 3
14435: PUSH
14436: LD_INT 2
14438: PUSH
14439: EMPTY
14440: LIST
14441: LIST
14442: PUSH
14443: LD_INT 2
14445: PUSH
14446: LD_INT 3
14448: PUSH
14449: EMPTY
14450: LIST
14451: LIST
14452: PUSH
14453: LD_INT 2
14455: NEG
14456: PUSH
14457: LD_INT 1
14459: PUSH
14460: EMPTY
14461: LIST
14462: LIST
14463: PUSH
14464: LD_INT 3
14466: NEG
14467: PUSH
14468: LD_INT 1
14470: NEG
14471: PUSH
14472: EMPTY
14473: LIST
14474: LIST
14475: PUSH
14476: EMPTY
14477: LIST
14478: LIST
14479: LIST
14480: LIST
14481: LIST
14482: LIST
14483: LIST
14484: LIST
14485: LIST
14486: LIST
14487: LIST
14488: LIST
14489: LIST
14490: LIST
14491: LIST
14492: LIST
14493: LIST
14494: LIST
14495: LIST
14496: LIST
14497: LIST
14498: LIST
14499: LIST
14500: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14501: LD_ADDR_VAR 0 35
14505: PUSH
14506: LD_INT 0
14508: PUSH
14509: LD_INT 0
14511: PUSH
14512: EMPTY
14513: LIST
14514: LIST
14515: PUSH
14516: LD_INT 0
14518: PUSH
14519: LD_INT 1
14521: NEG
14522: PUSH
14523: EMPTY
14524: LIST
14525: LIST
14526: PUSH
14527: LD_INT 1
14529: PUSH
14530: LD_INT 0
14532: PUSH
14533: EMPTY
14534: LIST
14535: LIST
14536: PUSH
14537: LD_INT 1
14539: PUSH
14540: LD_INT 1
14542: PUSH
14543: EMPTY
14544: LIST
14545: LIST
14546: PUSH
14547: LD_INT 0
14549: PUSH
14550: LD_INT 1
14552: PUSH
14553: EMPTY
14554: LIST
14555: LIST
14556: PUSH
14557: LD_INT 1
14559: NEG
14560: PUSH
14561: LD_INT 0
14563: PUSH
14564: EMPTY
14565: LIST
14566: LIST
14567: PUSH
14568: LD_INT 1
14570: NEG
14571: PUSH
14572: LD_INT 1
14574: NEG
14575: PUSH
14576: EMPTY
14577: LIST
14578: LIST
14579: PUSH
14580: LD_INT 2
14582: PUSH
14583: LD_INT 1
14585: PUSH
14586: EMPTY
14587: LIST
14588: LIST
14589: PUSH
14590: LD_INT 2
14592: NEG
14593: PUSH
14594: LD_INT 1
14596: NEG
14597: PUSH
14598: EMPTY
14599: LIST
14600: LIST
14601: PUSH
14602: EMPTY
14603: LIST
14604: LIST
14605: LIST
14606: LIST
14607: LIST
14608: LIST
14609: LIST
14610: LIST
14611: LIST
14612: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14613: LD_ADDR_VAR 0 36
14617: PUSH
14618: LD_INT 0
14620: PUSH
14621: LD_INT 0
14623: PUSH
14624: EMPTY
14625: LIST
14626: LIST
14627: PUSH
14628: LD_INT 0
14630: PUSH
14631: LD_INT 1
14633: NEG
14634: PUSH
14635: EMPTY
14636: LIST
14637: LIST
14638: PUSH
14639: LD_INT 1
14641: PUSH
14642: LD_INT 0
14644: PUSH
14645: EMPTY
14646: LIST
14647: LIST
14648: PUSH
14649: LD_INT 1
14651: PUSH
14652: LD_INT 1
14654: PUSH
14655: EMPTY
14656: LIST
14657: LIST
14658: PUSH
14659: LD_INT 0
14661: PUSH
14662: LD_INT 1
14664: PUSH
14665: EMPTY
14666: LIST
14667: LIST
14668: PUSH
14669: LD_INT 1
14671: NEG
14672: PUSH
14673: LD_INT 0
14675: PUSH
14676: EMPTY
14677: LIST
14678: LIST
14679: PUSH
14680: LD_INT 1
14682: NEG
14683: PUSH
14684: LD_INT 1
14686: NEG
14687: PUSH
14688: EMPTY
14689: LIST
14690: LIST
14691: PUSH
14692: LD_INT 1
14694: NEG
14695: PUSH
14696: LD_INT 2
14698: NEG
14699: PUSH
14700: EMPTY
14701: LIST
14702: LIST
14703: PUSH
14704: LD_INT 1
14706: PUSH
14707: LD_INT 2
14709: PUSH
14710: EMPTY
14711: LIST
14712: LIST
14713: PUSH
14714: EMPTY
14715: LIST
14716: LIST
14717: LIST
14718: LIST
14719: LIST
14720: LIST
14721: LIST
14722: LIST
14723: LIST
14724: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
14725: LD_ADDR_VAR 0 37
14729: PUSH
14730: LD_INT 0
14732: PUSH
14733: LD_INT 0
14735: PUSH
14736: EMPTY
14737: LIST
14738: LIST
14739: PUSH
14740: LD_INT 0
14742: PUSH
14743: LD_INT 1
14745: NEG
14746: PUSH
14747: EMPTY
14748: LIST
14749: LIST
14750: PUSH
14751: LD_INT 1
14753: PUSH
14754: LD_INT 0
14756: PUSH
14757: EMPTY
14758: LIST
14759: LIST
14760: PUSH
14761: LD_INT 1
14763: PUSH
14764: LD_INT 1
14766: PUSH
14767: EMPTY
14768: LIST
14769: LIST
14770: PUSH
14771: LD_INT 0
14773: PUSH
14774: LD_INT 1
14776: PUSH
14777: EMPTY
14778: LIST
14779: LIST
14780: PUSH
14781: LD_INT 1
14783: NEG
14784: PUSH
14785: LD_INT 0
14787: PUSH
14788: EMPTY
14789: LIST
14790: LIST
14791: PUSH
14792: LD_INT 1
14794: NEG
14795: PUSH
14796: LD_INT 1
14798: NEG
14799: PUSH
14800: EMPTY
14801: LIST
14802: LIST
14803: PUSH
14804: LD_INT 1
14806: PUSH
14807: LD_INT 1
14809: NEG
14810: PUSH
14811: EMPTY
14812: LIST
14813: LIST
14814: PUSH
14815: LD_INT 1
14817: NEG
14818: PUSH
14819: LD_INT 1
14821: PUSH
14822: EMPTY
14823: LIST
14824: LIST
14825: PUSH
14826: EMPTY
14827: LIST
14828: LIST
14829: LIST
14830: LIST
14831: LIST
14832: LIST
14833: LIST
14834: LIST
14835: LIST
14836: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14837: LD_ADDR_VAR 0 38
14841: PUSH
14842: LD_INT 0
14844: PUSH
14845: LD_INT 0
14847: PUSH
14848: EMPTY
14849: LIST
14850: LIST
14851: PUSH
14852: LD_INT 0
14854: PUSH
14855: LD_INT 1
14857: NEG
14858: PUSH
14859: EMPTY
14860: LIST
14861: LIST
14862: PUSH
14863: LD_INT 1
14865: PUSH
14866: LD_INT 0
14868: PUSH
14869: EMPTY
14870: LIST
14871: LIST
14872: PUSH
14873: LD_INT 1
14875: PUSH
14876: LD_INT 1
14878: PUSH
14879: EMPTY
14880: LIST
14881: LIST
14882: PUSH
14883: LD_INT 0
14885: PUSH
14886: LD_INT 1
14888: PUSH
14889: EMPTY
14890: LIST
14891: LIST
14892: PUSH
14893: LD_INT 1
14895: NEG
14896: PUSH
14897: LD_INT 0
14899: PUSH
14900: EMPTY
14901: LIST
14902: LIST
14903: PUSH
14904: LD_INT 1
14906: NEG
14907: PUSH
14908: LD_INT 1
14910: NEG
14911: PUSH
14912: EMPTY
14913: LIST
14914: LIST
14915: PUSH
14916: LD_INT 2
14918: PUSH
14919: LD_INT 1
14921: PUSH
14922: EMPTY
14923: LIST
14924: LIST
14925: PUSH
14926: LD_INT 2
14928: NEG
14929: PUSH
14930: LD_INT 1
14932: NEG
14933: PUSH
14934: EMPTY
14935: LIST
14936: LIST
14937: PUSH
14938: EMPTY
14939: LIST
14940: LIST
14941: LIST
14942: LIST
14943: LIST
14944: LIST
14945: LIST
14946: LIST
14947: LIST
14948: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14949: LD_ADDR_VAR 0 39
14953: PUSH
14954: LD_INT 0
14956: PUSH
14957: LD_INT 0
14959: PUSH
14960: EMPTY
14961: LIST
14962: LIST
14963: PUSH
14964: LD_INT 0
14966: PUSH
14967: LD_INT 1
14969: NEG
14970: PUSH
14971: EMPTY
14972: LIST
14973: LIST
14974: PUSH
14975: LD_INT 1
14977: PUSH
14978: LD_INT 0
14980: PUSH
14981: EMPTY
14982: LIST
14983: LIST
14984: PUSH
14985: LD_INT 1
14987: PUSH
14988: LD_INT 1
14990: PUSH
14991: EMPTY
14992: LIST
14993: LIST
14994: PUSH
14995: LD_INT 0
14997: PUSH
14998: LD_INT 1
15000: PUSH
15001: EMPTY
15002: LIST
15003: LIST
15004: PUSH
15005: LD_INT 1
15007: NEG
15008: PUSH
15009: LD_INT 0
15011: PUSH
15012: EMPTY
15013: LIST
15014: LIST
15015: PUSH
15016: LD_INT 1
15018: NEG
15019: PUSH
15020: LD_INT 1
15022: NEG
15023: PUSH
15024: EMPTY
15025: LIST
15026: LIST
15027: PUSH
15028: LD_INT 1
15030: NEG
15031: PUSH
15032: LD_INT 2
15034: NEG
15035: PUSH
15036: EMPTY
15037: LIST
15038: LIST
15039: PUSH
15040: LD_INT 1
15042: PUSH
15043: LD_INT 2
15045: PUSH
15046: EMPTY
15047: LIST
15048: LIST
15049: PUSH
15050: EMPTY
15051: LIST
15052: LIST
15053: LIST
15054: LIST
15055: LIST
15056: LIST
15057: LIST
15058: LIST
15059: LIST
15060: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15061: LD_ADDR_VAR 0 40
15065: PUSH
15066: LD_INT 0
15068: PUSH
15069: LD_INT 0
15071: PUSH
15072: EMPTY
15073: LIST
15074: LIST
15075: PUSH
15076: LD_INT 0
15078: PUSH
15079: LD_INT 1
15081: NEG
15082: PUSH
15083: EMPTY
15084: LIST
15085: LIST
15086: PUSH
15087: LD_INT 1
15089: PUSH
15090: LD_INT 0
15092: PUSH
15093: EMPTY
15094: LIST
15095: LIST
15096: PUSH
15097: LD_INT 1
15099: PUSH
15100: LD_INT 1
15102: PUSH
15103: EMPTY
15104: LIST
15105: LIST
15106: PUSH
15107: LD_INT 0
15109: PUSH
15110: LD_INT 1
15112: PUSH
15113: EMPTY
15114: LIST
15115: LIST
15116: PUSH
15117: LD_INT 1
15119: NEG
15120: PUSH
15121: LD_INT 0
15123: PUSH
15124: EMPTY
15125: LIST
15126: LIST
15127: PUSH
15128: LD_INT 1
15130: NEG
15131: PUSH
15132: LD_INT 1
15134: NEG
15135: PUSH
15136: EMPTY
15137: LIST
15138: LIST
15139: PUSH
15140: LD_INT 1
15142: PUSH
15143: LD_INT 1
15145: NEG
15146: PUSH
15147: EMPTY
15148: LIST
15149: LIST
15150: PUSH
15151: LD_INT 1
15153: NEG
15154: PUSH
15155: LD_INT 1
15157: PUSH
15158: EMPTY
15159: LIST
15160: LIST
15161: PUSH
15162: EMPTY
15163: LIST
15164: LIST
15165: LIST
15166: LIST
15167: LIST
15168: LIST
15169: LIST
15170: LIST
15171: LIST
15172: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15173: LD_ADDR_VAR 0 41
15177: PUSH
15178: LD_INT 0
15180: PUSH
15181: LD_INT 0
15183: PUSH
15184: EMPTY
15185: LIST
15186: LIST
15187: PUSH
15188: LD_INT 0
15190: PUSH
15191: LD_INT 1
15193: NEG
15194: PUSH
15195: EMPTY
15196: LIST
15197: LIST
15198: PUSH
15199: LD_INT 1
15201: PUSH
15202: LD_INT 0
15204: PUSH
15205: EMPTY
15206: LIST
15207: LIST
15208: PUSH
15209: LD_INT 1
15211: PUSH
15212: LD_INT 1
15214: PUSH
15215: EMPTY
15216: LIST
15217: LIST
15218: PUSH
15219: LD_INT 0
15221: PUSH
15222: LD_INT 1
15224: PUSH
15225: EMPTY
15226: LIST
15227: LIST
15228: PUSH
15229: LD_INT 1
15231: NEG
15232: PUSH
15233: LD_INT 0
15235: PUSH
15236: EMPTY
15237: LIST
15238: LIST
15239: PUSH
15240: LD_INT 1
15242: NEG
15243: PUSH
15244: LD_INT 1
15246: NEG
15247: PUSH
15248: EMPTY
15249: LIST
15250: LIST
15251: PUSH
15252: LD_INT 1
15254: NEG
15255: PUSH
15256: LD_INT 2
15258: NEG
15259: PUSH
15260: EMPTY
15261: LIST
15262: LIST
15263: PUSH
15264: LD_INT 1
15266: PUSH
15267: LD_INT 1
15269: NEG
15270: PUSH
15271: EMPTY
15272: LIST
15273: LIST
15274: PUSH
15275: LD_INT 2
15277: PUSH
15278: LD_INT 0
15280: PUSH
15281: EMPTY
15282: LIST
15283: LIST
15284: PUSH
15285: LD_INT 2
15287: PUSH
15288: LD_INT 1
15290: PUSH
15291: EMPTY
15292: LIST
15293: LIST
15294: PUSH
15295: LD_INT 2
15297: PUSH
15298: LD_INT 2
15300: PUSH
15301: EMPTY
15302: LIST
15303: LIST
15304: PUSH
15305: LD_INT 1
15307: PUSH
15308: LD_INT 2
15310: PUSH
15311: EMPTY
15312: LIST
15313: LIST
15314: PUSH
15315: LD_INT 1
15317: NEG
15318: PUSH
15319: LD_INT 1
15321: PUSH
15322: EMPTY
15323: LIST
15324: LIST
15325: PUSH
15326: LD_INT 2
15328: NEG
15329: PUSH
15330: LD_INT 0
15332: PUSH
15333: EMPTY
15334: LIST
15335: LIST
15336: PUSH
15337: LD_INT 2
15339: NEG
15340: PUSH
15341: LD_INT 1
15343: NEG
15344: PUSH
15345: EMPTY
15346: LIST
15347: LIST
15348: PUSH
15349: LD_INT 2
15351: NEG
15352: PUSH
15353: LD_INT 2
15355: NEG
15356: PUSH
15357: EMPTY
15358: LIST
15359: LIST
15360: PUSH
15361: LD_INT 2
15363: NEG
15364: PUSH
15365: LD_INT 3
15367: NEG
15368: PUSH
15369: EMPTY
15370: LIST
15371: LIST
15372: PUSH
15373: LD_INT 2
15375: PUSH
15376: LD_INT 1
15378: NEG
15379: PUSH
15380: EMPTY
15381: LIST
15382: LIST
15383: PUSH
15384: LD_INT 3
15386: PUSH
15387: LD_INT 0
15389: PUSH
15390: EMPTY
15391: LIST
15392: LIST
15393: PUSH
15394: LD_INT 3
15396: PUSH
15397: LD_INT 1
15399: PUSH
15400: EMPTY
15401: LIST
15402: LIST
15403: PUSH
15404: LD_INT 3
15406: PUSH
15407: LD_INT 2
15409: PUSH
15410: EMPTY
15411: LIST
15412: LIST
15413: PUSH
15414: LD_INT 3
15416: PUSH
15417: LD_INT 3
15419: PUSH
15420: EMPTY
15421: LIST
15422: LIST
15423: PUSH
15424: LD_INT 2
15426: PUSH
15427: LD_INT 3
15429: PUSH
15430: EMPTY
15431: LIST
15432: LIST
15433: PUSH
15434: LD_INT 2
15436: NEG
15437: PUSH
15438: LD_INT 1
15440: PUSH
15441: EMPTY
15442: LIST
15443: LIST
15444: PUSH
15445: LD_INT 3
15447: NEG
15448: PUSH
15449: LD_INT 0
15451: PUSH
15452: EMPTY
15453: LIST
15454: LIST
15455: PUSH
15456: LD_INT 3
15458: NEG
15459: PUSH
15460: LD_INT 1
15462: NEG
15463: PUSH
15464: EMPTY
15465: LIST
15466: LIST
15467: PUSH
15468: LD_INT 3
15470: NEG
15471: PUSH
15472: LD_INT 2
15474: NEG
15475: PUSH
15476: EMPTY
15477: LIST
15478: LIST
15479: PUSH
15480: LD_INT 3
15482: NEG
15483: PUSH
15484: LD_INT 3
15486: NEG
15487: PUSH
15488: EMPTY
15489: LIST
15490: LIST
15491: PUSH
15492: EMPTY
15493: LIST
15494: LIST
15495: LIST
15496: LIST
15497: LIST
15498: LIST
15499: LIST
15500: LIST
15501: LIST
15502: LIST
15503: LIST
15504: LIST
15505: LIST
15506: LIST
15507: LIST
15508: LIST
15509: LIST
15510: LIST
15511: LIST
15512: LIST
15513: LIST
15514: LIST
15515: LIST
15516: LIST
15517: LIST
15518: LIST
15519: LIST
15520: LIST
15521: LIST
15522: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15523: LD_ADDR_VAR 0 42
15527: PUSH
15528: LD_INT 0
15530: PUSH
15531: LD_INT 0
15533: PUSH
15534: EMPTY
15535: LIST
15536: LIST
15537: PUSH
15538: LD_INT 0
15540: PUSH
15541: LD_INT 1
15543: NEG
15544: PUSH
15545: EMPTY
15546: LIST
15547: LIST
15548: PUSH
15549: LD_INT 1
15551: PUSH
15552: LD_INT 0
15554: PUSH
15555: EMPTY
15556: LIST
15557: LIST
15558: PUSH
15559: LD_INT 1
15561: PUSH
15562: LD_INT 1
15564: PUSH
15565: EMPTY
15566: LIST
15567: LIST
15568: PUSH
15569: LD_INT 0
15571: PUSH
15572: LD_INT 1
15574: PUSH
15575: EMPTY
15576: LIST
15577: LIST
15578: PUSH
15579: LD_INT 1
15581: NEG
15582: PUSH
15583: LD_INT 0
15585: PUSH
15586: EMPTY
15587: LIST
15588: LIST
15589: PUSH
15590: LD_INT 1
15592: NEG
15593: PUSH
15594: LD_INT 1
15596: NEG
15597: PUSH
15598: EMPTY
15599: LIST
15600: LIST
15601: PUSH
15602: LD_INT 1
15604: NEG
15605: PUSH
15606: LD_INT 2
15608: NEG
15609: PUSH
15610: EMPTY
15611: LIST
15612: LIST
15613: PUSH
15614: LD_INT 0
15616: PUSH
15617: LD_INT 2
15619: NEG
15620: PUSH
15621: EMPTY
15622: LIST
15623: LIST
15624: PUSH
15625: LD_INT 1
15627: PUSH
15628: LD_INT 1
15630: NEG
15631: PUSH
15632: EMPTY
15633: LIST
15634: LIST
15635: PUSH
15636: LD_INT 2
15638: PUSH
15639: LD_INT 1
15641: PUSH
15642: EMPTY
15643: LIST
15644: LIST
15645: PUSH
15646: LD_INT 2
15648: PUSH
15649: LD_INT 2
15651: PUSH
15652: EMPTY
15653: LIST
15654: LIST
15655: PUSH
15656: LD_INT 1
15658: PUSH
15659: LD_INT 2
15661: PUSH
15662: EMPTY
15663: LIST
15664: LIST
15665: PUSH
15666: LD_INT 0
15668: PUSH
15669: LD_INT 2
15671: PUSH
15672: EMPTY
15673: LIST
15674: LIST
15675: PUSH
15676: LD_INT 1
15678: NEG
15679: PUSH
15680: LD_INT 1
15682: PUSH
15683: EMPTY
15684: LIST
15685: LIST
15686: PUSH
15687: LD_INT 2
15689: NEG
15690: PUSH
15691: LD_INT 1
15693: NEG
15694: PUSH
15695: EMPTY
15696: LIST
15697: LIST
15698: PUSH
15699: LD_INT 2
15701: NEG
15702: PUSH
15703: LD_INT 2
15705: NEG
15706: PUSH
15707: EMPTY
15708: LIST
15709: LIST
15710: PUSH
15711: LD_INT 2
15713: NEG
15714: PUSH
15715: LD_INT 3
15717: NEG
15718: PUSH
15719: EMPTY
15720: LIST
15721: LIST
15722: PUSH
15723: LD_INT 1
15725: NEG
15726: PUSH
15727: LD_INT 3
15729: NEG
15730: PUSH
15731: EMPTY
15732: LIST
15733: LIST
15734: PUSH
15735: LD_INT 0
15737: PUSH
15738: LD_INT 3
15740: NEG
15741: PUSH
15742: EMPTY
15743: LIST
15744: LIST
15745: PUSH
15746: LD_INT 1
15748: PUSH
15749: LD_INT 2
15751: NEG
15752: PUSH
15753: EMPTY
15754: LIST
15755: LIST
15756: PUSH
15757: LD_INT 3
15759: PUSH
15760: LD_INT 2
15762: PUSH
15763: EMPTY
15764: LIST
15765: LIST
15766: PUSH
15767: LD_INT 3
15769: PUSH
15770: LD_INT 3
15772: PUSH
15773: EMPTY
15774: LIST
15775: LIST
15776: PUSH
15777: LD_INT 2
15779: PUSH
15780: LD_INT 3
15782: PUSH
15783: EMPTY
15784: LIST
15785: LIST
15786: PUSH
15787: LD_INT 1
15789: PUSH
15790: LD_INT 3
15792: PUSH
15793: EMPTY
15794: LIST
15795: LIST
15796: PUSH
15797: LD_INT 0
15799: PUSH
15800: LD_INT 3
15802: PUSH
15803: EMPTY
15804: LIST
15805: LIST
15806: PUSH
15807: LD_INT 1
15809: NEG
15810: PUSH
15811: LD_INT 2
15813: PUSH
15814: EMPTY
15815: LIST
15816: LIST
15817: PUSH
15818: LD_INT 3
15820: NEG
15821: PUSH
15822: LD_INT 2
15824: NEG
15825: PUSH
15826: EMPTY
15827: LIST
15828: LIST
15829: PUSH
15830: LD_INT 3
15832: NEG
15833: PUSH
15834: LD_INT 3
15836: NEG
15837: PUSH
15838: EMPTY
15839: LIST
15840: LIST
15841: PUSH
15842: EMPTY
15843: LIST
15844: LIST
15845: LIST
15846: LIST
15847: LIST
15848: LIST
15849: LIST
15850: LIST
15851: LIST
15852: LIST
15853: LIST
15854: LIST
15855: LIST
15856: LIST
15857: LIST
15858: LIST
15859: LIST
15860: LIST
15861: LIST
15862: LIST
15863: LIST
15864: LIST
15865: LIST
15866: LIST
15867: LIST
15868: LIST
15869: LIST
15870: LIST
15871: LIST
15872: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
15873: LD_ADDR_VAR 0 43
15877: PUSH
15878: LD_INT 0
15880: PUSH
15881: LD_INT 0
15883: PUSH
15884: EMPTY
15885: LIST
15886: LIST
15887: PUSH
15888: LD_INT 0
15890: PUSH
15891: LD_INT 1
15893: NEG
15894: PUSH
15895: EMPTY
15896: LIST
15897: LIST
15898: PUSH
15899: LD_INT 1
15901: PUSH
15902: LD_INT 0
15904: PUSH
15905: EMPTY
15906: LIST
15907: LIST
15908: PUSH
15909: LD_INT 1
15911: PUSH
15912: LD_INT 1
15914: PUSH
15915: EMPTY
15916: LIST
15917: LIST
15918: PUSH
15919: LD_INT 0
15921: PUSH
15922: LD_INT 1
15924: PUSH
15925: EMPTY
15926: LIST
15927: LIST
15928: PUSH
15929: LD_INT 1
15931: NEG
15932: PUSH
15933: LD_INT 0
15935: PUSH
15936: EMPTY
15937: LIST
15938: LIST
15939: PUSH
15940: LD_INT 1
15942: NEG
15943: PUSH
15944: LD_INT 1
15946: NEG
15947: PUSH
15948: EMPTY
15949: LIST
15950: LIST
15951: PUSH
15952: LD_INT 1
15954: NEG
15955: PUSH
15956: LD_INT 2
15958: NEG
15959: PUSH
15960: EMPTY
15961: LIST
15962: LIST
15963: PUSH
15964: LD_INT 0
15966: PUSH
15967: LD_INT 2
15969: NEG
15970: PUSH
15971: EMPTY
15972: LIST
15973: LIST
15974: PUSH
15975: LD_INT 1
15977: PUSH
15978: LD_INT 1
15980: NEG
15981: PUSH
15982: EMPTY
15983: LIST
15984: LIST
15985: PUSH
15986: LD_INT 2
15988: PUSH
15989: LD_INT 0
15991: PUSH
15992: EMPTY
15993: LIST
15994: LIST
15995: PUSH
15996: LD_INT 2
15998: PUSH
15999: LD_INT 1
16001: PUSH
16002: EMPTY
16003: LIST
16004: LIST
16005: PUSH
16006: LD_INT 1
16008: PUSH
16009: LD_INT 2
16011: PUSH
16012: EMPTY
16013: LIST
16014: LIST
16015: PUSH
16016: LD_INT 0
16018: PUSH
16019: LD_INT 2
16021: PUSH
16022: EMPTY
16023: LIST
16024: LIST
16025: PUSH
16026: LD_INT 1
16028: NEG
16029: PUSH
16030: LD_INT 1
16032: PUSH
16033: EMPTY
16034: LIST
16035: LIST
16036: PUSH
16037: LD_INT 2
16039: NEG
16040: PUSH
16041: LD_INT 0
16043: PUSH
16044: EMPTY
16045: LIST
16046: LIST
16047: PUSH
16048: LD_INT 2
16050: NEG
16051: PUSH
16052: LD_INT 1
16054: NEG
16055: PUSH
16056: EMPTY
16057: LIST
16058: LIST
16059: PUSH
16060: LD_INT 1
16062: NEG
16063: PUSH
16064: LD_INT 3
16066: NEG
16067: PUSH
16068: EMPTY
16069: LIST
16070: LIST
16071: PUSH
16072: LD_INT 0
16074: PUSH
16075: LD_INT 3
16077: NEG
16078: PUSH
16079: EMPTY
16080: LIST
16081: LIST
16082: PUSH
16083: LD_INT 1
16085: PUSH
16086: LD_INT 2
16088: NEG
16089: PUSH
16090: EMPTY
16091: LIST
16092: LIST
16093: PUSH
16094: LD_INT 2
16096: PUSH
16097: LD_INT 1
16099: NEG
16100: PUSH
16101: EMPTY
16102: LIST
16103: LIST
16104: PUSH
16105: LD_INT 3
16107: PUSH
16108: LD_INT 0
16110: PUSH
16111: EMPTY
16112: LIST
16113: LIST
16114: PUSH
16115: LD_INT 3
16117: PUSH
16118: LD_INT 1
16120: PUSH
16121: EMPTY
16122: LIST
16123: LIST
16124: PUSH
16125: LD_INT 1
16127: PUSH
16128: LD_INT 3
16130: PUSH
16131: EMPTY
16132: LIST
16133: LIST
16134: PUSH
16135: LD_INT 0
16137: PUSH
16138: LD_INT 3
16140: PUSH
16141: EMPTY
16142: LIST
16143: LIST
16144: PUSH
16145: LD_INT 1
16147: NEG
16148: PUSH
16149: LD_INT 2
16151: PUSH
16152: EMPTY
16153: LIST
16154: LIST
16155: PUSH
16156: LD_INT 2
16158: NEG
16159: PUSH
16160: LD_INT 1
16162: PUSH
16163: EMPTY
16164: LIST
16165: LIST
16166: PUSH
16167: LD_INT 3
16169: NEG
16170: PUSH
16171: LD_INT 0
16173: PUSH
16174: EMPTY
16175: LIST
16176: LIST
16177: PUSH
16178: LD_INT 3
16180: NEG
16181: PUSH
16182: LD_INT 1
16184: NEG
16185: PUSH
16186: EMPTY
16187: LIST
16188: LIST
16189: PUSH
16190: EMPTY
16191: LIST
16192: LIST
16193: LIST
16194: LIST
16195: LIST
16196: LIST
16197: LIST
16198: LIST
16199: LIST
16200: LIST
16201: LIST
16202: LIST
16203: LIST
16204: LIST
16205: LIST
16206: LIST
16207: LIST
16208: LIST
16209: LIST
16210: LIST
16211: LIST
16212: LIST
16213: LIST
16214: LIST
16215: LIST
16216: LIST
16217: LIST
16218: LIST
16219: LIST
16220: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16221: LD_ADDR_VAR 0 44
16225: PUSH
16226: LD_INT 0
16228: PUSH
16229: LD_INT 0
16231: PUSH
16232: EMPTY
16233: LIST
16234: LIST
16235: PUSH
16236: LD_INT 0
16238: PUSH
16239: LD_INT 1
16241: NEG
16242: PUSH
16243: EMPTY
16244: LIST
16245: LIST
16246: PUSH
16247: LD_INT 1
16249: PUSH
16250: LD_INT 0
16252: PUSH
16253: EMPTY
16254: LIST
16255: LIST
16256: PUSH
16257: LD_INT 1
16259: PUSH
16260: LD_INT 1
16262: PUSH
16263: EMPTY
16264: LIST
16265: LIST
16266: PUSH
16267: LD_INT 0
16269: PUSH
16270: LD_INT 1
16272: PUSH
16273: EMPTY
16274: LIST
16275: LIST
16276: PUSH
16277: LD_INT 1
16279: NEG
16280: PUSH
16281: LD_INT 0
16283: PUSH
16284: EMPTY
16285: LIST
16286: LIST
16287: PUSH
16288: LD_INT 1
16290: NEG
16291: PUSH
16292: LD_INT 1
16294: NEG
16295: PUSH
16296: EMPTY
16297: LIST
16298: LIST
16299: PUSH
16300: LD_INT 1
16302: NEG
16303: PUSH
16304: LD_INT 2
16306: NEG
16307: PUSH
16308: EMPTY
16309: LIST
16310: LIST
16311: PUSH
16312: LD_INT 1
16314: PUSH
16315: LD_INT 1
16317: NEG
16318: PUSH
16319: EMPTY
16320: LIST
16321: LIST
16322: PUSH
16323: LD_INT 2
16325: PUSH
16326: LD_INT 0
16328: PUSH
16329: EMPTY
16330: LIST
16331: LIST
16332: PUSH
16333: LD_INT 2
16335: PUSH
16336: LD_INT 1
16338: PUSH
16339: EMPTY
16340: LIST
16341: LIST
16342: PUSH
16343: LD_INT 2
16345: PUSH
16346: LD_INT 2
16348: PUSH
16349: EMPTY
16350: LIST
16351: LIST
16352: PUSH
16353: LD_INT 1
16355: PUSH
16356: LD_INT 2
16358: PUSH
16359: EMPTY
16360: LIST
16361: LIST
16362: PUSH
16363: LD_INT 1
16365: NEG
16366: PUSH
16367: LD_INT 1
16369: PUSH
16370: EMPTY
16371: LIST
16372: LIST
16373: PUSH
16374: LD_INT 2
16376: NEG
16377: PUSH
16378: LD_INT 0
16380: PUSH
16381: EMPTY
16382: LIST
16383: LIST
16384: PUSH
16385: LD_INT 2
16387: NEG
16388: PUSH
16389: LD_INT 1
16391: NEG
16392: PUSH
16393: EMPTY
16394: LIST
16395: LIST
16396: PUSH
16397: LD_INT 2
16399: NEG
16400: PUSH
16401: LD_INT 2
16403: NEG
16404: PUSH
16405: EMPTY
16406: LIST
16407: LIST
16408: PUSH
16409: LD_INT 2
16411: NEG
16412: PUSH
16413: LD_INT 3
16415: NEG
16416: PUSH
16417: EMPTY
16418: LIST
16419: LIST
16420: PUSH
16421: LD_INT 2
16423: PUSH
16424: LD_INT 1
16426: NEG
16427: PUSH
16428: EMPTY
16429: LIST
16430: LIST
16431: PUSH
16432: LD_INT 3
16434: PUSH
16435: LD_INT 0
16437: PUSH
16438: EMPTY
16439: LIST
16440: LIST
16441: PUSH
16442: LD_INT 3
16444: PUSH
16445: LD_INT 1
16447: PUSH
16448: EMPTY
16449: LIST
16450: LIST
16451: PUSH
16452: LD_INT 3
16454: PUSH
16455: LD_INT 2
16457: PUSH
16458: EMPTY
16459: LIST
16460: LIST
16461: PUSH
16462: LD_INT 3
16464: PUSH
16465: LD_INT 3
16467: PUSH
16468: EMPTY
16469: LIST
16470: LIST
16471: PUSH
16472: LD_INT 2
16474: PUSH
16475: LD_INT 3
16477: PUSH
16478: EMPTY
16479: LIST
16480: LIST
16481: PUSH
16482: LD_INT 2
16484: NEG
16485: PUSH
16486: LD_INT 1
16488: PUSH
16489: EMPTY
16490: LIST
16491: LIST
16492: PUSH
16493: LD_INT 3
16495: NEG
16496: PUSH
16497: LD_INT 0
16499: PUSH
16500: EMPTY
16501: LIST
16502: LIST
16503: PUSH
16504: LD_INT 3
16506: NEG
16507: PUSH
16508: LD_INT 1
16510: NEG
16511: PUSH
16512: EMPTY
16513: LIST
16514: LIST
16515: PUSH
16516: LD_INT 3
16518: NEG
16519: PUSH
16520: LD_INT 2
16522: NEG
16523: PUSH
16524: EMPTY
16525: LIST
16526: LIST
16527: PUSH
16528: LD_INT 3
16530: NEG
16531: PUSH
16532: LD_INT 3
16534: NEG
16535: PUSH
16536: EMPTY
16537: LIST
16538: LIST
16539: PUSH
16540: EMPTY
16541: LIST
16542: LIST
16543: LIST
16544: LIST
16545: LIST
16546: LIST
16547: LIST
16548: LIST
16549: LIST
16550: LIST
16551: LIST
16552: LIST
16553: LIST
16554: LIST
16555: LIST
16556: LIST
16557: LIST
16558: LIST
16559: LIST
16560: LIST
16561: LIST
16562: LIST
16563: LIST
16564: LIST
16565: LIST
16566: LIST
16567: LIST
16568: LIST
16569: LIST
16570: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16571: LD_ADDR_VAR 0 45
16575: PUSH
16576: LD_INT 0
16578: PUSH
16579: LD_INT 0
16581: PUSH
16582: EMPTY
16583: LIST
16584: LIST
16585: PUSH
16586: LD_INT 0
16588: PUSH
16589: LD_INT 1
16591: NEG
16592: PUSH
16593: EMPTY
16594: LIST
16595: LIST
16596: PUSH
16597: LD_INT 1
16599: PUSH
16600: LD_INT 0
16602: PUSH
16603: EMPTY
16604: LIST
16605: LIST
16606: PUSH
16607: LD_INT 1
16609: PUSH
16610: LD_INT 1
16612: PUSH
16613: EMPTY
16614: LIST
16615: LIST
16616: PUSH
16617: LD_INT 0
16619: PUSH
16620: LD_INT 1
16622: PUSH
16623: EMPTY
16624: LIST
16625: LIST
16626: PUSH
16627: LD_INT 1
16629: NEG
16630: PUSH
16631: LD_INT 0
16633: PUSH
16634: EMPTY
16635: LIST
16636: LIST
16637: PUSH
16638: LD_INT 1
16640: NEG
16641: PUSH
16642: LD_INT 1
16644: NEG
16645: PUSH
16646: EMPTY
16647: LIST
16648: LIST
16649: PUSH
16650: LD_INT 1
16652: NEG
16653: PUSH
16654: LD_INT 2
16656: NEG
16657: PUSH
16658: EMPTY
16659: LIST
16660: LIST
16661: PUSH
16662: LD_INT 0
16664: PUSH
16665: LD_INT 2
16667: NEG
16668: PUSH
16669: EMPTY
16670: LIST
16671: LIST
16672: PUSH
16673: LD_INT 1
16675: PUSH
16676: LD_INT 1
16678: NEG
16679: PUSH
16680: EMPTY
16681: LIST
16682: LIST
16683: PUSH
16684: LD_INT 2
16686: PUSH
16687: LD_INT 1
16689: PUSH
16690: EMPTY
16691: LIST
16692: LIST
16693: PUSH
16694: LD_INT 2
16696: PUSH
16697: LD_INT 2
16699: PUSH
16700: EMPTY
16701: LIST
16702: LIST
16703: PUSH
16704: LD_INT 1
16706: PUSH
16707: LD_INT 2
16709: PUSH
16710: EMPTY
16711: LIST
16712: LIST
16713: PUSH
16714: LD_INT 0
16716: PUSH
16717: LD_INT 2
16719: PUSH
16720: EMPTY
16721: LIST
16722: LIST
16723: PUSH
16724: LD_INT 1
16726: NEG
16727: PUSH
16728: LD_INT 1
16730: PUSH
16731: EMPTY
16732: LIST
16733: LIST
16734: PUSH
16735: LD_INT 2
16737: NEG
16738: PUSH
16739: LD_INT 1
16741: NEG
16742: PUSH
16743: EMPTY
16744: LIST
16745: LIST
16746: PUSH
16747: LD_INT 2
16749: NEG
16750: PUSH
16751: LD_INT 2
16753: NEG
16754: PUSH
16755: EMPTY
16756: LIST
16757: LIST
16758: PUSH
16759: LD_INT 2
16761: NEG
16762: PUSH
16763: LD_INT 3
16765: NEG
16766: PUSH
16767: EMPTY
16768: LIST
16769: LIST
16770: PUSH
16771: LD_INT 1
16773: NEG
16774: PUSH
16775: LD_INT 3
16777: NEG
16778: PUSH
16779: EMPTY
16780: LIST
16781: LIST
16782: PUSH
16783: LD_INT 0
16785: PUSH
16786: LD_INT 3
16788: NEG
16789: PUSH
16790: EMPTY
16791: LIST
16792: LIST
16793: PUSH
16794: LD_INT 1
16796: PUSH
16797: LD_INT 2
16799: NEG
16800: PUSH
16801: EMPTY
16802: LIST
16803: LIST
16804: PUSH
16805: LD_INT 3
16807: PUSH
16808: LD_INT 2
16810: PUSH
16811: EMPTY
16812: LIST
16813: LIST
16814: PUSH
16815: LD_INT 3
16817: PUSH
16818: LD_INT 3
16820: PUSH
16821: EMPTY
16822: LIST
16823: LIST
16824: PUSH
16825: LD_INT 2
16827: PUSH
16828: LD_INT 3
16830: PUSH
16831: EMPTY
16832: LIST
16833: LIST
16834: PUSH
16835: LD_INT 1
16837: PUSH
16838: LD_INT 3
16840: PUSH
16841: EMPTY
16842: LIST
16843: LIST
16844: PUSH
16845: LD_INT 0
16847: PUSH
16848: LD_INT 3
16850: PUSH
16851: EMPTY
16852: LIST
16853: LIST
16854: PUSH
16855: LD_INT 1
16857: NEG
16858: PUSH
16859: LD_INT 2
16861: PUSH
16862: EMPTY
16863: LIST
16864: LIST
16865: PUSH
16866: LD_INT 3
16868: NEG
16869: PUSH
16870: LD_INT 2
16872: NEG
16873: PUSH
16874: EMPTY
16875: LIST
16876: LIST
16877: PUSH
16878: LD_INT 3
16880: NEG
16881: PUSH
16882: LD_INT 3
16884: NEG
16885: PUSH
16886: EMPTY
16887: LIST
16888: LIST
16889: PUSH
16890: EMPTY
16891: LIST
16892: LIST
16893: LIST
16894: LIST
16895: LIST
16896: LIST
16897: LIST
16898: LIST
16899: LIST
16900: LIST
16901: LIST
16902: LIST
16903: LIST
16904: LIST
16905: LIST
16906: LIST
16907: LIST
16908: LIST
16909: LIST
16910: LIST
16911: LIST
16912: LIST
16913: LIST
16914: LIST
16915: LIST
16916: LIST
16917: LIST
16918: LIST
16919: LIST
16920: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16921: LD_ADDR_VAR 0 46
16925: PUSH
16926: LD_INT 0
16928: PUSH
16929: LD_INT 0
16931: PUSH
16932: EMPTY
16933: LIST
16934: LIST
16935: PUSH
16936: LD_INT 0
16938: PUSH
16939: LD_INT 1
16941: NEG
16942: PUSH
16943: EMPTY
16944: LIST
16945: LIST
16946: PUSH
16947: LD_INT 1
16949: PUSH
16950: LD_INT 0
16952: PUSH
16953: EMPTY
16954: LIST
16955: LIST
16956: PUSH
16957: LD_INT 1
16959: PUSH
16960: LD_INT 1
16962: PUSH
16963: EMPTY
16964: LIST
16965: LIST
16966: PUSH
16967: LD_INT 0
16969: PUSH
16970: LD_INT 1
16972: PUSH
16973: EMPTY
16974: LIST
16975: LIST
16976: PUSH
16977: LD_INT 1
16979: NEG
16980: PUSH
16981: LD_INT 0
16983: PUSH
16984: EMPTY
16985: LIST
16986: LIST
16987: PUSH
16988: LD_INT 1
16990: NEG
16991: PUSH
16992: LD_INT 1
16994: NEG
16995: PUSH
16996: EMPTY
16997: LIST
16998: LIST
16999: PUSH
17000: LD_INT 1
17002: NEG
17003: PUSH
17004: LD_INT 2
17006: NEG
17007: PUSH
17008: EMPTY
17009: LIST
17010: LIST
17011: PUSH
17012: LD_INT 0
17014: PUSH
17015: LD_INT 2
17017: NEG
17018: PUSH
17019: EMPTY
17020: LIST
17021: LIST
17022: PUSH
17023: LD_INT 1
17025: PUSH
17026: LD_INT 1
17028: NEG
17029: PUSH
17030: EMPTY
17031: LIST
17032: LIST
17033: PUSH
17034: LD_INT 2
17036: PUSH
17037: LD_INT 0
17039: PUSH
17040: EMPTY
17041: LIST
17042: LIST
17043: PUSH
17044: LD_INT 2
17046: PUSH
17047: LD_INT 1
17049: PUSH
17050: EMPTY
17051: LIST
17052: LIST
17053: PUSH
17054: LD_INT 1
17056: PUSH
17057: LD_INT 2
17059: PUSH
17060: EMPTY
17061: LIST
17062: LIST
17063: PUSH
17064: LD_INT 0
17066: PUSH
17067: LD_INT 2
17069: PUSH
17070: EMPTY
17071: LIST
17072: LIST
17073: PUSH
17074: LD_INT 1
17076: NEG
17077: PUSH
17078: LD_INT 1
17080: PUSH
17081: EMPTY
17082: LIST
17083: LIST
17084: PUSH
17085: LD_INT 2
17087: NEG
17088: PUSH
17089: LD_INT 0
17091: PUSH
17092: EMPTY
17093: LIST
17094: LIST
17095: PUSH
17096: LD_INT 2
17098: NEG
17099: PUSH
17100: LD_INT 1
17102: NEG
17103: PUSH
17104: EMPTY
17105: LIST
17106: LIST
17107: PUSH
17108: LD_INT 1
17110: NEG
17111: PUSH
17112: LD_INT 3
17114: NEG
17115: PUSH
17116: EMPTY
17117: LIST
17118: LIST
17119: PUSH
17120: LD_INT 0
17122: PUSH
17123: LD_INT 3
17125: NEG
17126: PUSH
17127: EMPTY
17128: LIST
17129: LIST
17130: PUSH
17131: LD_INT 1
17133: PUSH
17134: LD_INT 2
17136: NEG
17137: PUSH
17138: EMPTY
17139: LIST
17140: LIST
17141: PUSH
17142: LD_INT 2
17144: PUSH
17145: LD_INT 1
17147: NEG
17148: PUSH
17149: EMPTY
17150: LIST
17151: LIST
17152: PUSH
17153: LD_INT 3
17155: PUSH
17156: LD_INT 0
17158: PUSH
17159: EMPTY
17160: LIST
17161: LIST
17162: PUSH
17163: LD_INT 3
17165: PUSH
17166: LD_INT 1
17168: PUSH
17169: EMPTY
17170: LIST
17171: LIST
17172: PUSH
17173: LD_INT 1
17175: PUSH
17176: LD_INT 3
17178: PUSH
17179: EMPTY
17180: LIST
17181: LIST
17182: PUSH
17183: LD_INT 0
17185: PUSH
17186: LD_INT 3
17188: PUSH
17189: EMPTY
17190: LIST
17191: LIST
17192: PUSH
17193: LD_INT 1
17195: NEG
17196: PUSH
17197: LD_INT 2
17199: PUSH
17200: EMPTY
17201: LIST
17202: LIST
17203: PUSH
17204: LD_INT 2
17206: NEG
17207: PUSH
17208: LD_INT 1
17210: PUSH
17211: EMPTY
17212: LIST
17213: LIST
17214: PUSH
17215: LD_INT 3
17217: NEG
17218: PUSH
17219: LD_INT 0
17221: PUSH
17222: EMPTY
17223: LIST
17224: LIST
17225: PUSH
17226: LD_INT 3
17228: NEG
17229: PUSH
17230: LD_INT 1
17232: NEG
17233: PUSH
17234: EMPTY
17235: LIST
17236: LIST
17237: PUSH
17238: EMPTY
17239: LIST
17240: LIST
17241: LIST
17242: LIST
17243: LIST
17244: LIST
17245: LIST
17246: LIST
17247: LIST
17248: LIST
17249: LIST
17250: LIST
17251: LIST
17252: LIST
17253: LIST
17254: LIST
17255: LIST
17256: LIST
17257: LIST
17258: LIST
17259: LIST
17260: LIST
17261: LIST
17262: LIST
17263: LIST
17264: LIST
17265: LIST
17266: LIST
17267: LIST
17268: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17269: LD_ADDR_VAR 0 47
17273: PUSH
17274: LD_INT 0
17276: PUSH
17277: LD_INT 0
17279: PUSH
17280: EMPTY
17281: LIST
17282: LIST
17283: PUSH
17284: LD_INT 0
17286: PUSH
17287: LD_INT 1
17289: NEG
17290: PUSH
17291: EMPTY
17292: LIST
17293: LIST
17294: PUSH
17295: LD_INT 1
17297: PUSH
17298: LD_INT 0
17300: PUSH
17301: EMPTY
17302: LIST
17303: LIST
17304: PUSH
17305: LD_INT 1
17307: PUSH
17308: LD_INT 1
17310: PUSH
17311: EMPTY
17312: LIST
17313: LIST
17314: PUSH
17315: LD_INT 0
17317: PUSH
17318: LD_INT 1
17320: PUSH
17321: EMPTY
17322: LIST
17323: LIST
17324: PUSH
17325: LD_INT 1
17327: NEG
17328: PUSH
17329: LD_INT 0
17331: PUSH
17332: EMPTY
17333: LIST
17334: LIST
17335: PUSH
17336: LD_INT 1
17338: NEG
17339: PUSH
17340: LD_INT 1
17342: NEG
17343: PUSH
17344: EMPTY
17345: LIST
17346: LIST
17347: PUSH
17348: LD_INT 1
17350: NEG
17351: PUSH
17352: LD_INT 2
17354: NEG
17355: PUSH
17356: EMPTY
17357: LIST
17358: LIST
17359: PUSH
17360: LD_INT 0
17362: PUSH
17363: LD_INT 2
17365: NEG
17366: PUSH
17367: EMPTY
17368: LIST
17369: LIST
17370: PUSH
17371: LD_INT 1
17373: PUSH
17374: LD_INT 1
17376: NEG
17377: PUSH
17378: EMPTY
17379: LIST
17380: LIST
17381: PUSH
17382: LD_INT 2
17384: NEG
17385: PUSH
17386: LD_INT 1
17388: NEG
17389: PUSH
17390: EMPTY
17391: LIST
17392: LIST
17393: PUSH
17394: LD_INT 2
17396: NEG
17397: PUSH
17398: LD_INT 2
17400: NEG
17401: PUSH
17402: EMPTY
17403: LIST
17404: LIST
17405: PUSH
17406: EMPTY
17407: LIST
17408: LIST
17409: LIST
17410: LIST
17411: LIST
17412: LIST
17413: LIST
17414: LIST
17415: LIST
17416: LIST
17417: LIST
17418: LIST
17419: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17420: LD_ADDR_VAR 0 48
17424: PUSH
17425: LD_INT 0
17427: PUSH
17428: LD_INT 0
17430: PUSH
17431: EMPTY
17432: LIST
17433: LIST
17434: PUSH
17435: LD_INT 0
17437: PUSH
17438: LD_INT 1
17440: NEG
17441: PUSH
17442: EMPTY
17443: LIST
17444: LIST
17445: PUSH
17446: LD_INT 1
17448: PUSH
17449: LD_INT 0
17451: PUSH
17452: EMPTY
17453: LIST
17454: LIST
17455: PUSH
17456: LD_INT 1
17458: PUSH
17459: LD_INT 1
17461: PUSH
17462: EMPTY
17463: LIST
17464: LIST
17465: PUSH
17466: LD_INT 0
17468: PUSH
17469: LD_INT 1
17471: PUSH
17472: EMPTY
17473: LIST
17474: LIST
17475: PUSH
17476: LD_INT 1
17478: NEG
17479: PUSH
17480: LD_INT 0
17482: PUSH
17483: EMPTY
17484: LIST
17485: LIST
17486: PUSH
17487: LD_INT 1
17489: NEG
17490: PUSH
17491: LD_INT 1
17493: NEG
17494: PUSH
17495: EMPTY
17496: LIST
17497: LIST
17498: PUSH
17499: LD_INT 1
17501: NEG
17502: PUSH
17503: LD_INT 2
17505: NEG
17506: PUSH
17507: EMPTY
17508: LIST
17509: LIST
17510: PUSH
17511: LD_INT 0
17513: PUSH
17514: LD_INT 2
17516: NEG
17517: PUSH
17518: EMPTY
17519: LIST
17520: LIST
17521: PUSH
17522: LD_INT 1
17524: PUSH
17525: LD_INT 1
17527: NEG
17528: PUSH
17529: EMPTY
17530: LIST
17531: LIST
17532: PUSH
17533: LD_INT 2
17535: PUSH
17536: LD_INT 0
17538: PUSH
17539: EMPTY
17540: LIST
17541: LIST
17542: PUSH
17543: LD_INT 2
17545: PUSH
17546: LD_INT 1
17548: PUSH
17549: EMPTY
17550: LIST
17551: LIST
17552: PUSH
17553: EMPTY
17554: LIST
17555: LIST
17556: LIST
17557: LIST
17558: LIST
17559: LIST
17560: LIST
17561: LIST
17562: LIST
17563: LIST
17564: LIST
17565: LIST
17566: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17567: LD_ADDR_VAR 0 49
17571: PUSH
17572: LD_INT 0
17574: PUSH
17575: LD_INT 0
17577: PUSH
17578: EMPTY
17579: LIST
17580: LIST
17581: PUSH
17582: LD_INT 0
17584: PUSH
17585: LD_INT 1
17587: NEG
17588: PUSH
17589: EMPTY
17590: LIST
17591: LIST
17592: PUSH
17593: LD_INT 1
17595: PUSH
17596: LD_INT 0
17598: PUSH
17599: EMPTY
17600: LIST
17601: LIST
17602: PUSH
17603: LD_INT 1
17605: PUSH
17606: LD_INT 1
17608: PUSH
17609: EMPTY
17610: LIST
17611: LIST
17612: PUSH
17613: LD_INT 0
17615: PUSH
17616: LD_INT 1
17618: PUSH
17619: EMPTY
17620: LIST
17621: LIST
17622: PUSH
17623: LD_INT 1
17625: NEG
17626: PUSH
17627: LD_INT 0
17629: PUSH
17630: EMPTY
17631: LIST
17632: LIST
17633: PUSH
17634: LD_INT 1
17636: NEG
17637: PUSH
17638: LD_INT 1
17640: NEG
17641: PUSH
17642: EMPTY
17643: LIST
17644: LIST
17645: PUSH
17646: LD_INT 1
17648: PUSH
17649: LD_INT 1
17651: NEG
17652: PUSH
17653: EMPTY
17654: LIST
17655: LIST
17656: PUSH
17657: LD_INT 2
17659: PUSH
17660: LD_INT 0
17662: PUSH
17663: EMPTY
17664: LIST
17665: LIST
17666: PUSH
17667: LD_INT 2
17669: PUSH
17670: LD_INT 1
17672: PUSH
17673: EMPTY
17674: LIST
17675: LIST
17676: PUSH
17677: LD_INT 2
17679: PUSH
17680: LD_INT 2
17682: PUSH
17683: EMPTY
17684: LIST
17685: LIST
17686: PUSH
17687: LD_INT 1
17689: PUSH
17690: LD_INT 2
17692: PUSH
17693: EMPTY
17694: LIST
17695: LIST
17696: PUSH
17697: EMPTY
17698: LIST
17699: LIST
17700: LIST
17701: LIST
17702: LIST
17703: LIST
17704: LIST
17705: LIST
17706: LIST
17707: LIST
17708: LIST
17709: LIST
17710: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
17711: LD_ADDR_VAR 0 50
17715: PUSH
17716: LD_INT 0
17718: PUSH
17719: LD_INT 0
17721: PUSH
17722: EMPTY
17723: LIST
17724: LIST
17725: PUSH
17726: LD_INT 0
17728: PUSH
17729: LD_INT 1
17731: NEG
17732: PUSH
17733: EMPTY
17734: LIST
17735: LIST
17736: PUSH
17737: LD_INT 1
17739: PUSH
17740: LD_INT 0
17742: PUSH
17743: EMPTY
17744: LIST
17745: LIST
17746: PUSH
17747: LD_INT 1
17749: PUSH
17750: LD_INT 1
17752: PUSH
17753: EMPTY
17754: LIST
17755: LIST
17756: PUSH
17757: LD_INT 0
17759: PUSH
17760: LD_INT 1
17762: PUSH
17763: EMPTY
17764: LIST
17765: LIST
17766: PUSH
17767: LD_INT 1
17769: NEG
17770: PUSH
17771: LD_INT 0
17773: PUSH
17774: EMPTY
17775: LIST
17776: LIST
17777: PUSH
17778: LD_INT 1
17780: NEG
17781: PUSH
17782: LD_INT 1
17784: NEG
17785: PUSH
17786: EMPTY
17787: LIST
17788: LIST
17789: PUSH
17790: LD_INT 2
17792: PUSH
17793: LD_INT 1
17795: PUSH
17796: EMPTY
17797: LIST
17798: LIST
17799: PUSH
17800: LD_INT 2
17802: PUSH
17803: LD_INT 2
17805: PUSH
17806: EMPTY
17807: LIST
17808: LIST
17809: PUSH
17810: LD_INT 1
17812: PUSH
17813: LD_INT 2
17815: PUSH
17816: EMPTY
17817: LIST
17818: LIST
17819: PUSH
17820: LD_INT 0
17822: PUSH
17823: LD_INT 2
17825: PUSH
17826: EMPTY
17827: LIST
17828: LIST
17829: PUSH
17830: LD_INT 1
17832: NEG
17833: PUSH
17834: LD_INT 1
17836: PUSH
17837: EMPTY
17838: LIST
17839: LIST
17840: PUSH
17841: EMPTY
17842: LIST
17843: LIST
17844: LIST
17845: LIST
17846: LIST
17847: LIST
17848: LIST
17849: LIST
17850: LIST
17851: LIST
17852: LIST
17853: LIST
17854: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
17855: LD_ADDR_VAR 0 51
17859: PUSH
17860: LD_INT 0
17862: PUSH
17863: LD_INT 0
17865: PUSH
17866: EMPTY
17867: LIST
17868: LIST
17869: PUSH
17870: LD_INT 0
17872: PUSH
17873: LD_INT 1
17875: NEG
17876: PUSH
17877: EMPTY
17878: LIST
17879: LIST
17880: PUSH
17881: LD_INT 1
17883: PUSH
17884: LD_INT 0
17886: PUSH
17887: EMPTY
17888: LIST
17889: LIST
17890: PUSH
17891: LD_INT 1
17893: PUSH
17894: LD_INT 1
17896: PUSH
17897: EMPTY
17898: LIST
17899: LIST
17900: PUSH
17901: LD_INT 0
17903: PUSH
17904: LD_INT 1
17906: PUSH
17907: EMPTY
17908: LIST
17909: LIST
17910: PUSH
17911: LD_INT 1
17913: NEG
17914: PUSH
17915: LD_INT 0
17917: PUSH
17918: EMPTY
17919: LIST
17920: LIST
17921: PUSH
17922: LD_INT 1
17924: NEG
17925: PUSH
17926: LD_INT 1
17928: NEG
17929: PUSH
17930: EMPTY
17931: LIST
17932: LIST
17933: PUSH
17934: LD_INT 1
17936: PUSH
17937: LD_INT 2
17939: PUSH
17940: EMPTY
17941: LIST
17942: LIST
17943: PUSH
17944: LD_INT 0
17946: PUSH
17947: LD_INT 2
17949: PUSH
17950: EMPTY
17951: LIST
17952: LIST
17953: PUSH
17954: LD_INT 1
17956: NEG
17957: PUSH
17958: LD_INT 1
17960: PUSH
17961: EMPTY
17962: LIST
17963: LIST
17964: PUSH
17965: LD_INT 2
17967: NEG
17968: PUSH
17969: LD_INT 0
17971: PUSH
17972: EMPTY
17973: LIST
17974: LIST
17975: PUSH
17976: LD_INT 2
17978: NEG
17979: PUSH
17980: LD_INT 1
17982: NEG
17983: PUSH
17984: EMPTY
17985: LIST
17986: LIST
17987: PUSH
17988: EMPTY
17989: LIST
17990: LIST
17991: LIST
17992: LIST
17993: LIST
17994: LIST
17995: LIST
17996: LIST
17997: LIST
17998: LIST
17999: LIST
18000: LIST
18001: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18002: LD_ADDR_VAR 0 52
18006: PUSH
18007: LD_INT 0
18009: PUSH
18010: LD_INT 0
18012: PUSH
18013: EMPTY
18014: LIST
18015: LIST
18016: PUSH
18017: LD_INT 0
18019: PUSH
18020: LD_INT 1
18022: NEG
18023: PUSH
18024: EMPTY
18025: LIST
18026: LIST
18027: PUSH
18028: LD_INT 1
18030: PUSH
18031: LD_INT 0
18033: PUSH
18034: EMPTY
18035: LIST
18036: LIST
18037: PUSH
18038: LD_INT 1
18040: PUSH
18041: LD_INT 1
18043: PUSH
18044: EMPTY
18045: LIST
18046: LIST
18047: PUSH
18048: LD_INT 0
18050: PUSH
18051: LD_INT 1
18053: PUSH
18054: EMPTY
18055: LIST
18056: LIST
18057: PUSH
18058: LD_INT 1
18060: NEG
18061: PUSH
18062: LD_INT 0
18064: PUSH
18065: EMPTY
18066: LIST
18067: LIST
18068: PUSH
18069: LD_INT 1
18071: NEG
18072: PUSH
18073: LD_INT 1
18075: NEG
18076: PUSH
18077: EMPTY
18078: LIST
18079: LIST
18080: PUSH
18081: LD_INT 1
18083: NEG
18084: PUSH
18085: LD_INT 2
18087: NEG
18088: PUSH
18089: EMPTY
18090: LIST
18091: LIST
18092: PUSH
18093: LD_INT 1
18095: NEG
18096: PUSH
18097: LD_INT 1
18099: PUSH
18100: EMPTY
18101: LIST
18102: LIST
18103: PUSH
18104: LD_INT 2
18106: NEG
18107: PUSH
18108: LD_INT 0
18110: PUSH
18111: EMPTY
18112: LIST
18113: LIST
18114: PUSH
18115: LD_INT 2
18117: NEG
18118: PUSH
18119: LD_INT 1
18121: NEG
18122: PUSH
18123: EMPTY
18124: LIST
18125: LIST
18126: PUSH
18127: LD_INT 2
18129: NEG
18130: PUSH
18131: LD_INT 2
18133: NEG
18134: PUSH
18135: EMPTY
18136: LIST
18137: LIST
18138: PUSH
18139: EMPTY
18140: LIST
18141: LIST
18142: LIST
18143: LIST
18144: LIST
18145: LIST
18146: LIST
18147: LIST
18148: LIST
18149: LIST
18150: LIST
18151: LIST
18152: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18153: LD_ADDR_VAR 0 53
18157: PUSH
18158: LD_INT 0
18160: PUSH
18161: LD_INT 0
18163: PUSH
18164: EMPTY
18165: LIST
18166: LIST
18167: PUSH
18168: LD_INT 0
18170: PUSH
18171: LD_INT 1
18173: NEG
18174: PUSH
18175: EMPTY
18176: LIST
18177: LIST
18178: PUSH
18179: LD_INT 1
18181: PUSH
18182: LD_INT 0
18184: PUSH
18185: EMPTY
18186: LIST
18187: LIST
18188: PUSH
18189: LD_INT 1
18191: PUSH
18192: LD_INT 1
18194: PUSH
18195: EMPTY
18196: LIST
18197: LIST
18198: PUSH
18199: LD_INT 0
18201: PUSH
18202: LD_INT 1
18204: PUSH
18205: EMPTY
18206: LIST
18207: LIST
18208: PUSH
18209: LD_INT 1
18211: NEG
18212: PUSH
18213: LD_INT 0
18215: PUSH
18216: EMPTY
18217: LIST
18218: LIST
18219: PUSH
18220: LD_INT 1
18222: NEG
18223: PUSH
18224: LD_INT 1
18226: NEG
18227: PUSH
18228: EMPTY
18229: LIST
18230: LIST
18231: PUSH
18232: LD_INT 1
18234: NEG
18235: PUSH
18236: LD_INT 2
18238: NEG
18239: PUSH
18240: EMPTY
18241: LIST
18242: LIST
18243: PUSH
18244: LD_INT 0
18246: PUSH
18247: LD_INT 2
18249: NEG
18250: PUSH
18251: EMPTY
18252: LIST
18253: LIST
18254: PUSH
18255: LD_INT 1
18257: PUSH
18258: LD_INT 1
18260: NEG
18261: PUSH
18262: EMPTY
18263: LIST
18264: LIST
18265: PUSH
18266: LD_INT 2
18268: PUSH
18269: LD_INT 0
18271: PUSH
18272: EMPTY
18273: LIST
18274: LIST
18275: PUSH
18276: LD_INT 2
18278: PUSH
18279: LD_INT 1
18281: PUSH
18282: EMPTY
18283: LIST
18284: LIST
18285: PUSH
18286: LD_INT 2
18288: PUSH
18289: LD_INT 2
18291: PUSH
18292: EMPTY
18293: LIST
18294: LIST
18295: PUSH
18296: LD_INT 1
18298: PUSH
18299: LD_INT 2
18301: PUSH
18302: EMPTY
18303: LIST
18304: LIST
18305: PUSH
18306: LD_INT 0
18308: PUSH
18309: LD_INT 2
18311: PUSH
18312: EMPTY
18313: LIST
18314: LIST
18315: PUSH
18316: LD_INT 1
18318: NEG
18319: PUSH
18320: LD_INT 1
18322: PUSH
18323: EMPTY
18324: LIST
18325: LIST
18326: PUSH
18327: LD_INT 2
18329: NEG
18330: PUSH
18331: LD_INT 0
18333: PUSH
18334: EMPTY
18335: LIST
18336: LIST
18337: PUSH
18338: LD_INT 2
18340: NEG
18341: PUSH
18342: LD_INT 1
18344: NEG
18345: PUSH
18346: EMPTY
18347: LIST
18348: LIST
18349: PUSH
18350: LD_INT 2
18352: NEG
18353: PUSH
18354: LD_INT 2
18356: NEG
18357: PUSH
18358: EMPTY
18359: LIST
18360: LIST
18361: PUSH
18362: EMPTY
18363: LIST
18364: LIST
18365: LIST
18366: LIST
18367: LIST
18368: LIST
18369: LIST
18370: LIST
18371: LIST
18372: LIST
18373: LIST
18374: LIST
18375: LIST
18376: LIST
18377: LIST
18378: LIST
18379: LIST
18380: LIST
18381: LIST
18382: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18383: LD_ADDR_VAR 0 54
18387: PUSH
18388: LD_INT 0
18390: PUSH
18391: LD_INT 0
18393: PUSH
18394: EMPTY
18395: LIST
18396: LIST
18397: PUSH
18398: LD_INT 0
18400: PUSH
18401: LD_INT 1
18403: NEG
18404: PUSH
18405: EMPTY
18406: LIST
18407: LIST
18408: PUSH
18409: LD_INT 1
18411: PUSH
18412: LD_INT 0
18414: PUSH
18415: EMPTY
18416: LIST
18417: LIST
18418: PUSH
18419: LD_INT 1
18421: PUSH
18422: LD_INT 1
18424: PUSH
18425: EMPTY
18426: LIST
18427: LIST
18428: PUSH
18429: LD_INT 0
18431: PUSH
18432: LD_INT 1
18434: PUSH
18435: EMPTY
18436: LIST
18437: LIST
18438: PUSH
18439: LD_INT 1
18441: NEG
18442: PUSH
18443: LD_INT 0
18445: PUSH
18446: EMPTY
18447: LIST
18448: LIST
18449: PUSH
18450: LD_INT 1
18452: NEG
18453: PUSH
18454: LD_INT 1
18456: NEG
18457: PUSH
18458: EMPTY
18459: LIST
18460: LIST
18461: PUSH
18462: LD_INT 1
18464: NEG
18465: PUSH
18466: LD_INT 2
18468: NEG
18469: PUSH
18470: EMPTY
18471: LIST
18472: LIST
18473: PUSH
18474: LD_INT 0
18476: PUSH
18477: LD_INT 2
18479: NEG
18480: PUSH
18481: EMPTY
18482: LIST
18483: LIST
18484: PUSH
18485: LD_INT 1
18487: PUSH
18488: LD_INT 1
18490: NEG
18491: PUSH
18492: EMPTY
18493: LIST
18494: LIST
18495: PUSH
18496: LD_INT 2
18498: PUSH
18499: LD_INT 0
18501: PUSH
18502: EMPTY
18503: LIST
18504: LIST
18505: PUSH
18506: LD_INT 2
18508: PUSH
18509: LD_INT 1
18511: PUSH
18512: EMPTY
18513: LIST
18514: LIST
18515: PUSH
18516: LD_INT 2
18518: PUSH
18519: LD_INT 2
18521: PUSH
18522: EMPTY
18523: LIST
18524: LIST
18525: PUSH
18526: LD_INT 1
18528: PUSH
18529: LD_INT 2
18531: PUSH
18532: EMPTY
18533: LIST
18534: LIST
18535: PUSH
18536: LD_INT 0
18538: PUSH
18539: LD_INT 2
18541: PUSH
18542: EMPTY
18543: LIST
18544: LIST
18545: PUSH
18546: LD_INT 1
18548: NEG
18549: PUSH
18550: LD_INT 1
18552: PUSH
18553: EMPTY
18554: LIST
18555: LIST
18556: PUSH
18557: LD_INT 2
18559: NEG
18560: PUSH
18561: LD_INT 0
18563: PUSH
18564: EMPTY
18565: LIST
18566: LIST
18567: PUSH
18568: LD_INT 2
18570: NEG
18571: PUSH
18572: LD_INT 1
18574: NEG
18575: PUSH
18576: EMPTY
18577: LIST
18578: LIST
18579: PUSH
18580: LD_INT 2
18582: NEG
18583: PUSH
18584: LD_INT 2
18586: NEG
18587: PUSH
18588: EMPTY
18589: LIST
18590: LIST
18591: PUSH
18592: EMPTY
18593: LIST
18594: LIST
18595: LIST
18596: LIST
18597: LIST
18598: LIST
18599: LIST
18600: LIST
18601: LIST
18602: LIST
18603: LIST
18604: LIST
18605: LIST
18606: LIST
18607: LIST
18608: LIST
18609: LIST
18610: LIST
18611: LIST
18612: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18613: LD_ADDR_VAR 0 55
18617: PUSH
18618: LD_INT 0
18620: PUSH
18621: LD_INT 0
18623: PUSH
18624: EMPTY
18625: LIST
18626: LIST
18627: PUSH
18628: LD_INT 0
18630: PUSH
18631: LD_INT 1
18633: NEG
18634: PUSH
18635: EMPTY
18636: LIST
18637: LIST
18638: PUSH
18639: LD_INT 1
18641: PUSH
18642: LD_INT 0
18644: PUSH
18645: EMPTY
18646: LIST
18647: LIST
18648: PUSH
18649: LD_INT 1
18651: PUSH
18652: LD_INT 1
18654: PUSH
18655: EMPTY
18656: LIST
18657: LIST
18658: PUSH
18659: LD_INT 0
18661: PUSH
18662: LD_INT 1
18664: PUSH
18665: EMPTY
18666: LIST
18667: LIST
18668: PUSH
18669: LD_INT 1
18671: NEG
18672: PUSH
18673: LD_INT 0
18675: PUSH
18676: EMPTY
18677: LIST
18678: LIST
18679: PUSH
18680: LD_INT 1
18682: NEG
18683: PUSH
18684: LD_INT 1
18686: NEG
18687: PUSH
18688: EMPTY
18689: LIST
18690: LIST
18691: PUSH
18692: LD_INT 1
18694: NEG
18695: PUSH
18696: LD_INT 2
18698: NEG
18699: PUSH
18700: EMPTY
18701: LIST
18702: LIST
18703: PUSH
18704: LD_INT 0
18706: PUSH
18707: LD_INT 2
18709: NEG
18710: PUSH
18711: EMPTY
18712: LIST
18713: LIST
18714: PUSH
18715: LD_INT 1
18717: PUSH
18718: LD_INT 1
18720: NEG
18721: PUSH
18722: EMPTY
18723: LIST
18724: LIST
18725: PUSH
18726: LD_INT 2
18728: PUSH
18729: LD_INT 0
18731: PUSH
18732: EMPTY
18733: LIST
18734: LIST
18735: PUSH
18736: LD_INT 2
18738: PUSH
18739: LD_INT 1
18741: PUSH
18742: EMPTY
18743: LIST
18744: LIST
18745: PUSH
18746: LD_INT 2
18748: PUSH
18749: LD_INT 2
18751: PUSH
18752: EMPTY
18753: LIST
18754: LIST
18755: PUSH
18756: LD_INT 1
18758: PUSH
18759: LD_INT 2
18761: PUSH
18762: EMPTY
18763: LIST
18764: LIST
18765: PUSH
18766: LD_INT 0
18768: PUSH
18769: LD_INT 2
18771: PUSH
18772: EMPTY
18773: LIST
18774: LIST
18775: PUSH
18776: LD_INT 1
18778: NEG
18779: PUSH
18780: LD_INT 1
18782: PUSH
18783: EMPTY
18784: LIST
18785: LIST
18786: PUSH
18787: LD_INT 2
18789: NEG
18790: PUSH
18791: LD_INT 0
18793: PUSH
18794: EMPTY
18795: LIST
18796: LIST
18797: PUSH
18798: LD_INT 2
18800: NEG
18801: PUSH
18802: LD_INT 1
18804: NEG
18805: PUSH
18806: EMPTY
18807: LIST
18808: LIST
18809: PUSH
18810: LD_INT 2
18812: NEG
18813: PUSH
18814: LD_INT 2
18816: NEG
18817: PUSH
18818: EMPTY
18819: LIST
18820: LIST
18821: PUSH
18822: EMPTY
18823: LIST
18824: LIST
18825: LIST
18826: LIST
18827: LIST
18828: LIST
18829: LIST
18830: LIST
18831: LIST
18832: LIST
18833: LIST
18834: LIST
18835: LIST
18836: LIST
18837: LIST
18838: LIST
18839: LIST
18840: LIST
18841: LIST
18842: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18843: LD_ADDR_VAR 0 56
18847: PUSH
18848: LD_INT 0
18850: PUSH
18851: LD_INT 0
18853: PUSH
18854: EMPTY
18855: LIST
18856: LIST
18857: PUSH
18858: LD_INT 0
18860: PUSH
18861: LD_INT 1
18863: NEG
18864: PUSH
18865: EMPTY
18866: LIST
18867: LIST
18868: PUSH
18869: LD_INT 1
18871: PUSH
18872: LD_INT 0
18874: PUSH
18875: EMPTY
18876: LIST
18877: LIST
18878: PUSH
18879: LD_INT 1
18881: PUSH
18882: LD_INT 1
18884: PUSH
18885: EMPTY
18886: LIST
18887: LIST
18888: PUSH
18889: LD_INT 0
18891: PUSH
18892: LD_INT 1
18894: PUSH
18895: EMPTY
18896: LIST
18897: LIST
18898: PUSH
18899: LD_INT 1
18901: NEG
18902: PUSH
18903: LD_INT 0
18905: PUSH
18906: EMPTY
18907: LIST
18908: LIST
18909: PUSH
18910: LD_INT 1
18912: NEG
18913: PUSH
18914: LD_INT 1
18916: NEG
18917: PUSH
18918: EMPTY
18919: LIST
18920: LIST
18921: PUSH
18922: LD_INT 1
18924: NEG
18925: PUSH
18926: LD_INT 2
18928: NEG
18929: PUSH
18930: EMPTY
18931: LIST
18932: LIST
18933: PUSH
18934: LD_INT 0
18936: PUSH
18937: LD_INT 2
18939: NEG
18940: PUSH
18941: EMPTY
18942: LIST
18943: LIST
18944: PUSH
18945: LD_INT 1
18947: PUSH
18948: LD_INT 1
18950: NEG
18951: PUSH
18952: EMPTY
18953: LIST
18954: LIST
18955: PUSH
18956: LD_INT 2
18958: PUSH
18959: LD_INT 0
18961: PUSH
18962: EMPTY
18963: LIST
18964: LIST
18965: PUSH
18966: LD_INT 2
18968: PUSH
18969: LD_INT 1
18971: PUSH
18972: EMPTY
18973: LIST
18974: LIST
18975: PUSH
18976: LD_INT 2
18978: PUSH
18979: LD_INT 2
18981: PUSH
18982: EMPTY
18983: LIST
18984: LIST
18985: PUSH
18986: LD_INT 1
18988: PUSH
18989: LD_INT 2
18991: PUSH
18992: EMPTY
18993: LIST
18994: LIST
18995: PUSH
18996: LD_INT 0
18998: PUSH
18999: LD_INT 2
19001: PUSH
19002: EMPTY
19003: LIST
19004: LIST
19005: PUSH
19006: LD_INT 1
19008: NEG
19009: PUSH
19010: LD_INT 1
19012: PUSH
19013: EMPTY
19014: LIST
19015: LIST
19016: PUSH
19017: LD_INT 2
19019: NEG
19020: PUSH
19021: LD_INT 0
19023: PUSH
19024: EMPTY
19025: LIST
19026: LIST
19027: PUSH
19028: LD_INT 2
19030: NEG
19031: PUSH
19032: LD_INT 1
19034: NEG
19035: PUSH
19036: EMPTY
19037: LIST
19038: LIST
19039: PUSH
19040: LD_INT 2
19042: NEG
19043: PUSH
19044: LD_INT 2
19046: NEG
19047: PUSH
19048: EMPTY
19049: LIST
19050: LIST
19051: PUSH
19052: EMPTY
19053: LIST
19054: LIST
19055: LIST
19056: LIST
19057: LIST
19058: LIST
19059: LIST
19060: LIST
19061: LIST
19062: LIST
19063: LIST
19064: LIST
19065: LIST
19066: LIST
19067: LIST
19068: LIST
19069: LIST
19070: LIST
19071: LIST
19072: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19073: LD_ADDR_VAR 0 57
19077: PUSH
19078: LD_INT 0
19080: PUSH
19081: LD_INT 0
19083: PUSH
19084: EMPTY
19085: LIST
19086: LIST
19087: PUSH
19088: LD_INT 0
19090: PUSH
19091: LD_INT 1
19093: NEG
19094: PUSH
19095: EMPTY
19096: LIST
19097: LIST
19098: PUSH
19099: LD_INT 1
19101: PUSH
19102: LD_INT 0
19104: PUSH
19105: EMPTY
19106: LIST
19107: LIST
19108: PUSH
19109: LD_INT 1
19111: PUSH
19112: LD_INT 1
19114: PUSH
19115: EMPTY
19116: LIST
19117: LIST
19118: PUSH
19119: LD_INT 0
19121: PUSH
19122: LD_INT 1
19124: PUSH
19125: EMPTY
19126: LIST
19127: LIST
19128: PUSH
19129: LD_INT 1
19131: NEG
19132: PUSH
19133: LD_INT 0
19135: PUSH
19136: EMPTY
19137: LIST
19138: LIST
19139: PUSH
19140: LD_INT 1
19142: NEG
19143: PUSH
19144: LD_INT 1
19146: NEG
19147: PUSH
19148: EMPTY
19149: LIST
19150: LIST
19151: PUSH
19152: LD_INT 1
19154: NEG
19155: PUSH
19156: LD_INT 2
19158: NEG
19159: PUSH
19160: EMPTY
19161: LIST
19162: LIST
19163: PUSH
19164: LD_INT 0
19166: PUSH
19167: LD_INT 2
19169: NEG
19170: PUSH
19171: EMPTY
19172: LIST
19173: LIST
19174: PUSH
19175: LD_INT 1
19177: PUSH
19178: LD_INT 1
19180: NEG
19181: PUSH
19182: EMPTY
19183: LIST
19184: LIST
19185: PUSH
19186: LD_INT 2
19188: PUSH
19189: LD_INT 0
19191: PUSH
19192: EMPTY
19193: LIST
19194: LIST
19195: PUSH
19196: LD_INT 2
19198: PUSH
19199: LD_INT 1
19201: PUSH
19202: EMPTY
19203: LIST
19204: LIST
19205: PUSH
19206: LD_INT 2
19208: PUSH
19209: LD_INT 2
19211: PUSH
19212: EMPTY
19213: LIST
19214: LIST
19215: PUSH
19216: LD_INT 1
19218: PUSH
19219: LD_INT 2
19221: PUSH
19222: EMPTY
19223: LIST
19224: LIST
19225: PUSH
19226: LD_INT 0
19228: PUSH
19229: LD_INT 2
19231: PUSH
19232: EMPTY
19233: LIST
19234: LIST
19235: PUSH
19236: LD_INT 1
19238: NEG
19239: PUSH
19240: LD_INT 1
19242: PUSH
19243: EMPTY
19244: LIST
19245: LIST
19246: PUSH
19247: LD_INT 2
19249: NEG
19250: PUSH
19251: LD_INT 0
19253: PUSH
19254: EMPTY
19255: LIST
19256: LIST
19257: PUSH
19258: LD_INT 2
19260: NEG
19261: PUSH
19262: LD_INT 1
19264: NEG
19265: PUSH
19266: EMPTY
19267: LIST
19268: LIST
19269: PUSH
19270: LD_INT 2
19272: NEG
19273: PUSH
19274: LD_INT 2
19276: NEG
19277: PUSH
19278: EMPTY
19279: LIST
19280: LIST
19281: PUSH
19282: EMPTY
19283: LIST
19284: LIST
19285: LIST
19286: LIST
19287: LIST
19288: LIST
19289: LIST
19290: LIST
19291: LIST
19292: LIST
19293: LIST
19294: LIST
19295: LIST
19296: LIST
19297: LIST
19298: LIST
19299: LIST
19300: LIST
19301: LIST
19302: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19303: LD_ADDR_VAR 0 58
19307: PUSH
19308: LD_INT 0
19310: PUSH
19311: LD_INT 0
19313: PUSH
19314: EMPTY
19315: LIST
19316: LIST
19317: PUSH
19318: LD_INT 0
19320: PUSH
19321: LD_INT 1
19323: NEG
19324: PUSH
19325: EMPTY
19326: LIST
19327: LIST
19328: PUSH
19329: LD_INT 1
19331: PUSH
19332: LD_INT 0
19334: PUSH
19335: EMPTY
19336: LIST
19337: LIST
19338: PUSH
19339: LD_INT 1
19341: PUSH
19342: LD_INT 1
19344: PUSH
19345: EMPTY
19346: LIST
19347: LIST
19348: PUSH
19349: LD_INT 0
19351: PUSH
19352: LD_INT 1
19354: PUSH
19355: EMPTY
19356: LIST
19357: LIST
19358: PUSH
19359: LD_INT 1
19361: NEG
19362: PUSH
19363: LD_INT 0
19365: PUSH
19366: EMPTY
19367: LIST
19368: LIST
19369: PUSH
19370: LD_INT 1
19372: NEG
19373: PUSH
19374: LD_INT 1
19376: NEG
19377: PUSH
19378: EMPTY
19379: LIST
19380: LIST
19381: PUSH
19382: LD_INT 1
19384: NEG
19385: PUSH
19386: LD_INT 2
19388: NEG
19389: PUSH
19390: EMPTY
19391: LIST
19392: LIST
19393: PUSH
19394: LD_INT 0
19396: PUSH
19397: LD_INT 2
19399: NEG
19400: PUSH
19401: EMPTY
19402: LIST
19403: LIST
19404: PUSH
19405: LD_INT 1
19407: PUSH
19408: LD_INT 1
19410: NEG
19411: PUSH
19412: EMPTY
19413: LIST
19414: LIST
19415: PUSH
19416: LD_INT 2
19418: PUSH
19419: LD_INT 0
19421: PUSH
19422: EMPTY
19423: LIST
19424: LIST
19425: PUSH
19426: LD_INT 2
19428: PUSH
19429: LD_INT 1
19431: PUSH
19432: EMPTY
19433: LIST
19434: LIST
19435: PUSH
19436: LD_INT 2
19438: PUSH
19439: LD_INT 2
19441: PUSH
19442: EMPTY
19443: LIST
19444: LIST
19445: PUSH
19446: LD_INT 1
19448: PUSH
19449: LD_INT 2
19451: PUSH
19452: EMPTY
19453: LIST
19454: LIST
19455: PUSH
19456: LD_INT 0
19458: PUSH
19459: LD_INT 2
19461: PUSH
19462: EMPTY
19463: LIST
19464: LIST
19465: PUSH
19466: LD_INT 1
19468: NEG
19469: PUSH
19470: LD_INT 1
19472: PUSH
19473: EMPTY
19474: LIST
19475: LIST
19476: PUSH
19477: LD_INT 2
19479: NEG
19480: PUSH
19481: LD_INT 0
19483: PUSH
19484: EMPTY
19485: LIST
19486: LIST
19487: PUSH
19488: LD_INT 2
19490: NEG
19491: PUSH
19492: LD_INT 1
19494: NEG
19495: PUSH
19496: EMPTY
19497: LIST
19498: LIST
19499: PUSH
19500: LD_INT 2
19502: NEG
19503: PUSH
19504: LD_INT 2
19506: NEG
19507: PUSH
19508: EMPTY
19509: LIST
19510: LIST
19511: PUSH
19512: EMPTY
19513: LIST
19514: LIST
19515: LIST
19516: LIST
19517: LIST
19518: LIST
19519: LIST
19520: LIST
19521: LIST
19522: LIST
19523: LIST
19524: LIST
19525: LIST
19526: LIST
19527: LIST
19528: LIST
19529: LIST
19530: LIST
19531: LIST
19532: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19533: LD_ADDR_VAR 0 59
19537: PUSH
19538: LD_INT 0
19540: PUSH
19541: LD_INT 0
19543: PUSH
19544: EMPTY
19545: LIST
19546: LIST
19547: PUSH
19548: LD_INT 0
19550: PUSH
19551: LD_INT 1
19553: NEG
19554: PUSH
19555: EMPTY
19556: LIST
19557: LIST
19558: PUSH
19559: LD_INT 1
19561: PUSH
19562: LD_INT 0
19564: PUSH
19565: EMPTY
19566: LIST
19567: LIST
19568: PUSH
19569: LD_INT 1
19571: PUSH
19572: LD_INT 1
19574: PUSH
19575: EMPTY
19576: LIST
19577: LIST
19578: PUSH
19579: LD_INT 0
19581: PUSH
19582: LD_INT 1
19584: PUSH
19585: EMPTY
19586: LIST
19587: LIST
19588: PUSH
19589: LD_INT 1
19591: NEG
19592: PUSH
19593: LD_INT 0
19595: PUSH
19596: EMPTY
19597: LIST
19598: LIST
19599: PUSH
19600: LD_INT 1
19602: NEG
19603: PUSH
19604: LD_INT 1
19606: NEG
19607: PUSH
19608: EMPTY
19609: LIST
19610: LIST
19611: PUSH
19612: EMPTY
19613: LIST
19614: LIST
19615: LIST
19616: LIST
19617: LIST
19618: LIST
19619: LIST
19620: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19621: LD_ADDR_VAR 0 60
19625: PUSH
19626: LD_INT 0
19628: PUSH
19629: LD_INT 0
19631: PUSH
19632: EMPTY
19633: LIST
19634: LIST
19635: PUSH
19636: LD_INT 0
19638: PUSH
19639: LD_INT 1
19641: NEG
19642: PUSH
19643: EMPTY
19644: LIST
19645: LIST
19646: PUSH
19647: LD_INT 1
19649: PUSH
19650: LD_INT 0
19652: PUSH
19653: EMPTY
19654: LIST
19655: LIST
19656: PUSH
19657: LD_INT 1
19659: PUSH
19660: LD_INT 1
19662: PUSH
19663: EMPTY
19664: LIST
19665: LIST
19666: PUSH
19667: LD_INT 0
19669: PUSH
19670: LD_INT 1
19672: PUSH
19673: EMPTY
19674: LIST
19675: LIST
19676: PUSH
19677: LD_INT 1
19679: NEG
19680: PUSH
19681: LD_INT 0
19683: PUSH
19684: EMPTY
19685: LIST
19686: LIST
19687: PUSH
19688: LD_INT 1
19690: NEG
19691: PUSH
19692: LD_INT 1
19694: NEG
19695: PUSH
19696: EMPTY
19697: LIST
19698: LIST
19699: PUSH
19700: EMPTY
19701: LIST
19702: LIST
19703: LIST
19704: LIST
19705: LIST
19706: LIST
19707: LIST
19708: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19709: LD_ADDR_VAR 0 61
19713: PUSH
19714: LD_INT 0
19716: PUSH
19717: LD_INT 0
19719: PUSH
19720: EMPTY
19721: LIST
19722: LIST
19723: PUSH
19724: LD_INT 0
19726: PUSH
19727: LD_INT 1
19729: NEG
19730: PUSH
19731: EMPTY
19732: LIST
19733: LIST
19734: PUSH
19735: LD_INT 1
19737: PUSH
19738: LD_INT 0
19740: PUSH
19741: EMPTY
19742: LIST
19743: LIST
19744: PUSH
19745: LD_INT 1
19747: PUSH
19748: LD_INT 1
19750: PUSH
19751: EMPTY
19752: LIST
19753: LIST
19754: PUSH
19755: LD_INT 0
19757: PUSH
19758: LD_INT 1
19760: PUSH
19761: EMPTY
19762: LIST
19763: LIST
19764: PUSH
19765: LD_INT 1
19767: NEG
19768: PUSH
19769: LD_INT 0
19771: PUSH
19772: EMPTY
19773: LIST
19774: LIST
19775: PUSH
19776: LD_INT 1
19778: NEG
19779: PUSH
19780: LD_INT 1
19782: NEG
19783: PUSH
19784: EMPTY
19785: LIST
19786: LIST
19787: PUSH
19788: EMPTY
19789: LIST
19790: LIST
19791: LIST
19792: LIST
19793: LIST
19794: LIST
19795: LIST
19796: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19797: LD_ADDR_VAR 0 62
19801: PUSH
19802: LD_INT 0
19804: PUSH
19805: LD_INT 0
19807: PUSH
19808: EMPTY
19809: LIST
19810: LIST
19811: PUSH
19812: LD_INT 0
19814: PUSH
19815: LD_INT 1
19817: NEG
19818: PUSH
19819: EMPTY
19820: LIST
19821: LIST
19822: PUSH
19823: LD_INT 1
19825: PUSH
19826: LD_INT 0
19828: PUSH
19829: EMPTY
19830: LIST
19831: LIST
19832: PUSH
19833: LD_INT 1
19835: PUSH
19836: LD_INT 1
19838: PUSH
19839: EMPTY
19840: LIST
19841: LIST
19842: PUSH
19843: LD_INT 0
19845: PUSH
19846: LD_INT 1
19848: PUSH
19849: EMPTY
19850: LIST
19851: LIST
19852: PUSH
19853: LD_INT 1
19855: NEG
19856: PUSH
19857: LD_INT 0
19859: PUSH
19860: EMPTY
19861: LIST
19862: LIST
19863: PUSH
19864: LD_INT 1
19866: NEG
19867: PUSH
19868: LD_INT 1
19870: NEG
19871: PUSH
19872: EMPTY
19873: LIST
19874: LIST
19875: PUSH
19876: EMPTY
19877: LIST
19878: LIST
19879: LIST
19880: LIST
19881: LIST
19882: LIST
19883: LIST
19884: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19885: LD_ADDR_VAR 0 63
19889: PUSH
19890: LD_INT 0
19892: PUSH
19893: LD_INT 0
19895: PUSH
19896: EMPTY
19897: LIST
19898: LIST
19899: PUSH
19900: LD_INT 0
19902: PUSH
19903: LD_INT 1
19905: NEG
19906: PUSH
19907: EMPTY
19908: LIST
19909: LIST
19910: PUSH
19911: LD_INT 1
19913: PUSH
19914: LD_INT 0
19916: PUSH
19917: EMPTY
19918: LIST
19919: LIST
19920: PUSH
19921: LD_INT 1
19923: PUSH
19924: LD_INT 1
19926: PUSH
19927: EMPTY
19928: LIST
19929: LIST
19930: PUSH
19931: LD_INT 0
19933: PUSH
19934: LD_INT 1
19936: PUSH
19937: EMPTY
19938: LIST
19939: LIST
19940: PUSH
19941: LD_INT 1
19943: NEG
19944: PUSH
19945: LD_INT 0
19947: PUSH
19948: EMPTY
19949: LIST
19950: LIST
19951: PUSH
19952: LD_INT 1
19954: NEG
19955: PUSH
19956: LD_INT 1
19958: NEG
19959: PUSH
19960: EMPTY
19961: LIST
19962: LIST
19963: PUSH
19964: EMPTY
19965: LIST
19966: LIST
19967: LIST
19968: LIST
19969: LIST
19970: LIST
19971: LIST
19972: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19973: LD_ADDR_VAR 0 64
19977: PUSH
19978: LD_INT 0
19980: PUSH
19981: LD_INT 0
19983: PUSH
19984: EMPTY
19985: LIST
19986: LIST
19987: PUSH
19988: LD_INT 0
19990: PUSH
19991: LD_INT 1
19993: NEG
19994: PUSH
19995: EMPTY
19996: LIST
19997: LIST
19998: PUSH
19999: LD_INT 1
20001: PUSH
20002: LD_INT 0
20004: PUSH
20005: EMPTY
20006: LIST
20007: LIST
20008: PUSH
20009: LD_INT 1
20011: PUSH
20012: LD_INT 1
20014: PUSH
20015: EMPTY
20016: LIST
20017: LIST
20018: PUSH
20019: LD_INT 0
20021: PUSH
20022: LD_INT 1
20024: PUSH
20025: EMPTY
20026: LIST
20027: LIST
20028: PUSH
20029: LD_INT 1
20031: NEG
20032: PUSH
20033: LD_INT 0
20035: PUSH
20036: EMPTY
20037: LIST
20038: LIST
20039: PUSH
20040: LD_INT 1
20042: NEG
20043: PUSH
20044: LD_INT 1
20046: NEG
20047: PUSH
20048: EMPTY
20049: LIST
20050: LIST
20051: PUSH
20052: EMPTY
20053: LIST
20054: LIST
20055: LIST
20056: LIST
20057: LIST
20058: LIST
20059: LIST
20060: ST_TO_ADDR
// end ; 1 :
20061: GO 25958
20063: LD_INT 1
20065: DOUBLE
20066: EQUAL
20067: IFTRUE 20071
20069: GO 22694
20071: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20072: LD_ADDR_VAR 0 11
20076: PUSH
20077: LD_INT 1
20079: NEG
20080: PUSH
20081: LD_INT 3
20083: NEG
20084: PUSH
20085: EMPTY
20086: LIST
20087: LIST
20088: PUSH
20089: LD_INT 0
20091: PUSH
20092: LD_INT 3
20094: NEG
20095: PUSH
20096: EMPTY
20097: LIST
20098: LIST
20099: PUSH
20100: LD_INT 1
20102: PUSH
20103: LD_INT 2
20105: NEG
20106: PUSH
20107: EMPTY
20108: LIST
20109: LIST
20110: PUSH
20111: EMPTY
20112: LIST
20113: LIST
20114: LIST
20115: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20116: LD_ADDR_VAR 0 12
20120: PUSH
20121: LD_INT 2
20123: PUSH
20124: LD_INT 1
20126: NEG
20127: PUSH
20128: EMPTY
20129: LIST
20130: LIST
20131: PUSH
20132: LD_INT 3
20134: PUSH
20135: LD_INT 0
20137: PUSH
20138: EMPTY
20139: LIST
20140: LIST
20141: PUSH
20142: LD_INT 3
20144: PUSH
20145: LD_INT 1
20147: PUSH
20148: EMPTY
20149: LIST
20150: LIST
20151: PUSH
20152: EMPTY
20153: LIST
20154: LIST
20155: LIST
20156: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20157: LD_ADDR_VAR 0 13
20161: PUSH
20162: LD_INT 3
20164: PUSH
20165: LD_INT 2
20167: PUSH
20168: EMPTY
20169: LIST
20170: LIST
20171: PUSH
20172: LD_INT 3
20174: PUSH
20175: LD_INT 3
20177: PUSH
20178: EMPTY
20179: LIST
20180: LIST
20181: PUSH
20182: LD_INT 2
20184: PUSH
20185: LD_INT 3
20187: PUSH
20188: EMPTY
20189: LIST
20190: LIST
20191: PUSH
20192: EMPTY
20193: LIST
20194: LIST
20195: LIST
20196: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20197: LD_ADDR_VAR 0 14
20201: PUSH
20202: LD_INT 1
20204: PUSH
20205: LD_INT 3
20207: PUSH
20208: EMPTY
20209: LIST
20210: LIST
20211: PUSH
20212: LD_INT 0
20214: PUSH
20215: LD_INT 3
20217: PUSH
20218: EMPTY
20219: LIST
20220: LIST
20221: PUSH
20222: LD_INT 1
20224: NEG
20225: PUSH
20226: LD_INT 2
20228: PUSH
20229: EMPTY
20230: LIST
20231: LIST
20232: PUSH
20233: EMPTY
20234: LIST
20235: LIST
20236: LIST
20237: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20238: LD_ADDR_VAR 0 15
20242: PUSH
20243: LD_INT 2
20245: NEG
20246: PUSH
20247: LD_INT 1
20249: PUSH
20250: EMPTY
20251: LIST
20252: LIST
20253: PUSH
20254: LD_INT 3
20256: NEG
20257: PUSH
20258: LD_INT 0
20260: PUSH
20261: EMPTY
20262: LIST
20263: LIST
20264: PUSH
20265: LD_INT 3
20267: NEG
20268: PUSH
20269: LD_INT 1
20271: NEG
20272: PUSH
20273: EMPTY
20274: LIST
20275: LIST
20276: PUSH
20277: EMPTY
20278: LIST
20279: LIST
20280: LIST
20281: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20282: LD_ADDR_VAR 0 16
20286: PUSH
20287: LD_INT 2
20289: NEG
20290: PUSH
20291: LD_INT 3
20293: NEG
20294: PUSH
20295: EMPTY
20296: LIST
20297: LIST
20298: PUSH
20299: LD_INT 3
20301: NEG
20302: PUSH
20303: LD_INT 2
20305: NEG
20306: PUSH
20307: EMPTY
20308: LIST
20309: LIST
20310: PUSH
20311: LD_INT 3
20313: NEG
20314: PUSH
20315: LD_INT 3
20317: NEG
20318: PUSH
20319: EMPTY
20320: LIST
20321: LIST
20322: PUSH
20323: EMPTY
20324: LIST
20325: LIST
20326: LIST
20327: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20328: LD_ADDR_VAR 0 17
20332: PUSH
20333: LD_INT 1
20335: NEG
20336: PUSH
20337: LD_INT 3
20339: NEG
20340: PUSH
20341: EMPTY
20342: LIST
20343: LIST
20344: PUSH
20345: LD_INT 0
20347: PUSH
20348: LD_INT 3
20350: NEG
20351: PUSH
20352: EMPTY
20353: LIST
20354: LIST
20355: PUSH
20356: LD_INT 1
20358: PUSH
20359: LD_INT 2
20361: NEG
20362: PUSH
20363: EMPTY
20364: LIST
20365: LIST
20366: PUSH
20367: EMPTY
20368: LIST
20369: LIST
20370: LIST
20371: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20372: LD_ADDR_VAR 0 18
20376: PUSH
20377: LD_INT 2
20379: PUSH
20380: LD_INT 1
20382: NEG
20383: PUSH
20384: EMPTY
20385: LIST
20386: LIST
20387: PUSH
20388: LD_INT 3
20390: PUSH
20391: LD_INT 0
20393: PUSH
20394: EMPTY
20395: LIST
20396: LIST
20397: PUSH
20398: LD_INT 3
20400: PUSH
20401: LD_INT 1
20403: PUSH
20404: EMPTY
20405: LIST
20406: LIST
20407: PUSH
20408: EMPTY
20409: LIST
20410: LIST
20411: LIST
20412: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20413: LD_ADDR_VAR 0 19
20417: PUSH
20418: LD_INT 3
20420: PUSH
20421: LD_INT 2
20423: PUSH
20424: EMPTY
20425: LIST
20426: LIST
20427: PUSH
20428: LD_INT 3
20430: PUSH
20431: LD_INT 3
20433: PUSH
20434: EMPTY
20435: LIST
20436: LIST
20437: PUSH
20438: LD_INT 2
20440: PUSH
20441: LD_INT 3
20443: PUSH
20444: EMPTY
20445: LIST
20446: LIST
20447: PUSH
20448: EMPTY
20449: LIST
20450: LIST
20451: LIST
20452: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20453: LD_ADDR_VAR 0 20
20457: PUSH
20458: LD_INT 1
20460: PUSH
20461: LD_INT 3
20463: PUSH
20464: EMPTY
20465: LIST
20466: LIST
20467: PUSH
20468: LD_INT 0
20470: PUSH
20471: LD_INT 3
20473: PUSH
20474: EMPTY
20475: LIST
20476: LIST
20477: PUSH
20478: LD_INT 1
20480: NEG
20481: PUSH
20482: LD_INT 2
20484: PUSH
20485: EMPTY
20486: LIST
20487: LIST
20488: PUSH
20489: EMPTY
20490: LIST
20491: LIST
20492: LIST
20493: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20494: LD_ADDR_VAR 0 21
20498: PUSH
20499: LD_INT 2
20501: NEG
20502: PUSH
20503: LD_INT 1
20505: PUSH
20506: EMPTY
20507: LIST
20508: LIST
20509: PUSH
20510: LD_INT 3
20512: NEG
20513: PUSH
20514: LD_INT 0
20516: PUSH
20517: EMPTY
20518: LIST
20519: LIST
20520: PUSH
20521: LD_INT 3
20523: NEG
20524: PUSH
20525: LD_INT 1
20527: NEG
20528: PUSH
20529: EMPTY
20530: LIST
20531: LIST
20532: PUSH
20533: EMPTY
20534: LIST
20535: LIST
20536: LIST
20537: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20538: LD_ADDR_VAR 0 22
20542: PUSH
20543: LD_INT 2
20545: NEG
20546: PUSH
20547: LD_INT 3
20549: NEG
20550: PUSH
20551: EMPTY
20552: LIST
20553: LIST
20554: PUSH
20555: LD_INT 3
20557: NEG
20558: PUSH
20559: LD_INT 2
20561: NEG
20562: PUSH
20563: EMPTY
20564: LIST
20565: LIST
20566: PUSH
20567: LD_INT 3
20569: NEG
20570: PUSH
20571: LD_INT 3
20573: NEG
20574: PUSH
20575: EMPTY
20576: LIST
20577: LIST
20578: PUSH
20579: EMPTY
20580: LIST
20581: LIST
20582: LIST
20583: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20584: LD_ADDR_VAR 0 23
20588: PUSH
20589: LD_INT 0
20591: PUSH
20592: LD_INT 3
20594: NEG
20595: PUSH
20596: EMPTY
20597: LIST
20598: LIST
20599: PUSH
20600: LD_INT 1
20602: NEG
20603: PUSH
20604: LD_INT 4
20606: NEG
20607: PUSH
20608: EMPTY
20609: LIST
20610: LIST
20611: PUSH
20612: LD_INT 1
20614: PUSH
20615: LD_INT 3
20617: NEG
20618: PUSH
20619: EMPTY
20620: LIST
20621: LIST
20622: PUSH
20623: EMPTY
20624: LIST
20625: LIST
20626: LIST
20627: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20628: LD_ADDR_VAR 0 24
20632: PUSH
20633: LD_INT 3
20635: PUSH
20636: LD_INT 0
20638: PUSH
20639: EMPTY
20640: LIST
20641: LIST
20642: PUSH
20643: LD_INT 3
20645: PUSH
20646: LD_INT 1
20648: NEG
20649: PUSH
20650: EMPTY
20651: LIST
20652: LIST
20653: PUSH
20654: LD_INT 4
20656: PUSH
20657: LD_INT 1
20659: PUSH
20660: EMPTY
20661: LIST
20662: LIST
20663: PUSH
20664: EMPTY
20665: LIST
20666: LIST
20667: LIST
20668: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20669: LD_ADDR_VAR 0 25
20673: PUSH
20674: LD_INT 3
20676: PUSH
20677: LD_INT 3
20679: PUSH
20680: EMPTY
20681: LIST
20682: LIST
20683: PUSH
20684: LD_INT 4
20686: PUSH
20687: LD_INT 3
20689: PUSH
20690: EMPTY
20691: LIST
20692: LIST
20693: PUSH
20694: LD_INT 3
20696: PUSH
20697: LD_INT 4
20699: PUSH
20700: EMPTY
20701: LIST
20702: LIST
20703: PUSH
20704: EMPTY
20705: LIST
20706: LIST
20707: LIST
20708: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
20709: LD_ADDR_VAR 0 26
20713: PUSH
20714: LD_INT 0
20716: PUSH
20717: LD_INT 3
20719: PUSH
20720: EMPTY
20721: LIST
20722: LIST
20723: PUSH
20724: LD_INT 1
20726: PUSH
20727: LD_INT 4
20729: PUSH
20730: EMPTY
20731: LIST
20732: LIST
20733: PUSH
20734: LD_INT 1
20736: NEG
20737: PUSH
20738: LD_INT 3
20740: PUSH
20741: EMPTY
20742: LIST
20743: LIST
20744: PUSH
20745: EMPTY
20746: LIST
20747: LIST
20748: LIST
20749: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
20750: LD_ADDR_VAR 0 27
20754: PUSH
20755: LD_INT 3
20757: NEG
20758: PUSH
20759: LD_INT 0
20761: PUSH
20762: EMPTY
20763: LIST
20764: LIST
20765: PUSH
20766: LD_INT 3
20768: NEG
20769: PUSH
20770: LD_INT 1
20772: PUSH
20773: EMPTY
20774: LIST
20775: LIST
20776: PUSH
20777: LD_INT 4
20779: NEG
20780: PUSH
20781: LD_INT 1
20783: NEG
20784: PUSH
20785: EMPTY
20786: LIST
20787: LIST
20788: PUSH
20789: EMPTY
20790: LIST
20791: LIST
20792: LIST
20793: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
20794: LD_ADDR_VAR 0 28
20798: PUSH
20799: LD_INT 3
20801: NEG
20802: PUSH
20803: LD_INT 3
20805: NEG
20806: PUSH
20807: EMPTY
20808: LIST
20809: LIST
20810: PUSH
20811: LD_INT 3
20813: NEG
20814: PUSH
20815: LD_INT 4
20817: NEG
20818: PUSH
20819: EMPTY
20820: LIST
20821: LIST
20822: PUSH
20823: LD_INT 4
20825: NEG
20826: PUSH
20827: LD_INT 3
20829: NEG
20830: PUSH
20831: EMPTY
20832: LIST
20833: LIST
20834: PUSH
20835: EMPTY
20836: LIST
20837: LIST
20838: LIST
20839: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
20840: LD_ADDR_VAR 0 29
20844: PUSH
20845: LD_INT 1
20847: NEG
20848: PUSH
20849: LD_INT 3
20851: NEG
20852: PUSH
20853: EMPTY
20854: LIST
20855: LIST
20856: PUSH
20857: LD_INT 0
20859: PUSH
20860: LD_INT 3
20862: NEG
20863: PUSH
20864: EMPTY
20865: LIST
20866: LIST
20867: PUSH
20868: LD_INT 1
20870: PUSH
20871: LD_INT 2
20873: NEG
20874: PUSH
20875: EMPTY
20876: LIST
20877: LIST
20878: PUSH
20879: LD_INT 1
20881: NEG
20882: PUSH
20883: LD_INT 4
20885: NEG
20886: PUSH
20887: EMPTY
20888: LIST
20889: LIST
20890: PUSH
20891: LD_INT 0
20893: PUSH
20894: LD_INT 4
20896: NEG
20897: PUSH
20898: EMPTY
20899: LIST
20900: LIST
20901: PUSH
20902: LD_INT 1
20904: PUSH
20905: LD_INT 3
20907: NEG
20908: PUSH
20909: EMPTY
20910: LIST
20911: LIST
20912: PUSH
20913: LD_INT 1
20915: NEG
20916: PUSH
20917: LD_INT 5
20919: NEG
20920: PUSH
20921: EMPTY
20922: LIST
20923: LIST
20924: PUSH
20925: LD_INT 0
20927: PUSH
20928: LD_INT 5
20930: NEG
20931: PUSH
20932: EMPTY
20933: LIST
20934: LIST
20935: PUSH
20936: LD_INT 1
20938: PUSH
20939: LD_INT 4
20941: NEG
20942: PUSH
20943: EMPTY
20944: LIST
20945: LIST
20946: PUSH
20947: LD_INT 1
20949: NEG
20950: PUSH
20951: LD_INT 6
20953: NEG
20954: PUSH
20955: EMPTY
20956: LIST
20957: LIST
20958: PUSH
20959: LD_INT 0
20961: PUSH
20962: LD_INT 6
20964: NEG
20965: PUSH
20966: EMPTY
20967: LIST
20968: LIST
20969: PUSH
20970: LD_INT 1
20972: PUSH
20973: LD_INT 5
20975: NEG
20976: PUSH
20977: EMPTY
20978: LIST
20979: LIST
20980: PUSH
20981: EMPTY
20982: LIST
20983: LIST
20984: LIST
20985: LIST
20986: LIST
20987: LIST
20988: LIST
20989: LIST
20990: LIST
20991: LIST
20992: LIST
20993: LIST
20994: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
20995: LD_ADDR_VAR 0 30
20999: PUSH
21000: LD_INT 2
21002: PUSH
21003: LD_INT 1
21005: NEG
21006: PUSH
21007: EMPTY
21008: LIST
21009: LIST
21010: PUSH
21011: LD_INT 3
21013: PUSH
21014: LD_INT 0
21016: PUSH
21017: EMPTY
21018: LIST
21019: LIST
21020: PUSH
21021: LD_INT 3
21023: PUSH
21024: LD_INT 1
21026: PUSH
21027: EMPTY
21028: LIST
21029: LIST
21030: PUSH
21031: LD_INT 3
21033: PUSH
21034: LD_INT 1
21036: NEG
21037: PUSH
21038: EMPTY
21039: LIST
21040: LIST
21041: PUSH
21042: LD_INT 4
21044: PUSH
21045: LD_INT 0
21047: PUSH
21048: EMPTY
21049: LIST
21050: LIST
21051: PUSH
21052: LD_INT 4
21054: PUSH
21055: LD_INT 1
21057: PUSH
21058: EMPTY
21059: LIST
21060: LIST
21061: PUSH
21062: LD_INT 4
21064: PUSH
21065: LD_INT 1
21067: NEG
21068: PUSH
21069: EMPTY
21070: LIST
21071: LIST
21072: PUSH
21073: LD_INT 5
21075: PUSH
21076: LD_INT 0
21078: PUSH
21079: EMPTY
21080: LIST
21081: LIST
21082: PUSH
21083: LD_INT 5
21085: PUSH
21086: LD_INT 1
21088: PUSH
21089: EMPTY
21090: LIST
21091: LIST
21092: PUSH
21093: LD_INT 5
21095: PUSH
21096: LD_INT 1
21098: NEG
21099: PUSH
21100: EMPTY
21101: LIST
21102: LIST
21103: PUSH
21104: LD_INT 6
21106: PUSH
21107: LD_INT 0
21109: PUSH
21110: EMPTY
21111: LIST
21112: LIST
21113: PUSH
21114: LD_INT 6
21116: PUSH
21117: LD_INT 1
21119: PUSH
21120: EMPTY
21121: LIST
21122: LIST
21123: PUSH
21124: EMPTY
21125: LIST
21126: LIST
21127: LIST
21128: LIST
21129: LIST
21130: LIST
21131: LIST
21132: LIST
21133: LIST
21134: LIST
21135: LIST
21136: LIST
21137: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21138: LD_ADDR_VAR 0 31
21142: PUSH
21143: LD_INT 3
21145: PUSH
21146: LD_INT 2
21148: PUSH
21149: EMPTY
21150: LIST
21151: LIST
21152: PUSH
21153: LD_INT 3
21155: PUSH
21156: LD_INT 3
21158: PUSH
21159: EMPTY
21160: LIST
21161: LIST
21162: PUSH
21163: LD_INT 2
21165: PUSH
21166: LD_INT 3
21168: PUSH
21169: EMPTY
21170: LIST
21171: LIST
21172: PUSH
21173: LD_INT 4
21175: PUSH
21176: LD_INT 3
21178: PUSH
21179: EMPTY
21180: LIST
21181: LIST
21182: PUSH
21183: LD_INT 4
21185: PUSH
21186: LD_INT 4
21188: PUSH
21189: EMPTY
21190: LIST
21191: LIST
21192: PUSH
21193: LD_INT 3
21195: PUSH
21196: LD_INT 4
21198: PUSH
21199: EMPTY
21200: LIST
21201: LIST
21202: PUSH
21203: LD_INT 5
21205: PUSH
21206: LD_INT 4
21208: PUSH
21209: EMPTY
21210: LIST
21211: LIST
21212: PUSH
21213: LD_INT 5
21215: PUSH
21216: LD_INT 5
21218: PUSH
21219: EMPTY
21220: LIST
21221: LIST
21222: PUSH
21223: LD_INT 4
21225: PUSH
21226: LD_INT 5
21228: PUSH
21229: EMPTY
21230: LIST
21231: LIST
21232: PUSH
21233: LD_INT 6
21235: PUSH
21236: LD_INT 5
21238: PUSH
21239: EMPTY
21240: LIST
21241: LIST
21242: PUSH
21243: LD_INT 6
21245: PUSH
21246: LD_INT 6
21248: PUSH
21249: EMPTY
21250: LIST
21251: LIST
21252: PUSH
21253: LD_INT 5
21255: PUSH
21256: LD_INT 6
21258: PUSH
21259: EMPTY
21260: LIST
21261: LIST
21262: PUSH
21263: EMPTY
21264: LIST
21265: LIST
21266: LIST
21267: LIST
21268: LIST
21269: LIST
21270: LIST
21271: LIST
21272: LIST
21273: LIST
21274: LIST
21275: LIST
21276: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21277: LD_ADDR_VAR 0 32
21281: PUSH
21282: LD_INT 1
21284: PUSH
21285: LD_INT 3
21287: PUSH
21288: EMPTY
21289: LIST
21290: LIST
21291: PUSH
21292: LD_INT 0
21294: PUSH
21295: LD_INT 3
21297: PUSH
21298: EMPTY
21299: LIST
21300: LIST
21301: PUSH
21302: LD_INT 1
21304: NEG
21305: PUSH
21306: LD_INT 2
21308: PUSH
21309: EMPTY
21310: LIST
21311: LIST
21312: PUSH
21313: LD_INT 1
21315: PUSH
21316: LD_INT 4
21318: PUSH
21319: EMPTY
21320: LIST
21321: LIST
21322: PUSH
21323: LD_INT 0
21325: PUSH
21326: LD_INT 4
21328: PUSH
21329: EMPTY
21330: LIST
21331: LIST
21332: PUSH
21333: LD_INT 1
21335: NEG
21336: PUSH
21337: LD_INT 3
21339: PUSH
21340: EMPTY
21341: LIST
21342: LIST
21343: PUSH
21344: LD_INT 1
21346: PUSH
21347: LD_INT 5
21349: PUSH
21350: EMPTY
21351: LIST
21352: LIST
21353: PUSH
21354: LD_INT 0
21356: PUSH
21357: LD_INT 5
21359: PUSH
21360: EMPTY
21361: LIST
21362: LIST
21363: PUSH
21364: LD_INT 1
21366: NEG
21367: PUSH
21368: LD_INT 4
21370: PUSH
21371: EMPTY
21372: LIST
21373: LIST
21374: PUSH
21375: LD_INT 1
21377: PUSH
21378: LD_INT 6
21380: PUSH
21381: EMPTY
21382: LIST
21383: LIST
21384: PUSH
21385: LD_INT 0
21387: PUSH
21388: LD_INT 6
21390: PUSH
21391: EMPTY
21392: LIST
21393: LIST
21394: PUSH
21395: LD_INT 1
21397: NEG
21398: PUSH
21399: LD_INT 5
21401: PUSH
21402: EMPTY
21403: LIST
21404: LIST
21405: PUSH
21406: EMPTY
21407: LIST
21408: LIST
21409: LIST
21410: LIST
21411: LIST
21412: LIST
21413: LIST
21414: LIST
21415: LIST
21416: LIST
21417: LIST
21418: LIST
21419: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21420: LD_ADDR_VAR 0 33
21424: PUSH
21425: LD_INT 2
21427: NEG
21428: PUSH
21429: LD_INT 1
21431: PUSH
21432: EMPTY
21433: LIST
21434: LIST
21435: PUSH
21436: LD_INT 3
21438: NEG
21439: PUSH
21440: LD_INT 0
21442: PUSH
21443: EMPTY
21444: LIST
21445: LIST
21446: PUSH
21447: LD_INT 3
21449: NEG
21450: PUSH
21451: LD_INT 1
21453: NEG
21454: PUSH
21455: EMPTY
21456: LIST
21457: LIST
21458: PUSH
21459: LD_INT 3
21461: NEG
21462: PUSH
21463: LD_INT 1
21465: PUSH
21466: EMPTY
21467: LIST
21468: LIST
21469: PUSH
21470: LD_INT 4
21472: NEG
21473: PUSH
21474: LD_INT 0
21476: PUSH
21477: EMPTY
21478: LIST
21479: LIST
21480: PUSH
21481: LD_INT 4
21483: NEG
21484: PUSH
21485: LD_INT 1
21487: NEG
21488: PUSH
21489: EMPTY
21490: LIST
21491: LIST
21492: PUSH
21493: LD_INT 4
21495: NEG
21496: PUSH
21497: LD_INT 1
21499: PUSH
21500: EMPTY
21501: LIST
21502: LIST
21503: PUSH
21504: LD_INT 5
21506: NEG
21507: PUSH
21508: LD_INT 0
21510: PUSH
21511: EMPTY
21512: LIST
21513: LIST
21514: PUSH
21515: LD_INT 5
21517: NEG
21518: PUSH
21519: LD_INT 1
21521: NEG
21522: PUSH
21523: EMPTY
21524: LIST
21525: LIST
21526: PUSH
21527: LD_INT 5
21529: NEG
21530: PUSH
21531: LD_INT 1
21533: PUSH
21534: EMPTY
21535: LIST
21536: LIST
21537: PUSH
21538: LD_INT 6
21540: NEG
21541: PUSH
21542: LD_INT 0
21544: PUSH
21545: EMPTY
21546: LIST
21547: LIST
21548: PUSH
21549: LD_INT 6
21551: NEG
21552: PUSH
21553: LD_INT 1
21555: NEG
21556: PUSH
21557: EMPTY
21558: LIST
21559: LIST
21560: PUSH
21561: EMPTY
21562: LIST
21563: LIST
21564: LIST
21565: LIST
21566: LIST
21567: LIST
21568: LIST
21569: LIST
21570: LIST
21571: LIST
21572: LIST
21573: LIST
21574: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21575: LD_ADDR_VAR 0 34
21579: PUSH
21580: LD_INT 2
21582: NEG
21583: PUSH
21584: LD_INT 3
21586: NEG
21587: PUSH
21588: EMPTY
21589: LIST
21590: LIST
21591: PUSH
21592: LD_INT 3
21594: NEG
21595: PUSH
21596: LD_INT 2
21598: NEG
21599: PUSH
21600: EMPTY
21601: LIST
21602: LIST
21603: PUSH
21604: LD_INT 3
21606: NEG
21607: PUSH
21608: LD_INT 3
21610: NEG
21611: PUSH
21612: EMPTY
21613: LIST
21614: LIST
21615: PUSH
21616: LD_INT 3
21618: NEG
21619: PUSH
21620: LD_INT 4
21622: NEG
21623: PUSH
21624: EMPTY
21625: LIST
21626: LIST
21627: PUSH
21628: LD_INT 4
21630: NEG
21631: PUSH
21632: LD_INT 3
21634: NEG
21635: PUSH
21636: EMPTY
21637: LIST
21638: LIST
21639: PUSH
21640: LD_INT 4
21642: NEG
21643: PUSH
21644: LD_INT 4
21646: NEG
21647: PUSH
21648: EMPTY
21649: LIST
21650: LIST
21651: PUSH
21652: LD_INT 4
21654: NEG
21655: PUSH
21656: LD_INT 5
21658: NEG
21659: PUSH
21660: EMPTY
21661: LIST
21662: LIST
21663: PUSH
21664: LD_INT 5
21666: NEG
21667: PUSH
21668: LD_INT 4
21670: NEG
21671: PUSH
21672: EMPTY
21673: LIST
21674: LIST
21675: PUSH
21676: LD_INT 5
21678: NEG
21679: PUSH
21680: LD_INT 5
21682: NEG
21683: PUSH
21684: EMPTY
21685: LIST
21686: LIST
21687: PUSH
21688: LD_INT 5
21690: NEG
21691: PUSH
21692: LD_INT 6
21694: NEG
21695: PUSH
21696: EMPTY
21697: LIST
21698: LIST
21699: PUSH
21700: LD_INT 6
21702: NEG
21703: PUSH
21704: LD_INT 5
21706: NEG
21707: PUSH
21708: EMPTY
21709: LIST
21710: LIST
21711: PUSH
21712: LD_INT 6
21714: NEG
21715: PUSH
21716: LD_INT 6
21718: NEG
21719: PUSH
21720: EMPTY
21721: LIST
21722: LIST
21723: PUSH
21724: EMPTY
21725: LIST
21726: LIST
21727: LIST
21728: LIST
21729: LIST
21730: LIST
21731: LIST
21732: LIST
21733: LIST
21734: LIST
21735: LIST
21736: LIST
21737: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
21738: LD_ADDR_VAR 0 41
21742: PUSH
21743: LD_INT 0
21745: PUSH
21746: LD_INT 2
21748: NEG
21749: PUSH
21750: EMPTY
21751: LIST
21752: LIST
21753: PUSH
21754: LD_INT 1
21756: NEG
21757: PUSH
21758: LD_INT 3
21760: NEG
21761: PUSH
21762: EMPTY
21763: LIST
21764: LIST
21765: PUSH
21766: LD_INT 1
21768: PUSH
21769: LD_INT 2
21771: NEG
21772: PUSH
21773: EMPTY
21774: LIST
21775: LIST
21776: PUSH
21777: EMPTY
21778: LIST
21779: LIST
21780: LIST
21781: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
21782: LD_ADDR_VAR 0 42
21786: PUSH
21787: LD_INT 2
21789: PUSH
21790: LD_INT 0
21792: PUSH
21793: EMPTY
21794: LIST
21795: LIST
21796: PUSH
21797: LD_INT 2
21799: PUSH
21800: LD_INT 1
21802: NEG
21803: PUSH
21804: EMPTY
21805: LIST
21806: LIST
21807: PUSH
21808: LD_INT 3
21810: PUSH
21811: LD_INT 1
21813: PUSH
21814: EMPTY
21815: LIST
21816: LIST
21817: PUSH
21818: EMPTY
21819: LIST
21820: LIST
21821: LIST
21822: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
21823: LD_ADDR_VAR 0 43
21827: PUSH
21828: LD_INT 2
21830: PUSH
21831: LD_INT 2
21833: PUSH
21834: EMPTY
21835: LIST
21836: LIST
21837: PUSH
21838: LD_INT 3
21840: PUSH
21841: LD_INT 2
21843: PUSH
21844: EMPTY
21845: LIST
21846: LIST
21847: PUSH
21848: LD_INT 2
21850: PUSH
21851: LD_INT 3
21853: PUSH
21854: EMPTY
21855: LIST
21856: LIST
21857: PUSH
21858: EMPTY
21859: LIST
21860: LIST
21861: LIST
21862: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
21863: LD_ADDR_VAR 0 44
21867: PUSH
21868: LD_INT 0
21870: PUSH
21871: LD_INT 2
21873: PUSH
21874: EMPTY
21875: LIST
21876: LIST
21877: PUSH
21878: LD_INT 1
21880: PUSH
21881: LD_INT 3
21883: PUSH
21884: EMPTY
21885: LIST
21886: LIST
21887: PUSH
21888: LD_INT 1
21890: NEG
21891: PUSH
21892: LD_INT 2
21894: PUSH
21895: EMPTY
21896: LIST
21897: LIST
21898: PUSH
21899: EMPTY
21900: LIST
21901: LIST
21902: LIST
21903: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
21904: LD_ADDR_VAR 0 45
21908: PUSH
21909: LD_INT 2
21911: NEG
21912: PUSH
21913: LD_INT 0
21915: PUSH
21916: EMPTY
21917: LIST
21918: LIST
21919: PUSH
21920: LD_INT 2
21922: NEG
21923: PUSH
21924: LD_INT 1
21926: PUSH
21927: EMPTY
21928: LIST
21929: LIST
21930: PUSH
21931: LD_INT 3
21933: NEG
21934: PUSH
21935: LD_INT 1
21937: NEG
21938: PUSH
21939: EMPTY
21940: LIST
21941: LIST
21942: PUSH
21943: EMPTY
21944: LIST
21945: LIST
21946: LIST
21947: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
21948: LD_ADDR_VAR 0 46
21952: PUSH
21953: LD_INT 2
21955: NEG
21956: PUSH
21957: LD_INT 2
21959: NEG
21960: PUSH
21961: EMPTY
21962: LIST
21963: LIST
21964: PUSH
21965: LD_INT 2
21967: NEG
21968: PUSH
21969: LD_INT 3
21971: NEG
21972: PUSH
21973: EMPTY
21974: LIST
21975: LIST
21976: PUSH
21977: LD_INT 3
21979: NEG
21980: PUSH
21981: LD_INT 2
21983: NEG
21984: PUSH
21985: EMPTY
21986: LIST
21987: LIST
21988: PUSH
21989: EMPTY
21990: LIST
21991: LIST
21992: LIST
21993: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
21994: LD_ADDR_VAR 0 47
21998: PUSH
21999: LD_INT 2
22001: NEG
22002: PUSH
22003: LD_INT 3
22005: NEG
22006: PUSH
22007: EMPTY
22008: LIST
22009: LIST
22010: PUSH
22011: LD_INT 1
22013: NEG
22014: PUSH
22015: LD_INT 3
22017: NEG
22018: PUSH
22019: EMPTY
22020: LIST
22021: LIST
22022: PUSH
22023: EMPTY
22024: LIST
22025: LIST
22026: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22027: LD_ADDR_VAR 0 48
22031: PUSH
22032: LD_INT 1
22034: PUSH
22035: LD_INT 2
22037: NEG
22038: PUSH
22039: EMPTY
22040: LIST
22041: LIST
22042: PUSH
22043: LD_INT 2
22045: PUSH
22046: LD_INT 1
22048: NEG
22049: PUSH
22050: EMPTY
22051: LIST
22052: LIST
22053: PUSH
22054: EMPTY
22055: LIST
22056: LIST
22057: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22058: LD_ADDR_VAR 0 49
22062: PUSH
22063: LD_INT 3
22065: PUSH
22066: LD_INT 1
22068: PUSH
22069: EMPTY
22070: LIST
22071: LIST
22072: PUSH
22073: LD_INT 3
22075: PUSH
22076: LD_INT 2
22078: PUSH
22079: EMPTY
22080: LIST
22081: LIST
22082: PUSH
22083: EMPTY
22084: LIST
22085: LIST
22086: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22087: LD_ADDR_VAR 0 50
22091: PUSH
22092: LD_INT 2
22094: PUSH
22095: LD_INT 3
22097: PUSH
22098: EMPTY
22099: LIST
22100: LIST
22101: PUSH
22102: LD_INT 1
22104: PUSH
22105: LD_INT 3
22107: PUSH
22108: EMPTY
22109: LIST
22110: LIST
22111: PUSH
22112: EMPTY
22113: LIST
22114: LIST
22115: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22116: LD_ADDR_VAR 0 51
22120: PUSH
22121: LD_INT 1
22123: NEG
22124: PUSH
22125: LD_INT 2
22127: PUSH
22128: EMPTY
22129: LIST
22130: LIST
22131: PUSH
22132: LD_INT 2
22134: NEG
22135: PUSH
22136: LD_INT 1
22138: PUSH
22139: EMPTY
22140: LIST
22141: LIST
22142: PUSH
22143: EMPTY
22144: LIST
22145: LIST
22146: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22147: LD_ADDR_VAR 0 52
22151: PUSH
22152: LD_INT 3
22154: NEG
22155: PUSH
22156: LD_INT 1
22158: NEG
22159: PUSH
22160: EMPTY
22161: LIST
22162: LIST
22163: PUSH
22164: LD_INT 3
22166: NEG
22167: PUSH
22168: LD_INT 2
22170: NEG
22171: PUSH
22172: EMPTY
22173: LIST
22174: LIST
22175: PUSH
22176: EMPTY
22177: LIST
22178: LIST
22179: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22180: LD_ADDR_VAR 0 53
22184: PUSH
22185: LD_INT 1
22187: NEG
22188: PUSH
22189: LD_INT 3
22191: NEG
22192: PUSH
22193: EMPTY
22194: LIST
22195: LIST
22196: PUSH
22197: LD_INT 0
22199: PUSH
22200: LD_INT 3
22202: NEG
22203: PUSH
22204: EMPTY
22205: LIST
22206: LIST
22207: PUSH
22208: LD_INT 1
22210: PUSH
22211: LD_INT 2
22213: NEG
22214: PUSH
22215: EMPTY
22216: LIST
22217: LIST
22218: PUSH
22219: EMPTY
22220: LIST
22221: LIST
22222: LIST
22223: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22224: LD_ADDR_VAR 0 54
22228: PUSH
22229: LD_INT 2
22231: PUSH
22232: LD_INT 1
22234: NEG
22235: PUSH
22236: EMPTY
22237: LIST
22238: LIST
22239: PUSH
22240: LD_INT 3
22242: PUSH
22243: LD_INT 0
22245: PUSH
22246: EMPTY
22247: LIST
22248: LIST
22249: PUSH
22250: LD_INT 3
22252: PUSH
22253: LD_INT 1
22255: PUSH
22256: EMPTY
22257: LIST
22258: LIST
22259: PUSH
22260: EMPTY
22261: LIST
22262: LIST
22263: LIST
22264: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22265: LD_ADDR_VAR 0 55
22269: PUSH
22270: LD_INT 3
22272: PUSH
22273: LD_INT 2
22275: PUSH
22276: EMPTY
22277: LIST
22278: LIST
22279: PUSH
22280: LD_INT 3
22282: PUSH
22283: LD_INT 3
22285: PUSH
22286: EMPTY
22287: LIST
22288: LIST
22289: PUSH
22290: LD_INT 2
22292: PUSH
22293: LD_INT 3
22295: PUSH
22296: EMPTY
22297: LIST
22298: LIST
22299: PUSH
22300: EMPTY
22301: LIST
22302: LIST
22303: LIST
22304: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22305: LD_ADDR_VAR 0 56
22309: PUSH
22310: LD_INT 1
22312: PUSH
22313: LD_INT 3
22315: PUSH
22316: EMPTY
22317: LIST
22318: LIST
22319: PUSH
22320: LD_INT 0
22322: PUSH
22323: LD_INT 3
22325: PUSH
22326: EMPTY
22327: LIST
22328: LIST
22329: PUSH
22330: LD_INT 1
22332: NEG
22333: PUSH
22334: LD_INT 2
22336: PUSH
22337: EMPTY
22338: LIST
22339: LIST
22340: PUSH
22341: EMPTY
22342: LIST
22343: LIST
22344: LIST
22345: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22346: LD_ADDR_VAR 0 57
22350: PUSH
22351: LD_INT 2
22353: NEG
22354: PUSH
22355: LD_INT 1
22357: PUSH
22358: EMPTY
22359: LIST
22360: LIST
22361: PUSH
22362: LD_INT 3
22364: NEG
22365: PUSH
22366: LD_INT 0
22368: PUSH
22369: EMPTY
22370: LIST
22371: LIST
22372: PUSH
22373: LD_INT 3
22375: NEG
22376: PUSH
22377: LD_INT 1
22379: NEG
22380: PUSH
22381: EMPTY
22382: LIST
22383: LIST
22384: PUSH
22385: EMPTY
22386: LIST
22387: LIST
22388: LIST
22389: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22390: LD_ADDR_VAR 0 58
22394: PUSH
22395: LD_INT 2
22397: NEG
22398: PUSH
22399: LD_INT 3
22401: NEG
22402: PUSH
22403: EMPTY
22404: LIST
22405: LIST
22406: PUSH
22407: LD_INT 3
22409: NEG
22410: PUSH
22411: LD_INT 2
22413: NEG
22414: PUSH
22415: EMPTY
22416: LIST
22417: LIST
22418: PUSH
22419: LD_INT 3
22421: NEG
22422: PUSH
22423: LD_INT 3
22425: NEG
22426: PUSH
22427: EMPTY
22428: LIST
22429: LIST
22430: PUSH
22431: EMPTY
22432: LIST
22433: LIST
22434: LIST
22435: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22436: LD_ADDR_VAR 0 59
22440: PUSH
22441: LD_INT 1
22443: NEG
22444: PUSH
22445: LD_INT 2
22447: NEG
22448: PUSH
22449: EMPTY
22450: LIST
22451: LIST
22452: PUSH
22453: LD_INT 0
22455: PUSH
22456: LD_INT 2
22458: NEG
22459: PUSH
22460: EMPTY
22461: LIST
22462: LIST
22463: PUSH
22464: LD_INT 1
22466: PUSH
22467: LD_INT 1
22469: NEG
22470: PUSH
22471: EMPTY
22472: LIST
22473: LIST
22474: PUSH
22475: EMPTY
22476: LIST
22477: LIST
22478: LIST
22479: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22480: LD_ADDR_VAR 0 60
22484: PUSH
22485: LD_INT 1
22487: PUSH
22488: LD_INT 1
22490: NEG
22491: PUSH
22492: EMPTY
22493: LIST
22494: LIST
22495: PUSH
22496: LD_INT 2
22498: PUSH
22499: LD_INT 0
22501: PUSH
22502: EMPTY
22503: LIST
22504: LIST
22505: PUSH
22506: LD_INT 2
22508: PUSH
22509: LD_INT 1
22511: PUSH
22512: EMPTY
22513: LIST
22514: LIST
22515: PUSH
22516: EMPTY
22517: LIST
22518: LIST
22519: LIST
22520: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22521: LD_ADDR_VAR 0 61
22525: PUSH
22526: LD_INT 2
22528: PUSH
22529: LD_INT 1
22531: PUSH
22532: EMPTY
22533: LIST
22534: LIST
22535: PUSH
22536: LD_INT 2
22538: PUSH
22539: LD_INT 2
22541: PUSH
22542: EMPTY
22543: LIST
22544: LIST
22545: PUSH
22546: LD_INT 1
22548: PUSH
22549: LD_INT 2
22551: PUSH
22552: EMPTY
22553: LIST
22554: LIST
22555: PUSH
22556: EMPTY
22557: LIST
22558: LIST
22559: LIST
22560: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22561: LD_ADDR_VAR 0 62
22565: PUSH
22566: LD_INT 1
22568: PUSH
22569: LD_INT 2
22571: PUSH
22572: EMPTY
22573: LIST
22574: LIST
22575: PUSH
22576: LD_INT 0
22578: PUSH
22579: LD_INT 2
22581: PUSH
22582: EMPTY
22583: LIST
22584: LIST
22585: PUSH
22586: LD_INT 1
22588: NEG
22589: PUSH
22590: LD_INT 1
22592: PUSH
22593: EMPTY
22594: LIST
22595: LIST
22596: PUSH
22597: EMPTY
22598: LIST
22599: LIST
22600: LIST
22601: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22602: LD_ADDR_VAR 0 63
22606: PUSH
22607: LD_INT 1
22609: NEG
22610: PUSH
22611: LD_INT 1
22613: PUSH
22614: EMPTY
22615: LIST
22616: LIST
22617: PUSH
22618: LD_INT 2
22620: NEG
22621: PUSH
22622: LD_INT 0
22624: PUSH
22625: EMPTY
22626: LIST
22627: LIST
22628: PUSH
22629: LD_INT 2
22631: NEG
22632: PUSH
22633: LD_INT 1
22635: NEG
22636: PUSH
22637: EMPTY
22638: LIST
22639: LIST
22640: PUSH
22641: EMPTY
22642: LIST
22643: LIST
22644: LIST
22645: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22646: LD_ADDR_VAR 0 64
22650: PUSH
22651: LD_INT 1
22653: NEG
22654: PUSH
22655: LD_INT 2
22657: NEG
22658: PUSH
22659: EMPTY
22660: LIST
22661: LIST
22662: PUSH
22663: LD_INT 2
22665: NEG
22666: PUSH
22667: LD_INT 1
22669: NEG
22670: PUSH
22671: EMPTY
22672: LIST
22673: LIST
22674: PUSH
22675: LD_INT 2
22677: NEG
22678: PUSH
22679: LD_INT 2
22681: NEG
22682: PUSH
22683: EMPTY
22684: LIST
22685: LIST
22686: PUSH
22687: EMPTY
22688: LIST
22689: LIST
22690: LIST
22691: ST_TO_ADDR
// end ; 2 :
22692: GO 25958
22694: LD_INT 2
22696: DOUBLE
22697: EQUAL
22698: IFTRUE 22702
22700: GO 25957
22702: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
22703: LD_ADDR_VAR 0 29
22707: PUSH
22708: LD_INT 4
22710: PUSH
22711: LD_INT 0
22713: PUSH
22714: EMPTY
22715: LIST
22716: LIST
22717: PUSH
22718: LD_INT 4
22720: PUSH
22721: LD_INT 1
22723: NEG
22724: PUSH
22725: EMPTY
22726: LIST
22727: LIST
22728: PUSH
22729: LD_INT 5
22731: PUSH
22732: LD_INT 0
22734: PUSH
22735: EMPTY
22736: LIST
22737: LIST
22738: PUSH
22739: LD_INT 5
22741: PUSH
22742: LD_INT 1
22744: PUSH
22745: EMPTY
22746: LIST
22747: LIST
22748: PUSH
22749: LD_INT 4
22751: PUSH
22752: LD_INT 1
22754: PUSH
22755: EMPTY
22756: LIST
22757: LIST
22758: PUSH
22759: LD_INT 3
22761: PUSH
22762: LD_INT 0
22764: PUSH
22765: EMPTY
22766: LIST
22767: LIST
22768: PUSH
22769: LD_INT 3
22771: PUSH
22772: LD_INT 1
22774: NEG
22775: PUSH
22776: EMPTY
22777: LIST
22778: LIST
22779: PUSH
22780: LD_INT 3
22782: PUSH
22783: LD_INT 2
22785: NEG
22786: PUSH
22787: EMPTY
22788: LIST
22789: LIST
22790: PUSH
22791: LD_INT 5
22793: PUSH
22794: LD_INT 2
22796: PUSH
22797: EMPTY
22798: LIST
22799: LIST
22800: PUSH
22801: LD_INT 3
22803: PUSH
22804: LD_INT 3
22806: PUSH
22807: EMPTY
22808: LIST
22809: LIST
22810: PUSH
22811: LD_INT 3
22813: PUSH
22814: LD_INT 2
22816: PUSH
22817: EMPTY
22818: LIST
22819: LIST
22820: PUSH
22821: LD_INT 4
22823: PUSH
22824: LD_INT 3
22826: PUSH
22827: EMPTY
22828: LIST
22829: LIST
22830: PUSH
22831: LD_INT 4
22833: PUSH
22834: LD_INT 4
22836: PUSH
22837: EMPTY
22838: LIST
22839: LIST
22840: PUSH
22841: LD_INT 3
22843: PUSH
22844: LD_INT 4
22846: PUSH
22847: EMPTY
22848: LIST
22849: LIST
22850: PUSH
22851: LD_INT 2
22853: PUSH
22854: LD_INT 3
22856: PUSH
22857: EMPTY
22858: LIST
22859: LIST
22860: PUSH
22861: LD_INT 2
22863: PUSH
22864: LD_INT 2
22866: PUSH
22867: EMPTY
22868: LIST
22869: LIST
22870: PUSH
22871: LD_INT 4
22873: PUSH
22874: LD_INT 2
22876: PUSH
22877: EMPTY
22878: LIST
22879: LIST
22880: PUSH
22881: LD_INT 2
22883: PUSH
22884: LD_INT 4
22886: PUSH
22887: EMPTY
22888: LIST
22889: LIST
22890: PUSH
22891: LD_INT 0
22893: PUSH
22894: LD_INT 4
22896: PUSH
22897: EMPTY
22898: LIST
22899: LIST
22900: PUSH
22901: LD_INT 0
22903: PUSH
22904: LD_INT 3
22906: PUSH
22907: EMPTY
22908: LIST
22909: LIST
22910: PUSH
22911: LD_INT 1
22913: PUSH
22914: LD_INT 4
22916: PUSH
22917: EMPTY
22918: LIST
22919: LIST
22920: PUSH
22921: LD_INT 1
22923: PUSH
22924: LD_INT 5
22926: PUSH
22927: EMPTY
22928: LIST
22929: LIST
22930: PUSH
22931: LD_INT 0
22933: PUSH
22934: LD_INT 5
22936: PUSH
22937: EMPTY
22938: LIST
22939: LIST
22940: PUSH
22941: LD_INT 1
22943: NEG
22944: PUSH
22945: LD_INT 4
22947: PUSH
22948: EMPTY
22949: LIST
22950: LIST
22951: PUSH
22952: LD_INT 1
22954: NEG
22955: PUSH
22956: LD_INT 3
22958: PUSH
22959: EMPTY
22960: LIST
22961: LIST
22962: PUSH
22963: LD_INT 2
22965: PUSH
22966: LD_INT 5
22968: PUSH
22969: EMPTY
22970: LIST
22971: LIST
22972: PUSH
22973: LD_INT 2
22975: NEG
22976: PUSH
22977: LD_INT 3
22979: PUSH
22980: EMPTY
22981: LIST
22982: LIST
22983: PUSH
22984: LD_INT 3
22986: NEG
22987: PUSH
22988: LD_INT 0
22990: PUSH
22991: EMPTY
22992: LIST
22993: LIST
22994: PUSH
22995: LD_INT 3
22997: NEG
22998: PUSH
22999: LD_INT 1
23001: NEG
23002: PUSH
23003: EMPTY
23004: LIST
23005: LIST
23006: PUSH
23007: LD_INT 2
23009: NEG
23010: PUSH
23011: LD_INT 0
23013: PUSH
23014: EMPTY
23015: LIST
23016: LIST
23017: PUSH
23018: LD_INT 2
23020: NEG
23021: PUSH
23022: LD_INT 1
23024: PUSH
23025: EMPTY
23026: LIST
23027: LIST
23028: PUSH
23029: LD_INT 3
23031: NEG
23032: PUSH
23033: LD_INT 1
23035: PUSH
23036: EMPTY
23037: LIST
23038: LIST
23039: PUSH
23040: LD_INT 4
23042: NEG
23043: PUSH
23044: LD_INT 0
23046: PUSH
23047: EMPTY
23048: LIST
23049: LIST
23050: PUSH
23051: LD_INT 4
23053: NEG
23054: PUSH
23055: LD_INT 1
23057: NEG
23058: PUSH
23059: EMPTY
23060: LIST
23061: LIST
23062: PUSH
23063: LD_INT 4
23065: NEG
23066: PUSH
23067: LD_INT 2
23069: NEG
23070: PUSH
23071: EMPTY
23072: LIST
23073: LIST
23074: PUSH
23075: LD_INT 2
23077: NEG
23078: PUSH
23079: LD_INT 2
23081: PUSH
23082: EMPTY
23083: LIST
23084: LIST
23085: PUSH
23086: LD_INT 4
23088: NEG
23089: PUSH
23090: LD_INT 4
23092: NEG
23093: PUSH
23094: EMPTY
23095: LIST
23096: LIST
23097: PUSH
23098: LD_INT 4
23100: NEG
23101: PUSH
23102: LD_INT 5
23104: NEG
23105: PUSH
23106: EMPTY
23107: LIST
23108: LIST
23109: PUSH
23110: LD_INT 3
23112: NEG
23113: PUSH
23114: LD_INT 4
23116: NEG
23117: PUSH
23118: EMPTY
23119: LIST
23120: LIST
23121: PUSH
23122: LD_INT 3
23124: NEG
23125: PUSH
23126: LD_INT 3
23128: NEG
23129: PUSH
23130: EMPTY
23131: LIST
23132: LIST
23133: PUSH
23134: LD_INT 4
23136: NEG
23137: PUSH
23138: LD_INT 3
23140: NEG
23141: PUSH
23142: EMPTY
23143: LIST
23144: LIST
23145: PUSH
23146: LD_INT 5
23148: NEG
23149: PUSH
23150: LD_INT 4
23152: NEG
23153: PUSH
23154: EMPTY
23155: LIST
23156: LIST
23157: PUSH
23158: LD_INT 5
23160: NEG
23161: PUSH
23162: LD_INT 5
23164: NEG
23165: PUSH
23166: EMPTY
23167: LIST
23168: LIST
23169: PUSH
23170: LD_INT 3
23172: NEG
23173: PUSH
23174: LD_INT 5
23176: NEG
23177: PUSH
23178: EMPTY
23179: LIST
23180: LIST
23181: PUSH
23182: LD_INT 5
23184: NEG
23185: PUSH
23186: LD_INT 3
23188: NEG
23189: PUSH
23190: EMPTY
23191: LIST
23192: LIST
23193: PUSH
23194: EMPTY
23195: LIST
23196: LIST
23197: LIST
23198: LIST
23199: LIST
23200: LIST
23201: LIST
23202: LIST
23203: LIST
23204: LIST
23205: LIST
23206: LIST
23207: LIST
23208: LIST
23209: LIST
23210: LIST
23211: LIST
23212: LIST
23213: LIST
23214: LIST
23215: LIST
23216: LIST
23217: LIST
23218: LIST
23219: LIST
23220: LIST
23221: LIST
23222: LIST
23223: LIST
23224: LIST
23225: LIST
23226: LIST
23227: LIST
23228: LIST
23229: LIST
23230: LIST
23231: LIST
23232: LIST
23233: LIST
23234: LIST
23235: LIST
23236: LIST
23237: LIST
23238: LIST
23239: LIST
23240: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23241: LD_ADDR_VAR 0 30
23245: PUSH
23246: LD_INT 4
23248: PUSH
23249: LD_INT 4
23251: PUSH
23252: EMPTY
23253: LIST
23254: LIST
23255: PUSH
23256: LD_INT 4
23258: PUSH
23259: LD_INT 3
23261: PUSH
23262: EMPTY
23263: LIST
23264: LIST
23265: PUSH
23266: LD_INT 5
23268: PUSH
23269: LD_INT 4
23271: PUSH
23272: EMPTY
23273: LIST
23274: LIST
23275: PUSH
23276: LD_INT 5
23278: PUSH
23279: LD_INT 5
23281: PUSH
23282: EMPTY
23283: LIST
23284: LIST
23285: PUSH
23286: LD_INT 4
23288: PUSH
23289: LD_INT 5
23291: PUSH
23292: EMPTY
23293: LIST
23294: LIST
23295: PUSH
23296: LD_INT 3
23298: PUSH
23299: LD_INT 4
23301: PUSH
23302: EMPTY
23303: LIST
23304: LIST
23305: PUSH
23306: LD_INT 3
23308: PUSH
23309: LD_INT 3
23311: PUSH
23312: EMPTY
23313: LIST
23314: LIST
23315: PUSH
23316: LD_INT 5
23318: PUSH
23319: LD_INT 3
23321: PUSH
23322: EMPTY
23323: LIST
23324: LIST
23325: PUSH
23326: LD_INT 3
23328: PUSH
23329: LD_INT 5
23331: PUSH
23332: EMPTY
23333: LIST
23334: LIST
23335: PUSH
23336: LD_INT 0
23338: PUSH
23339: LD_INT 3
23341: PUSH
23342: EMPTY
23343: LIST
23344: LIST
23345: PUSH
23346: LD_INT 0
23348: PUSH
23349: LD_INT 2
23351: PUSH
23352: EMPTY
23353: LIST
23354: LIST
23355: PUSH
23356: LD_INT 1
23358: PUSH
23359: LD_INT 3
23361: PUSH
23362: EMPTY
23363: LIST
23364: LIST
23365: PUSH
23366: LD_INT 1
23368: PUSH
23369: LD_INT 4
23371: PUSH
23372: EMPTY
23373: LIST
23374: LIST
23375: PUSH
23376: LD_INT 0
23378: PUSH
23379: LD_INT 4
23381: PUSH
23382: EMPTY
23383: LIST
23384: LIST
23385: PUSH
23386: LD_INT 1
23388: NEG
23389: PUSH
23390: LD_INT 3
23392: PUSH
23393: EMPTY
23394: LIST
23395: LIST
23396: PUSH
23397: LD_INT 1
23399: NEG
23400: PUSH
23401: LD_INT 2
23403: PUSH
23404: EMPTY
23405: LIST
23406: LIST
23407: PUSH
23408: LD_INT 2
23410: PUSH
23411: LD_INT 4
23413: PUSH
23414: EMPTY
23415: LIST
23416: LIST
23417: PUSH
23418: LD_INT 2
23420: NEG
23421: PUSH
23422: LD_INT 2
23424: PUSH
23425: EMPTY
23426: LIST
23427: LIST
23428: PUSH
23429: LD_INT 4
23431: NEG
23432: PUSH
23433: LD_INT 0
23435: PUSH
23436: EMPTY
23437: LIST
23438: LIST
23439: PUSH
23440: LD_INT 4
23442: NEG
23443: PUSH
23444: LD_INT 1
23446: NEG
23447: PUSH
23448: EMPTY
23449: LIST
23450: LIST
23451: PUSH
23452: LD_INT 3
23454: NEG
23455: PUSH
23456: LD_INT 0
23458: PUSH
23459: EMPTY
23460: LIST
23461: LIST
23462: PUSH
23463: LD_INT 3
23465: NEG
23466: PUSH
23467: LD_INT 1
23469: PUSH
23470: EMPTY
23471: LIST
23472: LIST
23473: PUSH
23474: LD_INT 4
23476: NEG
23477: PUSH
23478: LD_INT 1
23480: PUSH
23481: EMPTY
23482: LIST
23483: LIST
23484: PUSH
23485: LD_INT 5
23487: NEG
23488: PUSH
23489: LD_INT 0
23491: PUSH
23492: EMPTY
23493: LIST
23494: LIST
23495: PUSH
23496: LD_INT 5
23498: NEG
23499: PUSH
23500: LD_INT 1
23502: NEG
23503: PUSH
23504: EMPTY
23505: LIST
23506: LIST
23507: PUSH
23508: LD_INT 5
23510: NEG
23511: PUSH
23512: LD_INT 2
23514: NEG
23515: PUSH
23516: EMPTY
23517: LIST
23518: LIST
23519: PUSH
23520: LD_INT 3
23522: NEG
23523: PUSH
23524: LD_INT 2
23526: PUSH
23527: EMPTY
23528: LIST
23529: LIST
23530: PUSH
23531: LD_INT 3
23533: NEG
23534: PUSH
23535: LD_INT 3
23537: NEG
23538: PUSH
23539: EMPTY
23540: LIST
23541: LIST
23542: PUSH
23543: LD_INT 3
23545: NEG
23546: PUSH
23547: LD_INT 4
23549: NEG
23550: PUSH
23551: EMPTY
23552: LIST
23553: LIST
23554: PUSH
23555: LD_INT 2
23557: NEG
23558: PUSH
23559: LD_INT 3
23561: NEG
23562: PUSH
23563: EMPTY
23564: LIST
23565: LIST
23566: PUSH
23567: LD_INT 2
23569: NEG
23570: PUSH
23571: LD_INT 2
23573: NEG
23574: PUSH
23575: EMPTY
23576: LIST
23577: LIST
23578: PUSH
23579: LD_INT 3
23581: NEG
23582: PUSH
23583: LD_INT 2
23585: NEG
23586: PUSH
23587: EMPTY
23588: LIST
23589: LIST
23590: PUSH
23591: LD_INT 4
23593: NEG
23594: PUSH
23595: LD_INT 3
23597: NEG
23598: PUSH
23599: EMPTY
23600: LIST
23601: LIST
23602: PUSH
23603: LD_INT 4
23605: NEG
23606: PUSH
23607: LD_INT 4
23609: NEG
23610: PUSH
23611: EMPTY
23612: LIST
23613: LIST
23614: PUSH
23615: LD_INT 2
23617: NEG
23618: PUSH
23619: LD_INT 4
23621: NEG
23622: PUSH
23623: EMPTY
23624: LIST
23625: LIST
23626: PUSH
23627: LD_INT 4
23629: NEG
23630: PUSH
23631: LD_INT 2
23633: NEG
23634: PUSH
23635: EMPTY
23636: LIST
23637: LIST
23638: PUSH
23639: LD_INT 0
23641: PUSH
23642: LD_INT 4
23644: NEG
23645: PUSH
23646: EMPTY
23647: LIST
23648: LIST
23649: PUSH
23650: LD_INT 0
23652: PUSH
23653: LD_INT 5
23655: NEG
23656: PUSH
23657: EMPTY
23658: LIST
23659: LIST
23660: PUSH
23661: LD_INT 1
23663: PUSH
23664: LD_INT 4
23666: NEG
23667: PUSH
23668: EMPTY
23669: LIST
23670: LIST
23671: PUSH
23672: LD_INT 1
23674: PUSH
23675: LD_INT 3
23677: NEG
23678: PUSH
23679: EMPTY
23680: LIST
23681: LIST
23682: PUSH
23683: LD_INT 0
23685: PUSH
23686: LD_INT 3
23688: NEG
23689: PUSH
23690: EMPTY
23691: LIST
23692: LIST
23693: PUSH
23694: LD_INT 1
23696: NEG
23697: PUSH
23698: LD_INT 4
23700: NEG
23701: PUSH
23702: EMPTY
23703: LIST
23704: LIST
23705: PUSH
23706: LD_INT 1
23708: NEG
23709: PUSH
23710: LD_INT 5
23712: NEG
23713: PUSH
23714: EMPTY
23715: LIST
23716: LIST
23717: PUSH
23718: LD_INT 2
23720: PUSH
23721: LD_INT 3
23723: NEG
23724: PUSH
23725: EMPTY
23726: LIST
23727: LIST
23728: PUSH
23729: LD_INT 2
23731: NEG
23732: PUSH
23733: LD_INT 5
23735: NEG
23736: PUSH
23737: EMPTY
23738: LIST
23739: LIST
23740: PUSH
23741: EMPTY
23742: LIST
23743: LIST
23744: LIST
23745: LIST
23746: LIST
23747: LIST
23748: LIST
23749: LIST
23750: LIST
23751: LIST
23752: LIST
23753: LIST
23754: LIST
23755: LIST
23756: LIST
23757: LIST
23758: LIST
23759: LIST
23760: LIST
23761: LIST
23762: LIST
23763: LIST
23764: LIST
23765: LIST
23766: LIST
23767: LIST
23768: LIST
23769: LIST
23770: LIST
23771: LIST
23772: LIST
23773: LIST
23774: LIST
23775: LIST
23776: LIST
23777: LIST
23778: LIST
23779: LIST
23780: LIST
23781: LIST
23782: LIST
23783: LIST
23784: LIST
23785: LIST
23786: LIST
23787: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
23788: LD_ADDR_VAR 0 31
23792: PUSH
23793: LD_INT 0
23795: PUSH
23796: LD_INT 4
23798: PUSH
23799: EMPTY
23800: LIST
23801: LIST
23802: PUSH
23803: LD_INT 0
23805: PUSH
23806: LD_INT 3
23808: PUSH
23809: EMPTY
23810: LIST
23811: LIST
23812: PUSH
23813: LD_INT 1
23815: PUSH
23816: LD_INT 4
23818: PUSH
23819: EMPTY
23820: LIST
23821: LIST
23822: PUSH
23823: LD_INT 1
23825: PUSH
23826: LD_INT 5
23828: PUSH
23829: EMPTY
23830: LIST
23831: LIST
23832: PUSH
23833: LD_INT 0
23835: PUSH
23836: LD_INT 5
23838: PUSH
23839: EMPTY
23840: LIST
23841: LIST
23842: PUSH
23843: LD_INT 1
23845: NEG
23846: PUSH
23847: LD_INT 4
23849: PUSH
23850: EMPTY
23851: LIST
23852: LIST
23853: PUSH
23854: LD_INT 1
23856: NEG
23857: PUSH
23858: LD_INT 3
23860: PUSH
23861: EMPTY
23862: LIST
23863: LIST
23864: PUSH
23865: LD_INT 2
23867: PUSH
23868: LD_INT 5
23870: PUSH
23871: EMPTY
23872: LIST
23873: LIST
23874: PUSH
23875: LD_INT 2
23877: NEG
23878: PUSH
23879: LD_INT 3
23881: PUSH
23882: EMPTY
23883: LIST
23884: LIST
23885: PUSH
23886: LD_INT 3
23888: NEG
23889: PUSH
23890: LD_INT 0
23892: PUSH
23893: EMPTY
23894: LIST
23895: LIST
23896: PUSH
23897: LD_INT 3
23899: NEG
23900: PUSH
23901: LD_INT 1
23903: NEG
23904: PUSH
23905: EMPTY
23906: LIST
23907: LIST
23908: PUSH
23909: LD_INT 2
23911: NEG
23912: PUSH
23913: LD_INT 0
23915: PUSH
23916: EMPTY
23917: LIST
23918: LIST
23919: PUSH
23920: LD_INT 2
23922: NEG
23923: PUSH
23924: LD_INT 1
23926: PUSH
23927: EMPTY
23928: LIST
23929: LIST
23930: PUSH
23931: LD_INT 3
23933: NEG
23934: PUSH
23935: LD_INT 1
23937: PUSH
23938: EMPTY
23939: LIST
23940: LIST
23941: PUSH
23942: LD_INT 4
23944: NEG
23945: PUSH
23946: LD_INT 0
23948: PUSH
23949: EMPTY
23950: LIST
23951: LIST
23952: PUSH
23953: LD_INT 4
23955: NEG
23956: PUSH
23957: LD_INT 1
23959: NEG
23960: PUSH
23961: EMPTY
23962: LIST
23963: LIST
23964: PUSH
23965: LD_INT 4
23967: NEG
23968: PUSH
23969: LD_INT 2
23971: NEG
23972: PUSH
23973: EMPTY
23974: LIST
23975: LIST
23976: PUSH
23977: LD_INT 2
23979: NEG
23980: PUSH
23981: LD_INT 2
23983: PUSH
23984: EMPTY
23985: LIST
23986: LIST
23987: PUSH
23988: LD_INT 4
23990: NEG
23991: PUSH
23992: LD_INT 4
23994: NEG
23995: PUSH
23996: EMPTY
23997: LIST
23998: LIST
23999: PUSH
24000: LD_INT 4
24002: NEG
24003: PUSH
24004: LD_INT 5
24006: NEG
24007: PUSH
24008: EMPTY
24009: LIST
24010: LIST
24011: PUSH
24012: LD_INT 3
24014: NEG
24015: PUSH
24016: LD_INT 4
24018: NEG
24019: PUSH
24020: EMPTY
24021: LIST
24022: LIST
24023: PUSH
24024: LD_INT 3
24026: NEG
24027: PUSH
24028: LD_INT 3
24030: NEG
24031: PUSH
24032: EMPTY
24033: LIST
24034: LIST
24035: PUSH
24036: LD_INT 4
24038: NEG
24039: PUSH
24040: LD_INT 3
24042: NEG
24043: PUSH
24044: EMPTY
24045: LIST
24046: LIST
24047: PUSH
24048: LD_INT 5
24050: NEG
24051: PUSH
24052: LD_INT 4
24054: NEG
24055: PUSH
24056: EMPTY
24057: LIST
24058: LIST
24059: PUSH
24060: LD_INT 5
24062: NEG
24063: PUSH
24064: LD_INT 5
24066: NEG
24067: PUSH
24068: EMPTY
24069: LIST
24070: LIST
24071: PUSH
24072: LD_INT 3
24074: NEG
24075: PUSH
24076: LD_INT 5
24078: NEG
24079: PUSH
24080: EMPTY
24081: LIST
24082: LIST
24083: PUSH
24084: LD_INT 5
24086: NEG
24087: PUSH
24088: LD_INT 3
24090: NEG
24091: PUSH
24092: EMPTY
24093: LIST
24094: LIST
24095: PUSH
24096: LD_INT 0
24098: PUSH
24099: LD_INT 3
24101: NEG
24102: PUSH
24103: EMPTY
24104: LIST
24105: LIST
24106: PUSH
24107: LD_INT 0
24109: PUSH
24110: LD_INT 4
24112: NEG
24113: PUSH
24114: EMPTY
24115: LIST
24116: LIST
24117: PUSH
24118: LD_INT 1
24120: PUSH
24121: LD_INT 3
24123: NEG
24124: PUSH
24125: EMPTY
24126: LIST
24127: LIST
24128: PUSH
24129: LD_INT 1
24131: PUSH
24132: LD_INT 2
24134: NEG
24135: PUSH
24136: EMPTY
24137: LIST
24138: LIST
24139: PUSH
24140: LD_INT 0
24142: PUSH
24143: LD_INT 2
24145: NEG
24146: PUSH
24147: EMPTY
24148: LIST
24149: LIST
24150: PUSH
24151: LD_INT 1
24153: NEG
24154: PUSH
24155: LD_INT 3
24157: NEG
24158: PUSH
24159: EMPTY
24160: LIST
24161: LIST
24162: PUSH
24163: LD_INT 1
24165: NEG
24166: PUSH
24167: LD_INT 4
24169: NEG
24170: PUSH
24171: EMPTY
24172: LIST
24173: LIST
24174: PUSH
24175: LD_INT 2
24177: PUSH
24178: LD_INT 2
24180: NEG
24181: PUSH
24182: EMPTY
24183: LIST
24184: LIST
24185: PUSH
24186: LD_INT 2
24188: NEG
24189: PUSH
24190: LD_INT 4
24192: NEG
24193: PUSH
24194: EMPTY
24195: LIST
24196: LIST
24197: PUSH
24198: LD_INT 4
24200: PUSH
24201: LD_INT 0
24203: PUSH
24204: EMPTY
24205: LIST
24206: LIST
24207: PUSH
24208: LD_INT 4
24210: PUSH
24211: LD_INT 1
24213: NEG
24214: PUSH
24215: EMPTY
24216: LIST
24217: LIST
24218: PUSH
24219: LD_INT 5
24221: PUSH
24222: LD_INT 0
24224: PUSH
24225: EMPTY
24226: LIST
24227: LIST
24228: PUSH
24229: LD_INT 5
24231: PUSH
24232: LD_INT 1
24234: PUSH
24235: EMPTY
24236: LIST
24237: LIST
24238: PUSH
24239: LD_INT 4
24241: PUSH
24242: LD_INT 1
24244: PUSH
24245: EMPTY
24246: LIST
24247: LIST
24248: PUSH
24249: LD_INT 3
24251: PUSH
24252: LD_INT 0
24254: PUSH
24255: EMPTY
24256: LIST
24257: LIST
24258: PUSH
24259: LD_INT 3
24261: PUSH
24262: LD_INT 1
24264: NEG
24265: PUSH
24266: EMPTY
24267: LIST
24268: LIST
24269: PUSH
24270: LD_INT 3
24272: PUSH
24273: LD_INT 2
24275: NEG
24276: PUSH
24277: EMPTY
24278: LIST
24279: LIST
24280: PUSH
24281: LD_INT 5
24283: PUSH
24284: LD_INT 2
24286: PUSH
24287: EMPTY
24288: LIST
24289: LIST
24290: PUSH
24291: EMPTY
24292: LIST
24293: LIST
24294: LIST
24295: LIST
24296: LIST
24297: LIST
24298: LIST
24299: LIST
24300: LIST
24301: LIST
24302: LIST
24303: LIST
24304: LIST
24305: LIST
24306: LIST
24307: LIST
24308: LIST
24309: LIST
24310: LIST
24311: LIST
24312: LIST
24313: LIST
24314: LIST
24315: LIST
24316: LIST
24317: LIST
24318: LIST
24319: LIST
24320: LIST
24321: LIST
24322: LIST
24323: LIST
24324: LIST
24325: LIST
24326: LIST
24327: LIST
24328: LIST
24329: LIST
24330: LIST
24331: LIST
24332: LIST
24333: LIST
24334: LIST
24335: LIST
24336: LIST
24337: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24338: LD_ADDR_VAR 0 32
24342: PUSH
24343: LD_INT 4
24345: NEG
24346: PUSH
24347: LD_INT 0
24349: PUSH
24350: EMPTY
24351: LIST
24352: LIST
24353: PUSH
24354: LD_INT 4
24356: NEG
24357: PUSH
24358: LD_INT 1
24360: NEG
24361: PUSH
24362: EMPTY
24363: LIST
24364: LIST
24365: PUSH
24366: LD_INT 3
24368: NEG
24369: PUSH
24370: LD_INT 0
24372: PUSH
24373: EMPTY
24374: LIST
24375: LIST
24376: PUSH
24377: LD_INT 3
24379: NEG
24380: PUSH
24381: LD_INT 1
24383: PUSH
24384: EMPTY
24385: LIST
24386: LIST
24387: PUSH
24388: LD_INT 4
24390: NEG
24391: PUSH
24392: LD_INT 1
24394: PUSH
24395: EMPTY
24396: LIST
24397: LIST
24398: PUSH
24399: LD_INT 5
24401: NEG
24402: PUSH
24403: LD_INT 0
24405: PUSH
24406: EMPTY
24407: LIST
24408: LIST
24409: PUSH
24410: LD_INT 5
24412: NEG
24413: PUSH
24414: LD_INT 1
24416: NEG
24417: PUSH
24418: EMPTY
24419: LIST
24420: LIST
24421: PUSH
24422: LD_INT 5
24424: NEG
24425: PUSH
24426: LD_INT 2
24428: NEG
24429: PUSH
24430: EMPTY
24431: LIST
24432: LIST
24433: PUSH
24434: LD_INT 3
24436: NEG
24437: PUSH
24438: LD_INT 2
24440: PUSH
24441: EMPTY
24442: LIST
24443: LIST
24444: PUSH
24445: LD_INT 3
24447: NEG
24448: PUSH
24449: LD_INT 3
24451: NEG
24452: PUSH
24453: EMPTY
24454: LIST
24455: LIST
24456: PUSH
24457: LD_INT 3
24459: NEG
24460: PUSH
24461: LD_INT 4
24463: NEG
24464: PUSH
24465: EMPTY
24466: LIST
24467: LIST
24468: PUSH
24469: LD_INT 2
24471: NEG
24472: PUSH
24473: LD_INT 3
24475: NEG
24476: PUSH
24477: EMPTY
24478: LIST
24479: LIST
24480: PUSH
24481: LD_INT 2
24483: NEG
24484: PUSH
24485: LD_INT 2
24487: NEG
24488: PUSH
24489: EMPTY
24490: LIST
24491: LIST
24492: PUSH
24493: LD_INT 3
24495: NEG
24496: PUSH
24497: LD_INT 2
24499: NEG
24500: PUSH
24501: EMPTY
24502: LIST
24503: LIST
24504: PUSH
24505: LD_INT 4
24507: NEG
24508: PUSH
24509: LD_INT 3
24511: NEG
24512: PUSH
24513: EMPTY
24514: LIST
24515: LIST
24516: PUSH
24517: LD_INT 4
24519: NEG
24520: PUSH
24521: LD_INT 4
24523: NEG
24524: PUSH
24525: EMPTY
24526: LIST
24527: LIST
24528: PUSH
24529: LD_INT 2
24531: NEG
24532: PUSH
24533: LD_INT 4
24535: NEG
24536: PUSH
24537: EMPTY
24538: LIST
24539: LIST
24540: PUSH
24541: LD_INT 4
24543: NEG
24544: PUSH
24545: LD_INT 2
24547: NEG
24548: PUSH
24549: EMPTY
24550: LIST
24551: LIST
24552: PUSH
24553: LD_INT 0
24555: PUSH
24556: LD_INT 4
24558: NEG
24559: PUSH
24560: EMPTY
24561: LIST
24562: LIST
24563: PUSH
24564: LD_INT 0
24566: PUSH
24567: LD_INT 5
24569: NEG
24570: PUSH
24571: EMPTY
24572: LIST
24573: LIST
24574: PUSH
24575: LD_INT 1
24577: PUSH
24578: LD_INT 4
24580: NEG
24581: PUSH
24582: EMPTY
24583: LIST
24584: LIST
24585: PUSH
24586: LD_INT 1
24588: PUSH
24589: LD_INT 3
24591: NEG
24592: PUSH
24593: EMPTY
24594: LIST
24595: LIST
24596: PUSH
24597: LD_INT 0
24599: PUSH
24600: LD_INT 3
24602: NEG
24603: PUSH
24604: EMPTY
24605: LIST
24606: LIST
24607: PUSH
24608: LD_INT 1
24610: NEG
24611: PUSH
24612: LD_INT 4
24614: NEG
24615: PUSH
24616: EMPTY
24617: LIST
24618: LIST
24619: PUSH
24620: LD_INT 1
24622: NEG
24623: PUSH
24624: LD_INT 5
24626: NEG
24627: PUSH
24628: EMPTY
24629: LIST
24630: LIST
24631: PUSH
24632: LD_INT 2
24634: PUSH
24635: LD_INT 3
24637: NEG
24638: PUSH
24639: EMPTY
24640: LIST
24641: LIST
24642: PUSH
24643: LD_INT 2
24645: NEG
24646: PUSH
24647: LD_INT 5
24649: NEG
24650: PUSH
24651: EMPTY
24652: LIST
24653: LIST
24654: PUSH
24655: LD_INT 3
24657: PUSH
24658: LD_INT 0
24660: PUSH
24661: EMPTY
24662: LIST
24663: LIST
24664: PUSH
24665: LD_INT 3
24667: PUSH
24668: LD_INT 1
24670: NEG
24671: PUSH
24672: EMPTY
24673: LIST
24674: LIST
24675: PUSH
24676: LD_INT 4
24678: PUSH
24679: LD_INT 0
24681: PUSH
24682: EMPTY
24683: LIST
24684: LIST
24685: PUSH
24686: LD_INT 4
24688: PUSH
24689: LD_INT 1
24691: PUSH
24692: EMPTY
24693: LIST
24694: LIST
24695: PUSH
24696: LD_INT 3
24698: PUSH
24699: LD_INT 1
24701: PUSH
24702: EMPTY
24703: LIST
24704: LIST
24705: PUSH
24706: LD_INT 2
24708: PUSH
24709: LD_INT 0
24711: PUSH
24712: EMPTY
24713: LIST
24714: LIST
24715: PUSH
24716: LD_INT 2
24718: PUSH
24719: LD_INT 1
24721: NEG
24722: PUSH
24723: EMPTY
24724: LIST
24725: LIST
24726: PUSH
24727: LD_INT 2
24729: PUSH
24730: LD_INT 2
24732: NEG
24733: PUSH
24734: EMPTY
24735: LIST
24736: LIST
24737: PUSH
24738: LD_INT 4
24740: PUSH
24741: LD_INT 2
24743: PUSH
24744: EMPTY
24745: LIST
24746: LIST
24747: PUSH
24748: LD_INT 4
24750: PUSH
24751: LD_INT 4
24753: PUSH
24754: EMPTY
24755: LIST
24756: LIST
24757: PUSH
24758: LD_INT 4
24760: PUSH
24761: LD_INT 3
24763: PUSH
24764: EMPTY
24765: LIST
24766: LIST
24767: PUSH
24768: LD_INT 5
24770: PUSH
24771: LD_INT 4
24773: PUSH
24774: EMPTY
24775: LIST
24776: LIST
24777: PUSH
24778: LD_INT 5
24780: PUSH
24781: LD_INT 5
24783: PUSH
24784: EMPTY
24785: LIST
24786: LIST
24787: PUSH
24788: LD_INT 4
24790: PUSH
24791: LD_INT 5
24793: PUSH
24794: EMPTY
24795: LIST
24796: LIST
24797: PUSH
24798: LD_INT 3
24800: PUSH
24801: LD_INT 4
24803: PUSH
24804: EMPTY
24805: LIST
24806: LIST
24807: PUSH
24808: LD_INT 3
24810: PUSH
24811: LD_INT 3
24813: PUSH
24814: EMPTY
24815: LIST
24816: LIST
24817: PUSH
24818: LD_INT 5
24820: PUSH
24821: LD_INT 3
24823: PUSH
24824: EMPTY
24825: LIST
24826: LIST
24827: PUSH
24828: LD_INT 3
24830: PUSH
24831: LD_INT 5
24833: PUSH
24834: EMPTY
24835: LIST
24836: LIST
24837: PUSH
24838: EMPTY
24839: LIST
24840: LIST
24841: LIST
24842: LIST
24843: LIST
24844: LIST
24845: LIST
24846: LIST
24847: LIST
24848: LIST
24849: LIST
24850: LIST
24851: LIST
24852: LIST
24853: LIST
24854: LIST
24855: LIST
24856: LIST
24857: LIST
24858: LIST
24859: LIST
24860: LIST
24861: LIST
24862: LIST
24863: LIST
24864: LIST
24865: LIST
24866: LIST
24867: LIST
24868: LIST
24869: LIST
24870: LIST
24871: LIST
24872: LIST
24873: LIST
24874: LIST
24875: LIST
24876: LIST
24877: LIST
24878: LIST
24879: LIST
24880: LIST
24881: LIST
24882: LIST
24883: LIST
24884: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
24885: LD_ADDR_VAR 0 33
24889: PUSH
24890: LD_INT 4
24892: NEG
24893: PUSH
24894: LD_INT 4
24896: NEG
24897: PUSH
24898: EMPTY
24899: LIST
24900: LIST
24901: PUSH
24902: LD_INT 4
24904: NEG
24905: PUSH
24906: LD_INT 5
24908: NEG
24909: PUSH
24910: EMPTY
24911: LIST
24912: LIST
24913: PUSH
24914: LD_INT 3
24916: NEG
24917: PUSH
24918: LD_INT 4
24920: NEG
24921: PUSH
24922: EMPTY
24923: LIST
24924: LIST
24925: PUSH
24926: LD_INT 3
24928: NEG
24929: PUSH
24930: LD_INT 3
24932: NEG
24933: PUSH
24934: EMPTY
24935: LIST
24936: LIST
24937: PUSH
24938: LD_INT 4
24940: NEG
24941: PUSH
24942: LD_INT 3
24944: NEG
24945: PUSH
24946: EMPTY
24947: LIST
24948: LIST
24949: PUSH
24950: LD_INT 5
24952: NEG
24953: PUSH
24954: LD_INT 4
24956: NEG
24957: PUSH
24958: EMPTY
24959: LIST
24960: LIST
24961: PUSH
24962: LD_INT 5
24964: NEG
24965: PUSH
24966: LD_INT 5
24968: NEG
24969: PUSH
24970: EMPTY
24971: LIST
24972: LIST
24973: PUSH
24974: LD_INT 3
24976: NEG
24977: PUSH
24978: LD_INT 5
24980: NEG
24981: PUSH
24982: EMPTY
24983: LIST
24984: LIST
24985: PUSH
24986: LD_INT 5
24988: NEG
24989: PUSH
24990: LD_INT 3
24992: NEG
24993: PUSH
24994: EMPTY
24995: LIST
24996: LIST
24997: PUSH
24998: LD_INT 0
25000: PUSH
25001: LD_INT 3
25003: NEG
25004: PUSH
25005: EMPTY
25006: LIST
25007: LIST
25008: PUSH
25009: LD_INT 0
25011: PUSH
25012: LD_INT 4
25014: NEG
25015: PUSH
25016: EMPTY
25017: LIST
25018: LIST
25019: PUSH
25020: LD_INT 1
25022: PUSH
25023: LD_INT 3
25025: NEG
25026: PUSH
25027: EMPTY
25028: LIST
25029: LIST
25030: PUSH
25031: LD_INT 1
25033: PUSH
25034: LD_INT 2
25036: NEG
25037: PUSH
25038: EMPTY
25039: LIST
25040: LIST
25041: PUSH
25042: LD_INT 0
25044: PUSH
25045: LD_INT 2
25047: NEG
25048: PUSH
25049: EMPTY
25050: LIST
25051: LIST
25052: PUSH
25053: LD_INT 1
25055: NEG
25056: PUSH
25057: LD_INT 3
25059: NEG
25060: PUSH
25061: EMPTY
25062: LIST
25063: LIST
25064: PUSH
25065: LD_INT 1
25067: NEG
25068: PUSH
25069: LD_INT 4
25071: NEG
25072: PUSH
25073: EMPTY
25074: LIST
25075: LIST
25076: PUSH
25077: LD_INT 2
25079: PUSH
25080: LD_INT 2
25082: NEG
25083: PUSH
25084: EMPTY
25085: LIST
25086: LIST
25087: PUSH
25088: LD_INT 2
25090: NEG
25091: PUSH
25092: LD_INT 4
25094: NEG
25095: PUSH
25096: EMPTY
25097: LIST
25098: LIST
25099: PUSH
25100: LD_INT 4
25102: PUSH
25103: LD_INT 0
25105: PUSH
25106: EMPTY
25107: LIST
25108: LIST
25109: PUSH
25110: LD_INT 4
25112: PUSH
25113: LD_INT 1
25115: NEG
25116: PUSH
25117: EMPTY
25118: LIST
25119: LIST
25120: PUSH
25121: LD_INT 5
25123: PUSH
25124: LD_INT 0
25126: PUSH
25127: EMPTY
25128: LIST
25129: LIST
25130: PUSH
25131: LD_INT 5
25133: PUSH
25134: LD_INT 1
25136: PUSH
25137: EMPTY
25138: LIST
25139: LIST
25140: PUSH
25141: LD_INT 4
25143: PUSH
25144: LD_INT 1
25146: PUSH
25147: EMPTY
25148: LIST
25149: LIST
25150: PUSH
25151: LD_INT 3
25153: PUSH
25154: LD_INT 0
25156: PUSH
25157: EMPTY
25158: LIST
25159: LIST
25160: PUSH
25161: LD_INT 3
25163: PUSH
25164: LD_INT 1
25166: NEG
25167: PUSH
25168: EMPTY
25169: LIST
25170: LIST
25171: PUSH
25172: LD_INT 3
25174: PUSH
25175: LD_INT 2
25177: NEG
25178: PUSH
25179: EMPTY
25180: LIST
25181: LIST
25182: PUSH
25183: LD_INT 5
25185: PUSH
25186: LD_INT 2
25188: PUSH
25189: EMPTY
25190: LIST
25191: LIST
25192: PUSH
25193: LD_INT 3
25195: PUSH
25196: LD_INT 3
25198: PUSH
25199: EMPTY
25200: LIST
25201: LIST
25202: PUSH
25203: LD_INT 3
25205: PUSH
25206: LD_INT 2
25208: PUSH
25209: EMPTY
25210: LIST
25211: LIST
25212: PUSH
25213: LD_INT 4
25215: PUSH
25216: LD_INT 3
25218: PUSH
25219: EMPTY
25220: LIST
25221: LIST
25222: PUSH
25223: LD_INT 4
25225: PUSH
25226: LD_INT 4
25228: PUSH
25229: EMPTY
25230: LIST
25231: LIST
25232: PUSH
25233: LD_INT 3
25235: PUSH
25236: LD_INT 4
25238: PUSH
25239: EMPTY
25240: LIST
25241: LIST
25242: PUSH
25243: LD_INT 2
25245: PUSH
25246: LD_INT 3
25248: PUSH
25249: EMPTY
25250: LIST
25251: LIST
25252: PUSH
25253: LD_INT 2
25255: PUSH
25256: LD_INT 2
25258: PUSH
25259: EMPTY
25260: LIST
25261: LIST
25262: PUSH
25263: LD_INT 4
25265: PUSH
25266: LD_INT 2
25268: PUSH
25269: EMPTY
25270: LIST
25271: LIST
25272: PUSH
25273: LD_INT 2
25275: PUSH
25276: LD_INT 4
25278: PUSH
25279: EMPTY
25280: LIST
25281: LIST
25282: PUSH
25283: LD_INT 0
25285: PUSH
25286: LD_INT 4
25288: PUSH
25289: EMPTY
25290: LIST
25291: LIST
25292: PUSH
25293: LD_INT 0
25295: PUSH
25296: LD_INT 3
25298: PUSH
25299: EMPTY
25300: LIST
25301: LIST
25302: PUSH
25303: LD_INT 1
25305: PUSH
25306: LD_INT 4
25308: PUSH
25309: EMPTY
25310: LIST
25311: LIST
25312: PUSH
25313: LD_INT 1
25315: PUSH
25316: LD_INT 5
25318: PUSH
25319: EMPTY
25320: LIST
25321: LIST
25322: PUSH
25323: LD_INT 0
25325: PUSH
25326: LD_INT 5
25328: PUSH
25329: EMPTY
25330: LIST
25331: LIST
25332: PUSH
25333: LD_INT 1
25335: NEG
25336: PUSH
25337: LD_INT 4
25339: PUSH
25340: EMPTY
25341: LIST
25342: LIST
25343: PUSH
25344: LD_INT 1
25346: NEG
25347: PUSH
25348: LD_INT 3
25350: PUSH
25351: EMPTY
25352: LIST
25353: LIST
25354: PUSH
25355: LD_INT 2
25357: PUSH
25358: LD_INT 5
25360: PUSH
25361: EMPTY
25362: LIST
25363: LIST
25364: PUSH
25365: LD_INT 2
25367: NEG
25368: PUSH
25369: LD_INT 3
25371: PUSH
25372: EMPTY
25373: LIST
25374: LIST
25375: PUSH
25376: EMPTY
25377: LIST
25378: LIST
25379: LIST
25380: LIST
25381: LIST
25382: LIST
25383: LIST
25384: LIST
25385: LIST
25386: LIST
25387: LIST
25388: LIST
25389: LIST
25390: LIST
25391: LIST
25392: LIST
25393: LIST
25394: LIST
25395: LIST
25396: LIST
25397: LIST
25398: LIST
25399: LIST
25400: LIST
25401: LIST
25402: LIST
25403: LIST
25404: LIST
25405: LIST
25406: LIST
25407: LIST
25408: LIST
25409: LIST
25410: LIST
25411: LIST
25412: LIST
25413: LIST
25414: LIST
25415: LIST
25416: LIST
25417: LIST
25418: LIST
25419: LIST
25420: LIST
25421: LIST
25422: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25423: LD_ADDR_VAR 0 34
25427: PUSH
25428: LD_INT 0
25430: PUSH
25431: LD_INT 4
25433: NEG
25434: PUSH
25435: EMPTY
25436: LIST
25437: LIST
25438: PUSH
25439: LD_INT 0
25441: PUSH
25442: LD_INT 5
25444: NEG
25445: PUSH
25446: EMPTY
25447: LIST
25448: LIST
25449: PUSH
25450: LD_INT 1
25452: PUSH
25453: LD_INT 4
25455: NEG
25456: PUSH
25457: EMPTY
25458: LIST
25459: LIST
25460: PUSH
25461: LD_INT 1
25463: PUSH
25464: LD_INT 3
25466: NEG
25467: PUSH
25468: EMPTY
25469: LIST
25470: LIST
25471: PUSH
25472: LD_INT 0
25474: PUSH
25475: LD_INT 3
25477: NEG
25478: PUSH
25479: EMPTY
25480: LIST
25481: LIST
25482: PUSH
25483: LD_INT 1
25485: NEG
25486: PUSH
25487: LD_INT 4
25489: NEG
25490: PUSH
25491: EMPTY
25492: LIST
25493: LIST
25494: PUSH
25495: LD_INT 1
25497: NEG
25498: PUSH
25499: LD_INT 5
25501: NEG
25502: PUSH
25503: EMPTY
25504: LIST
25505: LIST
25506: PUSH
25507: LD_INT 2
25509: PUSH
25510: LD_INT 3
25512: NEG
25513: PUSH
25514: EMPTY
25515: LIST
25516: LIST
25517: PUSH
25518: LD_INT 2
25520: NEG
25521: PUSH
25522: LD_INT 5
25524: NEG
25525: PUSH
25526: EMPTY
25527: LIST
25528: LIST
25529: PUSH
25530: LD_INT 3
25532: PUSH
25533: LD_INT 0
25535: PUSH
25536: EMPTY
25537: LIST
25538: LIST
25539: PUSH
25540: LD_INT 3
25542: PUSH
25543: LD_INT 1
25545: NEG
25546: PUSH
25547: EMPTY
25548: LIST
25549: LIST
25550: PUSH
25551: LD_INT 4
25553: PUSH
25554: LD_INT 0
25556: PUSH
25557: EMPTY
25558: LIST
25559: LIST
25560: PUSH
25561: LD_INT 4
25563: PUSH
25564: LD_INT 1
25566: PUSH
25567: EMPTY
25568: LIST
25569: LIST
25570: PUSH
25571: LD_INT 3
25573: PUSH
25574: LD_INT 1
25576: PUSH
25577: EMPTY
25578: LIST
25579: LIST
25580: PUSH
25581: LD_INT 2
25583: PUSH
25584: LD_INT 0
25586: PUSH
25587: EMPTY
25588: LIST
25589: LIST
25590: PUSH
25591: LD_INT 2
25593: PUSH
25594: LD_INT 1
25596: NEG
25597: PUSH
25598: EMPTY
25599: LIST
25600: LIST
25601: PUSH
25602: LD_INT 2
25604: PUSH
25605: LD_INT 2
25607: NEG
25608: PUSH
25609: EMPTY
25610: LIST
25611: LIST
25612: PUSH
25613: LD_INT 4
25615: PUSH
25616: LD_INT 2
25618: PUSH
25619: EMPTY
25620: LIST
25621: LIST
25622: PUSH
25623: LD_INT 4
25625: PUSH
25626: LD_INT 4
25628: PUSH
25629: EMPTY
25630: LIST
25631: LIST
25632: PUSH
25633: LD_INT 4
25635: PUSH
25636: LD_INT 3
25638: PUSH
25639: EMPTY
25640: LIST
25641: LIST
25642: PUSH
25643: LD_INT 5
25645: PUSH
25646: LD_INT 4
25648: PUSH
25649: EMPTY
25650: LIST
25651: LIST
25652: PUSH
25653: LD_INT 5
25655: PUSH
25656: LD_INT 5
25658: PUSH
25659: EMPTY
25660: LIST
25661: LIST
25662: PUSH
25663: LD_INT 4
25665: PUSH
25666: LD_INT 5
25668: PUSH
25669: EMPTY
25670: LIST
25671: LIST
25672: PUSH
25673: LD_INT 3
25675: PUSH
25676: LD_INT 4
25678: PUSH
25679: EMPTY
25680: LIST
25681: LIST
25682: PUSH
25683: LD_INT 3
25685: PUSH
25686: LD_INT 3
25688: PUSH
25689: EMPTY
25690: LIST
25691: LIST
25692: PUSH
25693: LD_INT 5
25695: PUSH
25696: LD_INT 3
25698: PUSH
25699: EMPTY
25700: LIST
25701: LIST
25702: PUSH
25703: LD_INT 3
25705: PUSH
25706: LD_INT 5
25708: PUSH
25709: EMPTY
25710: LIST
25711: LIST
25712: PUSH
25713: LD_INT 0
25715: PUSH
25716: LD_INT 3
25718: PUSH
25719: EMPTY
25720: LIST
25721: LIST
25722: PUSH
25723: LD_INT 0
25725: PUSH
25726: LD_INT 2
25728: PUSH
25729: EMPTY
25730: LIST
25731: LIST
25732: PUSH
25733: LD_INT 1
25735: PUSH
25736: LD_INT 3
25738: PUSH
25739: EMPTY
25740: LIST
25741: LIST
25742: PUSH
25743: LD_INT 1
25745: PUSH
25746: LD_INT 4
25748: PUSH
25749: EMPTY
25750: LIST
25751: LIST
25752: PUSH
25753: LD_INT 0
25755: PUSH
25756: LD_INT 4
25758: PUSH
25759: EMPTY
25760: LIST
25761: LIST
25762: PUSH
25763: LD_INT 1
25765: NEG
25766: PUSH
25767: LD_INT 3
25769: PUSH
25770: EMPTY
25771: LIST
25772: LIST
25773: PUSH
25774: LD_INT 1
25776: NEG
25777: PUSH
25778: LD_INT 2
25780: PUSH
25781: EMPTY
25782: LIST
25783: LIST
25784: PUSH
25785: LD_INT 2
25787: PUSH
25788: LD_INT 4
25790: PUSH
25791: EMPTY
25792: LIST
25793: LIST
25794: PUSH
25795: LD_INT 2
25797: NEG
25798: PUSH
25799: LD_INT 2
25801: PUSH
25802: EMPTY
25803: LIST
25804: LIST
25805: PUSH
25806: LD_INT 4
25808: NEG
25809: PUSH
25810: LD_INT 0
25812: PUSH
25813: EMPTY
25814: LIST
25815: LIST
25816: PUSH
25817: LD_INT 4
25819: NEG
25820: PUSH
25821: LD_INT 1
25823: NEG
25824: PUSH
25825: EMPTY
25826: LIST
25827: LIST
25828: PUSH
25829: LD_INT 3
25831: NEG
25832: PUSH
25833: LD_INT 0
25835: PUSH
25836: EMPTY
25837: LIST
25838: LIST
25839: PUSH
25840: LD_INT 3
25842: NEG
25843: PUSH
25844: LD_INT 1
25846: PUSH
25847: EMPTY
25848: LIST
25849: LIST
25850: PUSH
25851: LD_INT 4
25853: NEG
25854: PUSH
25855: LD_INT 1
25857: PUSH
25858: EMPTY
25859: LIST
25860: LIST
25861: PUSH
25862: LD_INT 5
25864: NEG
25865: PUSH
25866: LD_INT 0
25868: PUSH
25869: EMPTY
25870: LIST
25871: LIST
25872: PUSH
25873: LD_INT 5
25875: NEG
25876: PUSH
25877: LD_INT 1
25879: NEG
25880: PUSH
25881: EMPTY
25882: LIST
25883: LIST
25884: PUSH
25885: LD_INT 5
25887: NEG
25888: PUSH
25889: LD_INT 2
25891: NEG
25892: PUSH
25893: EMPTY
25894: LIST
25895: LIST
25896: PUSH
25897: LD_INT 3
25899: NEG
25900: PUSH
25901: LD_INT 2
25903: PUSH
25904: EMPTY
25905: LIST
25906: LIST
25907: PUSH
25908: EMPTY
25909: LIST
25910: LIST
25911: LIST
25912: LIST
25913: LIST
25914: LIST
25915: LIST
25916: LIST
25917: LIST
25918: LIST
25919: LIST
25920: LIST
25921: LIST
25922: LIST
25923: LIST
25924: LIST
25925: LIST
25926: LIST
25927: LIST
25928: LIST
25929: LIST
25930: LIST
25931: LIST
25932: LIST
25933: LIST
25934: LIST
25935: LIST
25936: LIST
25937: LIST
25938: LIST
25939: LIST
25940: LIST
25941: LIST
25942: LIST
25943: LIST
25944: LIST
25945: LIST
25946: LIST
25947: LIST
25948: LIST
25949: LIST
25950: LIST
25951: LIST
25952: LIST
25953: LIST
25954: ST_TO_ADDR
// end ; end ;
25955: GO 25958
25957: POP
// case btype of b_depot , b_warehouse :
25958: LD_VAR 0 1
25962: PUSH
25963: LD_INT 0
25965: DOUBLE
25966: EQUAL
25967: IFTRUE 25977
25969: LD_INT 1
25971: DOUBLE
25972: EQUAL
25973: IFTRUE 25977
25975: GO 26178
25977: POP
// case nation of nation_american :
25978: LD_VAR 0 5
25982: PUSH
25983: LD_INT 1
25985: DOUBLE
25986: EQUAL
25987: IFTRUE 25991
25989: GO 26047
25991: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
25992: LD_ADDR_VAR 0 9
25996: PUSH
25997: LD_VAR 0 11
26001: PUSH
26002: LD_VAR 0 12
26006: PUSH
26007: LD_VAR 0 13
26011: PUSH
26012: LD_VAR 0 14
26016: PUSH
26017: LD_VAR 0 15
26021: PUSH
26022: LD_VAR 0 16
26026: PUSH
26027: EMPTY
26028: LIST
26029: LIST
26030: LIST
26031: LIST
26032: LIST
26033: LIST
26034: PUSH
26035: LD_VAR 0 4
26039: PUSH
26040: LD_INT 1
26042: PLUS
26043: ARRAY
26044: ST_TO_ADDR
26045: GO 26176
26047: LD_INT 2
26049: DOUBLE
26050: EQUAL
26051: IFTRUE 26055
26053: GO 26111
26055: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26056: LD_ADDR_VAR 0 9
26060: PUSH
26061: LD_VAR 0 17
26065: PUSH
26066: LD_VAR 0 18
26070: PUSH
26071: LD_VAR 0 19
26075: PUSH
26076: LD_VAR 0 20
26080: PUSH
26081: LD_VAR 0 21
26085: PUSH
26086: LD_VAR 0 22
26090: PUSH
26091: EMPTY
26092: LIST
26093: LIST
26094: LIST
26095: LIST
26096: LIST
26097: LIST
26098: PUSH
26099: LD_VAR 0 4
26103: PUSH
26104: LD_INT 1
26106: PLUS
26107: ARRAY
26108: ST_TO_ADDR
26109: GO 26176
26111: LD_INT 3
26113: DOUBLE
26114: EQUAL
26115: IFTRUE 26119
26117: GO 26175
26119: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26120: LD_ADDR_VAR 0 9
26124: PUSH
26125: LD_VAR 0 23
26129: PUSH
26130: LD_VAR 0 24
26134: PUSH
26135: LD_VAR 0 25
26139: PUSH
26140: LD_VAR 0 26
26144: PUSH
26145: LD_VAR 0 27
26149: PUSH
26150: LD_VAR 0 28
26154: PUSH
26155: EMPTY
26156: LIST
26157: LIST
26158: LIST
26159: LIST
26160: LIST
26161: LIST
26162: PUSH
26163: LD_VAR 0 4
26167: PUSH
26168: LD_INT 1
26170: PLUS
26171: ARRAY
26172: ST_TO_ADDR
26173: GO 26176
26175: POP
26176: GO 26725
26178: LD_INT 2
26180: DOUBLE
26181: EQUAL
26182: IFTRUE 26192
26184: LD_INT 3
26186: DOUBLE
26187: EQUAL
26188: IFTRUE 26192
26190: GO 26248
26192: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26193: LD_ADDR_VAR 0 9
26197: PUSH
26198: LD_VAR 0 29
26202: PUSH
26203: LD_VAR 0 30
26207: PUSH
26208: LD_VAR 0 31
26212: PUSH
26213: LD_VAR 0 32
26217: PUSH
26218: LD_VAR 0 33
26222: PUSH
26223: LD_VAR 0 34
26227: PUSH
26228: EMPTY
26229: LIST
26230: LIST
26231: LIST
26232: LIST
26233: LIST
26234: LIST
26235: PUSH
26236: LD_VAR 0 4
26240: PUSH
26241: LD_INT 1
26243: PLUS
26244: ARRAY
26245: ST_TO_ADDR
26246: GO 26725
26248: LD_INT 16
26250: DOUBLE
26251: EQUAL
26252: IFTRUE 26304
26254: LD_INT 17
26256: DOUBLE
26257: EQUAL
26258: IFTRUE 26304
26260: LD_INT 18
26262: DOUBLE
26263: EQUAL
26264: IFTRUE 26304
26266: LD_INT 19
26268: DOUBLE
26269: EQUAL
26270: IFTRUE 26304
26272: LD_INT 20
26274: DOUBLE
26275: EQUAL
26276: IFTRUE 26304
26278: LD_INT 21
26280: DOUBLE
26281: EQUAL
26282: IFTRUE 26304
26284: LD_INT 23
26286: DOUBLE
26287: EQUAL
26288: IFTRUE 26304
26290: LD_INT 24
26292: DOUBLE
26293: EQUAL
26294: IFTRUE 26304
26296: LD_INT 25
26298: DOUBLE
26299: EQUAL
26300: IFTRUE 26304
26302: GO 26360
26304: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26305: LD_ADDR_VAR 0 9
26309: PUSH
26310: LD_VAR 0 35
26314: PUSH
26315: LD_VAR 0 36
26319: PUSH
26320: LD_VAR 0 37
26324: PUSH
26325: LD_VAR 0 38
26329: PUSH
26330: LD_VAR 0 39
26334: PUSH
26335: LD_VAR 0 40
26339: PUSH
26340: EMPTY
26341: LIST
26342: LIST
26343: LIST
26344: LIST
26345: LIST
26346: LIST
26347: PUSH
26348: LD_VAR 0 4
26352: PUSH
26353: LD_INT 1
26355: PLUS
26356: ARRAY
26357: ST_TO_ADDR
26358: GO 26725
26360: LD_INT 6
26362: DOUBLE
26363: EQUAL
26364: IFTRUE 26416
26366: LD_INT 7
26368: DOUBLE
26369: EQUAL
26370: IFTRUE 26416
26372: LD_INT 8
26374: DOUBLE
26375: EQUAL
26376: IFTRUE 26416
26378: LD_INT 13
26380: DOUBLE
26381: EQUAL
26382: IFTRUE 26416
26384: LD_INT 12
26386: DOUBLE
26387: EQUAL
26388: IFTRUE 26416
26390: LD_INT 15
26392: DOUBLE
26393: EQUAL
26394: IFTRUE 26416
26396: LD_INT 11
26398: DOUBLE
26399: EQUAL
26400: IFTRUE 26416
26402: LD_INT 14
26404: DOUBLE
26405: EQUAL
26406: IFTRUE 26416
26408: LD_INT 10
26410: DOUBLE
26411: EQUAL
26412: IFTRUE 26416
26414: GO 26472
26416: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26417: LD_ADDR_VAR 0 9
26421: PUSH
26422: LD_VAR 0 41
26426: PUSH
26427: LD_VAR 0 42
26431: PUSH
26432: LD_VAR 0 43
26436: PUSH
26437: LD_VAR 0 44
26441: PUSH
26442: LD_VAR 0 45
26446: PUSH
26447: LD_VAR 0 46
26451: PUSH
26452: EMPTY
26453: LIST
26454: LIST
26455: LIST
26456: LIST
26457: LIST
26458: LIST
26459: PUSH
26460: LD_VAR 0 4
26464: PUSH
26465: LD_INT 1
26467: PLUS
26468: ARRAY
26469: ST_TO_ADDR
26470: GO 26725
26472: LD_INT 36
26474: DOUBLE
26475: EQUAL
26476: IFTRUE 26480
26478: GO 26536
26480: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26481: LD_ADDR_VAR 0 9
26485: PUSH
26486: LD_VAR 0 47
26490: PUSH
26491: LD_VAR 0 48
26495: PUSH
26496: LD_VAR 0 49
26500: PUSH
26501: LD_VAR 0 50
26505: PUSH
26506: LD_VAR 0 51
26510: PUSH
26511: LD_VAR 0 52
26515: PUSH
26516: EMPTY
26517: LIST
26518: LIST
26519: LIST
26520: LIST
26521: LIST
26522: LIST
26523: PUSH
26524: LD_VAR 0 4
26528: PUSH
26529: LD_INT 1
26531: PLUS
26532: ARRAY
26533: ST_TO_ADDR
26534: GO 26725
26536: LD_INT 4
26538: DOUBLE
26539: EQUAL
26540: IFTRUE 26562
26542: LD_INT 5
26544: DOUBLE
26545: EQUAL
26546: IFTRUE 26562
26548: LD_INT 34
26550: DOUBLE
26551: EQUAL
26552: IFTRUE 26562
26554: LD_INT 37
26556: DOUBLE
26557: EQUAL
26558: IFTRUE 26562
26560: GO 26618
26562: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26563: LD_ADDR_VAR 0 9
26567: PUSH
26568: LD_VAR 0 53
26572: PUSH
26573: LD_VAR 0 54
26577: PUSH
26578: LD_VAR 0 55
26582: PUSH
26583: LD_VAR 0 56
26587: PUSH
26588: LD_VAR 0 57
26592: PUSH
26593: LD_VAR 0 58
26597: PUSH
26598: EMPTY
26599: LIST
26600: LIST
26601: LIST
26602: LIST
26603: LIST
26604: LIST
26605: PUSH
26606: LD_VAR 0 4
26610: PUSH
26611: LD_INT 1
26613: PLUS
26614: ARRAY
26615: ST_TO_ADDR
26616: GO 26725
26618: LD_INT 31
26620: DOUBLE
26621: EQUAL
26622: IFTRUE 26668
26624: LD_INT 32
26626: DOUBLE
26627: EQUAL
26628: IFTRUE 26668
26630: LD_INT 33
26632: DOUBLE
26633: EQUAL
26634: IFTRUE 26668
26636: LD_INT 27
26638: DOUBLE
26639: EQUAL
26640: IFTRUE 26668
26642: LD_INT 26
26644: DOUBLE
26645: EQUAL
26646: IFTRUE 26668
26648: LD_INT 28
26650: DOUBLE
26651: EQUAL
26652: IFTRUE 26668
26654: LD_INT 29
26656: DOUBLE
26657: EQUAL
26658: IFTRUE 26668
26660: LD_INT 30
26662: DOUBLE
26663: EQUAL
26664: IFTRUE 26668
26666: GO 26724
26668: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26669: LD_ADDR_VAR 0 9
26673: PUSH
26674: LD_VAR 0 59
26678: PUSH
26679: LD_VAR 0 60
26683: PUSH
26684: LD_VAR 0 61
26688: PUSH
26689: LD_VAR 0 62
26693: PUSH
26694: LD_VAR 0 63
26698: PUSH
26699: LD_VAR 0 64
26703: PUSH
26704: EMPTY
26705: LIST
26706: LIST
26707: LIST
26708: LIST
26709: LIST
26710: LIST
26711: PUSH
26712: LD_VAR 0 4
26716: PUSH
26717: LD_INT 1
26719: PLUS
26720: ARRAY
26721: ST_TO_ADDR
26722: GO 26725
26724: POP
// temp_list2 = [ ] ;
26725: LD_ADDR_VAR 0 10
26729: PUSH
26730: EMPTY
26731: ST_TO_ADDR
// for i in temp_list do
26732: LD_ADDR_VAR 0 8
26736: PUSH
26737: LD_VAR 0 9
26741: PUSH
26742: FOR_IN
26743: IFFALSE 26795
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
26745: LD_ADDR_VAR 0 10
26749: PUSH
26750: LD_VAR 0 10
26754: PUSH
26755: LD_VAR 0 8
26759: PUSH
26760: LD_INT 1
26762: ARRAY
26763: PUSH
26764: LD_VAR 0 2
26768: PLUS
26769: PUSH
26770: LD_VAR 0 8
26774: PUSH
26775: LD_INT 2
26777: ARRAY
26778: PUSH
26779: LD_VAR 0 3
26783: PLUS
26784: PUSH
26785: EMPTY
26786: LIST
26787: LIST
26788: PUSH
26789: EMPTY
26790: LIST
26791: ADD
26792: ST_TO_ADDR
26793: GO 26742
26795: POP
26796: POP
// result = temp_list2 ;
26797: LD_ADDR_VAR 0 7
26801: PUSH
26802: LD_VAR 0 10
26806: ST_TO_ADDR
// end ;
26807: LD_VAR 0 7
26811: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
26812: LD_INT 0
26814: PPUSH
26815: PPUSH
26816: PPUSH
// result := false ;
26817: LD_ADDR_VAR 0 4
26821: PUSH
26822: LD_INT 0
26824: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
26825: LD_VAR 0 1
26829: NOT
26830: PUSH
26831: LD_VAR 0 2
26835: NOT
26836: OR
26837: PUSH
26838: LD_VAR 0 1
26842: PPUSH
26843: CALL_OW 310
26847: OR
26848: IFFALSE 26852
// exit ;
26850: GO 27056
// if distance < 0 then
26852: LD_VAR 0 3
26856: PUSH
26857: LD_INT 0
26859: LESS
26860: IFFALSE 26870
// distance := 0 ;
26862: LD_ADDR_VAR 0 3
26866: PUSH
26867: LD_INT 0
26869: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
26870: LD_ADDR_VAR 0 6
26874: PUSH
26875: LD_VAR 0 2
26879: PPUSH
26880: CALL_OW 266
26884: PPUSH
26885: LD_VAR 0 2
26889: PPUSH
26890: CALL_OW 250
26894: PPUSH
26895: LD_VAR 0 2
26899: PPUSH
26900: CALL_OW 251
26904: PPUSH
26905: LD_VAR 0 2
26909: PPUSH
26910: CALL_OW 254
26914: PPUSH
26915: LD_VAR 0 2
26919: PPUSH
26920: CALL_OW 248
26924: PPUSH
26925: LD_INT 1
26927: PPUSH
26928: CALL 8273 0 6
26932: ST_TO_ADDR
// if not entrance then
26933: LD_VAR 0 6
26937: NOT
26938: IFFALSE 26942
// exit ;
26940: GO 27056
// for i in entrance do
26942: LD_ADDR_VAR 0 5
26946: PUSH
26947: LD_VAR 0 6
26951: PUSH
26952: FOR_IN
26953: IFFALSE 27054
// begin if not distance then
26955: LD_VAR 0 3
26959: NOT
26960: IFFALSE 27005
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
26962: LD_VAR 0 1
26966: PPUSH
26967: LD_VAR 0 5
26971: PUSH
26972: LD_INT 1
26974: ARRAY
26975: PPUSH
26976: LD_VAR 0 5
26980: PUSH
26981: LD_INT 2
26983: ARRAY
26984: PPUSH
26985: CALL_OW 307
26989: IFFALSE 27003
// begin result := true ;
26991: LD_ADDR_VAR 0 4
26995: PUSH
26996: LD_INT 1
26998: ST_TO_ADDR
// exit ;
26999: POP
27000: POP
27001: GO 27056
// end ; end else
27003: GO 27052
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27005: LD_VAR 0 1
27009: PPUSH
27010: LD_VAR 0 5
27014: PUSH
27015: LD_INT 1
27017: ARRAY
27018: PPUSH
27019: LD_VAR 0 5
27023: PUSH
27024: LD_INT 2
27026: ARRAY
27027: PPUSH
27028: CALL_OW 297
27032: PUSH
27033: LD_VAR 0 3
27037: LESSEQUAL
27038: IFFALSE 27052
// begin result := true ;
27040: LD_ADDR_VAR 0 4
27044: PUSH
27045: LD_INT 1
27047: ST_TO_ADDR
// exit ;
27048: POP
27049: POP
27050: GO 27056
// end ; end ; end ;
27052: GO 26952
27054: POP
27055: POP
// end ;
27056: LD_VAR 0 4
27060: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27061: LD_INT 0
27063: PPUSH
27064: PPUSH
27065: PPUSH
// result := false ;
27066: LD_ADDR_VAR 0 3
27070: PUSH
27071: LD_INT 0
27073: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27074: LD_VAR 0 1
27078: NOT
27079: PUSH
27080: LD_VAR 0 2
27084: NOT
27085: OR
27086: PUSH
27087: LD_VAR 0 1
27091: PPUSH
27092: CALL_OW 302
27096: NOT
27097: OR
27098: PUSH
27099: LD_VAR 0 2
27103: PPUSH
27104: CALL_OW 302
27108: NOT
27109: OR
27110: IFFALSE 27114
// exit ;
27112: GO 27275
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27114: LD_VAR 0 1
27118: PPUSH
27119: LD_INT 81
27121: PUSH
27122: LD_VAR 0 1
27126: PPUSH
27127: CALL_OW 255
27131: PUSH
27132: EMPTY
27133: LIST
27134: LIST
27135: PUSH
27136: LD_INT 3
27138: PUSH
27139: LD_INT 21
27141: PUSH
27142: LD_INT 3
27144: PUSH
27145: EMPTY
27146: LIST
27147: LIST
27148: PUSH
27149: EMPTY
27150: LIST
27151: LIST
27152: PUSH
27153: EMPTY
27154: LIST
27155: LIST
27156: PPUSH
27157: CALL_OW 69
27161: PPUSH
27162: LD_VAR 0 1
27166: PPUSH
27167: CALL_OW 74
27171: PPUSH
27172: CALL_OW 296
27176: PUSH
27177: LD_INT 8
27179: LESS
27180: IFFALSE 27184
// exit ;
27182: GO 27275
// building := IsInUnit ( unit2 ) ;
27184: LD_ADDR_VAR 0 5
27188: PUSH
27189: LD_VAR 0 2
27193: PPUSH
27194: CALL_OW 310
27198: ST_TO_ADDR
// if building then
27199: LD_VAR 0 5
27203: IFFALSE 27230
// result := IsNearbyEntrance ( unit , building , 2 ) else
27205: LD_ADDR_VAR 0 3
27209: PUSH
27210: LD_VAR 0 1
27214: PPUSH
27215: LD_VAR 0 5
27219: PPUSH
27220: LD_INT 2
27222: PPUSH
27223: CALL 26812 0 3
27227: ST_TO_ADDR
27228: GO 27275
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27230: LD_ADDR_VAR 0 3
27234: PUSH
27235: LD_VAR 0 1
27239: PPUSH
27240: LD_VAR 0 2
27244: PPUSH
27245: CALL_OW 296
27249: PUSH
27250: LD_INT 6
27252: LESS
27253: PUSH
27254: LD_VAR 0 2
27258: PPUSH
27259: CALL_OW 255
27263: PPUSH
27264: LD_VAR 0 1
27268: PPUSH
27269: CALL_OW 292
27273: AND
27274: ST_TO_ADDR
// end ;
27275: LD_VAR 0 3
27279: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27280: LD_INT 0
27282: PPUSH
27283: PPUSH
27284: PPUSH
27285: PPUSH
// tmp := [ ] ;
27286: LD_ADDR_VAR 0 3
27290: PUSH
27291: EMPTY
27292: ST_TO_ADDR
// list := [ ] ;
27293: LD_ADDR_VAR 0 5
27297: PUSH
27298: EMPTY
27299: ST_TO_ADDR
// for i = 16 to 25 do
27300: LD_ADDR_VAR 0 4
27304: PUSH
27305: DOUBLE
27306: LD_INT 16
27308: DEC
27309: ST_TO_ADDR
27310: LD_INT 25
27312: PUSH
27313: FOR_TO
27314: IFFALSE 27387
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27316: LD_ADDR_VAR 0 3
27320: PUSH
27321: LD_VAR 0 3
27325: PUSH
27326: LD_INT 22
27328: PUSH
27329: LD_VAR 0 1
27333: PPUSH
27334: CALL_OW 255
27338: PUSH
27339: EMPTY
27340: LIST
27341: LIST
27342: PUSH
27343: LD_INT 91
27345: PUSH
27346: LD_VAR 0 1
27350: PUSH
27351: LD_INT 6
27353: PUSH
27354: EMPTY
27355: LIST
27356: LIST
27357: LIST
27358: PUSH
27359: LD_INT 30
27361: PUSH
27362: LD_VAR 0 4
27366: PUSH
27367: EMPTY
27368: LIST
27369: LIST
27370: PUSH
27371: EMPTY
27372: LIST
27373: LIST
27374: LIST
27375: PUSH
27376: EMPTY
27377: LIST
27378: PPUSH
27379: CALL_OW 69
27383: ADD
27384: ST_TO_ADDR
27385: GO 27313
27387: POP
27388: POP
// for i = 1 to tmp do
27389: LD_ADDR_VAR 0 4
27393: PUSH
27394: DOUBLE
27395: LD_INT 1
27397: DEC
27398: ST_TO_ADDR
27399: LD_VAR 0 3
27403: PUSH
27404: FOR_TO
27405: IFFALSE 27493
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27407: LD_ADDR_VAR 0 5
27411: PUSH
27412: LD_VAR 0 5
27416: PUSH
27417: LD_VAR 0 3
27421: PUSH
27422: LD_VAR 0 4
27426: ARRAY
27427: PPUSH
27428: CALL_OW 266
27432: PUSH
27433: LD_VAR 0 3
27437: PUSH
27438: LD_VAR 0 4
27442: ARRAY
27443: PPUSH
27444: CALL_OW 250
27448: PUSH
27449: LD_VAR 0 3
27453: PUSH
27454: LD_VAR 0 4
27458: ARRAY
27459: PPUSH
27460: CALL_OW 251
27464: PUSH
27465: LD_VAR 0 3
27469: PUSH
27470: LD_VAR 0 4
27474: ARRAY
27475: PPUSH
27476: CALL_OW 254
27480: PUSH
27481: EMPTY
27482: LIST
27483: LIST
27484: LIST
27485: LIST
27486: PUSH
27487: EMPTY
27488: LIST
27489: ADD
27490: ST_TO_ADDR
27491: GO 27404
27493: POP
27494: POP
// result := list ;
27495: LD_ADDR_VAR 0 2
27499: PUSH
27500: LD_VAR 0 5
27504: ST_TO_ADDR
// end ;
27505: LD_VAR 0 2
27509: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27510: LD_INT 0
27512: PPUSH
27513: PPUSH
27514: PPUSH
27515: PPUSH
27516: PPUSH
27517: PPUSH
27518: PPUSH
// if not factory then
27519: LD_VAR 0 1
27523: NOT
27524: IFFALSE 27528
// exit ;
27526: GO 28053
// if control = control_apeman then
27528: LD_VAR 0 4
27532: PUSH
27533: LD_INT 5
27535: EQUAL
27536: IFFALSE 27645
// begin tmp := UnitsInside ( factory ) ;
27538: LD_ADDR_VAR 0 8
27542: PUSH
27543: LD_VAR 0 1
27547: PPUSH
27548: CALL_OW 313
27552: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27553: LD_VAR 0 8
27557: PPUSH
27558: LD_INT 25
27560: PUSH
27561: LD_INT 12
27563: PUSH
27564: EMPTY
27565: LIST
27566: LIST
27567: PPUSH
27568: CALL_OW 72
27572: NOT
27573: IFFALSE 27583
// control := control_manual ;
27575: LD_ADDR_VAR 0 4
27579: PUSH
27580: LD_INT 1
27582: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27583: LD_ADDR_VAR 0 8
27587: PUSH
27588: LD_VAR 0 1
27592: PPUSH
27593: CALL 27280 0 1
27597: ST_TO_ADDR
// if tmp then
27598: LD_VAR 0 8
27602: IFFALSE 27645
// begin for i in tmp do
27604: LD_ADDR_VAR 0 7
27608: PUSH
27609: LD_VAR 0 8
27613: PUSH
27614: FOR_IN
27615: IFFALSE 27643
// if i [ 1 ] = b_ext_radar then
27617: LD_VAR 0 7
27621: PUSH
27622: LD_INT 1
27624: ARRAY
27625: PUSH
27626: LD_INT 20
27628: EQUAL
27629: IFFALSE 27641
// begin control := control_remote ;
27631: LD_ADDR_VAR 0 4
27635: PUSH
27636: LD_INT 2
27638: ST_TO_ADDR
// break ;
27639: GO 27643
// end ;
27641: GO 27614
27643: POP
27644: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27645: LD_VAR 0 1
27649: PPUSH
27650: LD_VAR 0 2
27654: PPUSH
27655: LD_VAR 0 3
27659: PPUSH
27660: LD_VAR 0 4
27664: PPUSH
27665: LD_VAR 0 5
27669: PPUSH
27670: CALL_OW 448
27674: IFFALSE 27709
// begin result := [ chassis , engine , control , weapon ] ;
27676: LD_ADDR_VAR 0 6
27680: PUSH
27681: LD_VAR 0 2
27685: PUSH
27686: LD_VAR 0 3
27690: PUSH
27691: LD_VAR 0 4
27695: PUSH
27696: LD_VAR 0 5
27700: PUSH
27701: EMPTY
27702: LIST
27703: LIST
27704: LIST
27705: LIST
27706: ST_TO_ADDR
// exit ;
27707: GO 28053
// end ; _chassis := AvailableChassisList ( factory ) ;
27709: LD_ADDR_VAR 0 9
27713: PUSH
27714: LD_VAR 0 1
27718: PPUSH
27719: CALL_OW 475
27723: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
27724: LD_ADDR_VAR 0 11
27728: PUSH
27729: LD_VAR 0 1
27733: PPUSH
27734: CALL_OW 476
27738: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
27739: LD_ADDR_VAR 0 12
27743: PUSH
27744: LD_VAR 0 1
27748: PPUSH
27749: CALL_OW 477
27753: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
27754: LD_ADDR_VAR 0 10
27758: PUSH
27759: LD_VAR 0 1
27763: PPUSH
27764: CALL_OW 478
27768: ST_TO_ADDR
// if not chassis in _chassis then
27769: LD_VAR 0 2
27773: PUSH
27774: LD_VAR 0 9
27778: IN
27779: NOT
27780: IFFALSE 27806
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
27782: LD_ADDR_VAR 0 2
27786: PUSH
27787: LD_VAR 0 9
27791: PUSH
27792: LD_INT 1
27794: PPUSH
27795: LD_VAR 0 9
27799: PPUSH
27800: CALL_OW 12
27804: ARRAY
27805: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
27806: LD_VAR 0 2
27810: PPUSH
27811: LD_VAR 0 3
27815: PPUSH
27816: CALL 28058 0 2
27820: NOT
27821: IFFALSE 27880
// repeat engine := _engine [ 1 ] ;
27823: LD_ADDR_VAR 0 3
27827: PUSH
27828: LD_VAR 0 11
27832: PUSH
27833: LD_INT 1
27835: ARRAY
27836: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
27837: LD_ADDR_VAR 0 11
27841: PUSH
27842: LD_VAR 0 11
27846: PPUSH
27847: LD_INT 1
27849: PPUSH
27850: CALL_OW 3
27854: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
27855: LD_VAR 0 2
27859: PPUSH
27860: LD_VAR 0 3
27864: PPUSH
27865: CALL 28058 0 2
27869: PUSH
27870: LD_VAR 0 11
27874: PUSH
27875: EMPTY
27876: EQUAL
27877: OR
27878: IFFALSE 27823
// if not control in _control then
27880: LD_VAR 0 4
27884: PUSH
27885: LD_VAR 0 12
27889: IN
27890: NOT
27891: IFFALSE 27917
// control := _control [ rand ( 1 , _control ) ] ;
27893: LD_ADDR_VAR 0 4
27897: PUSH
27898: LD_VAR 0 12
27902: PUSH
27903: LD_INT 1
27905: PPUSH
27906: LD_VAR 0 12
27910: PPUSH
27911: CALL_OW 12
27915: ARRAY
27916: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
27917: LD_VAR 0 2
27921: PPUSH
27922: LD_VAR 0 5
27926: PPUSH
27927: CALL 28278 0 2
27931: NOT
27932: IFFALSE 27991
// repeat weapon := _weapon [ 1 ] ;
27934: LD_ADDR_VAR 0 5
27938: PUSH
27939: LD_VAR 0 10
27943: PUSH
27944: LD_INT 1
27946: ARRAY
27947: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
27948: LD_ADDR_VAR 0 10
27952: PUSH
27953: LD_VAR 0 10
27957: PPUSH
27958: LD_INT 1
27960: PPUSH
27961: CALL_OW 3
27965: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
27966: LD_VAR 0 2
27970: PPUSH
27971: LD_VAR 0 5
27975: PPUSH
27976: CALL 28278 0 2
27980: PUSH
27981: LD_VAR 0 10
27985: PUSH
27986: EMPTY
27987: EQUAL
27988: OR
27989: IFFALSE 27934
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27991: LD_VAR 0 1
27995: PPUSH
27996: LD_VAR 0 2
28000: PPUSH
28001: LD_VAR 0 3
28005: PPUSH
28006: LD_VAR 0 4
28010: PPUSH
28011: LD_VAR 0 5
28015: PPUSH
28016: CALL_OW 448
28020: IFFALSE 28053
// result := [ chassis , engine , control , weapon ] ;
28022: LD_ADDR_VAR 0 6
28026: PUSH
28027: LD_VAR 0 2
28031: PUSH
28032: LD_VAR 0 3
28036: PUSH
28037: LD_VAR 0 4
28041: PUSH
28042: LD_VAR 0 5
28046: PUSH
28047: EMPTY
28048: LIST
28049: LIST
28050: LIST
28051: LIST
28052: ST_TO_ADDR
// end ;
28053: LD_VAR 0 6
28057: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28058: LD_INT 0
28060: PPUSH
// if not chassis or not engine then
28061: LD_VAR 0 1
28065: NOT
28066: PUSH
28067: LD_VAR 0 2
28071: NOT
28072: OR
28073: IFFALSE 28077
// exit ;
28075: GO 28273
// case engine of engine_solar :
28077: LD_VAR 0 2
28081: PUSH
28082: LD_INT 2
28084: DOUBLE
28085: EQUAL
28086: IFTRUE 28090
28088: GO 28128
28090: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28091: LD_ADDR_VAR 0 3
28095: PUSH
28096: LD_INT 11
28098: PUSH
28099: LD_INT 12
28101: PUSH
28102: LD_INT 13
28104: PUSH
28105: LD_INT 14
28107: PUSH
28108: LD_INT 1
28110: PUSH
28111: LD_INT 2
28113: PUSH
28114: LD_INT 3
28116: PUSH
28117: EMPTY
28118: LIST
28119: LIST
28120: LIST
28121: LIST
28122: LIST
28123: LIST
28124: LIST
28125: ST_TO_ADDR
28126: GO 28257
28128: LD_INT 1
28130: DOUBLE
28131: EQUAL
28132: IFTRUE 28136
28134: GO 28198
28136: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28137: LD_ADDR_VAR 0 3
28141: PUSH
28142: LD_INT 11
28144: PUSH
28145: LD_INT 12
28147: PUSH
28148: LD_INT 13
28150: PUSH
28151: LD_INT 14
28153: PUSH
28154: LD_INT 1
28156: PUSH
28157: LD_INT 2
28159: PUSH
28160: LD_INT 3
28162: PUSH
28163: LD_INT 4
28165: PUSH
28166: LD_INT 5
28168: PUSH
28169: LD_INT 21
28171: PUSH
28172: LD_INT 23
28174: PUSH
28175: LD_INT 22
28177: PUSH
28178: LD_INT 24
28180: PUSH
28181: EMPTY
28182: LIST
28183: LIST
28184: LIST
28185: LIST
28186: LIST
28187: LIST
28188: LIST
28189: LIST
28190: LIST
28191: LIST
28192: LIST
28193: LIST
28194: LIST
28195: ST_TO_ADDR
28196: GO 28257
28198: LD_INT 3
28200: DOUBLE
28201: EQUAL
28202: IFTRUE 28206
28204: GO 28256
28206: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28207: LD_ADDR_VAR 0 3
28211: PUSH
28212: LD_INT 13
28214: PUSH
28215: LD_INT 14
28217: PUSH
28218: LD_INT 2
28220: PUSH
28221: LD_INT 3
28223: PUSH
28224: LD_INT 4
28226: PUSH
28227: LD_INT 5
28229: PUSH
28230: LD_INT 21
28232: PUSH
28233: LD_INT 22
28235: PUSH
28236: LD_INT 23
28238: PUSH
28239: LD_INT 24
28241: PUSH
28242: EMPTY
28243: LIST
28244: LIST
28245: LIST
28246: LIST
28247: LIST
28248: LIST
28249: LIST
28250: LIST
28251: LIST
28252: LIST
28253: ST_TO_ADDR
28254: GO 28257
28256: POP
// result := ( chassis in result ) ;
28257: LD_ADDR_VAR 0 3
28261: PUSH
28262: LD_VAR 0 1
28266: PUSH
28267: LD_VAR 0 3
28271: IN
28272: ST_TO_ADDR
// end ;
28273: LD_VAR 0 3
28277: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28278: LD_INT 0
28280: PPUSH
// if not chassis or not weapon then
28281: LD_VAR 0 1
28285: NOT
28286: PUSH
28287: LD_VAR 0 2
28291: NOT
28292: OR
28293: IFFALSE 28297
// exit ;
28295: GO 29323
// case weapon of us_machine_gun :
28297: LD_VAR 0 2
28301: PUSH
28302: LD_INT 2
28304: DOUBLE
28305: EQUAL
28306: IFTRUE 28310
28308: GO 28340
28310: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28311: LD_ADDR_VAR 0 3
28315: PUSH
28316: LD_INT 1
28318: PUSH
28319: LD_INT 2
28321: PUSH
28322: LD_INT 3
28324: PUSH
28325: LD_INT 4
28327: PUSH
28328: LD_INT 5
28330: PUSH
28331: EMPTY
28332: LIST
28333: LIST
28334: LIST
28335: LIST
28336: LIST
28337: ST_TO_ADDR
28338: GO 29307
28340: LD_INT 3
28342: DOUBLE
28343: EQUAL
28344: IFTRUE 28348
28346: GO 28378
28348: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28349: LD_ADDR_VAR 0 3
28353: PUSH
28354: LD_INT 1
28356: PUSH
28357: LD_INT 2
28359: PUSH
28360: LD_INT 3
28362: PUSH
28363: LD_INT 4
28365: PUSH
28366: LD_INT 5
28368: PUSH
28369: EMPTY
28370: LIST
28371: LIST
28372: LIST
28373: LIST
28374: LIST
28375: ST_TO_ADDR
28376: GO 29307
28378: LD_INT 11
28380: DOUBLE
28381: EQUAL
28382: IFTRUE 28386
28384: GO 28416
28386: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28387: LD_ADDR_VAR 0 3
28391: PUSH
28392: LD_INT 1
28394: PUSH
28395: LD_INT 2
28397: PUSH
28398: LD_INT 3
28400: PUSH
28401: LD_INT 4
28403: PUSH
28404: LD_INT 5
28406: PUSH
28407: EMPTY
28408: LIST
28409: LIST
28410: LIST
28411: LIST
28412: LIST
28413: ST_TO_ADDR
28414: GO 29307
28416: LD_INT 4
28418: DOUBLE
28419: EQUAL
28420: IFTRUE 28424
28422: GO 28450
28424: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28425: LD_ADDR_VAR 0 3
28429: PUSH
28430: LD_INT 2
28432: PUSH
28433: LD_INT 3
28435: PUSH
28436: LD_INT 4
28438: PUSH
28439: LD_INT 5
28441: PUSH
28442: EMPTY
28443: LIST
28444: LIST
28445: LIST
28446: LIST
28447: ST_TO_ADDR
28448: GO 29307
28450: LD_INT 5
28452: DOUBLE
28453: EQUAL
28454: IFTRUE 28458
28456: GO 28484
28458: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28459: LD_ADDR_VAR 0 3
28463: PUSH
28464: LD_INT 2
28466: PUSH
28467: LD_INT 3
28469: PUSH
28470: LD_INT 4
28472: PUSH
28473: LD_INT 5
28475: PUSH
28476: EMPTY
28477: LIST
28478: LIST
28479: LIST
28480: LIST
28481: ST_TO_ADDR
28482: GO 29307
28484: LD_INT 9
28486: DOUBLE
28487: EQUAL
28488: IFTRUE 28492
28490: GO 28518
28492: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28493: LD_ADDR_VAR 0 3
28497: PUSH
28498: LD_INT 2
28500: PUSH
28501: LD_INT 3
28503: PUSH
28504: LD_INT 4
28506: PUSH
28507: LD_INT 5
28509: PUSH
28510: EMPTY
28511: LIST
28512: LIST
28513: LIST
28514: LIST
28515: ST_TO_ADDR
28516: GO 29307
28518: LD_INT 7
28520: DOUBLE
28521: EQUAL
28522: IFTRUE 28526
28524: GO 28552
28526: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28527: LD_ADDR_VAR 0 3
28531: PUSH
28532: LD_INT 2
28534: PUSH
28535: LD_INT 3
28537: PUSH
28538: LD_INT 4
28540: PUSH
28541: LD_INT 5
28543: PUSH
28544: EMPTY
28545: LIST
28546: LIST
28547: LIST
28548: LIST
28549: ST_TO_ADDR
28550: GO 29307
28552: LD_INT 12
28554: DOUBLE
28555: EQUAL
28556: IFTRUE 28560
28558: GO 28586
28560: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28561: LD_ADDR_VAR 0 3
28565: PUSH
28566: LD_INT 2
28568: PUSH
28569: LD_INT 3
28571: PUSH
28572: LD_INT 4
28574: PUSH
28575: LD_INT 5
28577: PUSH
28578: EMPTY
28579: LIST
28580: LIST
28581: LIST
28582: LIST
28583: ST_TO_ADDR
28584: GO 29307
28586: LD_INT 13
28588: DOUBLE
28589: EQUAL
28590: IFTRUE 28594
28592: GO 28620
28594: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28595: LD_ADDR_VAR 0 3
28599: PUSH
28600: LD_INT 2
28602: PUSH
28603: LD_INT 3
28605: PUSH
28606: LD_INT 4
28608: PUSH
28609: LD_INT 5
28611: PUSH
28612: EMPTY
28613: LIST
28614: LIST
28615: LIST
28616: LIST
28617: ST_TO_ADDR
28618: GO 29307
28620: LD_INT 14
28622: DOUBLE
28623: EQUAL
28624: IFTRUE 28628
28626: GO 28646
28628: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28629: LD_ADDR_VAR 0 3
28633: PUSH
28634: LD_INT 4
28636: PUSH
28637: LD_INT 5
28639: PUSH
28640: EMPTY
28641: LIST
28642: LIST
28643: ST_TO_ADDR
28644: GO 29307
28646: LD_INT 6
28648: DOUBLE
28649: EQUAL
28650: IFTRUE 28654
28652: GO 28672
28654: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28655: LD_ADDR_VAR 0 3
28659: PUSH
28660: LD_INT 4
28662: PUSH
28663: LD_INT 5
28665: PUSH
28666: EMPTY
28667: LIST
28668: LIST
28669: ST_TO_ADDR
28670: GO 29307
28672: LD_INT 10
28674: DOUBLE
28675: EQUAL
28676: IFTRUE 28680
28678: GO 28698
28680: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
28681: LD_ADDR_VAR 0 3
28685: PUSH
28686: LD_INT 4
28688: PUSH
28689: LD_INT 5
28691: PUSH
28692: EMPTY
28693: LIST
28694: LIST
28695: ST_TO_ADDR
28696: GO 29307
28698: LD_INT 22
28700: DOUBLE
28701: EQUAL
28702: IFTRUE 28706
28704: GO 28732
28706: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
28707: LD_ADDR_VAR 0 3
28711: PUSH
28712: LD_INT 11
28714: PUSH
28715: LD_INT 12
28717: PUSH
28718: LD_INT 13
28720: PUSH
28721: LD_INT 14
28723: PUSH
28724: EMPTY
28725: LIST
28726: LIST
28727: LIST
28728: LIST
28729: ST_TO_ADDR
28730: GO 29307
28732: LD_INT 23
28734: DOUBLE
28735: EQUAL
28736: IFTRUE 28740
28738: GO 28766
28740: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
28741: LD_ADDR_VAR 0 3
28745: PUSH
28746: LD_INT 11
28748: PUSH
28749: LD_INT 12
28751: PUSH
28752: LD_INT 13
28754: PUSH
28755: LD_INT 14
28757: PUSH
28758: EMPTY
28759: LIST
28760: LIST
28761: LIST
28762: LIST
28763: ST_TO_ADDR
28764: GO 29307
28766: LD_INT 24
28768: DOUBLE
28769: EQUAL
28770: IFTRUE 28774
28772: GO 28800
28774: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
28775: LD_ADDR_VAR 0 3
28779: PUSH
28780: LD_INT 11
28782: PUSH
28783: LD_INT 12
28785: PUSH
28786: LD_INT 13
28788: PUSH
28789: LD_INT 14
28791: PUSH
28792: EMPTY
28793: LIST
28794: LIST
28795: LIST
28796: LIST
28797: ST_TO_ADDR
28798: GO 29307
28800: LD_INT 30
28802: DOUBLE
28803: EQUAL
28804: IFTRUE 28808
28806: GO 28834
28808: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
28809: LD_ADDR_VAR 0 3
28813: PUSH
28814: LD_INT 11
28816: PUSH
28817: LD_INT 12
28819: PUSH
28820: LD_INT 13
28822: PUSH
28823: LD_INT 14
28825: PUSH
28826: EMPTY
28827: LIST
28828: LIST
28829: LIST
28830: LIST
28831: ST_TO_ADDR
28832: GO 29307
28834: LD_INT 25
28836: DOUBLE
28837: EQUAL
28838: IFTRUE 28842
28840: GO 28860
28842: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
28843: LD_ADDR_VAR 0 3
28847: PUSH
28848: LD_INT 13
28850: PUSH
28851: LD_INT 14
28853: PUSH
28854: EMPTY
28855: LIST
28856: LIST
28857: ST_TO_ADDR
28858: GO 29307
28860: LD_INT 27
28862: DOUBLE
28863: EQUAL
28864: IFTRUE 28868
28866: GO 28886
28868: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
28869: LD_ADDR_VAR 0 3
28873: PUSH
28874: LD_INT 13
28876: PUSH
28877: LD_INT 14
28879: PUSH
28880: EMPTY
28881: LIST
28882: LIST
28883: ST_TO_ADDR
28884: GO 29307
28886: LD_INT 28
28888: DOUBLE
28889: EQUAL
28890: IFTRUE 28894
28892: GO 28912
28894: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
28895: LD_ADDR_VAR 0 3
28899: PUSH
28900: LD_INT 13
28902: PUSH
28903: LD_INT 14
28905: PUSH
28906: EMPTY
28907: LIST
28908: LIST
28909: ST_TO_ADDR
28910: GO 29307
28912: LD_INT 29
28914: DOUBLE
28915: EQUAL
28916: IFTRUE 28920
28918: GO 28938
28920: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
28921: LD_ADDR_VAR 0 3
28925: PUSH
28926: LD_INT 13
28928: PUSH
28929: LD_INT 14
28931: PUSH
28932: EMPTY
28933: LIST
28934: LIST
28935: ST_TO_ADDR
28936: GO 29307
28938: LD_INT 31
28940: DOUBLE
28941: EQUAL
28942: IFTRUE 28946
28944: GO 28964
28946: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
28947: LD_ADDR_VAR 0 3
28951: PUSH
28952: LD_INT 13
28954: PUSH
28955: LD_INT 14
28957: PUSH
28958: EMPTY
28959: LIST
28960: LIST
28961: ST_TO_ADDR
28962: GO 29307
28964: LD_INT 26
28966: DOUBLE
28967: EQUAL
28968: IFTRUE 28972
28970: GO 28990
28972: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
28973: LD_ADDR_VAR 0 3
28977: PUSH
28978: LD_INT 13
28980: PUSH
28981: LD_INT 14
28983: PUSH
28984: EMPTY
28985: LIST
28986: LIST
28987: ST_TO_ADDR
28988: GO 29307
28990: LD_INT 42
28992: DOUBLE
28993: EQUAL
28994: IFTRUE 28998
28996: GO 29024
28998: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
28999: LD_ADDR_VAR 0 3
29003: PUSH
29004: LD_INT 21
29006: PUSH
29007: LD_INT 22
29009: PUSH
29010: LD_INT 23
29012: PUSH
29013: LD_INT 24
29015: PUSH
29016: EMPTY
29017: LIST
29018: LIST
29019: LIST
29020: LIST
29021: ST_TO_ADDR
29022: GO 29307
29024: LD_INT 43
29026: DOUBLE
29027: EQUAL
29028: IFTRUE 29032
29030: GO 29058
29032: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29033: LD_ADDR_VAR 0 3
29037: PUSH
29038: LD_INT 21
29040: PUSH
29041: LD_INT 22
29043: PUSH
29044: LD_INT 23
29046: PUSH
29047: LD_INT 24
29049: PUSH
29050: EMPTY
29051: LIST
29052: LIST
29053: LIST
29054: LIST
29055: ST_TO_ADDR
29056: GO 29307
29058: LD_INT 44
29060: DOUBLE
29061: EQUAL
29062: IFTRUE 29066
29064: GO 29092
29066: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29067: LD_ADDR_VAR 0 3
29071: PUSH
29072: LD_INT 21
29074: PUSH
29075: LD_INT 22
29077: PUSH
29078: LD_INT 23
29080: PUSH
29081: LD_INT 24
29083: PUSH
29084: EMPTY
29085: LIST
29086: LIST
29087: LIST
29088: LIST
29089: ST_TO_ADDR
29090: GO 29307
29092: LD_INT 45
29094: DOUBLE
29095: EQUAL
29096: IFTRUE 29100
29098: GO 29126
29100: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29101: LD_ADDR_VAR 0 3
29105: PUSH
29106: LD_INT 21
29108: PUSH
29109: LD_INT 22
29111: PUSH
29112: LD_INT 23
29114: PUSH
29115: LD_INT 24
29117: PUSH
29118: EMPTY
29119: LIST
29120: LIST
29121: LIST
29122: LIST
29123: ST_TO_ADDR
29124: GO 29307
29126: LD_INT 49
29128: DOUBLE
29129: EQUAL
29130: IFTRUE 29134
29132: GO 29160
29134: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29135: LD_ADDR_VAR 0 3
29139: PUSH
29140: LD_INT 21
29142: PUSH
29143: LD_INT 22
29145: PUSH
29146: LD_INT 23
29148: PUSH
29149: LD_INT 24
29151: PUSH
29152: EMPTY
29153: LIST
29154: LIST
29155: LIST
29156: LIST
29157: ST_TO_ADDR
29158: GO 29307
29160: LD_INT 51
29162: DOUBLE
29163: EQUAL
29164: IFTRUE 29168
29166: GO 29194
29168: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29169: LD_ADDR_VAR 0 3
29173: PUSH
29174: LD_INT 21
29176: PUSH
29177: LD_INT 22
29179: PUSH
29180: LD_INT 23
29182: PUSH
29183: LD_INT 24
29185: PUSH
29186: EMPTY
29187: LIST
29188: LIST
29189: LIST
29190: LIST
29191: ST_TO_ADDR
29192: GO 29307
29194: LD_INT 52
29196: DOUBLE
29197: EQUAL
29198: IFTRUE 29202
29200: GO 29228
29202: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29203: LD_ADDR_VAR 0 3
29207: PUSH
29208: LD_INT 21
29210: PUSH
29211: LD_INT 22
29213: PUSH
29214: LD_INT 23
29216: PUSH
29217: LD_INT 24
29219: PUSH
29220: EMPTY
29221: LIST
29222: LIST
29223: LIST
29224: LIST
29225: ST_TO_ADDR
29226: GO 29307
29228: LD_INT 53
29230: DOUBLE
29231: EQUAL
29232: IFTRUE 29236
29234: GO 29254
29236: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29237: LD_ADDR_VAR 0 3
29241: PUSH
29242: LD_INT 23
29244: PUSH
29245: LD_INT 24
29247: PUSH
29248: EMPTY
29249: LIST
29250: LIST
29251: ST_TO_ADDR
29252: GO 29307
29254: LD_INT 46
29256: DOUBLE
29257: EQUAL
29258: IFTRUE 29262
29260: GO 29280
29262: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29263: LD_ADDR_VAR 0 3
29267: PUSH
29268: LD_INT 23
29270: PUSH
29271: LD_INT 24
29273: PUSH
29274: EMPTY
29275: LIST
29276: LIST
29277: ST_TO_ADDR
29278: GO 29307
29280: LD_INT 47
29282: DOUBLE
29283: EQUAL
29284: IFTRUE 29288
29286: GO 29306
29288: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29289: LD_ADDR_VAR 0 3
29293: PUSH
29294: LD_INT 23
29296: PUSH
29297: LD_INT 24
29299: PUSH
29300: EMPTY
29301: LIST
29302: LIST
29303: ST_TO_ADDR
29304: GO 29307
29306: POP
// result := ( chassis in result ) ;
29307: LD_ADDR_VAR 0 3
29311: PUSH
29312: LD_VAR 0 1
29316: PUSH
29317: LD_VAR 0 3
29321: IN
29322: ST_TO_ADDR
// end ;
29323: LD_VAR 0 3
29327: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29328: LD_INT 0
29330: PPUSH
29331: PPUSH
29332: PPUSH
29333: PPUSH
// uc_side = 0 ;
29334: LD_ADDR_OWVAR 20
29338: PUSH
29339: LD_INT 0
29341: ST_TO_ADDR
// uc_nation = 0 ;
29342: LD_ADDR_OWVAR 21
29346: PUSH
29347: LD_INT 0
29349: ST_TO_ADDR
// nat_area := nature_area ;
29350: LD_ADDR_VAR 0 4
29354: PUSH
29355: LD_INT 24
29357: ST_TO_ADDR
// InitHc ;
29358: CALL_OW 19
// for i = 1 to 4 do
29362: LD_ADDR_VAR 0 2
29366: PUSH
29367: DOUBLE
29368: LD_INT 1
29370: DEC
29371: ST_TO_ADDR
29372: LD_INT 4
29374: PUSH
29375: FOR_TO
29376: IFFALSE 29423
// begin hc_class = 18 ;
29378: LD_ADDR_OWVAR 28
29382: PUSH
29383: LD_INT 18
29385: ST_TO_ADDR
// hc_gallery =  ;
29386: LD_ADDR_OWVAR 33
29390: PUSH
29391: LD_STRING 
29393: ST_TO_ADDR
// animal := CreateHuman ;
29394: LD_ADDR_VAR 0 3
29398: PUSH
29399: CALL_OW 44
29403: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29404: LD_VAR 0 3
29408: PPUSH
29409: LD_VAR 0 4
29413: PPUSH
29414: LD_INT 0
29416: PPUSH
29417: CALL_OW 49
// end ;
29421: GO 29375
29423: POP
29424: POP
// for i = 1 to 3 do
29425: LD_ADDR_VAR 0 2
29429: PUSH
29430: DOUBLE
29431: LD_INT 1
29433: DEC
29434: ST_TO_ADDR
29435: LD_INT 3
29437: PUSH
29438: FOR_TO
29439: IFFALSE 29503
// begin hc_class = class_tiger ;
29441: LD_ADDR_OWVAR 28
29445: PUSH
29446: LD_INT 14
29448: ST_TO_ADDR
// hc_gallery =  ;
29449: LD_ADDR_OWVAR 33
29453: PUSH
29454: LD_STRING 
29456: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29457: LD_ADDR_OWVAR 35
29461: PUSH
29462: LD_INT 5
29464: NEG
29465: PPUSH
29466: LD_INT 5
29468: PPUSH
29469: CALL_OW 12
29473: ST_TO_ADDR
// animal := CreateHuman ;
29474: LD_ADDR_VAR 0 3
29478: PUSH
29479: CALL_OW 44
29483: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29484: LD_VAR 0 3
29488: PPUSH
29489: LD_VAR 0 4
29493: PPUSH
29494: LD_INT 0
29496: PPUSH
29497: CALL_OW 49
// end ;
29501: GO 29438
29503: POP
29504: POP
// for i = 1 to 3 do
29505: LD_ADDR_VAR 0 2
29509: PUSH
29510: DOUBLE
29511: LD_INT 1
29513: DEC
29514: ST_TO_ADDR
29515: LD_INT 3
29517: PUSH
29518: FOR_TO
29519: IFFALSE 29622
// begin hc_class = class_apeman ;
29521: LD_ADDR_OWVAR 28
29525: PUSH
29526: LD_INT 12
29528: ST_TO_ADDR
// hc_gallery =  ;
29529: LD_ADDR_OWVAR 33
29533: PUSH
29534: LD_STRING 
29536: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29537: LD_ADDR_OWVAR 35
29541: PUSH
29542: LD_INT 2
29544: NEG
29545: PPUSH
29546: LD_INT 2
29548: PPUSH
29549: CALL_OW 12
29553: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29554: LD_ADDR_OWVAR 31
29558: PUSH
29559: LD_INT 1
29561: PPUSH
29562: LD_INT 3
29564: PPUSH
29565: CALL_OW 12
29569: PUSH
29570: LD_INT 1
29572: PPUSH
29573: LD_INT 3
29575: PPUSH
29576: CALL_OW 12
29580: PUSH
29581: LD_INT 0
29583: PUSH
29584: LD_INT 0
29586: PUSH
29587: EMPTY
29588: LIST
29589: LIST
29590: LIST
29591: LIST
29592: ST_TO_ADDR
// animal := CreateHuman ;
29593: LD_ADDR_VAR 0 3
29597: PUSH
29598: CALL_OW 44
29602: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29603: LD_VAR 0 3
29607: PPUSH
29608: LD_VAR 0 4
29612: PPUSH
29613: LD_INT 0
29615: PPUSH
29616: CALL_OW 49
// end ;
29620: GO 29518
29622: POP
29623: POP
// for i = 1 to 3 do
29624: LD_ADDR_VAR 0 2
29628: PUSH
29629: DOUBLE
29630: LD_INT 1
29632: DEC
29633: ST_TO_ADDR
29634: LD_INT 3
29636: PUSH
29637: FOR_TO
29638: IFFALSE 29685
// begin hc_class = 13 ;
29640: LD_ADDR_OWVAR 28
29644: PUSH
29645: LD_INT 13
29647: ST_TO_ADDR
// hc_gallery =  ;
29648: LD_ADDR_OWVAR 33
29652: PUSH
29653: LD_STRING 
29655: ST_TO_ADDR
// animal := CreateHuman ;
29656: LD_ADDR_VAR 0 3
29660: PUSH
29661: CALL_OW 44
29665: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29666: LD_VAR 0 3
29670: PPUSH
29671: LD_VAR 0 4
29675: PPUSH
29676: LD_INT 0
29678: PPUSH
29679: CALL_OW 49
// end ;
29683: GO 29637
29685: POP
29686: POP
// for i = 1 to 3 do
29687: LD_ADDR_VAR 0 2
29691: PUSH
29692: DOUBLE
29693: LD_INT 1
29695: DEC
29696: ST_TO_ADDR
29697: LD_INT 3
29699: PUSH
29700: FOR_TO
29701: IFFALSE 29746
// begin hc_class = 20 ;
29703: LD_ADDR_OWVAR 28
29707: PUSH
29708: LD_INT 20
29710: ST_TO_ADDR
// hc_gallery =  ;
29711: LD_ADDR_OWVAR 33
29715: PUSH
29716: LD_STRING 
29718: ST_TO_ADDR
// animal := CreateHuman ;
29719: LD_ADDR_VAR 0 3
29723: PUSH
29724: CALL_OW 44
29728: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
29729: LD_VAR 0 3
29733: PPUSH
29734: LD_INT 4
29736: PPUSH
29737: LD_INT 0
29739: PPUSH
29740: CALL_OW 49
// end ;
29744: GO 29700
29746: POP
29747: POP
// end ; end_of_file
29748: LD_VAR 0 1
29752: RET
// export function Action ; begin
29753: LD_INT 0
29755: PPUSH
// InGameOn ;
29756: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
29760: LD_EXP 11
29764: PPUSH
29765: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
29769: LD_EXP 11
29773: PPUSH
29774: LD_STRING D1-JMM-1
29776: PPUSH
29777: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
29781: LD_EXP 12
29785: PPUSH
29786: LD_STRING D1-Roth-1
29788: PPUSH
29789: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
29793: LD_EXP 11
29797: PPUSH
29798: LD_STRING D1-JMM-2
29800: PPUSH
29801: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
29805: LD_EXP 12
29809: PPUSH
29810: LD_STRING D1-Roth-2
29812: PPUSH
29813: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
29817: LD_EXP 11
29821: PPUSH
29822: LD_STRING D1-JMM-3
29824: PPUSH
29825: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
29829: LD_EXP 12
29833: PPUSH
29834: LD_STRING D1-Roth-3
29836: PPUSH
29837: CALL_OW 88
// ComInvisible ( Roth ) ;
29841: LD_EXP 12
29845: PPUSH
29846: CALL_OW 152
// wait ( 0 0$1.3 ) ;
29850: LD_INT 46
29852: PPUSH
29853: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
29857: LD_EXP 11
29861: PPUSH
29862: LD_STRING D1-JMM-4
29864: PPUSH
29865: CALL_OW 88
// wait ( 0 0$0.3 ) ;
29869: LD_INT 10
29871: PPUSH
29872: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
29876: LD_EXP 12
29880: PPUSH
29881: LD_EXP 11
29885: PPUSH
29886: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
29890: LD_EXP 11
29894: PPUSH
29895: LD_STRING D1-JMM-4a
29897: PPUSH
29898: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
29902: LD_EXP 12
29906: PPUSH
29907: LD_STRING D1-Roth-4
29909: PPUSH
29910: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
29914: LD_EXP 11
29918: PPUSH
29919: LD_STRING D1-JMM-5
29921: PPUSH
29922: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
29926: LD_EXP 12
29930: PPUSH
29931: LD_STRING D1-Roth-5
29933: PPUSH
29934: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
29938: LD_EXP 11
29942: PPUSH
29943: LD_STRING D1-JMM-6
29945: PPUSH
29946: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
29950: LD_EXP 12
29954: PPUSH
29955: LD_STRING D1-Roth-6
29957: PPUSH
29958: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
29962: LD_EXP 11
29966: PPUSH
29967: LD_STRING D1-JMM-7
29969: PPUSH
29970: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
29974: LD_EXP 13
29978: PPUSH
29979: LD_EXP 11
29983: PPUSH
29984: CALL_OW 250
29988: PPUSH
29989: LD_EXP 11
29993: PPUSH
29994: CALL_OW 251
29998: PPUSH
29999: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30003: LD_EXP 12
30007: PPUSH
30008: LD_STRING D1-Roth-7
30010: PPUSH
30011: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30015: LD_INT 10
30017: PPUSH
30018: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30022: LD_EXP 13
30026: PPUSH
30027: LD_EXP 11
30031: PPUSH
30032: CALL_OW 296
30036: PUSH
30037: LD_INT 6
30039: LESS
30040: IFFALSE 30015
// ComTurnUnit ( Powell , JMM ) ;
30042: LD_EXP 13
30046: PPUSH
30047: LD_EXP 11
30051: PPUSH
30052: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30056: LD_EXP 13
30060: PPUSH
30061: LD_STRING D1-Pow-7
30063: PPUSH
30064: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30068: LD_EXP 11
30072: PPUSH
30073: LD_EXP 13
30077: PPUSH
30078: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30082: LD_EXP 12
30086: PPUSH
30087: LD_EXP 13
30091: PPUSH
30092: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30096: LD_EXP 11
30100: PPUSH
30101: LD_STRING D1-JMM-8
30103: PPUSH
30104: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30108: LD_EXP 13
30112: PPUSH
30113: LD_STRING D1-Pow-8
30115: PPUSH
30116: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30120: LD_EXP 11
30124: PPUSH
30125: LD_STRING D1-JMM-9
30127: PPUSH
30128: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30132: LD_EXP 13
30136: PPUSH
30137: LD_INT 124
30139: PPUSH
30140: LD_INT 61
30142: PPUSH
30143: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30147: LD_INT 35
30149: PPUSH
30150: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30154: LD_EXP 11
30158: PPUSH
30159: LD_EXP 13
30163: PPUSH
30164: CALL_OW 296
30168: PUSH
30169: LD_INT 6
30171: GREATER
30172: IFFALSE 30147
// SayRadio ( Powell , D1-Pow-9 ) ;
30174: LD_EXP 13
30178: PPUSH
30179: LD_STRING D1-Pow-9
30181: PPUSH
30182: CALL_OW 94
// RemoveUnit ( Powell ) ;
30186: LD_EXP 13
30190: PPUSH
30191: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30195: LD_EXP 13
30199: PPUSH
30200: LD_INT 18
30202: PPUSH
30203: CALL_OW 52
// if Joan and not Joan in selected then
30207: LD_EXP 32
30211: PUSH
30212: LD_EXP 32
30216: PUSH
30217: LD_EXP 3
30221: IN
30222: NOT
30223: AND
30224: IFFALSE 30238
// SayRadio ( Joan , D1-Joan-9 ) ;
30226: LD_EXP 32
30230: PPUSH
30231: LD_STRING D1-Joan-9
30233: PPUSH
30234: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30238: LD_EXP 12
30242: PPUSH
30243: LD_EXP 11
30247: PPUSH
30248: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30252: LD_EXP 11
30256: PPUSH
30257: LD_EXP 12
30261: PPUSH
30262: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30266: LD_EXP 12
30270: PPUSH
30271: LD_STRING D1-Roth-9
30273: PPUSH
30274: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30278: LD_EXP 11
30282: PPUSH
30283: LD_STRING D1-JMM-10
30285: PPUSH
30286: CALL_OW 88
// InGameOff ;
30290: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30294: LD_STRING M1
30296: PPUSH
30297: CALL_OW 337
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30301: LD_INT 7
30303: PPUSH
30304: LD_INT 1
30306: PPUSH
30307: LD_INT 2
30309: PPUSH
30310: LD_INT 1
30312: PPUSH
30313: CALL_OW 80
// wait ( 0 0$3 ) ;
30317: LD_INT 105
30319: PPUSH
30320: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30324: LD_EXP 12
30328: PPUSH
30329: LD_INT 124
30331: PPUSH
30332: LD_INT 18
30334: PPUSH
30335: CALL_OW 111
// AddComInvisible ( Roth ) ;
30339: LD_EXP 12
30343: PPUSH
30344: CALL_OW 212
// AddComWait ( Roth , 1 1$30 ) ;
30348: LD_EXP 12
30352: PPUSH
30353: LD_INT 3150
30355: PPUSH
30356: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30360: LD_EXP 12
30364: PPUSH
30365: LD_INT 156
30367: PPUSH
30368: LD_INT 20
30370: PPUSH
30371: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30375: LD_EXP 12
30379: PPUSH
30380: LD_INT 178
30382: PPUSH
30383: LD_INT 42
30385: PPUSH
30386: CALL_OW 171
// AddComInvisible ( Roth ) ;
30390: LD_EXP 12
30394: PPUSH
30395: CALL_OW 212
// end ;
30399: LD_VAR 0 1
30403: RET
// every 0 0$1 do var i , tmp ;
30404: GO 30406
30406: DISABLE
30407: LD_INT 0
30409: PPUSH
30410: PPUSH
// begin tmp := selected union friends union others ;
30411: LD_ADDR_VAR 0 2
30415: PUSH
30416: LD_EXP 3
30420: PUSH
30421: LD_EXP 4
30425: UNION
30426: PUSH
30427: LD_EXP 5
30431: UNION
30432: ST_TO_ADDR
// if not tmp then
30433: LD_VAR 0 2
30437: NOT
30438: IFFALSE 30442
// exit ;
30440: GO 30514
// repeat wait ( 0 0$1 ) ;
30442: LD_INT 35
30444: PPUSH
30445: CALL_OW 67
// for i in tmp do
30449: LD_ADDR_VAR 0 1
30453: PUSH
30454: LD_VAR 0 2
30458: PUSH
30459: FOR_IN
30460: IFFALSE 30505
// if CanSpot ( JMM , i ) then
30462: LD_EXP 11
30466: PPUSH
30467: LD_VAR 0 1
30471: PPUSH
30472: CALL 27061 0 2
30476: IFFALSE 30503
// begin tmp := tmp diff i ;
30478: LD_ADDR_VAR 0 2
30482: PUSH
30483: LD_VAR 0 2
30487: PUSH
30488: LD_VAR 0 1
30492: DIFF
30493: ST_TO_ADDR
// Spot ( i ) ;
30494: LD_VAR 0 1
30498: PPUSH
30499: CALL 30517 0 1
// end ;
30503: GO 30459
30505: POP
30506: POP
// until not tmp ;
30507: LD_VAR 0 2
30511: NOT
30512: IFFALSE 30442
// end ;
30514: PPOPN 2
30516: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30517: LD_INT 0
30519: PPUSH
30520: PPUSH
30521: PPUSH
30522: PPUSH
// if not unit then
30523: LD_VAR 0 1
30527: NOT
30528: IFFALSE 30532
// exit ;
30530: GO 32421
// InGameOn ;
30532: CALL_OW 8
// side := GetSide ( JMM ) ;
30536: LD_ADDR_VAR 0 4
30540: PUSH
30541: LD_EXP 11
30545: PPUSH
30546: CALL_OW 255
30550: ST_TO_ADDR
// joined := false ;
30551: LD_ADDR_VAR 0 5
30555: PUSH
30556: LD_INT 0
30558: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30559: LD_ADDR_VAR 0 3
30563: PUSH
30564: LD_VAR 0 1
30568: PPUSH
30569: CALL_OW 310
30573: ST_TO_ADDR
// if building then
30574: LD_VAR 0 3
30578: IFFALSE 30637
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30580: LD_EXP 11
30584: PPUSH
30585: LD_VAR 0 1
30589: PPUSH
30590: CALL_OW 255
30594: PPUSH
30595: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30599: LD_EXP 11
30603: PPUSH
30604: LD_VAR 0 3
30608: PPUSH
30609: CALL_OW 120
// repeat wait ( 3 ) ;
30613: LD_INT 3
30615: PPUSH
30616: CALL_OW 67
// until IsInUnit ( JMM ) ;
30620: LD_EXP 11
30624: PPUSH
30625: CALL_OW 310
30629: IFFALSE 30613
// DialogueOn ;
30631: CALL_OW 6
// end else
30635: GO 30669
// begin ComTurnUnit ( JMM , unit ) ;
30637: LD_EXP 11
30641: PPUSH
30642: LD_VAR 0 1
30646: PPUSH
30647: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30651: LD_VAR 0 1
30655: PPUSH
30656: LD_EXP 11
30660: PPUSH
30661: CALL_OW 119
// DialogueOn ;
30665: CALL_OW 6
// end ; if unit = Joan then
30669: LD_VAR 0 1
30673: PUSH
30674: LD_EXP 32
30678: EQUAL
30679: IFFALSE 30789
// begin joined := true ;
30681: LD_ADDR_VAR 0 5
30685: PUSH
30686: LD_INT 1
30688: ST_TO_ADDR
// if Joan in selected then
30689: LD_EXP 32
30693: PUSH
30694: LD_EXP 3
30698: IN
30699: IFFALSE 30727
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
30701: LD_EXP 32
30705: PPUSH
30706: LD_STRING D3-Joan-Joan-1
30708: PPUSH
30709: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
30713: LD_EXP 11
30717: PPUSH
30718: LD_STRING D3-Joan-JMM-1
30720: PPUSH
30721: CALL_OW 88
// end else
30725: GO 30787
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
30727: LD_EXP 32
30731: PPUSH
30732: LD_STRING D4-Joan-Joan-1
30734: PPUSH
30735: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
30739: LD_EXP 11
30743: PPUSH
30744: LD_STRING D4-Joan-JMM-1
30746: PPUSH
30747: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
30751: LD_EXP 32
30755: PPUSH
30756: LD_STRING D4-Joan-Joan-2
30758: PPUSH
30759: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
30763: LD_EXP 11
30767: PPUSH
30768: LD_STRING D4-Joan-JMM-2
30770: PPUSH
30771: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
30775: LD_EXP 32
30779: PPUSH
30780: LD_STRING D4-Joan-Joan-3
30782: PPUSH
30783: CALL_OW 88
// end ; end else
30787: GO 32229
// if unit = Lisa then
30789: LD_VAR 0 1
30793: PUSH
30794: LD_EXP 19
30798: EQUAL
30799: IFFALSE 30991
// begin if Lisa in selected then
30801: LD_EXP 19
30805: PUSH
30806: LD_EXP 3
30810: IN
30811: IFFALSE 30924
// begin if GetSide ( Joan ) = 7 then
30813: LD_EXP 32
30817: PPUSH
30818: CALL_OW 255
30822: PUSH
30823: LD_INT 7
30825: EQUAL
30826: IFFALSE 30890
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
30828: LD_EXP 19
30832: PPUSH
30833: LD_STRING D3-LisaJ-Lisa-1
30835: PPUSH
30836: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
30840: LD_EXP 11
30844: PPUSH
30845: LD_STRING D3-LisaJ-JMM-1
30847: PPUSH
30848: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
30852: LD_EXP 19
30856: PPUSH
30857: LD_STRING D3-LisaJ-Lisa-2
30859: PPUSH
30860: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
30864: LD_EXP 11
30868: PPUSH
30869: LD_STRING D3-LisaJ-JMM-2
30871: PPUSH
30872: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
30876: LD_EXP 19
30880: PPUSH
30881: LD_STRING D3-LisaJ-Lisa-3
30883: PPUSH
30884: CALL_OW 88
// end else
30888: GO 30922
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
30890: LD_EXP 19
30894: PPUSH
30895: LD_STRING D3-LisaL-Lisa-1
30897: PPUSH
30898: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
30902: LD_EXP 11
30906: PPUSH
30907: LD_STRING D3-LisaL-JMM-1
30909: PPUSH
30910: CALL_OW 88
// joined := true ;
30914: LD_ADDR_VAR 0 5
30918: PUSH
30919: LD_INT 1
30921: ST_TO_ADDR
// end ; end else
30922: GO 30989
// begin if GetSide ( Joan ) = 7 then
30924: LD_EXP 32
30928: PPUSH
30929: CALL_OW 255
30933: PUSH
30934: LD_INT 7
30936: EQUAL
30937: IFFALSE 30977
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
30939: LD_EXP 19
30943: PPUSH
30944: LD_STRING D4-LisaJ-Lisa-1
30946: PPUSH
30947: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
30951: LD_EXP 11
30955: PPUSH
30956: LD_STRING D4-LisaJ-JMM-1
30958: PPUSH
30959: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
30963: LD_EXP 19
30967: PPUSH
30968: LD_STRING D4-LisaJ-Lisa-2
30970: PPUSH
30971: CALL_OW 88
// end else
30975: GO 30989
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
30977: LD_EXP 19
30981: PPUSH
30982: LD_STRING D4-LisaL-Lisa-1
30984: PPUSH
30985: CALL_OW 88
// end ; end ; end else
30989: GO 32229
// if unit = Frank then
30991: LD_VAR 0 1
30995: PUSH
30996: LD_EXP 29
31000: EQUAL
31001: IFFALSE 31141
// begin joined := true ;
31003: LD_ADDR_VAR 0 5
31007: PUSH
31008: LD_INT 1
31010: ST_TO_ADDR
// if Frank in selected then
31011: LD_EXP 29
31015: PUSH
31016: LD_EXP 3
31020: IN
31021: IFFALSE 31091
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31023: LD_EXP 29
31027: PPUSH
31028: LD_STRING D3-Frank-Frank-1
31030: PPUSH
31031: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31035: LD_EXP 11
31039: PPUSH
31040: LD_STRING D3-Frank-JMM-1
31042: PPUSH
31043: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31047: LD_EXP 29
31051: PPUSH
31052: LD_STRING D3-Frank-Frank-2
31054: PPUSH
31055: CALL_OW 88
// if reached_lab then
31059: LD_EXP 6
31063: IFFALSE 31089
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31065: LD_EXP 11
31069: PPUSH
31070: LD_STRING D3-Frank-JMM-2
31072: PPUSH
31073: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31077: LD_EXP 29
31081: PPUSH
31082: LD_STRING D3-Frank-Frank-3
31084: PPUSH
31085: CALL_OW 88
// end ; end else
31089: GO 31139
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31091: LD_EXP 29
31095: PPUSH
31096: LD_STRING D4-Frank-Frank-1
31098: PPUSH
31099: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31103: LD_EXP 11
31107: PPUSH
31108: LD_STRING D4-Frank-JMM-1
31110: PPUSH
31111: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31115: LD_EXP 29
31119: PPUSH
31120: LD_STRING D4-Frank-Frank-2
31122: PPUSH
31123: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31127: LD_EXP 11
31131: PPUSH
31132: LD_STRING D4-Frank-JMM-2
31134: PPUSH
31135: CALL_OW 88
// end ; end else
31139: GO 32229
// if unit = Brown then
31141: LD_VAR 0 1
31145: PUSH
31146: LD_EXP 24
31150: EQUAL
31151: IFFALSE 31247
// begin if Brown in selected or gamma_commander = 2 then
31153: LD_EXP 24
31157: PUSH
31158: LD_EXP 3
31162: IN
31163: PUSH
31164: LD_EXP 10
31168: PUSH
31169: LD_INT 2
31171: EQUAL
31172: OR
31173: IFFALSE 31209
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31175: LD_EXP 24
31179: PPUSH
31180: LD_STRING D3-Soldier1-Sol1-1
31182: PPUSH
31183: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31187: LD_EXP 11
31191: PPUSH
31192: LD_STRING D3-Soldier1-JMM-1
31194: PPUSH
31195: CALL_OW 88
// joined := true ;
31199: LD_ADDR_VAR 0 5
31203: PUSH
31204: LD_INT 1
31206: ST_TO_ADDR
// end else
31207: GO 31245
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31209: LD_EXP 24
31213: PPUSH
31214: LD_STRING D4-Soldier1-Sol1-1
31216: PPUSH
31217: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31221: LD_EXP 11
31225: PPUSH
31226: LD_STRING D4-Soldier1-JMM-1
31228: PPUSH
31229: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31233: LD_EXP 24
31237: PPUSH
31238: LD_STRING D4-Soldier1-Sol1-2
31240: PPUSH
31241: CALL_OW 88
// end ; end else
31245: GO 32229
// if unit = Donaldson then
31247: LD_VAR 0 1
31251: PUSH
31252: LD_EXP 20
31256: EQUAL
31257: IFFALSE 31353
// begin if Donaldson in selected or gamma_commander = 1 then
31259: LD_EXP 20
31263: PUSH
31264: LD_EXP 3
31268: IN
31269: PUSH
31270: LD_EXP 10
31274: PUSH
31275: LD_INT 1
31277: EQUAL
31278: OR
31279: IFFALSE 31315
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31281: LD_EXP 20
31285: PPUSH
31286: LD_STRING D3-Soldier2-FSol2-1
31288: PPUSH
31289: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31293: LD_EXP 11
31297: PPUSH
31298: LD_STRING D3-Soldier2-JMM-1
31300: PPUSH
31301: CALL_OW 88
// joined := true ;
31305: LD_ADDR_VAR 0 5
31309: PUSH
31310: LD_INT 1
31312: ST_TO_ADDR
// end else
31313: GO 31351
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31315: LD_VAR 0 1
31319: PPUSH
31320: LD_STRING D4-Soldier1-FSol1-1
31322: PPUSH
31323: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31327: LD_EXP 11
31331: PPUSH
31332: LD_STRING D4-Soldier1-JMM-1
31334: PPUSH
31335: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31339: LD_VAR 0 1
31343: PPUSH
31344: LD_STRING D4-Soldier1-FSol1-2
31346: PPUSH
31347: CALL_OW 88
// end ; end else
31351: GO 32229
// if unit = Cyrus then
31353: LD_VAR 0 1
31357: PUSH
31358: LD_EXP 22
31362: EQUAL
31363: IFFALSE 31437
// begin if Cyrus in selected then
31365: LD_EXP 22
31369: PUSH
31370: LD_EXP 3
31374: IN
31375: IFFALSE 31411
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31377: LD_EXP 22
31381: PPUSH
31382: LD_STRING D3-Cyrus-Cyrus-1
31384: PPUSH
31385: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31389: LD_EXP 11
31393: PPUSH
31394: LD_STRING D3-Cyrus-JMM-1
31396: PPUSH
31397: CALL_OW 88
// joined := true ;
31401: LD_ADDR_VAR 0 5
31405: PUSH
31406: LD_INT 1
31408: ST_TO_ADDR
// end else
31409: GO 31435
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31411: LD_EXP 22
31415: PPUSH
31416: LD_STRING D4-Cyrus-Cyrus-1
31418: PPUSH
31419: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31423: LD_EXP 11
31427: PPUSH
31428: LD_STRING D4-Cyrus-JMM-1
31430: PPUSH
31431: CALL_OW 88
// end ; end else
31435: GO 32229
// if unit = Bobby then
31437: LD_VAR 0 1
31441: PUSH
31442: LD_EXP 21
31446: EQUAL
31447: IFFALSE 31533
// begin if Bobby in selected then
31449: LD_EXP 21
31453: PUSH
31454: LD_EXP 3
31458: IN
31459: IFFALSE 31495
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31461: LD_EXP 21
31465: PPUSH
31466: LD_STRING D3-Bobby-Bobby-1
31468: PPUSH
31469: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31473: LD_EXP 11
31477: PPUSH
31478: LD_STRING D3-Bobby-JMM-1
31480: PPUSH
31481: CALL_OW 88
// joined := true ;
31485: LD_ADDR_VAR 0 5
31489: PUSH
31490: LD_INT 1
31492: ST_TO_ADDR
// end else
31493: GO 31531
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31495: LD_EXP 21
31499: PPUSH
31500: LD_STRING D4-Bobby-Bobby-1
31502: PPUSH
31503: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31507: LD_EXP 11
31511: PPUSH
31512: LD_STRING D4-Bobby-JMM-1
31514: PPUSH
31515: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31519: LD_EXP 21
31523: PPUSH
31524: LD_STRING D4-Bobby-Bobby-2
31526: PPUSH
31527: CALL_OW 88
// end ; end else
31531: GO 32229
// if unit = Cornel then
31533: LD_VAR 0 1
31537: PUSH
31538: LD_EXP 27
31542: EQUAL
31543: IFFALSE 31641
// begin if Cornel in selected then
31545: LD_EXP 27
31549: PUSH
31550: LD_EXP 3
31554: IN
31555: IFFALSE 31603
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31557: LD_EXP 27
31561: PPUSH
31562: LD_STRING D3-Mark-Corn-1
31564: PPUSH
31565: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31569: LD_EXP 11
31573: PPUSH
31574: LD_STRING D3-Mark-JMM-1
31576: PPUSH
31577: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31581: LD_EXP 27
31585: PPUSH
31586: LD_STRING D3-Mark-Corn-2
31588: PPUSH
31589: CALL_OW 88
// joined := true ;
31593: LD_ADDR_VAR 0 5
31597: PUSH
31598: LD_INT 1
31600: ST_TO_ADDR
// end else
31601: GO 31639
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31603: LD_EXP 27
31607: PPUSH
31608: LD_STRING D4-Mark-Corn-1
31610: PPUSH
31611: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31615: LD_EXP 11
31619: PPUSH
31620: LD_STRING D3-Joan-JMM-1
31622: PPUSH
31623: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31627: LD_EXP 27
31631: PPUSH
31632: LD_STRING D4-Mark-Corn-2
31634: PPUSH
31635: CALL_OW 88
// end ; end else
31639: GO 32229
// if unit = Gary then
31641: LD_VAR 0 1
31645: PUSH
31646: LD_EXP 28
31650: EQUAL
31651: IFFALSE 31735
// begin if Gary in selected then
31653: LD_EXP 28
31657: PUSH
31658: LD_EXP 3
31662: IN
31663: IFFALSE 31699
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
31665: LD_EXP 28
31669: PPUSH
31670: LD_STRING D3-Gary-Gary-1
31672: PPUSH
31673: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
31677: LD_EXP 11
31681: PPUSH
31682: LD_STRING D3-Gary-JMM-1
31684: PPUSH
31685: CALL_OW 88
// joined := true ;
31689: LD_ADDR_VAR 0 5
31693: PUSH
31694: LD_INT 1
31696: ST_TO_ADDR
// end else
31697: GO 31733
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
31699: LD_EXP 28
31703: PPUSH
31704: LD_STRING D4-Gary-Gary-1
31706: PPUSH
31707: CALL_OW 88
// SetSide ( Gary , 1 ) ;
31711: LD_EXP 28
31715: PPUSH
31716: LD_INT 1
31718: PPUSH
31719: CALL_OW 235
// DialogueOff ;
31723: CALL_OW 7
// InGameOff ;
31727: CALL_OW 9
// exit ;
31731: GO 32421
// end ; end else
31733: GO 32229
// if unit = Kikuchi then
31735: LD_VAR 0 1
31739: PUSH
31740: LD_EXP 30
31744: EQUAL
31745: IFFALSE 31829
// begin if Kikuchi in selected then
31747: LD_EXP 30
31751: PUSH
31752: LD_EXP 3
31756: IN
31757: IFFALSE 31793
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
31759: LD_EXP 30
31763: PPUSH
31764: LD_STRING D3-Yamako-Yam-1
31766: PPUSH
31767: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31771: LD_EXP 11
31775: PPUSH
31776: LD_STRING D3-Soldier2-JMM-1
31778: PPUSH
31779: CALL_OW 88
// joined := true ;
31783: LD_ADDR_VAR 0 5
31787: PUSH
31788: LD_INT 1
31790: ST_TO_ADDR
// end else
31791: GO 31827
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
31793: LD_EXP 30
31797: PPUSH
31798: LD_STRING D4-Yamako-Yam-1
31800: PPUSH
31801: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
31805: LD_EXP 30
31809: PPUSH
31810: LD_INT 1
31812: PPUSH
31813: CALL_OW 235
// DialogueOff ;
31817: CALL_OW 7
// InGameOff ;
31821: CALL_OW 9
// exit ;
31825: GO 32421
// end ; end else
31827: GO 32229
// if unit = Gladstone then
31829: LD_VAR 0 1
31833: PUSH
31834: LD_EXP 25
31838: EQUAL
31839: IFFALSE 31913
// begin if Gladstone in selected then
31841: LD_EXP 25
31845: PUSH
31846: LD_EXP 3
31850: IN
31851: IFFALSE 31887
// begin joined := true ;
31853: LD_ADDR_VAR 0 5
31857: PUSH
31858: LD_INT 1
31860: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
31861: LD_EXP 11
31865: PPUSH
31866: LD_STRING D3-Tim-JMM-1
31868: PPUSH
31869: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
31873: LD_EXP 25
31877: PPUSH
31878: LD_STRING D3-Tim-Glad-1
31880: PPUSH
31881: CALL_OW 88
// end else
31885: GO 31911
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
31887: LD_EXP 11
31891: PPUSH
31892: LD_STRING D4-Tim-JMM-1
31894: PPUSH
31895: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
31899: LD_EXP 25
31903: PPUSH
31904: LD_STRING D4-Tim-Glad-1
31906: PPUSH
31907: CALL_OW 88
// end ; end else
31911: GO 32229
// if unit = Denis then
31913: LD_VAR 0 1
31917: PUSH
31918: LD_EXP 23
31922: EQUAL
31923: IFFALSE 31959
// begin joined := true ;
31925: LD_ADDR_VAR 0 5
31929: PUSH
31930: LD_INT 1
31932: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
31933: LD_EXP 23
31937: PPUSH
31938: LD_STRING D3-Denis-Den-1
31940: PPUSH
31941: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
31945: LD_EXP 11
31949: PPUSH
31950: LD_STRING D3-Denis-JMM-1
31952: PPUSH
31953: CALL_OW 88
// end else
31957: GO 32229
// if unit = Simms then
31959: LD_VAR 0 1
31963: PUSH
31964: LD_EXP 31
31968: EQUAL
31969: IFFALSE 32005
// begin joined := true ;
31971: LD_ADDR_VAR 0 5
31975: PUSH
31976: LD_INT 1
31978: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
31979: LD_EXP 31
31983: PPUSH
31984: LD_STRING D3-Simms-Sim-1
31986: PPUSH
31987: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
31991: LD_EXP 11
31995: PPUSH
31996: LD_STRING D3-Simms-JMM-1
31998: PPUSH
31999: CALL_OW 88
// end else
32003: GO 32229
// if unit = DeltaDoctor then
32005: LD_VAR 0 1
32009: PUSH
32010: LD_EXP 33
32014: EQUAL
32015: IFFALSE 32051
// begin joined := true ;
32017: LD_ADDR_VAR 0 5
32021: PUSH
32022: LD_INT 1
32024: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32025: LD_EXP 33
32029: PPUSH
32030: LD_STRING D3-Soldier1-Sol1-1
32032: PPUSH
32033: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32037: LD_EXP 11
32041: PPUSH
32042: LD_STRING D3-Soldier1-JMM-1
32044: PPUSH
32045: CALL_OW 88
// end else
32049: GO 32229
// begin joined := unit in selected ;
32051: LD_ADDR_VAR 0 5
32055: PUSH
32056: LD_VAR 0 1
32060: PUSH
32061: LD_EXP 3
32065: IN
32066: ST_TO_ADDR
// if joined then
32067: LD_VAR 0 5
32071: IFFALSE 32140
// begin if GetSex ( unit ) = sex_male then
32073: LD_VAR 0 1
32077: PPUSH
32078: CALL_OW 258
32082: PUSH
32083: LD_INT 1
32085: EQUAL
32086: IFFALSE 32114
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32088: LD_VAR 0 1
32092: PPUSH
32093: LD_STRING D3-Soldier1-Sol1-1
32095: PPUSH
32096: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32100: LD_EXP 11
32104: PPUSH
32105: LD_STRING D3-Soldier1-JMM-1
32107: PPUSH
32108: CALL_OW 88
// end else
32112: GO 32138
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32114: LD_VAR 0 1
32118: PPUSH
32119: LD_STRING D3-Soldier2-FSol2-1
32121: PPUSH
32122: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32126: LD_EXP 11
32130: PPUSH
32131: LD_STRING D3-Soldier2-JMM-1
32133: PPUSH
32134: CALL_OW 88
// end ; end else
32138: GO 32229
// begin if GetSex ( unit ) = sex_male then
32140: LD_VAR 0 1
32144: PPUSH
32145: CALL_OW 258
32149: PUSH
32150: LD_INT 1
32152: EQUAL
32153: IFFALSE 32193
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32155: LD_VAR 0 1
32159: PPUSH
32160: LD_STRING D4-Soldier2-Sol1-1
32162: PPUSH
32163: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32167: LD_EXP 11
32171: PPUSH
32172: LD_STRING D4-Soldier2-JMM-1
32174: PPUSH
32175: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32179: LD_VAR 0 1
32183: PPUSH
32184: LD_STRING D4-Soldier2-Sol2-1
32186: PPUSH
32187: CALL_OW 88
// end else
32191: GO 32229
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32193: LD_VAR 0 1
32197: PPUSH
32198: LD_STRING D4-Soldier1-FSol1-1
32200: PPUSH
32201: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32205: LD_EXP 11
32209: PPUSH
32210: LD_STRING D4-Soldier1-JMM-1
32212: PPUSH
32213: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32217: LD_VAR 0 1
32221: PPUSH
32222: LD_STRING D4-Soldier1-FSol1-2
32224: PPUSH
32225: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32229: CALL_OW 7
// InGameOff ;
32233: CALL_OW 9
// if building then
32237: LD_VAR 0 3
32241: IFFALSE 32342
// begin SetSide ( JMM , side ) ;
32243: LD_EXP 11
32247: PPUSH
32248: LD_VAR 0 4
32252: PPUSH
32253: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32257: LD_EXP 11
32261: PPUSH
32262: CALL_OW 122
// if joined then
32266: LD_VAR 0 5
32270: IFFALSE 32309
// begin SetSide ( unit , side ) ;
32272: LD_VAR 0 1
32276: PPUSH
32277: LD_VAR 0 4
32281: PPUSH
32282: CALL_OW 235
// SetSide ( building , 1 ) ;
32286: LD_VAR 0 3
32290: PPUSH
32291: LD_INT 1
32293: PPUSH
32294: CALL_OW 235
// ComExitBuilding ( unit ) ;
32298: LD_VAR 0 1
32302: PPUSH
32303: CALL_OW 122
// end else
32307: GO 32340
// begin wait ( 0 0$10 ) ;
32309: LD_INT 350
32311: PPUSH
32312: CALL_OW 67
// SetSide ( unit , 1 ) ;
32316: LD_VAR 0 1
32320: PPUSH
32321: LD_INT 1
32323: PPUSH
32324: CALL_OW 235
// SetSide ( building , 1 ) ;
32328: LD_VAR 0 3
32332: PPUSH
32333: LD_INT 1
32335: PPUSH
32336: CALL_OW 235
// end ; end else
32340: GO 32421
// begin ComStop ( [ JMM , unit ] ) ;
32342: LD_EXP 11
32346: PUSH
32347: LD_VAR 0 1
32351: PUSH
32352: EMPTY
32353: LIST
32354: LIST
32355: PPUSH
32356: CALL_OW 141
// if joined then
32360: LD_VAR 0 5
32364: IFFALSE 32382
// SetSide ( unit , side ) else
32366: LD_VAR 0 1
32370: PPUSH
32371: LD_VAR 0 4
32375: PPUSH
32376: CALL_OW 235
32380: GO 32421
// begin repeat wait ( 0 0$1 ) ;
32382: LD_INT 35
32384: PPUSH
32385: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32389: LD_EXP 11
32393: PPUSH
32394: LD_VAR 0 1
32398: PPUSH
32399: CALL_OW 296
32403: PUSH
32404: LD_INT 10
32406: GREATER
32407: IFFALSE 32382
// SetSide ( unit , 1 ) ;
32409: LD_VAR 0 1
32413: PPUSH
32414: LD_INT 1
32416: PPUSH
32417: CALL_OW 235
// end ; end ; end ;
32421: LD_VAR 0 2
32425: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32426: LD_EXP 11
32430: PPUSH
32431: CALL_OW 310
32435: PUSH
32436: LD_INT 47
32438: EQUAL
32439: IFFALSE 32507
32441: GO 32443
32443: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32444: LD_STRING M1a
32446: PPUSH
32447: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32451: LD_INT 13
32453: PPUSH
32454: LD_INT 1
32456: PPUSH
32457: LD_INT 2
32459: PPUSH
32460: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32464: LD_INT 29
32466: PPUSH
32467: LD_INT 1
32469: PPUSH
32470: LD_INT 2
32472: PPUSH
32473: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32477: LD_EXP 11
32481: PPUSH
32482: LD_INT 9
32484: PPUSH
32485: CALL_OW 336
// can_escape := true ;
32489: LD_ADDR_EXP 7
32493: PUSH
32494: LD_INT 1
32496: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32497: LD_INT 19
32499: PPUSH
32500: LD_INT 1
32502: PPUSH
32503: CALL_OW 424
// end ;
32507: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32508: LD_INT 22
32510: PUSH
32511: LD_INT 4
32513: PUSH
32514: EMPTY
32515: LIST
32516: LIST
32517: PUSH
32518: LD_INT 34
32520: PUSH
32521: LD_INT 12
32523: PUSH
32524: EMPTY
32525: LIST
32526: LIST
32527: PUSH
32528: EMPTY
32529: LIST
32530: LIST
32531: PPUSH
32532: CALL_OW 69
32536: IFFALSE 32618
32538: GO 32540
32540: DISABLE
32541: LD_INT 0
32543: PPUSH
// begin enable ;
32544: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32545: LD_ADDR_VAR 0 1
32549: PUSH
32550: LD_INT 22
32552: PUSH
32553: LD_INT 4
32555: PUSH
32556: EMPTY
32557: LIST
32558: LIST
32559: PUSH
32560: LD_INT 34
32562: PUSH
32563: LD_INT 12
32565: PUSH
32566: EMPTY
32567: LIST
32568: LIST
32569: PUSH
32570: EMPTY
32571: LIST
32572: LIST
32573: PPUSH
32574: CALL_OW 69
32578: PUSH
32579: FOR_IN
32580: IFFALSE 32616
// if GetDistUnits ( i , JMM ) < 6 then
32582: LD_VAR 0 1
32586: PPUSH
32587: LD_EXP 11
32591: PPUSH
32592: CALL_OW 296
32596: PUSH
32597: LD_INT 6
32599: LESS
32600: IFFALSE 32614
// SetSide ( i , 7 ) ;
32602: LD_VAR 0 1
32606: PPUSH
32607: LD_INT 7
32609: PPUSH
32610: CALL_OW 235
32614: GO 32579
32616: POP
32617: POP
// end ;
32618: PPOPN 1
32620: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32621: LD_EXP 7
32625: PUSH
32626: LD_INT 19
32628: PPUSH
32629: LD_INT 22
32631: PUSH
32632: LD_INT 7
32634: PUSH
32635: EMPTY
32636: LIST
32637: LIST
32638: PUSH
32639: LD_INT 21
32641: PUSH
32642: LD_INT 1
32644: PUSH
32645: EMPTY
32646: LIST
32647: LIST
32648: PUSH
32649: EMPTY
32650: LIST
32651: LIST
32652: PPUSH
32653: CALL_OW 71
32657: NOT
32658: AND
32659: PUSH
32660: LD_INT 3
32662: PPUSH
32663: CALL_OW 469
32667: NOT
32668: AND
32669: PUSH
32670: LD_INT 5
32672: PPUSH
32673: CALL_OW 469
32677: NOT
32678: AND
32679: IFFALSE 33837
32681: GO 32683
32683: DISABLE
32684: LD_INT 0
32686: PPUSH
32687: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
32688: LD_ADDR_VAR 0 1
32692: PUSH
32693: LD_EXP 3
32697: PPUSH
32698: LD_INT 22
32700: PUSH
32701: LD_INT 4
32703: PUSH
32704: EMPTY
32705: LIST
32706: LIST
32707: PUSH
32708: LD_INT 21
32710: PUSH
32711: LD_INT 1
32713: PUSH
32714: EMPTY
32715: LIST
32716: LIST
32717: PUSH
32718: EMPTY
32719: LIST
32720: LIST
32721: PPUSH
32722: CALL_OW 72
32726: PUSH
32727: LD_INT 0
32729: EQUAL
32730: ST_TO_ADDR
// if not all_taken then
32731: LD_VAR 0 1
32735: NOT
32736: IFFALSE 32877
// case query ( Q1 ) of 1 :
32738: LD_STRING Q1
32740: PPUSH
32741: CALL_OW 97
32745: PUSH
32746: LD_INT 1
32748: DOUBLE
32749: EQUAL
32750: IFTRUE 32754
32752: GO 32865
32754: POP
// begin repeat wait ( 0 0$1 ) ;
32755: LD_INT 35
32757: PPUSH
32758: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
32762: LD_EXP 3
32766: PPUSH
32767: LD_INT 22
32769: PUSH
32770: LD_INT 4
32772: PUSH
32773: EMPTY
32774: LIST
32775: LIST
32776: PUSH
32777: LD_INT 21
32779: PUSH
32780: LD_INT 1
32782: PUSH
32783: EMPTY
32784: LIST
32785: LIST
32786: PUSH
32787: EMPTY
32788: LIST
32789: LIST
32790: PPUSH
32791: CALL_OW 72
32795: PUSH
32796: LD_INT 0
32798: EQUAL
32799: PUSH
32800: LD_INT 19
32802: PPUSH
32803: LD_INT 22
32805: PUSH
32806: LD_INT 7
32808: PUSH
32809: EMPTY
32810: LIST
32811: LIST
32812: PUSH
32813: LD_INT 21
32815: PUSH
32816: LD_INT 1
32818: PUSH
32819: EMPTY
32820: LIST
32821: LIST
32822: PUSH
32823: EMPTY
32824: LIST
32825: LIST
32826: PPUSH
32827: CALL_OW 71
32831: NOT
32832: AND
32833: PUSH
32834: LD_INT 3
32836: PPUSH
32837: CALL_OW 469
32841: NOT
32842: AND
32843: PUSH
32844: LD_INT 5
32846: PPUSH
32847: CALL_OW 469
32851: NOT
32852: AND
32853: IFFALSE 32755
// all_taken := true ;
32855: LD_ADDR_VAR 0 1
32859: PUSH
32860: LD_INT 1
32862: ST_TO_ADDR
// end ; 2 :
32863: GO 32877
32865: LD_INT 2
32867: DOUBLE
32868: EQUAL
32869: IFTRUE 32873
32871: GO 32876
32873: POP
// ; end ;
32874: GO 32877
32876: POP
// if all_taken then
32877: LD_VAR 0 1
32881: IFFALSE 32895
// AddMedal ( All , 1 ) else
32883: LD_STRING All
32885: PPUSH
32886: LD_INT 1
32888: PPUSH
32889: CALL_OW 101
32893: GO 32906
// AddMedal ( All , - 1 ) ;
32895: LD_STRING All
32897: PPUSH
32898: LD_INT 1
32900: NEG
32901: PPUSH
32902: CALL_OW 101
// if team_kill_counter then
32906: LD_EXP 9
32910: IFFALSE 32925
// AddMedal ( Save , - 1 ) else
32912: LD_STRING Save
32914: PPUSH
32915: LD_INT 1
32917: NEG
32918: PPUSH
32919: CALL_OW 101
32923: GO 32935
// AddMedal ( Save , 1 ) ;
32925: LD_STRING Save
32927: PPUSH
32928: LD_INT 1
32930: PPUSH
32931: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
32935: LD_EXP 8
32939: PUSH
32940: LD_INT 2
32942: PUSH
32943: LD_INT 1
32945: PUSH
32946: LD_INT 1
32948: PUSH
32949: EMPTY
32950: LIST
32951: LIST
32952: LIST
32953: PUSH
32954: LD_OWVAR 67
32958: ARRAY
32959: GREATEREQUAL
32960: IFFALSE 32975
// AddMedal ( Friendship , - 1 ) else
32962: LD_STRING Friendship
32964: PPUSH
32965: LD_INT 1
32967: NEG
32968: PPUSH
32969: CALL_OW 101
32973: GO 32985
// AddMedal ( Friendship , 1 ) ;
32975: LD_STRING Friendship
32977: PPUSH
32978: LD_INT 1
32980: PPUSH
32981: CALL_OW 101
// GiveMedals ( MAIN ) ;
32985: LD_STRING MAIN
32987: PPUSH
32988: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
32992: LD_ADDR_VAR 0 2
32996: PUSH
32997: LD_INT 22
32999: PUSH
33000: LD_INT 7
33002: PUSH
33003: EMPTY
33004: LIST
33005: LIST
33006: PUSH
33007: LD_INT 2
33009: PUSH
33010: LD_INT 25
33012: PUSH
33013: LD_INT 1
33015: PUSH
33016: EMPTY
33017: LIST
33018: LIST
33019: PUSH
33020: LD_INT 25
33022: PUSH
33023: LD_INT 2
33025: PUSH
33026: EMPTY
33027: LIST
33028: LIST
33029: PUSH
33030: LD_INT 25
33032: PUSH
33033: LD_INT 3
33035: PUSH
33036: EMPTY
33037: LIST
33038: LIST
33039: PUSH
33040: LD_INT 25
33042: PUSH
33043: LD_INT 4
33045: PUSH
33046: EMPTY
33047: LIST
33048: LIST
33049: PUSH
33050: LD_INT 25
33052: PUSH
33053: LD_INT 5
33055: PUSH
33056: EMPTY
33057: LIST
33058: LIST
33059: PUSH
33060: LD_INT 25
33062: PUSH
33063: LD_INT 8
33065: PUSH
33066: EMPTY
33067: LIST
33068: LIST
33069: PUSH
33070: LD_INT 25
33072: PUSH
33073: LD_INT 9
33075: PUSH
33076: EMPTY
33077: LIST
33078: LIST
33079: PUSH
33080: EMPTY
33081: LIST
33082: LIST
33083: LIST
33084: LIST
33085: LIST
33086: LIST
33087: LIST
33088: LIST
33089: PUSH
33090: EMPTY
33091: LIST
33092: LIST
33093: PUSH
33094: EMPTY
33095: LIST
33096: PPUSH
33097: CALL_OW 69
33101: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33102: LD_VAR 0 2
33106: PUSH
33107: LD_EXP 12
33111: UNION
33112: PPUSH
33113: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33117: LD_EXP 11
33121: PPUSH
33122: LD_STRING 12a_JMM
33124: PPUSH
33125: CALL_OW 38
// if IsLive ( Roth ) then
33129: LD_EXP 12
33133: PPUSH
33134: CALL_OW 300
33138: IFFALSE 33152
// SaveCharacters ( Roth , 12a_Roth ) ;
33140: LD_EXP 12
33144: PPUSH
33145: LD_STRING 12a_Roth
33147: PPUSH
33148: CALL_OW 38
// if Lisa in tmp then
33152: LD_EXP 19
33156: PUSH
33157: LD_VAR 0 2
33161: IN
33162: IFFALSE 33178
// SaveCharacters ( Lisa , 12a_Lisa ) else
33164: LD_EXP 19
33168: PPUSH
33169: LD_STRING 12a_Lisa
33171: PPUSH
33172: CALL_OW 38
33176: GO 33196
// if Lisa then
33178: LD_EXP 19
33182: IFFALSE 33196
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33184: LD_EXP 19
33188: PPUSH
33189: LD_STRING 12p_Lisa
33191: PPUSH
33192: CALL_OW 38
// if Donaldson in tmp then
33196: LD_EXP 20
33200: PUSH
33201: LD_VAR 0 2
33205: IN
33206: IFFALSE 33222
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33208: LD_EXP 20
33212: PPUSH
33213: LD_STRING 12a_Donaldson
33215: PPUSH
33216: CALL_OW 38
33220: GO 33240
// if Donaldson then
33222: LD_EXP 20
33226: IFFALSE 33240
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33228: LD_EXP 20
33232: PPUSH
33233: LD_STRING 12p_Donaldson
33235: PPUSH
33236: CALL_OW 38
// if Bobby in tmp then
33240: LD_EXP 21
33244: PUSH
33245: LD_VAR 0 2
33249: IN
33250: IFFALSE 33266
// SaveCharacters ( Bobby , 12a_Bobby ) else
33252: LD_EXP 21
33256: PPUSH
33257: LD_STRING 12a_Bobby
33259: PPUSH
33260: CALL_OW 38
33264: GO 33284
// if Bobby then
33266: LD_EXP 21
33270: IFFALSE 33284
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33272: LD_EXP 21
33276: PPUSH
33277: LD_STRING 12p_Bobby
33279: PPUSH
33280: CALL_OW 38
// if Cyrus in tmp then
33284: LD_EXP 22
33288: PUSH
33289: LD_VAR 0 2
33293: IN
33294: IFFALSE 33310
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33296: LD_EXP 22
33300: PPUSH
33301: LD_STRING 12a_Cyrus
33303: PPUSH
33304: CALL_OW 38
33308: GO 33328
// if Cyrus then
33310: LD_EXP 22
33314: IFFALSE 33328
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33316: LD_EXP 22
33320: PPUSH
33321: LD_STRING 12p_Cyrus
33323: PPUSH
33324: CALL_OW 38
// if Denis in tmp then
33328: LD_EXP 23
33332: PUSH
33333: LD_VAR 0 2
33337: IN
33338: IFFALSE 33352
// SaveCharacters ( Denis , 12a_Denis ) ;
33340: LD_EXP 23
33344: PPUSH
33345: LD_STRING 12a_Denis
33347: PPUSH
33348: CALL_OW 38
// if Brown in tmp then
33352: LD_EXP 24
33356: PUSH
33357: LD_VAR 0 2
33361: IN
33362: IFFALSE 33378
// SaveCharacters ( Brown , 12a_Brown ) else
33364: LD_EXP 24
33368: PPUSH
33369: LD_STRING 12a_Brown
33371: PPUSH
33372: CALL_OW 38
33376: GO 33402
// if Brown in tmp then
33378: LD_EXP 24
33382: PUSH
33383: LD_VAR 0 2
33387: IN
33388: IFFALSE 33402
// SaveCharacters ( Brown , 12p_Brown ) ;
33390: LD_EXP 24
33394: PPUSH
33395: LD_STRING 12p_Brown
33397: PPUSH
33398: CALL_OW 38
// if Gladstone in tmp then
33402: LD_EXP 25
33406: PUSH
33407: LD_VAR 0 2
33411: IN
33412: IFFALSE 33428
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33414: LD_EXP 25
33418: PPUSH
33419: LD_STRING 12a_Gladstone
33421: PPUSH
33422: CALL_OW 38
33426: GO 33446
// if Gladstone then
33428: LD_EXP 25
33432: IFFALSE 33446
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33434: LD_EXP 25
33438: PPUSH
33439: LD_STRING 12p_Gladstone
33441: PPUSH
33442: CALL_OW 38
// if Houten in tmp then
33446: LD_EXP 26
33450: PUSH
33451: LD_VAR 0 2
33455: IN
33456: IFFALSE 33472
// SaveCharacters ( Houten , 12a_Houten ) else
33458: LD_EXP 26
33462: PPUSH
33463: LD_STRING 12a_Houten
33465: PPUSH
33466: CALL_OW 38
33470: GO 33490
// if Houten then
33472: LD_EXP 26
33476: IFFALSE 33490
// SaveCharacters ( Houten , 12p_Houten ) ;
33478: LD_EXP 26
33482: PPUSH
33483: LD_STRING 12p_Houten
33485: PPUSH
33486: CALL_OW 38
// if Cornel in tmp then
33490: LD_EXP 27
33494: PUSH
33495: LD_VAR 0 2
33499: IN
33500: IFFALSE 33516
// SaveCharacters ( Cornel , 12a_Cornel ) else
33502: LD_EXP 27
33506: PPUSH
33507: LD_STRING 12a_Cornel
33509: PPUSH
33510: CALL_OW 38
33514: GO 33534
// if Cornel then
33516: LD_EXP 27
33520: IFFALSE 33534
// SaveCharacters ( Cornel , 12p_Cornel ) ;
33522: LD_EXP 27
33526: PPUSH
33527: LD_STRING 12p_Cornel
33529: PPUSH
33530: CALL_OW 38
// if Gary in tmp then
33534: LD_EXP 28
33538: PUSH
33539: LD_VAR 0 2
33543: IN
33544: IFFALSE 33560
// SaveCharacters ( Gary , 12a_Gary ) else
33546: LD_EXP 28
33550: PPUSH
33551: LD_STRING 12a_Gary
33553: PPUSH
33554: CALL_OW 38
33558: GO 33578
// if Gary then
33560: LD_EXP 28
33564: IFFALSE 33578
// SaveCharacters ( Gary , 12p_Gary ) ;
33566: LD_EXP 28
33570: PPUSH
33571: LD_STRING 12p_Gary
33573: PPUSH
33574: CALL_OW 38
// if Kikuchi in tmp then
33578: LD_EXP 30
33582: PUSH
33583: LD_VAR 0 2
33587: IN
33588: IFFALSE 33604
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33590: LD_EXP 30
33594: PPUSH
33595: LD_STRING 12a_Kikuchi
33597: PPUSH
33598: CALL_OW 38
33602: GO 33622
// if Kikuchi then
33604: LD_EXP 30
33608: IFFALSE 33622
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
33610: LD_EXP 30
33614: PPUSH
33615: LD_STRING 12p_Kikuchi
33617: PPUSH
33618: CALL_OW 38
// if Simms in tmp then
33622: LD_EXP 31
33626: PUSH
33627: LD_VAR 0 2
33631: IN
33632: IFFALSE 33646
// SaveCharacters ( Simms , 12a_Simms ) ;
33634: LD_EXP 31
33638: PPUSH
33639: LD_STRING 12a_Simms
33641: PPUSH
33642: CALL_OW 38
// if Joan in tmp then
33646: LD_EXP 32
33650: PUSH
33651: LD_VAR 0 2
33655: IN
33656: IFFALSE 33670
// SaveCharacters ( Joan , 12a_Joan ) ;
33658: LD_EXP 32
33662: PPUSH
33663: LD_STRING 12a_Joan
33665: PPUSH
33666: CALL_OW 38
// if DeltaDoctor in tmp then
33670: LD_EXP 33
33674: PUSH
33675: LD_VAR 0 2
33679: IN
33680: IFFALSE 33694
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
33682: LD_EXP 33
33686: PPUSH
33687: LD_STRING 12a_DeltaDoctor
33689: PPUSH
33690: CALL_OW 38
// tmp := tmp diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
33694: LD_ADDR_VAR 0 2
33698: PUSH
33699: LD_VAR 0 2
33703: PUSH
33704: LD_EXP 19
33708: PUSH
33709: LD_EXP 20
33713: PUSH
33714: LD_EXP 21
33718: PUSH
33719: LD_EXP 22
33723: PUSH
33724: LD_EXP 23
33728: PUSH
33729: LD_EXP 24
33733: PUSH
33734: LD_EXP 25
33738: PUSH
33739: LD_EXP 26
33743: PUSH
33744: LD_EXP 27
33748: PUSH
33749: LD_EXP 28
33753: PUSH
33754: LD_EXP 29
33758: PUSH
33759: LD_EXP 30
33763: PUSH
33764: LD_EXP 31
33768: PUSH
33769: LD_EXP 32
33773: PUSH
33774: LD_EXP 33
33778: PUSH
33779: EMPTY
33780: LIST
33781: LIST
33782: LIST
33783: LIST
33784: LIST
33785: LIST
33786: LIST
33787: LIST
33788: LIST
33789: LIST
33790: LIST
33791: LIST
33792: LIST
33793: LIST
33794: LIST
33795: DIFF
33796: ST_TO_ADDR
// if tmp then
33797: LD_VAR 0 2
33801: IFFALSE 33815
// SaveCharacters ( tmp , 12a_others ) ;
33803: LD_VAR 0 2
33807: PPUSH
33808: LD_STRING 12a_others
33810: PPUSH
33811: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
33815: LD_EXP 5
33819: PUSH
33820: LD_VAR 0 2
33824: DIFF
33825: PPUSH
33826: LD_STRING 12p_others
33828: PPUSH
33829: CALL_OW 38
// YouWin ;
33833: CALL_OW 103
// end ; end_of_file
33837: PPOPN 2
33839: END
// on SailEvent ( event ) do var tmp ;
33840: LD_INT 0
33842: PPUSH
// begin if event = 1 then
33843: LD_VAR 0 1
33847: PUSH
33848: LD_INT 1
33850: EQUAL
33851: IFFALSE 33924
// begin if not mobile_patrol then
33853: LD_EXP 14
33857: NOT
33858: IFFALSE 33862
// exit ;
33860: GO 33924
// tmp := mobile_patrol [ mobile_patrol ] ;
33862: LD_ADDR_VAR 0 2
33866: PUSH
33867: LD_EXP 14
33871: PUSH
33872: LD_EXP 14
33876: ARRAY
33877: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
33878: LD_ADDR_EXP 14
33882: PUSH
33883: LD_EXP 14
33887: PPUSH
33888: LD_EXP 14
33892: PPUSH
33893: CALL_OW 3
33897: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
33898: LD_VAR 0 2
33902: PPUSH
33903: LD_EXP 15
33907: PUSH
33908: LD_EXP 14
33912: PUSH
33913: LD_INT 1
33915: PLUS
33916: ARRAY
33917: PPUSH
33918: EMPTY
33919: PPUSH
33920: CALL 5918 0 3
// end ; end ;
33924: PPOPN 2
33926: END
// on UnitDestroyed ( un ) do begin if un = JMM then
33927: LD_VAR 0 1
33931: PUSH
33932: LD_EXP 11
33936: EQUAL
33937: IFFALSE 33946
// YouLost ( JMM ) ;
33939: LD_STRING JMM
33941: PPUSH
33942: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
33946: LD_VAR 0 1
33950: PPUSH
33951: CALL_OW 255
33955: PUSH
33956: LD_INT 7
33958: EQUAL
33959: PUSH
33960: LD_VAR 0 1
33964: PPUSH
33965: CALL_OW 264
33969: PUSH
33970: LD_INT 12
33972: EQUAL
33973: AND
33974: IFFALSE 33983
// YouLost ( Artifact ) ;
33976: LD_STRING Artifact
33978: PPUSH
33979: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
33983: LD_VAR 0 1
33987: PPUSH
33988: CALL_OW 255
33992: PUSH
33993: LD_INT 7
33995: EQUAL
33996: PUSH
33997: LD_VAR 0 1
34001: PPUSH
34002: CALL_OW 247
34006: PUSH
34007: LD_INT 1
34009: EQUAL
34010: AND
34011: IFFALSE 34027
// team_kill_counter := team_kill_counter + 1 ;
34013: LD_ADDR_EXP 9
34017: PUSH
34018: LD_EXP 9
34022: PUSH
34023: LD_INT 1
34025: PLUS
34026: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34027: LD_VAR 0 1
34031: PPUSH
34032: CALL_OW 255
34036: PUSH
34037: LD_INT 1
34039: EQUAL
34040: PUSH
34041: LD_VAR 0 1
34045: PPUSH
34046: CALL_OW 247
34050: PUSH
34051: LD_INT 1
34053: EQUAL
34054: AND
34055: IFFALSE 34071
// friends_kill_counter := friends_kill_counter + 1 ;
34057: LD_ADDR_EXP 8
34061: PUSH
34062: LD_EXP 8
34066: PUSH
34067: LD_INT 1
34069: PLUS
34070: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34071: LD_VAR 0 1
34075: PPUSH
34076: CALL_OW 255
34080: PUSH
34081: LD_INT 1
34083: NONEQUAL
34084: IFFALSE 34088
// exit ;
34086: GO 34165
// if GetControl ( un ) = control_remote then
34088: LD_VAR 0 1
34092: PPUSH
34093: CALL_OW 263
34097: PUSH
34098: LD_INT 2
34100: EQUAL
34101: IFFALSE 34119
// defenders := defenders diff un ;
34103: LD_ADDR_EXP 17
34107: PUSH
34108: LD_EXP 17
34112: PUSH
34113: LD_VAR 0 1
34117: DIFF
34118: ST_TO_ADDR
// if not un in defenders then
34119: LD_VAR 0 1
34123: PUSH
34124: LD_EXP 17
34128: IN
34129: NOT
34130: IFFALSE 34165
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34132: LD_ADDR_EXP 18
34136: PUSH
34137: LD_VAR 0 1
34141: PPUSH
34142: CALL_OW 250
34146: PUSH
34147: LD_VAR 0 1
34151: PPUSH
34152: CALL_OW 251
34156: PUSH
34157: EMPTY
34158: LIST
34159: LIST
34160: ST_TO_ADDR
// Defend ;
34161: CALL 2397 0 0
// end ; end ;
34165: PPOPN 1
34167: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34168: LD_VAR 0 1
34172: PPUSH
34173: CALL_OW 255
34177: PUSH
34178: LD_INT 1
34180: NONEQUAL
34181: IFFALSE 34185
// exit ;
34183: GO 34209
// if GetControl ( veh ) = control_remote then
34185: LD_VAR 0 1
34189: PPUSH
34190: CALL_OW 263
34194: PUSH
34195: LD_INT 2
34197: EQUAL
34198: IFFALSE 34209
// Connect ( veh ) ;
34200: LD_VAR 0 1
34204: PPUSH
34205: CALL 5113 0 1
// end ;
34209: PPOPN 2
34211: END
// on UnitGoesToRed ( un ) do var i , veh ;
34212: LD_INT 0
34214: PPUSH
34215: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34216: LD_VAR 0 1
34220: PPUSH
34221: CALL_OW 255
34225: PUSH
34226: LD_INT 1
34228: EQUAL
34229: PUSH
34230: LD_VAR 0 1
34234: PPUSH
34235: CALL_OW 263
34239: PUSH
34240: LD_INT 2
34242: EQUAL
34243: AND
34244: IFFALSE 34255
// ComUnlink ( un ) ;
34246: LD_VAR 0 1
34250: PPUSH
34251: CALL_OW 136
// if un = ambar0 then
34255: LD_VAR 0 1
34259: PUSH
34260: LD_INT 18
34262: EQUAL
34263: IFFALSE 34373
// begin uc_side := 1 ;
34265: LD_ADDR_OWVAR 20
34269: PUSH
34270: LD_INT 1
34272: ST_TO_ADDR
// uc_nation := 1 ;
34273: LD_ADDR_OWVAR 21
34277: PUSH
34278: LD_INT 1
34280: ST_TO_ADDR
// for i = 1 to 6 do
34281: LD_ADDR_VAR 0 2
34285: PUSH
34286: DOUBLE
34287: LD_INT 1
34289: DEC
34290: ST_TO_ADDR
34291: LD_INT 6
34293: PUSH
34294: FOR_TO
34295: IFFALSE 34371
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34297: LD_INT 3
34299: PPUSH
34300: LD_INT 1
34302: PPUSH
34303: LD_INT 3
34305: PPUSH
34306: LD_INT 4
34308: PPUSH
34309: LD_INT 100
34311: PPUSH
34312: CALL 4877 0 5
// veh := CreateVehicle ;
34316: LD_ADDR_VAR 0 3
34320: PUSH
34321: CALL_OW 45
34325: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34326: LD_VAR 0 3
34330: PPUSH
34331: LD_INT 1
34333: PPUSH
34334: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34338: LD_VAR 0 3
34342: PPUSH
34343: LD_INT 25
34345: PPUSH
34346: LD_INT 0
34348: PPUSH
34349: CALL_OW 49
// defenders := defenders ^ veh ;
34353: LD_ADDR_EXP 17
34357: PUSH
34358: LD_EXP 17
34362: PUSH
34363: LD_VAR 0 3
34367: ADD
34368: ST_TO_ADDR
// end ;
34369: GO 34294
34371: POP
34372: POP
// end ; end ;
34373: PPOPN 3
34375: END
