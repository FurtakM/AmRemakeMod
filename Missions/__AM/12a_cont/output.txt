// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 86 0 0
// PrepareNature ;
   8: CALL 29298 0 0
// PrepareAlliance ;
  12: CALL 172 0 0
// PrepareFriends ;
  16: CALL 2497 0 0
// PrepareAmerican ;
  20: CALL 511 0 0
// if debug then
  24: LD_EXP 1
  28: IFFALSE 69
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  30: LD_INT 1
  32: PPUSH
  33: LD_INT 7
  35: PPUSH
  36: LD_INT 2
  38: PPUSH
  39: LD_INT 1
  41: PPUSH
  42: CALL_OW 80
// RemoveUnit ( Powell ) ;
  46: LD_EXP 13
  50: PPUSH
  51: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  55: LD_INT 1
  57: PPUSH
  58: LD_EXP 11
  62: PPUSH
  63: CALL_OW 471
// end else
  67: GO 73
// Action ;
  69: CALL 29723 0 0
// PreparePatrol ;
  73: CALL 851 0 0
// game := true ;
  77: LD_ADDR_EXP 2
  81: PUSH
  82: LD_INT 1
  84: ST_TO_ADDR
// end ;
  85: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
  86: LD_INT 0
  88: PPUSH
// debug := 0 ;
  89: LD_ADDR_EXP 1
  93: PUSH
  94: LD_INT 0
  96: ST_TO_ADDR
// friends := [ ] ;
  97: LD_ADDR_EXP 4
 101: PUSH
 102: EMPTY
 103: ST_TO_ADDR
// selected := [ ] ;
 104: LD_ADDR_EXP 3
 108: PUSH
 109: EMPTY
 110: ST_TO_ADDR
// reached_lab := false ;
 111: LD_ADDR_EXP 6
 115: PUSH
 116: LD_INT 0
 118: ST_TO_ADDR
// can_escape := false ;
 119: LD_ADDR_EXP 7
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// game := false ;
 127: LD_ADDR_EXP 2
 131: PUSH
 132: LD_INT 0
 134: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 0 ) ;
 135: LD_ADDR_EXP 10
 139: PUSH
 140: LD_STRING GammaCommander
 142: PPUSH
 143: LD_INT 0
 145: PPUSH
 146: CALL_OW 30
 150: ST_TO_ADDR
// friends_kill_counter := 0 ;
 151: LD_ADDR_EXP 8
 155: PUSH
 156: LD_INT 0
 158: ST_TO_ADDR
// team_kill_counter := 0 ;
 159: LD_ADDR_EXP 9
 163: PUSH
 164: LD_INT 0
 166: ST_TO_ADDR
// end ; end_of_file
 167: LD_VAR 0 1
 171: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 172: LD_INT 0
 174: PPUSH
 175: PPUSH
// uc_side := 7 ;
 176: LD_ADDR_OWVAR 20
 180: PUSH
 181: LD_INT 7
 183: ST_TO_ADDR
// uc_nation := 1 ;
 184: LD_ADDR_OWVAR 21
 188: PUSH
 189: LD_INT 1
 191: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 192: LD_ADDR_EXP 11
 196: PUSH
 197: LD_STRING JMM
 199: PPUSH
 200: LD_EXP 1
 204: NOT
 205: PPUSH
 206: LD_STRING 11_
 208: PPUSH
 209: CALL 4784 0 3
 213: ST_TO_ADDR
// uc_side := 4 ;
 214: LD_ADDR_OWVAR 20
 218: PUSH
 219: LD_INT 4
 221: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 222: LD_ADDR_EXP 12
 226: PUSH
 227: LD_STRING Roth
 229: PPUSH
 230: CALL_OW 25
 234: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 235: LD_EXP 11
 239: PPUSH
 240: LD_INT 1
 242: PPUSH
 243: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 247: LD_EXP 11
 251: PPUSH
 252: LD_INT 1
 254: PPUSH
 255: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 259: LD_EXP 11
 263: PPUSH
 264: LD_INT 105
 266: PPUSH
 267: LD_INT 10
 269: PPUSH
 270: LD_INT 0
 272: PPUSH
 273: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 277: LD_EXP 12
 281: PPUSH
 282: LD_INT 4
 284: PPUSH
 285: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 289: LD_EXP 12
 293: PPUSH
 294: LD_INT 109
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 307: LD_EXP 11
 311: PPUSH
 312: LD_EXP 12
 316: PPUSH
 317: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 321: LD_EXP 12
 325: PPUSH
 326: LD_EXP 11
 330: PPUSH
 331: CALL_OW 119
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 335: LD_INT 2
 337: PPUSH
 338: LD_INT 3
 340: PPUSH
 341: LD_INT 3
 343: PPUSH
 344: LD_INT 12
 346: PPUSH
 347: LD_INT 100
 349: PPUSH
 350: CALL 4847 0 5
// cargo := CreateVehicle ;
 354: LD_ADDR_VAR 0 2
 358: PUSH
 359: CALL_OW 45
 363: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 364: LD_VAR 0 2
 368: PPUSH
 369: LD_INT 1
 371: PPUSH
 372: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 376: LD_VAR 0 2
 380: PPUSH
 381: LD_INT 179
 383: PPUSH
 384: LD_INT 45
 386: PPUSH
 387: LD_INT 0
 389: PPUSH
 390: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 4
 401: PPUSH
 402: LD_INT 30
 404: PPUSH
 405: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , true ) then
 409: LD_STRING 11_artifact_captured
 411: PPUSH
 412: LD_INT 1
 414: PPUSH
 415: CALL_OW 30
 419: IFFALSE 476
// begin cargo := CreateVehicle ;
 421: LD_ADDR_VAR 0 2
 425: PUSH
 426: CALL_OW 45
 430: ST_TO_ADDR
// SetDir ( cargo , 2 ) ;
 431: LD_VAR 0 2
 435: PPUSH
 436: LD_INT 2
 438: PPUSH
 439: CALL_OW 233
// PlaceUnitXY ( cargo , 141 , 76 , false ) ;
 443: LD_VAR 0 2
 447: PPUSH
 448: LD_INT 141
 450: PPUSH
 451: LD_INT 76
 453: PPUSH
 454: LD_INT 0
 456: PPUSH
 457: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 4
 468: PPUSH
 469: LD_INT 50
 471: PPUSH
 472: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 476: LD_INT 47
 478: PPUSH
 479: LD_INT 7
 481: PPUSH
 482: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 486: LD_INT 1
 488: PPUSH
 489: LD_INT 47
 491: PPUSH
 492: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 496: LD_INT 7
 498: PPUSH
 499: LD_INT 4
 501: PPUSH
 502: CALL_OW 343
// end ; end_of_file
 506: LD_VAR 0 1
 510: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon ; export function PrepareAmerican ; var i , j , b , un ; begin
 511: LD_INT 0
 513: PPUSH
 514: PPUSH
 515: PPUSH
 516: PPUSH
 517: PPUSH
// defcon := 0 ;
 518: LD_ADDR_EXP 18
 522: PUSH
 523: LD_INT 0
 525: ST_TO_ADDR
// defenders := [ ] ;
 526: LD_ADDR_EXP 17
 530: PUSH
 531: EMPTY
 532: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 533: LD_INT 5
 535: PPUSH
 536: LD_STRING alpha
 538: PPUSH
 539: CALL_OW 500
// uc_side := 1 ;
 543: LD_ADDR_OWVAR 20
 547: PUSH
 548: LD_INT 1
 550: ST_TO_ADDR
// uc_nation := 1 ;
 551: LD_ADDR_OWVAR 21
 555: PUSH
 556: LD_INT 1
 558: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 559: LD_ADDR_EXP 13
 563: PUSH
 564: LD_STRING Powell
 566: PPUSH
 567: CALL_OW 25
 571: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 572: LD_EXP 13
 576: PPUSH
 577: LD_INT 110
 579: PPUSH
 580: LD_INT 26
 582: PPUSH
 583: LD_INT 0
 585: PPUSH
 586: CALL_OW 48
// ComHold ( Powell ) ;
 590: LD_EXP 13
 594: PPUSH
 595: CALL_OW 140
// for i = 1 to 5 do
 599: LD_ADDR_VAR 0 2
 603: PUSH
 604: DOUBLE
 605: LD_INT 1
 607: DEC
 608: ST_TO_ADDR
 609: LD_INT 5
 611: PUSH
 612: FOR_TO
 613: IFFALSE 669
// begin PrepareHuman ( false , 1 , 10 ) ;
 615: LD_INT 0
 617: PPUSH
 618: LD_INT 1
 620: PPUSH
 621: LD_INT 10
 623: PPUSH
 624: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 628: LD_ADDR_EXP 16
 632: PUSH
 633: LD_EXP 16
 637: PPUSH
 638: LD_INT 1
 640: PPUSH
 641: CALL_OW 44
 645: PPUSH
 646: CALL_OW 2
 650: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 651: LD_EXP 16
 655: PUSH
 656: LD_INT 1
 658: ARRAY
 659: PPUSH
 660: LD_INT 18
 662: PPUSH
 663: CALL_OW 52
// end ;
 667: GO 612
 669: POP
 670: POP
// if Difficulty > 2 then
 671: LD_OWVAR 67
 675: PUSH
 676: LD_INT 2
 678: GREATER
 679: IFFALSE 728
// begin bc_type := b_turret ;
 681: LD_ADDR_OWVAR 42
 685: PUSH
 686: LD_INT 33
 688: ST_TO_ADDR
// bc_level := 7 ;
 689: LD_ADDR_OWVAR 43
 693: PUSH
 694: LD_INT 7
 696: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 697: LD_ADDR_VAR 0 4
 701: PUSH
 702: LD_INT 107
 704: PPUSH
 705: LD_INT 55
 707: PPUSH
 708: LD_INT 5
 710: PPUSH
 711: CALL_OW 47
 715: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 716: LD_VAR 0 4
 720: PPUSH
 721: LD_INT 7
 723: PPUSH
 724: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 728: LD_ADDR_VAR 0 2
 732: PUSH
 733: LD_INT 22
 735: PUSH
 736: LD_INT 1
 738: PUSH
 739: EMPTY
 740: LIST
 741: LIST
 742: PUSH
 743: LD_INT 30
 745: PUSH
 746: LD_INT 3
 748: PUSH
 749: EMPTY
 750: LIST
 751: LIST
 752: PUSH
 753: EMPTY
 754: LIST
 755: LIST
 756: PPUSH
 757: CALL_OW 69
 761: PUSH
 762: LD_INT 22
 764: PUSH
 765: LD_INT 1
 767: PUSH
 768: EMPTY
 769: LIST
 770: LIST
 771: PUSH
 772: LD_INT 30
 774: PUSH
 775: LD_INT 36
 777: PUSH
 778: EMPTY
 779: LIST
 780: LIST
 781: PUSH
 782: EMPTY
 783: LIST
 784: LIST
 785: PPUSH
 786: CALL_OW 69
 790: ADD
 791: PUSH
 792: FOR_IN
 793: IFFALSE 844
// for j = 1 to 3 do
 795: LD_ADDR_VAR 0 3
 799: PUSH
 800: DOUBLE
 801: LD_INT 1
 803: DEC
 804: ST_TO_ADDR
 805: LD_INT 3
 807: PUSH
 808: FOR_TO
 809: IFFALSE 840
// begin PrepareHuman ( false , 3 , 6 ) ;
 811: LD_INT 0
 813: PPUSH
 814: LD_INT 3
 816: PPUSH
 817: LD_INT 6
 819: PPUSH
 820: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 824: CALL_OW 44
 828: PPUSH
 829: LD_VAR 0 2
 833: PPUSH
 834: CALL_OW 52
// end ;
 838: GO 808
 840: POP
 841: POP
 842: GO 792
 844: POP
 845: POP
// end ;
 846: LD_VAR 0 1
 850: RET
// export function PreparePatrol ; var i , un ; begin
 851: LD_INT 0
 853: PPUSH
 854: PPUSH
 855: PPUSH
// uc_side := 1 ;
 856: LD_ADDR_OWVAR 20
 860: PUSH
 861: LD_INT 1
 863: ST_TO_ADDR
// uc_nation := 1 ;
 864: LD_ADDR_OWVAR 21
 868: PUSH
 869: LD_INT 1
 871: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 872: LD_ADDR_EXP 15
 876: PUSH
 877: LD_INT 99
 879: PUSH
 880: LD_INT 55
 882: PUSH
 883: EMPTY
 884: LIST
 885: LIST
 886: PUSH
 887: LD_INT 113
 889: PUSH
 890: LD_INT 67
 892: PUSH
 893: EMPTY
 894: LIST
 895: LIST
 896: PUSH
 897: LD_INT 129
 899: PUSH
 900: LD_INT 68
 902: PUSH
 903: EMPTY
 904: LIST
 905: LIST
 906: PUSH
 907: LD_INT 135
 909: PUSH
 910: LD_INT 62
 912: PUSH
 913: EMPTY
 914: LIST
 915: LIST
 916: PUSH
 917: LD_INT 103
 919: PUSH
 920: LD_INT 41
 922: PUSH
 923: EMPTY
 924: LIST
 925: LIST
 926: PUSH
 927: EMPTY
 928: LIST
 929: LIST
 930: LIST
 931: LIST
 932: LIST
 933: PUSH
 934: LD_INT 27
 936: PUSH
 937: LD_INT 49
 939: PUSH
 940: EMPTY
 941: LIST
 942: LIST
 943: PUSH
 944: LD_INT 46
 946: PUSH
 947: LD_INT 49
 949: PUSH
 950: EMPTY
 951: LIST
 952: LIST
 953: PUSH
 954: LD_INT 87
 956: PUSH
 957: LD_INT 70
 959: PUSH
 960: EMPTY
 961: LIST
 962: LIST
 963: PUSH
 964: LD_INT 99
 966: PUSH
 967: LD_INT 79
 969: PUSH
 970: EMPTY
 971: LIST
 972: LIST
 973: PUSH
 974: LD_INT 118
 976: PUSH
 977: LD_INT 111
 979: PUSH
 980: EMPTY
 981: LIST
 982: LIST
 983: PUSH
 984: LD_INT 99
 986: PUSH
 987: LD_INT 79
 989: PUSH
 990: EMPTY
 991: LIST
 992: LIST
 993: PUSH
 994: LD_INT 87
 996: PUSH
 997: LD_INT 70
 999: PUSH
1000: EMPTY
1001: LIST
1002: LIST
1003: PUSH
1004: LD_INT 46
1006: PUSH
1007: LD_INT 49
1009: PUSH
1010: EMPTY
1011: LIST
1012: LIST
1013: PUSH
1014: EMPTY
1015: LIST
1016: LIST
1017: LIST
1018: LIST
1019: LIST
1020: LIST
1021: LIST
1022: LIST
1023: PUSH
1024: LD_INT 200
1026: PUSH
1027: LD_INT 88
1029: PUSH
1030: EMPTY
1031: LIST
1032: LIST
1033: PUSH
1034: LD_INT 175
1036: PUSH
1037: LD_INT 80
1039: PUSH
1040: EMPTY
1041: LIST
1042: LIST
1043: PUSH
1044: LD_INT 135
1046: PUSH
1047: LD_INT 62
1049: PUSH
1050: EMPTY
1051: LIST
1052: LIST
1053: PUSH
1054: LD_INT 117
1056: PUSH
1057: LD_INT 53
1059: PUSH
1060: EMPTY
1061: LIST
1062: LIST
1063: PUSH
1064: LD_INT 103
1066: PUSH
1067: LD_INT 41
1069: PUSH
1070: EMPTY
1071: LIST
1072: LIST
1073: PUSH
1074: LD_INT 99
1076: PUSH
1077: LD_INT 24
1079: PUSH
1080: EMPTY
1081: LIST
1082: LIST
1083: PUSH
1084: LD_INT 85
1086: PUSH
1087: LD_INT 3
1089: PUSH
1090: EMPTY
1091: LIST
1092: LIST
1093: PUSH
1094: LD_INT 99
1096: PUSH
1097: LD_INT 24
1099: PUSH
1100: EMPTY
1101: LIST
1102: LIST
1103: PUSH
1104: LD_INT 103
1106: PUSH
1107: LD_INT 41
1109: PUSH
1110: EMPTY
1111: LIST
1112: LIST
1113: PUSH
1114: LD_INT 98
1116: PUSH
1117: LD_INT 47
1119: PUSH
1120: EMPTY
1121: LIST
1122: LIST
1123: PUSH
1124: LD_INT 99
1126: PUSH
1127: LD_INT 56
1129: PUSH
1130: EMPTY
1131: LIST
1132: LIST
1133: PUSH
1134: LD_INT 96
1136: PUSH
1137: LD_INT 66
1139: PUSH
1140: EMPTY
1141: LIST
1142: LIST
1143: PUSH
1144: LD_INT 99
1146: PUSH
1147: LD_INT 56
1149: PUSH
1150: EMPTY
1151: LIST
1152: LIST
1153: PUSH
1154: LD_INT 112
1156: PUSH
1157: LD_INT 66
1159: PUSH
1160: EMPTY
1161: LIST
1162: LIST
1163: PUSH
1164: LD_INT 129
1166: PUSH
1167: LD_INT 68
1169: PUSH
1170: EMPTY
1171: LIST
1172: LIST
1173: PUSH
1174: LD_INT 135
1176: PUSH
1177: LD_INT 62
1179: PUSH
1180: EMPTY
1181: LIST
1182: LIST
1183: PUSH
1184: LD_INT 156
1186: PUSH
1187: LD_INT 71
1189: PUSH
1190: EMPTY
1191: LIST
1192: LIST
1193: PUSH
1194: LD_INT 168
1196: PUSH
1197: LD_INT 76
1199: PUSH
1200: EMPTY
1201: LIST
1202: LIST
1203: PUSH
1204: LD_INT 168
1206: PUSH
1207: LD_INT 61
1209: PUSH
1210: EMPTY
1211: LIST
1212: LIST
1213: PUSH
1214: LD_INT 168
1216: PUSH
1217: LD_INT 75
1219: PUSH
1220: EMPTY
1221: LIST
1222: LIST
1223: PUSH
1224: LD_INT 185
1226: PUSH
1227: LD_INT 85
1229: PUSH
1230: EMPTY
1231: LIST
1232: LIST
1233: PUSH
1234: EMPTY
1235: LIST
1236: LIST
1237: LIST
1238: LIST
1239: LIST
1240: LIST
1241: LIST
1242: LIST
1243: LIST
1244: LIST
1245: LIST
1246: LIST
1247: LIST
1248: LIST
1249: LIST
1250: LIST
1251: LIST
1252: LIST
1253: LIST
1254: LIST
1255: LIST
1256: PUSH
1257: EMPTY
1258: LIST
1259: LIST
1260: LIST
1261: ST_TO_ADDR
// mobile_patrol := [ ] ;
1262: LD_ADDR_EXP 14
1266: PUSH
1267: EMPTY
1268: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1269: LD_INT 3
1271: PPUSH
1272: LD_INT 1
1274: PPUSH
1275: LD_INT 3
1277: PPUSH
1278: LD_INT 4
1280: PPUSH
1281: LD_INT 100
1283: PPUSH
1284: CALL 4847 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1288: LD_ADDR_EXP 14
1292: PUSH
1293: LD_EXP 14
1297: PPUSH
1298: LD_INT 1
1300: PPUSH
1301: CALL_OW 45
1305: PPUSH
1306: CALL_OW 2
1310: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1311: LD_EXP 14
1315: PUSH
1316: LD_INT 1
1318: ARRAY
1319: PPUSH
1320: LD_INT 99
1322: PPUSH
1323: LD_INT 55
1325: PPUSH
1326: LD_INT 0
1328: PPUSH
1329: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1333: LD_INT 2
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: LD_INT 3
1341: PPUSH
1342: LD_INT 4
1344: PPUSH
1345: LD_INT 100
1347: PPUSH
1348: CALL 4847 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1352: LD_ADDR_EXP 14
1356: PUSH
1357: LD_EXP 14
1361: PPUSH
1362: LD_INT 2
1364: PPUSH
1365: CALL_OW 45
1369: PPUSH
1370: CALL_OW 2
1374: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1375: LD_EXP 14
1379: PUSH
1380: LD_INT 2
1382: ARRAY
1383: PPUSH
1384: LD_INT 27
1386: PPUSH
1387: LD_INT 49
1389: PPUSH
1390: LD_INT 0
1392: PPUSH
1393: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1397: LD_INT 3
1399: PPUSH
1400: LD_INT 1
1402: PPUSH
1403: LD_INT 3
1405: PPUSH
1406: LD_INT 7
1408: PPUSH
1409: LD_INT 100
1411: PPUSH
1412: CALL 4847 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1416: LD_ADDR_EXP 14
1420: PUSH
1421: LD_EXP 14
1425: PPUSH
1426: LD_INT 3
1428: PPUSH
1429: CALL_OW 45
1433: PPUSH
1434: CALL_OW 2
1438: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1439: LD_EXP 14
1443: PUSH
1444: LD_INT 3
1446: ARRAY
1447: PPUSH
1448: LD_INT 200
1450: PPUSH
1451: LD_INT 88
1453: PPUSH
1454: LD_INT 0
1456: PPUSH
1457: CALL_OW 48
// for i = mobile_patrol downto 1 do
1461: LD_ADDR_VAR 0 2
1465: PUSH
1466: DOUBLE
1467: LD_EXP 14
1471: INC
1472: ST_TO_ADDR
1473: LD_INT 1
1475: PUSH
1476: FOR_DOWNTO
1477: IFFALSE 1488
// RaiseSailEvent ( 1 ) ;
1479: LD_INT 1
1481: PPUSH
1482: CALL_OW 427
1486: GO 1476
1488: POP
1489: POP
// end ;
1490: LD_VAR 0 1
1494: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1495: LD_INT 0
1497: PPUSH
1498: PPUSH
1499: PPUSH
1500: PPUSH
1501: PPUSH
1502: PPUSH
1503: PPUSH
1504: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1505: LD_ADDR_VAR 0 5
1509: PUSH
1510: LD_INT 20
1512: PUSH
1513: LD_INT 4
1515: PUSH
1516: EMPTY
1517: LIST
1518: LIST
1519: PUSH
1520: LD_INT 21
1522: PUSH
1523: LD_INT 5
1525: PUSH
1526: EMPTY
1527: LIST
1528: LIST
1529: PUSH
1530: LD_INT 22
1532: PUSH
1533: LD_INT 1
1535: PUSH
1536: EMPTY
1537: LIST
1538: LIST
1539: PUSH
1540: EMPTY
1541: LIST
1542: LIST
1543: LIST
1544: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1545: LD_ADDR_VAR 0 6
1549: PUSH
1550: LD_INT 176
1552: PUSH
1553: LD_INT 81
1555: PUSH
1556: LD_INT 135
1558: PUSH
1559: LD_INT 62
1561: PUSH
1562: LD_INT 114
1564: PUSH
1565: LD_INT 67
1567: PUSH
1568: LD_INT 93
1570: PUSH
1571: LD_INT 71
1573: PUSH
1574: LD_INT 76
1576: PUSH
1577: LD_INT 67
1579: PUSH
1580: EMPTY
1581: LIST
1582: LIST
1583: LIST
1584: LIST
1585: LIST
1586: LIST
1587: LIST
1588: LIST
1589: LIST
1590: LIST
1591: PUSH
1592: LD_INT 107
1594: PUSH
1595: LD_INT 92
1597: PUSH
1598: LD_INT 92
1600: PUSH
1601: LD_INT 72
1603: PUSH
1604: LD_INT 77
1606: PUSH
1607: LD_INT 68
1609: PUSH
1610: EMPTY
1611: LIST
1612: LIST
1613: LIST
1614: LIST
1615: LIST
1616: LIST
1617: PUSH
1618: LD_INT 45
1620: PUSH
1621: LD_INT 49
1623: PUSH
1624: LD_INT 67
1626: PUSH
1627: LD_INT 59
1629: PUSH
1630: LD_INT 77
1632: PUSH
1633: LD_INT 68
1635: PUSH
1636: EMPTY
1637: LIST
1638: LIST
1639: LIST
1640: LIST
1641: LIST
1642: LIST
1643: PUSH
1644: EMPTY
1645: LIST
1646: LIST
1647: LIST
1648: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1649: LD_ADDR_VAR 0 4
1653: PUSH
1654: LD_INT 1
1656: PPUSH
1657: LD_VAR 0 5
1661: PPUSH
1662: CALL_OW 12
1666: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1667: LD_ADDR_VAR 0 3
1671: PUSH
1672: LD_INT 1
1674: PPUSH
1675: LD_INT 2
1677: PPUSH
1678: CALL_OW 12
1682: ST_TO_ADDR
// uc_side := 1 ;
1683: LD_ADDR_OWVAR 20
1687: PUSH
1688: LD_INT 1
1690: ST_TO_ADDR
// uc_nation := 1 ;
1691: LD_ADDR_OWVAR 21
1695: PUSH
1696: LD_INT 1
1698: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1699: LD_INT 2
1701: PPUSH
1702: LD_INT 3
1704: PPUSH
1705: LD_INT 3
1707: PPUSH
1708: LD_INT 12
1710: PPUSH
1711: LD_INT 100
1713: PPUSH
1714: CALL 4847 0 5
// veh := CreateVehicle ;
1718: LD_ADDR_VAR 0 8
1722: PUSH
1723: CALL_OW 45
1727: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1728: LD_VAR 0 8
1732: PPUSH
1733: LD_VAR 0 5
1737: PUSH
1738: LD_VAR 0 4
1742: ARRAY
1743: PUSH
1744: LD_INT 2
1746: ARRAY
1747: PPUSH
1748: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1752: LD_VAR 0 8
1756: PPUSH
1757: LD_VAR 0 5
1761: PUSH
1762: LD_VAR 0 4
1766: ARRAY
1767: PUSH
1768: LD_INT 1
1770: ARRAY
1771: PPUSH
1772: LD_INT 0
1774: PPUSH
1775: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1779: LD_VAR 0 8
1783: PPUSH
1784: LD_INT 1
1786: PUSH
1787: LD_INT 3
1789: PUSH
1790: EMPTY
1791: LIST
1792: LIST
1793: PUSH
1794: LD_VAR 0 3
1798: ARRAY
1799: PPUSH
1800: LD_INT 100
1802: PPUSH
1803: CALL_OW 290
// tmp := road [ k ] ;
1807: LD_ADDR_VAR 0 7
1811: PUSH
1812: LD_VAR 0 6
1816: PUSH
1817: LD_VAR 0 4
1821: ARRAY
1822: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1823: LD_ADDR_VAR 0 2
1827: PUSH
1828: DOUBLE
1829: LD_INT 1
1831: DEC
1832: ST_TO_ADDR
1833: LD_VAR 0 7
1837: PUSH
1838: LD_INT 2
1840: DIV
1841: PUSH
1842: FOR_TO
1843: IFFALSE 1890
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1845: LD_VAR 0 8
1849: PPUSH
1850: LD_VAR 0 7
1854: PUSH
1855: LD_VAR 0 2
1859: PUSH
1860: LD_INT 2
1862: MUL
1863: PUSH
1864: LD_INT 1
1866: MINUS
1867: ARRAY
1868: PPUSH
1869: LD_VAR 0 7
1873: PUSH
1874: LD_VAR 0 2
1878: PUSH
1879: LD_INT 2
1881: MUL
1882: ARRAY
1883: PPUSH
1884: CALL_OW 171
1888: GO 1842
1890: POP
1891: POP
// AddComGive ( veh , alfa ) ;
1892: LD_VAR 0 8
1896: PPUSH
1897: LD_INT 5
1899: PPUSH
1900: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1904: LD_VAR 0 8
1908: PPUSH
1909: LD_INT 70
1911: PPUSH
1912: CALL_OW 202
// for i = tmp div 2 downto 1 do
1916: LD_ADDR_VAR 0 2
1920: PUSH
1921: DOUBLE
1922: LD_VAR 0 7
1926: PUSH
1927: LD_INT 2
1929: DIV
1930: INC
1931: ST_TO_ADDR
1932: LD_INT 1
1934: PUSH
1935: FOR_DOWNTO
1936: IFFALSE 1983
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1938: LD_VAR 0 8
1942: PPUSH
1943: LD_VAR 0 7
1947: PUSH
1948: LD_VAR 0 2
1952: PUSH
1953: LD_INT 2
1955: MUL
1956: PUSH
1957: LD_INT 1
1959: MINUS
1960: ARRAY
1961: PPUSH
1962: LD_VAR 0 7
1966: PUSH
1967: LD_VAR 0 2
1971: PUSH
1972: LD_INT 2
1974: MUL
1975: ARRAY
1976: PPUSH
1977: CALL_OW 171
1981: GO 1935
1983: POP
1984: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
1985: LD_VAR 0 8
1989: PPUSH
1990: LD_VAR 0 5
1994: PUSH
1995: LD_VAR 0 4
1999: ARRAY
2000: PUSH
2001: LD_INT 1
2003: ARRAY
2004: PPUSH
2005: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2009: LD_INT 35
2011: PPUSH
2012: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2016: LD_VAR 0 8
2020: PPUSH
2021: LD_VAR 0 5
2025: PUSH
2026: LD_VAR 0 4
2030: ARRAY
2031: PUSH
2032: LD_INT 1
2034: ARRAY
2035: PPUSH
2036: CALL_OW 308
2040: PUSH
2041: LD_VAR 0 8
2045: PPUSH
2046: LD_VAR 0 3
2050: PPUSH
2051: CALL_OW 289
2055: PUSH
2056: LD_INT 0
2058: EQUAL
2059: AND
2060: IFFALSE 2009
// RemoveUnit ( veh ) ;
2062: LD_VAR 0 8
2066: PPUSH
2067: CALL_OW 64
// end ;
2071: LD_VAR 0 1
2075: RET
// every 3 3$00 do
2076: GO 2078
2078: DISABLE
// begin enable ;
2079: ENABLE
// SpawnCargo ;
2080: CALL 1495 0 0
// end ;
2084: END
// export function PrepareDefenders ; var i , tmp ; begin
2085: LD_INT 0
2087: PPUSH
2088: PPUSH
2089: PPUSH
// if defenders then
2090: LD_EXP 17
2094: IFFALSE 2098
// exit ;
2096: GO 2362
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2098: LD_ADDR_VAR 0 2
2102: PUSH
2103: DOUBLE
2104: LD_INT 1
2106: DEC
2107: ST_TO_ADDR
2108: LD_INT 4
2110: PUSH
2111: LD_INT 5
2113: PUSH
2114: LD_INT 6
2116: PUSH
2117: EMPTY
2118: LIST
2119: LIST
2120: LIST
2121: PUSH
2122: LD_OWVAR 67
2126: ARRAY
2127: PUSH
2128: FOR_TO
2129: IFFALSE 2268
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2131: LD_ADDR_VAR 0 3
2135: PUSH
2136: LD_INT 6
2138: PPUSH
2139: LD_INT 2
2141: PUSH
2142: LD_INT 3
2144: PUSH
2145: EMPTY
2146: LIST
2147: LIST
2148: PUSH
2149: LD_INT 1
2151: PPUSH
2152: LD_INT 2
2154: PPUSH
2155: CALL_OW 12
2159: ARRAY
2160: PPUSH
2161: LD_INT 1
2163: PUSH
2164: LD_INT 3
2166: PUSH
2167: EMPTY
2168: LIST
2169: LIST
2170: PUSH
2171: LD_INT 1
2173: PPUSH
2174: LD_INT 2
2176: PPUSH
2177: CALL_OW 12
2181: ARRAY
2182: PPUSH
2183: LD_INT 2
2185: PPUSH
2186: LD_INT 4
2188: PUSH
2189: LD_INT 5
2191: PUSH
2192: LD_INT 9
2194: PUSH
2195: EMPTY
2196: LIST
2197: LIST
2198: LIST
2199: PUSH
2200: LD_INT 1
2202: PPUSH
2203: LD_INT 3
2205: PPUSH
2206: CALL_OW 12
2210: ARRAY
2211: PPUSH
2212: CALL 27480 0 5
2216: ST_TO_ADDR
// if tmp then
2217: LD_VAR 0 3
2221: IFFALSE 2266
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2223: LD_INT 6
2225: PPUSH
2226: LD_VAR 0 3
2230: PUSH
2231: LD_INT 1
2233: ARRAY
2234: PPUSH
2235: LD_VAR 0 3
2239: PUSH
2240: LD_INT 2
2242: ARRAY
2243: PPUSH
2244: LD_VAR 0 3
2248: PUSH
2249: LD_INT 3
2251: ARRAY
2252: PPUSH
2253: LD_VAR 0 3
2257: PUSH
2258: LD_INT 4
2260: ARRAY
2261: PPUSH
2262: CALL_OW 185
// end ;
2266: GO 2128
2268: POP
2269: POP
// repeat wait ( 0 0$1 ) ;
2270: LD_INT 35
2272: PPUSH
2273: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2277: LD_INT 22
2279: PUSH
2280: LD_INT 1
2282: PUSH
2283: EMPTY
2284: LIST
2285: LIST
2286: PUSH
2287: LD_INT 33
2289: PUSH
2290: LD_INT 2
2292: PUSH
2293: EMPTY
2294: LIST
2295: LIST
2296: PUSH
2297: EMPTY
2298: LIST
2299: LIST
2300: PPUSH
2301: CALL_OW 69
2305: PUSH
2306: LD_INT 4
2308: PUSH
2309: LD_INT 5
2311: PUSH
2312: LD_INT 6
2314: PUSH
2315: EMPTY
2316: LIST
2317: LIST
2318: LIST
2319: PUSH
2320: LD_OWVAR 67
2324: ARRAY
2325: GREATEREQUAL
2326: IFFALSE 2270
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2328: LD_ADDR_EXP 17
2332: PUSH
2333: LD_INT 22
2335: PUSH
2336: LD_INT 1
2338: PUSH
2339: EMPTY
2340: LIST
2341: LIST
2342: PUSH
2343: LD_INT 33
2345: PUSH
2346: LD_INT 2
2348: PUSH
2349: EMPTY
2350: LIST
2351: LIST
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: PPUSH
2357: CALL_OW 69
2361: ST_TO_ADDR
// end ;
2362: LD_VAR 0 1
2366: RET
// export function Defend ; var i , tmp ; begin
2367: LD_INT 0
2369: PPUSH
2370: PPUSH
2371: PPUSH
// if not defenders then
2372: LD_EXP 17
2376: NOT
2377: IFFALSE 2383
// PrepareDefenders ;
2379: CALL 2085 0 0
// repeat wait ( 0 0$1 ) ;
2383: LD_INT 35
2385: PPUSH
2386: CALL_OW 67
// for i in defenders do
2390: LD_ADDR_VAR 0 2
2394: PUSH
2395: LD_EXP 17
2399: PUSH
2400: FOR_IN
2401: IFFALSE 2483
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2403: LD_EXP 18
2407: PUSH
2408: LD_VAR 0 2
2412: PPUSH
2413: LD_EXP 18
2417: PUSH
2418: LD_INT 1
2420: ARRAY
2421: PPUSH
2422: LD_EXP 18
2426: PUSH
2427: LD_INT 2
2429: ARRAY
2430: PPUSH
2431: CALL_OW 297
2435: PUSH
2436: LD_INT 10
2438: GREATER
2439: AND
2440: PUSH
2441: LD_VAR 0 2
2445: PPUSH
2446: CALL_OW 314
2450: NOT
2451: AND
2452: IFFALSE 2481
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2454: LD_VAR 0 2
2458: PPUSH
2459: LD_EXP 18
2463: PUSH
2464: LD_INT 1
2466: ARRAY
2467: PPUSH
2468: LD_EXP 18
2472: PUSH
2473: LD_INT 2
2475: ARRAY
2476: PPUSH
2477: CALL_OW 114
// end ;
2481: GO 2400
2483: POP
2484: POP
// until not defenders ;
2485: LD_EXP 17
2489: NOT
2490: IFFALSE 2383
// end ; end_of_file
2492: LD_VAR 0 1
2496: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2497: LD_INT 0
2499: PPUSH
2500: PPUSH
2501: PPUSH
2502: PPUSH
2503: PPUSH
2504: PPUSH
2505: PPUSH
// uc_side := 4 ;
2506: LD_ADDR_OWVAR 20
2510: PUSH
2511: LD_INT 4
2513: ST_TO_ADDR
// uc_nation := 1 ;
2514: LD_ADDR_OWVAR 21
2518: PUSH
2519: LD_INT 1
2521: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2522: LD_ADDR_EXP 33
2526: PUSH
2527: LD_STRING DeltaDoctor
2529: PPUSH
2530: LD_EXP 1
2534: NOT
2535: PPUSH
2536: LD_STRING 10c_
2538: PPUSH
2539: CALL 4784 0 3
2543: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2544: LD_ADDR_EXP 32
2548: PUSH
2549: LD_STRING Joan
2551: PPUSH
2552: LD_EXP 1
2556: NOT
2557: PPUSH
2558: LD_STRING 10c_
2560: PPUSH
2561: CALL 4784 0 3
2565: ST_TO_ADDR
// if Joan then
2566: LD_EXP 32
2570: IFFALSE 2601
// friends := Insert ( friends , friends + 1 , Joan ) ;
2572: LD_ADDR_EXP 4
2576: PUSH
2577: LD_EXP 4
2581: PPUSH
2582: LD_EXP 4
2586: PUSH
2587: LD_INT 1
2589: PLUS
2590: PPUSH
2591: LD_EXP 32
2595: PPUSH
2596: CALL_OW 2
2600: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2601: LD_ADDR_EXP 31
2605: PUSH
2606: LD_STRING Simms
2608: PPUSH
2609: LD_EXP 1
2613: NOT
2614: PPUSH
2615: LD_STRING 10c_
2617: PPUSH
2618: CALL 4784 0 3
2622: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2623: LD_ADDR_EXP 30
2627: PUSH
2628: LD_STRING Kikuchi
2630: PPUSH
2631: LD_EXP 1
2635: NOT
2636: PPUSH
2637: LD_STRING 11_
2639: PPUSH
2640: CALL 4784 0 3
2644: ST_TO_ADDR
// if Kikuchi then
2645: LD_EXP 30
2649: IFFALSE 2680
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2651: LD_ADDR_EXP 4
2655: PUSH
2656: LD_EXP 4
2660: PPUSH
2661: LD_EXP 4
2665: PUSH
2666: LD_INT 1
2668: PLUS
2669: PPUSH
2670: LD_EXP 30
2674: PPUSH
2675: CALL_OW 2
2679: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2680: LD_ADDR_EXP 29
2684: PUSH
2685: LD_STRING Frank
2687: PPUSH
2688: LD_EXP 1
2692: NOT
2693: PPUSH
2694: LD_STRING 11_
2696: PPUSH
2697: CALL 4784 0 3
2701: ST_TO_ADDR
// if Frank then
2702: LD_EXP 29
2706: IFFALSE 2737
// friends := Insert ( friends , friends + 1 , Frank ) ;
2708: LD_ADDR_EXP 4
2712: PUSH
2713: LD_EXP 4
2717: PPUSH
2718: LD_EXP 4
2722: PUSH
2723: LD_INT 1
2725: PLUS
2726: PPUSH
2727: LD_EXP 29
2731: PPUSH
2732: CALL_OW 2
2736: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
2737: LD_ADDR_EXP 28
2741: PUSH
2742: LD_STRING Gary
2744: PPUSH
2745: LD_EXP 1
2749: NOT
2750: PPUSH
2751: LD_STRING 11_
2753: PPUSH
2754: CALL 4784 0 3
2758: ST_TO_ADDR
// if Gary then
2759: LD_EXP 28
2763: IFFALSE 2794
// friends := Insert ( friends , friends + 1 , Gary ) ;
2765: LD_ADDR_EXP 4
2769: PUSH
2770: LD_EXP 4
2774: PPUSH
2775: LD_EXP 4
2779: PUSH
2780: LD_INT 1
2782: PLUS
2783: PPUSH
2784: LD_EXP 28
2788: PPUSH
2789: CALL_OW 2
2793: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
2794: LD_ADDR_EXP 27
2798: PUSH
2799: LD_STRING Cornel
2801: PPUSH
2802: LD_EXP 1
2806: NOT
2807: PPUSH
2808: LD_STRING 11_
2810: PPUSH
2811: CALL 4784 0 3
2815: ST_TO_ADDR
// if Cornel then
2816: LD_EXP 27
2820: IFFALSE 2851
// friends := Insert ( friends , friends + 1 , Cornel ) ;
2822: LD_ADDR_EXP 4
2826: PUSH
2827: LD_EXP 4
2831: PPUSH
2832: LD_EXP 4
2836: PUSH
2837: LD_INT 1
2839: PLUS
2840: PPUSH
2841: LD_EXP 27
2845: PPUSH
2846: CALL_OW 2
2850: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
2851: LD_ADDR_EXP 26
2855: PUSH
2856: LD_STRING Houten
2858: PPUSH
2859: LD_EXP 1
2863: NOT
2864: PPUSH
2865: LD_STRING 11_
2867: PPUSH
2868: CALL 4784 0 3
2872: ST_TO_ADDR
// if Houten then
2873: LD_EXP 26
2877: IFFALSE 2908
// friends := Insert ( friends , friends + 1 , Houten ) ;
2879: LD_ADDR_EXP 4
2883: PUSH
2884: LD_EXP 4
2888: PPUSH
2889: LD_EXP 4
2893: PUSH
2894: LD_INT 1
2896: PLUS
2897: PPUSH
2898: LD_EXP 26
2902: PPUSH
2903: CALL_OW 2
2907: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
2908: LD_ADDR_EXP 25
2912: PUSH
2913: LD_STRING Gladstone
2915: PPUSH
2916: LD_EXP 1
2920: NOT
2921: PPUSH
2922: LD_STRING 11_
2924: PPUSH
2925: CALL 4784 0 3
2929: ST_TO_ADDR
// if Gladstone then
2930: LD_EXP 25
2934: IFFALSE 2965
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
2936: LD_ADDR_EXP 4
2940: PUSH
2941: LD_EXP 4
2945: PPUSH
2946: LD_EXP 4
2950: PUSH
2951: LD_INT 1
2953: PLUS
2954: PPUSH
2955: LD_EXP 25
2959: PPUSH
2960: CALL_OW 2
2964: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
2965: LD_ADDR_EXP 19
2969: PUSH
2970: LD_STRING Lisa
2972: PPUSH
2973: LD_EXP 1
2977: NOT
2978: PPUSH
2979: LD_STRING 11_
2981: PPUSH
2982: CALL 4784 0 3
2986: ST_TO_ADDR
// if Lisa then
2987: LD_EXP 19
2991: IFFALSE 3016
// friends := Insert ( friends , 1 , Lisa ) ;
2993: LD_ADDR_EXP 4
2997: PUSH
2998: LD_EXP 4
3002: PPUSH
3003: LD_INT 1
3005: PPUSH
3006: LD_EXP 19
3010: PPUSH
3011: CALL_OW 2
3015: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3016: LD_ADDR_EXP 20
3020: PUSH
3021: LD_STRING Donaldson
3023: PPUSH
3024: LD_EXP 1
3028: NOT
3029: PPUSH
3030: LD_STRING 11_
3032: PPUSH
3033: CALL 4784 0 3
3037: ST_TO_ADDR
// if Donaldson then
3038: LD_EXP 20
3042: IFFALSE 3073
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3044: LD_ADDR_EXP 4
3048: PUSH
3049: LD_EXP 4
3053: PPUSH
3054: LD_EXP 4
3058: PUSH
3059: LD_INT 1
3061: PLUS
3062: PPUSH
3063: LD_EXP 20
3067: PPUSH
3068: CALL_OW 2
3072: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3073: LD_ADDR_EXP 21
3077: PUSH
3078: LD_STRING Bobby
3080: PPUSH
3081: LD_EXP 1
3085: NOT
3086: PPUSH
3087: LD_STRING 11_
3089: PPUSH
3090: CALL 4784 0 3
3094: ST_TO_ADDR
// if Bobby then
3095: LD_EXP 21
3099: IFFALSE 3130
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3101: LD_ADDR_EXP 4
3105: PUSH
3106: LD_EXP 4
3110: PPUSH
3111: LD_EXP 4
3115: PUSH
3116: LD_INT 1
3118: PLUS
3119: PPUSH
3120: LD_EXP 21
3124: PPUSH
3125: CALL_OW 2
3129: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3130: LD_ADDR_EXP 22
3134: PUSH
3135: LD_STRING Cyrus
3137: PPUSH
3138: LD_EXP 1
3142: NOT
3143: PPUSH
3144: LD_STRING 11_
3146: PPUSH
3147: CALL 4784 0 3
3151: ST_TO_ADDR
// if Cyrus then
3152: LD_EXP 22
3156: IFFALSE 3187
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3158: LD_ADDR_EXP 4
3162: PUSH
3163: LD_EXP 4
3167: PPUSH
3168: LD_EXP 4
3172: PUSH
3173: LD_INT 1
3175: PLUS
3176: PPUSH
3177: LD_EXP 22
3181: PPUSH
3182: CALL_OW 2
3186: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3187: LD_ADDR_EXP 23
3191: PUSH
3192: LD_STRING Denis
3194: PPUSH
3195: LD_EXP 1
3199: NOT
3200: PPUSH
3201: LD_STRING 11_
3203: PPUSH
3204: CALL 4784 0 3
3208: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3209: LD_ADDR_EXP 24
3213: PUSH
3214: LD_STRING Brown
3216: PPUSH
3217: LD_EXP 1
3221: NOT
3222: PPUSH
3223: LD_STRING 11_
3225: PPUSH
3226: CALL 4784 0 3
3230: ST_TO_ADDR
// if Brown then
3231: LD_EXP 24
3235: IFFALSE 3266
// friends := Insert ( friends , friends + 1 , Brown ) ;
3237: LD_ADDR_EXP 4
3241: PUSH
3242: LD_EXP 4
3246: PPUSH
3247: LD_EXP 4
3251: PUSH
3252: LD_INT 1
3254: PLUS
3255: PPUSH
3256: LD_EXP 24
3260: PPUSH
3261: CALL_OW 2
3265: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ;
3266: LD_ADDR_EXP 4
3270: PUSH
3271: LD_EXP 4
3275: PUSH
3276: LD_STRING 11c_others
3278: PPUSH
3279: CALL_OW 31
3283: ADD
3284: ST_TO_ADDR
// if friends < 10 then
3285: LD_EXP 4
3289: PUSH
3290: LD_INT 10
3292: LESS
3293: IFFALSE 3365
// for i = 1 to 10 do
3295: LD_ADDR_VAR 0 2
3299: PUSH
3300: DOUBLE
3301: LD_INT 1
3303: DEC
3304: ST_TO_ADDR
3305: LD_INT 10
3307: PUSH
3308: FOR_TO
3309: IFFALSE 3363
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3311: LD_INT 0
3313: PPUSH
3314: LD_INT 1
3316: PPUSH
3317: LD_INT 4
3319: PPUSH
3320: CALL_OW 12
3324: PPUSH
3325: LD_INT 7
3327: PPUSH
3328: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: CALL_OW 44
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// end ;
3361: GO 3308
3363: POP
3364: POP
// for i in friends do
3365: LD_ADDR_VAR 0 2
3369: PUSH
3370: LD_EXP 4
3374: PUSH
3375: FOR_IN
3376: IFFALSE 3434
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3378: LD_VAR 0 2
3382: PPUSH
3383: LD_INT 1
3385: PPUSH
3386: CALL_OW 259
3390: PUSH
3391: LD_VAR 0 2
3395: PPUSH
3396: LD_INT 4
3398: PPUSH
3399: CALL_OW 259
3403: GREATEREQUAL
3404: IFFALSE 3420
// SetClass ( i , class_soldier ) else
3406: LD_VAR 0 2
3410: PPUSH
3411: LD_INT 1
3413: PPUSH
3414: CALL_OW 336
3418: GO 3432
// SetClass ( i , class_scientistic ) ;
3420: LD_VAR 0 2
3424: PPUSH
3425: LD_INT 4
3427: PPUSH
3428: CALL_OW 336
3432: GO 3375
3434: POP
3435: POP
// if Frank then
3436: LD_EXP 29
3440: IFFALSE 3454
// SetClass ( Frank , class_sniper ) ;
3442: LD_EXP 29
3446: PPUSH
3447: LD_INT 5
3449: PPUSH
3450: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3454: LD_EXP 32
3458: PUSH
3459: LD_EXP 23
3463: PUSH
3464: LD_EXP 33
3468: PUSH
3469: LD_EXP 31
3473: PUSH
3474: EMPTY
3475: LIST
3476: LIST
3477: LIST
3478: LIST
3479: PPUSH
3480: LD_INT 4
3482: PPUSH
3483: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 3 ] , [ class_sniper , 0 , 3 ] ] ) ;
3487: LD_ADDR_EXP 3
3491: PUSH
3492: LD_STRING 
3494: PPUSH
3495: LD_INT 7
3497: PPUSH
3498: LD_INT 7
3500: PPUSH
3501: LD_INT -6
3503: PUSH
3504: LD_EXP 11
3508: PUSH
3509: LD_EXP 12
3513: PUSH
3514: LD_EXP 31
3518: PUSH
3519: LD_EXP 23
3523: PUSH
3524: LD_EXP 33
3528: PUSH
3529: LD_INT -2
3531: PUSH
3532: LD_INT -3
3534: PUSH
3535: LD_INT -5
3537: PUSH
3538: EMPTY
3539: LIST
3540: LIST
3541: LIST
3542: LIST
3543: LIST
3544: LIST
3545: LIST
3546: LIST
3547: LIST
3548: PUSH
3549: LD_EXP 4
3553: ADD
3554: PPUSH
3555: LD_INT 1
3557: PUSH
3558: LD_INT 4
3560: PUSH
3561: LD_INT 3
3563: PUSH
3564: EMPTY
3565: LIST
3566: LIST
3567: PUSH
3568: LD_INT 5
3570: PUSH
3571: LD_INT 0
3573: PUSH
3574: LD_INT 3
3576: PUSH
3577: EMPTY
3578: LIST
3579: LIST
3580: LIST
3581: PUSH
3582: EMPTY
3583: LIST
3584: LIST
3585: LIST
3586: PPUSH
3587: CALL_OW 42
3591: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3592: LD_ADDR_EXP 3
3596: PUSH
3597: LD_EXP 3
3601: PUSH
3602: LD_EXP 23
3606: PUSH
3607: LD_EXP 31
3611: PUSH
3612: EMPTY
3613: LIST
3614: LIST
3615: UNION
3616: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3617: LD_ADDR_EXP 5
3621: PUSH
3622: LD_EXP 4
3626: PUSH
3627: LD_EXP 11
3631: PUSH
3632: LD_EXP 12
3636: PUSH
3637: LD_EXP 19
3641: PUSH
3642: LD_EXP 20
3646: PUSH
3647: LD_EXP 21
3651: PUSH
3652: LD_EXP 22
3656: PUSH
3657: LD_EXP 23
3661: PUSH
3662: LD_EXP 24
3666: PUSH
3667: LD_EXP 25
3671: PUSH
3672: LD_EXP 26
3676: PUSH
3677: LD_EXP 27
3681: PUSH
3682: LD_EXP 28
3686: PUSH
3687: LD_EXP 29
3691: PUSH
3692: LD_EXP 30
3696: PUSH
3697: LD_EXP 31
3701: PUSH
3702: LD_EXP 32
3706: PUSH
3707: LD_EXP 33
3711: PUSH
3712: EMPTY
3713: LIST
3714: LIST
3715: LIST
3716: LIST
3717: LIST
3718: LIST
3719: LIST
3720: LIST
3721: LIST
3722: LIST
3723: LIST
3724: LIST
3725: LIST
3726: LIST
3727: LIST
3728: LIST
3729: LIST
3730: PUSH
3731: LD_EXP 3
3735: ADD
3736: DIFF
3737: ST_TO_ADDR
// friends := friends diff others ;
3738: LD_ADDR_EXP 4
3742: PUSH
3743: LD_EXP 4
3747: PUSH
3748: LD_EXP 5
3752: DIFF
3753: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
3754: LD_ADDR_VAR 0 4
3758: PUSH
3759: LD_INT 111
3761: PUSH
3762: LD_INT 137
3764: PUSH
3765: LD_INT 51
3767: PUSH
3768: EMPTY
3769: LIST
3770: LIST
3771: LIST
3772: PUSH
3773: LD_INT 147
3775: PUSH
3776: LD_INT 129
3778: PUSH
3779: LD_INT 25
3781: PUSH
3782: EMPTY
3783: LIST
3784: LIST
3785: LIST
3786: PUSH
3787: EMPTY
3788: LIST
3789: LIST
3790: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
3791: LD_ADDR_VAR 0 5
3795: PUSH
3796: LD_INT 5
3798: PUSH
3799: LD_INT 6
3801: PUSH
3802: LD_INT 7
3804: PUSH
3805: LD_INT 8
3807: PUSH
3808: LD_INT 17
3810: PUSH
3811: LD_INT 18
3813: PUSH
3814: EMPTY
3815: LIST
3816: LIST
3817: LIST
3818: LIST
3819: LIST
3820: LIST
3821: ST_TO_ADDR
// for i in buildings do
3822: LD_ADDR_VAR 0 2
3826: PUSH
3827: LD_VAR 0 4
3831: PUSH
3832: FOR_IN
3833: IFFALSE 3849
// SetSide ( i , 4 ) ;
3835: LD_VAR 0 2
3839: PPUSH
3840: LD_INT 4
3842: PPUSH
3843: CALL_OW 235
3847: GO 3832
3849: POP
3850: POP
// for i in selected do
3851: LD_ADDR_VAR 0 2
3855: PUSH
3856: LD_EXP 3
3860: PUSH
3861: FOR_IN
3862: IFFALSE 4124
// begin if GetClass ( i ) in [ 1 , 5 ] then
3864: LD_VAR 0 2
3868: PPUSH
3869: CALL_OW 257
3873: PUSH
3874: LD_INT 1
3876: PUSH
3877: LD_INT 5
3879: PUSH
3880: EMPTY
3881: LIST
3882: LIST
3883: IN
3884: IFFALSE 4005
// begin if buildings [ 1 ] then
3886: LD_VAR 0 4
3890: PUSH
3891: LD_INT 1
3893: ARRAY
3894: IFFALSE 3955
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
3896: LD_VAR 0 2
3900: PPUSH
3901: LD_VAR 0 4
3905: PUSH
3906: LD_INT 1
3908: ARRAY
3909: PUSH
3910: LD_INT 1
3912: ARRAY
3913: PPUSH
3914: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
3918: LD_ADDR_VAR 0 4
3922: PUSH
3923: LD_VAR 0 4
3927: PPUSH
3928: LD_INT 1
3930: PPUSH
3931: LD_VAR 0 4
3935: PUSH
3936: LD_INT 1
3938: ARRAY
3939: PPUSH
3940: LD_INT 1
3942: PPUSH
3943: CALL_OW 3
3947: PPUSH
3948: CALL_OW 1
3952: ST_TO_ADDR
// end else
3953: GO 4003
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
3955: LD_VAR 0 2
3959: PPUSH
3960: LD_VAR 0 5
3964: PUSH
3965: LD_INT 1
3967: ARRAY
3968: PPUSH
3969: LD_INT 0
3971: PPUSH
3972: CALL_OW 49
// ComHold ( i ) ;
3976: LD_VAR 0 2
3980: PPUSH
3981: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
3985: LD_ADDR_VAR 0 5
3989: PUSH
3990: LD_VAR 0 5
3994: PPUSH
3995: LD_INT 1
3997: PPUSH
3998: CALL_OW 3
4002: ST_TO_ADDR
// end ; end else
4003: GO 4122
// begin if buildings [ 2 ] then
4005: LD_VAR 0 4
4009: PUSH
4010: LD_INT 2
4012: ARRAY
4013: IFFALSE 4074
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4015: LD_VAR 0 2
4019: PPUSH
4020: LD_VAR 0 4
4024: PUSH
4025: LD_INT 2
4027: ARRAY
4028: PUSH
4029: LD_INT 1
4031: ARRAY
4032: PPUSH
4033: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4037: LD_ADDR_VAR 0 4
4041: PUSH
4042: LD_VAR 0 4
4046: PPUSH
4047: LD_INT 2
4049: PPUSH
4050: LD_VAR 0 4
4054: PUSH
4055: LD_INT 2
4057: ARRAY
4058: PPUSH
4059: LD_INT 1
4061: PPUSH
4062: CALL_OW 3
4066: PPUSH
4067: CALL_OW 1
4071: ST_TO_ADDR
// end else
4072: GO 4122
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4074: LD_VAR 0 2
4078: PPUSH
4079: LD_VAR 0 5
4083: PUSH
4084: LD_INT 1
4086: ARRAY
4087: PPUSH
4088: LD_INT 0
4090: PPUSH
4091: CALL_OW 49
// ComHold ( i ) ;
4095: LD_VAR 0 2
4099: PPUSH
4100: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4104: LD_ADDR_VAR 0 5
4108: PUSH
4109: LD_VAR 0 5
4113: PPUSH
4114: LD_INT 1
4116: PPUSH
4117: CALL_OW 3
4121: ST_TO_ADDR
// end ; end ; end ;
4122: GO 3861
4124: POP
4125: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4126: LD_ADDR_VAR 0 6
4130: PUSH
4131: LD_INT 22
4133: PUSH
4134: LD_INT 1
4136: PUSH
4137: EMPTY
4138: LIST
4139: LIST
4140: PUSH
4141: LD_INT 30
4143: PUSH
4144: LD_INT 32
4146: PUSH
4147: EMPTY
4148: LIST
4149: LIST
4150: PUSH
4151: EMPTY
4152: LIST
4153: LIST
4154: PPUSH
4155: CALL_OW 69
4159: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4160: LD_ADDR_VAR 0 2
4164: PUSH
4165: DOUBLE
4166: LD_VAR 0 6
4170: PUSH
4171: LD_EXP 5
4175: MINUS
4176: INC
4177: ST_TO_ADDR
4178: LD_INT 1
4180: PUSH
4181: FOR_DOWNTO
4182: IFFALSE 4245
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4184: LD_INT 0
4186: PPUSH
4187: LD_INT 1
4189: PPUSH
4190: LD_INT 7
4192: PUSH
4193: LD_INT 8
4195: PUSH
4196: LD_INT 9
4198: PUSH
4199: EMPTY
4200: LIST
4201: LIST
4202: LIST
4203: PUSH
4204: LD_OWVAR 67
4208: ARRAY
4209: PPUSH
4210: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4214: LD_ADDR_EXP 5
4218: PUSH
4219: LD_EXP 5
4223: PPUSH
4224: LD_EXP 5
4228: PUSH
4229: LD_INT 1
4231: PLUS
4232: PPUSH
4233: CALL_OW 44
4237: PPUSH
4238: CALL_OW 2
4242: ST_TO_ADDR
// end ;
4243: GO 4181
4245: POP
4246: POP
// if others then
4247: LD_EXP 5
4251: IFFALSE 4357
// for i = 1 to bunkers do
4253: LD_ADDR_VAR 0 2
4257: PUSH
4258: DOUBLE
4259: LD_INT 1
4261: DEC
4262: ST_TO_ADDR
4263: LD_VAR 0 6
4267: PUSH
4268: FOR_TO
4269: IFFALSE 4355
// begin SetSide ( others [ others ] , 1 ) ;
4271: LD_EXP 5
4275: PUSH
4276: LD_EXP 5
4280: ARRAY
4281: PPUSH
4282: LD_INT 1
4284: PPUSH
4285: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4289: LD_EXP 5
4293: PUSH
4294: LD_EXP 5
4298: ARRAY
4299: PPUSH
4300: LD_INT 1
4302: PPUSH
4303: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4307: LD_EXP 5
4311: PUSH
4312: LD_EXP 5
4316: ARRAY
4317: PPUSH
4318: LD_VAR 0 6
4322: PUSH
4323: LD_VAR 0 2
4327: ARRAY
4328: PPUSH
4329: CALL_OW 52
// others := Delete ( others , others ) ;
4333: LD_ADDR_EXP 5
4337: PUSH
4338: LD_EXP 5
4342: PPUSH
4343: LD_EXP 5
4347: PPUSH
4348: CALL_OW 3
4352: ST_TO_ADDR
// end ;
4353: GO 4268
4355: POP
4356: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4357: LD_ADDR_VAR 0 5
4361: PUSH
4362: LD_VAR 0 5
4366: PUSH
4367: LD_INT 9
4369: PUSH
4370: LD_INT 10
4372: PUSH
4373: LD_INT 11
4375: PUSH
4376: LD_INT 12
4378: PUSH
4379: LD_INT 13
4381: PUSH
4382: LD_INT 14
4384: PUSH
4385: LD_INT 15
4387: PUSH
4388: LD_INT 16
4390: PUSH
4391: EMPTY
4392: LIST
4393: LIST
4394: LIST
4395: LIST
4396: LIST
4397: LIST
4398: LIST
4399: LIST
4400: UNION
4401: ST_TO_ADDR
// for i in friends ^ others do
4402: LD_ADDR_VAR 0 2
4406: PUSH
4407: LD_EXP 4
4411: PUSH
4412: LD_EXP 5
4416: ADD
4417: PUSH
4418: FOR_IN
4419: IFFALSE 4759
// begin SetTag ( i , 2 ) ;
4421: LD_VAR 0 2
4425: PPUSH
4426: LD_INT 2
4428: PPUSH
4429: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4433: LD_VAR 0 2
4437: PUSH
4438: LD_EXP 4
4442: IN
4443: PUSH
4444: LD_VAR 0 2
4448: PPUSH
4449: CALL_OW 257
4453: PUSH
4454: LD_INT 1
4456: EQUAL
4457: AND
4458: PUSH
4459: LD_VAR 0 2
4463: PUSH
4464: LD_EXP 5
4468: IN
4469: OR
4470: PUSH
4471: LD_VAR 0 4
4475: PUSH
4476: LD_INT 1
4478: ARRAY
4479: AND
4480: IFFALSE 4553
// begin SetClass ( i , 1 ) ;
4482: LD_VAR 0 2
4486: PPUSH
4487: LD_INT 1
4489: PPUSH
4490: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4494: LD_VAR 0 2
4498: PPUSH
4499: LD_VAR 0 4
4503: PUSH
4504: LD_INT 1
4506: ARRAY
4507: PUSH
4508: LD_INT 1
4510: ARRAY
4511: PPUSH
4512: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4516: LD_ADDR_VAR 0 4
4520: PUSH
4521: LD_VAR 0 4
4525: PPUSH
4526: LD_INT 1
4528: PPUSH
4529: LD_VAR 0 4
4533: PUSH
4534: LD_INT 1
4536: ARRAY
4537: PPUSH
4538: LD_INT 1
4540: PPUSH
4541: CALL_OW 3
4545: PPUSH
4546: CALL_OW 1
4550: ST_TO_ADDR
// continue ;
4551: GO 4418
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4553: LD_VAR 0 2
4557: PUSH
4558: LD_EXP 4
4562: IN
4563: PUSH
4564: LD_VAR 0 2
4568: PPUSH
4569: CALL_OW 257
4573: PUSH
4574: LD_INT 4
4576: EQUAL
4577: AND
4578: PUSH
4579: LD_VAR 0 2
4583: PUSH
4584: LD_EXP 5
4588: IN
4589: OR
4590: PUSH
4591: LD_VAR 0 4
4595: PUSH
4596: LD_INT 2
4598: ARRAY
4599: AND
4600: IFFALSE 4673
// begin SetClass ( i , 4 ) ;
4602: LD_VAR 0 2
4606: PPUSH
4607: LD_INT 4
4609: PPUSH
4610: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4614: LD_VAR 0 2
4618: PPUSH
4619: LD_VAR 0 4
4623: PUSH
4624: LD_INT 2
4626: ARRAY
4627: PUSH
4628: LD_INT 1
4630: ARRAY
4631: PPUSH
4632: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4636: LD_ADDR_VAR 0 4
4640: PUSH
4641: LD_VAR 0 4
4645: PPUSH
4646: LD_INT 2
4648: PPUSH
4649: LD_VAR 0 4
4653: PUSH
4654: LD_INT 2
4656: ARRAY
4657: PPUSH
4658: LD_INT 1
4660: PPUSH
4661: CALL_OW 3
4665: PPUSH
4666: CALL_OW 1
4670: ST_TO_ADDR
// continue ;
4671: GO 4418
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4673: LD_VAR 0 2
4677: PPUSH
4678: LD_VAR 0 5
4682: PUSH
4683: LD_INT 1
4685: ARRAY
4686: PPUSH
4687: LD_INT 0
4689: PPUSH
4690: CALL_OW 49
// if GetClass ( i ) <> 4 then
4694: LD_VAR 0 2
4698: PPUSH
4699: CALL_OW 257
4703: PUSH
4704: LD_INT 4
4706: NONEQUAL
4707: IFFALSE 4721
// SetClass ( i , 1 ) ;
4709: LD_VAR 0 2
4713: PPUSH
4714: LD_INT 1
4716: PPUSH
4717: CALL_OW 336
// ComHold ( i ) ;
4721: LD_VAR 0 2
4725: PPUSH
4726: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4730: LD_ADDR_VAR 0 5
4734: PUSH
4735: LD_VAR 0 5
4739: PPUSH
4740: LD_INT 1
4742: PPUSH
4743: CALL_OW 3
4747: ST_TO_ADDR
// if not areas then
4748: LD_VAR 0 5
4752: NOT
4753: IFFALSE 4757
// break ;
4755: GO 4759
// end ;
4757: GO 4418
4759: POP
4760: POP
// if Frank then
4761: LD_EXP 29
4765: IFFALSE 4779
// SetClass ( Frank , class_sniper ) ;
4767: LD_EXP 29
4771: PPUSH
4772: LD_INT 5
4774: PPUSH
4775: CALL_OW 336
// end ; end_of_file
4779: LD_VAR 0 1
4783: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
4784: LD_INT 0
4786: PPUSH
4787: PPUSH
// if exist_mode then
4788: LD_VAR 0 2
4792: IFFALSE 4817
// unit := CreateCharacter ( prefix & ident ) else
4794: LD_ADDR_VAR 0 5
4798: PUSH
4799: LD_VAR 0 3
4803: PUSH
4804: LD_VAR 0 1
4808: STR
4809: PPUSH
4810: CALL_OW 34
4814: ST_TO_ADDR
4815: GO 4832
// unit := NewCharacter ( ident ) ;
4817: LD_ADDR_VAR 0 5
4821: PUSH
4822: LD_VAR 0 1
4826: PPUSH
4827: CALL_OW 25
4831: ST_TO_ADDR
// result := unit ;
4832: LD_ADDR_VAR 0 4
4836: PUSH
4837: LD_VAR 0 5
4841: ST_TO_ADDR
// end ;
4842: LD_VAR 0 4
4846: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
4847: LD_INT 0
4849: PPUSH
// vc_chassis := chassis ;
4850: LD_ADDR_OWVAR 37
4854: PUSH
4855: LD_VAR 0 1
4859: ST_TO_ADDR
// vc_engine := engine ;
4860: LD_ADDR_OWVAR 39
4864: PUSH
4865: LD_VAR 0 2
4869: ST_TO_ADDR
// vc_control := control ;
4870: LD_ADDR_OWVAR 38
4874: PUSH
4875: LD_VAR 0 3
4879: ST_TO_ADDR
// vc_weapon := weapon ;
4880: LD_ADDR_OWVAR 40
4884: PUSH
4885: LD_VAR 0 4
4889: ST_TO_ADDR
// vc_fuel_battery := fuel ;
4890: LD_ADDR_OWVAR 41
4894: PUSH
4895: LD_VAR 0 5
4899: ST_TO_ADDR
// end ;
4900: LD_VAR 0 6
4904: RET
// export function CanSayRand ( side ) ; begin
4905: LD_INT 0
4907: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
4908: LD_ADDR_VAR 0 2
4912: PUSH
4913: LD_INT 52
4915: PUSH
4916: EMPTY
4917: LIST
4918: PUSH
4919: LD_INT 22
4921: PUSH
4922: LD_VAR 0 1
4926: PUSH
4927: EMPTY
4928: LIST
4929: LIST
4930: PUSH
4931: LD_INT 2
4933: PUSH
4934: LD_INT 25
4936: PUSH
4937: LD_INT 1
4939: PUSH
4940: EMPTY
4941: LIST
4942: LIST
4943: PUSH
4944: LD_INT 25
4946: PUSH
4947: LD_INT 2
4949: PUSH
4950: EMPTY
4951: LIST
4952: LIST
4953: PUSH
4954: LD_INT 25
4956: PUSH
4957: LD_INT 3
4959: PUSH
4960: EMPTY
4961: LIST
4962: LIST
4963: PUSH
4964: LD_INT 25
4966: PUSH
4967: LD_INT 4
4969: PUSH
4970: EMPTY
4971: LIST
4972: LIST
4973: PUSH
4974: EMPTY
4975: LIST
4976: LIST
4977: LIST
4978: LIST
4979: LIST
4980: PUSH
4981: EMPTY
4982: LIST
4983: LIST
4984: LIST
4985: PPUSH
4986: CALL_OW 69
4990: PUSH
4991: LD_EXP 11
4995: PUSH
4996: LD_EXP 29
5000: PUSH
5001: LD_EXP 19
5005: PUSH
5006: LD_EXP 20
5010: PUSH
5011: LD_EXP 21
5015: PUSH
5016: LD_EXP 22
5020: PUSH
5021: LD_EXP 23
5025: PUSH
5026: LD_EXP 24
5030: PUSH
5031: LD_EXP 25
5035: PUSH
5036: LD_EXP 26
5040: PUSH
5041: LD_EXP 13
5045: PUSH
5046: LD_EXP 27
5050: PUSH
5051: LD_EXP 28
5055: PUSH
5056: LD_EXP 30
5060: PUSH
5061: EMPTY
5062: LIST
5063: LIST
5064: LIST
5065: LIST
5066: LIST
5067: LIST
5068: LIST
5069: LIST
5070: LIST
5071: LIST
5072: LIST
5073: LIST
5074: LIST
5075: LIST
5076: DIFF
5077: ST_TO_ADDR
// end ;
5078: LD_VAR 0 2
5082: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5083: LD_INT 0
5085: PPUSH
5086: PPUSH
5087: PPUSH
5088: PPUSH
5089: PPUSH
5090: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5091: LD_VAR 0 1
5095: NOT
5096: PUSH
5097: LD_VAR 0 1
5101: PPUSH
5102: CALL_OW 263
5106: PUSH
5107: LD_INT 2
5109: EQUAL
5110: NOT
5111: OR
5112: IFFALSE 5116
// exit ;
5114: GO 5432
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5116: LD_ADDR_VAR 0 6
5120: PUSH
5121: LD_INT 22
5123: PUSH
5124: LD_VAR 0 1
5128: PPUSH
5129: CALL_OW 255
5133: PUSH
5134: EMPTY
5135: LIST
5136: LIST
5137: PUSH
5138: LD_INT 2
5140: PUSH
5141: LD_INT 30
5143: PUSH
5144: LD_INT 36
5146: PUSH
5147: EMPTY
5148: LIST
5149: LIST
5150: PUSH
5151: LD_INT 34
5153: PUSH
5154: LD_INT 31
5156: PUSH
5157: EMPTY
5158: LIST
5159: LIST
5160: PUSH
5161: EMPTY
5162: LIST
5163: LIST
5164: LIST
5165: PUSH
5166: EMPTY
5167: LIST
5168: LIST
5169: PPUSH
5170: CALL_OW 69
5174: ST_TO_ADDR
// if not tmp then
5175: LD_VAR 0 6
5179: NOT
5180: IFFALSE 5184
// exit ;
5182: GO 5432
// result := [ ] ;
5184: LD_ADDR_VAR 0 2
5188: PUSH
5189: EMPTY
5190: ST_TO_ADDR
// for i in tmp do
5191: LD_ADDR_VAR 0 3
5195: PUSH
5196: LD_VAR 0 6
5200: PUSH
5201: FOR_IN
5202: IFFALSE 5273
// begin t := UnitsInside ( i ) ;
5204: LD_ADDR_VAR 0 4
5208: PUSH
5209: LD_VAR 0 3
5213: PPUSH
5214: CALL_OW 313
5218: ST_TO_ADDR
// if t then
5219: LD_VAR 0 4
5223: IFFALSE 5271
// for j in t do
5225: LD_ADDR_VAR 0 7
5229: PUSH
5230: LD_VAR 0 4
5234: PUSH
5235: FOR_IN
5236: IFFALSE 5269
// result := Insert ( result , result + 1 , j ) ;
5238: LD_ADDR_VAR 0 2
5242: PUSH
5243: LD_VAR 0 2
5247: PPUSH
5248: LD_VAR 0 2
5252: PUSH
5253: LD_INT 1
5255: PLUS
5256: PPUSH
5257: LD_VAR 0 7
5261: PPUSH
5262: CALL_OW 2
5266: ST_TO_ADDR
5267: GO 5235
5269: POP
5270: POP
// end ;
5271: GO 5201
5273: POP
5274: POP
// if not result then
5275: LD_VAR 0 2
5279: NOT
5280: IFFALSE 5284
// exit ;
5282: GO 5432
// mech := result [ 1 ] ;
5284: LD_ADDR_VAR 0 5
5288: PUSH
5289: LD_VAR 0 2
5293: PUSH
5294: LD_INT 1
5296: ARRAY
5297: ST_TO_ADDR
// if result > 1 then
5298: LD_VAR 0 2
5302: PUSH
5303: LD_INT 1
5305: GREATER
5306: IFFALSE 5418
// for i = 2 to result do
5308: LD_ADDR_VAR 0 3
5312: PUSH
5313: DOUBLE
5314: LD_INT 2
5316: DEC
5317: ST_TO_ADDR
5318: LD_VAR 0 2
5322: PUSH
5323: FOR_TO
5324: IFFALSE 5416
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5326: LD_ADDR_VAR 0 4
5330: PUSH
5331: LD_VAR 0 2
5335: PUSH
5336: LD_VAR 0 3
5340: ARRAY
5341: PPUSH
5342: LD_INT 3
5344: PPUSH
5345: CALL_OW 259
5349: PUSH
5350: LD_VAR 0 2
5354: PUSH
5355: LD_VAR 0 3
5359: ARRAY
5360: PPUSH
5361: CALL_OW 432
5365: MINUS
5366: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5367: LD_VAR 0 4
5371: PUSH
5372: LD_VAR 0 5
5376: PPUSH
5377: LD_INT 3
5379: PPUSH
5380: CALL_OW 259
5384: PUSH
5385: LD_VAR 0 5
5389: PPUSH
5390: CALL_OW 432
5394: MINUS
5395: GREATEREQUAL
5396: IFFALSE 5414
// mech := result [ i ] ;
5398: LD_ADDR_VAR 0 5
5402: PUSH
5403: LD_VAR 0 2
5407: PUSH
5408: LD_VAR 0 3
5412: ARRAY
5413: ST_TO_ADDR
// end ;
5414: GO 5323
5416: POP
5417: POP
// ComLinkTo ( vehicle , mech ) ;
5418: LD_VAR 0 1
5422: PPUSH
5423: LD_VAR 0 5
5427: PPUSH
5428: CALL_OW 135
// end ;
5432: LD_VAR 0 2
5436: RET
// export function SayRand ( sex , dial ) ; begin
5437: LD_INT 0
5439: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5440: LD_ADDR_VAR 0 3
5444: PUSH
5445: LD_INT 52
5447: PUSH
5448: EMPTY
5449: LIST
5450: PUSH
5451: LD_INT 22
5453: PUSH
5454: LD_INT 1
5456: PUSH
5457: EMPTY
5458: LIST
5459: LIST
5460: PUSH
5461: LD_INT 26
5463: PUSH
5464: LD_VAR 0 1
5468: PUSH
5469: EMPTY
5470: LIST
5471: LIST
5472: PUSH
5473: LD_INT 2
5475: PUSH
5476: LD_INT 25
5478: PUSH
5479: LD_INT 1
5481: PUSH
5482: EMPTY
5483: LIST
5484: LIST
5485: PUSH
5486: LD_INT 25
5488: PUSH
5489: LD_INT 2
5491: PUSH
5492: EMPTY
5493: LIST
5494: LIST
5495: PUSH
5496: LD_INT 25
5498: PUSH
5499: LD_INT 3
5501: PUSH
5502: EMPTY
5503: LIST
5504: LIST
5505: PUSH
5506: LD_INT 25
5508: PUSH
5509: LD_INT 4
5511: PUSH
5512: EMPTY
5513: LIST
5514: LIST
5515: PUSH
5516: EMPTY
5517: LIST
5518: LIST
5519: LIST
5520: LIST
5521: LIST
5522: PUSH
5523: EMPTY
5524: LIST
5525: LIST
5526: LIST
5527: LIST
5528: PPUSH
5529: CALL_OW 69
5533: PUSH
5534: LD_EXP 11
5538: PUSH
5539: LD_EXP 29
5543: PUSH
5544: LD_EXP 19
5548: PUSH
5549: LD_EXP 20
5553: PUSH
5554: LD_EXP 21
5558: PUSH
5559: LD_EXP 22
5563: PUSH
5564: LD_EXP 23
5568: PUSH
5569: LD_EXP 24
5573: PUSH
5574: LD_EXP 25
5578: PUSH
5579: LD_EXP 26
5583: PUSH
5584: LD_EXP 13
5588: PUSH
5589: LD_EXP 27
5593: PUSH
5594: LD_EXP 28
5598: PUSH
5599: LD_EXP 30
5603: PUSH
5604: EMPTY
5605: LIST
5606: LIST
5607: LIST
5608: LIST
5609: LIST
5610: LIST
5611: LIST
5612: LIST
5613: LIST
5614: LIST
5615: LIST
5616: LIST
5617: LIST
5618: LIST
5619: DIFF
5620: ST_TO_ADDR
// if not result then
5621: LD_VAR 0 3
5625: NOT
5626: IFFALSE 5630
// exit ;
5628: GO 5658
// result := result [ 1 ] ;
5630: LD_ADDR_VAR 0 3
5634: PUSH
5635: LD_VAR 0 3
5639: PUSH
5640: LD_INT 1
5642: ARRAY
5643: ST_TO_ADDR
// Say ( result , dial ) ;
5644: LD_VAR 0 3
5648: PPUSH
5649: LD_VAR 0 2
5653: PPUSH
5654: CALL_OW 88
// end ;
5658: LD_VAR 0 3
5662: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5663: LD_INT 0
5665: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5666: LD_ADDR_VAR 0 4
5670: PUSH
5671: LD_INT 22
5673: PUSH
5674: LD_INT 1
5676: PUSH
5677: EMPTY
5678: LIST
5679: LIST
5680: PUSH
5681: LD_INT 26
5683: PUSH
5684: LD_VAR 0 1
5688: PUSH
5689: EMPTY
5690: LIST
5691: LIST
5692: PUSH
5693: LD_INT 2
5695: PUSH
5696: LD_INT 25
5698: PUSH
5699: LD_INT 1
5701: PUSH
5702: EMPTY
5703: LIST
5704: LIST
5705: PUSH
5706: LD_INT 25
5708: PUSH
5709: LD_INT 2
5711: PUSH
5712: EMPTY
5713: LIST
5714: LIST
5715: PUSH
5716: LD_INT 25
5718: PUSH
5719: LD_INT 3
5721: PUSH
5722: EMPTY
5723: LIST
5724: LIST
5725: PUSH
5726: LD_INT 25
5728: PUSH
5729: LD_INT 4
5731: PUSH
5732: EMPTY
5733: LIST
5734: LIST
5735: PUSH
5736: EMPTY
5737: LIST
5738: LIST
5739: LIST
5740: LIST
5741: LIST
5742: PUSH
5743: EMPTY
5744: LIST
5745: LIST
5746: LIST
5747: PPUSH
5748: CALL_OW 69
5752: PUSH
5753: LD_EXP 11
5757: PUSH
5758: LD_EXP 29
5762: PUSH
5763: LD_EXP 19
5767: PUSH
5768: LD_EXP 20
5772: PUSH
5773: LD_EXP 21
5777: PUSH
5778: LD_EXP 22
5782: PUSH
5783: LD_EXP 23
5787: PUSH
5788: LD_EXP 24
5792: PUSH
5793: LD_EXP 25
5797: PUSH
5798: LD_EXP 26
5802: PUSH
5803: LD_EXP 13
5807: PUSH
5808: LD_EXP 27
5812: PUSH
5813: LD_EXP 28
5817: PUSH
5818: LD_EXP 30
5822: PUSH
5823: EMPTY
5824: LIST
5825: LIST
5826: LIST
5827: LIST
5828: LIST
5829: LIST
5830: LIST
5831: LIST
5832: LIST
5833: LIST
5834: LIST
5835: LIST
5836: LIST
5837: LIST
5838: PUSH
5839: LD_VAR 0 3
5843: ADD
5844: DIFF
5845: ST_TO_ADDR
// if not result then
5846: LD_VAR 0 4
5850: NOT
5851: IFFALSE 5855
// exit ;
5853: GO 5883
// result := result [ 1 ] ;
5855: LD_ADDR_VAR 0 4
5859: PUSH
5860: LD_VAR 0 4
5864: PUSH
5865: LD_INT 1
5867: ARRAY
5868: ST_TO_ADDR
// Say ( result , dial ) ;
5869: LD_VAR 0 4
5873: PPUSH
5874: LD_VAR 0 2
5878: PPUSH
5879: CALL_OW 88
// end ;
5883: LD_VAR 0 4
5887: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
5888: LD_INT 0
5890: PPUSH
5891: PPUSH
5892: PPUSH
5893: PPUSH
5894: PPUSH
5895: PPUSH
5896: PPUSH
5897: PPUSH
5898: PPUSH
5899: PPUSH
5900: PPUSH
5901: PPUSH
5902: PPUSH
5903: PPUSH
5904: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
5905: LD_VAR 0 1
5909: NOT
5910: PUSH
5911: LD_VAR 0 2
5915: NOT
5916: OR
5917: PUSH
5918: LD_VAR 0 1
5922: PPUSH
5923: CALL_OW 247
5927: PUSH
5928: LD_INT 3
5930: EQUAL
5931: OR
5932: IFFALSE 5936
// exit ;
5934: GO 7413
// for i = path downto 1 do
5936: LD_ADDR_VAR 0 5
5940: PUSH
5941: DOUBLE
5942: LD_VAR 0 2
5946: INC
5947: ST_TO_ADDR
5948: LD_INT 1
5950: PUSH
5951: FOR_DOWNTO
5952: IFFALSE 6013
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
5954: LD_VAR 0 2
5958: PUSH
5959: LD_VAR 0 5
5963: ARRAY
5964: PUSH
5965: LD_INT 1
5967: ARRAY
5968: PPUSH
5969: LD_VAR 0 2
5973: PUSH
5974: LD_VAR 0 5
5978: ARRAY
5979: PUSH
5980: LD_INT 2
5982: ARRAY
5983: PPUSH
5984: CALL_OW 488
5988: NOT
5989: IFFALSE 6011
// path = Delete ( path , i ) ;
5991: LD_ADDR_VAR 0 2
5995: PUSH
5996: LD_VAR 0 2
6000: PPUSH
6001: LD_VAR 0 5
6005: PPUSH
6006: CALL_OW 3
6010: ST_TO_ADDR
// end ;
6011: GO 5951
6013: POP
6014: POP
// if not path then
6015: LD_VAR 0 2
6019: NOT
6020: IFFALSE 6024
// exit ;
6022: GO 7413
// tmp_path := [ ] ;
6024: LD_ADDR_VAR 0 11
6028: PUSH
6029: EMPTY
6030: ST_TO_ADDR
// if flags then
6031: LD_VAR 0 3
6035: IFFALSE 6109
// begin if flags [ 1 ] then
6037: LD_VAR 0 3
6041: PUSH
6042: LD_INT 1
6044: ARRAY
6045: IFFALSE 6061
// safe_place = flags [ 1 ] ;
6047: LD_ADDR_VAR 0 16
6051: PUSH
6052: LD_VAR 0 3
6056: PUSH
6057: LD_INT 1
6059: ARRAY
6060: ST_TO_ADDR
// if flags [ 2 ] then
6061: LD_VAR 0 3
6065: PUSH
6066: LD_INT 2
6068: ARRAY
6069: IFFALSE 6085
// spot_dist = flags [ 2 ] ;
6071: LD_ADDR_VAR 0 15
6075: PUSH
6076: LD_VAR 0 3
6080: PUSH
6081: LD_INT 2
6083: ARRAY
6084: ST_TO_ADDR
// if flags [ 3 ] then
6085: LD_VAR 0 3
6089: PUSH
6090: LD_INT 3
6092: ARRAY
6093: IFFALSE 6109
// chase_range = flags [ 3 ] ;
6095: LD_ADDR_VAR 0 17
6099: PUSH
6100: LD_VAR 0 3
6104: PUSH
6105: LD_INT 3
6107: ARRAY
6108: ST_TO_ADDR
// end ; if not chase_range then
6109: LD_VAR 0 17
6113: NOT
6114: IFFALSE 6124
// chase_range = 8 ;
6116: LD_ADDR_VAR 0 17
6120: PUSH
6121: LD_INT 8
6123: ST_TO_ADDR
// if not spot_dist then
6124: LD_VAR 0 15
6128: NOT
6129: IFFALSE 6139
// spot_dist := 8 ;
6131: LD_ADDR_VAR 0 15
6135: PUSH
6136: LD_INT 8
6138: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6139: LD_ADDR_VAR 0 18
6143: PUSH
6144: LD_VAR 0 1
6148: PPUSH
6149: CALL_OW 247
6153: PUSH
6154: LD_INT 2
6156: EQUAL
6157: PUSH
6158: LD_VAR 0 1
6162: PPUSH
6163: CALL_OW 262
6167: PUSH
6168: LD_INT 3
6170: NONEQUAL
6171: AND
6172: ST_TO_ADDR
// status = 1 ;
6173: LD_ADDR_VAR 0 12
6177: PUSH
6178: LD_INT 1
6180: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6181: LD_ADDR_VAR 0 11
6185: PUSH
6186: LD_INT 1
6188: PUSH
6189: LD_VAR 0 2
6193: PUSH
6194: LD_INT 1
6196: ARRAY
6197: PUSH
6198: EMPTY
6199: LIST
6200: LIST
6201: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6202: LD_INT 35
6204: PPUSH
6205: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6209: LD_VAR 0 18
6213: PUSH
6214: LD_VAR 0 1
6218: PPUSH
6219: CALL_OW 261
6223: PUSH
6224: LD_INT 20
6226: LESS
6227: AND
6228: IFFALSE 6421
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6230: LD_ADDR_VAR 0 10
6234: PUSH
6235: LD_INT 22
6237: PUSH
6238: LD_VAR 0 1
6242: PPUSH
6243: CALL_OW 255
6247: PUSH
6248: EMPTY
6249: LIST
6250: LIST
6251: PUSH
6252: LD_INT 2
6254: PUSH
6255: LD_INT 30
6257: PUSH
6258: LD_INT 0
6260: PUSH
6261: EMPTY
6262: LIST
6263: LIST
6264: PUSH
6265: LD_INT 30
6267: PUSH
6268: LD_INT 1
6270: PUSH
6271: EMPTY
6272: LIST
6273: LIST
6274: PUSH
6275: LD_INT 30
6277: PUSH
6278: LD_INT 29
6280: PUSH
6281: EMPTY
6282: LIST
6283: LIST
6284: PUSH
6285: LD_INT 30
6287: PUSH
6288: LD_INT 3
6290: PUSH
6291: EMPTY
6292: LIST
6293: LIST
6294: PUSH
6295: EMPTY
6296: LIST
6297: LIST
6298: LIST
6299: LIST
6300: LIST
6301: PUSH
6302: EMPTY
6303: LIST
6304: LIST
6305: PPUSH
6306: CALL_OW 69
6310: ST_TO_ADDR
// if not station then
6311: LD_VAR 0 10
6315: NOT
6316: IFFALSE 6332
// begin SetFuel ( unit , 40 ) ;
6318: LD_VAR 0 1
6322: PPUSH
6323: LD_INT 40
6325: PPUSH
6326: CALL_OW 240
// continue ;
6330: GO 6202
// end ; status := 6 ;
6332: LD_ADDR_VAR 0 12
6336: PUSH
6337: LD_INT 6
6339: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6340: LD_ADDR_VAR 0 10
6344: PUSH
6345: LD_VAR 0 10
6349: PPUSH
6350: LD_VAR 0 1
6354: PPUSH
6355: CALL_OW 74
6359: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6360: LD_INT 35
6362: PPUSH
6363: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6367: LD_VAR 0 1
6371: PPUSH
6372: LD_VAR 0 10
6376: PPUSH
6377: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6381: LD_VAR 0 1
6385: PPUSH
6386: LD_VAR 0 10
6390: PPUSH
6391: CALL_OW 296
6395: PUSH
6396: LD_INT 6
6398: LESS
6399: IFFALSE 6360
// SetFuel ( unit , 100 ) ;
6401: LD_VAR 0 1
6405: PPUSH
6406: LD_INT 100
6408: PPUSH
6409: CALL_OW 240
// status := 5 ;
6413: LD_ADDR_VAR 0 12
6417: PUSH
6418: LD_INT 5
6420: ST_TO_ADDR
// end ; if status = 1 then
6421: LD_VAR 0 12
6425: PUSH
6426: LD_INT 1
6428: EQUAL
6429: IFFALSE 6743
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6431: LD_ADDR_VAR 0 13
6435: PUSH
6436: LD_INT 81
6438: PUSH
6439: LD_VAR 0 1
6443: PPUSH
6444: CALL_OW 255
6448: PUSH
6449: EMPTY
6450: LIST
6451: LIST
6452: PUSH
6453: LD_INT 91
6455: PUSH
6456: LD_VAR 0 1
6460: PUSH
6461: LD_VAR 0 15
6465: PUSH
6466: EMPTY
6467: LIST
6468: LIST
6469: LIST
6470: PUSH
6471: LD_INT 101
6473: PUSH
6474: LD_INT 1
6476: PUSH
6477: EMPTY
6478: LIST
6479: LIST
6480: PUSH
6481: EMPTY
6482: LIST
6483: LIST
6484: LIST
6485: PPUSH
6486: CALL_OW 69
6490: ST_TO_ADDR
// if ( enemy ) then
6491: LD_VAR 0 13
6495: IFFALSE 6545
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6497: LD_VAR 0 1
6501: PPUSH
6502: LD_VAR 0 1
6506: PPUSH
6507: CALL_OW 250
6511: PPUSH
6512: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6516: LD_VAR 0 1
6520: PPUSH
6521: LD_VAR 0 1
6525: PPUSH
6526: CALL_OW 251
6530: PPUSH
6531: CALL_OW 232
// status = 2 ;
6535: LD_ADDR_VAR 0 12
6539: PUSH
6540: LD_INT 2
6542: ST_TO_ADDR
// end else
6543: GO 6743
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6545: LD_VAR 0 1
6549: PPUSH
6550: LD_VAR 0 11
6554: PUSH
6555: LD_INT 2
6557: ARRAY
6558: PUSH
6559: LD_INT 1
6561: ARRAY
6562: PPUSH
6563: LD_VAR 0 11
6567: PUSH
6568: LD_INT 2
6570: ARRAY
6571: PUSH
6572: LD_INT 2
6574: ARRAY
6575: PPUSH
6576: CALL_OW 307
6580: PUSH
6581: LD_VAR 0 1
6585: PPUSH
6586: CALL_OW 314
6590: NOT
6591: OR
6592: IFFALSE 6743
// begin wait ( 0 0$2 ) ;
6594: LD_INT 70
6596: PPUSH
6597: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6601: LD_VAR 0 11
6605: PUSH
6606: LD_INT 1
6608: ARRAY
6609: PUSH
6610: LD_INT 1
6612: PLUS
6613: PUSH
6614: LD_VAR 0 2
6618: GREATER
6619: IFFALSE 6644
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6621: LD_ADDR_VAR 0 11
6625: PUSH
6626: LD_VAR 0 11
6630: PPUSH
6631: LD_INT 1
6633: PPUSH
6634: LD_INT 1
6636: PPUSH
6637: CALL_OW 1
6641: ST_TO_ADDR
6642: GO 6675
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
6644: LD_ADDR_VAR 0 11
6648: PUSH
6649: LD_VAR 0 11
6653: PPUSH
6654: LD_INT 1
6656: PPUSH
6657: LD_VAR 0 11
6661: PUSH
6662: LD_INT 1
6664: ARRAY
6665: PUSH
6666: LD_INT 1
6668: PLUS
6669: PPUSH
6670: CALL_OW 1
6674: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
6675: LD_ADDR_VAR 0 11
6679: PUSH
6680: LD_VAR 0 11
6684: PPUSH
6685: LD_INT 2
6687: PPUSH
6688: LD_VAR 0 2
6692: PUSH
6693: LD_VAR 0 11
6697: PUSH
6698: LD_INT 1
6700: ARRAY
6701: ARRAY
6702: PPUSH
6703: CALL_OW 1
6707: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
6708: LD_VAR 0 1
6712: PPUSH
6713: LD_VAR 0 11
6717: PUSH
6718: LD_INT 2
6720: ARRAY
6721: PUSH
6722: LD_INT 1
6724: ARRAY
6725: PPUSH
6726: LD_VAR 0 11
6730: PUSH
6731: LD_INT 2
6733: ARRAY
6734: PUSH
6735: LD_INT 2
6737: ARRAY
6738: PPUSH
6739: CALL_OW 114
// end ; end ; end ; if status = 2 then
6743: LD_VAR 0 12
6747: PUSH
6748: LD_INT 2
6750: EQUAL
6751: IFFALSE 6972
// begin if GetLives ( unit ) < 650 and safe_place then
6753: LD_VAR 0 1
6757: PPUSH
6758: CALL_OW 256
6762: PUSH
6763: LD_INT 650
6765: LESS
6766: PUSH
6767: LD_VAR 0 16
6771: AND
6772: IFFALSE 6784
// begin status = 3 ;
6774: LD_ADDR_VAR 0 12
6778: PUSH
6779: LD_INT 3
6781: ST_TO_ADDR
// continue ;
6782: GO 6202
// end ; x := GetRememberedX ( unit ) ;
6784: LD_ADDR_VAR 0 6
6788: PUSH
6789: LD_VAR 0 1
6793: PPUSH
6794: CALL_OW 252
6798: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
6799: LD_ADDR_VAR 0 7
6803: PUSH
6804: LD_VAR 0 1
6808: PPUSH
6809: CALL_OW 253
6813: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
6814: LD_ADDR_VAR 0 13
6818: PUSH
6819: LD_INT 81
6821: PUSH
6822: LD_VAR 0 1
6826: PPUSH
6827: CALL_OW 255
6831: PUSH
6832: EMPTY
6833: LIST
6834: LIST
6835: PUSH
6836: LD_INT 92
6838: PUSH
6839: LD_VAR 0 6
6843: PUSH
6844: LD_VAR 0 7
6848: PUSH
6849: LD_VAR 0 15
6853: PUSH
6854: EMPTY
6855: LIST
6856: LIST
6857: LIST
6858: LIST
6859: PUSH
6860: LD_INT 101
6862: PUSH
6863: LD_INT 1
6865: PUSH
6866: EMPTY
6867: LIST
6868: LIST
6869: PUSH
6870: EMPTY
6871: LIST
6872: LIST
6873: LIST
6874: PPUSH
6875: CALL_OW 69
6879: ST_TO_ADDR
// if enemy then
6880: LD_VAR 0 13
6884: IFFALSE 6955
// begin e := NearestUnitToUnit ( enemy , unit ) ;
6886: LD_ADDR_VAR 0 14
6890: PUSH
6891: LD_VAR 0 13
6895: PPUSH
6896: LD_VAR 0 1
6900: PPUSH
6901: CALL_OW 74
6905: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
6906: LD_VAR 0 14
6910: PPUSH
6911: LD_VAR 0 6
6915: PPUSH
6916: LD_VAR 0 7
6920: PPUSH
6921: CALL_OW 297
6925: PUSH
6926: LD_VAR 0 15
6930: PUSH
6931: LD_VAR 0 17
6935: PLUS
6936: LESS
6937: IFFALSE 6953
// ComAttackUnit ( unit , e ) ;
6939: LD_VAR 0 1
6943: PPUSH
6944: LD_VAR 0 14
6948: PPUSH
6949: CALL_OW 115
// end else
6953: GO 6972
// begin ComStop ( unit ) ;
6955: LD_VAR 0 1
6959: PPUSH
6960: CALL_OW 141
// status = 5 ;
6964: LD_ADDR_VAR 0 12
6968: PUSH
6969: LD_INT 5
6971: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
6972: LD_VAR 0 12
6976: PUSH
6977: LD_INT 3
6979: EQUAL
6980: PUSH
6981: LD_VAR 0 16
6985: AND
6986: IFFALSE 7072
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
6988: LD_VAR 0 1
6992: PPUSH
6993: LD_VAR 0 16
6997: PUSH
6998: LD_INT 1
7000: ARRAY
7001: PPUSH
7002: LD_VAR 0 16
7006: PUSH
7007: LD_INT 2
7009: ARRAY
7010: PPUSH
7011: CALL_OW 111
// wait ( 0 0$1 ) ;
7015: LD_INT 35
7017: PPUSH
7018: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7022: LD_VAR 0 1
7026: PPUSH
7027: LD_VAR 0 16
7031: PUSH
7032: LD_INT 1
7034: ARRAY
7035: PPUSH
7036: LD_VAR 0 16
7040: PUSH
7041: LD_INT 2
7043: ARRAY
7044: PPUSH
7045: CALL_OW 297
7049: PUSH
7050: LD_INT 4
7052: LESS
7053: IFFALSE 6988
// ComStop ( unit ) ;
7055: LD_VAR 0 1
7059: PPUSH
7060: CALL_OW 141
// status = 4 ;
7064: LD_ADDR_VAR 0 12
7068: PUSH
7069: LD_INT 4
7071: ST_TO_ADDR
// end ; if status = 4 then
7072: LD_VAR 0 12
7076: PUSH
7077: LD_INT 4
7079: EQUAL
7080: IFFALSE 7112
// begin repeat wait ( 0 0$1 ) ;
7082: LD_INT 35
7084: PPUSH
7085: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7089: LD_VAR 0 1
7093: PPUSH
7094: CALL_OW 256
7098: PUSH
7099: LD_INT 1000
7101: EQUAL
7102: IFFALSE 7082
// status = 5 ;
7104: LD_ADDR_VAR 0 12
7108: PUSH
7109: LD_INT 5
7111: ST_TO_ADDR
// end ; if status = 5 then
7112: LD_VAR 0 12
7116: PUSH
7117: LD_INT 5
7119: EQUAL
7120: IFFALSE 7402
// begin p := 999 ;
7122: LD_ADDR_VAR 0 9
7126: PUSH
7127: LD_INT 999
7129: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7130: LD_ADDR_VAR 0 14
7134: PUSH
7135: LD_VAR 0 11
7139: PUSH
7140: LD_INT 2
7142: ARRAY
7143: PUSH
7144: LD_INT 1
7146: ARRAY
7147: PUSH
7148: LD_VAR 0 11
7152: PUSH
7153: LD_INT 2
7155: ARRAY
7156: PUSH
7157: LD_INT 2
7159: ARRAY
7160: PUSH
7161: EMPTY
7162: LIST
7163: LIST
7164: ST_TO_ADDR
// c := 1 ;
7165: LD_ADDR_VAR 0 8
7169: PUSH
7170: LD_INT 1
7172: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7173: LD_ADDR_VAR 0 5
7177: PUSH
7178: DOUBLE
7179: LD_INT 1
7181: DEC
7182: ST_TO_ADDR
7183: LD_VAR 0 11
7187: PUSH
7188: LD_INT 2
7190: ARRAY
7191: PUSH
7192: LD_INT 2
7194: DIV
7195: PUSH
7196: FOR_TO
7197: IFFALSE 7329
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7199: LD_ADDR_VAR 0 6
7203: PUSH
7204: LD_VAR 0 1
7208: PPUSH
7209: LD_VAR 0 11
7213: PUSH
7214: LD_INT 2
7216: ARRAY
7217: PUSH
7218: LD_VAR 0 8
7222: ARRAY
7223: PPUSH
7224: LD_VAR 0 11
7228: PUSH
7229: LD_INT 2
7231: ARRAY
7232: PUSH
7233: LD_VAR 0 8
7237: PUSH
7238: LD_INT 1
7240: PLUS
7241: ARRAY
7242: PPUSH
7243: CALL_OW 297
7247: ST_TO_ADDR
// if x < p then
7248: LD_VAR 0 6
7252: PUSH
7253: LD_VAR 0 9
7257: LESS
7258: IFFALSE 7313
// begin p := x ;
7260: LD_ADDR_VAR 0 9
7264: PUSH
7265: LD_VAR 0 6
7269: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7270: LD_ADDR_VAR 0 14
7274: PUSH
7275: LD_VAR 0 11
7279: PUSH
7280: LD_INT 2
7282: ARRAY
7283: PUSH
7284: LD_VAR 0 8
7288: ARRAY
7289: PUSH
7290: LD_VAR 0 11
7294: PUSH
7295: LD_INT 2
7297: ARRAY
7298: PUSH
7299: LD_VAR 0 8
7303: PUSH
7304: LD_INT 1
7306: PLUS
7307: ARRAY
7308: PUSH
7309: EMPTY
7310: LIST
7311: LIST
7312: ST_TO_ADDR
// end ; c = c + 2 ;
7313: LD_ADDR_VAR 0 8
7317: PUSH
7318: LD_VAR 0 8
7322: PUSH
7323: LD_INT 2
7325: PLUS
7326: ST_TO_ADDR
// end ;
7327: GO 7196
7329: POP
7330: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7331: LD_VAR 0 1
7335: PPUSH
7336: LD_VAR 0 14
7340: PUSH
7341: LD_INT 1
7343: ARRAY
7344: PPUSH
7345: LD_VAR 0 14
7349: PUSH
7350: LD_INT 2
7352: ARRAY
7353: PPUSH
7354: CALL_OW 111
// wait ( 0 0$1 ) ;
7358: LD_INT 35
7360: PPUSH
7361: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7365: LD_VAR 0 1
7369: PPUSH
7370: LD_VAR 0 14
7374: PUSH
7375: LD_INT 1
7377: ARRAY
7378: PPUSH
7379: LD_VAR 0 14
7383: PUSH
7384: LD_INT 2
7386: ARRAY
7387: PPUSH
7388: CALL_OW 307
7392: IFFALSE 7331
// status = 1 ;
7394: LD_ADDR_VAR 0 12
7398: PUSH
7399: LD_INT 1
7401: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7402: LD_VAR 0 1
7406: PPUSH
7407: CALL_OW 301
7411: IFFALSE 6202
// end ;
7413: LD_VAR 0 4
7417: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7418: LD_INT 0
7420: PPUSH
7421: PPUSH
7422: PPUSH
7423: PPUSH
7424: PPUSH
7425: PPUSH
7426: PPUSH
7427: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7428: LD_VAR 0 1
7432: NOT
7433: PUSH
7434: LD_VAR 0 3
7438: NOT
7439: OR
7440: PUSH
7441: LD_VAR 0 4
7445: PUSH
7446: LD_INT 1
7448: PUSH
7449: LD_INT 2
7451: PUSH
7452: LD_INT 0
7454: PUSH
7455: EMPTY
7456: LIST
7457: LIST
7458: LIST
7459: IN
7460: NOT
7461: OR
7462: PUSH
7463: LD_VAR 0 6
7467: NOT
7468: OR
7469: PUSH
7470: LD_VAR 0 7
7474: NOT
7475: OR
7476: IFFALSE 7480
// exit ;
7478: GO 7871
// sex_id :=  ;
7480: LD_ADDR_VAR 0 14
7484: PUSH
7485: LD_STRING 
7487: ST_TO_ADDR
// case class of 1 :
7488: LD_VAR 0 5
7492: PUSH
7493: LD_INT 1
7495: DOUBLE
7496: EQUAL
7497: IFTRUE 7501
7499: GO 7512
7501: POP
// class_id := Sol ; 2 :
7502: LD_ADDR_VAR 0 15
7506: PUSH
7507: LD_STRING Sol
7509: ST_TO_ADDR
7510: GO 7570
7512: LD_INT 2
7514: DOUBLE
7515: EQUAL
7516: IFTRUE 7520
7518: GO 7531
7520: POP
// class_id := Eng ; 3 :
7521: LD_ADDR_VAR 0 15
7525: PUSH
7526: LD_STRING Eng
7528: ST_TO_ADDR
7529: GO 7570
7531: LD_INT 3
7533: DOUBLE
7534: EQUAL
7535: IFTRUE 7539
7537: GO 7550
7539: POP
// class_id := Mech ; 4 :
7540: LD_ADDR_VAR 0 15
7544: PUSH
7545: LD_STRING Mech
7547: ST_TO_ADDR
7548: GO 7570
7550: LD_INT 4
7552: DOUBLE
7553: EQUAL
7554: IFTRUE 7558
7556: GO 7569
7558: POP
// class_id := Sci ; end ;
7559: LD_ADDR_VAR 0 15
7563: PUSH
7564: LD_STRING Sci
7566: ST_TO_ADDR
7567: GO 7570
7569: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7570: LD_ADDR_VAR 0 11
7574: PUSH
7575: LD_VAR 0 1
7579: PPUSH
7580: LD_INT 25
7582: PUSH
7583: LD_VAR 0 5
7587: PUSH
7588: EMPTY
7589: LIST
7590: LIST
7591: PPUSH
7592: CALL_OW 72
7596: ST_TO_ADDR
// if tmp then
7597: LD_VAR 0 11
7601: IFFALSE 7613
// units := tmp ;
7603: LD_ADDR_VAR 0 1
7607: PUSH
7608: LD_VAR 0 11
7612: ST_TO_ADDR
// if sex then
7613: LD_VAR 0 4
7617: IFFALSE 7673
// begin if sex = sex_female then
7619: LD_VAR 0 4
7623: PUSH
7624: LD_INT 2
7626: EQUAL
7627: IFFALSE 7637
// sex_id := F ;
7629: LD_ADDR_VAR 0 14
7633: PUSH
7634: LD_STRING F
7636: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7637: LD_ADDR_VAR 0 1
7641: PUSH
7642: LD_VAR 0 1
7646: PPUSH
7647: LD_INT 26
7649: PUSH
7650: LD_VAR 0 4
7654: PUSH
7655: EMPTY
7656: LIST
7657: LIST
7658: PPUSH
7659: CALL_OW 72
7663: ST_TO_ADDR
// if not units then
7664: LD_VAR 0 1
7668: NOT
7669: IFFALSE 7673
// exit ;
7671: GO 7871
// end ; unit_id := id ;
7673: LD_ADDR_VAR 0 12
7677: PUSH
7678: LD_VAR 0 6
7682: ST_TO_ADDR
// if unit_id > units then
7683: LD_VAR 0 12
7687: PUSH
7688: LD_VAR 0 1
7692: GREATER
7693: IFFALSE 7703
// unit_id := 1 ;
7695: LD_ADDR_VAR 0 12
7699: PUSH
7700: LD_INT 1
7702: ST_TO_ADDR
// if not units [ unit_id ] then
7703: LD_VAR 0 1
7707: PUSH
7708: LD_VAR 0 12
7712: ARRAY
7713: NOT
7714: IFFALSE 7718
// exit ;
7716: GO 7871
// unit := units [ unit_id ] ;
7718: LD_ADDR_VAR 0 10
7722: PUSH
7723: LD_VAR 0 1
7727: PUSH
7728: LD_VAR 0 12
7732: ARRAY
7733: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
7734: LD_ADDR_VAR 0 13
7738: PUSH
7739: LD_STRING D
7741: PUSH
7742: LD_VAR 0 3
7746: STR
7747: PUSH
7748: LD_STRING -
7750: STR
7751: PUSH
7752: LD_VAR 0 14
7756: STR
7757: PUSH
7758: LD_VAR 0 15
7762: STR
7763: PUSH
7764: LD_VAR 0 6
7768: STR
7769: PUSH
7770: LD_STRING -
7772: STR
7773: PUSH
7774: LD_VAR 0 7
7778: STR
7779: ST_TO_ADDR
// case type of 0 :
7780: LD_VAR 0 2
7784: PUSH
7785: LD_INT 0
7787: DOUBLE
7788: EQUAL
7789: IFTRUE 7793
7791: GO 7810
7793: POP
// Say ( unit , dialog_id ) ; 1 :
7794: LD_VAR 0 10
7798: PPUSH
7799: LD_VAR 0 13
7803: PPUSH
7804: CALL_OW 88
7808: GO 7861
7810: LD_INT 1
7812: DOUBLE
7813: EQUAL
7814: IFTRUE 7818
7816: GO 7835
7818: POP
// SayRadio ( unit , dialog_id ) ; 2 :
7819: LD_VAR 0 10
7823: PPUSH
7824: LD_VAR 0 13
7828: PPUSH
7829: CALL_OW 94
7833: GO 7861
7835: LD_INT 2
7837: DOUBLE
7838: EQUAL
7839: IFTRUE 7843
7841: GO 7860
7843: POP
// ForceSay ( unit , dialog_id ) ; end ;
7844: LD_VAR 0 10
7848: PPUSH
7849: LD_VAR 0 13
7853: PPUSH
7854: CALL_OW 91
7858: GO 7861
7860: POP
// result := unit ;
7861: LD_ADDR_VAR 0 8
7865: PUSH
7866: LD_VAR 0 10
7870: ST_TO_ADDR
// end ;
7871: LD_VAR 0 8
7875: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
7876: LD_INT 0
7878: PPUSH
7879: PPUSH
7880: PPUSH
7881: PPUSH
7882: PPUSH
7883: PPUSH
7884: PPUSH
// result := array ;
7885: LD_ADDR_VAR 0 5
7889: PUSH
7890: LD_VAR 0 1
7894: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
7895: LD_VAR 0 1
7899: NOT
7900: PUSH
7901: LD_VAR 0 2
7905: NOT
7906: OR
7907: PUSH
7908: LD_VAR 0 3
7912: NOT
7913: OR
7914: PUSH
7915: LD_VAR 0 2
7919: PUSH
7920: LD_VAR 0 1
7924: GREATER
7925: OR
7926: PUSH
7927: LD_VAR 0 3
7931: PUSH
7932: LD_VAR 0 1
7936: GREATER
7937: OR
7938: IFFALSE 7942
// exit ;
7940: GO 8238
// if direction then
7942: LD_VAR 0 4
7946: IFFALSE 8010
// begin d := 1 ;
7948: LD_ADDR_VAR 0 9
7952: PUSH
7953: LD_INT 1
7955: ST_TO_ADDR
// if i_from > i_to then
7956: LD_VAR 0 2
7960: PUSH
7961: LD_VAR 0 3
7965: GREATER
7966: IFFALSE 7992
// length := ( array - i_from ) + i_to else
7968: LD_ADDR_VAR 0 11
7972: PUSH
7973: LD_VAR 0 1
7977: PUSH
7978: LD_VAR 0 2
7982: MINUS
7983: PUSH
7984: LD_VAR 0 3
7988: PLUS
7989: ST_TO_ADDR
7990: GO 8008
// length := i_to - i_from ;
7992: LD_ADDR_VAR 0 11
7996: PUSH
7997: LD_VAR 0 3
8001: PUSH
8002: LD_VAR 0 2
8006: MINUS
8007: ST_TO_ADDR
// end else
8008: GO 8071
// begin d := - 1 ;
8010: LD_ADDR_VAR 0 9
8014: PUSH
8015: LD_INT 1
8017: NEG
8018: ST_TO_ADDR
// if i_from > i_to then
8019: LD_VAR 0 2
8023: PUSH
8024: LD_VAR 0 3
8028: GREATER
8029: IFFALSE 8049
// length := i_from - i_to else
8031: LD_ADDR_VAR 0 11
8035: PUSH
8036: LD_VAR 0 2
8040: PUSH
8041: LD_VAR 0 3
8045: MINUS
8046: ST_TO_ADDR
8047: GO 8071
// length := ( array - i_to ) + i_from ;
8049: LD_ADDR_VAR 0 11
8053: PUSH
8054: LD_VAR 0 1
8058: PUSH
8059: LD_VAR 0 3
8063: MINUS
8064: PUSH
8065: LD_VAR 0 2
8069: PLUS
8070: ST_TO_ADDR
// end ; if not length then
8071: LD_VAR 0 11
8075: NOT
8076: IFFALSE 8080
// exit ;
8078: GO 8238
// tmp := array ;
8080: LD_ADDR_VAR 0 10
8084: PUSH
8085: LD_VAR 0 1
8089: ST_TO_ADDR
// for i = 1 to length do
8090: LD_ADDR_VAR 0 6
8094: PUSH
8095: DOUBLE
8096: LD_INT 1
8098: DEC
8099: ST_TO_ADDR
8100: LD_VAR 0 11
8104: PUSH
8105: FOR_TO
8106: IFFALSE 8226
// begin for j = 1 to array do
8108: LD_ADDR_VAR 0 7
8112: PUSH
8113: DOUBLE
8114: LD_INT 1
8116: DEC
8117: ST_TO_ADDR
8118: LD_VAR 0 1
8122: PUSH
8123: FOR_TO
8124: IFFALSE 8212
// begin k := j + d ;
8126: LD_ADDR_VAR 0 8
8130: PUSH
8131: LD_VAR 0 7
8135: PUSH
8136: LD_VAR 0 9
8140: PLUS
8141: ST_TO_ADDR
// if k > array then
8142: LD_VAR 0 8
8146: PUSH
8147: LD_VAR 0 1
8151: GREATER
8152: IFFALSE 8162
// k := 1 ;
8154: LD_ADDR_VAR 0 8
8158: PUSH
8159: LD_INT 1
8161: ST_TO_ADDR
// if not k then
8162: LD_VAR 0 8
8166: NOT
8167: IFFALSE 8179
// k := array ;
8169: LD_ADDR_VAR 0 8
8173: PUSH
8174: LD_VAR 0 1
8178: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8179: LD_ADDR_VAR 0 10
8183: PUSH
8184: LD_VAR 0 10
8188: PPUSH
8189: LD_VAR 0 8
8193: PPUSH
8194: LD_VAR 0 1
8198: PUSH
8199: LD_VAR 0 7
8203: ARRAY
8204: PPUSH
8205: CALL_OW 1
8209: ST_TO_ADDR
// end ;
8210: GO 8123
8212: POP
8213: POP
// array := tmp ;
8214: LD_ADDR_VAR 0 1
8218: PUSH
8219: LD_VAR 0 10
8223: ST_TO_ADDR
// end ;
8224: GO 8105
8226: POP
8227: POP
// result := array ;
8228: LD_ADDR_VAR 0 5
8232: PUSH
8233: LD_VAR 0 1
8237: ST_TO_ADDR
// end ;
8238: LD_VAR 0 5
8242: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8243: LD_INT 0
8245: PPUSH
8246: PPUSH
8247: PPUSH
8248: PPUSH
8249: PPUSH
8250: PPUSH
8251: PPUSH
8252: PPUSH
8253: PPUSH
8254: PPUSH
8255: PPUSH
8256: PPUSH
8257: PPUSH
8258: PPUSH
8259: PPUSH
8260: PPUSH
8261: PPUSH
8262: PPUSH
8263: PPUSH
8264: PPUSH
8265: PPUSH
8266: PPUSH
8267: PPUSH
8268: PPUSH
8269: PPUSH
8270: PPUSH
8271: PPUSH
8272: PPUSH
8273: PPUSH
8274: PPUSH
8275: PPUSH
8276: PPUSH
8277: PPUSH
8278: PPUSH
8279: PPUSH
8280: PPUSH
8281: PPUSH
8282: PPUSH
8283: PPUSH
8284: PPUSH
8285: PPUSH
8286: PPUSH
8287: PPUSH
8288: PPUSH
8289: PPUSH
8290: PPUSH
8291: PPUSH
8292: PPUSH
8293: PPUSH
8294: PPUSH
8295: PPUSH
8296: PPUSH
8297: PPUSH
8298: PPUSH
8299: PPUSH
8300: PPUSH
8301: PPUSH
8302: PPUSH
// result = [ ] ;
8303: LD_ADDR_VAR 0 7
8307: PUSH
8308: EMPTY
8309: ST_TO_ADDR
// temp_list = [ ] ;
8310: LD_ADDR_VAR 0 9
8314: PUSH
8315: EMPTY
8316: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8317: LD_VAR 0 4
8321: PUSH
8322: LD_INT 0
8324: PUSH
8325: LD_INT 1
8327: PUSH
8328: LD_INT 2
8330: PUSH
8331: LD_INT 3
8333: PUSH
8334: LD_INT 4
8336: PUSH
8337: LD_INT 5
8339: PUSH
8340: EMPTY
8341: LIST
8342: LIST
8343: LIST
8344: LIST
8345: LIST
8346: LIST
8347: IN
8348: NOT
8349: PUSH
8350: LD_VAR 0 1
8354: PUSH
8355: LD_INT 0
8357: PUSH
8358: LD_INT 1
8360: PUSH
8361: EMPTY
8362: LIST
8363: LIST
8364: IN
8365: PUSH
8366: LD_VAR 0 5
8370: PUSH
8371: LD_INT 1
8373: PUSH
8374: LD_INT 2
8376: PUSH
8377: LD_INT 3
8379: PUSH
8380: EMPTY
8381: LIST
8382: LIST
8383: LIST
8384: IN
8385: NOT
8386: AND
8387: OR
8388: IFFALSE 8392
// exit ;
8390: GO 26777
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8392: LD_VAR 0 1
8396: PUSH
8397: LD_INT 6
8399: PUSH
8400: LD_INT 7
8402: PUSH
8403: LD_INT 8
8405: PUSH
8406: LD_INT 13
8408: PUSH
8409: LD_INT 12
8411: PUSH
8412: LD_INT 15
8414: PUSH
8415: LD_INT 11
8417: PUSH
8418: LD_INT 14
8420: PUSH
8421: LD_INT 10
8423: PUSH
8424: EMPTY
8425: LIST
8426: LIST
8427: LIST
8428: LIST
8429: LIST
8430: LIST
8431: LIST
8432: LIST
8433: LIST
8434: IN
8435: IFFALSE 8445
// btype = b_lab ;
8437: LD_ADDR_VAR 0 1
8441: PUSH
8442: LD_INT 6
8444: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8445: LD_VAR 0 6
8449: PUSH
8450: LD_INT 0
8452: PUSH
8453: LD_INT 1
8455: PUSH
8456: LD_INT 2
8458: PUSH
8459: EMPTY
8460: LIST
8461: LIST
8462: LIST
8463: IN
8464: NOT
8465: PUSH
8466: LD_VAR 0 1
8470: PUSH
8471: LD_INT 0
8473: PUSH
8474: LD_INT 1
8476: PUSH
8477: LD_INT 2
8479: PUSH
8480: LD_INT 3
8482: PUSH
8483: LD_INT 6
8485: PUSH
8486: LD_INT 36
8488: PUSH
8489: LD_INT 4
8491: PUSH
8492: LD_INT 5
8494: PUSH
8495: LD_INT 31
8497: PUSH
8498: LD_INT 32
8500: PUSH
8501: LD_INT 33
8503: PUSH
8504: EMPTY
8505: LIST
8506: LIST
8507: LIST
8508: LIST
8509: LIST
8510: LIST
8511: LIST
8512: LIST
8513: LIST
8514: LIST
8515: LIST
8516: IN
8517: NOT
8518: PUSH
8519: LD_VAR 0 6
8523: PUSH
8524: LD_INT 1
8526: EQUAL
8527: AND
8528: OR
8529: PUSH
8530: LD_VAR 0 1
8534: PUSH
8535: LD_INT 2
8537: PUSH
8538: LD_INT 3
8540: PUSH
8541: EMPTY
8542: LIST
8543: LIST
8544: IN
8545: NOT
8546: PUSH
8547: LD_VAR 0 6
8551: PUSH
8552: LD_INT 2
8554: EQUAL
8555: AND
8556: OR
8557: IFFALSE 8567
// mode = 0 ;
8559: LD_ADDR_VAR 0 6
8563: PUSH
8564: LD_INT 0
8566: ST_TO_ADDR
// case mode of 0 :
8567: LD_VAR 0 6
8571: PUSH
8572: LD_INT 0
8574: DOUBLE
8575: EQUAL
8576: IFTRUE 8580
8578: GO 20033
8580: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8581: LD_ADDR_VAR 0 11
8585: PUSH
8586: LD_INT 0
8588: PUSH
8589: LD_INT 0
8591: PUSH
8592: EMPTY
8593: LIST
8594: LIST
8595: PUSH
8596: LD_INT 0
8598: PUSH
8599: LD_INT 1
8601: NEG
8602: PUSH
8603: EMPTY
8604: LIST
8605: LIST
8606: PUSH
8607: LD_INT 1
8609: PUSH
8610: LD_INT 0
8612: PUSH
8613: EMPTY
8614: LIST
8615: LIST
8616: PUSH
8617: LD_INT 1
8619: PUSH
8620: LD_INT 1
8622: PUSH
8623: EMPTY
8624: LIST
8625: LIST
8626: PUSH
8627: LD_INT 0
8629: PUSH
8630: LD_INT 1
8632: PUSH
8633: EMPTY
8634: LIST
8635: LIST
8636: PUSH
8637: LD_INT 1
8639: NEG
8640: PUSH
8641: LD_INT 0
8643: PUSH
8644: EMPTY
8645: LIST
8646: LIST
8647: PUSH
8648: LD_INT 1
8650: NEG
8651: PUSH
8652: LD_INT 1
8654: NEG
8655: PUSH
8656: EMPTY
8657: LIST
8658: LIST
8659: PUSH
8660: LD_INT 1
8662: NEG
8663: PUSH
8664: LD_INT 2
8666: NEG
8667: PUSH
8668: EMPTY
8669: LIST
8670: LIST
8671: PUSH
8672: LD_INT 0
8674: PUSH
8675: LD_INT 2
8677: NEG
8678: PUSH
8679: EMPTY
8680: LIST
8681: LIST
8682: PUSH
8683: LD_INT 1
8685: PUSH
8686: LD_INT 1
8688: NEG
8689: PUSH
8690: EMPTY
8691: LIST
8692: LIST
8693: PUSH
8694: LD_INT 1
8696: PUSH
8697: LD_INT 2
8699: PUSH
8700: EMPTY
8701: LIST
8702: LIST
8703: PUSH
8704: LD_INT 0
8706: PUSH
8707: LD_INT 2
8709: PUSH
8710: EMPTY
8711: LIST
8712: LIST
8713: PUSH
8714: LD_INT 1
8716: NEG
8717: PUSH
8718: LD_INT 1
8720: PUSH
8721: EMPTY
8722: LIST
8723: LIST
8724: PUSH
8725: LD_INT 1
8727: PUSH
8728: LD_INT 3
8730: PUSH
8731: EMPTY
8732: LIST
8733: LIST
8734: PUSH
8735: LD_INT 0
8737: PUSH
8738: LD_INT 3
8740: PUSH
8741: EMPTY
8742: LIST
8743: LIST
8744: PUSH
8745: LD_INT 1
8747: NEG
8748: PUSH
8749: LD_INT 2
8751: PUSH
8752: EMPTY
8753: LIST
8754: LIST
8755: PUSH
8756: EMPTY
8757: LIST
8758: LIST
8759: LIST
8760: LIST
8761: LIST
8762: LIST
8763: LIST
8764: LIST
8765: LIST
8766: LIST
8767: LIST
8768: LIST
8769: LIST
8770: LIST
8771: LIST
8772: LIST
8773: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
8774: LD_ADDR_VAR 0 12
8778: PUSH
8779: LD_INT 0
8781: PUSH
8782: LD_INT 0
8784: PUSH
8785: EMPTY
8786: LIST
8787: LIST
8788: PUSH
8789: LD_INT 0
8791: PUSH
8792: LD_INT 1
8794: NEG
8795: PUSH
8796: EMPTY
8797: LIST
8798: LIST
8799: PUSH
8800: LD_INT 1
8802: PUSH
8803: LD_INT 0
8805: PUSH
8806: EMPTY
8807: LIST
8808: LIST
8809: PUSH
8810: LD_INT 1
8812: PUSH
8813: LD_INT 1
8815: PUSH
8816: EMPTY
8817: LIST
8818: LIST
8819: PUSH
8820: LD_INT 0
8822: PUSH
8823: LD_INT 1
8825: PUSH
8826: EMPTY
8827: LIST
8828: LIST
8829: PUSH
8830: LD_INT 1
8832: NEG
8833: PUSH
8834: LD_INT 0
8836: PUSH
8837: EMPTY
8838: LIST
8839: LIST
8840: PUSH
8841: LD_INT 1
8843: NEG
8844: PUSH
8845: LD_INT 1
8847: NEG
8848: PUSH
8849: EMPTY
8850: LIST
8851: LIST
8852: PUSH
8853: LD_INT 1
8855: PUSH
8856: LD_INT 1
8858: NEG
8859: PUSH
8860: EMPTY
8861: LIST
8862: LIST
8863: PUSH
8864: LD_INT 2
8866: PUSH
8867: LD_INT 0
8869: PUSH
8870: EMPTY
8871: LIST
8872: LIST
8873: PUSH
8874: LD_INT 2
8876: PUSH
8877: LD_INT 1
8879: PUSH
8880: EMPTY
8881: LIST
8882: LIST
8883: PUSH
8884: LD_INT 1
8886: NEG
8887: PUSH
8888: LD_INT 1
8890: PUSH
8891: EMPTY
8892: LIST
8893: LIST
8894: PUSH
8895: LD_INT 2
8897: NEG
8898: PUSH
8899: LD_INT 0
8901: PUSH
8902: EMPTY
8903: LIST
8904: LIST
8905: PUSH
8906: LD_INT 2
8908: NEG
8909: PUSH
8910: LD_INT 1
8912: NEG
8913: PUSH
8914: EMPTY
8915: LIST
8916: LIST
8917: PUSH
8918: LD_INT 2
8920: NEG
8921: PUSH
8922: LD_INT 1
8924: PUSH
8925: EMPTY
8926: LIST
8927: LIST
8928: PUSH
8929: LD_INT 3
8931: NEG
8932: PUSH
8933: LD_INT 0
8935: PUSH
8936: EMPTY
8937: LIST
8938: LIST
8939: PUSH
8940: LD_INT 3
8942: NEG
8943: PUSH
8944: LD_INT 1
8946: NEG
8947: PUSH
8948: EMPTY
8949: LIST
8950: LIST
8951: PUSH
8952: EMPTY
8953: LIST
8954: LIST
8955: LIST
8956: LIST
8957: LIST
8958: LIST
8959: LIST
8960: LIST
8961: LIST
8962: LIST
8963: LIST
8964: LIST
8965: LIST
8966: LIST
8967: LIST
8968: LIST
8969: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
8970: LD_ADDR_VAR 0 13
8974: PUSH
8975: LD_INT 0
8977: PUSH
8978: LD_INT 0
8980: PUSH
8981: EMPTY
8982: LIST
8983: LIST
8984: PUSH
8985: LD_INT 0
8987: PUSH
8988: LD_INT 1
8990: NEG
8991: PUSH
8992: EMPTY
8993: LIST
8994: LIST
8995: PUSH
8996: LD_INT 1
8998: PUSH
8999: LD_INT 0
9001: PUSH
9002: EMPTY
9003: LIST
9004: LIST
9005: PUSH
9006: LD_INT 1
9008: PUSH
9009: LD_INT 1
9011: PUSH
9012: EMPTY
9013: LIST
9014: LIST
9015: PUSH
9016: LD_INT 0
9018: PUSH
9019: LD_INT 1
9021: PUSH
9022: EMPTY
9023: LIST
9024: LIST
9025: PUSH
9026: LD_INT 1
9028: NEG
9029: PUSH
9030: LD_INT 0
9032: PUSH
9033: EMPTY
9034: LIST
9035: LIST
9036: PUSH
9037: LD_INT 1
9039: NEG
9040: PUSH
9041: LD_INT 1
9043: NEG
9044: PUSH
9045: EMPTY
9046: LIST
9047: LIST
9048: PUSH
9049: LD_INT 1
9051: NEG
9052: PUSH
9053: LD_INT 2
9055: NEG
9056: PUSH
9057: EMPTY
9058: LIST
9059: LIST
9060: PUSH
9061: LD_INT 2
9063: PUSH
9064: LD_INT 1
9066: PUSH
9067: EMPTY
9068: LIST
9069: LIST
9070: PUSH
9071: LD_INT 2
9073: PUSH
9074: LD_INT 2
9076: PUSH
9077: EMPTY
9078: LIST
9079: LIST
9080: PUSH
9081: LD_INT 1
9083: PUSH
9084: LD_INT 2
9086: PUSH
9087: EMPTY
9088: LIST
9089: LIST
9090: PUSH
9091: LD_INT 2
9093: NEG
9094: PUSH
9095: LD_INT 1
9097: NEG
9098: PUSH
9099: EMPTY
9100: LIST
9101: LIST
9102: PUSH
9103: LD_INT 2
9105: NEG
9106: PUSH
9107: LD_INT 2
9109: NEG
9110: PUSH
9111: EMPTY
9112: LIST
9113: LIST
9114: PUSH
9115: LD_INT 2
9117: NEG
9118: PUSH
9119: LD_INT 3
9121: NEG
9122: PUSH
9123: EMPTY
9124: LIST
9125: LIST
9126: PUSH
9127: LD_INT 3
9129: NEG
9130: PUSH
9131: LD_INT 2
9133: NEG
9134: PUSH
9135: EMPTY
9136: LIST
9137: LIST
9138: PUSH
9139: LD_INT 3
9141: NEG
9142: PUSH
9143: LD_INT 3
9145: NEG
9146: PUSH
9147: EMPTY
9148: LIST
9149: LIST
9150: PUSH
9151: EMPTY
9152: LIST
9153: LIST
9154: LIST
9155: LIST
9156: LIST
9157: LIST
9158: LIST
9159: LIST
9160: LIST
9161: LIST
9162: LIST
9163: LIST
9164: LIST
9165: LIST
9166: LIST
9167: LIST
9168: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9169: LD_ADDR_VAR 0 14
9173: PUSH
9174: LD_INT 0
9176: PUSH
9177: LD_INT 0
9179: PUSH
9180: EMPTY
9181: LIST
9182: LIST
9183: PUSH
9184: LD_INT 0
9186: PUSH
9187: LD_INT 1
9189: NEG
9190: PUSH
9191: EMPTY
9192: LIST
9193: LIST
9194: PUSH
9195: LD_INT 1
9197: PUSH
9198: LD_INT 0
9200: PUSH
9201: EMPTY
9202: LIST
9203: LIST
9204: PUSH
9205: LD_INT 1
9207: PUSH
9208: LD_INT 1
9210: PUSH
9211: EMPTY
9212: LIST
9213: LIST
9214: PUSH
9215: LD_INT 0
9217: PUSH
9218: LD_INT 1
9220: PUSH
9221: EMPTY
9222: LIST
9223: LIST
9224: PUSH
9225: LD_INT 1
9227: NEG
9228: PUSH
9229: LD_INT 0
9231: PUSH
9232: EMPTY
9233: LIST
9234: LIST
9235: PUSH
9236: LD_INT 1
9238: NEG
9239: PUSH
9240: LD_INT 1
9242: NEG
9243: PUSH
9244: EMPTY
9245: LIST
9246: LIST
9247: PUSH
9248: LD_INT 1
9250: NEG
9251: PUSH
9252: LD_INT 2
9254: NEG
9255: PUSH
9256: EMPTY
9257: LIST
9258: LIST
9259: PUSH
9260: LD_INT 0
9262: PUSH
9263: LD_INT 2
9265: NEG
9266: PUSH
9267: EMPTY
9268: LIST
9269: LIST
9270: PUSH
9271: LD_INT 1
9273: PUSH
9274: LD_INT 1
9276: NEG
9277: PUSH
9278: EMPTY
9279: LIST
9280: LIST
9281: PUSH
9282: LD_INT 1
9284: PUSH
9285: LD_INT 2
9287: PUSH
9288: EMPTY
9289: LIST
9290: LIST
9291: PUSH
9292: LD_INT 0
9294: PUSH
9295: LD_INT 2
9297: PUSH
9298: EMPTY
9299: LIST
9300: LIST
9301: PUSH
9302: LD_INT 1
9304: NEG
9305: PUSH
9306: LD_INT 1
9308: PUSH
9309: EMPTY
9310: LIST
9311: LIST
9312: PUSH
9313: LD_INT 1
9315: NEG
9316: PUSH
9317: LD_INT 3
9319: NEG
9320: PUSH
9321: EMPTY
9322: LIST
9323: LIST
9324: PUSH
9325: LD_INT 0
9327: PUSH
9328: LD_INT 3
9330: NEG
9331: PUSH
9332: EMPTY
9333: LIST
9334: LIST
9335: PUSH
9336: LD_INT 1
9338: PUSH
9339: LD_INT 2
9341: NEG
9342: PUSH
9343: EMPTY
9344: LIST
9345: LIST
9346: PUSH
9347: EMPTY
9348: LIST
9349: LIST
9350: LIST
9351: LIST
9352: LIST
9353: LIST
9354: LIST
9355: LIST
9356: LIST
9357: LIST
9358: LIST
9359: LIST
9360: LIST
9361: LIST
9362: LIST
9363: LIST
9364: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9365: LD_ADDR_VAR 0 15
9369: PUSH
9370: LD_INT 0
9372: PUSH
9373: LD_INT 0
9375: PUSH
9376: EMPTY
9377: LIST
9378: LIST
9379: PUSH
9380: LD_INT 0
9382: PUSH
9383: LD_INT 1
9385: NEG
9386: PUSH
9387: EMPTY
9388: LIST
9389: LIST
9390: PUSH
9391: LD_INT 1
9393: PUSH
9394: LD_INT 0
9396: PUSH
9397: EMPTY
9398: LIST
9399: LIST
9400: PUSH
9401: LD_INT 1
9403: PUSH
9404: LD_INT 1
9406: PUSH
9407: EMPTY
9408: LIST
9409: LIST
9410: PUSH
9411: LD_INT 0
9413: PUSH
9414: LD_INT 1
9416: PUSH
9417: EMPTY
9418: LIST
9419: LIST
9420: PUSH
9421: LD_INT 1
9423: NEG
9424: PUSH
9425: LD_INT 0
9427: PUSH
9428: EMPTY
9429: LIST
9430: LIST
9431: PUSH
9432: LD_INT 1
9434: NEG
9435: PUSH
9436: LD_INT 1
9438: NEG
9439: PUSH
9440: EMPTY
9441: LIST
9442: LIST
9443: PUSH
9444: LD_INT 1
9446: PUSH
9447: LD_INT 1
9449: NEG
9450: PUSH
9451: EMPTY
9452: LIST
9453: LIST
9454: PUSH
9455: LD_INT 2
9457: PUSH
9458: LD_INT 0
9460: PUSH
9461: EMPTY
9462: LIST
9463: LIST
9464: PUSH
9465: LD_INT 2
9467: PUSH
9468: LD_INT 1
9470: PUSH
9471: EMPTY
9472: LIST
9473: LIST
9474: PUSH
9475: LD_INT 1
9477: NEG
9478: PUSH
9479: LD_INT 1
9481: PUSH
9482: EMPTY
9483: LIST
9484: LIST
9485: PUSH
9486: LD_INT 2
9488: NEG
9489: PUSH
9490: LD_INT 0
9492: PUSH
9493: EMPTY
9494: LIST
9495: LIST
9496: PUSH
9497: LD_INT 2
9499: NEG
9500: PUSH
9501: LD_INT 1
9503: NEG
9504: PUSH
9505: EMPTY
9506: LIST
9507: LIST
9508: PUSH
9509: LD_INT 2
9511: PUSH
9512: LD_INT 1
9514: NEG
9515: PUSH
9516: EMPTY
9517: LIST
9518: LIST
9519: PUSH
9520: LD_INT 3
9522: PUSH
9523: LD_INT 0
9525: PUSH
9526: EMPTY
9527: LIST
9528: LIST
9529: PUSH
9530: LD_INT 3
9532: PUSH
9533: LD_INT 1
9535: PUSH
9536: EMPTY
9537: LIST
9538: LIST
9539: PUSH
9540: EMPTY
9541: LIST
9542: LIST
9543: LIST
9544: LIST
9545: LIST
9546: LIST
9547: LIST
9548: LIST
9549: LIST
9550: LIST
9551: LIST
9552: LIST
9553: LIST
9554: LIST
9555: LIST
9556: LIST
9557: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9558: LD_ADDR_VAR 0 16
9562: PUSH
9563: LD_INT 0
9565: PUSH
9566: LD_INT 0
9568: PUSH
9569: EMPTY
9570: LIST
9571: LIST
9572: PUSH
9573: LD_INT 0
9575: PUSH
9576: LD_INT 1
9578: NEG
9579: PUSH
9580: EMPTY
9581: LIST
9582: LIST
9583: PUSH
9584: LD_INT 1
9586: PUSH
9587: LD_INT 0
9589: PUSH
9590: EMPTY
9591: LIST
9592: LIST
9593: PUSH
9594: LD_INT 1
9596: PUSH
9597: LD_INT 1
9599: PUSH
9600: EMPTY
9601: LIST
9602: LIST
9603: PUSH
9604: LD_INT 0
9606: PUSH
9607: LD_INT 1
9609: PUSH
9610: EMPTY
9611: LIST
9612: LIST
9613: PUSH
9614: LD_INT 1
9616: NEG
9617: PUSH
9618: LD_INT 0
9620: PUSH
9621: EMPTY
9622: LIST
9623: LIST
9624: PUSH
9625: LD_INT 1
9627: NEG
9628: PUSH
9629: LD_INT 1
9631: NEG
9632: PUSH
9633: EMPTY
9634: LIST
9635: LIST
9636: PUSH
9637: LD_INT 1
9639: NEG
9640: PUSH
9641: LD_INT 2
9643: NEG
9644: PUSH
9645: EMPTY
9646: LIST
9647: LIST
9648: PUSH
9649: LD_INT 2
9651: PUSH
9652: LD_INT 1
9654: PUSH
9655: EMPTY
9656: LIST
9657: LIST
9658: PUSH
9659: LD_INT 2
9661: PUSH
9662: LD_INT 2
9664: PUSH
9665: EMPTY
9666: LIST
9667: LIST
9668: PUSH
9669: LD_INT 1
9671: PUSH
9672: LD_INT 2
9674: PUSH
9675: EMPTY
9676: LIST
9677: LIST
9678: PUSH
9679: LD_INT 2
9681: NEG
9682: PUSH
9683: LD_INT 1
9685: NEG
9686: PUSH
9687: EMPTY
9688: LIST
9689: LIST
9690: PUSH
9691: LD_INT 2
9693: NEG
9694: PUSH
9695: LD_INT 2
9697: NEG
9698: PUSH
9699: EMPTY
9700: LIST
9701: LIST
9702: PUSH
9703: LD_INT 3
9705: PUSH
9706: LD_INT 2
9708: PUSH
9709: EMPTY
9710: LIST
9711: LIST
9712: PUSH
9713: LD_INT 3
9715: PUSH
9716: LD_INT 3
9718: PUSH
9719: EMPTY
9720: LIST
9721: LIST
9722: PUSH
9723: LD_INT 2
9725: PUSH
9726: LD_INT 3
9728: PUSH
9729: EMPTY
9730: LIST
9731: LIST
9732: PUSH
9733: EMPTY
9734: LIST
9735: LIST
9736: LIST
9737: LIST
9738: LIST
9739: LIST
9740: LIST
9741: LIST
9742: LIST
9743: LIST
9744: LIST
9745: LIST
9746: LIST
9747: LIST
9748: LIST
9749: LIST
9750: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
9751: LD_ADDR_VAR 0 17
9755: PUSH
9756: LD_INT 0
9758: PUSH
9759: LD_INT 0
9761: PUSH
9762: EMPTY
9763: LIST
9764: LIST
9765: PUSH
9766: LD_INT 0
9768: PUSH
9769: LD_INT 1
9771: NEG
9772: PUSH
9773: EMPTY
9774: LIST
9775: LIST
9776: PUSH
9777: LD_INT 1
9779: PUSH
9780: LD_INT 0
9782: PUSH
9783: EMPTY
9784: LIST
9785: LIST
9786: PUSH
9787: LD_INT 1
9789: PUSH
9790: LD_INT 1
9792: PUSH
9793: EMPTY
9794: LIST
9795: LIST
9796: PUSH
9797: LD_INT 0
9799: PUSH
9800: LD_INT 1
9802: PUSH
9803: EMPTY
9804: LIST
9805: LIST
9806: PUSH
9807: LD_INT 1
9809: NEG
9810: PUSH
9811: LD_INT 0
9813: PUSH
9814: EMPTY
9815: LIST
9816: LIST
9817: PUSH
9818: LD_INT 1
9820: NEG
9821: PUSH
9822: LD_INT 1
9824: NEG
9825: PUSH
9826: EMPTY
9827: LIST
9828: LIST
9829: PUSH
9830: LD_INT 1
9832: NEG
9833: PUSH
9834: LD_INT 2
9836: NEG
9837: PUSH
9838: EMPTY
9839: LIST
9840: LIST
9841: PUSH
9842: LD_INT 0
9844: PUSH
9845: LD_INT 2
9847: NEG
9848: PUSH
9849: EMPTY
9850: LIST
9851: LIST
9852: PUSH
9853: LD_INT 1
9855: PUSH
9856: LD_INT 1
9858: NEG
9859: PUSH
9860: EMPTY
9861: LIST
9862: LIST
9863: PUSH
9864: LD_INT 2
9866: PUSH
9867: LD_INT 0
9869: PUSH
9870: EMPTY
9871: LIST
9872: LIST
9873: PUSH
9874: LD_INT 2
9876: PUSH
9877: LD_INT 1
9879: PUSH
9880: EMPTY
9881: LIST
9882: LIST
9883: PUSH
9884: LD_INT 2
9886: PUSH
9887: LD_INT 2
9889: PUSH
9890: EMPTY
9891: LIST
9892: LIST
9893: PUSH
9894: LD_INT 1
9896: PUSH
9897: LD_INT 2
9899: PUSH
9900: EMPTY
9901: LIST
9902: LIST
9903: PUSH
9904: LD_INT 0
9906: PUSH
9907: LD_INT 2
9909: PUSH
9910: EMPTY
9911: LIST
9912: LIST
9913: PUSH
9914: LD_INT 1
9916: NEG
9917: PUSH
9918: LD_INT 1
9920: PUSH
9921: EMPTY
9922: LIST
9923: LIST
9924: PUSH
9925: LD_INT 2
9927: NEG
9928: PUSH
9929: LD_INT 0
9931: PUSH
9932: EMPTY
9933: LIST
9934: LIST
9935: PUSH
9936: LD_INT 2
9938: NEG
9939: PUSH
9940: LD_INT 1
9942: NEG
9943: PUSH
9944: EMPTY
9945: LIST
9946: LIST
9947: PUSH
9948: LD_INT 2
9950: NEG
9951: PUSH
9952: LD_INT 2
9954: NEG
9955: PUSH
9956: EMPTY
9957: LIST
9958: LIST
9959: PUSH
9960: EMPTY
9961: LIST
9962: LIST
9963: LIST
9964: LIST
9965: LIST
9966: LIST
9967: LIST
9968: LIST
9969: LIST
9970: LIST
9971: LIST
9972: LIST
9973: LIST
9974: LIST
9975: LIST
9976: LIST
9977: LIST
9978: LIST
9979: LIST
9980: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
9981: LD_ADDR_VAR 0 18
9985: PUSH
9986: LD_INT 0
9988: PUSH
9989: LD_INT 0
9991: PUSH
9992: EMPTY
9993: LIST
9994: LIST
9995: PUSH
9996: LD_INT 0
9998: PUSH
9999: LD_INT 1
10001: NEG
10002: PUSH
10003: EMPTY
10004: LIST
10005: LIST
10006: PUSH
10007: LD_INT 1
10009: PUSH
10010: LD_INT 0
10012: PUSH
10013: EMPTY
10014: LIST
10015: LIST
10016: PUSH
10017: LD_INT 1
10019: PUSH
10020: LD_INT 1
10022: PUSH
10023: EMPTY
10024: LIST
10025: LIST
10026: PUSH
10027: LD_INT 0
10029: PUSH
10030: LD_INT 1
10032: PUSH
10033: EMPTY
10034: LIST
10035: LIST
10036: PUSH
10037: LD_INT 1
10039: NEG
10040: PUSH
10041: LD_INT 0
10043: PUSH
10044: EMPTY
10045: LIST
10046: LIST
10047: PUSH
10048: LD_INT 1
10050: NEG
10051: PUSH
10052: LD_INT 1
10054: NEG
10055: PUSH
10056: EMPTY
10057: LIST
10058: LIST
10059: PUSH
10060: LD_INT 1
10062: NEG
10063: PUSH
10064: LD_INT 2
10066: NEG
10067: PUSH
10068: EMPTY
10069: LIST
10070: LIST
10071: PUSH
10072: LD_INT 0
10074: PUSH
10075: LD_INT 2
10077: NEG
10078: PUSH
10079: EMPTY
10080: LIST
10081: LIST
10082: PUSH
10083: LD_INT 1
10085: PUSH
10086: LD_INT 1
10088: NEG
10089: PUSH
10090: EMPTY
10091: LIST
10092: LIST
10093: PUSH
10094: LD_INT 2
10096: PUSH
10097: LD_INT 0
10099: PUSH
10100: EMPTY
10101: LIST
10102: LIST
10103: PUSH
10104: LD_INT 2
10106: PUSH
10107: LD_INT 1
10109: PUSH
10110: EMPTY
10111: LIST
10112: LIST
10113: PUSH
10114: LD_INT 2
10116: PUSH
10117: LD_INT 2
10119: PUSH
10120: EMPTY
10121: LIST
10122: LIST
10123: PUSH
10124: LD_INT 1
10126: PUSH
10127: LD_INT 2
10129: PUSH
10130: EMPTY
10131: LIST
10132: LIST
10133: PUSH
10134: LD_INT 0
10136: PUSH
10137: LD_INT 2
10139: PUSH
10140: EMPTY
10141: LIST
10142: LIST
10143: PUSH
10144: LD_INT 1
10146: NEG
10147: PUSH
10148: LD_INT 1
10150: PUSH
10151: EMPTY
10152: LIST
10153: LIST
10154: PUSH
10155: LD_INT 2
10157: NEG
10158: PUSH
10159: LD_INT 0
10161: PUSH
10162: EMPTY
10163: LIST
10164: LIST
10165: PUSH
10166: LD_INT 2
10168: NEG
10169: PUSH
10170: LD_INT 1
10172: NEG
10173: PUSH
10174: EMPTY
10175: LIST
10176: LIST
10177: PUSH
10178: LD_INT 2
10180: NEG
10181: PUSH
10182: LD_INT 2
10184: NEG
10185: PUSH
10186: EMPTY
10187: LIST
10188: LIST
10189: PUSH
10190: EMPTY
10191: LIST
10192: LIST
10193: LIST
10194: LIST
10195: LIST
10196: LIST
10197: LIST
10198: LIST
10199: LIST
10200: LIST
10201: LIST
10202: LIST
10203: LIST
10204: LIST
10205: LIST
10206: LIST
10207: LIST
10208: LIST
10209: LIST
10210: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10211: LD_ADDR_VAR 0 19
10215: PUSH
10216: LD_INT 0
10218: PUSH
10219: LD_INT 0
10221: PUSH
10222: EMPTY
10223: LIST
10224: LIST
10225: PUSH
10226: LD_INT 0
10228: PUSH
10229: LD_INT 1
10231: NEG
10232: PUSH
10233: EMPTY
10234: LIST
10235: LIST
10236: PUSH
10237: LD_INT 1
10239: PUSH
10240: LD_INT 0
10242: PUSH
10243: EMPTY
10244: LIST
10245: LIST
10246: PUSH
10247: LD_INT 1
10249: PUSH
10250: LD_INT 1
10252: PUSH
10253: EMPTY
10254: LIST
10255: LIST
10256: PUSH
10257: LD_INT 0
10259: PUSH
10260: LD_INT 1
10262: PUSH
10263: EMPTY
10264: LIST
10265: LIST
10266: PUSH
10267: LD_INT 1
10269: NEG
10270: PUSH
10271: LD_INT 0
10273: PUSH
10274: EMPTY
10275: LIST
10276: LIST
10277: PUSH
10278: LD_INT 1
10280: NEG
10281: PUSH
10282: LD_INT 1
10284: NEG
10285: PUSH
10286: EMPTY
10287: LIST
10288: LIST
10289: PUSH
10290: LD_INT 1
10292: NEG
10293: PUSH
10294: LD_INT 2
10296: NEG
10297: PUSH
10298: EMPTY
10299: LIST
10300: LIST
10301: PUSH
10302: LD_INT 0
10304: PUSH
10305: LD_INT 2
10307: NEG
10308: PUSH
10309: EMPTY
10310: LIST
10311: LIST
10312: PUSH
10313: LD_INT 1
10315: PUSH
10316: LD_INT 1
10318: NEG
10319: PUSH
10320: EMPTY
10321: LIST
10322: LIST
10323: PUSH
10324: LD_INT 2
10326: PUSH
10327: LD_INT 0
10329: PUSH
10330: EMPTY
10331: LIST
10332: LIST
10333: PUSH
10334: LD_INT 2
10336: PUSH
10337: LD_INT 1
10339: PUSH
10340: EMPTY
10341: LIST
10342: LIST
10343: PUSH
10344: LD_INT 2
10346: PUSH
10347: LD_INT 2
10349: PUSH
10350: EMPTY
10351: LIST
10352: LIST
10353: PUSH
10354: LD_INT 1
10356: PUSH
10357: LD_INT 2
10359: PUSH
10360: EMPTY
10361: LIST
10362: LIST
10363: PUSH
10364: LD_INT 0
10366: PUSH
10367: LD_INT 2
10369: PUSH
10370: EMPTY
10371: LIST
10372: LIST
10373: PUSH
10374: LD_INT 1
10376: NEG
10377: PUSH
10378: LD_INT 1
10380: PUSH
10381: EMPTY
10382: LIST
10383: LIST
10384: PUSH
10385: LD_INT 2
10387: NEG
10388: PUSH
10389: LD_INT 0
10391: PUSH
10392: EMPTY
10393: LIST
10394: LIST
10395: PUSH
10396: LD_INT 2
10398: NEG
10399: PUSH
10400: LD_INT 1
10402: NEG
10403: PUSH
10404: EMPTY
10405: LIST
10406: LIST
10407: PUSH
10408: LD_INT 2
10410: NEG
10411: PUSH
10412: LD_INT 2
10414: NEG
10415: PUSH
10416: EMPTY
10417: LIST
10418: LIST
10419: PUSH
10420: EMPTY
10421: LIST
10422: LIST
10423: LIST
10424: LIST
10425: LIST
10426: LIST
10427: LIST
10428: LIST
10429: LIST
10430: LIST
10431: LIST
10432: LIST
10433: LIST
10434: LIST
10435: LIST
10436: LIST
10437: LIST
10438: LIST
10439: LIST
10440: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10441: LD_ADDR_VAR 0 20
10445: PUSH
10446: LD_INT 0
10448: PUSH
10449: LD_INT 0
10451: PUSH
10452: EMPTY
10453: LIST
10454: LIST
10455: PUSH
10456: LD_INT 0
10458: PUSH
10459: LD_INT 1
10461: NEG
10462: PUSH
10463: EMPTY
10464: LIST
10465: LIST
10466: PUSH
10467: LD_INT 1
10469: PUSH
10470: LD_INT 0
10472: PUSH
10473: EMPTY
10474: LIST
10475: LIST
10476: PUSH
10477: LD_INT 1
10479: PUSH
10480: LD_INT 1
10482: PUSH
10483: EMPTY
10484: LIST
10485: LIST
10486: PUSH
10487: LD_INT 0
10489: PUSH
10490: LD_INT 1
10492: PUSH
10493: EMPTY
10494: LIST
10495: LIST
10496: PUSH
10497: LD_INT 1
10499: NEG
10500: PUSH
10501: LD_INT 0
10503: PUSH
10504: EMPTY
10505: LIST
10506: LIST
10507: PUSH
10508: LD_INT 1
10510: NEG
10511: PUSH
10512: LD_INT 1
10514: NEG
10515: PUSH
10516: EMPTY
10517: LIST
10518: LIST
10519: PUSH
10520: LD_INT 1
10522: NEG
10523: PUSH
10524: LD_INT 2
10526: NEG
10527: PUSH
10528: EMPTY
10529: LIST
10530: LIST
10531: PUSH
10532: LD_INT 0
10534: PUSH
10535: LD_INT 2
10537: NEG
10538: PUSH
10539: EMPTY
10540: LIST
10541: LIST
10542: PUSH
10543: LD_INT 1
10545: PUSH
10546: LD_INT 1
10548: NEG
10549: PUSH
10550: EMPTY
10551: LIST
10552: LIST
10553: PUSH
10554: LD_INT 2
10556: PUSH
10557: LD_INT 0
10559: PUSH
10560: EMPTY
10561: LIST
10562: LIST
10563: PUSH
10564: LD_INT 2
10566: PUSH
10567: LD_INT 1
10569: PUSH
10570: EMPTY
10571: LIST
10572: LIST
10573: PUSH
10574: LD_INT 2
10576: PUSH
10577: LD_INT 2
10579: PUSH
10580: EMPTY
10581: LIST
10582: LIST
10583: PUSH
10584: LD_INT 1
10586: PUSH
10587: LD_INT 2
10589: PUSH
10590: EMPTY
10591: LIST
10592: LIST
10593: PUSH
10594: LD_INT 0
10596: PUSH
10597: LD_INT 2
10599: PUSH
10600: EMPTY
10601: LIST
10602: LIST
10603: PUSH
10604: LD_INT 1
10606: NEG
10607: PUSH
10608: LD_INT 1
10610: PUSH
10611: EMPTY
10612: LIST
10613: LIST
10614: PUSH
10615: LD_INT 2
10617: NEG
10618: PUSH
10619: LD_INT 0
10621: PUSH
10622: EMPTY
10623: LIST
10624: LIST
10625: PUSH
10626: LD_INT 2
10628: NEG
10629: PUSH
10630: LD_INT 1
10632: NEG
10633: PUSH
10634: EMPTY
10635: LIST
10636: LIST
10637: PUSH
10638: LD_INT 2
10640: NEG
10641: PUSH
10642: LD_INT 2
10644: NEG
10645: PUSH
10646: EMPTY
10647: LIST
10648: LIST
10649: PUSH
10650: EMPTY
10651: LIST
10652: LIST
10653: LIST
10654: LIST
10655: LIST
10656: LIST
10657: LIST
10658: LIST
10659: LIST
10660: LIST
10661: LIST
10662: LIST
10663: LIST
10664: LIST
10665: LIST
10666: LIST
10667: LIST
10668: LIST
10669: LIST
10670: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10671: LD_ADDR_VAR 0 21
10675: PUSH
10676: LD_INT 0
10678: PUSH
10679: LD_INT 0
10681: PUSH
10682: EMPTY
10683: LIST
10684: LIST
10685: PUSH
10686: LD_INT 0
10688: PUSH
10689: LD_INT 1
10691: NEG
10692: PUSH
10693: EMPTY
10694: LIST
10695: LIST
10696: PUSH
10697: LD_INT 1
10699: PUSH
10700: LD_INT 0
10702: PUSH
10703: EMPTY
10704: LIST
10705: LIST
10706: PUSH
10707: LD_INT 1
10709: PUSH
10710: LD_INT 1
10712: PUSH
10713: EMPTY
10714: LIST
10715: LIST
10716: PUSH
10717: LD_INT 0
10719: PUSH
10720: LD_INT 1
10722: PUSH
10723: EMPTY
10724: LIST
10725: LIST
10726: PUSH
10727: LD_INT 1
10729: NEG
10730: PUSH
10731: LD_INT 0
10733: PUSH
10734: EMPTY
10735: LIST
10736: LIST
10737: PUSH
10738: LD_INT 1
10740: NEG
10741: PUSH
10742: LD_INT 1
10744: NEG
10745: PUSH
10746: EMPTY
10747: LIST
10748: LIST
10749: PUSH
10750: LD_INT 1
10752: NEG
10753: PUSH
10754: LD_INT 2
10756: NEG
10757: PUSH
10758: EMPTY
10759: LIST
10760: LIST
10761: PUSH
10762: LD_INT 0
10764: PUSH
10765: LD_INT 2
10767: NEG
10768: PUSH
10769: EMPTY
10770: LIST
10771: LIST
10772: PUSH
10773: LD_INT 1
10775: PUSH
10776: LD_INT 1
10778: NEG
10779: PUSH
10780: EMPTY
10781: LIST
10782: LIST
10783: PUSH
10784: LD_INT 2
10786: PUSH
10787: LD_INT 0
10789: PUSH
10790: EMPTY
10791: LIST
10792: LIST
10793: PUSH
10794: LD_INT 2
10796: PUSH
10797: LD_INT 1
10799: PUSH
10800: EMPTY
10801: LIST
10802: LIST
10803: PUSH
10804: LD_INT 2
10806: PUSH
10807: LD_INT 2
10809: PUSH
10810: EMPTY
10811: LIST
10812: LIST
10813: PUSH
10814: LD_INT 1
10816: PUSH
10817: LD_INT 2
10819: PUSH
10820: EMPTY
10821: LIST
10822: LIST
10823: PUSH
10824: LD_INT 0
10826: PUSH
10827: LD_INT 2
10829: PUSH
10830: EMPTY
10831: LIST
10832: LIST
10833: PUSH
10834: LD_INT 1
10836: NEG
10837: PUSH
10838: LD_INT 1
10840: PUSH
10841: EMPTY
10842: LIST
10843: LIST
10844: PUSH
10845: LD_INT 2
10847: NEG
10848: PUSH
10849: LD_INT 0
10851: PUSH
10852: EMPTY
10853: LIST
10854: LIST
10855: PUSH
10856: LD_INT 2
10858: NEG
10859: PUSH
10860: LD_INT 1
10862: NEG
10863: PUSH
10864: EMPTY
10865: LIST
10866: LIST
10867: PUSH
10868: LD_INT 2
10870: NEG
10871: PUSH
10872: LD_INT 2
10874: NEG
10875: PUSH
10876: EMPTY
10877: LIST
10878: LIST
10879: PUSH
10880: EMPTY
10881: LIST
10882: LIST
10883: LIST
10884: LIST
10885: LIST
10886: LIST
10887: LIST
10888: LIST
10889: LIST
10890: LIST
10891: LIST
10892: LIST
10893: LIST
10894: LIST
10895: LIST
10896: LIST
10897: LIST
10898: LIST
10899: LIST
10900: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10901: LD_ADDR_VAR 0 22
10905: PUSH
10906: LD_INT 0
10908: PUSH
10909: LD_INT 0
10911: PUSH
10912: EMPTY
10913: LIST
10914: LIST
10915: PUSH
10916: LD_INT 0
10918: PUSH
10919: LD_INT 1
10921: NEG
10922: PUSH
10923: EMPTY
10924: LIST
10925: LIST
10926: PUSH
10927: LD_INT 1
10929: PUSH
10930: LD_INT 0
10932: PUSH
10933: EMPTY
10934: LIST
10935: LIST
10936: PUSH
10937: LD_INT 1
10939: PUSH
10940: LD_INT 1
10942: PUSH
10943: EMPTY
10944: LIST
10945: LIST
10946: PUSH
10947: LD_INT 0
10949: PUSH
10950: LD_INT 1
10952: PUSH
10953: EMPTY
10954: LIST
10955: LIST
10956: PUSH
10957: LD_INT 1
10959: NEG
10960: PUSH
10961: LD_INT 0
10963: PUSH
10964: EMPTY
10965: LIST
10966: LIST
10967: PUSH
10968: LD_INT 1
10970: NEG
10971: PUSH
10972: LD_INT 1
10974: NEG
10975: PUSH
10976: EMPTY
10977: LIST
10978: LIST
10979: PUSH
10980: LD_INT 1
10982: NEG
10983: PUSH
10984: LD_INT 2
10986: NEG
10987: PUSH
10988: EMPTY
10989: LIST
10990: LIST
10991: PUSH
10992: LD_INT 0
10994: PUSH
10995: LD_INT 2
10997: NEG
10998: PUSH
10999: EMPTY
11000: LIST
11001: LIST
11002: PUSH
11003: LD_INT 1
11005: PUSH
11006: LD_INT 1
11008: NEG
11009: PUSH
11010: EMPTY
11011: LIST
11012: LIST
11013: PUSH
11014: LD_INT 2
11016: PUSH
11017: LD_INT 0
11019: PUSH
11020: EMPTY
11021: LIST
11022: LIST
11023: PUSH
11024: LD_INT 2
11026: PUSH
11027: LD_INT 1
11029: PUSH
11030: EMPTY
11031: LIST
11032: LIST
11033: PUSH
11034: LD_INT 2
11036: PUSH
11037: LD_INT 2
11039: PUSH
11040: EMPTY
11041: LIST
11042: LIST
11043: PUSH
11044: LD_INT 1
11046: PUSH
11047: LD_INT 2
11049: PUSH
11050: EMPTY
11051: LIST
11052: LIST
11053: PUSH
11054: LD_INT 0
11056: PUSH
11057: LD_INT 2
11059: PUSH
11060: EMPTY
11061: LIST
11062: LIST
11063: PUSH
11064: LD_INT 1
11066: NEG
11067: PUSH
11068: LD_INT 1
11070: PUSH
11071: EMPTY
11072: LIST
11073: LIST
11074: PUSH
11075: LD_INT 2
11077: NEG
11078: PUSH
11079: LD_INT 0
11081: PUSH
11082: EMPTY
11083: LIST
11084: LIST
11085: PUSH
11086: LD_INT 2
11088: NEG
11089: PUSH
11090: LD_INT 1
11092: NEG
11093: PUSH
11094: EMPTY
11095: LIST
11096: LIST
11097: PUSH
11098: LD_INT 2
11100: NEG
11101: PUSH
11102: LD_INT 2
11104: NEG
11105: PUSH
11106: EMPTY
11107: LIST
11108: LIST
11109: PUSH
11110: EMPTY
11111: LIST
11112: LIST
11113: LIST
11114: LIST
11115: LIST
11116: LIST
11117: LIST
11118: LIST
11119: LIST
11120: LIST
11121: LIST
11122: LIST
11123: LIST
11124: LIST
11125: LIST
11126: LIST
11127: LIST
11128: LIST
11129: LIST
11130: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11131: LD_ADDR_VAR 0 23
11135: PUSH
11136: LD_INT 0
11138: PUSH
11139: LD_INT 0
11141: PUSH
11142: EMPTY
11143: LIST
11144: LIST
11145: PUSH
11146: LD_INT 0
11148: PUSH
11149: LD_INT 1
11151: NEG
11152: PUSH
11153: EMPTY
11154: LIST
11155: LIST
11156: PUSH
11157: LD_INT 1
11159: PUSH
11160: LD_INT 0
11162: PUSH
11163: EMPTY
11164: LIST
11165: LIST
11166: PUSH
11167: LD_INT 1
11169: PUSH
11170: LD_INT 1
11172: PUSH
11173: EMPTY
11174: LIST
11175: LIST
11176: PUSH
11177: LD_INT 0
11179: PUSH
11180: LD_INT 1
11182: PUSH
11183: EMPTY
11184: LIST
11185: LIST
11186: PUSH
11187: LD_INT 1
11189: NEG
11190: PUSH
11191: LD_INT 0
11193: PUSH
11194: EMPTY
11195: LIST
11196: LIST
11197: PUSH
11198: LD_INT 1
11200: NEG
11201: PUSH
11202: LD_INT 1
11204: NEG
11205: PUSH
11206: EMPTY
11207: LIST
11208: LIST
11209: PUSH
11210: LD_INT 1
11212: NEG
11213: PUSH
11214: LD_INT 2
11216: NEG
11217: PUSH
11218: EMPTY
11219: LIST
11220: LIST
11221: PUSH
11222: LD_INT 0
11224: PUSH
11225: LD_INT 2
11227: NEG
11228: PUSH
11229: EMPTY
11230: LIST
11231: LIST
11232: PUSH
11233: LD_INT 1
11235: PUSH
11236: LD_INT 1
11238: NEG
11239: PUSH
11240: EMPTY
11241: LIST
11242: LIST
11243: PUSH
11244: LD_INT 2
11246: PUSH
11247: LD_INT 0
11249: PUSH
11250: EMPTY
11251: LIST
11252: LIST
11253: PUSH
11254: LD_INT 2
11256: PUSH
11257: LD_INT 1
11259: PUSH
11260: EMPTY
11261: LIST
11262: LIST
11263: PUSH
11264: LD_INT 2
11266: PUSH
11267: LD_INT 2
11269: PUSH
11270: EMPTY
11271: LIST
11272: LIST
11273: PUSH
11274: LD_INT 1
11276: PUSH
11277: LD_INT 2
11279: PUSH
11280: EMPTY
11281: LIST
11282: LIST
11283: PUSH
11284: LD_INT 0
11286: PUSH
11287: LD_INT 2
11289: PUSH
11290: EMPTY
11291: LIST
11292: LIST
11293: PUSH
11294: LD_INT 1
11296: NEG
11297: PUSH
11298: LD_INT 1
11300: PUSH
11301: EMPTY
11302: LIST
11303: LIST
11304: PUSH
11305: LD_INT 2
11307: NEG
11308: PUSH
11309: LD_INT 0
11311: PUSH
11312: EMPTY
11313: LIST
11314: LIST
11315: PUSH
11316: LD_INT 2
11318: NEG
11319: PUSH
11320: LD_INT 1
11322: NEG
11323: PUSH
11324: EMPTY
11325: LIST
11326: LIST
11327: PUSH
11328: LD_INT 2
11330: NEG
11331: PUSH
11332: LD_INT 2
11334: NEG
11335: PUSH
11336: EMPTY
11337: LIST
11338: LIST
11339: PUSH
11340: LD_INT 2
11342: NEG
11343: PUSH
11344: LD_INT 3
11346: NEG
11347: PUSH
11348: EMPTY
11349: LIST
11350: LIST
11351: PUSH
11352: LD_INT 1
11354: NEG
11355: PUSH
11356: LD_INT 3
11358: NEG
11359: PUSH
11360: EMPTY
11361: LIST
11362: LIST
11363: PUSH
11364: LD_INT 1
11366: PUSH
11367: LD_INT 2
11369: NEG
11370: PUSH
11371: EMPTY
11372: LIST
11373: LIST
11374: PUSH
11375: LD_INT 2
11377: PUSH
11378: LD_INT 1
11380: NEG
11381: PUSH
11382: EMPTY
11383: LIST
11384: LIST
11385: PUSH
11386: EMPTY
11387: LIST
11388: LIST
11389: LIST
11390: LIST
11391: LIST
11392: LIST
11393: LIST
11394: LIST
11395: LIST
11396: LIST
11397: LIST
11398: LIST
11399: LIST
11400: LIST
11401: LIST
11402: LIST
11403: LIST
11404: LIST
11405: LIST
11406: LIST
11407: LIST
11408: LIST
11409: LIST
11410: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11411: LD_ADDR_VAR 0 24
11415: PUSH
11416: LD_INT 0
11418: PUSH
11419: LD_INT 0
11421: PUSH
11422: EMPTY
11423: LIST
11424: LIST
11425: PUSH
11426: LD_INT 0
11428: PUSH
11429: LD_INT 1
11431: NEG
11432: PUSH
11433: EMPTY
11434: LIST
11435: LIST
11436: PUSH
11437: LD_INT 1
11439: PUSH
11440: LD_INT 0
11442: PUSH
11443: EMPTY
11444: LIST
11445: LIST
11446: PUSH
11447: LD_INT 1
11449: PUSH
11450: LD_INT 1
11452: PUSH
11453: EMPTY
11454: LIST
11455: LIST
11456: PUSH
11457: LD_INT 0
11459: PUSH
11460: LD_INT 1
11462: PUSH
11463: EMPTY
11464: LIST
11465: LIST
11466: PUSH
11467: LD_INT 1
11469: NEG
11470: PUSH
11471: LD_INT 0
11473: PUSH
11474: EMPTY
11475: LIST
11476: LIST
11477: PUSH
11478: LD_INT 1
11480: NEG
11481: PUSH
11482: LD_INT 1
11484: NEG
11485: PUSH
11486: EMPTY
11487: LIST
11488: LIST
11489: PUSH
11490: LD_INT 1
11492: NEG
11493: PUSH
11494: LD_INT 2
11496: NEG
11497: PUSH
11498: EMPTY
11499: LIST
11500: LIST
11501: PUSH
11502: LD_INT 0
11504: PUSH
11505: LD_INT 2
11507: NEG
11508: PUSH
11509: EMPTY
11510: LIST
11511: LIST
11512: PUSH
11513: LD_INT 1
11515: PUSH
11516: LD_INT 1
11518: NEG
11519: PUSH
11520: EMPTY
11521: LIST
11522: LIST
11523: PUSH
11524: LD_INT 2
11526: PUSH
11527: LD_INT 0
11529: PUSH
11530: EMPTY
11531: LIST
11532: LIST
11533: PUSH
11534: LD_INT 2
11536: PUSH
11537: LD_INT 1
11539: PUSH
11540: EMPTY
11541: LIST
11542: LIST
11543: PUSH
11544: LD_INT 2
11546: PUSH
11547: LD_INT 2
11549: PUSH
11550: EMPTY
11551: LIST
11552: LIST
11553: PUSH
11554: LD_INT 1
11556: PUSH
11557: LD_INT 2
11559: PUSH
11560: EMPTY
11561: LIST
11562: LIST
11563: PUSH
11564: LD_INT 0
11566: PUSH
11567: LD_INT 2
11569: PUSH
11570: EMPTY
11571: LIST
11572: LIST
11573: PUSH
11574: LD_INT 1
11576: NEG
11577: PUSH
11578: LD_INT 1
11580: PUSH
11581: EMPTY
11582: LIST
11583: LIST
11584: PUSH
11585: LD_INT 2
11587: NEG
11588: PUSH
11589: LD_INT 0
11591: PUSH
11592: EMPTY
11593: LIST
11594: LIST
11595: PUSH
11596: LD_INT 2
11598: NEG
11599: PUSH
11600: LD_INT 1
11602: NEG
11603: PUSH
11604: EMPTY
11605: LIST
11606: LIST
11607: PUSH
11608: LD_INT 2
11610: NEG
11611: PUSH
11612: LD_INT 2
11614: NEG
11615: PUSH
11616: EMPTY
11617: LIST
11618: LIST
11619: PUSH
11620: LD_INT 1
11622: PUSH
11623: LD_INT 2
11625: NEG
11626: PUSH
11627: EMPTY
11628: LIST
11629: LIST
11630: PUSH
11631: LD_INT 2
11633: PUSH
11634: LD_INT 1
11636: NEG
11637: PUSH
11638: EMPTY
11639: LIST
11640: LIST
11641: PUSH
11642: LD_INT 3
11644: PUSH
11645: LD_INT 1
11647: PUSH
11648: EMPTY
11649: LIST
11650: LIST
11651: PUSH
11652: LD_INT 3
11654: PUSH
11655: LD_INT 2
11657: PUSH
11658: EMPTY
11659: LIST
11660: LIST
11661: PUSH
11662: EMPTY
11663: LIST
11664: LIST
11665: LIST
11666: LIST
11667: LIST
11668: LIST
11669: LIST
11670: LIST
11671: LIST
11672: LIST
11673: LIST
11674: LIST
11675: LIST
11676: LIST
11677: LIST
11678: LIST
11679: LIST
11680: LIST
11681: LIST
11682: LIST
11683: LIST
11684: LIST
11685: LIST
11686: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
11687: LD_ADDR_VAR 0 25
11691: PUSH
11692: LD_INT 0
11694: PUSH
11695: LD_INT 0
11697: PUSH
11698: EMPTY
11699: LIST
11700: LIST
11701: PUSH
11702: LD_INT 0
11704: PUSH
11705: LD_INT 1
11707: NEG
11708: PUSH
11709: EMPTY
11710: LIST
11711: LIST
11712: PUSH
11713: LD_INT 1
11715: PUSH
11716: LD_INT 0
11718: PUSH
11719: EMPTY
11720: LIST
11721: LIST
11722: PUSH
11723: LD_INT 1
11725: PUSH
11726: LD_INT 1
11728: PUSH
11729: EMPTY
11730: LIST
11731: LIST
11732: PUSH
11733: LD_INT 0
11735: PUSH
11736: LD_INT 1
11738: PUSH
11739: EMPTY
11740: LIST
11741: LIST
11742: PUSH
11743: LD_INT 1
11745: NEG
11746: PUSH
11747: LD_INT 0
11749: PUSH
11750: EMPTY
11751: LIST
11752: LIST
11753: PUSH
11754: LD_INT 1
11756: NEG
11757: PUSH
11758: LD_INT 1
11760: NEG
11761: PUSH
11762: EMPTY
11763: LIST
11764: LIST
11765: PUSH
11766: LD_INT 1
11768: NEG
11769: PUSH
11770: LD_INT 2
11772: NEG
11773: PUSH
11774: EMPTY
11775: LIST
11776: LIST
11777: PUSH
11778: LD_INT 0
11780: PUSH
11781: LD_INT 2
11783: NEG
11784: PUSH
11785: EMPTY
11786: LIST
11787: LIST
11788: PUSH
11789: LD_INT 1
11791: PUSH
11792: LD_INT 1
11794: NEG
11795: PUSH
11796: EMPTY
11797: LIST
11798: LIST
11799: PUSH
11800: LD_INT 2
11802: PUSH
11803: LD_INT 0
11805: PUSH
11806: EMPTY
11807: LIST
11808: LIST
11809: PUSH
11810: LD_INT 2
11812: PUSH
11813: LD_INT 1
11815: PUSH
11816: EMPTY
11817: LIST
11818: LIST
11819: PUSH
11820: LD_INT 2
11822: PUSH
11823: LD_INT 2
11825: PUSH
11826: EMPTY
11827: LIST
11828: LIST
11829: PUSH
11830: LD_INT 1
11832: PUSH
11833: LD_INT 2
11835: PUSH
11836: EMPTY
11837: LIST
11838: LIST
11839: PUSH
11840: LD_INT 0
11842: PUSH
11843: LD_INT 2
11845: PUSH
11846: EMPTY
11847: LIST
11848: LIST
11849: PUSH
11850: LD_INT 1
11852: NEG
11853: PUSH
11854: LD_INT 1
11856: PUSH
11857: EMPTY
11858: LIST
11859: LIST
11860: PUSH
11861: LD_INT 2
11863: NEG
11864: PUSH
11865: LD_INT 0
11867: PUSH
11868: EMPTY
11869: LIST
11870: LIST
11871: PUSH
11872: LD_INT 2
11874: NEG
11875: PUSH
11876: LD_INT 1
11878: NEG
11879: PUSH
11880: EMPTY
11881: LIST
11882: LIST
11883: PUSH
11884: LD_INT 2
11886: NEG
11887: PUSH
11888: LD_INT 2
11890: NEG
11891: PUSH
11892: EMPTY
11893: LIST
11894: LIST
11895: PUSH
11896: LD_INT 3
11898: PUSH
11899: LD_INT 1
11901: PUSH
11902: EMPTY
11903: LIST
11904: LIST
11905: PUSH
11906: LD_INT 3
11908: PUSH
11909: LD_INT 2
11911: PUSH
11912: EMPTY
11913: LIST
11914: LIST
11915: PUSH
11916: LD_INT 2
11918: PUSH
11919: LD_INT 3
11921: PUSH
11922: EMPTY
11923: LIST
11924: LIST
11925: PUSH
11926: LD_INT 1
11928: PUSH
11929: LD_INT 3
11931: PUSH
11932: EMPTY
11933: LIST
11934: LIST
11935: PUSH
11936: EMPTY
11937: LIST
11938: LIST
11939: LIST
11940: LIST
11941: LIST
11942: LIST
11943: LIST
11944: LIST
11945: LIST
11946: LIST
11947: LIST
11948: LIST
11949: LIST
11950: LIST
11951: LIST
11952: LIST
11953: LIST
11954: LIST
11955: LIST
11956: LIST
11957: LIST
11958: LIST
11959: LIST
11960: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
11961: LD_ADDR_VAR 0 26
11965: PUSH
11966: LD_INT 0
11968: PUSH
11969: LD_INT 0
11971: PUSH
11972: EMPTY
11973: LIST
11974: LIST
11975: PUSH
11976: LD_INT 0
11978: PUSH
11979: LD_INT 1
11981: NEG
11982: PUSH
11983: EMPTY
11984: LIST
11985: LIST
11986: PUSH
11987: LD_INT 1
11989: PUSH
11990: LD_INT 0
11992: PUSH
11993: EMPTY
11994: LIST
11995: LIST
11996: PUSH
11997: LD_INT 1
11999: PUSH
12000: LD_INT 1
12002: PUSH
12003: EMPTY
12004: LIST
12005: LIST
12006: PUSH
12007: LD_INT 0
12009: PUSH
12010: LD_INT 1
12012: PUSH
12013: EMPTY
12014: LIST
12015: LIST
12016: PUSH
12017: LD_INT 1
12019: NEG
12020: PUSH
12021: LD_INT 0
12023: PUSH
12024: EMPTY
12025: LIST
12026: LIST
12027: PUSH
12028: LD_INT 1
12030: NEG
12031: PUSH
12032: LD_INT 1
12034: NEG
12035: PUSH
12036: EMPTY
12037: LIST
12038: LIST
12039: PUSH
12040: LD_INT 1
12042: NEG
12043: PUSH
12044: LD_INT 2
12046: NEG
12047: PUSH
12048: EMPTY
12049: LIST
12050: LIST
12051: PUSH
12052: LD_INT 0
12054: PUSH
12055: LD_INT 2
12057: NEG
12058: PUSH
12059: EMPTY
12060: LIST
12061: LIST
12062: PUSH
12063: LD_INT 1
12065: PUSH
12066: LD_INT 1
12068: NEG
12069: PUSH
12070: EMPTY
12071: LIST
12072: LIST
12073: PUSH
12074: LD_INT 2
12076: PUSH
12077: LD_INT 0
12079: PUSH
12080: EMPTY
12081: LIST
12082: LIST
12083: PUSH
12084: LD_INT 2
12086: PUSH
12087: LD_INT 1
12089: PUSH
12090: EMPTY
12091: LIST
12092: LIST
12093: PUSH
12094: LD_INT 2
12096: PUSH
12097: LD_INT 2
12099: PUSH
12100: EMPTY
12101: LIST
12102: LIST
12103: PUSH
12104: LD_INT 1
12106: PUSH
12107: LD_INT 2
12109: PUSH
12110: EMPTY
12111: LIST
12112: LIST
12113: PUSH
12114: LD_INT 0
12116: PUSH
12117: LD_INT 2
12119: PUSH
12120: EMPTY
12121: LIST
12122: LIST
12123: PUSH
12124: LD_INT 1
12126: NEG
12127: PUSH
12128: LD_INT 1
12130: PUSH
12131: EMPTY
12132: LIST
12133: LIST
12134: PUSH
12135: LD_INT 2
12137: NEG
12138: PUSH
12139: LD_INT 0
12141: PUSH
12142: EMPTY
12143: LIST
12144: LIST
12145: PUSH
12146: LD_INT 2
12148: NEG
12149: PUSH
12150: LD_INT 1
12152: NEG
12153: PUSH
12154: EMPTY
12155: LIST
12156: LIST
12157: PUSH
12158: LD_INT 2
12160: NEG
12161: PUSH
12162: LD_INT 2
12164: NEG
12165: PUSH
12166: EMPTY
12167: LIST
12168: LIST
12169: PUSH
12170: LD_INT 2
12172: PUSH
12173: LD_INT 3
12175: PUSH
12176: EMPTY
12177: LIST
12178: LIST
12179: PUSH
12180: LD_INT 1
12182: PUSH
12183: LD_INT 3
12185: PUSH
12186: EMPTY
12187: LIST
12188: LIST
12189: PUSH
12190: LD_INT 1
12192: NEG
12193: PUSH
12194: LD_INT 2
12196: PUSH
12197: EMPTY
12198: LIST
12199: LIST
12200: PUSH
12201: LD_INT 2
12203: NEG
12204: PUSH
12205: LD_INT 1
12207: PUSH
12208: EMPTY
12209: LIST
12210: LIST
12211: PUSH
12212: EMPTY
12213: LIST
12214: LIST
12215: LIST
12216: LIST
12217: LIST
12218: LIST
12219: LIST
12220: LIST
12221: LIST
12222: LIST
12223: LIST
12224: LIST
12225: LIST
12226: LIST
12227: LIST
12228: LIST
12229: LIST
12230: LIST
12231: LIST
12232: LIST
12233: LIST
12234: LIST
12235: LIST
12236: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12237: LD_ADDR_VAR 0 27
12241: PUSH
12242: LD_INT 0
12244: PUSH
12245: LD_INT 0
12247: PUSH
12248: EMPTY
12249: LIST
12250: LIST
12251: PUSH
12252: LD_INT 0
12254: PUSH
12255: LD_INT 1
12257: NEG
12258: PUSH
12259: EMPTY
12260: LIST
12261: LIST
12262: PUSH
12263: LD_INT 1
12265: PUSH
12266: LD_INT 0
12268: PUSH
12269: EMPTY
12270: LIST
12271: LIST
12272: PUSH
12273: LD_INT 1
12275: PUSH
12276: LD_INT 1
12278: PUSH
12279: EMPTY
12280: LIST
12281: LIST
12282: PUSH
12283: LD_INT 0
12285: PUSH
12286: LD_INT 1
12288: PUSH
12289: EMPTY
12290: LIST
12291: LIST
12292: PUSH
12293: LD_INT 1
12295: NEG
12296: PUSH
12297: LD_INT 0
12299: PUSH
12300: EMPTY
12301: LIST
12302: LIST
12303: PUSH
12304: LD_INT 1
12306: NEG
12307: PUSH
12308: LD_INT 1
12310: NEG
12311: PUSH
12312: EMPTY
12313: LIST
12314: LIST
12315: PUSH
12316: LD_INT 1
12318: NEG
12319: PUSH
12320: LD_INT 2
12322: NEG
12323: PUSH
12324: EMPTY
12325: LIST
12326: LIST
12327: PUSH
12328: LD_INT 0
12330: PUSH
12331: LD_INT 2
12333: NEG
12334: PUSH
12335: EMPTY
12336: LIST
12337: LIST
12338: PUSH
12339: LD_INT 1
12341: PUSH
12342: LD_INT 1
12344: NEG
12345: PUSH
12346: EMPTY
12347: LIST
12348: LIST
12349: PUSH
12350: LD_INT 2
12352: PUSH
12353: LD_INT 0
12355: PUSH
12356: EMPTY
12357: LIST
12358: LIST
12359: PUSH
12360: LD_INT 2
12362: PUSH
12363: LD_INT 1
12365: PUSH
12366: EMPTY
12367: LIST
12368: LIST
12369: PUSH
12370: LD_INT 2
12372: PUSH
12373: LD_INT 2
12375: PUSH
12376: EMPTY
12377: LIST
12378: LIST
12379: PUSH
12380: LD_INT 1
12382: PUSH
12383: LD_INT 2
12385: PUSH
12386: EMPTY
12387: LIST
12388: LIST
12389: PUSH
12390: LD_INT 0
12392: PUSH
12393: LD_INT 2
12395: PUSH
12396: EMPTY
12397: LIST
12398: LIST
12399: PUSH
12400: LD_INT 1
12402: NEG
12403: PUSH
12404: LD_INT 1
12406: PUSH
12407: EMPTY
12408: LIST
12409: LIST
12410: PUSH
12411: LD_INT 2
12413: NEG
12414: PUSH
12415: LD_INT 0
12417: PUSH
12418: EMPTY
12419: LIST
12420: LIST
12421: PUSH
12422: LD_INT 2
12424: NEG
12425: PUSH
12426: LD_INT 1
12428: NEG
12429: PUSH
12430: EMPTY
12431: LIST
12432: LIST
12433: PUSH
12434: LD_INT 2
12436: NEG
12437: PUSH
12438: LD_INT 2
12440: NEG
12441: PUSH
12442: EMPTY
12443: LIST
12444: LIST
12445: PUSH
12446: LD_INT 1
12448: NEG
12449: PUSH
12450: LD_INT 2
12452: PUSH
12453: EMPTY
12454: LIST
12455: LIST
12456: PUSH
12457: LD_INT 2
12459: NEG
12460: PUSH
12461: LD_INT 1
12463: PUSH
12464: EMPTY
12465: LIST
12466: LIST
12467: PUSH
12468: LD_INT 3
12470: NEG
12471: PUSH
12472: LD_INT 1
12474: NEG
12475: PUSH
12476: EMPTY
12477: LIST
12478: LIST
12479: PUSH
12480: LD_INT 3
12482: NEG
12483: PUSH
12484: LD_INT 2
12486: NEG
12487: PUSH
12488: EMPTY
12489: LIST
12490: LIST
12491: PUSH
12492: EMPTY
12493: LIST
12494: LIST
12495: LIST
12496: LIST
12497: LIST
12498: LIST
12499: LIST
12500: LIST
12501: LIST
12502: LIST
12503: LIST
12504: LIST
12505: LIST
12506: LIST
12507: LIST
12508: LIST
12509: LIST
12510: LIST
12511: LIST
12512: LIST
12513: LIST
12514: LIST
12515: LIST
12516: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12517: LD_ADDR_VAR 0 28
12521: PUSH
12522: LD_INT 0
12524: PUSH
12525: LD_INT 0
12527: PUSH
12528: EMPTY
12529: LIST
12530: LIST
12531: PUSH
12532: LD_INT 0
12534: PUSH
12535: LD_INT 1
12537: NEG
12538: PUSH
12539: EMPTY
12540: LIST
12541: LIST
12542: PUSH
12543: LD_INT 1
12545: PUSH
12546: LD_INT 0
12548: PUSH
12549: EMPTY
12550: LIST
12551: LIST
12552: PUSH
12553: LD_INT 1
12555: PUSH
12556: LD_INT 1
12558: PUSH
12559: EMPTY
12560: LIST
12561: LIST
12562: PUSH
12563: LD_INT 0
12565: PUSH
12566: LD_INT 1
12568: PUSH
12569: EMPTY
12570: LIST
12571: LIST
12572: PUSH
12573: LD_INT 1
12575: NEG
12576: PUSH
12577: LD_INT 0
12579: PUSH
12580: EMPTY
12581: LIST
12582: LIST
12583: PUSH
12584: LD_INT 1
12586: NEG
12587: PUSH
12588: LD_INT 1
12590: NEG
12591: PUSH
12592: EMPTY
12593: LIST
12594: LIST
12595: PUSH
12596: LD_INT 1
12598: NEG
12599: PUSH
12600: LD_INT 2
12602: NEG
12603: PUSH
12604: EMPTY
12605: LIST
12606: LIST
12607: PUSH
12608: LD_INT 0
12610: PUSH
12611: LD_INT 2
12613: NEG
12614: PUSH
12615: EMPTY
12616: LIST
12617: LIST
12618: PUSH
12619: LD_INT 1
12621: PUSH
12622: LD_INT 1
12624: NEG
12625: PUSH
12626: EMPTY
12627: LIST
12628: LIST
12629: PUSH
12630: LD_INT 2
12632: PUSH
12633: LD_INT 0
12635: PUSH
12636: EMPTY
12637: LIST
12638: LIST
12639: PUSH
12640: LD_INT 2
12642: PUSH
12643: LD_INT 1
12645: PUSH
12646: EMPTY
12647: LIST
12648: LIST
12649: PUSH
12650: LD_INT 2
12652: PUSH
12653: LD_INT 2
12655: PUSH
12656: EMPTY
12657: LIST
12658: LIST
12659: PUSH
12660: LD_INT 1
12662: PUSH
12663: LD_INT 2
12665: PUSH
12666: EMPTY
12667: LIST
12668: LIST
12669: PUSH
12670: LD_INT 0
12672: PUSH
12673: LD_INT 2
12675: PUSH
12676: EMPTY
12677: LIST
12678: LIST
12679: PUSH
12680: LD_INT 1
12682: NEG
12683: PUSH
12684: LD_INT 1
12686: PUSH
12687: EMPTY
12688: LIST
12689: LIST
12690: PUSH
12691: LD_INT 2
12693: NEG
12694: PUSH
12695: LD_INT 0
12697: PUSH
12698: EMPTY
12699: LIST
12700: LIST
12701: PUSH
12702: LD_INT 2
12704: NEG
12705: PUSH
12706: LD_INT 1
12708: NEG
12709: PUSH
12710: EMPTY
12711: LIST
12712: LIST
12713: PUSH
12714: LD_INT 2
12716: NEG
12717: PUSH
12718: LD_INT 2
12720: NEG
12721: PUSH
12722: EMPTY
12723: LIST
12724: LIST
12725: PUSH
12726: LD_INT 2
12728: NEG
12729: PUSH
12730: LD_INT 3
12732: NEG
12733: PUSH
12734: EMPTY
12735: LIST
12736: LIST
12737: PUSH
12738: LD_INT 1
12740: NEG
12741: PUSH
12742: LD_INT 3
12744: NEG
12745: PUSH
12746: EMPTY
12747: LIST
12748: LIST
12749: PUSH
12750: LD_INT 3
12752: NEG
12753: PUSH
12754: LD_INT 1
12756: NEG
12757: PUSH
12758: EMPTY
12759: LIST
12760: LIST
12761: PUSH
12762: LD_INT 3
12764: NEG
12765: PUSH
12766: LD_INT 2
12768: NEG
12769: PUSH
12770: EMPTY
12771: LIST
12772: LIST
12773: PUSH
12774: EMPTY
12775: LIST
12776: LIST
12777: LIST
12778: LIST
12779: LIST
12780: LIST
12781: LIST
12782: LIST
12783: LIST
12784: LIST
12785: LIST
12786: LIST
12787: LIST
12788: LIST
12789: LIST
12790: LIST
12791: LIST
12792: LIST
12793: LIST
12794: LIST
12795: LIST
12796: LIST
12797: LIST
12798: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
12799: LD_ADDR_VAR 0 29
12803: PUSH
12804: LD_INT 0
12806: PUSH
12807: LD_INT 0
12809: PUSH
12810: EMPTY
12811: LIST
12812: LIST
12813: PUSH
12814: LD_INT 0
12816: PUSH
12817: LD_INT 1
12819: NEG
12820: PUSH
12821: EMPTY
12822: LIST
12823: LIST
12824: PUSH
12825: LD_INT 1
12827: PUSH
12828: LD_INT 0
12830: PUSH
12831: EMPTY
12832: LIST
12833: LIST
12834: PUSH
12835: LD_INT 1
12837: PUSH
12838: LD_INT 1
12840: PUSH
12841: EMPTY
12842: LIST
12843: LIST
12844: PUSH
12845: LD_INT 0
12847: PUSH
12848: LD_INT 1
12850: PUSH
12851: EMPTY
12852: LIST
12853: LIST
12854: PUSH
12855: LD_INT 1
12857: NEG
12858: PUSH
12859: LD_INT 0
12861: PUSH
12862: EMPTY
12863: LIST
12864: LIST
12865: PUSH
12866: LD_INT 1
12868: NEG
12869: PUSH
12870: LD_INT 1
12872: NEG
12873: PUSH
12874: EMPTY
12875: LIST
12876: LIST
12877: PUSH
12878: LD_INT 1
12880: NEG
12881: PUSH
12882: LD_INT 2
12884: NEG
12885: PUSH
12886: EMPTY
12887: LIST
12888: LIST
12889: PUSH
12890: LD_INT 0
12892: PUSH
12893: LD_INT 2
12895: NEG
12896: PUSH
12897: EMPTY
12898: LIST
12899: LIST
12900: PUSH
12901: LD_INT 1
12903: PUSH
12904: LD_INT 1
12906: NEG
12907: PUSH
12908: EMPTY
12909: LIST
12910: LIST
12911: PUSH
12912: LD_INT 2
12914: PUSH
12915: LD_INT 0
12917: PUSH
12918: EMPTY
12919: LIST
12920: LIST
12921: PUSH
12922: LD_INT 2
12924: PUSH
12925: LD_INT 1
12927: PUSH
12928: EMPTY
12929: LIST
12930: LIST
12931: PUSH
12932: LD_INT 1
12934: PUSH
12935: LD_INT 2
12937: PUSH
12938: EMPTY
12939: LIST
12940: LIST
12941: PUSH
12942: LD_INT 0
12944: PUSH
12945: LD_INT 2
12947: PUSH
12948: EMPTY
12949: LIST
12950: LIST
12951: PUSH
12952: LD_INT 1
12954: NEG
12955: PUSH
12956: LD_INT 1
12958: PUSH
12959: EMPTY
12960: LIST
12961: LIST
12962: PUSH
12963: LD_INT 2
12965: NEG
12966: PUSH
12967: LD_INT 1
12969: NEG
12970: PUSH
12971: EMPTY
12972: LIST
12973: LIST
12974: PUSH
12975: LD_INT 2
12977: NEG
12978: PUSH
12979: LD_INT 2
12981: NEG
12982: PUSH
12983: EMPTY
12984: LIST
12985: LIST
12986: PUSH
12987: LD_INT 2
12989: NEG
12990: PUSH
12991: LD_INT 3
12993: NEG
12994: PUSH
12995: EMPTY
12996: LIST
12997: LIST
12998: PUSH
12999: LD_INT 2
13001: PUSH
13002: LD_INT 1
13004: NEG
13005: PUSH
13006: EMPTY
13007: LIST
13008: LIST
13009: PUSH
13010: LD_INT 3
13012: PUSH
13013: LD_INT 1
13015: PUSH
13016: EMPTY
13017: LIST
13018: LIST
13019: PUSH
13020: LD_INT 1
13022: PUSH
13023: LD_INT 3
13025: PUSH
13026: EMPTY
13027: LIST
13028: LIST
13029: PUSH
13030: LD_INT 1
13032: NEG
13033: PUSH
13034: LD_INT 2
13036: PUSH
13037: EMPTY
13038: LIST
13039: LIST
13040: PUSH
13041: LD_INT 3
13043: NEG
13044: PUSH
13045: LD_INT 2
13047: NEG
13048: PUSH
13049: EMPTY
13050: LIST
13051: LIST
13052: PUSH
13053: EMPTY
13054: LIST
13055: LIST
13056: LIST
13057: LIST
13058: LIST
13059: LIST
13060: LIST
13061: LIST
13062: LIST
13063: LIST
13064: LIST
13065: LIST
13066: LIST
13067: LIST
13068: LIST
13069: LIST
13070: LIST
13071: LIST
13072: LIST
13073: LIST
13074: LIST
13075: LIST
13076: LIST
13077: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13078: LD_ADDR_VAR 0 30
13082: PUSH
13083: LD_INT 0
13085: PUSH
13086: LD_INT 0
13088: PUSH
13089: EMPTY
13090: LIST
13091: LIST
13092: PUSH
13093: LD_INT 0
13095: PUSH
13096: LD_INT 1
13098: NEG
13099: PUSH
13100: EMPTY
13101: LIST
13102: LIST
13103: PUSH
13104: LD_INT 1
13106: PUSH
13107: LD_INT 0
13109: PUSH
13110: EMPTY
13111: LIST
13112: LIST
13113: PUSH
13114: LD_INT 1
13116: PUSH
13117: LD_INT 1
13119: PUSH
13120: EMPTY
13121: LIST
13122: LIST
13123: PUSH
13124: LD_INT 0
13126: PUSH
13127: LD_INT 1
13129: PUSH
13130: EMPTY
13131: LIST
13132: LIST
13133: PUSH
13134: LD_INT 1
13136: NEG
13137: PUSH
13138: LD_INT 0
13140: PUSH
13141: EMPTY
13142: LIST
13143: LIST
13144: PUSH
13145: LD_INT 1
13147: NEG
13148: PUSH
13149: LD_INT 1
13151: NEG
13152: PUSH
13153: EMPTY
13154: LIST
13155: LIST
13156: PUSH
13157: LD_INT 1
13159: NEG
13160: PUSH
13161: LD_INT 2
13163: NEG
13164: PUSH
13165: EMPTY
13166: LIST
13167: LIST
13168: PUSH
13169: LD_INT 0
13171: PUSH
13172: LD_INT 2
13174: NEG
13175: PUSH
13176: EMPTY
13177: LIST
13178: LIST
13179: PUSH
13180: LD_INT 1
13182: PUSH
13183: LD_INT 1
13185: NEG
13186: PUSH
13187: EMPTY
13188: LIST
13189: LIST
13190: PUSH
13191: LD_INT 2
13193: PUSH
13194: LD_INT 0
13196: PUSH
13197: EMPTY
13198: LIST
13199: LIST
13200: PUSH
13201: LD_INT 2
13203: PUSH
13204: LD_INT 1
13206: PUSH
13207: EMPTY
13208: LIST
13209: LIST
13210: PUSH
13211: LD_INT 2
13213: PUSH
13214: LD_INT 2
13216: PUSH
13217: EMPTY
13218: LIST
13219: LIST
13220: PUSH
13221: LD_INT 1
13223: PUSH
13224: LD_INT 2
13226: PUSH
13227: EMPTY
13228: LIST
13229: LIST
13230: PUSH
13231: LD_INT 1
13233: NEG
13234: PUSH
13235: LD_INT 1
13237: PUSH
13238: EMPTY
13239: LIST
13240: LIST
13241: PUSH
13242: LD_INT 2
13244: NEG
13245: PUSH
13246: LD_INT 0
13248: PUSH
13249: EMPTY
13250: LIST
13251: LIST
13252: PUSH
13253: LD_INT 2
13255: NEG
13256: PUSH
13257: LD_INT 1
13259: NEG
13260: PUSH
13261: EMPTY
13262: LIST
13263: LIST
13264: PUSH
13265: LD_INT 1
13267: NEG
13268: PUSH
13269: LD_INT 3
13271: NEG
13272: PUSH
13273: EMPTY
13274: LIST
13275: LIST
13276: PUSH
13277: LD_INT 1
13279: PUSH
13280: LD_INT 2
13282: NEG
13283: PUSH
13284: EMPTY
13285: LIST
13286: LIST
13287: PUSH
13288: LD_INT 3
13290: PUSH
13291: LD_INT 2
13293: PUSH
13294: EMPTY
13295: LIST
13296: LIST
13297: PUSH
13298: LD_INT 2
13300: PUSH
13301: LD_INT 3
13303: PUSH
13304: EMPTY
13305: LIST
13306: LIST
13307: PUSH
13308: LD_INT 2
13310: NEG
13311: PUSH
13312: LD_INT 1
13314: PUSH
13315: EMPTY
13316: LIST
13317: LIST
13318: PUSH
13319: LD_INT 3
13321: NEG
13322: PUSH
13323: LD_INT 1
13325: NEG
13326: PUSH
13327: EMPTY
13328: LIST
13329: LIST
13330: PUSH
13331: EMPTY
13332: LIST
13333: LIST
13334: LIST
13335: LIST
13336: LIST
13337: LIST
13338: LIST
13339: LIST
13340: LIST
13341: LIST
13342: LIST
13343: LIST
13344: LIST
13345: LIST
13346: LIST
13347: LIST
13348: LIST
13349: LIST
13350: LIST
13351: LIST
13352: LIST
13353: LIST
13354: LIST
13355: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13356: LD_ADDR_VAR 0 31
13360: PUSH
13361: LD_INT 0
13363: PUSH
13364: LD_INT 0
13366: PUSH
13367: EMPTY
13368: LIST
13369: LIST
13370: PUSH
13371: LD_INT 0
13373: PUSH
13374: LD_INT 1
13376: NEG
13377: PUSH
13378: EMPTY
13379: LIST
13380: LIST
13381: PUSH
13382: LD_INT 1
13384: PUSH
13385: LD_INT 0
13387: PUSH
13388: EMPTY
13389: LIST
13390: LIST
13391: PUSH
13392: LD_INT 1
13394: PUSH
13395: LD_INT 1
13397: PUSH
13398: EMPTY
13399: LIST
13400: LIST
13401: PUSH
13402: LD_INT 0
13404: PUSH
13405: LD_INT 1
13407: PUSH
13408: EMPTY
13409: LIST
13410: LIST
13411: PUSH
13412: LD_INT 1
13414: NEG
13415: PUSH
13416: LD_INT 0
13418: PUSH
13419: EMPTY
13420: LIST
13421: LIST
13422: PUSH
13423: LD_INT 1
13425: NEG
13426: PUSH
13427: LD_INT 1
13429: NEG
13430: PUSH
13431: EMPTY
13432: LIST
13433: LIST
13434: PUSH
13435: LD_INT 1
13437: NEG
13438: PUSH
13439: LD_INT 2
13441: NEG
13442: PUSH
13443: EMPTY
13444: LIST
13445: LIST
13446: PUSH
13447: LD_INT 1
13449: PUSH
13450: LD_INT 1
13452: NEG
13453: PUSH
13454: EMPTY
13455: LIST
13456: LIST
13457: PUSH
13458: LD_INT 2
13460: PUSH
13461: LD_INT 0
13463: PUSH
13464: EMPTY
13465: LIST
13466: LIST
13467: PUSH
13468: LD_INT 2
13470: PUSH
13471: LD_INT 1
13473: PUSH
13474: EMPTY
13475: LIST
13476: LIST
13477: PUSH
13478: LD_INT 2
13480: PUSH
13481: LD_INT 2
13483: PUSH
13484: EMPTY
13485: LIST
13486: LIST
13487: PUSH
13488: LD_INT 1
13490: PUSH
13491: LD_INT 2
13493: PUSH
13494: EMPTY
13495: LIST
13496: LIST
13497: PUSH
13498: LD_INT 0
13500: PUSH
13501: LD_INT 2
13503: PUSH
13504: EMPTY
13505: LIST
13506: LIST
13507: PUSH
13508: LD_INT 1
13510: NEG
13511: PUSH
13512: LD_INT 1
13514: PUSH
13515: EMPTY
13516: LIST
13517: LIST
13518: PUSH
13519: LD_INT 2
13521: NEG
13522: PUSH
13523: LD_INT 1
13525: NEG
13526: PUSH
13527: EMPTY
13528: LIST
13529: LIST
13530: PUSH
13531: LD_INT 2
13533: NEG
13534: PUSH
13535: LD_INT 2
13537: NEG
13538: PUSH
13539: EMPTY
13540: LIST
13541: LIST
13542: PUSH
13543: LD_INT 2
13545: NEG
13546: PUSH
13547: LD_INT 3
13549: NEG
13550: PUSH
13551: EMPTY
13552: LIST
13553: LIST
13554: PUSH
13555: LD_INT 2
13557: PUSH
13558: LD_INT 1
13560: NEG
13561: PUSH
13562: EMPTY
13563: LIST
13564: LIST
13565: PUSH
13566: LD_INT 3
13568: PUSH
13569: LD_INT 1
13571: PUSH
13572: EMPTY
13573: LIST
13574: LIST
13575: PUSH
13576: LD_INT 1
13578: PUSH
13579: LD_INT 3
13581: PUSH
13582: EMPTY
13583: LIST
13584: LIST
13585: PUSH
13586: LD_INT 1
13588: NEG
13589: PUSH
13590: LD_INT 2
13592: PUSH
13593: EMPTY
13594: LIST
13595: LIST
13596: PUSH
13597: LD_INT 3
13599: NEG
13600: PUSH
13601: LD_INT 2
13603: NEG
13604: PUSH
13605: EMPTY
13606: LIST
13607: LIST
13608: PUSH
13609: EMPTY
13610: LIST
13611: LIST
13612: LIST
13613: LIST
13614: LIST
13615: LIST
13616: LIST
13617: LIST
13618: LIST
13619: LIST
13620: LIST
13621: LIST
13622: LIST
13623: LIST
13624: LIST
13625: LIST
13626: LIST
13627: LIST
13628: LIST
13629: LIST
13630: LIST
13631: LIST
13632: LIST
13633: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13634: LD_ADDR_VAR 0 32
13638: PUSH
13639: LD_INT 0
13641: PUSH
13642: LD_INT 0
13644: PUSH
13645: EMPTY
13646: LIST
13647: LIST
13648: PUSH
13649: LD_INT 0
13651: PUSH
13652: LD_INT 1
13654: NEG
13655: PUSH
13656: EMPTY
13657: LIST
13658: LIST
13659: PUSH
13660: LD_INT 1
13662: PUSH
13663: LD_INT 0
13665: PUSH
13666: EMPTY
13667: LIST
13668: LIST
13669: PUSH
13670: LD_INT 1
13672: PUSH
13673: LD_INT 1
13675: PUSH
13676: EMPTY
13677: LIST
13678: LIST
13679: PUSH
13680: LD_INT 0
13682: PUSH
13683: LD_INT 1
13685: PUSH
13686: EMPTY
13687: LIST
13688: LIST
13689: PUSH
13690: LD_INT 1
13692: NEG
13693: PUSH
13694: LD_INT 0
13696: PUSH
13697: EMPTY
13698: LIST
13699: LIST
13700: PUSH
13701: LD_INT 1
13703: NEG
13704: PUSH
13705: LD_INT 1
13707: NEG
13708: PUSH
13709: EMPTY
13710: LIST
13711: LIST
13712: PUSH
13713: LD_INT 1
13715: NEG
13716: PUSH
13717: LD_INT 2
13719: NEG
13720: PUSH
13721: EMPTY
13722: LIST
13723: LIST
13724: PUSH
13725: LD_INT 0
13727: PUSH
13728: LD_INT 2
13730: NEG
13731: PUSH
13732: EMPTY
13733: LIST
13734: LIST
13735: PUSH
13736: LD_INT 1
13738: PUSH
13739: LD_INT 1
13741: NEG
13742: PUSH
13743: EMPTY
13744: LIST
13745: LIST
13746: PUSH
13747: LD_INT 2
13749: PUSH
13750: LD_INT 1
13752: PUSH
13753: EMPTY
13754: LIST
13755: LIST
13756: PUSH
13757: LD_INT 2
13759: PUSH
13760: LD_INT 2
13762: PUSH
13763: EMPTY
13764: LIST
13765: LIST
13766: PUSH
13767: LD_INT 1
13769: PUSH
13770: LD_INT 2
13772: PUSH
13773: EMPTY
13774: LIST
13775: LIST
13776: PUSH
13777: LD_INT 0
13779: PUSH
13780: LD_INT 2
13782: PUSH
13783: EMPTY
13784: LIST
13785: LIST
13786: PUSH
13787: LD_INT 1
13789: NEG
13790: PUSH
13791: LD_INT 1
13793: PUSH
13794: EMPTY
13795: LIST
13796: LIST
13797: PUSH
13798: LD_INT 2
13800: NEG
13801: PUSH
13802: LD_INT 0
13804: PUSH
13805: EMPTY
13806: LIST
13807: LIST
13808: PUSH
13809: LD_INT 2
13811: NEG
13812: PUSH
13813: LD_INT 1
13815: NEG
13816: PUSH
13817: EMPTY
13818: LIST
13819: LIST
13820: PUSH
13821: LD_INT 1
13823: NEG
13824: PUSH
13825: LD_INT 3
13827: NEG
13828: PUSH
13829: EMPTY
13830: LIST
13831: LIST
13832: PUSH
13833: LD_INT 1
13835: PUSH
13836: LD_INT 2
13838: NEG
13839: PUSH
13840: EMPTY
13841: LIST
13842: LIST
13843: PUSH
13844: LD_INT 3
13846: PUSH
13847: LD_INT 2
13849: PUSH
13850: EMPTY
13851: LIST
13852: LIST
13853: PUSH
13854: LD_INT 2
13856: PUSH
13857: LD_INT 3
13859: PUSH
13860: EMPTY
13861: LIST
13862: LIST
13863: PUSH
13864: LD_INT 2
13866: NEG
13867: PUSH
13868: LD_INT 1
13870: PUSH
13871: EMPTY
13872: LIST
13873: LIST
13874: PUSH
13875: LD_INT 3
13877: NEG
13878: PUSH
13879: LD_INT 1
13881: NEG
13882: PUSH
13883: EMPTY
13884: LIST
13885: LIST
13886: PUSH
13887: EMPTY
13888: LIST
13889: LIST
13890: LIST
13891: LIST
13892: LIST
13893: LIST
13894: LIST
13895: LIST
13896: LIST
13897: LIST
13898: LIST
13899: LIST
13900: LIST
13901: LIST
13902: LIST
13903: LIST
13904: LIST
13905: LIST
13906: LIST
13907: LIST
13908: LIST
13909: LIST
13910: LIST
13911: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13912: LD_ADDR_VAR 0 33
13916: PUSH
13917: LD_INT 0
13919: PUSH
13920: LD_INT 0
13922: PUSH
13923: EMPTY
13924: LIST
13925: LIST
13926: PUSH
13927: LD_INT 0
13929: PUSH
13930: LD_INT 1
13932: NEG
13933: PUSH
13934: EMPTY
13935: LIST
13936: LIST
13937: PUSH
13938: LD_INT 1
13940: PUSH
13941: LD_INT 0
13943: PUSH
13944: EMPTY
13945: LIST
13946: LIST
13947: PUSH
13948: LD_INT 1
13950: PUSH
13951: LD_INT 1
13953: PUSH
13954: EMPTY
13955: LIST
13956: LIST
13957: PUSH
13958: LD_INT 0
13960: PUSH
13961: LD_INT 1
13963: PUSH
13964: EMPTY
13965: LIST
13966: LIST
13967: PUSH
13968: LD_INT 1
13970: NEG
13971: PUSH
13972: LD_INT 0
13974: PUSH
13975: EMPTY
13976: LIST
13977: LIST
13978: PUSH
13979: LD_INT 1
13981: NEG
13982: PUSH
13983: LD_INT 1
13985: NEG
13986: PUSH
13987: EMPTY
13988: LIST
13989: LIST
13990: PUSH
13991: LD_INT 1
13993: NEG
13994: PUSH
13995: LD_INT 2
13997: NEG
13998: PUSH
13999: EMPTY
14000: LIST
14001: LIST
14002: PUSH
14003: LD_INT 1
14005: PUSH
14006: LD_INT 1
14008: NEG
14009: PUSH
14010: EMPTY
14011: LIST
14012: LIST
14013: PUSH
14014: LD_INT 2
14016: PUSH
14017: LD_INT 0
14019: PUSH
14020: EMPTY
14021: LIST
14022: LIST
14023: PUSH
14024: LD_INT 2
14026: PUSH
14027: LD_INT 1
14029: PUSH
14030: EMPTY
14031: LIST
14032: LIST
14033: PUSH
14034: LD_INT 1
14036: PUSH
14037: LD_INT 2
14039: PUSH
14040: EMPTY
14041: LIST
14042: LIST
14043: PUSH
14044: LD_INT 0
14046: PUSH
14047: LD_INT 2
14049: PUSH
14050: EMPTY
14051: LIST
14052: LIST
14053: PUSH
14054: LD_INT 1
14056: NEG
14057: PUSH
14058: LD_INT 1
14060: PUSH
14061: EMPTY
14062: LIST
14063: LIST
14064: PUSH
14065: LD_INT 2
14067: NEG
14068: PUSH
14069: LD_INT 0
14071: PUSH
14072: EMPTY
14073: LIST
14074: LIST
14075: PUSH
14076: LD_INT 2
14078: NEG
14079: PUSH
14080: LD_INT 1
14082: NEG
14083: PUSH
14084: EMPTY
14085: LIST
14086: LIST
14087: PUSH
14088: LD_INT 2
14090: NEG
14091: PUSH
14092: LD_INT 2
14094: NEG
14095: PUSH
14096: EMPTY
14097: LIST
14098: LIST
14099: PUSH
14100: LD_INT 2
14102: NEG
14103: PUSH
14104: LD_INT 3
14106: NEG
14107: PUSH
14108: EMPTY
14109: LIST
14110: LIST
14111: PUSH
14112: LD_INT 2
14114: PUSH
14115: LD_INT 1
14117: NEG
14118: PUSH
14119: EMPTY
14120: LIST
14121: LIST
14122: PUSH
14123: LD_INT 3
14125: PUSH
14126: LD_INT 1
14128: PUSH
14129: EMPTY
14130: LIST
14131: LIST
14132: PUSH
14133: LD_INT 1
14135: PUSH
14136: LD_INT 3
14138: PUSH
14139: EMPTY
14140: LIST
14141: LIST
14142: PUSH
14143: LD_INT 1
14145: NEG
14146: PUSH
14147: LD_INT 2
14149: PUSH
14150: EMPTY
14151: LIST
14152: LIST
14153: PUSH
14154: LD_INT 3
14156: NEG
14157: PUSH
14158: LD_INT 2
14160: NEG
14161: PUSH
14162: EMPTY
14163: LIST
14164: LIST
14165: PUSH
14166: EMPTY
14167: LIST
14168: LIST
14169: LIST
14170: LIST
14171: LIST
14172: LIST
14173: LIST
14174: LIST
14175: LIST
14176: LIST
14177: LIST
14178: LIST
14179: LIST
14180: LIST
14181: LIST
14182: LIST
14183: LIST
14184: LIST
14185: LIST
14186: LIST
14187: LIST
14188: LIST
14189: LIST
14190: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14191: LD_ADDR_VAR 0 34
14195: PUSH
14196: LD_INT 0
14198: PUSH
14199: LD_INT 0
14201: PUSH
14202: EMPTY
14203: LIST
14204: LIST
14205: PUSH
14206: LD_INT 0
14208: PUSH
14209: LD_INT 1
14211: NEG
14212: PUSH
14213: EMPTY
14214: LIST
14215: LIST
14216: PUSH
14217: LD_INT 1
14219: PUSH
14220: LD_INT 0
14222: PUSH
14223: EMPTY
14224: LIST
14225: LIST
14226: PUSH
14227: LD_INT 1
14229: PUSH
14230: LD_INT 1
14232: PUSH
14233: EMPTY
14234: LIST
14235: LIST
14236: PUSH
14237: LD_INT 0
14239: PUSH
14240: LD_INT 1
14242: PUSH
14243: EMPTY
14244: LIST
14245: LIST
14246: PUSH
14247: LD_INT 1
14249: NEG
14250: PUSH
14251: LD_INT 0
14253: PUSH
14254: EMPTY
14255: LIST
14256: LIST
14257: PUSH
14258: LD_INT 1
14260: NEG
14261: PUSH
14262: LD_INT 1
14264: NEG
14265: PUSH
14266: EMPTY
14267: LIST
14268: LIST
14269: PUSH
14270: LD_INT 1
14272: NEG
14273: PUSH
14274: LD_INT 2
14276: NEG
14277: PUSH
14278: EMPTY
14279: LIST
14280: LIST
14281: PUSH
14282: LD_INT 0
14284: PUSH
14285: LD_INT 2
14287: NEG
14288: PUSH
14289: EMPTY
14290: LIST
14291: LIST
14292: PUSH
14293: LD_INT 1
14295: PUSH
14296: LD_INT 1
14298: NEG
14299: PUSH
14300: EMPTY
14301: LIST
14302: LIST
14303: PUSH
14304: LD_INT 2
14306: PUSH
14307: LD_INT 1
14309: PUSH
14310: EMPTY
14311: LIST
14312: LIST
14313: PUSH
14314: LD_INT 2
14316: PUSH
14317: LD_INT 2
14319: PUSH
14320: EMPTY
14321: LIST
14322: LIST
14323: PUSH
14324: LD_INT 1
14326: PUSH
14327: LD_INT 2
14329: PUSH
14330: EMPTY
14331: LIST
14332: LIST
14333: PUSH
14334: LD_INT 1
14336: NEG
14337: PUSH
14338: LD_INT 1
14340: PUSH
14341: EMPTY
14342: LIST
14343: LIST
14344: PUSH
14345: LD_INT 2
14347: NEG
14348: PUSH
14349: LD_INT 0
14351: PUSH
14352: EMPTY
14353: LIST
14354: LIST
14355: PUSH
14356: LD_INT 2
14358: NEG
14359: PUSH
14360: LD_INT 1
14362: NEG
14363: PUSH
14364: EMPTY
14365: LIST
14366: LIST
14367: PUSH
14368: LD_INT 2
14370: NEG
14371: PUSH
14372: LD_INT 2
14374: NEG
14375: PUSH
14376: EMPTY
14377: LIST
14378: LIST
14379: PUSH
14380: LD_INT 1
14382: NEG
14383: PUSH
14384: LD_INT 3
14386: NEG
14387: PUSH
14388: EMPTY
14389: LIST
14390: LIST
14391: PUSH
14392: LD_INT 1
14394: PUSH
14395: LD_INT 2
14397: NEG
14398: PUSH
14399: EMPTY
14400: LIST
14401: LIST
14402: PUSH
14403: LD_INT 3
14405: PUSH
14406: LD_INT 2
14408: PUSH
14409: EMPTY
14410: LIST
14411: LIST
14412: PUSH
14413: LD_INT 2
14415: PUSH
14416: LD_INT 3
14418: PUSH
14419: EMPTY
14420: LIST
14421: LIST
14422: PUSH
14423: LD_INT 2
14425: NEG
14426: PUSH
14427: LD_INT 1
14429: PUSH
14430: EMPTY
14431: LIST
14432: LIST
14433: PUSH
14434: LD_INT 3
14436: NEG
14437: PUSH
14438: LD_INT 1
14440: NEG
14441: PUSH
14442: EMPTY
14443: LIST
14444: LIST
14445: PUSH
14446: EMPTY
14447: LIST
14448: LIST
14449: LIST
14450: LIST
14451: LIST
14452: LIST
14453: LIST
14454: LIST
14455: LIST
14456: LIST
14457: LIST
14458: LIST
14459: LIST
14460: LIST
14461: LIST
14462: LIST
14463: LIST
14464: LIST
14465: LIST
14466: LIST
14467: LIST
14468: LIST
14469: LIST
14470: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14471: LD_ADDR_VAR 0 35
14475: PUSH
14476: LD_INT 0
14478: PUSH
14479: LD_INT 0
14481: PUSH
14482: EMPTY
14483: LIST
14484: LIST
14485: PUSH
14486: LD_INT 0
14488: PUSH
14489: LD_INT 1
14491: NEG
14492: PUSH
14493: EMPTY
14494: LIST
14495: LIST
14496: PUSH
14497: LD_INT 1
14499: PUSH
14500: LD_INT 0
14502: PUSH
14503: EMPTY
14504: LIST
14505: LIST
14506: PUSH
14507: LD_INT 1
14509: PUSH
14510: LD_INT 1
14512: PUSH
14513: EMPTY
14514: LIST
14515: LIST
14516: PUSH
14517: LD_INT 0
14519: PUSH
14520: LD_INT 1
14522: PUSH
14523: EMPTY
14524: LIST
14525: LIST
14526: PUSH
14527: LD_INT 1
14529: NEG
14530: PUSH
14531: LD_INT 0
14533: PUSH
14534: EMPTY
14535: LIST
14536: LIST
14537: PUSH
14538: LD_INT 1
14540: NEG
14541: PUSH
14542: LD_INT 1
14544: NEG
14545: PUSH
14546: EMPTY
14547: LIST
14548: LIST
14549: PUSH
14550: LD_INT 2
14552: PUSH
14553: LD_INT 1
14555: PUSH
14556: EMPTY
14557: LIST
14558: LIST
14559: PUSH
14560: LD_INT 2
14562: NEG
14563: PUSH
14564: LD_INT 1
14566: NEG
14567: PUSH
14568: EMPTY
14569: LIST
14570: LIST
14571: PUSH
14572: EMPTY
14573: LIST
14574: LIST
14575: LIST
14576: LIST
14577: LIST
14578: LIST
14579: LIST
14580: LIST
14581: LIST
14582: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14583: LD_ADDR_VAR 0 36
14587: PUSH
14588: LD_INT 0
14590: PUSH
14591: LD_INT 0
14593: PUSH
14594: EMPTY
14595: LIST
14596: LIST
14597: PUSH
14598: LD_INT 0
14600: PUSH
14601: LD_INT 1
14603: NEG
14604: PUSH
14605: EMPTY
14606: LIST
14607: LIST
14608: PUSH
14609: LD_INT 1
14611: PUSH
14612: LD_INT 0
14614: PUSH
14615: EMPTY
14616: LIST
14617: LIST
14618: PUSH
14619: LD_INT 1
14621: PUSH
14622: LD_INT 1
14624: PUSH
14625: EMPTY
14626: LIST
14627: LIST
14628: PUSH
14629: LD_INT 0
14631: PUSH
14632: LD_INT 1
14634: PUSH
14635: EMPTY
14636: LIST
14637: LIST
14638: PUSH
14639: LD_INT 1
14641: NEG
14642: PUSH
14643: LD_INT 0
14645: PUSH
14646: EMPTY
14647: LIST
14648: LIST
14649: PUSH
14650: LD_INT 1
14652: NEG
14653: PUSH
14654: LD_INT 1
14656: NEG
14657: PUSH
14658: EMPTY
14659: LIST
14660: LIST
14661: PUSH
14662: LD_INT 1
14664: NEG
14665: PUSH
14666: LD_INT 2
14668: NEG
14669: PUSH
14670: EMPTY
14671: LIST
14672: LIST
14673: PUSH
14674: LD_INT 1
14676: PUSH
14677: LD_INT 2
14679: PUSH
14680: EMPTY
14681: LIST
14682: LIST
14683: PUSH
14684: EMPTY
14685: LIST
14686: LIST
14687: LIST
14688: LIST
14689: LIST
14690: LIST
14691: LIST
14692: LIST
14693: LIST
14694: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
14695: LD_ADDR_VAR 0 37
14699: PUSH
14700: LD_INT 0
14702: PUSH
14703: LD_INT 0
14705: PUSH
14706: EMPTY
14707: LIST
14708: LIST
14709: PUSH
14710: LD_INT 0
14712: PUSH
14713: LD_INT 1
14715: NEG
14716: PUSH
14717: EMPTY
14718: LIST
14719: LIST
14720: PUSH
14721: LD_INT 1
14723: PUSH
14724: LD_INT 0
14726: PUSH
14727: EMPTY
14728: LIST
14729: LIST
14730: PUSH
14731: LD_INT 1
14733: PUSH
14734: LD_INT 1
14736: PUSH
14737: EMPTY
14738: LIST
14739: LIST
14740: PUSH
14741: LD_INT 0
14743: PUSH
14744: LD_INT 1
14746: PUSH
14747: EMPTY
14748: LIST
14749: LIST
14750: PUSH
14751: LD_INT 1
14753: NEG
14754: PUSH
14755: LD_INT 0
14757: PUSH
14758: EMPTY
14759: LIST
14760: LIST
14761: PUSH
14762: LD_INT 1
14764: NEG
14765: PUSH
14766: LD_INT 1
14768: NEG
14769: PUSH
14770: EMPTY
14771: LIST
14772: LIST
14773: PUSH
14774: LD_INT 1
14776: PUSH
14777: LD_INT 1
14779: NEG
14780: PUSH
14781: EMPTY
14782: LIST
14783: LIST
14784: PUSH
14785: LD_INT 1
14787: NEG
14788: PUSH
14789: LD_INT 1
14791: PUSH
14792: EMPTY
14793: LIST
14794: LIST
14795: PUSH
14796: EMPTY
14797: LIST
14798: LIST
14799: LIST
14800: LIST
14801: LIST
14802: LIST
14803: LIST
14804: LIST
14805: LIST
14806: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14807: LD_ADDR_VAR 0 38
14811: PUSH
14812: LD_INT 0
14814: PUSH
14815: LD_INT 0
14817: PUSH
14818: EMPTY
14819: LIST
14820: LIST
14821: PUSH
14822: LD_INT 0
14824: PUSH
14825: LD_INT 1
14827: NEG
14828: PUSH
14829: EMPTY
14830: LIST
14831: LIST
14832: PUSH
14833: LD_INT 1
14835: PUSH
14836: LD_INT 0
14838: PUSH
14839: EMPTY
14840: LIST
14841: LIST
14842: PUSH
14843: LD_INT 1
14845: PUSH
14846: LD_INT 1
14848: PUSH
14849: EMPTY
14850: LIST
14851: LIST
14852: PUSH
14853: LD_INT 0
14855: PUSH
14856: LD_INT 1
14858: PUSH
14859: EMPTY
14860: LIST
14861: LIST
14862: PUSH
14863: LD_INT 1
14865: NEG
14866: PUSH
14867: LD_INT 0
14869: PUSH
14870: EMPTY
14871: LIST
14872: LIST
14873: PUSH
14874: LD_INT 1
14876: NEG
14877: PUSH
14878: LD_INT 1
14880: NEG
14881: PUSH
14882: EMPTY
14883: LIST
14884: LIST
14885: PUSH
14886: LD_INT 2
14888: PUSH
14889: LD_INT 1
14891: PUSH
14892: EMPTY
14893: LIST
14894: LIST
14895: PUSH
14896: LD_INT 2
14898: NEG
14899: PUSH
14900: LD_INT 1
14902: NEG
14903: PUSH
14904: EMPTY
14905: LIST
14906: LIST
14907: PUSH
14908: EMPTY
14909: LIST
14910: LIST
14911: LIST
14912: LIST
14913: LIST
14914: LIST
14915: LIST
14916: LIST
14917: LIST
14918: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14919: LD_ADDR_VAR 0 39
14923: PUSH
14924: LD_INT 0
14926: PUSH
14927: LD_INT 0
14929: PUSH
14930: EMPTY
14931: LIST
14932: LIST
14933: PUSH
14934: LD_INT 0
14936: PUSH
14937: LD_INT 1
14939: NEG
14940: PUSH
14941: EMPTY
14942: LIST
14943: LIST
14944: PUSH
14945: LD_INT 1
14947: PUSH
14948: LD_INT 0
14950: PUSH
14951: EMPTY
14952: LIST
14953: LIST
14954: PUSH
14955: LD_INT 1
14957: PUSH
14958: LD_INT 1
14960: PUSH
14961: EMPTY
14962: LIST
14963: LIST
14964: PUSH
14965: LD_INT 0
14967: PUSH
14968: LD_INT 1
14970: PUSH
14971: EMPTY
14972: LIST
14973: LIST
14974: PUSH
14975: LD_INT 1
14977: NEG
14978: PUSH
14979: LD_INT 0
14981: PUSH
14982: EMPTY
14983: LIST
14984: LIST
14985: PUSH
14986: LD_INT 1
14988: NEG
14989: PUSH
14990: LD_INT 1
14992: NEG
14993: PUSH
14994: EMPTY
14995: LIST
14996: LIST
14997: PUSH
14998: LD_INT 1
15000: NEG
15001: PUSH
15002: LD_INT 2
15004: NEG
15005: PUSH
15006: EMPTY
15007: LIST
15008: LIST
15009: PUSH
15010: LD_INT 1
15012: PUSH
15013: LD_INT 2
15015: PUSH
15016: EMPTY
15017: LIST
15018: LIST
15019: PUSH
15020: EMPTY
15021: LIST
15022: LIST
15023: LIST
15024: LIST
15025: LIST
15026: LIST
15027: LIST
15028: LIST
15029: LIST
15030: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15031: LD_ADDR_VAR 0 40
15035: PUSH
15036: LD_INT 0
15038: PUSH
15039: LD_INT 0
15041: PUSH
15042: EMPTY
15043: LIST
15044: LIST
15045: PUSH
15046: LD_INT 0
15048: PUSH
15049: LD_INT 1
15051: NEG
15052: PUSH
15053: EMPTY
15054: LIST
15055: LIST
15056: PUSH
15057: LD_INT 1
15059: PUSH
15060: LD_INT 0
15062: PUSH
15063: EMPTY
15064: LIST
15065: LIST
15066: PUSH
15067: LD_INT 1
15069: PUSH
15070: LD_INT 1
15072: PUSH
15073: EMPTY
15074: LIST
15075: LIST
15076: PUSH
15077: LD_INT 0
15079: PUSH
15080: LD_INT 1
15082: PUSH
15083: EMPTY
15084: LIST
15085: LIST
15086: PUSH
15087: LD_INT 1
15089: NEG
15090: PUSH
15091: LD_INT 0
15093: PUSH
15094: EMPTY
15095: LIST
15096: LIST
15097: PUSH
15098: LD_INT 1
15100: NEG
15101: PUSH
15102: LD_INT 1
15104: NEG
15105: PUSH
15106: EMPTY
15107: LIST
15108: LIST
15109: PUSH
15110: LD_INT 1
15112: PUSH
15113: LD_INT 1
15115: NEG
15116: PUSH
15117: EMPTY
15118: LIST
15119: LIST
15120: PUSH
15121: LD_INT 1
15123: NEG
15124: PUSH
15125: LD_INT 1
15127: PUSH
15128: EMPTY
15129: LIST
15130: LIST
15131: PUSH
15132: EMPTY
15133: LIST
15134: LIST
15135: LIST
15136: LIST
15137: LIST
15138: LIST
15139: LIST
15140: LIST
15141: LIST
15142: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15143: LD_ADDR_VAR 0 41
15147: PUSH
15148: LD_INT 0
15150: PUSH
15151: LD_INT 0
15153: PUSH
15154: EMPTY
15155: LIST
15156: LIST
15157: PUSH
15158: LD_INT 0
15160: PUSH
15161: LD_INT 1
15163: NEG
15164: PUSH
15165: EMPTY
15166: LIST
15167: LIST
15168: PUSH
15169: LD_INT 1
15171: PUSH
15172: LD_INT 0
15174: PUSH
15175: EMPTY
15176: LIST
15177: LIST
15178: PUSH
15179: LD_INT 1
15181: PUSH
15182: LD_INT 1
15184: PUSH
15185: EMPTY
15186: LIST
15187: LIST
15188: PUSH
15189: LD_INT 0
15191: PUSH
15192: LD_INT 1
15194: PUSH
15195: EMPTY
15196: LIST
15197: LIST
15198: PUSH
15199: LD_INT 1
15201: NEG
15202: PUSH
15203: LD_INT 0
15205: PUSH
15206: EMPTY
15207: LIST
15208: LIST
15209: PUSH
15210: LD_INT 1
15212: NEG
15213: PUSH
15214: LD_INT 1
15216: NEG
15217: PUSH
15218: EMPTY
15219: LIST
15220: LIST
15221: PUSH
15222: LD_INT 1
15224: NEG
15225: PUSH
15226: LD_INT 2
15228: NEG
15229: PUSH
15230: EMPTY
15231: LIST
15232: LIST
15233: PUSH
15234: LD_INT 1
15236: PUSH
15237: LD_INT 1
15239: NEG
15240: PUSH
15241: EMPTY
15242: LIST
15243: LIST
15244: PUSH
15245: LD_INT 2
15247: PUSH
15248: LD_INT 0
15250: PUSH
15251: EMPTY
15252: LIST
15253: LIST
15254: PUSH
15255: LD_INT 2
15257: PUSH
15258: LD_INT 1
15260: PUSH
15261: EMPTY
15262: LIST
15263: LIST
15264: PUSH
15265: LD_INT 2
15267: PUSH
15268: LD_INT 2
15270: PUSH
15271: EMPTY
15272: LIST
15273: LIST
15274: PUSH
15275: LD_INT 1
15277: PUSH
15278: LD_INT 2
15280: PUSH
15281: EMPTY
15282: LIST
15283: LIST
15284: PUSH
15285: LD_INT 1
15287: NEG
15288: PUSH
15289: LD_INT 1
15291: PUSH
15292: EMPTY
15293: LIST
15294: LIST
15295: PUSH
15296: LD_INT 2
15298: NEG
15299: PUSH
15300: LD_INT 0
15302: PUSH
15303: EMPTY
15304: LIST
15305: LIST
15306: PUSH
15307: LD_INT 2
15309: NEG
15310: PUSH
15311: LD_INT 1
15313: NEG
15314: PUSH
15315: EMPTY
15316: LIST
15317: LIST
15318: PUSH
15319: LD_INT 2
15321: NEG
15322: PUSH
15323: LD_INT 2
15325: NEG
15326: PUSH
15327: EMPTY
15328: LIST
15329: LIST
15330: PUSH
15331: LD_INT 2
15333: NEG
15334: PUSH
15335: LD_INT 3
15337: NEG
15338: PUSH
15339: EMPTY
15340: LIST
15341: LIST
15342: PUSH
15343: LD_INT 2
15345: PUSH
15346: LD_INT 1
15348: NEG
15349: PUSH
15350: EMPTY
15351: LIST
15352: LIST
15353: PUSH
15354: LD_INT 3
15356: PUSH
15357: LD_INT 0
15359: PUSH
15360: EMPTY
15361: LIST
15362: LIST
15363: PUSH
15364: LD_INT 3
15366: PUSH
15367: LD_INT 1
15369: PUSH
15370: EMPTY
15371: LIST
15372: LIST
15373: PUSH
15374: LD_INT 3
15376: PUSH
15377: LD_INT 2
15379: PUSH
15380: EMPTY
15381: LIST
15382: LIST
15383: PUSH
15384: LD_INT 3
15386: PUSH
15387: LD_INT 3
15389: PUSH
15390: EMPTY
15391: LIST
15392: LIST
15393: PUSH
15394: LD_INT 2
15396: PUSH
15397: LD_INT 3
15399: PUSH
15400: EMPTY
15401: LIST
15402: LIST
15403: PUSH
15404: LD_INT 2
15406: NEG
15407: PUSH
15408: LD_INT 1
15410: PUSH
15411: EMPTY
15412: LIST
15413: LIST
15414: PUSH
15415: LD_INT 3
15417: NEG
15418: PUSH
15419: LD_INT 0
15421: PUSH
15422: EMPTY
15423: LIST
15424: LIST
15425: PUSH
15426: LD_INT 3
15428: NEG
15429: PUSH
15430: LD_INT 1
15432: NEG
15433: PUSH
15434: EMPTY
15435: LIST
15436: LIST
15437: PUSH
15438: LD_INT 3
15440: NEG
15441: PUSH
15442: LD_INT 2
15444: NEG
15445: PUSH
15446: EMPTY
15447: LIST
15448: LIST
15449: PUSH
15450: LD_INT 3
15452: NEG
15453: PUSH
15454: LD_INT 3
15456: NEG
15457: PUSH
15458: EMPTY
15459: LIST
15460: LIST
15461: PUSH
15462: EMPTY
15463: LIST
15464: LIST
15465: LIST
15466: LIST
15467: LIST
15468: LIST
15469: LIST
15470: LIST
15471: LIST
15472: LIST
15473: LIST
15474: LIST
15475: LIST
15476: LIST
15477: LIST
15478: LIST
15479: LIST
15480: LIST
15481: LIST
15482: LIST
15483: LIST
15484: LIST
15485: LIST
15486: LIST
15487: LIST
15488: LIST
15489: LIST
15490: LIST
15491: LIST
15492: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15493: LD_ADDR_VAR 0 42
15497: PUSH
15498: LD_INT 0
15500: PUSH
15501: LD_INT 0
15503: PUSH
15504: EMPTY
15505: LIST
15506: LIST
15507: PUSH
15508: LD_INT 0
15510: PUSH
15511: LD_INT 1
15513: NEG
15514: PUSH
15515: EMPTY
15516: LIST
15517: LIST
15518: PUSH
15519: LD_INT 1
15521: PUSH
15522: LD_INT 0
15524: PUSH
15525: EMPTY
15526: LIST
15527: LIST
15528: PUSH
15529: LD_INT 1
15531: PUSH
15532: LD_INT 1
15534: PUSH
15535: EMPTY
15536: LIST
15537: LIST
15538: PUSH
15539: LD_INT 0
15541: PUSH
15542: LD_INT 1
15544: PUSH
15545: EMPTY
15546: LIST
15547: LIST
15548: PUSH
15549: LD_INT 1
15551: NEG
15552: PUSH
15553: LD_INT 0
15555: PUSH
15556: EMPTY
15557: LIST
15558: LIST
15559: PUSH
15560: LD_INT 1
15562: NEG
15563: PUSH
15564: LD_INT 1
15566: NEG
15567: PUSH
15568: EMPTY
15569: LIST
15570: LIST
15571: PUSH
15572: LD_INT 1
15574: NEG
15575: PUSH
15576: LD_INT 2
15578: NEG
15579: PUSH
15580: EMPTY
15581: LIST
15582: LIST
15583: PUSH
15584: LD_INT 0
15586: PUSH
15587: LD_INT 2
15589: NEG
15590: PUSH
15591: EMPTY
15592: LIST
15593: LIST
15594: PUSH
15595: LD_INT 1
15597: PUSH
15598: LD_INT 1
15600: NEG
15601: PUSH
15602: EMPTY
15603: LIST
15604: LIST
15605: PUSH
15606: LD_INT 2
15608: PUSH
15609: LD_INT 1
15611: PUSH
15612: EMPTY
15613: LIST
15614: LIST
15615: PUSH
15616: LD_INT 2
15618: PUSH
15619: LD_INT 2
15621: PUSH
15622: EMPTY
15623: LIST
15624: LIST
15625: PUSH
15626: LD_INT 1
15628: PUSH
15629: LD_INT 2
15631: PUSH
15632: EMPTY
15633: LIST
15634: LIST
15635: PUSH
15636: LD_INT 0
15638: PUSH
15639: LD_INT 2
15641: PUSH
15642: EMPTY
15643: LIST
15644: LIST
15645: PUSH
15646: LD_INT 1
15648: NEG
15649: PUSH
15650: LD_INT 1
15652: PUSH
15653: EMPTY
15654: LIST
15655: LIST
15656: PUSH
15657: LD_INT 2
15659: NEG
15660: PUSH
15661: LD_INT 1
15663: NEG
15664: PUSH
15665: EMPTY
15666: LIST
15667: LIST
15668: PUSH
15669: LD_INT 2
15671: NEG
15672: PUSH
15673: LD_INT 2
15675: NEG
15676: PUSH
15677: EMPTY
15678: LIST
15679: LIST
15680: PUSH
15681: LD_INT 2
15683: NEG
15684: PUSH
15685: LD_INT 3
15687: NEG
15688: PUSH
15689: EMPTY
15690: LIST
15691: LIST
15692: PUSH
15693: LD_INT 1
15695: NEG
15696: PUSH
15697: LD_INT 3
15699: NEG
15700: PUSH
15701: EMPTY
15702: LIST
15703: LIST
15704: PUSH
15705: LD_INT 0
15707: PUSH
15708: LD_INT 3
15710: NEG
15711: PUSH
15712: EMPTY
15713: LIST
15714: LIST
15715: PUSH
15716: LD_INT 1
15718: PUSH
15719: LD_INT 2
15721: NEG
15722: PUSH
15723: EMPTY
15724: LIST
15725: LIST
15726: PUSH
15727: LD_INT 3
15729: PUSH
15730: LD_INT 2
15732: PUSH
15733: EMPTY
15734: LIST
15735: LIST
15736: PUSH
15737: LD_INT 3
15739: PUSH
15740: LD_INT 3
15742: PUSH
15743: EMPTY
15744: LIST
15745: LIST
15746: PUSH
15747: LD_INT 2
15749: PUSH
15750: LD_INT 3
15752: PUSH
15753: EMPTY
15754: LIST
15755: LIST
15756: PUSH
15757: LD_INT 1
15759: PUSH
15760: LD_INT 3
15762: PUSH
15763: EMPTY
15764: LIST
15765: LIST
15766: PUSH
15767: LD_INT 0
15769: PUSH
15770: LD_INT 3
15772: PUSH
15773: EMPTY
15774: LIST
15775: LIST
15776: PUSH
15777: LD_INT 1
15779: NEG
15780: PUSH
15781: LD_INT 2
15783: PUSH
15784: EMPTY
15785: LIST
15786: LIST
15787: PUSH
15788: LD_INT 3
15790: NEG
15791: PUSH
15792: LD_INT 2
15794: NEG
15795: PUSH
15796: EMPTY
15797: LIST
15798: LIST
15799: PUSH
15800: LD_INT 3
15802: NEG
15803: PUSH
15804: LD_INT 3
15806: NEG
15807: PUSH
15808: EMPTY
15809: LIST
15810: LIST
15811: PUSH
15812: EMPTY
15813: LIST
15814: LIST
15815: LIST
15816: LIST
15817: LIST
15818: LIST
15819: LIST
15820: LIST
15821: LIST
15822: LIST
15823: LIST
15824: LIST
15825: LIST
15826: LIST
15827: LIST
15828: LIST
15829: LIST
15830: LIST
15831: LIST
15832: LIST
15833: LIST
15834: LIST
15835: LIST
15836: LIST
15837: LIST
15838: LIST
15839: LIST
15840: LIST
15841: LIST
15842: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
15843: LD_ADDR_VAR 0 43
15847: PUSH
15848: LD_INT 0
15850: PUSH
15851: LD_INT 0
15853: PUSH
15854: EMPTY
15855: LIST
15856: LIST
15857: PUSH
15858: LD_INT 0
15860: PUSH
15861: LD_INT 1
15863: NEG
15864: PUSH
15865: EMPTY
15866: LIST
15867: LIST
15868: PUSH
15869: LD_INT 1
15871: PUSH
15872: LD_INT 0
15874: PUSH
15875: EMPTY
15876: LIST
15877: LIST
15878: PUSH
15879: LD_INT 1
15881: PUSH
15882: LD_INT 1
15884: PUSH
15885: EMPTY
15886: LIST
15887: LIST
15888: PUSH
15889: LD_INT 0
15891: PUSH
15892: LD_INT 1
15894: PUSH
15895: EMPTY
15896: LIST
15897: LIST
15898: PUSH
15899: LD_INT 1
15901: NEG
15902: PUSH
15903: LD_INT 0
15905: PUSH
15906: EMPTY
15907: LIST
15908: LIST
15909: PUSH
15910: LD_INT 1
15912: NEG
15913: PUSH
15914: LD_INT 1
15916: NEG
15917: PUSH
15918: EMPTY
15919: LIST
15920: LIST
15921: PUSH
15922: LD_INT 1
15924: NEG
15925: PUSH
15926: LD_INT 2
15928: NEG
15929: PUSH
15930: EMPTY
15931: LIST
15932: LIST
15933: PUSH
15934: LD_INT 0
15936: PUSH
15937: LD_INT 2
15939: NEG
15940: PUSH
15941: EMPTY
15942: LIST
15943: LIST
15944: PUSH
15945: LD_INT 1
15947: PUSH
15948: LD_INT 1
15950: NEG
15951: PUSH
15952: EMPTY
15953: LIST
15954: LIST
15955: PUSH
15956: LD_INT 2
15958: PUSH
15959: LD_INT 0
15961: PUSH
15962: EMPTY
15963: LIST
15964: LIST
15965: PUSH
15966: LD_INT 2
15968: PUSH
15969: LD_INT 1
15971: PUSH
15972: EMPTY
15973: LIST
15974: LIST
15975: PUSH
15976: LD_INT 1
15978: PUSH
15979: LD_INT 2
15981: PUSH
15982: EMPTY
15983: LIST
15984: LIST
15985: PUSH
15986: LD_INT 0
15988: PUSH
15989: LD_INT 2
15991: PUSH
15992: EMPTY
15993: LIST
15994: LIST
15995: PUSH
15996: LD_INT 1
15998: NEG
15999: PUSH
16000: LD_INT 1
16002: PUSH
16003: EMPTY
16004: LIST
16005: LIST
16006: PUSH
16007: LD_INT 2
16009: NEG
16010: PUSH
16011: LD_INT 0
16013: PUSH
16014: EMPTY
16015: LIST
16016: LIST
16017: PUSH
16018: LD_INT 2
16020: NEG
16021: PUSH
16022: LD_INT 1
16024: NEG
16025: PUSH
16026: EMPTY
16027: LIST
16028: LIST
16029: PUSH
16030: LD_INT 1
16032: NEG
16033: PUSH
16034: LD_INT 3
16036: NEG
16037: PUSH
16038: EMPTY
16039: LIST
16040: LIST
16041: PUSH
16042: LD_INT 0
16044: PUSH
16045: LD_INT 3
16047: NEG
16048: PUSH
16049: EMPTY
16050: LIST
16051: LIST
16052: PUSH
16053: LD_INT 1
16055: PUSH
16056: LD_INT 2
16058: NEG
16059: PUSH
16060: EMPTY
16061: LIST
16062: LIST
16063: PUSH
16064: LD_INT 2
16066: PUSH
16067: LD_INT 1
16069: NEG
16070: PUSH
16071: EMPTY
16072: LIST
16073: LIST
16074: PUSH
16075: LD_INT 3
16077: PUSH
16078: LD_INT 0
16080: PUSH
16081: EMPTY
16082: LIST
16083: LIST
16084: PUSH
16085: LD_INT 3
16087: PUSH
16088: LD_INT 1
16090: PUSH
16091: EMPTY
16092: LIST
16093: LIST
16094: PUSH
16095: LD_INT 1
16097: PUSH
16098: LD_INT 3
16100: PUSH
16101: EMPTY
16102: LIST
16103: LIST
16104: PUSH
16105: LD_INT 0
16107: PUSH
16108: LD_INT 3
16110: PUSH
16111: EMPTY
16112: LIST
16113: LIST
16114: PUSH
16115: LD_INT 1
16117: NEG
16118: PUSH
16119: LD_INT 2
16121: PUSH
16122: EMPTY
16123: LIST
16124: LIST
16125: PUSH
16126: LD_INT 2
16128: NEG
16129: PUSH
16130: LD_INT 1
16132: PUSH
16133: EMPTY
16134: LIST
16135: LIST
16136: PUSH
16137: LD_INT 3
16139: NEG
16140: PUSH
16141: LD_INT 0
16143: PUSH
16144: EMPTY
16145: LIST
16146: LIST
16147: PUSH
16148: LD_INT 3
16150: NEG
16151: PUSH
16152: LD_INT 1
16154: NEG
16155: PUSH
16156: EMPTY
16157: LIST
16158: LIST
16159: PUSH
16160: EMPTY
16161: LIST
16162: LIST
16163: LIST
16164: LIST
16165: LIST
16166: LIST
16167: LIST
16168: LIST
16169: LIST
16170: LIST
16171: LIST
16172: LIST
16173: LIST
16174: LIST
16175: LIST
16176: LIST
16177: LIST
16178: LIST
16179: LIST
16180: LIST
16181: LIST
16182: LIST
16183: LIST
16184: LIST
16185: LIST
16186: LIST
16187: LIST
16188: LIST
16189: LIST
16190: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16191: LD_ADDR_VAR 0 44
16195: PUSH
16196: LD_INT 0
16198: PUSH
16199: LD_INT 0
16201: PUSH
16202: EMPTY
16203: LIST
16204: LIST
16205: PUSH
16206: LD_INT 0
16208: PUSH
16209: LD_INT 1
16211: NEG
16212: PUSH
16213: EMPTY
16214: LIST
16215: LIST
16216: PUSH
16217: LD_INT 1
16219: PUSH
16220: LD_INT 0
16222: PUSH
16223: EMPTY
16224: LIST
16225: LIST
16226: PUSH
16227: LD_INT 1
16229: PUSH
16230: LD_INT 1
16232: PUSH
16233: EMPTY
16234: LIST
16235: LIST
16236: PUSH
16237: LD_INT 0
16239: PUSH
16240: LD_INT 1
16242: PUSH
16243: EMPTY
16244: LIST
16245: LIST
16246: PUSH
16247: LD_INT 1
16249: NEG
16250: PUSH
16251: LD_INT 0
16253: PUSH
16254: EMPTY
16255: LIST
16256: LIST
16257: PUSH
16258: LD_INT 1
16260: NEG
16261: PUSH
16262: LD_INT 1
16264: NEG
16265: PUSH
16266: EMPTY
16267: LIST
16268: LIST
16269: PUSH
16270: LD_INT 1
16272: NEG
16273: PUSH
16274: LD_INT 2
16276: NEG
16277: PUSH
16278: EMPTY
16279: LIST
16280: LIST
16281: PUSH
16282: LD_INT 1
16284: PUSH
16285: LD_INT 1
16287: NEG
16288: PUSH
16289: EMPTY
16290: LIST
16291: LIST
16292: PUSH
16293: LD_INT 2
16295: PUSH
16296: LD_INT 0
16298: PUSH
16299: EMPTY
16300: LIST
16301: LIST
16302: PUSH
16303: LD_INT 2
16305: PUSH
16306: LD_INT 1
16308: PUSH
16309: EMPTY
16310: LIST
16311: LIST
16312: PUSH
16313: LD_INT 2
16315: PUSH
16316: LD_INT 2
16318: PUSH
16319: EMPTY
16320: LIST
16321: LIST
16322: PUSH
16323: LD_INT 1
16325: PUSH
16326: LD_INT 2
16328: PUSH
16329: EMPTY
16330: LIST
16331: LIST
16332: PUSH
16333: LD_INT 1
16335: NEG
16336: PUSH
16337: LD_INT 1
16339: PUSH
16340: EMPTY
16341: LIST
16342: LIST
16343: PUSH
16344: LD_INT 2
16346: NEG
16347: PUSH
16348: LD_INT 0
16350: PUSH
16351: EMPTY
16352: LIST
16353: LIST
16354: PUSH
16355: LD_INT 2
16357: NEG
16358: PUSH
16359: LD_INT 1
16361: NEG
16362: PUSH
16363: EMPTY
16364: LIST
16365: LIST
16366: PUSH
16367: LD_INT 2
16369: NEG
16370: PUSH
16371: LD_INT 2
16373: NEG
16374: PUSH
16375: EMPTY
16376: LIST
16377: LIST
16378: PUSH
16379: LD_INT 2
16381: NEG
16382: PUSH
16383: LD_INT 3
16385: NEG
16386: PUSH
16387: EMPTY
16388: LIST
16389: LIST
16390: PUSH
16391: LD_INT 2
16393: PUSH
16394: LD_INT 1
16396: NEG
16397: PUSH
16398: EMPTY
16399: LIST
16400: LIST
16401: PUSH
16402: LD_INT 3
16404: PUSH
16405: LD_INT 0
16407: PUSH
16408: EMPTY
16409: LIST
16410: LIST
16411: PUSH
16412: LD_INT 3
16414: PUSH
16415: LD_INT 1
16417: PUSH
16418: EMPTY
16419: LIST
16420: LIST
16421: PUSH
16422: LD_INT 3
16424: PUSH
16425: LD_INT 2
16427: PUSH
16428: EMPTY
16429: LIST
16430: LIST
16431: PUSH
16432: LD_INT 3
16434: PUSH
16435: LD_INT 3
16437: PUSH
16438: EMPTY
16439: LIST
16440: LIST
16441: PUSH
16442: LD_INT 2
16444: PUSH
16445: LD_INT 3
16447: PUSH
16448: EMPTY
16449: LIST
16450: LIST
16451: PUSH
16452: LD_INT 2
16454: NEG
16455: PUSH
16456: LD_INT 1
16458: PUSH
16459: EMPTY
16460: LIST
16461: LIST
16462: PUSH
16463: LD_INT 3
16465: NEG
16466: PUSH
16467: LD_INT 0
16469: PUSH
16470: EMPTY
16471: LIST
16472: LIST
16473: PUSH
16474: LD_INT 3
16476: NEG
16477: PUSH
16478: LD_INT 1
16480: NEG
16481: PUSH
16482: EMPTY
16483: LIST
16484: LIST
16485: PUSH
16486: LD_INT 3
16488: NEG
16489: PUSH
16490: LD_INT 2
16492: NEG
16493: PUSH
16494: EMPTY
16495: LIST
16496: LIST
16497: PUSH
16498: LD_INT 3
16500: NEG
16501: PUSH
16502: LD_INT 3
16504: NEG
16505: PUSH
16506: EMPTY
16507: LIST
16508: LIST
16509: PUSH
16510: EMPTY
16511: LIST
16512: LIST
16513: LIST
16514: LIST
16515: LIST
16516: LIST
16517: LIST
16518: LIST
16519: LIST
16520: LIST
16521: LIST
16522: LIST
16523: LIST
16524: LIST
16525: LIST
16526: LIST
16527: LIST
16528: LIST
16529: LIST
16530: LIST
16531: LIST
16532: LIST
16533: LIST
16534: LIST
16535: LIST
16536: LIST
16537: LIST
16538: LIST
16539: LIST
16540: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16541: LD_ADDR_VAR 0 45
16545: PUSH
16546: LD_INT 0
16548: PUSH
16549: LD_INT 0
16551: PUSH
16552: EMPTY
16553: LIST
16554: LIST
16555: PUSH
16556: LD_INT 0
16558: PUSH
16559: LD_INT 1
16561: NEG
16562: PUSH
16563: EMPTY
16564: LIST
16565: LIST
16566: PUSH
16567: LD_INT 1
16569: PUSH
16570: LD_INT 0
16572: PUSH
16573: EMPTY
16574: LIST
16575: LIST
16576: PUSH
16577: LD_INT 1
16579: PUSH
16580: LD_INT 1
16582: PUSH
16583: EMPTY
16584: LIST
16585: LIST
16586: PUSH
16587: LD_INT 0
16589: PUSH
16590: LD_INT 1
16592: PUSH
16593: EMPTY
16594: LIST
16595: LIST
16596: PUSH
16597: LD_INT 1
16599: NEG
16600: PUSH
16601: LD_INT 0
16603: PUSH
16604: EMPTY
16605: LIST
16606: LIST
16607: PUSH
16608: LD_INT 1
16610: NEG
16611: PUSH
16612: LD_INT 1
16614: NEG
16615: PUSH
16616: EMPTY
16617: LIST
16618: LIST
16619: PUSH
16620: LD_INT 1
16622: NEG
16623: PUSH
16624: LD_INT 2
16626: NEG
16627: PUSH
16628: EMPTY
16629: LIST
16630: LIST
16631: PUSH
16632: LD_INT 0
16634: PUSH
16635: LD_INT 2
16637: NEG
16638: PUSH
16639: EMPTY
16640: LIST
16641: LIST
16642: PUSH
16643: LD_INT 1
16645: PUSH
16646: LD_INT 1
16648: NEG
16649: PUSH
16650: EMPTY
16651: LIST
16652: LIST
16653: PUSH
16654: LD_INT 2
16656: PUSH
16657: LD_INT 1
16659: PUSH
16660: EMPTY
16661: LIST
16662: LIST
16663: PUSH
16664: LD_INT 2
16666: PUSH
16667: LD_INT 2
16669: PUSH
16670: EMPTY
16671: LIST
16672: LIST
16673: PUSH
16674: LD_INT 1
16676: PUSH
16677: LD_INT 2
16679: PUSH
16680: EMPTY
16681: LIST
16682: LIST
16683: PUSH
16684: LD_INT 0
16686: PUSH
16687: LD_INT 2
16689: PUSH
16690: EMPTY
16691: LIST
16692: LIST
16693: PUSH
16694: LD_INT 1
16696: NEG
16697: PUSH
16698: LD_INT 1
16700: PUSH
16701: EMPTY
16702: LIST
16703: LIST
16704: PUSH
16705: LD_INT 2
16707: NEG
16708: PUSH
16709: LD_INT 1
16711: NEG
16712: PUSH
16713: EMPTY
16714: LIST
16715: LIST
16716: PUSH
16717: LD_INT 2
16719: NEG
16720: PUSH
16721: LD_INT 2
16723: NEG
16724: PUSH
16725: EMPTY
16726: LIST
16727: LIST
16728: PUSH
16729: LD_INT 2
16731: NEG
16732: PUSH
16733: LD_INT 3
16735: NEG
16736: PUSH
16737: EMPTY
16738: LIST
16739: LIST
16740: PUSH
16741: LD_INT 1
16743: NEG
16744: PUSH
16745: LD_INT 3
16747: NEG
16748: PUSH
16749: EMPTY
16750: LIST
16751: LIST
16752: PUSH
16753: LD_INT 0
16755: PUSH
16756: LD_INT 3
16758: NEG
16759: PUSH
16760: EMPTY
16761: LIST
16762: LIST
16763: PUSH
16764: LD_INT 1
16766: PUSH
16767: LD_INT 2
16769: NEG
16770: PUSH
16771: EMPTY
16772: LIST
16773: LIST
16774: PUSH
16775: LD_INT 3
16777: PUSH
16778: LD_INT 2
16780: PUSH
16781: EMPTY
16782: LIST
16783: LIST
16784: PUSH
16785: LD_INT 3
16787: PUSH
16788: LD_INT 3
16790: PUSH
16791: EMPTY
16792: LIST
16793: LIST
16794: PUSH
16795: LD_INT 2
16797: PUSH
16798: LD_INT 3
16800: PUSH
16801: EMPTY
16802: LIST
16803: LIST
16804: PUSH
16805: LD_INT 1
16807: PUSH
16808: LD_INT 3
16810: PUSH
16811: EMPTY
16812: LIST
16813: LIST
16814: PUSH
16815: LD_INT 0
16817: PUSH
16818: LD_INT 3
16820: PUSH
16821: EMPTY
16822: LIST
16823: LIST
16824: PUSH
16825: LD_INT 1
16827: NEG
16828: PUSH
16829: LD_INT 2
16831: PUSH
16832: EMPTY
16833: LIST
16834: LIST
16835: PUSH
16836: LD_INT 3
16838: NEG
16839: PUSH
16840: LD_INT 2
16842: NEG
16843: PUSH
16844: EMPTY
16845: LIST
16846: LIST
16847: PUSH
16848: LD_INT 3
16850: NEG
16851: PUSH
16852: LD_INT 3
16854: NEG
16855: PUSH
16856: EMPTY
16857: LIST
16858: LIST
16859: PUSH
16860: EMPTY
16861: LIST
16862: LIST
16863: LIST
16864: LIST
16865: LIST
16866: LIST
16867: LIST
16868: LIST
16869: LIST
16870: LIST
16871: LIST
16872: LIST
16873: LIST
16874: LIST
16875: LIST
16876: LIST
16877: LIST
16878: LIST
16879: LIST
16880: LIST
16881: LIST
16882: LIST
16883: LIST
16884: LIST
16885: LIST
16886: LIST
16887: LIST
16888: LIST
16889: LIST
16890: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16891: LD_ADDR_VAR 0 46
16895: PUSH
16896: LD_INT 0
16898: PUSH
16899: LD_INT 0
16901: PUSH
16902: EMPTY
16903: LIST
16904: LIST
16905: PUSH
16906: LD_INT 0
16908: PUSH
16909: LD_INT 1
16911: NEG
16912: PUSH
16913: EMPTY
16914: LIST
16915: LIST
16916: PUSH
16917: LD_INT 1
16919: PUSH
16920: LD_INT 0
16922: PUSH
16923: EMPTY
16924: LIST
16925: LIST
16926: PUSH
16927: LD_INT 1
16929: PUSH
16930: LD_INT 1
16932: PUSH
16933: EMPTY
16934: LIST
16935: LIST
16936: PUSH
16937: LD_INT 0
16939: PUSH
16940: LD_INT 1
16942: PUSH
16943: EMPTY
16944: LIST
16945: LIST
16946: PUSH
16947: LD_INT 1
16949: NEG
16950: PUSH
16951: LD_INT 0
16953: PUSH
16954: EMPTY
16955: LIST
16956: LIST
16957: PUSH
16958: LD_INT 1
16960: NEG
16961: PUSH
16962: LD_INT 1
16964: NEG
16965: PUSH
16966: EMPTY
16967: LIST
16968: LIST
16969: PUSH
16970: LD_INT 1
16972: NEG
16973: PUSH
16974: LD_INT 2
16976: NEG
16977: PUSH
16978: EMPTY
16979: LIST
16980: LIST
16981: PUSH
16982: LD_INT 0
16984: PUSH
16985: LD_INT 2
16987: NEG
16988: PUSH
16989: EMPTY
16990: LIST
16991: LIST
16992: PUSH
16993: LD_INT 1
16995: PUSH
16996: LD_INT 1
16998: NEG
16999: PUSH
17000: EMPTY
17001: LIST
17002: LIST
17003: PUSH
17004: LD_INT 2
17006: PUSH
17007: LD_INT 0
17009: PUSH
17010: EMPTY
17011: LIST
17012: LIST
17013: PUSH
17014: LD_INT 2
17016: PUSH
17017: LD_INT 1
17019: PUSH
17020: EMPTY
17021: LIST
17022: LIST
17023: PUSH
17024: LD_INT 1
17026: PUSH
17027: LD_INT 2
17029: PUSH
17030: EMPTY
17031: LIST
17032: LIST
17033: PUSH
17034: LD_INT 0
17036: PUSH
17037: LD_INT 2
17039: PUSH
17040: EMPTY
17041: LIST
17042: LIST
17043: PUSH
17044: LD_INT 1
17046: NEG
17047: PUSH
17048: LD_INT 1
17050: PUSH
17051: EMPTY
17052: LIST
17053: LIST
17054: PUSH
17055: LD_INT 2
17057: NEG
17058: PUSH
17059: LD_INT 0
17061: PUSH
17062: EMPTY
17063: LIST
17064: LIST
17065: PUSH
17066: LD_INT 2
17068: NEG
17069: PUSH
17070: LD_INT 1
17072: NEG
17073: PUSH
17074: EMPTY
17075: LIST
17076: LIST
17077: PUSH
17078: LD_INT 1
17080: NEG
17081: PUSH
17082: LD_INT 3
17084: NEG
17085: PUSH
17086: EMPTY
17087: LIST
17088: LIST
17089: PUSH
17090: LD_INT 0
17092: PUSH
17093: LD_INT 3
17095: NEG
17096: PUSH
17097: EMPTY
17098: LIST
17099: LIST
17100: PUSH
17101: LD_INT 1
17103: PUSH
17104: LD_INT 2
17106: NEG
17107: PUSH
17108: EMPTY
17109: LIST
17110: LIST
17111: PUSH
17112: LD_INT 2
17114: PUSH
17115: LD_INT 1
17117: NEG
17118: PUSH
17119: EMPTY
17120: LIST
17121: LIST
17122: PUSH
17123: LD_INT 3
17125: PUSH
17126: LD_INT 0
17128: PUSH
17129: EMPTY
17130: LIST
17131: LIST
17132: PUSH
17133: LD_INT 3
17135: PUSH
17136: LD_INT 1
17138: PUSH
17139: EMPTY
17140: LIST
17141: LIST
17142: PUSH
17143: LD_INT 1
17145: PUSH
17146: LD_INT 3
17148: PUSH
17149: EMPTY
17150: LIST
17151: LIST
17152: PUSH
17153: LD_INT 0
17155: PUSH
17156: LD_INT 3
17158: PUSH
17159: EMPTY
17160: LIST
17161: LIST
17162: PUSH
17163: LD_INT 1
17165: NEG
17166: PUSH
17167: LD_INT 2
17169: PUSH
17170: EMPTY
17171: LIST
17172: LIST
17173: PUSH
17174: LD_INT 2
17176: NEG
17177: PUSH
17178: LD_INT 1
17180: PUSH
17181: EMPTY
17182: LIST
17183: LIST
17184: PUSH
17185: LD_INT 3
17187: NEG
17188: PUSH
17189: LD_INT 0
17191: PUSH
17192: EMPTY
17193: LIST
17194: LIST
17195: PUSH
17196: LD_INT 3
17198: NEG
17199: PUSH
17200: LD_INT 1
17202: NEG
17203: PUSH
17204: EMPTY
17205: LIST
17206: LIST
17207: PUSH
17208: EMPTY
17209: LIST
17210: LIST
17211: LIST
17212: LIST
17213: LIST
17214: LIST
17215: LIST
17216: LIST
17217: LIST
17218: LIST
17219: LIST
17220: LIST
17221: LIST
17222: LIST
17223: LIST
17224: LIST
17225: LIST
17226: LIST
17227: LIST
17228: LIST
17229: LIST
17230: LIST
17231: LIST
17232: LIST
17233: LIST
17234: LIST
17235: LIST
17236: LIST
17237: LIST
17238: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17239: LD_ADDR_VAR 0 47
17243: PUSH
17244: LD_INT 0
17246: PUSH
17247: LD_INT 0
17249: PUSH
17250: EMPTY
17251: LIST
17252: LIST
17253: PUSH
17254: LD_INT 0
17256: PUSH
17257: LD_INT 1
17259: NEG
17260: PUSH
17261: EMPTY
17262: LIST
17263: LIST
17264: PUSH
17265: LD_INT 1
17267: PUSH
17268: LD_INT 0
17270: PUSH
17271: EMPTY
17272: LIST
17273: LIST
17274: PUSH
17275: LD_INT 1
17277: PUSH
17278: LD_INT 1
17280: PUSH
17281: EMPTY
17282: LIST
17283: LIST
17284: PUSH
17285: LD_INT 0
17287: PUSH
17288: LD_INT 1
17290: PUSH
17291: EMPTY
17292: LIST
17293: LIST
17294: PUSH
17295: LD_INT 1
17297: NEG
17298: PUSH
17299: LD_INT 0
17301: PUSH
17302: EMPTY
17303: LIST
17304: LIST
17305: PUSH
17306: LD_INT 1
17308: NEG
17309: PUSH
17310: LD_INT 1
17312: NEG
17313: PUSH
17314: EMPTY
17315: LIST
17316: LIST
17317: PUSH
17318: LD_INT 1
17320: NEG
17321: PUSH
17322: LD_INT 2
17324: NEG
17325: PUSH
17326: EMPTY
17327: LIST
17328: LIST
17329: PUSH
17330: LD_INT 0
17332: PUSH
17333: LD_INT 2
17335: NEG
17336: PUSH
17337: EMPTY
17338: LIST
17339: LIST
17340: PUSH
17341: LD_INT 1
17343: PUSH
17344: LD_INT 1
17346: NEG
17347: PUSH
17348: EMPTY
17349: LIST
17350: LIST
17351: PUSH
17352: LD_INT 2
17354: NEG
17355: PUSH
17356: LD_INT 1
17358: NEG
17359: PUSH
17360: EMPTY
17361: LIST
17362: LIST
17363: PUSH
17364: LD_INT 2
17366: NEG
17367: PUSH
17368: LD_INT 2
17370: NEG
17371: PUSH
17372: EMPTY
17373: LIST
17374: LIST
17375: PUSH
17376: EMPTY
17377: LIST
17378: LIST
17379: LIST
17380: LIST
17381: LIST
17382: LIST
17383: LIST
17384: LIST
17385: LIST
17386: LIST
17387: LIST
17388: LIST
17389: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17390: LD_ADDR_VAR 0 48
17394: PUSH
17395: LD_INT 0
17397: PUSH
17398: LD_INT 0
17400: PUSH
17401: EMPTY
17402: LIST
17403: LIST
17404: PUSH
17405: LD_INT 0
17407: PUSH
17408: LD_INT 1
17410: NEG
17411: PUSH
17412: EMPTY
17413: LIST
17414: LIST
17415: PUSH
17416: LD_INT 1
17418: PUSH
17419: LD_INT 0
17421: PUSH
17422: EMPTY
17423: LIST
17424: LIST
17425: PUSH
17426: LD_INT 1
17428: PUSH
17429: LD_INT 1
17431: PUSH
17432: EMPTY
17433: LIST
17434: LIST
17435: PUSH
17436: LD_INT 0
17438: PUSH
17439: LD_INT 1
17441: PUSH
17442: EMPTY
17443: LIST
17444: LIST
17445: PUSH
17446: LD_INT 1
17448: NEG
17449: PUSH
17450: LD_INT 0
17452: PUSH
17453: EMPTY
17454: LIST
17455: LIST
17456: PUSH
17457: LD_INT 1
17459: NEG
17460: PUSH
17461: LD_INT 1
17463: NEG
17464: PUSH
17465: EMPTY
17466: LIST
17467: LIST
17468: PUSH
17469: LD_INT 1
17471: NEG
17472: PUSH
17473: LD_INT 2
17475: NEG
17476: PUSH
17477: EMPTY
17478: LIST
17479: LIST
17480: PUSH
17481: LD_INT 0
17483: PUSH
17484: LD_INT 2
17486: NEG
17487: PUSH
17488: EMPTY
17489: LIST
17490: LIST
17491: PUSH
17492: LD_INT 1
17494: PUSH
17495: LD_INT 1
17497: NEG
17498: PUSH
17499: EMPTY
17500: LIST
17501: LIST
17502: PUSH
17503: LD_INT 2
17505: PUSH
17506: LD_INT 0
17508: PUSH
17509: EMPTY
17510: LIST
17511: LIST
17512: PUSH
17513: LD_INT 2
17515: PUSH
17516: LD_INT 1
17518: PUSH
17519: EMPTY
17520: LIST
17521: LIST
17522: PUSH
17523: EMPTY
17524: LIST
17525: LIST
17526: LIST
17527: LIST
17528: LIST
17529: LIST
17530: LIST
17531: LIST
17532: LIST
17533: LIST
17534: LIST
17535: LIST
17536: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17537: LD_ADDR_VAR 0 49
17541: PUSH
17542: LD_INT 0
17544: PUSH
17545: LD_INT 0
17547: PUSH
17548: EMPTY
17549: LIST
17550: LIST
17551: PUSH
17552: LD_INT 0
17554: PUSH
17555: LD_INT 1
17557: NEG
17558: PUSH
17559: EMPTY
17560: LIST
17561: LIST
17562: PUSH
17563: LD_INT 1
17565: PUSH
17566: LD_INT 0
17568: PUSH
17569: EMPTY
17570: LIST
17571: LIST
17572: PUSH
17573: LD_INT 1
17575: PUSH
17576: LD_INT 1
17578: PUSH
17579: EMPTY
17580: LIST
17581: LIST
17582: PUSH
17583: LD_INT 0
17585: PUSH
17586: LD_INT 1
17588: PUSH
17589: EMPTY
17590: LIST
17591: LIST
17592: PUSH
17593: LD_INT 1
17595: NEG
17596: PUSH
17597: LD_INT 0
17599: PUSH
17600: EMPTY
17601: LIST
17602: LIST
17603: PUSH
17604: LD_INT 1
17606: NEG
17607: PUSH
17608: LD_INT 1
17610: NEG
17611: PUSH
17612: EMPTY
17613: LIST
17614: LIST
17615: PUSH
17616: LD_INT 1
17618: PUSH
17619: LD_INT 1
17621: NEG
17622: PUSH
17623: EMPTY
17624: LIST
17625: LIST
17626: PUSH
17627: LD_INT 2
17629: PUSH
17630: LD_INT 0
17632: PUSH
17633: EMPTY
17634: LIST
17635: LIST
17636: PUSH
17637: LD_INT 2
17639: PUSH
17640: LD_INT 1
17642: PUSH
17643: EMPTY
17644: LIST
17645: LIST
17646: PUSH
17647: LD_INT 2
17649: PUSH
17650: LD_INT 2
17652: PUSH
17653: EMPTY
17654: LIST
17655: LIST
17656: PUSH
17657: LD_INT 1
17659: PUSH
17660: LD_INT 2
17662: PUSH
17663: EMPTY
17664: LIST
17665: LIST
17666: PUSH
17667: EMPTY
17668: LIST
17669: LIST
17670: LIST
17671: LIST
17672: LIST
17673: LIST
17674: LIST
17675: LIST
17676: LIST
17677: LIST
17678: LIST
17679: LIST
17680: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
17681: LD_ADDR_VAR 0 50
17685: PUSH
17686: LD_INT 0
17688: PUSH
17689: LD_INT 0
17691: PUSH
17692: EMPTY
17693: LIST
17694: LIST
17695: PUSH
17696: LD_INT 0
17698: PUSH
17699: LD_INT 1
17701: NEG
17702: PUSH
17703: EMPTY
17704: LIST
17705: LIST
17706: PUSH
17707: LD_INT 1
17709: PUSH
17710: LD_INT 0
17712: PUSH
17713: EMPTY
17714: LIST
17715: LIST
17716: PUSH
17717: LD_INT 1
17719: PUSH
17720: LD_INT 1
17722: PUSH
17723: EMPTY
17724: LIST
17725: LIST
17726: PUSH
17727: LD_INT 0
17729: PUSH
17730: LD_INT 1
17732: PUSH
17733: EMPTY
17734: LIST
17735: LIST
17736: PUSH
17737: LD_INT 1
17739: NEG
17740: PUSH
17741: LD_INT 0
17743: PUSH
17744: EMPTY
17745: LIST
17746: LIST
17747: PUSH
17748: LD_INT 1
17750: NEG
17751: PUSH
17752: LD_INT 1
17754: NEG
17755: PUSH
17756: EMPTY
17757: LIST
17758: LIST
17759: PUSH
17760: LD_INT 2
17762: PUSH
17763: LD_INT 1
17765: PUSH
17766: EMPTY
17767: LIST
17768: LIST
17769: PUSH
17770: LD_INT 2
17772: PUSH
17773: LD_INT 2
17775: PUSH
17776: EMPTY
17777: LIST
17778: LIST
17779: PUSH
17780: LD_INT 1
17782: PUSH
17783: LD_INT 2
17785: PUSH
17786: EMPTY
17787: LIST
17788: LIST
17789: PUSH
17790: LD_INT 0
17792: PUSH
17793: LD_INT 2
17795: PUSH
17796: EMPTY
17797: LIST
17798: LIST
17799: PUSH
17800: LD_INT 1
17802: NEG
17803: PUSH
17804: LD_INT 1
17806: PUSH
17807: EMPTY
17808: LIST
17809: LIST
17810: PUSH
17811: EMPTY
17812: LIST
17813: LIST
17814: LIST
17815: LIST
17816: LIST
17817: LIST
17818: LIST
17819: LIST
17820: LIST
17821: LIST
17822: LIST
17823: LIST
17824: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
17825: LD_ADDR_VAR 0 51
17829: PUSH
17830: LD_INT 0
17832: PUSH
17833: LD_INT 0
17835: PUSH
17836: EMPTY
17837: LIST
17838: LIST
17839: PUSH
17840: LD_INT 0
17842: PUSH
17843: LD_INT 1
17845: NEG
17846: PUSH
17847: EMPTY
17848: LIST
17849: LIST
17850: PUSH
17851: LD_INT 1
17853: PUSH
17854: LD_INT 0
17856: PUSH
17857: EMPTY
17858: LIST
17859: LIST
17860: PUSH
17861: LD_INT 1
17863: PUSH
17864: LD_INT 1
17866: PUSH
17867: EMPTY
17868: LIST
17869: LIST
17870: PUSH
17871: LD_INT 0
17873: PUSH
17874: LD_INT 1
17876: PUSH
17877: EMPTY
17878: LIST
17879: LIST
17880: PUSH
17881: LD_INT 1
17883: NEG
17884: PUSH
17885: LD_INT 0
17887: PUSH
17888: EMPTY
17889: LIST
17890: LIST
17891: PUSH
17892: LD_INT 1
17894: NEG
17895: PUSH
17896: LD_INT 1
17898: NEG
17899: PUSH
17900: EMPTY
17901: LIST
17902: LIST
17903: PUSH
17904: LD_INT 1
17906: PUSH
17907: LD_INT 2
17909: PUSH
17910: EMPTY
17911: LIST
17912: LIST
17913: PUSH
17914: LD_INT 0
17916: PUSH
17917: LD_INT 2
17919: PUSH
17920: EMPTY
17921: LIST
17922: LIST
17923: PUSH
17924: LD_INT 1
17926: NEG
17927: PUSH
17928: LD_INT 1
17930: PUSH
17931: EMPTY
17932: LIST
17933: LIST
17934: PUSH
17935: LD_INT 2
17937: NEG
17938: PUSH
17939: LD_INT 0
17941: PUSH
17942: EMPTY
17943: LIST
17944: LIST
17945: PUSH
17946: LD_INT 2
17948: NEG
17949: PUSH
17950: LD_INT 1
17952: NEG
17953: PUSH
17954: EMPTY
17955: LIST
17956: LIST
17957: PUSH
17958: EMPTY
17959: LIST
17960: LIST
17961: LIST
17962: LIST
17963: LIST
17964: LIST
17965: LIST
17966: LIST
17967: LIST
17968: LIST
17969: LIST
17970: LIST
17971: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17972: LD_ADDR_VAR 0 52
17976: PUSH
17977: LD_INT 0
17979: PUSH
17980: LD_INT 0
17982: PUSH
17983: EMPTY
17984: LIST
17985: LIST
17986: PUSH
17987: LD_INT 0
17989: PUSH
17990: LD_INT 1
17992: NEG
17993: PUSH
17994: EMPTY
17995: LIST
17996: LIST
17997: PUSH
17998: LD_INT 1
18000: PUSH
18001: LD_INT 0
18003: PUSH
18004: EMPTY
18005: LIST
18006: LIST
18007: PUSH
18008: LD_INT 1
18010: PUSH
18011: LD_INT 1
18013: PUSH
18014: EMPTY
18015: LIST
18016: LIST
18017: PUSH
18018: LD_INT 0
18020: PUSH
18021: LD_INT 1
18023: PUSH
18024: EMPTY
18025: LIST
18026: LIST
18027: PUSH
18028: LD_INT 1
18030: NEG
18031: PUSH
18032: LD_INT 0
18034: PUSH
18035: EMPTY
18036: LIST
18037: LIST
18038: PUSH
18039: LD_INT 1
18041: NEG
18042: PUSH
18043: LD_INT 1
18045: NEG
18046: PUSH
18047: EMPTY
18048: LIST
18049: LIST
18050: PUSH
18051: LD_INT 1
18053: NEG
18054: PUSH
18055: LD_INT 2
18057: NEG
18058: PUSH
18059: EMPTY
18060: LIST
18061: LIST
18062: PUSH
18063: LD_INT 1
18065: NEG
18066: PUSH
18067: LD_INT 1
18069: PUSH
18070: EMPTY
18071: LIST
18072: LIST
18073: PUSH
18074: LD_INT 2
18076: NEG
18077: PUSH
18078: LD_INT 0
18080: PUSH
18081: EMPTY
18082: LIST
18083: LIST
18084: PUSH
18085: LD_INT 2
18087: NEG
18088: PUSH
18089: LD_INT 1
18091: NEG
18092: PUSH
18093: EMPTY
18094: LIST
18095: LIST
18096: PUSH
18097: LD_INT 2
18099: NEG
18100: PUSH
18101: LD_INT 2
18103: NEG
18104: PUSH
18105: EMPTY
18106: LIST
18107: LIST
18108: PUSH
18109: EMPTY
18110: LIST
18111: LIST
18112: LIST
18113: LIST
18114: LIST
18115: LIST
18116: LIST
18117: LIST
18118: LIST
18119: LIST
18120: LIST
18121: LIST
18122: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18123: LD_ADDR_VAR 0 53
18127: PUSH
18128: LD_INT 0
18130: PUSH
18131: LD_INT 0
18133: PUSH
18134: EMPTY
18135: LIST
18136: LIST
18137: PUSH
18138: LD_INT 0
18140: PUSH
18141: LD_INT 1
18143: NEG
18144: PUSH
18145: EMPTY
18146: LIST
18147: LIST
18148: PUSH
18149: LD_INT 1
18151: PUSH
18152: LD_INT 0
18154: PUSH
18155: EMPTY
18156: LIST
18157: LIST
18158: PUSH
18159: LD_INT 1
18161: PUSH
18162: LD_INT 1
18164: PUSH
18165: EMPTY
18166: LIST
18167: LIST
18168: PUSH
18169: LD_INT 0
18171: PUSH
18172: LD_INT 1
18174: PUSH
18175: EMPTY
18176: LIST
18177: LIST
18178: PUSH
18179: LD_INT 1
18181: NEG
18182: PUSH
18183: LD_INT 0
18185: PUSH
18186: EMPTY
18187: LIST
18188: LIST
18189: PUSH
18190: LD_INT 1
18192: NEG
18193: PUSH
18194: LD_INT 1
18196: NEG
18197: PUSH
18198: EMPTY
18199: LIST
18200: LIST
18201: PUSH
18202: LD_INT 1
18204: NEG
18205: PUSH
18206: LD_INT 2
18208: NEG
18209: PUSH
18210: EMPTY
18211: LIST
18212: LIST
18213: PUSH
18214: LD_INT 0
18216: PUSH
18217: LD_INT 2
18219: NEG
18220: PUSH
18221: EMPTY
18222: LIST
18223: LIST
18224: PUSH
18225: LD_INT 1
18227: PUSH
18228: LD_INT 1
18230: NEG
18231: PUSH
18232: EMPTY
18233: LIST
18234: LIST
18235: PUSH
18236: LD_INT 2
18238: PUSH
18239: LD_INT 0
18241: PUSH
18242: EMPTY
18243: LIST
18244: LIST
18245: PUSH
18246: LD_INT 2
18248: PUSH
18249: LD_INT 1
18251: PUSH
18252: EMPTY
18253: LIST
18254: LIST
18255: PUSH
18256: LD_INT 2
18258: PUSH
18259: LD_INT 2
18261: PUSH
18262: EMPTY
18263: LIST
18264: LIST
18265: PUSH
18266: LD_INT 1
18268: PUSH
18269: LD_INT 2
18271: PUSH
18272: EMPTY
18273: LIST
18274: LIST
18275: PUSH
18276: LD_INT 0
18278: PUSH
18279: LD_INT 2
18281: PUSH
18282: EMPTY
18283: LIST
18284: LIST
18285: PUSH
18286: LD_INT 1
18288: NEG
18289: PUSH
18290: LD_INT 1
18292: PUSH
18293: EMPTY
18294: LIST
18295: LIST
18296: PUSH
18297: LD_INT 2
18299: NEG
18300: PUSH
18301: LD_INT 0
18303: PUSH
18304: EMPTY
18305: LIST
18306: LIST
18307: PUSH
18308: LD_INT 2
18310: NEG
18311: PUSH
18312: LD_INT 1
18314: NEG
18315: PUSH
18316: EMPTY
18317: LIST
18318: LIST
18319: PUSH
18320: LD_INT 2
18322: NEG
18323: PUSH
18324: LD_INT 2
18326: NEG
18327: PUSH
18328: EMPTY
18329: LIST
18330: LIST
18331: PUSH
18332: EMPTY
18333: LIST
18334: LIST
18335: LIST
18336: LIST
18337: LIST
18338: LIST
18339: LIST
18340: LIST
18341: LIST
18342: LIST
18343: LIST
18344: LIST
18345: LIST
18346: LIST
18347: LIST
18348: LIST
18349: LIST
18350: LIST
18351: LIST
18352: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18353: LD_ADDR_VAR 0 54
18357: PUSH
18358: LD_INT 0
18360: PUSH
18361: LD_INT 0
18363: PUSH
18364: EMPTY
18365: LIST
18366: LIST
18367: PUSH
18368: LD_INT 0
18370: PUSH
18371: LD_INT 1
18373: NEG
18374: PUSH
18375: EMPTY
18376: LIST
18377: LIST
18378: PUSH
18379: LD_INT 1
18381: PUSH
18382: LD_INT 0
18384: PUSH
18385: EMPTY
18386: LIST
18387: LIST
18388: PUSH
18389: LD_INT 1
18391: PUSH
18392: LD_INT 1
18394: PUSH
18395: EMPTY
18396: LIST
18397: LIST
18398: PUSH
18399: LD_INT 0
18401: PUSH
18402: LD_INT 1
18404: PUSH
18405: EMPTY
18406: LIST
18407: LIST
18408: PUSH
18409: LD_INT 1
18411: NEG
18412: PUSH
18413: LD_INT 0
18415: PUSH
18416: EMPTY
18417: LIST
18418: LIST
18419: PUSH
18420: LD_INT 1
18422: NEG
18423: PUSH
18424: LD_INT 1
18426: NEG
18427: PUSH
18428: EMPTY
18429: LIST
18430: LIST
18431: PUSH
18432: LD_INT 1
18434: NEG
18435: PUSH
18436: LD_INT 2
18438: NEG
18439: PUSH
18440: EMPTY
18441: LIST
18442: LIST
18443: PUSH
18444: LD_INT 0
18446: PUSH
18447: LD_INT 2
18449: NEG
18450: PUSH
18451: EMPTY
18452: LIST
18453: LIST
18454: PUSH
18455: LD_INT 1
18457: PUSH
18458: LD_INT 1
18460: NEG
18461: PUSH
18462: EMPTY
18463: LIST
18464: LIST
18465: PUSH
18466: LD_INT 2
18468: PUSH
18469: LD_INT 0
18471: PUSH
18472: EMPTY
18473: LIST
18474: LIST
18475: PUSH
18476: LD_INT 2
18478: PUSH
18479: LD_INT 1
18481: PUSH
18482: EMPTY
18483: LIST
18484: LIST
18485: PUSH
18486: LD_INT 2
18488: PUSH
18489: LD_INT 2
18491: PUSH
18492: EMPTY
18493: LIST
18494: LIST
18495: PUSH
18496: LD_INT 1
18498: PUSH
18499: LD_INT 2
18501: PUSH
18502: EMPTY
18503: LIST
18504: LIST
18505: PUSH
18506: LD_INT 0
18508: PUSH
18509: LD_INT 2
18511: PUSH
18512: EMPTY
18513: LIST
18514: LIST
18515: PUSH
18516: LD_INT 1
18518: NEG
18519: PUSH
18520: LD_INT 1
18522: PUSH
18523: EMPTY
18524: LIST
18525: LIST
18526: PUSH
18527: LD_INT 2
18529: NEG
18530: PUSH
18531: LD_INT 0
18533: PUSH
18534: EMPTY
18535: LIST
18536: LIST
18537: PUSH
18538: LD_INT 2
18540: NEG
18541: PUSH
18542: LD_INT 1
18544: NEG
18545: PUSH
18546: EMPTY
18547: LIST
18548: LIST
18549: PUSH
18550: LD_INT 2
18552: NEG
18553: PUSH
18554: LD_INT 2
18556: NEG
18557: PUSH
18558: EMPTY
18559: LIST
18560: LIST
18561: PUSH
18562: EMPTY
18563: LIST
18564: LIST
18565: LIST
18566: LIST
18567: LIST
18568: LIST
18569: LIST
18570: LIST
18571: LIST
18572: LIST
18573: LIST
18574: LIST
18575: LIST
18576: LIST
18577: LIST
18578: LIST
18579: LIST
18580: LIST
18581: LIST
18582: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18583: LD_ADDR_VAR 0 55
18587: PUSH
18588: LD_INT 0
18590: PUSH
18591: LD_INT 0
18593: PUSH
18594: EMPTY
18595: LIST
18596: LIST
18597: PUSH
18598: LD_INT 0
18600: PUSH
18601: LD_INT 1
18603: NEG
18604: PUSH
18605: EMPTY
18606: LIST
18607: LIST
18608: PUSH
18609: LD_INT 1
18611: PUSH
18612: LD_INT 0
18614: PUSH
18615: EMPTY
18616: LIST
18617: LIST
18618: PUSH
18619: LD_INT 1
18621: PUSH
18622: LD_INT 1
18624: PUSH
18625: EMPTY
18626: LIST
18627: LIST
18628: PUSH
18629: LD_INT 0
18631: PUSH
18632: LD_INT 1
18634: PUSH
18635: EMPTY
18636: LIST
18637: LIST
18638: PUSH
18639: LD_INT 1
18641: NEG
18642: PUSH
18643: LD_INT 0
18645: PUSH
18646: EMPTY
18647: LIST
18648: LIST
18649: PUSH
18650: LD_INT 1
18652: NEG
18653: PUSH
18654: LD_INT 1
18656: NEG
18657: PUSH
18658: EMPTY
18659: LIST
18660: LIST
18661: PUSH
18662: LD_INT 1
18664: NEG
18665: PUSH
18666: LD_INT 2
18668: NEG
18669: PUSH
18670: EMPTY
18671: LIST
18672: LIST
18673: PUSH
18674: LD_INT 0
18676: PUSH
18677: LD_INT 2
18679: NEG
18680: PUSH
18681: EMPTY
18682: LIST
18683: LIST
18684: PUSH
18685: LD_INT 1
18687: PUSH
18688: LD_INT 1
18690: NEG
18691: PUSH
18692: EMPTY
18693: LIST
18694: LIST
18695: PUSH
18696: LD_INT 2
18698: PUSH
18699: LD_INT 0
18701: PUSH
18702: EMPTY
18703: LIST
18704: LIST
18705: PUSH
18706: LD_INT 2
18708: PUSH
18709: LD_INT 1
18711: PUSH
18712: EMPTY
18713: LIST
18714: LIST
18715: PUSH
18716: LD_INT 2
18718: PUSH
18719: LD_INT 2
18721: PUSH
18722: EMPTY
18723: LIST
18724: LIST
18725: PUSH
18726: LD_INT 1
18728: PUSH
18729: LD_INT 2
18731: PUSH
18732: EMPTY
18733: LIST
18734: LIST
18735: PUSH
18736: LD_INT 0
18738: PUSH
18739: LD_INT 2
18741: PUSH
18742: EMPTY
18743: LIST
18744: LIST
18745: PUSH
18746: LD_INT 1
18748: NEG
18749: PUSH
18750: LD_INT 1
18752: PUSH
18753: EMPTY
18754: LIST
18755: LIST
18756: PUSH
18757: LD_INT 2
18759: NEG
18760: PUSH
18761: LD_INT 0
18763: PUSH
18764: EMPTY
18765: LIST
18766: LIST
18767: PUSH
18768: LD_INT 2
18770: NEG
18771: PUSH
18772: LD_INT 1
18774: NEG
18775: PUSH
18776: EMPTY
18777: LIST
18778: LIST
18779: PUSH
18780: LD_INT 2
18782: NEG
18783: PUSH
18784: LD_INT 2
18786: NEG
18787: PUSH
18788: EMPTY
18789: LIST
18790: LIST
18791: PUSH
18792: EMPTY
18793: LIST
18794: LIST
18795: LIST
18796: LIST
18797: LIST
18798: LIST
18799: LIST
18800: LIST
18801: LIST
18802: LIST
18803: LIST
18804: LIST
18805: LIST
18806: LIST
18807: LIST
18808: LIST
18809: LIST
18810: LIST
18811: LIST
18812: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18813: LD_ADDR_VAR 0 56
18817: PUSH
18818: LD_INT 0
18820: PUSH
18821: LD_INT 0
18823: PUSH
18824: EMPTY
18825: LIST
18826: LIST
18827: PUSH
18828: LD_INT 0
18830: PUSH
18831: LD_INT 1
18833: NEG
18834: PUSH
18835: EMPTY
18836: LIST
18837: LIST
18838: PUSH
18839: LD_INT 1
18841: PUSH
18842: LD_INT 0
18844: PUSH
18845: EMPTY
18846: LIST
18847: LIST
18848: PUSH
18849: LD_INT 1
18851: PUSH
18852: LD_INT 1
18854: PUSH
18855: EMPTY
18856: LIST
18857: LIST
18858: PUSH
18859: LD_INT 0
18861: PUSH
18862: LD_INT 1
18864: PUSH
18865: EMPTY
18866: LIST
18867: LIST
18868: PUSH
18869: LD_INT 1
18871: NEG
18872: PUSH
18873: LD_INT 0
18875: PUSH
18876: EMPTY
18877: LIST
18878: LIST
18879: PUSH
18880: LD_INT 1
18882: NEG
18883: PUSH
18884: LD_INT 1
18886: NEG
18887: PUSH
18888: EMPTY
18889: LIST
18890: LIST
18891: PUSH
18892: LD_INT 1
18894: NEG
18895: PUSH
18896: LD_INT 2
18898: NEG
18899: PUSH
18900: EMPTY
18901: LIST
18902: LIST
18903: PUSH
18904: LD_INT 0
18906: PUSH
18907: LD_INT 2
18909: NEG
18910: PUSH
18911: EMPTY
18912: LIST
18913: LIST
18914: PUSH
18915: LD_INT 1
18917: PUSH
18918: LD_INT 1
18920: NEG
18921: PUSH
18922: EMPTY
18923: LIST
18924: LIST
18925: PUSH
18926: LD_INT 2
18928: PUSH
18929: LD_INT 0
18931: PUSH
18932: EMPTY
18933: LIST
18934: LIST
18935: PUSH
18936: LD_INT 2
18938: PUSH
18939: LD_INT 1
18941: PUSH
18942: EMPTY
18943: LIST
18944: LIST
18945: PUSH
18946: LD_INT 2
18948: PUSH
18949: LD_INT 2
18951: PUSH
18952: EMPTY
18953: LIST
18954: LIST
18955: PUSH
18956: LD_INT 1
18958: PUSH
18959: LD_INT 2
18961: PUSH
18962: EMPTY
18963: LIST
18964: LIST
18965: PUSH
18966: LD_INT 0
18968: PUSH
18969: LD_INT 2
18971: PUSH
18972: EMPTY
18973: LIST
18974: LIST
18975: PUSH
18976: LD_INT 1
18978: NEG
18979: PUSH
18980: LD_INT 1
18982: PUSH
18983: EMPTY
18984: LIST
18985: LIST
18986: PUSH
18987: LD_INT 2
18989: NEG
18990: PUSH
18991: LD_INT 0
18993: PUSH
18994: EMPTY
18995: LIST
18996: LIST
18997: PUSH
18998: LD_INT 2
19000: NEG
19001: PUSH
19002: LD_INT 1
19004: NEG
19005: PUSH
19006: EMPTY
19007: LIST
19008: LIST
19009: PUSH
19010: LD_INT 2
19012: NEG
19013: PUSH
19014: LD_INT 2
19016: NEG
19017: PUSH
19018: EMPTY
19019: LIST
19020: LIST
19021: PUSH
19022: EMPTY
19023: LIST
19024: LIST
19025: LIST
19026: LIST
19027: LIST
19028: LIST
19029: LIST
19030: LIST
19031: LIST
19032: LIST
19033: LIST
19034: LIST
19035: LIST
19036: LIST
19037: LIST
19038: LIST
19039: LIST
19040: LIST
19041: LIST
19042: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19043: LD_ADDR_VAR 0 57
19047: PUSH
19048: LD_INT 0
19050: PUSH
19051: LD_INT 0
19053: PUSH
19054: EMPTY
19055: LIST
19056: LIST
19057: PUSH
19058: LD_INT 0
19060: PUSH
19061: LD_INT 1
19063: NEG
19064: PUSH
19065: EMPTY
19066: LIST
19067: LIST
19068: PUSH
19069: LD_INT 1
19071: PUSH
19072: LD_INT 0
19074: PUSH
19075: EMPTY
19076: LIST
19077: LIST
19078: PUSH
19079: LD_INT 1
19081: PUSH
19082: LD_INT 1
19084: PUSH
19085: EMPTY
19086: LIST
19087: LIST
19088: PUSH
19089: LD_INT 0
19091: PUSH
19092: LD_INT 1
19094: PUSH
19095: EMPTY
19096: LIST
19097: LIST
19098: PUSH
19099: LD_INT 1
19101: NEG
19102: PUSH
19103: LD_INT 0
19105: PUSH
19106: EMPTY
19107: LIST
19108: LIST
19109: PUSH
19110: LD_INT 1
19112: NEG
19113: PUSH
19114: LD_INT 1
19116: NEG
19117: PUSH
19118: EMPTY
19119: LIST
19120: LIST
19121: PUSH
19122: LD_INT 1
19124: NEG
19125: PUSH
19126: LD_INT 2
19128: NEG
19129: PUSH
19130: EMPTY
19131: LIST
19132: LIST
19133: PUSH
19134: LD_INT 0
19136: PUSH
19137: LD_INT 2
19139: NEG
19140: PUSH
19141: EMPTY
19142: LIST
19143: LIST
19144: PUSH
19145: LD_INT 1
19147: PUSH
19148: LD_INT 1
19150: NEG
19151: PUSH
19152: EMPTY
19153: LIST
19154: LIST
19155: PUSH
19156: LD_INT 2
19158: PUSH
19159: LD_INT 0
19161: PUSH
19162: EMPTY
19163: LIST
19164: LIST
19165: PUSH
19166: LD_INT 2
19168: PUSH
19169: LD_INT 1
19171: PUSH
19172: EMPTY
19173: LIST
19174: LIST
19175: PUSH
19176: LD_INT 2
19178: PUSH
19179: LD_INT 2
19181: PUSH
19182: EMPTY
19183: LIST
19184: LIST
19185: PUSH
19186: LD_INT 1
19188: PUSH
19189: LD_INT 2
19191: PUSH
19192: EMPTY
19193: LIST
19194: LIST
19195: PUSH
19196: LD_INT 0
19198: PUSH
19199: LD_INT 2
19201: PUSH
19202: EMPTY
19203: LIST
19204: LIST
19205: PUSH
19206: LD_INT 1
19208: NEG
19209: PUSH
19210: LD_INT 1
19212: PUSH
19213: EMPTY
19214: LIST
19215: LIST
19216: PUSH
19217: LD_INT 2
19219: NEG
19220: PUSH
19221: LD_INT 0
19223: PUSH
19224: EMPTY
19225: LIST
19226: LIST
19227: PUSH
19228: LD_INT 2
19230: NEG
19231: PUSH
19232: LD_INT 1
19234: NEG
19235: PUSH
19236: EMPTY
19237: LIST
19238: LIST
19239: PUSH
19240: LD_INT 2
19242: NEG
19243: PUSH
19244: LD_INT 2
19246: NEG
19247: PUSH
19248: EMPTY
19249: LIST
19250: LIST
19251: PUSH
19252: EMPTY
19253: LIST
19254: LIST
19255: LIST
19256: LIST
19257: LIST
19258: LIST
19259: LIST
19260: LIST
19261: LIST
19262: LIST
19263: LIST
19264: LIST
19265: LIST
19266: LIST
19267: LIST
19268: LIST
19269: LIST
19270: LIST
19271: LIST
19272: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19273: LD_ADDR_VAR 0 58
19277: PUSH
19278: LD_INT 0
19280: PUSH
19281: LD_INT 0
19283: PUSH
19284: EMPTY
19285: LIST
19286: LIST
19287: PUSH
19288: LD_INT 0
19290: PUSH
19291: LD_INT 1
19293: NEG
19294: PUSH
19295: EMPTY
19296: LIST
19297: LIST
19298: PUSH
19299: LD_INT 1
19301: PUSH
19302: LD_INT 0
19304: PUSH
19305: EMPTY
19306: LIST
19307: LIST
19308: PUSH
19309: LD_INT 1
19311: PUSH
19312: LD_INT 1
19314: PUSH
19315: EMPTY
19316: LIST
19317: LIST
19318: PUSH
19319: LD_INT 0
19321: PUSH
19322: LD_INT 1
19324: PUSH
19325: EMPTY
19326: LIST
19327: LIST
19328: PUSH
19329: LD_INT 1
19331: NEG
19332: PUSH
19333: LD_INT 0
19335: PUSH
19336: EMPTY
19337: LIST
19338: LIST
19339: PUSH
19340: LD_INT 1
19342: NEG
19343: PUSH
19344: LD_INT 1
19346: NEG
19347: PUSH
19348: EMPTY
19349: LIST
19350: LIST
19351: PUSH
19352: LD_INT 1
19354: NEG
19355: PUSH
19356: LD_INT 2
19358: NEG
19359: PUSH
19360: EMPTY
19361: LIST
19362: LIST
19363: PUSH
19364: LD_INT 0
19366: PUSH
19367: LD_INT 2
19369: NEG
19370: PUSH
19371: EMPTY
19372: LIST
19373: LIST
19374: PUSH
19375: LD_INT 1
19377: PUSH
19378: LD_INT 1
19380: NEG
19381: PUSH
19382: EMPTY
19383: LIST
19384: LIST
19385: PUSH
19386: LD_INT 2
19388: PUSH
19389: LD_INT 0
19391: PUSH
19392: EMPTY
19393: LIST
19394: LIST
19395: PUSH
19396: LD_INT 2
19398: PUSH
19399: LD_INT 1
19401: PUSH
19402: EMPTY
19403: LIST
19404: LIST
19405: PUSH
19406: LD_INT 2
19408: PUSH
19409: LD_INT 2
19411: PUSH
19412: EMPTY
19413: LIST
19414: LIST
19415: PUSH
19416: LD_INT 1
19418: PUSH
19419: LD_INT 2
19421: PUSH
19422: EMPTY
19423: LIST
19424: LIST
19425: PUSH
19426: LD_INT 0
19428: PUSH
19429: LD_INT 2
19431: PUSH
19432: EMPTY
19433: LIST
19434: LIST
19435: PUSH
19436: LD_INT 1
19438: NEG
19439: PUSH
19440: LD_INT 1
19442: PUSH
19443: EMPTY
19444: LIST
19445: LIST
19446: PUSH
19447: LD_INT 2
19449: NEG
19450: PUSH
19451: LD_INT 0
19453: PUSH
19454: EMPTY
19455: LIST
19456: LIST
19457: PUSH
19458: LD_INT 2
19460: NEG
19461: PUSH
19462: LD_INT 1
19464: NEG
19465: PUSH
19466: EMPTY
19467: LIST
19468: LIST
19469: PUSH
19470: LD_INT 2
19472: NEG
19473: PUSH
19474: LD_INT 2
19476: NEG
19477: PUSH
19478: EMPTY
19479: LIST
19480: LIST
19481: PUSH
19482: EMPTY
19483: LIST
19484: LIST
19485: LIST
19486: LIST
19487: LIST
19488: LIST
19489: LIST
19490: LIST
19491: LIST
19492: LIST
19493: LIST
19494: LIST
19495: LIST
19496: LIST
19497: LIST
19498: LIST
19499: LIST
19500: LIST
19501: LIST
19502: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19503: LD_ADDR_VAR 0 59
19507: PUSH
19508: LD_INT 0
19510: PUSH
19511: LD_INT 0
19513: PUSH
19514: EMPTY
19515: LIST
19516: LIST
19517: PUSH
19518: LD_INT 0
19520: PUSH
19521: LD_INT 1
19523: NEG
19524: PUSH
19525: EMPTY
19526: LIST
19527: LIST
19528: PUSH
19529: LD_INT 1
19531: PUSH
19532: LD_INT 0
19534: PUSH
19535: EMPTY
19536: LIST
19537: LIST
19538: PUSH
19539: LD_INT 1
19541: PUSH
19542: LD_INT 1
19544: PUSH
19545: EMPTY
19546: LIST
19547: LIST
19548: PUSH
19549: LD_INT 0
19551: PUSH
19552: LD_INT 1
19554: PUSH
19555: EMPTY
19556: LIST
19557: LIST
19558: PUSH
19559: LD_INT 1
19561: NEG
19562: PUSH
19563: LD_INT 0
19565: PUSH
19566: EMPTY
19567: LIST
19568: LIST
19569: PUSH
19570: LD_INT 1
19572: NEG
19573: PUSH
19574: LD_INT 1
19576: NEG
19577: PUSH
19578: EMPTY
19579: LIST
19580: LIST
19581: PUSH
19582: EMPTY
19583: LIST
19584: LIST
19585: LIST
19586: LIST
19587: LIST
19588: LIST
19589: LIST
19590: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19591: LD_ADDR_VAR 0 60
19595: PUSH
19596: LD_INT 0
19598: PUSH
19599: LD_INT 0
19601: PUSH
19602: EMPTY
19603: LIST
19604: LIST
19605: PUSH
19606: LD_INT 0
19608: PUSH
19609: LD_INT 1
19611: NEG
19612: PUSH
19613: EMPTY
19614: LIST
19615: LIST
19616: PUSH
19617: LD_INT 1
19619: PUSH
19620: LD_INT 0
19622: PUSH
19623: EMPTY
19624: LIST
19625: LIST
19626: PUSH
19627: LD_INT 1
19629: PUSH
19630: LD_INT 1
19632: PUSH
19633: EMPTY
19634: LIST
19635: LIST
19636: PUSH
19637: LD_INT 0
19639: PUSH
19640: LD_INT 1
19642: PUSH
19643: EMPTY
19644: LIST
19645: LIST
19646: PUSH
19647: LD_INT 1
19649: NEG
19650: PUSH
19651: LD_INT 0
19653: PUSH
19654: EMPTY
19655: LIST
19656: LIST
19657: PUSH
19658: LD_INT 1
19660: NEG
19661: PUSH
19662: LD_INT 1
19664: NEG
19665: PUSH
19666: EMPTY
19667: LIST
19668: LIST
19669: PUSH
19670: EMPTY
19671: LIST
19672: LIST
19673: LIST
19674: LIST
19675: LIST
19676: LIST
19677: LIST
19678: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19679: LD_ADDR_VAR 0 61
19683: PUSH
19684: LD_INT 0
19686: PUSH
19687: LD_INT 0
19689: PUSH
19690: EMPTY
19691: LIST
19692: LIST
19693: PUSH
19694: LD_INT 0
19696: PUSH
19697: LD_INT 1
19699: NEG
19700: PUSH
19701: EMPTY
19702: LIST
19703: LIST
19704: PUSH
19705: LD_INT 1
19707: PUSH
19708: LD_INT 0
19710: PUSH
19711: EMPTY
19712: LIST
19713: LIST
19714: PUSH
19715: LD_INT 1
19717: PUSH
19718: LD_INT 1
19720: PUSH
19721: EMPTY
19722: LIST
19723: LIST
19724: PUSH
19725: LD_INT 0
19727: PUSH
19728: LD_INT 1
19730: PUSH
19731: EMPTY
19732: LIST
19733: LIST
19734: PUSH
19735: LD_INT 1
19737: NEG
19738: PUSH
19739: LD_INT 0
19741: PUSH
19742: EMPTY
19743: LIST
19744: LIST
19745: PUSH
19746: LD_INT 1
19748: NEG
19749: PUSH
19750: LD_INT 1
19752: NEG
19753: PUSH
19754: EMPTY
19755: LIST
19756: LIST
19757: PUSH
19758: EMPTY
19759: LIST
19760: LIST
19761: LIST
19762: LIST
19763: LIST
19764: LIST
19765: LIST
19766: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19767: LD_ADDR_VAR 0 62
19771: PUSH
19772: LD_INT 0
19774: PUSH
19775: LD_INT 0
19777: PUSH
19778: EMPTY
19779: LIST
19780: LIST
19781: PUSH
19782: LD_INT 0
19784: PUSH
19785: LD_INT 1
19787: NEG
19788: PUSH
19789: EMPTY
19790: LIST
19791: LIST
19792: PUSH
19793: LD_INT 1
19795: PUSH
19796: LD_INT 0
19798: PUSH
19799: EMPTY
19800: LIST
19801: LIST
19802: PUSH
19803: LD_INT 1
19805: PUSH
19806: LD_INT 1
19808: PUSH
19809: EMPTY
19810: LIST
19811: LIST
19812: PUSH
19813: LD_INT 0
19815: PUSH
19816: LD_INT 1
19818: PUSH
19819: EMPTY
19820: LIST
19821: LIST
19822: PUSH
19823: LD_INT 1
19825: NEG
19826: PUSH
19827: LD_INT 0
19829: PUSH
19830: EMPTY
19831: LIST
19832: LIST
19833: PUSH
19834: LD_INT 1
19836: NEG
19837: PUSH
19838: LD_INT 1
19840: NEG
19841: PUSH
19842: EMPTY
19843: LIST
19844: LIST
19845: PUSH
19846: EMPTY
19847: LIST
19848: LIST
19849: LIST
19850: LIST
19851: LIST
19852: LIST
19853: LIST
19854: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19855: LD_ADDR_VAR 0 63
19859: PUSH
19860: LD_INT 0
19862: PUSH
19863: LD_INT 0
19865: PUSH
19866: EMPTY
19867: LIST
19868: LIST
19869: PUSH
19870: LD_INT 0
19872: PUSH
19873: LD_INT 1
19875: NEG
19876: PUSH
19877: EMPTY
19878: LIST
19879: LIST
19880: PUSH
19881: LD_INT 1
19883: PUSH
19884: LD_INT 0
19886: PUSH
19887: EMPTY
19888: LIST
19889: LIST
19890: PUSH
19891: LD_INT 1
19893: PUSH
19894: LD_INT 1
19896: PUSH
19897: EMPTY
19898: LIST
19899: LIST
19900: PUSH
19901: LD_INT 0
19903: PUSH
19904: LD_INT 1
19906: PUSH
19907: EMPTY
19908: LIST
19909: LIST
19910: PUSH
19911: LD_INT 1
19913: NEG
19914: PUSH
19915: LD_INT 0
19917: PUSH
19918: EMPTY
19919: LIST
19920: LIST
19921: PUSH
19922: LD_INT 1
19924: NEG
19925: PUSH
19926: LD_INT 1
19928: NEG
19929: PUSH
19930: EMPTY
19931: LIST
19932: LIST
19933: PUSH
19934: EMPTY
19935: LIST
19936: LIST
19937: LIST
19938: LIST
19939: LIST
19940: LIST
19941: LIST
19942: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19943: LD_ADDR_VAR 0 64
19947: PUSH
19948: LD_INT 0
19950: PUSH
19951: LD_INT 0
19953: PUSH
19954: EMPTY
19955: LIST
19956: LIST
19957: PUSH
19958: LD_INT 0
19960: PUSH
19961: LD_INT 1
19963: NEG
19964: PUSH
19965: EMPTY
19966: LIST
19967: LIST
19968: PUSH
19969: LD_INT 1
19971: PUSH
19972: LD_INT 0
19974: PUSH
19975: EMPTY
19976: LIST
19977: LIST
19978: PUSH
19979: LD_INT 1
19981: PUSH
19982: LD_INT 1
19984: PUSH
19985: EMPTY
19986: LIST
19987: LIST
19988: PUSH
19989: LD_INT 0
19991: PUSH
19992: LD_INT 1
19994: PUSH
19995: EMPTY
19996: LIST
19997: LIST
19998: PUSH
19999: LD_INT 1
20001: NEG
20002: PUSH
20003: LD_INT 0
20005: PUSH
20006: EMPTY
20007: LIST
20008: LIST
20009: PUSH
20010: LD_INT 1
20012: NEG
20013: PUSH
20014: LD_INT 1
20016: NEG
20017: PUSH
20018: EMPTY
20019: LIST
20020: LIST
20021: PUSH
20022: EMPTY
20023: LIST
20024: LIST
20025: LIST
20026: LIST
20027: LIST
20028: LIST
20029: LIST
20030: ST_TO_ADDR
// end ; 1 :
20031: GO 25928
20033: LD_INT 1
20035: DOUBLE
20036: EQUAL
20037: IFTRUE 20041
20039: GO 22664
20041: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20042: LD_ADDR_VAR 0 11
20046: PUSH
20047: LD_INT 1
20049: NEG
20050: PUSH
20051: LD_INT 3
20053: NEG
20054: PUSH
20055: EMPTY
20056: LIST
20057: LIST
20058: PUSH
20059: LD_INT 0
20061: PUSH
20062: LD_INT 3
20064: NEG
20065: PUSH
20066: EMPTY
20067: LIST
20068: LIST
20069: PUSH
20070: LD_INT 1
20072: PUSH
20073: LD_INT 2
20075: NEG
20076: PUSH
20077: EMPTY
20078: LIST
20079: LIST
20080: PUSH
20081: EMPTY
20082: LIST
20083: LIST
20084: LIST
20085: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20086: LD_ADDR_VAR 0 12
20090: PUSH
20091: LD_INT 2
20093: PUSH
20094: LD_INT 1
20096: NEG
20097: PUSH
20098: EMPTY
20099: LIST
20100: LIST
20101: PUSH
20102: LD_INT 3
20104: PUSH
20105: LD_INT 0
20107: PUSH
20108: EMPTY
20109: LIST
20110: LIST
20111: PUSH
20112: LD_INT 3
20114: PUSH
20115: LD_INT 1
20117: PUSH
20118: EMPTY
20119: LIST
20120: LIST
20121: PUSH
20122: EMPTY
20123: LIST
20124: LIST
20125: LIST
20126: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20127: LD_ADDR_VAR 0 13
20131: PUSH
20132: LD_INT 3
20134: PUSH
20135: LD_INT 2
20137: PUSH
20138: EMPTY
20139: LIST
20140: LIST
20141: PUSH
20142: LD_INT 3
20144: PUSH
20145: LD_INT 3
20147: PUSH
20148: EMPTY
20149: LIST
20150: LIST
20151: PUSH
20152: LD_INT 2
20154: PUSH
20155: LD_INT 3
20157: PUSH
20158: EMPTY
20159: LIST
20160: LIST
20161: PUSH
20162: EMPTY
20163: LIST
20164: LIST
20165: LIST
20166: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20167: LD_ADDR_VAR 0 14
20171: PUSH
20172: LD_INT 1
20174: PUSH
20175: LD_INT 3
20177: PUSH
20178: EMPTY
20179: LIST
20180: LIST
20181: PUSH
20182: LD_INT 0
20184: PUSH
20185: LD_INT 3
20187: PUSH
20188: EMPTY
20189: LIST
20190: LIST
20191: PUSH
20192: LD_INT 1
20194: NEG
20195: PUSH
20196: LD_INT 2
20198: PUSH
20199: EMPTY
20200: LIST
20201: LIST
20202: PUSH
20203: EMPTY
20204: LIST
20205: LIST
20206: LIST
20207: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20208: LD_ADDR_VAR 0 15
20212: PUSH
20213: LD_INT 2
20215: NEG
20216: PUSH
20217: LD_INT 1
20219: PUSH
20220: EMPTY
20221: LIST
20222: LIST
20223: PUSH
20224: LD_INT 3
20226: NEG
20227: PUSH
20228: LD_INT 0
20230: PUSH
20231: EMPTY
20232: LIST
20233: LIST
20234: PUSH
20235: LD_INT 3
20237: NEG
20238: PUSH
20239: LD_INT 1
20241: NEG
20242: PUSH
20243: EMPTY
20244: LIST
20245: LIST
20246: PUSH
20247: EMPTY
20248: LIST
20249: LIST
20250: LIST
20251: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20252: LD_ADDR_VAR 0 16
20256: PUSH
20257: LD_INT 2
20259: NEG
20260: PUSH
20261: LD_INT 3
20263: NEG
20264: PUSH
20265: EMPTY
20266: LIST
20267: LIST
20268: PUSH
20269: LD_INT 3
20271: NEG
20272: PUSH
20273: LD_INT 2
20275: NEG
20276: PUSH
20277: EMPTY
20278: LIST
20279: LIST
20280: PUSH
20281: LD_INT 3
20283: NEG
20284: PUSH
20285: LD_INT 3
20287: NEG
20288: PUSH
20289: EMPTY
20290: LIST
20291: LIST
20292: PUSH
20293: EMPTY
20294: LIST
20295: LIST
20296: LIST
20297: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20298: LD_ADDR_VAR 0 17
20302: PUSH
20303: LD_INT 1
20305: NEG
20306: PUSH
20307: LD_INT 3
20309: NEG
20310: PUSH
20311: EMPTY
20312: LIST
20313: LIST
20314: PUSH
20315: LD_INT 0
20317: PUSH
20318: LD_INT 3
20320: NEG
20321: PUSH
20322: EMPTY
20323: LIST
20324: LIST
20325: PUSH
20326: LD_INT 1
20328: PUSH
20329: LD_INT 2
20331: NEG
20332: PUSH
20333: EMPTY
20334: LIST
20335: LIST
20336: PUSH
20337: EMPTY
20338: LIST
20339: LIST
20340: LIST
20341: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20342: LD_ADDR_VAR 0 18
20346: PUSH
20347: LD_INT 2
20349: PUSH
20350: LD_INT 1
20352: NEG
20353: PUSH
20354: EMPTY
20355: LIST
20356: LIST
20357: PUSH
20358: LD_INT 3
20360: PUSH
20361: LD_INT 0
20363: PUSH
20364: EMPTY
20365: LIST
20366: LIST
20367: PUSH
20368: LD_INT 3
20370: PUSH
20371: LD_INT 1
20373: PUSH
20374: EMPTY
20375: LIST
20376: LIST
20377: PUSH
20378: EMPTY
20379: LIST
20380: LIST
20381: LIST
20382: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20383: LD_ADDR_VAR 0 19
20387: PUSH
20388: LD_INT 3
20390: PUSH
20391: LD_INT 2
20393: PUSH
20394: EMPTY
20395: LIST
20396: LIST
20397: PUSH
20398: LD_INT 3
20400: PUSH
20401: LD_INT 3
20403: PUSH
20404: EMPTY
20405: LIST
20406: LIST
20407: PUSH
20408: LD_INT 2
20410: PUSH
20411: LD_INT 3
20413: PUSH
20414: EMPTY
20415: LIST
20416: LIST
20417: PUSH
20418: EMPTY
20419: LIST
20420: LIST
20421: LIST
20422: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20423: LD_ADDR_VAR 0 20
20427: PUSH
20428: LD_INT 1
20430: PUSH
20431: LD_INT 3
20433: PUSH
20434: EMPTY
20435: LIST
20436: LIST
20437: PUSH
20438: LD_INT 0
20440: PUSH
20441: LD_INT 3
20443: PUSH
20444: EMPTY
20445: LIST
20446: LIST
20447: PUSH
20448: LD_INT 1
20450: NEG
20451: PUSH
20452: LD_INT 2
20454: PUSH
20455: EMPTY
20456: LIST
20457: LIST
20458: PUSH
20459: EMPTY
20460: LIST
20461: LIST
20462: LIST
20463: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20464: LD_ADDR_VAR 0 21
20468: PUSH
20469: LD_INT 2
20471: NEG
20472: PUSH
20473: LD_INT 1
20475: PUSH
20476: EMPTY
20477: LIST
20478: LIST
20479: PUSH
20480: LD_INT 3
20482: NEG
20483: PUSH
20484: LD_INT 0
20486: PUSH
20487: EMPTY
20488: LIST
20489: LIST
20490: PUSH
20491: LD_INT 3
20493: NEG
20494: PUSH
20495: LD_INT 1
20497: NEG
20498: PUSH
20499: EMPTY
20500: LIST
20501: LIST
20502: PUSH
20503: EMPTY
20504: LIST
20505: LIST
20506: LIST
20507: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20508: LD_ADDR_VAR 0 22
20512: PUSH
20513: LD_INT 2
20515: NEG
20516: PUSH
20517: LD_INT 3
20519: NEG
20520: PUSH
20521: EMPTY
20522: LIST
20523: LIST
20524: PUSH
20525: LD_INT 3
20527: NEG
20528: PUSH
20529: LD_INT 2
20531: NEG
20532: PUSH
20533: EMPTY
20534: LIST
20535: LIST
20536: PUSH
20537: LD_INT 3
20539: NEG
20540: PUSH
20541: LD_INT 3
20543: NEG
20544: PUSH
20545: EMPTY
20546: LIST
20547: LIST
20548: PUSH
20549: EMPTY
20550: LIST
20551: LIST
20552: LIST
20553: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20554: LD_ADDR_VAR 0 23
20558: PUSH
20559: LD_INT 0
20561: PUSH
20562: LD_INT 3
20564: NEG
20565: PUSH
20566: EMPTY
20567: LIST
20568: LIST
20569: PUSH
20570: LD_INT 1
20572: NEG
20573: PUSH
20574: LD_INT 4
20576: NEG
20577: PUSH
20578: EMPTY
20579: LIST
20580: LIST
20581: PUSH
20582: LD_INT 1
20584: PUSH
20585: LD_INT 3
20587: NEG
20588: PUSH
20589: EMPTY
20590: LIST
20591: LIST
20592: PUSH
20593: EMPTY
20594: LIST
20595: LIST
20596: LIST
20597: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20598: LD_ADDR_VAR 0 24
20602: PUSH
20603: LD_INT 3
20605: PUSH
20606: LD_INT 0
20608: PUSH
20609: EMPTY
20610: LIST
20611: LIST
20612: PUSH
20613: LD_INT 3
20615: PUSH
20616: LD_INT 1
20618: NEG
20619: PUSH
20620: EMPTY
20621: LIST
20622: LIST
20623: PUSH
20624: LD_INT 4
20626: PUSH
20627: LD_INT 1
20629: PUSH
20630: EMPTY
20631: LIST
20632: LIST
20633: PUSH
20634: EMPTY
20635: LIST
20636: LIST
20637: LIST
20638: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20639: LD_ADDR_VAR 0 25
20643: PUSH
20644: LD_INT 3
20646: PUSH
20647: LD_INT 3
20649: PUSH
20650: EMPTY
20651: LIST
20652: LIST
20653: PUSH
20654: LD_INT 4
20656: PUSH
20657: LD_INT 3
20659: PUSH
20660: EMPTY
20661: LIST
20662: LIST
20663: PUSH
20664: LD_INT 3
20666: PUSH
20667: LD_INT 4
20669: PUSH
20670: EMPTY
20671: LIST
20672: LIST
20673: PUSH
20674: EMPTY
20675: LIST
20676: LIST
20677: LIST
20678: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
20679: LD_ADDR_VAR 0 26
20683: PUSH
20684: LD_INT 0
20686: PUSH
20687: LD_INT 3
20689: PUSH
20690: EMPTY
20691: LIST
20692: LIST
20693: PUSH
20694: LD_INT 1
20696: PUSH
20697: LD_INT 4
20699: PUSH
20700: EMPTY
20701: LIST
20702: LIST
20703: PUSH
20704: LD_INT 1
20706: NEG
20707: PUSH
20708: LD_INT 3
20710: PUSH
20711: EMPTY
20712: LIST
20713: LIST
20714: PUSH
20715: EMPTY
20716: LIST
20717: LIST
20718: LIST
20719: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
20720: LD_ADDR_VAR 0 27
20724: PUSH
20725: LD_INT 3
20727: NEG
20728: PUSH
20729: LD_INT 0
20731: PUSH
20732: EMPTY
20733: LIST
20734: LIST
20735: PUSH
20736: LD_INT 3
20738: NEG
20739: PUSH
20740: LD_INT 1
20742: PUSH
20743: EMPTY
20744: LIST
20745: LIST
20746: PUSH
20747: LD_INT 4
20749: NEG
20750: PUSH
20751: LD_INT 1
20753: NEG
20754: PUSH
20755: EMPTY
20756: LIST
20757: LIST
20758: PUSH
20759: EMPTY
20760: LIST
20761: LIST
20762: LIST
20763: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
20764: LD_ADDR_VAR 0 28
20768: PUSH
20769: LD_INT 3
20771: NEG
20772: PUSH
20773: LD_INT 3
20775: NEG
20776: PUSH
20777: EMPTY
20778: LIST
20779: LIST
20780: PUSH
20781: LD_INT 3
20783: NEG
20784: PUSH
20785: LD_INT 4
20787: NEG
20788: PUSH
20789: EMPTY
20790: LIST
20791: LIST
20792: PUSH
20793: LD_INT 4
20795: NEG
20796: PUSH
20797: LD_INT 3
20799: NEG
20800: PUSH
20801: EMPTY
20802: LIST
20803: LIST
20804: PUSH
20805: EMPTY
20806: LIST
20807: LIST
20808: LIST
20809: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
20810: LD_ADDR_VAR 0 29
20814: PUSH
20815: LD_INT 1
20817: NEG
20818: PUSH
20819: LD_INT 3
20821: NEG
20822: PUSH
20823: EMPTY
20824: LIST
20825: LIST
20826: PUSH
20827: LD_INT 0
20829: PUSH
20830: LD_INT 3
20832: NEG
20833: PUSH
20834: EMPTY
20835: LIST
20836: LIST
20837: PUSH
20838: LD_INT 1
20840: PUSH
20841: LD_INT 2
20843: NEG
20844: PUSH
20845: EMPTY
20846: LIST
20847: LIST
20848: PUSH
20849: LD_INT 1
20851: NEG
20852: PUSH
20853: LD_INT 4
20855: NEG
20856: PUSH
20857: EMPTY
20858: LIST
20859: LIST
20860: PUSH
20861: LD_INT 0
20863: PUSH
20864: LD_INT 4
20866: NEG
20867: PUSH
20868: EMPTY
20869: LIST
20870: LIST
20871: PUSH
20872: LD_INT 1
20874: PUSH
20875: LD_INT 3
20877: NEG
20878: PUSH
20879: EMPTY
20880: LIST
20881: LIST
20882: PUSH
20883: LD_INT 1
20885: NEG
20886: PUSH
20887: LD_INT 5
20889: NEG
20890: PUSH
20891: EMPTY
20892: LIST
20893: LIST
20894: PUSH
20895: LD_INT 0
20897: PUSH
20898: LD_INT 5
20900: NEG
20901: PUSH
20902: EMPTY
20903: LIST
20904: LIST
20905: PUSH
20906: LD_INT 1
20908: PUSH
20909: LD_INT 4
20911: NEG
20912: PUSH
20913: EMPTY
20914: LIST
20915: LIST
20916: PUSH
20917: LD_INT 1
20919: NEG
20920: PUSH
20921: LD_INT 6
20923: NEG
20924: PUSH
20925: EMPTY
20926: LIST
20927: LIST
20928: PUSH
20929: LD_INT 0
20931: PUSH
20932: LD_INT 6
20934: NEG
20935: PUSH
20936: EMPTY
20937: LIST
20938: LIST
20939: PUSH
20940: LD_INT 1
20942: PUSH
20943: LD_INT 5
20945: NEG
20946: PUSH
20947: EMPTY
20948: LIST
20949: LIST
20950: PUSH
20951: EMPTY
20952: LIST
20953: LIST
20954: LIST
20955: LIST
20956: LIST
20957: LIST
20958: LIST
20959: LIST
20960: LIST
20961: LIST
20962: LIST
20963: LIST
20964: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
20965: LD_ADDR_VAR 0 30
20969: PUSH
20970: LD_INT 2
20972: PUSH
20973: LD_INT 1
20975: NEG
20976: PUSH
20977: EMPTY
20978: LIST
20979: LIST
20980: PUSH
20981: LD_INT 3
20983: PUSH
20984: LD_INT 0
20986: PUSH
20987: EMPTY
20988: LIST
20989: LIST
20990: PUSH
20991: LD_INT 3
20993: PUSH
20994: LD_INT 1
20996: PUSH
20997: EMPTY
20998: LIST
20999: LIST
21000: PUSH
21001: LD_INT 3
21003: PUSH
21004: LD_INT 1
21006: NEG
21007: PUSH
21008: EMPTY
21009: LIST
21010: LIST
21011: PUSH
21012: LD_INT 4
21014: PUSH
21015: LD_INT 0
21017: PUSH
21018: EMPTY
21019: LIST
21020: LIST
21021: PUSH
21022: LD_INT 4
21024: PUSH
21025: LD_INT 1
21027: PUSH
21028: EMPTY
21029: LIST
21030: LIST
21031: PUSH
21032: LD_INT 4
21034: PUSH
21035: LD_INT 1
21037: NEG
21038: PUSH
21039: EMPTY
21040: LIST
21041: LIST
21042: PUSH
21043: LD_INT 5
21045: PUSH
21046: LD_INT 0
21048: PUSH
21049: EMPTY
21050: LIST
21051: LIST
21052: PUSH
21053: LD_INT 5
21055: PUSH
21056: LD_INT 1
21058: PUSH
21059: EMPTY
21060: LIST
21061: LIST
21062: PUSH
21063: LD_INT 5
21065: PUSH
21066: LD_INT 1
21068: NEG
21069: PUSH
21070: EMPTY
21071: LIST
21072: LIST
21073: PUSH
21074: LD_INT 6
21076: PUSH
21077: LD_INT 0
21079: PUSH
21080: EMPTY
21081: LIST
21082: LIST
21083: PUSH
21084: LD_INT 6
21086: PUSH
21087: LD_INT 1
21089: PUSH
21090: EMPTY
21091: LIST
21092: LIST
21093: PUSH
21094: EMPTY
21095: LIST
21096: LIST
21097: LIST
21098: LIST
21099: LIST
21100: LIST
21101: LIST
21102: LIST
21103: LIST
21104: LIST
21105: LIST
21106: LIST
21107: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21108: LD_ADDR_VAR 0 31
21112: PUSH
21113: LD_INT 3
21115: PUSH
21116: LD_INT 2
21118: PUSH
21119: EMPTY
21120: LIST
21121: LIST
21122: PUSH
21123: LD_INT 3
21125: PUSH
21126: LD_INT 3
21128: PUSH
21129: EMPTY
21130: LIST
21131: LIST
21132: PUSH
21133: LD_INT 2
21135: PUSH
21136: LD_INT 3
21138: PUSH
21139: EMPTY
21140: LIST
21141: LIST
21142: PUSH
21143: LD_INT 4
21145: PUSH
21146: LD_INT 3
21148: PUSH
21149: EMPTY
21150: LIST
21151: LIST
21152: PUSH
21153: LD_INT 4
21155: PUSH
21156: LD_INT 4
21158: PUSH
21159: EMPTY
21160: LIST
21161: LIST
21162: PUSH
21163: LD_INT 3
21165: PUSH
21166: LD_INT 4
21168: PUSH
21169: EMPTY
21170: LIST
21171: LIST
21172: PUSH
21173: LD_INT 5
21175: PUSH
21176: LD_INT 4
21178: PUSH
21179: EMPTY
21180: LIST
21181: LIST
21182: PUSH
21183: LD_INT 5
21185: PUSH
21186: LD_INT 5
21188: PUSH
21189: EMPTY
21190: LIST
21191: LIST
21192: PUSH
21193: LD_INT 4
21195: PUSH
21196: LD_INT 5
21198: PUSH
21199: EMPTY
21200: LIST
21201: LIST
21202: PUSH
21203: LD_INT 6
21205: PUSH
21206: LD_INT 5
21208: PUSH
21209: EMPTY
21210: LIST
21211: LIST
21212: PUSH
21213: LD_INT 6
21215: PUSH
21216: LD_INT 6
21218: PUSH
21219: EMPTY
21220: LIST
21221: LIST
21222: PUSH
21223: LD_INT 5
21225: PUSH
21226: LD_INT 6
21228: PUSH
21229: EMPTY
21230: LIST
21231: LIST
21232: PUSH
21233: EMPTY
21234: LIST
21235: LIST
21236: LIST
21237: LIST
21238: LIST
21239: LIST
21240: LIST
21241: LIST
21242: LIST
21243: LIST
21244: LIST
21245: LIST
21246: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21247: LD_ADDR_VAR 0 32
21251: PUSH
21252: LD_INT 1
21254: PUSH
21255: LD_INT 3
21257: PUSH
21258: EMPTY
21259: LIST
21260: LIST
21261: PUSH
21262: LD_INT 0
21264: PUSH
21265: LD_INT 3
21267: PUSH
21268: EMPTY
21269: LIST
21270: LIST
21271: PUSH
21272: LD_INT 1
21274: NEG
21275: PUSH
21276: LD_INT 2
21278: PUSH
21279: EMPTY
21280: LIST
21281: LIST
21282: PUSH
21283: LD_INT 1
21285: PUSH
21286: LD_INT 4
21288: PUSH
21289: EMPTY
21290: LIST
21291: LIST
21292: PUSH
21293: LD_INT 0
21295: PUSH
21296: LD_INT 4
21298: PUSH
21299: EMPTY
21300: LIST
21301: LIST
21302: PUSH
21303: LD_INT 1
21305: NEG
21306: PUSH
21307: LD_INT 3
21309: PUSH
21310: EMPTY
21311: LIST
21312: LIST
21313: PUSH
21314: LD_INT 1
21316: PUSH
21317: LD_INT 5
21319: PUSH
21320: EMPTY
21321: LIST
21322: LIST
21323: PUSH
21324: LD_INT 0
21326: PUSH
21327: LD_INT 5
21329: PUSH
21330: EMPTY
21331: LIST
21332: LIST
21333: PUSH
21334: LD_INT 1
21336: NEG
21337: PUSH
21338: LD_INT 4
21340: PUSH
21341: EMPTY
21342: LIST
21343: LIST
21344: PUSH
21345: LD_INT 1
21347: PUSH
21348: LD_INT 6
21350: PUSH
21351: EMPTY
21352: LIST
21353: LIST
21354: PUSH
21355: LD_INT 0
21357: PUSH
21358: LD_INT 6
21360: PUSH
21361: EMPTY
21362: LIST
21363: LIST
21364: PUSH
21365: LD_INT 1
21367: NEG
21368: PUSH
21369: LD_INT 5
21371: PUSH
21372: EMPTY
21373: LIST
21374: LIST
21375: PUSH
21376: EMPTY
21377: LIST
21378: LIST
21379: LIST
21380: LIST
21381: LIST
21382: LIST
21383: LIST
21384: LIST
21385: LIST
21386: LIST
21387: LIST
21388: LIST
21389: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21390: LD_ADDR_VAR 0 33
21394: PUSH
21395: LD_INT 2
21397: NEG
21398: PUSH
21399: LD_INT 1
21401: PUSH
21402: EMPTY
21403: LIST
21404: LIST
21405: PUSH
21406: LD_INT 3
21408: NEG
21409: PUSH
21410: LD_INT 0
21412: PUSH
21413: EMPTY
21414: LIST
21415: LIST
21416: PUSH
21417: LD_INT 3
21419: NEG
21420: PUSH
21421: LD_INT 1
21423: NEG
21424: PUSH
21425: EMPTY
21426: LIST
21427: LIST
21428: PUSH
21429: LD_INT 3
21431: NEG
21432: PUSH
21433: LD_INT 1
21435: PUSH
21436: EMPTY
21437: LIST
21438: LIST
21439: PUSH
21440: LD_INT 4
21442: NEG
21443: PUSH
21444: LD_INT 0
21446: PUSH
21447: EMPTY
21448: LIST
21449: LIST
21450: PUSH
21451: LD_INT 4
21453: NEG
21454: PUSH
21455: LD_INT 1
21457: NEG
21458: PUSH
21459: EMPTY
21460: LIST
21461: LIST
21462: PUSH
21463: LD_INT 4
21465: NEG
21466: PUSH
21467: LD_INT 1
21469: PUSH
21470: EMPTY
21471: LIST
21472: LIST
21473: PUSH
21474: LD_INT 5
21476: NEG
21477: PUSH
21478: LD_INT 0
21480: PUSH
21481: EMPTY
21482: LIST
21483: LIST
21484: PUSH
21485: LD_INT 5
21487: NEG
21488: PUSH
21489: LD_INT 1
21491: NEG
21492: PUSH
21493: EMPTY
21494: LIST
21495: LIST
21496: PUSH
21497: LD_INT 5
21499: NEG
21500: PUSH
21501: LD_INT 1
21503: PUSH
21504: EMPTY
21505: LIST
21506: LIST
21507: PUSH
21508: LD_INT 6
21510: NEG
21511: PUSH
21512: LD_INT 0
21514: PUSH
21515: EMPTY
21516: LIST
21517: LIST
21518: PUSH
21519: LD_INT 6
21521: NEG
21522: PUSH
21523: LD_INT 1
21525: NEG
21526: PUSH
21527: EMPTY
21528: LIST
21529: LIST
21530: PUSH
21531: EMPTY
21532: LIST
21533: LIST
21534: LIST
21535: LIST
21536: LIST
21537: LIST
21538: LIST
21539: LIST
21540: LIST
21541: LIST
21542: LIST
21543: LIST
21544: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21545: LD_ADDR_VAR 0 34
21549: PUSH
21550: LD_INT 2
21552: NEG
21553: PUSH
21554: LD_INT 3
21556: NEG
21557: PUSH
21558: EMPTY
21559: LIST
21560: LIST
21561: PUSH
21562: LD_INT 3
21564: NEG
21565: PUSH
21566: LD_INT 2
21568: NEG
21569: PUSH
21570: EMPTY
21571: LIST
21572: LIST
21573: PUSH
21574: LD_INT 3
21576: NEG
21577: PUSH
21578: LD_INT 3
21580: NEG
21581: PUSH
21582: EMPTY
21583: LIST
21584: LIST
21585: PUSH
21586: LD_INT 3
21588: NEG
21589: PUSH
21590: LD_INT 4
21592: NEG
21593: PUSH
21594: EMPTY
21595: LIST
21596: LIST
21597: PUSH
21598: LD_INT 4
21600: NEG
21601: PUSH
21602: LD_INT 3
21604: NEG
21605: PUSH
21606: EMPTY
21607: LIST
21608: LIST
21609: PUSH
21610: LD_INT 4
21612: NEG
21613: PUSH
21614: LD_INT 4
21616: NEG
21617: PUSH
21618: EMPTY
21619: LIST
21620: LIST
21621: PUSH
21622: LD_INT 4
21624: NEG
21625: PUSH
21626: LD_INT 5
21628: NEG
21629: PUSH
21630: EMPTY
21631: LIST
21632: LIST
21633: PUSH
21634: LD_INT 5
21636: NEG
21637: PUSH
21638: LD_INT 4
21640: NEG
21641: PUSH
21642: EMPTY
21643: LIST
21644: LIST
21645: PUSH
21646: LD_INT 5
21648: NEG
21649: PUSH
21650: LD_INT 5
21652: NEG
21653: PUSH
21654: EMPTY
21655: LIST
21656: LIST
21657: PUSH
21658: LD_INT 5
21660: NEG
21661: PUSH
21662: LD_INT 6
21664: NEG
21665: PUSH
21666: EMPTY
21667: LIST
21668: LIST
21669: PUSH
21670: LD_INT 6
21672: NEG
21673: PUSH
21674: LD_INT 5
21676: NEG
21677: PUSH
21678: EMPTY
21679: LIST
21680: LIST
21681: PUSH
21682: LD_INT 6
21684: NEG
21685: PUSH
21686: LD_INT 6
21688: NEG
21689: PUSH
21690: EMPTY
21691: LIST
21692: LIST
21693: PUSH
21694: EMPTY
21695: LIST
21696: LIST
21697: LIST
21698: LIST
21699: LIST
21700: LIST
21701: LIST
21702: LIST
21703: LIST
21704: LIST
21705: LIST
21706: LIST
21707: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
21708: LD_ADDR_VAR 0 41
21712: PUSH
21713: LD_INT 0
21715: PUSH
21716: LD_INT 2
21718: NEG
21719: PUSH
21720: EMPTY
21721: LIST
21722: LIST
21723: PUSH
21724: LD_INT 1
21726: NEG
21727: PUSH
21728: LD_INT 3
21730: NEG
21731: PUSH
21732: EMPTY
21733: LIST
21734: LIST
21735: PUSH
21736: LD_INT 1
21738: PUSH
21739: LD_INT 2
21741: NEG
21742: PUSH
21743: EMPTY
21744: LIST
21745: LIST
21746: PUSH
21747: EMPTY
21748: LIST
21749: LIST
21750: LIST
21751: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
21752: LD_ADDR_VAR 0 42
21756: PUSH
21757: LD_INT 2
21759: PUSH
21760: LD_INT 0
21762: PUSH
21763: EMPTY
21764: LIST
21765: LIST
21766: PUSH
21767: LD_INT 2
21769: PUSH
21770: LD_INT 1
21772: NEG
21773: PUSH
21774: EMPTY
21775: LIST
21776: LIST
21777: PUSH
21778: LD_INT 3
21780: PUSH
21781: LD_INT 1
21783: PUSH
21784: EMPTY
21785: LIST
21786: LIST
21787: PUSH
21788: EMPTY
21789: LIST
21790: LIST
21791: LIST
21792: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
21793: LD_ADDR_VAR 0 43
21797: PUSH
21798: LD_INT 2
21800: PUSH
21801: LD_INT 2
21803: PUSH
21804: EMPTY
21805: LIST
21806: LIST
21807: PUSH
21808: LD_INT 3
21810: PUSH
21811: LD_INT 2
21813: PUSH
21814: EMPTY
21815: LIST
21816: LIST
21817: PUSH
21818: LD_INT 2
21820: PUSH
21821: LD_INT 3
21823: PUSH
21824: EMPTY
21825: LIST
21826: LIST
21827: PUSH
21828: EMPTY
21829: LIST
21830: LIST
21831: LIST
21832: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
21833: LD_ADDR_VAR 0 44
21837: PUSH
21838: LD_INT 0
21840: PUSH
21841: LD_INT 2
21843: PUSH
21844: EMPTY
21845: LIST
21846: LIST
21847: PUSH
21848: LD_INT 1
21850: PUSH
21851: LD_INT 3
21853: PUSH
21854: EMPTY
21855: LIST
21856: LIST
21857: PUSH
21858: LD_INT 1
21860: NEG
21861: PUSH
21862: LD_INT 2
21864: PUSH
21865: EMPTY
21866: LIST
21867: LIST
21868: PUSH
21869: EMPTY
21870: LIST
21871: LIST
21872: LIST
21873: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
21874: LD_ADDR_VAR 0 45
21878: PUSH
21879: LD_INT 2
21881: NEG
21882: PUSH
21883: LD_INT 0
21885: PUSH
21886: EMPTY
21887: LIST
21888: LIST
21889: PUSH
21890: LD_INT 2
21892: NEG
21893: PUSH
21894: LD_INT 1
21896: PUSH
21897: EMPTY
21898: LIST
21899: LIST
21900: PUSH
21901: LD_INT 3
21903: NEG
21904: PUSH
21905: LD_INT 1
21907: NEG
21908: PUSH
21909: EMPTY
21910: LIST
21911: LIST
21912: PUSH
21913: EMPTY
21914: LIST
21915: LIST
21916: LIST
21917: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
21918: LD_ADDR_VAR 0 46
21922: PUSH
21923: LD_INT 2
21925: NEG
21926: PUSH
21927: LD_INT 2
21929: NEG
21930: PUSH
21931: EMPTY
21932: LIST
21933: LIST
21934: PUSH
21935: LD_INT 2
21937: NEG
21938: PUSH
21939: LD_INT 3
21941: NEG
21942: PUSH
21943: EMPTY
21944: LIST
21945: LIST
21946: PUSH
21947: LD_INT 3
21949: NEG
21950: PUSH
21951: LD_INT 2
21953: NEG
21954: PUSH
21955: EMPTY
21956: LIST
21957: LIST
21958: PUSH
21959: EMPTY
21960: LIST
21961: LIST
21962: LIST
21963: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
21964: LD_ADDR_VAR 0 47
21968: PUSH
21969: LD_INT 2
21971: NEG
21972: PUSH
21973: LD_INT 3
21975: NEG
21976: PUSH
21977: EMPTY
21978: LIST
21979: LIST
21980: PUSH
21981: LD_INT 1
21983: NEG
21984: PUSH
21985: LD_INT 3
21987: NEG
21988: PUSH
21989: EMPTY
21990: LIST
21991: LIST
21992: PUSH
21993: EMPTY
21994: LIST
21995: LIST
21996: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
21997: LD_ADDR_VAR 0 48
22001: PUSH
22002: LD_INT 1
22004: PUSH
22005: LD_INT 2
22007: NEG
22008: PUSH
22009: EMPTY
22010: LIST
22011: LIST
22012: PUSH
22013: LD_INT 2
22015: PUSH
22016: LD_INT 1
22018: NEG
22019: PUSH
22020: EMPTY
22021: LIST
22022: LIST
22023: PUSH
22024: EMPTY
22025: LIST
22026: LIST
22027: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22028: LD_ADDR_VAR 0 49
22032: PUSH
22033: LD_INT 3
22035: PUSH
22036: LD_INT 1
22038: PUSH
22039: EMPTY
22040: LIST
22041: LIST
22042: PUSH
22043: LD_INT 3
22045: PUSH
22046: LD_INT 2
22048: PUSH
22049: EMPTY
22050: LIST
22051: LIST
22052: PUSH
22053: EMPTY
22054: LIST
22055: LIST
22056: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22057: LD_ADDR_VAR 0 50
22061: PUSH
22062: LD_INT 2
22064: PUSH
22065: LD_INT 3
22067: PUSH
22068: EMPTY
22069: LIST
22070: LIST
22071: PUSH
22072: LD_INT 1
22074: PUSH
22075: LD_INT 3
22077: PUSH
22078: EMPTY
22079: LIST
22080: LIST
22081: PUSH
22082: EMPTY
22083: LIST
22084: LIST
22085: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22086: LD_ADDR_VAR 0 51
22090: PUSH
22091: LD_INT 1
22093: NEG
22094: PUSH
22095: LD_INT 2
22097: PUSH
22098: EMPTY
22099: LIST
22100: LIST
22101: PUSH
22102: LD_INT 2
22104: NEG
22105: PUSH
22106: LD_INT 1
22108: PUSH
22109: EMPTY
22110: LIST
22111: LIST
22112: PUSH
22113: EMPTY
22114: LIST
22115: LIST
22116: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22117: LD_ADDR_VAR 0 52
22121: PUSH
22122: LD_INT 3
22124: NEG
22125: PUSH
22126: LD_INT 1
22128: NEG
22129: PUSH
22130: EMPTY
22131: LIST
22132: LIST
22133: PUSH
22134: LD_INT 3
22136: NEG
22137: PUSH
22138: LD_INT 2
22140: NEG
22141: PUSH
22142: EMPTY
22143: LIST
22144: LIST
22145: PUSH
22146: EMPTY
22147: LIST
22148: LIST
22149: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22150: LD_ADDR_VAR 0 53
22154: PUSH
22155: LD_INT 1
22157: NEG
22158: PUSH
22159: LD_INT 3
22161: NEG
22162: PUSH
22163: EMPTY
22164: LIST
22165: LIST
22166: PUSH
22167: LD_INT 0
22169: PUSH
22170: LD_INT 3
22172: NEG
22173: PUSH
22174: EMPTY
22175: LIST
22176: LIST
22177: PUSH
22178: LD_INT 1
22180: PUSH
22181: LD_INT 2
22183: NEG
22184: PUSH
22185: EMPTY
22186: LIST
22187: LIST
22188: PUSH
22189: EMPTY
22190: LIST
22191: LIST
22192: LIST
22193: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22194: LD_ADDR_VAR 0 54
22198: PUSH
22199: LD_INT 2
22201: PUSH
22202: LD_INT 1
22204: NEG
22205: PUSH
22206: EMPTY
22207: LIST
22208: LIST
22209: PUSH
22210: LD_INT 3
22212: PUSH
22213: LD_INT 0
22215: PUSH
22216: EMPTY
22217: LIST
22218: LIST
22219: PUSH
22220: LD_INT 3
22222: PUSH
22223: LD_INT 1
22225: PUSH
22226: EMPTY
22227: LIST
22228: LIST
22229: PUSH
22230: EMPTY
22231: LIST
22232: LIST
22233: LIST
22234: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22235: LD_ADDR_VAR 0 55
22239: PUSH
22240: LD_INT 3
22242: PUSH
22243: LD_INT 2
22245: PUSH
22246: EMPTY
22247: LIST
22248: LIST
22249: PUSH
22250: LD_INT 3
22252: PUSH
22253: LD_INT 3
22255: PUSH
22256: EMPTY
22257: LIST
22258: LIST
22259: PUSH
22260: LD_INT 2
22262: PUSH
22263: LD_INT 3
22265: PUSH
22266: EMPTY
22267: LIST
22268: LIST
22269: PUSH
22270: EMPTY
22271: LIST
22272: LIST
22273: LIST
22274: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22275: LD_ADDR_VAR 0 56
22279: PUSH
22280: LD_INT 1
22282: PUSH
22283: LD_INT 3
22285: PUSH
22286: EMPTY
22287: LIST
22288: LIST
22289: PUSH
22290: LD_INT 0
22292: PUSH
22293: LD_INT 3
22295: PUSH
22296: EMPTY
22297: LIST
22298: LIST
22299: PUSH
22300: LD_INT 1
22302: NEG
22303: PUSH
22304: LD_INT 2
22306: PUSH
22307: EMPTY
22308: LIST
22309: LIST
22310: PUSH
22311: EMPTY
22312: LIST
22313: LIST
22314: LIST
22315: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22316: LD_ADDR_VAR 0 57
22320: PUSH
22321: LD_INT 2
22323: NEG
22324: PUSH
22325: LD_INT 1
22327: PUSH
22328: EMPTY
22329: LIST
22330: LIST
22331: PUSH
22332: LD_INT 3
22334: NEG
22335: PUSH
22336: LD_INT 0
22338: PUSH
22339: EMPTY
22340: LIST
22341: LIST
22342: PUSH
22343: LD_INT 3
22345: NEG
22346: PUSH
22347: LD_INT 1
22349: NEG
22350: PUSH
22351: EMPTY
22352: LIST
22353: LIST
22354: PUSH
22355: EMPTY
22356: LIST
22357: LIST
22358: LIST
22359: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22360: LD_ADDR_VAR 0 58
22364: PUSH
22365: LD_INT 2
22367: NEG
22368: PUSH
22369: LD_INT 3
22371: NEG
22372: PUSH
22373: EMPTY
22374: LIST
22375: LIST
22376: PUSH
22377: LD_INT 3
22379: NEG
22380: PUSH
22381: LD_INT 2
22383: NEG
22384: PUSH
22385: EMPTY
22386: LIST
22387: LIST
22388: PUSH
22389: LD_INT 3
22391: NEG
22392: PUSH
22393: LD_INT 3
22395: NEG
22396: PUSH
22397: EMPTY
22398: LIST
22399: LIST
22400: PUSH
22401: EMPTY
22402: LIST
22403: LIST
22404: LIST
22405: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22406: LD_ADDR_VAR 0 59
22410: PUSH
22411: LD_INT 1
22413: NEG
22414: PUSH
22415: LD_INT 2
22417: NEG
22418: PUSH
22419: EMPTY
22420: LIST
22421: LIST
22422: PUSH
22423: LD_INT 0
22425: PUSH
22426: LD_INT 2
22428: NEG
22429: PUSH
22430: EMPTY
22431: LIST
22432: LIST
22433: PUSH
22434: LD_INT 1
22436: PUSH
22437: LD_INT 1
22439: NEG
22440: PUSH
22441: EMPTY
22442: LIST
22443: LIST
22444: PUSH
22445: EMPTY
22446: LIST
22447: LIST
22448: LIST
22449: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22450: LD_ADDR_VAR 0 60
22454: PUSH
22455: LD_INT 1
22457: PUSH
22458: LD_INT 1
22460: NEG
22461: PUSH
22462: EMPTY
22463: LIST
22464: LIST
22465: PUSH
22466: LD_INT 2
22468: PUSH
22469: LD_INT 0
22471: PUSH
22472: EMPTY
22473: LIST
22474: LIST
22475: PUSH
22476: LD_INT 2
22478: PUSH
22479: LD_INT 1
22481: PUSH
22482: EMPTY
22483: LIST
22484: LIST
22485: PUSH
22486: EMPTY
22487: LIST
22488: LIST
22489: LIST
22490: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22491: LD_ADDR_VAR 0 61
22495: PUSH
22496: LD_INT 2
22498: PUSH
22499: LD_INT 1
22501: PUSH
22502: EMPTY
22503: LIST
22504: LIST
22505: PUSH
22506: LD_INT 2
22508: PUSH
22509: LD_INT 2
22511: PUSH
22512: EMPTY
22513: LIST
22514: LIST
22515: PUSH
22516: LD_INT 1
22518: PUSH
22519: LD_INT 2
22521: PUSH
22522: EMPTY
22523: LIST
22524: LIST
22525: PUSH
22526: EMPTY
22527: LIST
22528: LIST
22529: LIST
22530: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22531: LD_ADDR_VAR 0 62
22535: PUSH
22536: LD_INT 1
22538: PUSH
22539: LD_INT 2
22541: PUSH
22542: EMPTY
22543: LIST
22544: LIST
22545: PUSH
22546: LD_INT 0
22548: PUSH
22549: LD_INT 2
22551: PUSH
22552: EMPTY
22553: LIST
22554: LIST
22555: PUSH
22556: LD_INT 1
22558: NEG
22559: PUSH
22560: LD_INT 1
22562: PUSH
22563: EMPTY
22564: LIST
22565: LIST
22566: PUSH
22567: EMPTY
22568: LIST
22569: LIST
22570: LIST
22571: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22572: LD_ADDR_VAR 0 63
22576: PUSH
22577: LD_INT 1
22579: NEG
22580: PUSH
22581: LD_INT 1
22583: PUSH
22584: EMPTY
22585: LIST
22586: LIST
22587: PUSH
22588: LD_INT 2
22590: NEG
22591: PUSH
22592: LD_INT 0
22594: PUSH
22595: EMPTY
22596: LIST
22597: LIST
22598: PUSH
22599: LD_INT 2
22601: NEG
22602: PUSH
22603: LD_INT 1
22605: NEG
22606: PUSH
22607: EMPTY
22608: LIST
22609: LIST
22610: PUSH
22611: EMPTY
22612: LIST
22613: LIST
22614: LIST
22615: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22616: LD_ADDR_VAR 0 64
22620: PUSH
22621: LD_INT 1
22623: NEG
22624: PUSH
22625: LD_INT 2
22627: NEG
22628: PUSH
22629: EMPTY
22630: LIST
22631: LIST
22632: PUSH
22633: LD_INT 2
22635: NEG
22636: PUSH
22637: LD_INT 1
22639: NEG
22640: PUSH
22641: EMPTY
22642: LIST
22643: LIST
22644: PUSH
22645: LD_INT 2
22647: NEG
22648: PUSH
22649: LD_INT 2
22651: NEG
22652: PUSH
22653: EMPTY
22654: LIST
22655: LIST
22656: PUSH
22657: EMPTY
22658: LIST
22659: LIST
22660: LIST
22661: ST_TO_ADDR
// end ; 2 :
22662: GO 25928
22664: LD_INT 2
22666: DOUBLE
22667: EQUAL
22668: IFTRUE 22672
22670: GO 25927
22672: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
22673: LD_ADDR_VAR 0 29
22677: PUSH
22678: LD_INT 4
22680: PUSH
22681: LD_INT 0
22683: PUSH
22684: EMPTY
22685: LIST
22686: LIST
22687: PUSH
22688: LD_INT 4
22690: PUSH
22691: LD_INT 1
22693: NEG
22694: PUSH
22695: EMPTY
22696: LIST
22697: LIST
22698: PUSH
22699: LD_INT 5
22701: PUSH
22702: LD_INT 0
22704: PUSH
22705: EMPTY
22706: LIST
22707: LIST
22708: PUSH
22709: LD_INT 5
22711: PUSH
22712: LD_INT 1
22714: PUSH
22715: EMPTY
22716: LIST
22717: LIST
22718: PUSH
22719: LD_INT 4
22721: PUSH
22722: LD_INT 1
22724: PUSH
22725: EMPTY
22726: LIST
22727: LIST
22728: PUSH
22729: LD_INT 3
22731: PUSH
22732: LD_INT 0
22734: PUSH
22735: EMPTY
22736: LIST
22737: LIST
22738: PUSH
22739: LD_INT 3
22741: PUSH
22742: LD_INT 1
22744: NEG
22745: PUSH
22746: EMPTY
22747: LIST
22748: LIST
22749: PUSH
22750: LD_INT 3
22752: PUSH
22753: LD_INT 2
22755: NEG
22756: PUSH
22757: EMPTY
22758: LIST
22759: LIST
22760: PUSH
22761: LD_INT 5
22763: PUSH
22764: LD_INT 2
22766: PUSH
22767: EMPTY
22768: LIST
22769: LIST
22770: PUSH
22771: LD_INT 3
22773: PUSH
22774: LD_INT 3
22776: PUSH
22777: EMPTY
22778: LIST
22779: LIST
22780: PUSH
22781: LD_INT 3
22783: PUSH
22784: LD_INT 2
22786: PUSH
22787: EMPTY
22788: LIST
22789: LIST
22790: PUSH
22791: LD_INT 4
22793: PUSH
22794: LD_INT 3
22796: PUSH
22797: EMPTY
22798: LIST
22799: LIST
22800: PUSH
22801: LD_INT 4
22803: PUSH
22804: LD_INT 4
22806: PUSH
22807: EMPTY
22808: LIST
22809: LIST
22810: PUSH
22811: LD_INT 3
22813: PUSH
22814: LD_INT 4
22816: PUSH
22817: EMPTY
22818: LIST
22819: LIST
22820: PUSH
22821: LD_INT 2
22823: PUSH
22824: LD_INT 3
22826: PUSH
22827: EMPTY
22828: LIST
22829: LIST
22830: PUSH
22831: LD_INT 2
22833: PUSH
22834: LD_INT 2
22836: PUSH
22837: EMPTY
22838: LIST
22839: LIST
22840: PUSH
22841: LD_INT 4
22843: PUSH
22844: LD_INT 2
22846: PUSH
22847: EMPTY
22848: LIST
22849: LIST
22850: PUSH
22851: LD_INT 2
22853: PUSH
22854: LD_INT 4
22856: PUSH
22857: EMPTY
22858: LIST
22859: LIST
22860: PUSH
22861: LD_INT 0
22863: PUSH
22864: LD_INT 4
22866: PUSH
22867: EMPTY
22868: LIST
22869: LIST
22870: PUSH
22871: LD_INT 0
22873: PUSH
22874: LD_INT 3
22876: PUSH
22877: EMPTY
22878: LIST
22879: LIST
22880: PUSH
22881: LD_INT 1
22883: PUSH
22884: LD_INT 4
22886: PUSH
22887: EMPTY
22888: LIST
22889: LIST
22890: PUSH
22891: LD_INT 1
22893: PUSH
22894: LD_INT 5
22896: PUSH
22897: EMPTY
22898: LIST
22899: LIST
22900: PUSH
22901: LD_INT 0
22903: PUSH
22904: LD_INT 5
22906: PUSH
22907: EMPTY
22908: LIST
22909: LIST
22910: PUSH
22911: LD_INT 1
22913: NEG
22914: PUSH
22915: LD_INT 4
22917: PUSH
22918: EMPTY
22919: LIST
22920: LIST
22921: PUSH
22922: LD_INT 1
22924: NEG
22925: PUSH
22926: LD_INT 3
22928: PUSH
22929: EMPTY
22930: LIST
22931: LIST
22932: PUSH
22933: LD_INT 2
22935: PUSH
22936: LD_INT 5
22938: PUSH
22939: EMPTY
22940: LIST
22941: LIST
22942: PUSH
22943: LD_INT 2
22945: NEG
22946: PUSH
22947: LD_INT 3
22949: PUSH
22950: EMPTY
22951: LIST
22952: LIST
22953: PUSH
22954: LD_INT 3
22956: NEG
22957: PUSH
22958: LD_INT 0
22960: PUSH
22961: EMPTY
22962: LIST
22963: LIST
22964: PUSH
22965: LD_INT 3
22967: NEG
22968: PUSH
22969: LD_INT 1
22971: NEG
22972: PUSH
22973: EMPTY
22974: LIST
22975: LIST
22976: PUSH
22977: LD_INT 2
22979: NEG
22980: PUSH
22981: LD_INT 0
22983: PUSH
22984: EMPTY
22985: LIST
22986: LIST
22987: PUSH
22988: LD_INT 2
22990: NEG
22991: PUSH
22992: LD_INT 1
22994: PUSH
22995: EMPTY
22996: LIST
22997: LIST
22998: PUSH
22999: LD_INT 3
23001: NEG
23002: PUSH
23003: LD_INT 1
23005: PUSH
23006: EMPTY
23007: LIST
23008: LIST
23009: PUSH
23010: LD_INT 4
23012: NEG
23013: PUSH
23014: LD_INT 0
23016: PUSH
23017: EMPTY
23018: LIST
23019: LIST
23020: PUSH
23021: LD_INT 4
23023: NEG
23024: PUSH
23025: LD_INT 1
23027: NEG
23028: PUSH
23029: EMPTY
23030: LIST
23031: LIST
23032: PUSH
23033: LD_INT 4
23035: NEG
23036: PUSH
23037: LD_INT 2
23039: NEG
23040: PUSH
23041: EMPTY
23042: LIST
23043: LIST
23044: PUSH
23045: LD_INT 2
23047: NEG
23048: PUSH
23049: LD_INT 2
23051: PUSH
23052: EMPTY
23053: LIST
23054: LIST
23055: PUSH
23056: LD_INT 4
23058: NEG
23059: PUSH
23060: LD_INT 4
23062: NEG
23063: PUSH
23064: EMPTY
23065: LIST
23066: LIST
23067: PUSH
23068: LD_INT 4
23070: NEG
23071: PUSH
23072: LD_INT 5
23074: NEG
23075: PUSH
23076: EMPTY
23077: LIST
23078: LIST
23079: PUSH
23080: LD_INT 3
23082: NEG
23083: PUSH
23084: LD_INT 4
23086: NEG
23087: PUSH
23088: EMPTY
23089: LIST
23090: LIST
23091: PUSH
23092: LD_INT 3
23094: NEG
23095: PUSH
23096: LD_INT 3
23098: NEG
23099: PUSH
23100: EMPTY
23101: LIST
23102: LIST
23103: PUSH
23104: LD_INT 4
23106: NEG
23107: PUSH
23108: LD_INT 3
23110: NEG
23111: PUSH
23112: EMPTY
23113: LIST
23114: LIST
23115: PUSH
23116: LD_INT 5
23118: NEG
23119: PUSH
23120: LD_INT 4
23122: NEG
23123: PUSH
23124: EMPTY
23125: LIST
23126: LIST
23127: PUSH
23128: LD_INT 5
23130: NEG
23131: PUSH
23132: LD_INT 5
23134: NEG
23135: PUSH
23136: EMPTY
23137: LIST
23138: LIST
23139: PUSH
23140: LD_INT 3
23142: NEG
23143: PUSH
23144: LD_INT 5
23146: NEG
23147: PUSH
23148: EMPTY
23149: LIST
23150: LIST
23151: PUSH
23152: LD_INT 5
23154: NEG
23155: PUSH
23156: LD_INT 3
23158: NEG
23159: PUSH
23160: EMPTY
23161: LIST
23162: LIST
23163: PUSH
23164: EMPTY
23165: LIST
23166: LIST
23167: LIST
23168: LIST
23169: LIST
23170: LIST
23171: LIST
23172: LIST
23173: LIST
23174: LIST
23175: LIST
23176: LIST
23177: LIST
23178: LIST
23179: LIST
23180: LIST
23181: LIST
23182: LIST
23183: LIST
23184: LIST
23185: LIST
23186: LIST
23187: LIST
23188: LIST
23189: LIST
23190: LIST
23191: LIST
23192: LIST
23193: LIST
23194: LIST
23195: LIST
23196: LIST
23197: LIST
23198: LIST
23199: LIST
23200: LIST
23201: LIST
23202: LIST
23203: LIST
23204: LIST
23205: LIST
23206: LIST
23207: LIST
23208: LIST
23209: LIST
23210: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23211: LD_ADDR_VAR 0 30
23215: PUSH
23216: LD_INT 4
23218: PUSH
23219: LD_INT 4
23221: PUSH
23222: EMPTY
23223: LIST
23224: LIST
23225: PUSH
23226: LD_INT 4
23228: PUSH
23229: LD_INT 3
23231: PUSH
23232: EMPTY
23233: LIST
23234: LIST
23235: PUSH
23236: LD_INT 5
23238: PUSH
23239: LD_INT 4
23241: PUSH
23242: EMPTY
23243: LIST
23244: LIST
23245: PUSH
23246: LD_INT 5
23248: PUSH
23249: LD_INT 5
23251: PUSH
23252: EMPTY
23253: LIST
23254: LIST
23255: PUSH
23256: LD_INT 4
23258: PUSH
23259: LD_INT 5
23261: PUSH
23262: EMPTY
23263: LIST
23264: LIST
23265: PUSH
23266: LD_INT 3
23268: PUSH
23269: LD_INT 4
23271: PUSH
23272: EMPTY
23273: LIST
23274: LIST
23275: PUSH
23276: LD_INT 3
23278: PUSH
23279: LD_INT 3
23281: PUSH
23282: EMPTY
23283: LIST
23284: LIST
23285: PUSH
23286: LD_INT 5
23288: PUSH
23289: LD_INT 3
23291: PUSH
23292: EMPTY
23293: LIST
23294: LIST
23295: PUSH
23296: LD_INT 3
23298: PUSH
23299: LD_INT 5
23301: PUSH
23302: EMPTY
23303: LIST
23304: LIST
23305: PUSH
23306: LD_INT 0
23308: PUSH
23309: LD_INT 3
23311: PUSH
23312: EMPTY
23313: LIST
23314: LIST
23315: PUSH
23316: LD_INT 0
23318: PUSH
23319: LD_INT 2
23321: PUSH
23322: EMPTY
23323: LIST
23324: LIST
23325: PUSH
23326: LD_INT 1
23328: PUSH
23329: LD_INT 3
23331: PUSH
23332: EMPTY
23333: LIST
23334: LIST
23335: PUSH
23336: LD_INT 1
23338: PUSH
23339: LD_INT 4
23341: PUSH
23342: EMPTY
23343: LIST
23344: LIST
23345: PUSH
23346: LD_INT 0
23348: PUSH
23349: LD_INT 4
23351: PUSH
23352: EMPTY
23353: LIST
23354: LIST
23355: PUSH
23356: LD_INT 1
23358: NEG
23359: PUSH
23360: LD_INT 3
23362: PUSH
23363: EMPTY
23364: LIST
23365: LIST
23366: PUSH
23367: LD_INT 1
23369: NEG
23370: PUSH
23371: LD_INT 2
23373: PUSH
23374: EMPTY
23375: LIST
23376: LIST
23377: PUSH
23378: LD_INT 2
23380: PUSH
23381: LD_INT 4
23383: PUSH
23384: EMPTY
23385: LIST
23386: LIST
23387: PUSH
23388: LD_INT 2
23390: NEG
23391: PUSH
23392: LD_INT 2
23394: PUSH
23395: EMPTY
23396: LIST
23397: LIST
23398: PUSH
23399: LD_INT 4
23401: NEG
23402: PUSH
23403: LD_INT 0
23405: PUSH
23406: EMPTY
23407: LIST
23408: LIST
23409: PUSH
23410: LD_INT 4
23412: NEG
23413: PUSH
23414: LD_INT 1
23416: NEG
23417: PUSH
23418: EMPTY
23419: LIST
23420: LIST
23421: PUSH
23422: LD_INT 3
23424: NEG
23425: PUSH
23426: LD_INT 0
23428: PUSH
23429: EMPTY
23430: LIST
23431: LIST
23432: PUSH
23433: LD_INT 3
23435: NEG
23436: PUSH
23437: LD_INT 1
23439: PUSH
23440: EMPTY
23441: LIST
23442: LIST
23443: PUSH
23444: LD_INT 4
23446: NEG
23447: PUSH
23448: LD_INT 1
23450: PUSH
23451: EMPTY
23452: LIST
23453: LIST
23454: PUSH
23455: LD_INT 5
23457: NEG
23458: PUSH
23459: LD_INT 0
23461: PUSH
23462: EMPTY
23463: LIST
23464: LIST
23465: PUSH
23466: LD_INT 5
23468: NEG
23469: PUSH
23470: LD_INT 1
23472: NEG
23473: PUSH
23474: EMPTY
23475: LIST
23476: LIST
23477: PUSH
23478: LD_INT 5
23480: NEG
23481: PUSH
23482: LD_INT 2
23484: NEG
23485: PUSH
23486: EMPTY
23487: LIST
23488: LIST
23489: PUSH
23490: LD_INT 3
23492: NEG
23493: PUSH
23494: LD_INT 2
23496: PUSH
23497: EMPTY
23498: LIST
23499: LIST
23500: PUSH
23501: LD_INT 3
23503: NEG
23504: PUSH
23505: LD_INT 3
23507: NEG
23508: PUSH
23509: EMPTY
23510: LIST
23511: LIST
23512: PUSH
23513: LD_INT 3
23515: NEG
23516: PUSH
23517: LD_INT 4
23519: NEG
23520: PUSH
23521: EMPTY
23522: LIST
23523: LIST
23524: PUSH
23525: LD_INT 2
23527: NEG
23528: PUSH
23529: LD_INT 3
23531: NEG
23532: PUSH
23533: EMPTY
23534: LIST
23535: LIST
23536: PUSH
23537: LD_INT 2
23539: NEG
23540: PUSH
23541: LD_INT 2
23543: NEG
23544: PUSH
23545: EMPTY
23546: LIST
23547: LIST
23548: PUSH
23549: LD_INT 3
23551: NEG
23552: PUSH
23553: LD_INT 2
23555: NEG
23556: PUSH
23557: EMPTY
23558: LIST
23559: LIST
23560: PUSH
23561: LD_INT 4
23563: NEG
23564: PUSH
23565: LD_INT 3
23567: NEG
23568: PUSH
23569: EMPTY
23570: LIST
23571: LIST
23572: PUSH
23573: LD_INT 4
23575: NEG
23576: PUSH
23577: LD_INT 4
23579: NEG
23580: PUSH
23581: EMPTY
23582: LIST
23583: LIST
23584: PUSH
23585: LD_INT 2
23587: NEG
23588: PUSH
23589: LD_INT 4
23591: NEG
23592: PUSH
23593: EMPTY
23594: LIST
23595: LIST
23596: PUSH
23597: LD_INT 4
23599: NEG
23600: PUSH
23601: LD_INT 2
23603: NEG
23604: PUSH
23605: EMPTY
23606: LIST
23607: LIST
23608: PUSH
23609: LD_INT 0
23611: PUSH
23612: LD_INT 4
23614: NEG
23615: PUSH
23616: EMPTY
23617: LIST
23618: LIST
23619: PUSH
23620: LD_INT 0
23622: PUSH
23623: LD_INT 5
23625: NEG
23626: PUSH
23627: EMPTY
23628: LIST
23629: LIST
23630: PUSH
23631: LD_INT 1
23633: PUSH
23634: LD_INT 4
23636: NEG
23637: PUSH
23638: EMPTY
23639: LIST
23640: LIST
23641: PUSH
23642: LD_INT 1
23644: PUSH
23645: LD_INT 3
23647: NEG
23648: PUSH
23649: EMPTY
23650: LIST
23651: LIST
23652: PUSH
23653: LD_INT 0
23655: PUSH
23656: LD_INT 3
23658: NEG
23659: PUSH
23660: EMPTY
23661: LIST
23662: LIST
23663: PUSH
23664: LD_INT 1
23666: NEG
23667: PUSH
23668: LD_INT 4
23670: NEG
23671: PUSH
23672: EMPTY
23673: LIST
23674: LIST
23675: PUSH
23676: LD_INT 1
23678: NEG
23679: PUSH
23680: LD_INT 5
23682: NEG
23683: PUSH
23684: EMPTY
23685: LIST
23686: LIST
23687: PUSH
23688: LD_INT 2
23690: PUSH
23691: LD_INT 3
23693: NEG
23694: PUSH
23695: EMPTY
23696: LIST
23697: LIST
23698: PUSH
23699: LD_INT 2
23701: NEG
23702: PUSH
23703: LD_INT 5
23705: NEG
23706: PUSH
23707: EMPTY
23708: LIST
23709: LIST
23710: PUSH
23711: EMPTY
23712: LIST
23713: LIST
23714: LIST
23715: LIST
23716: LIST
23717: LIST
23718: LIST
23719: LIST
23720: LIST
23721: LIST
23722: LIST
23723: LIST
23724: LIST
23725: LIST
23726: LIST
23727: LIST
23728: LIST
23729: LIST
23730: LIST
23731: LIST
23732: LIST
23733: LIST
23734: LIST
23735: LIST
23736: LIST
23737: LIST
23738: LIST
23739: LIST
23740: LIST
23741: LIST
23742: LIST
23743: LIST
23744: LIST
23745: LIST
23746: LIST
23747: LIST
23748: LIST
23749: LIST
23750: LIST
23751: LIST
23752: LIST
23753: LIST
23754: LIST
23755: LIST
23756: LIST
23757: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
23758: LD_ADDR_VAR 0 31
23762: PUSH
23763: LD_INT 0
23765: PUSH
23766: LD_INT 4
23768: PUSH
23769: EMPTY
23770: LIST
23771: LIST
23772: PUSH
23773: LD_INT 0
23775: PUSH
23776: LD_INT 3
23778: PUSH
23779: EMPTY
23780: LIST
23781: LIST
23782: PUSH
23783: LD_INT 1
23785: PUSH
23786: LD_INT 4
23788: PUSH
23789: EMPTY
23790: LIST
23791: LIST
23792: PUSH
23793: LD_INT 1
23795: PUSH
23796: LD_INT 5
23798: PUSH
23799: EMPTY
23800: LIST
23801: LIST
23802: PUSH
23803: LD_INT 0
23805: PUSH
23806: LD_INT 5
23808: PUSH
23809: EMPTY
23810: LIST
23811: LIST
23812: PUSH
23813: LD_INT 1
23815: NEG
23816: PUSH
23817: LD_INT 4
23819: PUSH
23820: EMPTY
23821: LIST
23822: LIST
23823: PUSH
23824: LD_INT 1
23826: NEG
23827: PUSH
23828: LD_INT 3
23830: PUSH
23831: EMPTY
23832: LIST
23833: LIST
23834: PUSH
23835: LD_INT 2
23837: PUSH
23838: LD_INT 5
23840: PUSH
23841: EMPTY
23842: LIST
23843: LIST
23844: PUSH
23845: LD_INT 2
23847: NEG
23848: PUSH
23849: LD_INT 3
23851: PUSH
23852: EMPTY
23853: LIST
23854: LIST
23855: PUSH
23856: LD_INT 3
23858: NEG
23859: PUSH
23860: LD_INT 0
23862: PUSH
23863: EMPTY
23864: LIST
23865: LIST
23866: PUSH
23867: LD_INT 3
23869: NEG
23870: PUSH
23871: LD_INT 1
23873: NEG
23874: PUSH
23875: EMPTY
23876: LIST
23877: LIST
23878: PUSH
23879: LD_INT 2
23881: NEG
23882: PUSH
23883: LD_INT 0
23885: PUSH
23886: EMPTY
23887: LIST
23888: LIST
23889: PUSH
23890: LD_INT 2
23892: NEG
23893: PUSH
23894: LD_INT 1
23896: PUSH
23897: EMPTY
23898: LIST
23899: LIST
23900: PUSH
23901: LD_INT 3
23903: NEG
23904: PUSH
23905: LD_INT 1
23907: PUSH
23908: EMPTY
23909: LIST
23910: LIST
23911: PUSH
23912: LD_INT 4
23914: NEG
23915: PUSH
23916: LD_INT 0
23918: PUSH
23919: EMPTY
23920: LIST
23921: LIST
23922: PUSH
23923: LD_INT 4
23925: NEG
23926: PUSH
23927: LD_INT 1
23929: NEG
23930: PUSH
23931: EMPTY
23932: LIST
23933: LIST
23934: PUSH
23935: LD_INT 4
23937: NEG
23938: PUSH
23939: LD_INT 2
23941: NEG
23942: PUSH
23943: EMPTY
23944: LIST
23945: LIST
23946: PUSH
23947: LD_INT 2
23949: NEG
23950: PUSH
23951: LD_INT 2
23953: PUSH
23954: EMPTY
23955: LIST
23956: LIST
23957: PUSH
23958: LD_INT 4
23960: NEG
23961: PUSH
23962: LD_INT 4
23964: NEG
23965: PUSH
23966: EMPTY
23967: LIST
23968: LIST
23969: PUSH
23970: LD_INT 4
23972: NEG
23973: PUSH
23974: LD_INT 5
23976: NEG
23977: PUSH
23978: EMPTY
23979: LIST
23980: LIST
23981: PUSH
23982: LD_INT 3
23984: NEG
23985: PUSH
23986: LD_INT 4
23988: NEG
23989: PUSH
23990: EMPTY
23991: LIST
23992: LIST
23993: PUSH
23994: LD_INT 3
23996: NEG
23997: PUSH
23998: LD_INT 3
24000: NEG
24001: PUSH
24002: EMPTY
24003: LIST
24004: LIST
24005: PUSH
24006: LD_INT 4
24008: NEG
24009: PUSH
24010: LD_INT 3
24012: NEG
24013: PUSH
24014: EMPTY
24015: LIST
24016: LIST
24017: PUSH
24018: LD_INT 5
24020: NEG
24021: PUSH
24022: LD_INT 4
24024: NEG
24025: PUSH
24026: EMPTY
24027: LIST
24028: LIST
24029: PUSH
24030: LD_INT 5
24032: NEG
24033: PUSH
24034: LD_INT 5
24036: NEG
24037: PUSH
24038: EMPTY
24039: LIST
24040: LIST
24041: PUSH
24042: LD_INT 3
24044: NEG
24045: PUSH
24046: LD_INT 5
24048: NEG
24049: PUSH
24050: EMPTY
24051: LIST
24052: LIST
24053: PUSH
24054: LD_INT 5
24056: NEG
24057: PUSH
24058: LD_INT 3
24060: NEG
24061: PUSH
24062: EMPTY
24063: LIST
24064: LIST
24065: PUSH
24066: LD_INT 0
24068: PUSH
24069: LD_INT 3
24071: NEG
24072: PUSH
24073: EMPTY
24074: LIST
24075: LIST
24076: PUSH
24077: LD_INT 0
24079: PUSH
24080: LD_INT 4
24082: NEG
24083: PUSH
24084: EMPTY
24085: LIST
24086: LIST
24087: PUSH
24088: LD_INT 1
24090: PUSH
24091: LD_INT 3
24093: NEG
24094: PUSH
24095: EMPTY
24096: LIST
24097: LIST
24098: PUSH
24099: LD_INT 1
24101: PUSH
24102: LD_INT 2
24104: NEG
24105: PUSH
24106: EMPTY
24107: LIST
24108: LIST
24109: PUSH
24110: LD_INT 0
24112: PUSH
24113: LD_INT 2
24115: NEG
24116: PUSH
24117: EMPTY
24118: LIST
24119: LIST
24120: PUSH
24121: LD_INT 1
24123: NEG
24124: PUSH
24125: LD_INT 3
24127: NEG
24128: PUSH
24129: EMPTY
24130: LIST
24131: LIST
24132: PUSH
24133: LD_INT 1
24135: NEG
24136: PUSH
24137: LD_INT 4
24139: NEG
24140: PUSH
24141: EMPTY
24142: LIST
24143: LIST
24144: PUSH
24145: LD_INT 2
24147: PUSH
24148: LD_INT 2
24150: NEG
24151: PUSH
24152: EMPTY
24153: LIST
24154: LIST
24155: PUSH
24156: LD_INT 2
24158: NEG
24159: PUSH
24160: LD_INT 4
24162: NEG
24163: PUSH
24164: EMPTY
24165: LIST
24166: LIST
24167: PUSH
24168: LD_INT 4
24170: PUSH
24171: LD_INT 0
24173: PUSH
24174: EMPTY
24175: LIST
24176: LIST
24177: PUSH
24178: LD_INT 4
24180: PUSH
24181: LD_INT 1
24183: NEG
24184: PUSH
24185: EMPTY
24186: LIST
24187: LIST
24188: PUSH
24189: LD_INT 5
24191: PUSH
24192: LD_INT 0
24194: PUSH
24195: EMPTY
24196: LIST
24197: LIST
24198: PUSH
24199: LD_INT 5
24201: PUSH
24202: LD_INT 1
24204: PUSH
24205: EMPTY
24206: LIST
24207: LIST
24208: PUSH
24209: LD_INT 4
24211: PUSH
24212: LD_INT 1
24214: PUSH
24215: EMPTY
24216: LIST
24217: LIST
24218: PUSH
24219: LD_INT 3
24221: PUSH
24222: LD_INT 0
24224: PUSH
24225: EMPTY
24226: LIST
24227: LIST
24228: PUSH
24229: LD_INT 3
24231: PUSH
24232: LD_INT 1
24234: NEG
24235: PUSH
24236: EMPTY
24237: LIST
24238: LIST
24239: PUSH
24240: LD_INT 3
24242: PUSH
24243: LD_INT 2
24245: NEG
24246: PUSH
24247: EMPTY
24248: LIST
24249: LIST
24250: PUSH
24251: LD_INT 5
24253: PUSH
24254: LD_INT 2
24256: PUSH
24257: EMPTY
24258: LIST
24259: LIST
24260: PUSH
24261: EMPTY
24262: LIST
24263: LIST
24264: LIST
24265: LIST
24266: LIST
24267: LIST
24268: LIST
24269: LIST
24270: LIST
24271: LIST
24272: LIST
24273: LIST
24274: LIST
24275: LIST
24276: LIST
24277: LIST
24278: LIST
24279: LIST
24280: LIST
24281: LIST
24282: LIST
24283: LIST
24284: LIST
24285: LIST
24286: LIST
24287: LIST
24288: LIST
24289: LIST
24290: LIST
24291: LIST
24292: LIST
24293: LIST
24294: LIST
24295: LIST
24296: LIST
24297: LIST
24298: LIST
24299: LIST
24300: LIST
24301: LIST
24302: LIST
24303: LIST
24304: LIST
24305: LIST
24306: LIST
24307: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24308: LD_ADDR_VAR 0 32
24312: PUSH
24313: LD_INT 4
24315: NEG
24316: PUSH
24317: LD_INT 0
24319: PUSH
24320: EMPTY
24321: LIST
24322: LIST
24323: PUSH
24324: LD_INT 4
24326: NEG
24327: PUSH
24328: LD_INT 1
24330: NEG
24331: PUSH
24332: EMPTY
24333: LIST
24334: LIST
24335: PUSH
24336: LD_INT 3
24338: NEG
24339: PUSH
24340: LD_INT 0
24342: PUSH
24343: EMPTY
24344: LIST
24345: LIST
24346: PUSH
24347: LD_INT 3
24349: NEG
24350: PUSH
24351: LD_INT 1
24353: PUSH
24354: EMPTY
24355: LIST
24356: LIST
24357: PUSH
24358: LD_INT 4
24360: NEG
24361: PUSH
24362: LD_INT 1
24364: PUSH
24365: EMPTY
24366: LIST
24367: LIST
24368: PUSH
24369: LD_INT 5
24371: NEG
24372: PUSH
24373: LD_INT 0
24375: PUSH
24376: EMPTY
24377: LIST
24378: LIST
24379: PUSH
24380: LD_INT 5
24382: NEG
24383: PUSH
24384: LD_INT 1
24386: NEG
24387: PUSH
24388: EMPTY
24389: LIST
24390: LIST
24391: PUSH
24392: LD_INT 5
24394: NEG
24395: PUSH
24396: LD_INT 2
24398: NEG
24399: PUSH
24400: EMPTY
24401: LIST
24402: LIST
24403: PUSH
24404: LD_INT 3
24406: NEG
24407: PUSH
24408: LD_INT 2
24410: PUSH
24411: EMPTY
24412: LIST
24413: LIST
24414: PUSH
24415: LD_INT 3
24417: NEG
24418: PUSH
24419: LD_INT 3
24421: NEG
24422: PUSH
24423: EMPTY
24424: LIST
24425: LIST
24426: PUSH
24427: LD_INT 3
24429: NEG
24430: PUSH
24431: LD_INT 4
24433: NEG
24434: PUSH
24435: EMPTY
24436: LIST
24437: LIST
24438: PUSH
24439: LD_INT 2
24441: NEG
24442: PUSH
24443: LD_INT 3
24445: NEG
24446: PUSH
24447: EMPTY
24448: LIST
24449: LIST
24450: PUSH
24451: LD_INT 2
24453: NEG
24454: PUSH
24455: LD_INT 2
24457: NEG
24458: PUSH
24459: EMPTY
24460: LIST
24461: LIST
24462: PUSH
24463: LD_INT 3
24465: NEG
24466: PUSH
24467: LD_INT 2
24469: NEG
24470: PUSH
24471: EMPTY
24472: LIST
24473: LIST
24474: PUSH
24475: LD_INT 4
24477: NEG
24478: PUSH
24479: LD_INT 3
24481: NEG
24482: PUSH
24483: EMPTY
24484: LIST
24485: LIST
24486: PUSH
24487: LD_INT 4
24489: NEG
24490: PUSH
24491: LD_INT 4
24493: NEG
24494: PUSH
24495: EMPTY
24496: LIST
24497: LIST
24498: PUSH
24499: LD_INT 2
24501: NEG
24502: PUSH
24503: LD_INT 4
24505: NEG
24506: PUSH
24507: EMPTY
24508: LIST
24509: LIST
24510: PUSH
24511: LD_INT 4
24513: NEG
24514: PUSH
24515: LD_INT 2
24517: NEG
24518: PUSH
24519: EMPTY
24520: LIST
24521: LIST
24522: PUSH
24523: LD_INT 0
24525: PUSH
24526: LD_INT 4
24528: NEG
24529: PUSH
24530: EMPTY
24531: LIST
24532: LIST
24533: PUSH
24534: LD_INT 0
24536: PUSH
24537: LD_INT 5
24539: NEG
24540: PUSH
24541: EMPTY
24542: LIST
24543: LIST
24544: PUSH
24545: LD_INT 1
24547: PUSH
24548: LD_INT 4
24550: NEG
24551: PUSH
24552: EMPTY
24553: LIST
24554: LIST
24555: PUSH
24556: LD_INT 1
24558: PUSH
24559: LD_INT 3
24561: NEG
24562: PUSH
24563: EMPTY
24564: LIST
24565: LIST
24566: PUSH
24567: LD_INT 0
24569: PUSH
24570: LD_INT 3
24572: NEG
24573: PUSH
24574: EMPTY
24575: LIST
24576: LIST
24577: PUSH
24578: LD_INT 1
24580: NEG
24581: PUSH
24582: LD_INT 4
24584: NEG
24585: PUSH
24586: EMPTY
24587: LIST
24588: LIST
24589: PUSH
24590: LD_INT 1
24592: NEG
24593: PUSH
24594: LD_INT 5
24596: NEG
24597: PUSH
24598: EMPTY
24599: LIST
24600: LIST
24601: PUSH
24602: LD_INT 2
24604: PUSH
24605: LD_INT 3
24607: NEG
24608: PUSH
24609: EMPTY
24610: LIST
24611: LIST
24612: PUSH
24613: LD_INT 2
24615: NEG
24616: PUSH
24617: LD_INT 5
24619: NEG
24620: PUSH
24621: EMPTY
24622: LIST
24623: LIST
24624: PUSH
24625: LD_INT 3
24627: PUSH
24628: LD_INT 0
24630: PUSH
24631: EMPTY
24632: LIST
24633: LIST
24634: PUSH
24635: LD_INT 3
24637: PUSH
24638: LD_INT 1
24640: NEG
24641: PUSH
24642: EMPTY
24643: LIST
24644: LIST
24645: PUSH
24646: LD_INT 4
24648: PUSH
24649: LD_INT 0
24651: PUSH
24652: EMPTY
24653: LIST
24654: LIST
24655: PUSH
24656: LD_INT 4
24658: PUSH
24659: LD_INT 1
24661: PUSH
24662: EMPTY
24663: LIST
24664: LIST
24665: PUSH
24666: LD_INT 3
24668: PUSH
24669: LD_INT 1
24671: PUSH
24672: EMPTY
24673: LIST
24674: LIST
24675: PUSH
24676: LD_INT 2
24678: PUSH
24679: LD_INT 0
24681: PUSH
24682: EMPTY
24683: LIST
24684: LIST
24685: PUSH
24686: LD_INT 2
24688: PUSH
24689: LD_INT 1
24691: NEG
24692: PUSH
24693: EMPTY
24694: LIST
24695: LIST
24696: PUSH
24697: LD_INT 2
24699: PUSH
24700: LD_INT 2
24702: NEG
24703: PUSH
24704: EMPTY
24705: LIST
24706: LIST
24707: PUSH
24708: LD_INT 4
24710: PUSH
24711: LD_INT 2
24713: PUSH
24714: EMPTY
24715: LIST
24716: LIST
24717: PUSH
24718: LD_INT 4
24720: PUSH
24721: LD_INT 4
24723: PUSH
24724: EMPTY
24725: LIST
24726: LIST
24727: PUSH
24728: LD_INT 4
24730: PUSH
24731: LD_INT 3
24733: PUSH
24734: EMPTY
24735: LIST
24736: LIST
24737: PUSH
24738: LD_INT 5
24740: PUSH
24741: LD_INT 4
24743: PUSH
24744: EMPTY
24745: LIST
24746: LIST
24747: PUSH
24748: LD_INT 5
24750: PUSH
24751: LD_INT 5
24753: PUSH
24754: EMPTY
24755: LIST
24756: LIST
24757: PUSH
24758: LD_INT 4
24760: PUSH
24761: LD_INT 5
24763: PUSH
24764: EMPTY
24765: LIST
24766: LIST
24767: PUSH
24768: LD_INT 3
24770: PUSH
24771: LD_INT 4
24773: PUSH
24774: EMPTY
24775: LIST
24776: LIST
24777: PUSH
24778: LD_INT 3
24780: PUSH
24781: LD_INT 3
24783: PUSH
24784: EMPTY
24785: LIST
24786: LIST
24787: PUSH
24788: LD_INT 5
24790: PUSH
24791: LD_INT 3
24793: PUSH
24794: EMPTY
24795: LIST
24796: LIST
24797: PUSH
24798: LD_INT 3
24800: PUSH
24801: LD_INT 5
24803: PUSH
24804: EMPTY
24805: LIST
24806: LIST
24807: PUSH
24808: EMPTY
24809: LIST
24810: LIST
24811: LIST
24812: LIST
24813: LIST
24814: LIST
24815: LIST
24816: LIST
24817: LIST
24818: LIST
24819: LIST
24820: LIST
24821: LIST
24822: LIST
24823: LIST
24824: LIST
24825: LIST
24826: LIST
24827: LIST
24828: LIST
24829: LIST
24830: LIST
24831: LIST
24832: LIST
24833: LIST
24834: LIST
24835: LIST
24836: LIST
24837: LIST
24838: LIST
24839: LIST
24840: LIST
24841: LIST
24842: LIST
24843: LIST
24844: LIST
24845: LIST
24846: LIST
24847: LIST
24848: LIST
24849: LIST
24850: LIST
24851: LIST
24852: LIST
24853: LIST
24854: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
24855: LD_ADDR_VAR 0 33
24859: PUSH
24860: LD_INT 4
24862: NEG
24863: PUSH
24864: LD_INT 4
24866: NEG
24867: PUSH
24868: EMPTY
24869: LIST
24870: LIST
24871: PUSH
24872: LD_INT 4
24874: NEG
24875: PUSH
24876: LD_INT 5
24878: NEG
24879: PUSH
24880: EMPTY
24881: LIST
24882: LIST
24883: PUSH
24884: LD_INT 3
24886: NEG
24887: PUSH
24888: LD_INT 4
24890: NEG
24891: PUSH
24892: EMPTY
24893: LIST
24894: LIST
24895: PUSH
24896: LD_INT 3
24898: NEG
24899: PUSH
24900: LD_INT 3
24902: NEG
24903: PUSH
24904: EMPTY
24905: LIST
24906: LIST
24907: PUSH
24908: LD_INT 4
24910: NEG
24911: PUSH
24912: LD_INT 3
24914: NEG
24915: PUSH
24916: EMPTY
24917: LIST
24918: LIST
24919: PUSH
24920: LD_INT 5
24922: NEG
24923: PUSH
24924: LD_INT 4
24926: NEG
24927: PUSH
24928: EMPTY
24929: LIST
24930: LIST
24931: PUSH
24932: LD_INT 5
24934: NEG
24935: PUSH
24936: LD_INT 5
24938: NEG
24939: PUSH
24940: EMPTY
24941: LIST
24942: LIST
24943: PUSH
24944: LD_INT 3
24946: NEG
24947: PUSH
24948: LD_INT 5
24950: NEG
24951: PUSH
24952: EMPTY
24953: LIST
24954: LIST
24955: PUSH
24956: LD_INT 5
24958: NEG
24959: PUSH
24960: LD_INT 3
24962: NEG
24963: PUSH
24964: EMPTY
24965: LIST
24966: LIST
24967: PUSH
24968: LD_INT 0
24970: PUSH
24971: LD_INT 3
24973: NEG
24974: PUSH
24975: EMPTY
24976: LIST
24977: LIST
24978: PUSH
24979: LD_INT 0
24981: PUSH
24982: LD_INT 4
24984: NEG
24985: PUSH
24986: EMPTY
24987: LIST
24988: LIST
24989: PUSH
24990: LD_INT 1
24992: PUSH
24993: LD_INT 3
24995: NEG
24996: PUSH
24997: EMPTY
24998: LIST
24999: LIST
25000: PUSH
25001: LD_INT 1
25003: PUSH
25004: LD_INT 2
25006: NEG
25007: PUSH
25008: EMPTY
25009: LIST
25010: LIST
25011: PUSH
25012: LD_INT 0
25014: PUSH
25015: LD_INT 2
25017: NEG
25018: PUSH
25019: EMPTY
25020: LIST
25021: LIST
25022: PUSH
25023: LD_INT 1
25025: NEG
25026: PUSH
25027: LD_INT 3
25029: NEG
25030: PUSH
25031: EMPTY
25032: LIST
25033: LIST
25034: PUSH
25035: LD_INT 1
25037: NEG
25038: PUSH
25039: LD_INT 4
25041: NEG
25042: PUSH
25043: EMPTY
25044: LIST
25045: LIST
25046: PUSH
25047: LD_INT 2
25049: PUSH
25050: LD_INT 2
25052: NEG
25053: PUSH
25054: EMPTY
25055: LIST
25056: LIST
25057: PUSH
25058: LD_INT 2
25060: NEG
25061: PUSH
25062: LD_INT 4
25064: NEG
25065: PUSH
25066: EMPTY
25067: LIST
25068: LIST
25069: PUSH
25070: LD_INT 4
25072: PUSH
25073: LD_INT 0
25075: PUSH
25076: EMPTY
25077: LIST
25078: LIST
25079: PUSH
25080: LD_INT 4
25082: PUSH
25083: LD_INT 1
25085: NEG
25086: PUSH
25087: EMPTY
25088: LIST
25089: LIST
25090: PUSH
25091: LD_INT 5
25093: PUSH
25094: LD_INT 0
25096: PUSH
25097: EMPTY
25098: LIST
25099: LIST
25100: PUSH
25101: LD_INT 5
25103: PUSH
25104: LD_INT 1
25106: PUSH
25107: EMPTY
25108: LIST
25109: LIST
25110: PUSH
25111: LD_INT 4
25113: PUSH
25114: LD_INT 1
25116: PUSH
25117: EMPTY
25118: LIST
25119: LIST
25120: PUSH
25121: LD_INT 3
25123: PUSH
25124: LD_INT 0
25126: PUSH
25127: EMPTY
25128: LIST
25129: LIST
25130: PUSH
25131: LD_INT 3
25133: PUSH
25134: LD_INT 1
25136: NEG
25137: PUSH
25138: EMPTY
25139: LIST
25140: LIST
25141: PUSH
25142: LD_INT 3
25144: PUSH
25145: LD_INT 2
25147: NEG
25148: PUSH
25149: EMPTY
25150: LIST
25151: LIST
25152: PUSH
25153: LD_INT 5
25155: PUSH
25156: LD_INT 2
25158: PUSH
25159: EMPTY
25160: LIST
25161: LIST
25162: PUSH
25163: LD_INT 3
25165: PUSH
25166: LD_INT 3
25168: PUSH
25169: EMPTY
25170: LIST
25171: LIST
25172: PUSH
25173: LD_INT 3
25175: PUSH
25176: LD_INT 2
25178: PUSH
25179: EMPTY
25180: LIST
25181: LIST
25182: PUSH
25183: LD_INT 4
25185: PUSH
25186: LD_INT 3
25188: PUSH
25189: EMPTY
25190: LIST
25191: LIST
25192: PUSH
25193: LD_INT 4
25195: PUSH
25196: LD_INT 4
25198: PUSH
25199: EMPTY
25200: LIST
25201: LIST
25202: PUSH
25203: LD_INT 3
25205: PUSH
25206: LD_INT 4
25208: PUSH
25209: EMPTY
25210: LIST
25211: LIST
25212: PUSH
25213: LD_INT 2
25215: PUSH
25216: LD_INT 3
25218: PUSH
25219: EMPTY
25220: LIST
25221: LIST
25222: PUSH
25223: LD_INT 2
25225: PUSH
25226: LD_INT 2
25228: PUSH
25229: EMPTY
25230: LIST
25231: LIST
25232: PUSH
25233: LD_INT 4
25235: PUSH
25236: LD_INT 2
25238: PUSH
25239: EMPTY
25240: LIST
25241: LIST
25242: PUSH
25243: LD_INT 2
25245: PUSH
25246: LD_INT 4
25248: PUSH
25249: EMPTY
25250: LIST
25251: LIST
25252: PUSH
25253: LD_INT 0
25255: PUSH
25256: LD_INT 4
25258: PUSH
25259: EMPTY
25260: LIST
25261: LIST
25262: PUSH
25263: LD_INT 0
25265: PUSH
25266: LD_INT 3
25268: PUSH
25269: EMPTY
25270: LIST
25271: LIST
25272: PUSH
25273: LD_INT 1
25275: PUSH
25276: LD_INT 4
25278: PUSH
25279: EMPTY
25280: LIST
25281: LIST
25282: PUSH
25283: LD_INT 1
25285: PUSH
25286: LD_INT 5
25288: PUSH
25289: EMPTY
25290: LIST
25291: LIST
25292: PUSH
25293: LD_INT 0
25295: PUSH
25296: LD_INT 5
25298: PUSH
25299: EMPTY
25300: LIST
25301: LIST
25302: PUSH
25303: LD_INT 1
25305: NEG
25306: PUSH
25307: LD_INT 4
25309: PUSH
25310: EMPTY
25311: LIST
25312: LIST
25313: PUSH
25314: LD_INT 1
25316: NEG
25317: PUSH
25318: LD_INT 3
25320: PUSH
25321: EMPTY
25322: LIST
25323: LIST
25324: PUSH
25325: LD_INT 2
25327: PUSH
25328: LD_INT 5
25330: PUSH
25331: EMPTY
25332: LIST
25333: LIST
25334: PUSH
25335: LD_INT 2
25337: NEG
25338: PUSH
25339: LD_INT 3
25341: PUSH
25342: EMPTY
25343: LIST
25344: LIST
25345: PUSH
25346: EMPTY
25347: LIST
25348: LIST
25349: LIST
25350: LIST
25351: LIST
25352: LIST
25353: LIST
25354: LIST
25355: LIST
25356: LIST
25357: LIST
25358: LIST
25359: LIST
25360: LIST
25361: LIST
25362: LIST
25363: LIST
25364: LIST
25365: LIST
25366: LIST
25367: LIST
25368: LIST
25369: LIST
25370: LIST
25371: LIST
25372: LIST
25373: LIST
25374: LIST
25375: LIST
25376: LIST
25377: LIST
25378: LIST
25379: LIST
25380: LIST
25381: LIST
25382: LIST
25383: LIST
25384: LIST
25385: LIST
25386: LIST
25387: LIST
25388: LIST
25389: LIST
25390: LIST
25391: LIST
25392: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25393: LD_ADDR_VAR 0 34
25397: PUSH
25398: LD_INT 0
25400: PUSH
25401: LD_INT 4
25403: NEG
25404: PUSH
25405: EMPTY
25406: LIST
25407: LIST
25408: PUSH
25409: LD_INT 0
25411: PUSH
25412: LD_INT 5
25414: NEG
25415: PUSH
25416: EMPTY
25417: LIST
25418: LIST
25419: PUSH
25420: LD_INT 1
25422: PUSH
25423: LD_INT 4
25425: NEG
25426: PUSH
25427: EMPTY
25428: LIST
25429: LIST
25430: PUSH
25431: LD_INT 1
25433: PUSH
25434: LD_INT 3
25436: NEG
25437: PUSH
25438: EMPTY
25439: LIST
25440: LIST
25441: PUSH
25442: LD_INT 0
25444: PUSH
25445: LD_INT 3
25447: NEG
25448: PUSH
25449: EMPTY
25450: LIST
25451: LIST
25452: PUSH
25453: LD_INT 1
25455: NEG
25456: PUSH
25457: LD_INT 4
25459: NEG
25460: PUSH
25461: EMPTY
25462: LIST
25463: LIST
25464: PUSH
25465: LD_INT 1
25467: NEG
25468: PUSH
25469: LD_INT 5
25471: NEG
25472: PUSH
25473: EMPTY
25474: LIST
25475: LIST
25476: PUSH
25477: LD_INT 2
25479: PUSH
25480: LD_INT 3
25482: NEG
25483: PUSH
25484: EMPTY
25485: LIST
25486: LIST
25487: PUSH
25488: LD_INT 2
25490: NEG
25491: PUSH
25492: LD_INT 5
25494: NEG
25495: PUSH
25496: EMPTY
25497: LIST
25498: LIST
25499: PUSH
25500: LD_INT 3
25502: PUSH
25503: LD_INT 0
25505: PUSH
25506: EMPTY
25507: LIST
25508: LIST
25509: PUSH
25510: LD_INT 3
25512: PUSH
25513: LD_INT 1
25515: NEG
25516: PUSH
25517: EMPTY
25518: LIST
25519: LIST
25520: PUSH
25521: LD_INT 4
25523: PUSH
25524: LD_INT 0
25526: PUSH
25527: EMPTY
25528: LIST
25529: LIST
25530: PUSH
25531: LD_INT 4
25533: PUSH
25534: LD_INT 1
25536: PUSH
25537: EMPTY
25538: LIST
25539: LIST
25540: PUSH
25541: LD_INT 3
25543: PUSH
25544: LD_INT 1
25546: PUSH
25547: EMPTY
25548: LIST
25549: LIST
25550: PUSH
25551: LD_INT 2
25553: PUSH
25554: LD_INT 0
25556: PUSH
25557: EMPTY
25558: LIST
25559: LIST
25560: PUSH
25561: LD_INT 2
25563: PUSH
25564: LD_INT 1
25566: NEG
25567: PUSH
25568: EMPTY
25569: LIST
25570: LIST
25571: PUSH
25572: LD_INT 2
25574: PUSH
25575: LD_INT 2
25577: NEG
25578: PUSH
25579: EMPTY
25580: LIST
25581: LIST
25582: PUSH
25583: LD_INT 4
25585: PUSH
25586: LD_INT 2
25588: PUSH
25589: EMPTY
25590: LIST
25591: LIST
25592: PUSH
25593: LD_INT 4
25595: PUSH
25596: LD_INT 4
25598: PUSH
25599: EMPTY
25600: LIST
25601: LIST
25602: PUSH
25603: LD_INT 4
25605: PUSH
25606: LD_INT 3
25608: PUSH
25609: EMPTY
25610: LIST
25611: LIST
25612: PUSH
25613: LD_INT 5
25615: PUSH
25616: LD_INT 4
25618: PUSH
25619: EMPTY
25620: LIST
25621: LIST
25622: PUSH
25623: LD_INT 5
25625: PUSH
25626: LD_INT 5
25628: PUSH
25629: EMPTY
25630: LIST
25631: LIST
25632: PUSH
25633: LD_INT 4
25635: PUSH
25636: LD_INT 5
25638: PUSH
25639: EMPTY
25640: LIST
25641: LIST
25642: PUSH
25643: LD_INT 3
25645: PUSH
25646: LD_INT 4
25648: PUSH
25649: EMPTY
25650: LIST
25651: LIST
25652: PUSH
25653: LD_INT 3
25655: PUSH
25656: LD_INT 3
25658: PUSH
25659: EMPTY
25660: LIST
25661: LIST
25662: PUSH
25663: LD_INT 5
25665: PUSH
25666: LD_INT 3
25668: PUSH
25669: EMPTY
25670: LIST
25671: LIST
25672: PUSH
25673: LD_INT 3
25675: PUSH
25676: LD_INT 5
25678: PUSH
25679: EMPTY
25680: LIST
25681: LIST
25682: PUSH
25683: LD_INT 0
25685: PUSH
25686: LD_INT 3
25688: PUSH
25689: EMPTY
25690: LIST
25691: LIST
25692: PUSH
25693: LD_INT 0
25695: PUSH
25696: LD_INT 2
25698: PUSH
25699: EMPTY
25700: LIST
25701: LIST
25702: PUSH
25703: LD_INT 1
25705: PUSH
25706: LD_INT 3
25708: PUSH
25709: EMPTY
25710: LIST
25711: LIST
25712: PUSH
25713: LD_INT 1
25715: PUSH
25716: LD_INT 4
25718: PUSH
25719: EMPTY
25720: LIST
25721: LIST
25722: PUSH
25723: LD_INT 0
25725: PUSH
25726: LD_INT 4
25728: PUSH
25729: EMPTY
25730: LIST
25731: LIST
25732: PUSH
25733: LD_INT 1
25735: NEG
25736: PUSH
25737: LD_INT 3
25739: PUSH
25740: EMPTY
25741: LIST
25742: LIST
25743: PUSH
25744: LD_INT 1
25746: NEG
25747: PUSH
25748: LD_INT 2
25750: PUSH
25751: EMPTY
25752: LIST
25753: LIST
25754: PUSH
25755: LD_INT 2
25757: PUSH
25758: LD_INT 4
25760: PUSH
25761: EMPTY
25762: LIST
25763: LIST
25764: PUSH
25765: LD_INT 2
25767: NEG
25768: PUSH
25769: LD_INT 2
25771: PUSH
25772: EMPTY
25773: LIST
25774: LIST
25775: PUSH
25776: LD_INT 4
25778: NEG
25779: PUSH
25780: LD_INT 0
25782: PUSH
25783: EMPTY
25784: LIST
25785: LIST
25786: PUSH
25787: LD_INT 4
25789: NEG
25790: PUSH
25791: LD_INT 1
25793: NEG
25794: PUSH
25795: EMPTY
25796: LIST
25797: LIST
25798: PUSH
25799: LD_INT 3
25801: NEG
25802: PUSH
25803: LD_INT 0
25805: PUSH
25806: EMPTY
25807: LIST
25808: LIST
25809: PUSH
25810: LD_INT 3
25812: NEG
25813: PUSH
25814: LD_INT 1
25816: PUSH
25817: EMPTY
25818: LIST
25819: LIST
25820: PUSH
25821: LD_INT 4
25823: NEG
25824: PUSH
25825: LD_INT 1
25827: PUSH
25828: EMPTY
25829: LIST
25830: LIST
25831: PUSH
25832: LD_INT 5
25834: NEG
25835: PUSH
25836: LD_INT 0
25838: PUSH
25839: EMPTY
25840: LIST
25841: LIST
25842: PUSH
25843: LD_INT 5
25845: NEG
25846: PUSH
25847: LD_INT 1
25849: NEG
25850: PUSH
25851: EMPTY
25852: LIST
25853: LIST
25854: PUSH
25855: LD_INT 5
25857: NEG
25858: PUSH
25859: LD_INT 2
25861: NEG
25862: PUSH
25863: EMPTY
25864: LIST
25865: LIST
25866: PUSH
25867: LD_INT 3
25869: NEG
25870: PUSH
25871: LD_INT 2
25873: PUSH
25874: EMPTY
25875: LIST
25876: LIST
25877: PUSH
25878: EMPTY
25879: LIST
25880: LIST
25881: LIST
25882: LIST
25883: LIST
25884: LIST
25885: LIST
25886: LIST
25887: LIST
25888: LIST
25889: LIST
25890: LIST
25891: LIST
25892: LIST
25893: LIST
25894: LIST
25895: LIST
25896: LIST
25897: LIST
25898: LIST
25899: LIST
25900: LIST
25901: LIST
25902: LIST
25903: LIST
25904: LIST
25905: LIST
25906: LIST
25907: LIST
25908: LIST
25909: LIST
25910: LIST
25911: LIST
25912: LIST
25913: LIST
25914: LIST
25915: LIST
25916: LIST
25917: LIST
25918: LIST
25919: LIST
25920: LIST
25921: LIST
25922: LIST
25923: LIST
25924: ST_TO_ADDR
// end ; end ;
25925: GO 25928
25927: POP
// case btype of b_depot , b_warehouse :
25928: LD_VAR 0 1
25932: PUSH
25933: LD_INT 0
25935: DOUBLE
25936: EQUAL
25937: IFTRUE 25947
25939: LD_INT 1
25941: DOUBLE
25942: EQUAL
25943: IFTRUE 25947
25945: GO 26148
25947: POP
// case nation of nation_american :
25948: LD_VAR 0 5
25952: PUSH
25953: LD_INT 1
25955: DOUBLE
25956: EQUAL
25957: IFTRUE 25961
25959: GO 26017
25961: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
25962: LD_ADDR_VAR 0 9
25966: PUSH
25967: LD_VAR 0 11
25971: PUSH
25972: LD_VAR 0 12
25976: PUSH
25977: LD_VAR 0 13
25981: PUSH
25982: LD_VAR 0 14
25986: PUSH
25987: LD_VAR 0 15
25991: PUSH
25992: LD_VAR 0 16
25996: PUSH
25997: EMPTY
25998: LIST
25999: LIST
26000: LIST
26001: LIST
26002: LIST
26003: LIST
26004: PUSH
26005: LD_VAR 0 4
26009: PUSH
26010: LD_INT 1
26012: PLUS
26013: ARRAY
26014: ST_TO_ADDR
26015: GO 26146
26017: LD_INT 2
26019: DOUBLE
26020: EQUAL
26021: IFTRUE 26025
26023: GO 26081
26025: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26026: LD_ADDR_VAR 0 9
26030: PUSH
26031: LD_VAR 0 17
26035: PUSH
26036: LD_VAR 0 18
26040: PUSH
26041: LD_VAR 0 19
26045: PUSH
26046: LD_VAR 0 20
26050: PUSH
26051: LD_VAR 0 21
26055: PUSH
26056: LD_VAR 0 22
26060: PUSH
26061: EMPTY
26062: LIST
26063: LIST
26064: LIST
26065: LIST
26066: LIST
26067: LIST
26068: PUSH
26069: LD_VAR 0 4
26073: PUSH
26074: LD_INT 1
26076: PLUS
26077: ARRAY
26078: ST_TO_ADDR
26079: GO 26146
26081: LD_INT 3
26083: DOUBLE
26084: EQUAL
26085: IFTRUE 26089
26087: GO 26145
26089: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26090: LD_ADDR_VAR 0 9
26094: PUSH
26095: LD_VAR 0 23
26099: PUSH
26100: LD_VAR 0 24
26104: PUSH
26105: LD_VAR 0 25
26109: PUSH
26110: LD_VAR 0 26
26114: PUSH
26115: LD_VAR 0 27
26119: PUSH
26120: LD_VAR 0 28
26124: PUSH
26125: EMPTY
26126: LIST
26127: LIST
26128: LIST
26129: LIST
26130: LIST
26131: LIST
26132: PUSH
26133: LD_VAR 0 4
26137: PUSH
26138: LD_INT 1
26140: PLUS
26141: ARRAY
26142: ST_TO_ADDR
26143: GO 26146
26145: POP
26146: GO 26695
26148: LD_INT 2
26150: DOUBLE
26151: EQUAL
26152: IFTRUE 26162
26154: LD_INT 3
26156: DOUBLE
26157: EQUAL
26158: IFTRUE 26162
26160: GO 26218
26162: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26163: LD_ADDR_VAR 0 9
26167: PUSH
26168: LD_VAR 0 29
26172: PUSH
26173: LD_VAR 0 30
26177: PUSH
26178: LD_VAR 0 31
26182: PUSH
26183: LD_VAR 0 32
26187: PUSH
26188: LD_VAR 0 33
26192: PUSH
26193: LD_VAR 0 34
26197: PUSH
26198: EMPTY
26199: LIST
26200: LIST
26201: LIST
26202: LIST
26203: LIST
26204: LIST
26205: PUSH
26206: LD_VAR 0 4
26210: PUSH
26211: LD_INT 1
26213: PLUS
26214: ARRAY
26215: ST_TO_ADDR
26216: GO 26695
26218: LD_INT 16
26220: DOUBLE
26221: EQUAL
26222: IFTRUE 26274
26224: LD_INT 17
26226: DOUBLE
26227: EQUAL
26228: IFTRUE 26274
26230: LD_INT 18
26232: DOUBLE
26233: EQUAL
26234: IFTRUE 26274
26236: LD_INT 19
26238: DOUBLE
26239: EQUAL
26240: IFTRUE 26274
26242: LD_INT 20
26244: DOUBLE
26245: EQUAL
26246: IFTRUE 26274
26248: LD_INT 21
26250: DOUBLE
26251: EQUAL
26252: IFTRUE 26274
26254: LD_INT 23
26256: DOUBLE
26257: EQUAL
26258: IFTRUE 26274
26260: LD_INT 24
26262: DOUBLE
26263: EQUAL
26264: IFTRUE 26274
26266: LD_INT 25
26268: DOUBLE
26269: EQUAL
26270: IFTRUE 26274
26272: GO 26330
26274: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26275: LD_ADDR_VAR 0 9
26279: PUSH
26280: LD_VAR 0 35
26284: PUSH
26285: LD_VAR 0 36
26289: PUSH
26290: LD_VAR 0 37
26294: PUSH
26295: LD_VAR 0 38
26299: PUSH
26300: LD_VAR 0 39
26304: PUSH
26305: LD_VAR 0 40
26309: PUSH
26310: EMPTY
26311: LIST
26312: LIST
26313: LIST
26314: LIST
26315: LIST
26316: LIST
26317: PUSH
26318: LD_VAR 0 4
26322: PUSH
26323: LD_INT 1
26325: PLUS
26326: ARRAY
26327: ST_TO_ADDR
26328: GO 26695
26330: LD_INT 6
26332: DOUBLE
26333: EQUAL
26334: IFTRUE 26386
26336: LD_INT 7
26338: DOUBLE
26339: EQUAL
26340: IFTRUE 26386
26342: LD_INT 8
26344: DOUBLE
26345: EQUAL
26346: IFTRUE 26386
26348: LD_INT 13
26350: DOUBLE
26351: EQUAL
26352: IFTRUE 26386
26354: LD_INT 12
26356: DOUBLE
26357: EQUAL
26358: IFTRUE 26386
26360: LD_INT 15
26362: DOUBLE
26363: EQUAL
26364: IFTRUE 26386
26366: LD_INT 11
26368: DOUBLE
26369: EQUAL
26370: IFTRUE 26386
26372: LD_INT 14
26374: DOUBLE
26375: EQUAL
26376: IFTRUE 26386
26378: LD_INT 10
26380: DOUBLE
26381: EQUAL
26382: IFTRUE 26386
26384: GO 26442
26386: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26387: LD_ADDR_VAR 0 9
26391: PUSH
26392: LD_VAR 0 41
26396: PUSH
26397: LD_VAR 0 42
26401: PUSH
26402: LD_VAR 0 43
26406: PUSH
26407: LD_VAR 0 44
26411: PUSH
26412: LD_VAR 0 45
26416: PUSH
26417: LD_VAR 0 46
26421: PUSH
26422: EMPTY
26423: LIST
26424: LIST
26425: LIST
26426: LIST
26427: LIST
26428: LIST
26429: PUSH
26430: LD_VAR 0 4
26434: PUSH
26435: LD_INT 1
26437: PLUS
26438: ARRAY
26439: ST_TO_ADDR
26440: GO 26695
26442: LD_INT 36
26444: DOUBLE
26445: EQUAL
26446: IFTRUE 26450
26448: GO 26506
26450: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26451: LD_ADDR_VAR 0 9
26455: PUSH
26456: LD_VAR 0 47
26460: PUSH
26461: LD_VAR 0 48
26465: PUSH
26466: LD_VAR 0 49
26470: PUSH
26471: LD_VAR 0 50
26475: PUSH
26476: LD_VAR 0 51
26480: PUSH
26481: LD_VAR 0 52
26485: PUSH
26486: EMPTY
26487: LIST
26488: LIST
26489: LIST
26490: LIST
26491: LIST
26492: LIST
26493: PUSH
26494: LD_VAR 0 4
26498: PUSH
26499: LD_INT 1
26501: PLUS
26502: ARRAY
26503: ST_TO_ADDR
26504: GO 26695
26506: LD_INT 4
26508: DOUBLE
26509: EQUAL
26510: IFTRUE 26532
26512: LD_INT 5
26514: DOUBLE
26515: EQUAL
26516: IFTRUE 26532
26518: LD_INT 34
26520: DOUBLE
26521: EQUAL
26522: IFTRUE 26532
26524: LD_INT 37
26526: DOUBLE
26527: EQUAL
26528: IFTRUE 26532
26530: GO 26588
26532: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26533: LD_ADDR_VAR 0 9
26537: PUSH
26538: LD_VAR 0 53
26542: PUSH
26543: LD_VAR 0 54
26547: PUSH
26548: LD_VAR 0 55
26552: PUSH
26553: LD_VAR 0 56
26557: PUSH
26558: LD_VAR 0 57
26562: PUSH
26563: LD_VAR 0 58
26567: PUSH
26568: EMPTY
26569: LIST
26570: LIST
26571: LIST
26572: LIST
26573: LIST
26574: LIST
26575: PUSH
26576: LD_VAR 0 4
26580: PUSH
26581: LD_INT 1
26583: PLUS
26584: ARRAY
26585: ST_TO_ADDR
26586: GO 26695
26588: LD_INT 31
26590: DOUBLE
26591: EQUAL
26592: IFTRUE 26638
26594: LD_INT 32
26596: DOUBLE
26597: EQUAL
26598: IFTRUE 26638
26600: LD_INT 33
26602: DOUBLE
26603: EQUAL
26604: IFTRUE 26638
26606: LD_INT 27
26608: DOUBLE
26609: EQUAL
26610: IFTRUE 26638
26612: LD_INT 26
26614: DOUBLE
26615: EQUAL
26616: IFTRUE 26638
26618: LD_INT 28
26620: DOUBLE
26621: EQUAL
26622: IFTRUE 26638
26624: LD_INT 29
26626: DOUBLE
26627: EQUAL
26628: IFTRUE 26638
26630: LD_INT 30
26632: DOUBLE
26633: EQUAL
26634: IFTRUE 26638
26636: GO 26694
26638: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26639: LD_ADDR_VAR 0 9
26643: PUSH
26644: LD_VAR 0 59
26648: PUSH
26649: LD_VAR 0 60
26653: PUSH
26654: LD_VAR 0 61
26658: PUSH
26659: LD_VAR 0 62
26663: PUSH
26664: LD_VAR 0 63
26668: PUSH
26669: LD_VAR 0 64
26673: PUSH
26674: EMPTY
26675: LIST
26676: LIST
26677: LIST
26678: LIST
26679: LIST
26680: LIST
26681: PUSH
26682: LD_VAR 0 4
26686: PUSH
26687: LD_INT 1
26689: PLUS
26690: ARRAY
26691: ST_TO_ADDR
26692: GO 26695
26694: POP
// temp_list2 = [ ] ;
26695: LD_ADDR_VAR 0 10
26699: PUSH
26700: EMPTY
26701: ST_TO_ADDR
// for i in temp_list do
26702: LD_ADDR_VAR 0 8
26706: PUSH
26707: LD_VAR 0 9
26711: PUSH
26712: FOR_IN
26713: IFFALSE 26765
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
26715: LD_ADDR_VAR 0 10
26719: PUSH
26720: LD_VAR 0 10
26724: PUSH
26725: LD_VAR 0 8
26729: PUSH
26730: LD_INT 1
26732: ARRAY
26733: PUSH
26734: LD_VAR 0 2
26738: PLUS
26739: PUSH
26740: LD_VAR 0 8
26744: PUSH
26745: LD_INT 2
26747: ARRAY
26748: PUSH
26749: LD_VAR 0 3
26753: PLUS
26754: PUSH
26755: EMPTY
26756: LIST
26757: LIST
26758: PUSH
26759: EMPTY
26760: LIST
26761: ADD
26762: ST_TO_ADDR
26763: GO 26712
26765: POP
26766: POP
// result = temp_list2 ;
26767: LD_ADDR_VAR 0 7
26771: PUSH
26772: LD_VAR 0 10
26776: ST_TO_ADDR
// end ;
26777: LD_VAR 0 7
26781: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
26782: LD_INT 0
26784: PPUSH
26785: PPUSH
26786: PPUSH
// result := false ;
26787: LD_ADDR_VAR 0 4
26791: PUSH
26792: LD_INT 0
26794: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
26795: LD_VAR 0 1
26799: NOT
26800: PUSH
26801: LD_VAR 0 2
26805: NOT
26806: OR
26807: PUSH
26808: LD_VAR 0 1
26812: PPUSH
26813: CALL_OW 310
26817: OR
26818: IFFALSE 26822
// exit ;
26820: GO 27026
// if distance < 0 then
26822: LD_VAR 0 3
26826: PUSH
26827: LD_INT 0
26829: LESS
26830: IFFALSE 26840
// distance := 0 ;
26832: LD_ADDR_VAR 0 3
26836: PUSH
26837: LD_INT 0
26839: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
26840: LD_ADDR_VAR 0 6
26844: PUSH
26845: LD_VAR 0 2
26849: PPUSH
26850: CALL_OW 266
26854: PPUSH
26855: LD_VAR 0 2
26859: PPUSH
26860: CALL_OW 250
26864: PPUSH
26865: LD_VAR 0 2
26869: PPUSH
26870: CALL_OW 251
26874: PPUSH
26875: LD_VAR 0 2
26879: PPUSH
26880: CALL_OW 254
26884: PPUSH
26885: LD_VAR 0 2
26889: PPUSH
26890: CALL_OW 248
26894: PPUSH
26895: LD_INT 1
26897: PPUSH
26898: CALL 8243 0 6
26902: ST_TO_ADDR
// if not entrance then
26903: LD_VAR 0 6
26907: NOT
26908: IFFALSE 26912
// exit ;
26910: GO 27026
// for i in entrance do
26912: LD_ADDR_VAR 0 5
26916: PUSH
26917: LD_VAR 0 6
26921: PUSH
26922: FOR_IN
26923: IFFALSE 27024
// begin if not distance then
26925: LD_VAR 0 3
26929: NOT
26930: IFFALSE 26975
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
26932: LD_VAR 0 1
26936: PPUSH
26937: LD_VAR 0 5
26941: PUSH
26942: LD_INT 1
26944: ARRAY
26945: PPUSH
26946: LD_VAR 0 5
26950: PUSH
26951: LD_INT 2
26953: ARRAY
26954: PPUSH
26955: CALL_OW 307
26959: IFFALSE 26973
// begin result := true ;
26961: LD_ADDR_VAR 0 4
26965: PUSH
26966: LD_INT 1
26968: ST_TO_ADDR
// exit ;
26969: POP
26970: POP
26971: GO 27026
// end ; end else
26973: GO 27022
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
26975: LD_VAR 0 1
26979: PPUSH
26980: LD_VAR 0 5
26984: PUSH
26985: LD_INT 1
26987: ARRAY
26988: PPUSH
26989: LD_VAR 0 5
26993: PUSH
26994: LD_INT 2
26996: ARRAY
26997: PPUSH
26998: CALL_OW 297
27002: PUSH
27003: LD_VAR 0 3
27007: LESSEQUAL
27008: IFFALSE 27022
// begin result := true ;
27010: LD_ADDR_VAR 0 4
27014: PUSH
27015: LD_INT 1
27017: ST_TO_ADDR
// exit ;
27018: POP
27019: POP
27020: GO 27026
// end ; end ; end ;
27022: GO 26922
27024: POP
27025: POP
// end ;
27026: LD_VAR 0 4
27030: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27031: LD_INT 0
27033: PPUSH
27034: PPUSH
27035: PPUSH
// result := false ;
27036: LD_ADDR_VAR 0 3
27040: PUSH
27041: LD_INT 0
27043: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27044: LD_VAR 0 1
27048: NOT
27049: PUSH
27050: LD_VAR 0 2
27054: NOT
27055: OR
27056: PUSH
27057: LD_VAR 0 1
27061: PPUSH
27062: CALL_OW 302
27066: NOT
27067: OR
27068: PUSH
27069: LD_VAR 0 2
27073: PPUSH
27074: CALL_OW 302
27078: NOT
27079: OR
27080: IFFALSE 27084
// exit ;
27082: GO 27245
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27084: LD_VAR 0 1
27088: PPUSH
27089: LD_INT 81
27091: PUSH
27092: LD_VAR 0 1
27096: PPUSH
27097: CALL_OW 255
27101: PUSH
27102: EMPTY
27103: LIST
27104: LIST
27105: PUSH
27106: LD_INT 3
27108: PUSH
27109: LD_INT 21
27111: PUSH
27112: LD_INT 3
27114: PUSH
27115: EMPTY
27116: LIST
27117: LIST
27118: PUSH
27119: EMPTY
27120: LIST
27121: LIST
27122: PUSH
27123: EMPTY
27124: LIST
27125: LIST
27126: PPUSH
27127: CALL_OW 69
27131: PPUSH
27132: LD_VAR 0 1
27136: PPUSH
27137: CALL_OW 74
27141: PPUSH
27142: CALL_OW 296
27146: PUSH
27147: LD_INT 8
27149: LESS
27150: IFFALSE 27154
// exit ;
27152: GO 27245
// building := IsInUnit ( unit2 ) ;
27154: LD_ADDR_VAR 0 5
27158: PUSH
27159: LD_VAR 0 2
27163: PPUSH
27164: CALL_OW 310
27168: ST_TO_ADDR
// if building then
27169: LD_VAR 0 5
27173: IFFALSE 27200
// result := IsNearbyEntrance ( unit , building , 2 ) else
27175: LD_ADDR_VAR 0 3
27179: PUSH
27180: LD_VAR 0 1
27184: PPUSH
27185: LD_VAR 0 5
27189: PPUSH
27190: LD_INT 2
27192: PPUSH
27193: CALL 26782 0 3
27197: ST_TO_ADDR
27198: GO 27245
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27200: LD_ADDR_VAR 0 3
27204: PUSH
27205: LD_VAR 0 1
27209: PPUSH
27210: LD_VAR 0 2
27214: PPUSH
27215: CALL_OW 296
27219: PUSH
27220: LD_INT 6
27222: LESS
27223: PUSH
27224: LD_VAR 0 2
27228: PPUSH
27229: CALL_OW 255
27233: PPUSH
27234: LD_VAR 0 1
27238: PPUSH
27239: CALL_OW 292
27243: AND
27244: ST_TO_ADDR
// end ;
27245: LD_VAR 0 3
27249: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27250: LD_INT 0
27252: PPUSH
27253: PPUSH
27254: PPUSH
27255: PPUSH
// tmp := [ ] ;
27256: LD_ADDR_VAR 0 3
27260: PUSH
27261: EMPTY
27262: ST_TO_ADDR
// list := [ ] ;
27263: LD_ADDR_VAR 0 5
27267: PUSH
27268: EMPTY
27269: ST_TO_ADDR
// for i = 16 to 25 do
27270: LD_ADDR_VAR 0 4
27274: PUSH
27275: DOUBLE
27276: LD_INT 16
27278: DEC
27279: ST_TO_ADDR
27280: LD_INT 25
27282: PUSH
27283: FOR_TO
27284: IFFALSE 27357
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27286: LD_ADDR_VAR 0 3
27290: PUSH
27291: LD_VAR 0 3
27295: PUSH
27296: LD_INT 22
27298: PUSH
27299: LD_VAR 0 1
27303: PPUSH
27304: CALL_OW 255
27308: PUSH
27309: EMPTY
27310: LIST
27311: LIST
27312: PUSH
27313: LD_INT 91
27315: PUSH
27316: LD_VAR 0 1
27320: PUSH
27321: LD_INT 6
27323: PUSH
27324: EMPTY
27325: LIST
27326: LIST
27327: LIST
27328: PUSH
27329: LD_INT 30
27331: PUSH
27332: LD_VAR 0 4
27336: PUSH
27337: EMPTY
27338: LIST
27339: LIST
27340: PUSH
27341: EMPTY
27342: LIST
27343: LIST
27344: LIST
27345: PUSH
27346: EMPTY
27347: LIST
27348: PPUSH
27349: CALL_OW 69
27353: ADD
27354: ST_TO_ADDR
27355: GO 27283
27357: POP
27358: POP
// for i = 1 to tmp do
27359: LD_ADDR_VAR 0 4
27363: PUSH
27364: DOUBLE
27365: LD_INT 1
27367: DEC
27368: ST_TO_ADDR
27369: LD_VAR 0 3
27373: PUSH
27374: FOR_TO
27375: IFFALSE 27463
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27377: LD_ADDR_VAR 0 5
27381: PUSH
27382: LD_VAR 0 5
27386: PUSH
27387: LD_VAR 0 3
27391: PUSH
27392: LD_VAR 0 4
27396: ARRAY
27397: PPUSH
27398: CALL_OW 266
27402: PUSH
27403: LD_VAR 0 3
27407: PUSH
27408: LD_VAR 0 4
27412: ARRAY
27413: PPUSH
27414: CALL_OW 250
27418: PUSH
27419: LD_VAR 0 3
27423: PUSH
27424: LD_VAR 0 4
27428: ARRAY
27429: PPUSH
27430: CALL_OW 251
27434: PUSH
27435: LD_VAR 0 3
27439: PUSH
27440: LD_VAR 0 4
27444: ARRAY
27445: PPUSH
27446: CALL_OW 254
27450: PUSH
27451: EMPTY
27452: LIST
27453: LIST
27454: LIST
27455: LIST
27456: PUSH
27457: EMPTY
27458: LIST
27459: ADD
27460: ST_TO_ADDR
27461: GO 27374
27463: POP
27464: POP
// result := list ;
27465: LD_ADDR_VAR 0 2
27469: PUSH
27470: LD_VAR 0 5
27474: ST_TO_ADDR
// end ;
27475: LD_VAR 0 2
27479: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27480: LD_INT 0
27482: PPUSH
27483: PPUSH
27484: PPUSH
27485: PPUSH
27486: PPUSH
27487: PPUSH
27488: PPUSH
// if not factory then
27489: LD_VAR 0 1
27493: NOT
27494: IFFALSE 27498
// exit ;
27496: GO 28023
// if control = control_apeman then
27498: LD_VAR 0 4
27502: PUSH
27503: LD_INT 5
27505: EQUAL
27506: IFFALSE 27615
// begin tmp := UnitsInside ( factory ) ;
27508: LD_ADDR_VAR 0 8
27512: PUSH
27513: LD_VAR 0 1
27517: PPUSH
27518: CALL_OW 313
27522: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27523: LD_VAR 0 8
27527: PPUSH
27528: LD_INT 25
27530: PUSH
27531: LD_INT 12
27533: PUSH
27534: EMPTY
27535: LIST
27536: LIST
27537: PPUSH
27538: CALL_OW 72
27542: NOT
27543: IFFALSE 27553
// control := control_manual ;
27545: LD_ADDR_VAR 0 4
27549: PUSH
27550: LD_INT 1
27552: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27553: LD_ADDR_VAR 0 8
27557: PUSH
27558: LD_VAR 0 1
27562: PPUSH
27563: CALL 27250 0 1
27567: ST_TO_ADDR
// if tmp then
27568: LD_VAR 0 8
27572: IFFALSE 27615
// begin for i in tmp do
27574: LD_ADDR_VAR 0 7
27578: PUSH
27579: LD_VAR 0 8
27583: PUSH
27584: FOR_IN
27585: IFFALSE 27613
// if i [ 1 ] = b_ext_radar then
27587: LD_VAR 0 7
27591: PUSH
27592: LD_INT 1
27594: ARRAY
27595: PUSH
27596: LD_INT 20
27598: EQUAL
27599: IFFALSE 27611
// begin control := control_remote ;
27601: LD_ADDR_VAR 0 4
27605: PUSH
27606: LD_INT 2
27608: ST_TO_ADDR
// break ;
27609: GO 27613
// end ;
27611: GO 27584
27613: POP
27614: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27615: LD_VAR 0 1
27619: PPUSH
27620: LD_VAR 0 2
27624: PPUSH
27625: LD_VAR 0 3
27629: PPUSH
27630: LD_VAR 0 4
27634: PPUSH
27635: LD_VAR 0 5
27639: PPUSH
27640: CALL_OW 448
27644: IFFALSE 27679
// begin result := [ chassis , engine , control , weapon ] ;
27646: LD_ADDR_VAR 0 6
27650: PUSH
27651: LD_VAR 0 2
27655: PUSH
27656: LD_VAR 0 3
27660: PUSH
27661: LD_VAR 0 4
27665: PUSH
27666: LD_VAR 0 5
27670: PUSH
27671: EMPTY
27672: LIST
27673: LIST
27674: LIST
27675: LIST
27676: ST_TO_ADDR
// exit ;
27677: GO 28023
// end ; _chassis := AvailableChassisList ( factory ) ;
27679: LD_ADDR_VAR 0 9
27683: PUSH
27684: LD_VAR 0 1
27688: PPUSH
27689: CALL_OW 475
27693: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
27694: LD_ADDR_VAR 0 11
27698: PUSH
27699: LD_VAR 0 1
27703: PPUSH
27704: CALL_OW 476
27708: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
27709: LD_ADDR_VAR 0 12
27713: PUSH
27714: LD_VAR 0 1
27718: PPUSH
27719: CALL_OW 477
27723: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
27724: LD_ADDR_VAR 0 10
27728: PUSH
27729: LD_VAR 0 1
27733: PPUSH
27734: CALL_OW 478
27738: ST_TO_ADDR
// if not chassis in _chassis then
27739: LD_VAR 0 2
27743: PUSH
27744: LD_VAR 0 9
27748: IN
27749: NOT
27750: IFFALSE 27776
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
27752: LD_ADDR_VAR 0 2
27756: PUSH
27757: LD_VAR 0 9
27761: PUSH
27762: LD_INT 1
27764: PPUSH
27765: LD_VAR 0 9
27769: PPUSH
27770: CALL_OW 12
27774: ARRAY
27775: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
27776: LD_VAR 0 2
27780: PPUSH
27781: LD_VAR 0 3
27785: PPUSH
27786: CALL 28028 0 2
27790: NOT
27791: IFFALSE 27850
// repeat engine := _engine [ 1 ] ;
27793: LD_ADDR_VAR 0 3
27797: PUSH
27798: LD_VAR 0 11
27802: PUSH
27803: LD_INT 1
27805: ARRAY
27806: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
27807: LD_ADDR_VAR 0 11
27811: PUSH
27812: LD_VAR 0 11
27816: PPUSH
27817: LD_INT 1
27819: PPUSH
27820: CALL_OW 3
27824: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
27825: LD_VAR 0 2
27829: PPUSH
27830: LD_VAR 0 3
27834: PPUSH
27835: CALL 28028 0 2
27839: PUSH
27840: LD_VAR 0 11
27844: PUSH
27845: EMPTY
27846: EQUAL
27847: OR
27848: IFFALSE 27793
// if not control in _control then
27850: LD_VAR 0 4
27854: PUSH
27855: LD_VAR 0 12
27859: IN
27860: NOT
27861: IFFALSE 27887
// control := _control [ rand ( 1 , _control ) ] ;
27863: LD_ADDR_VAR 0 4
27867: PUSH
27868: LD_VAR 0 12
27872: PUSH
27873: LD_INT 1
27875: PPUSH
27876: LD_VAR 0 12
27880: PPUSH
27881: CALL_OW 12
27885: ARRAY
27886: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
27887: LD_VAR 0 2
27891: PPUSH
27892: LD_VAR 0 5
27896: PPUSH
27897: CALL 28248 0 2
27901: NOT
27902: IFFALSE 27961
// repeat weapon := _weapon [ 1 ] ;
27904: LD_ADDR_VAR 0 5
27908: PUSH
27909: LD_VAR 0 10
27913: PUSH
27914: LD_INT 1
27916: ARRAY
27917: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
27918: LD_ADDR_VAR 0 10
27922: PUSH
27923: LD_VAR 0 10
27927: PPUSH
27928: LD_INT 1
27930: PPUSH
27931: CALL_OW 3
27935: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
27936: LD_VAR 0 2
27940: PPUSH
27941: LD_VAR 0 5
27945: PPUSH
27946: CALL 28248 0 2
27950: PUSH
27951: LD_VAR 0 10
27955: PUSH
27956: EMPTY
27957: EQUAL
27958: OR
27959: IFFALSE 27904
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27961: LD_VAR 0 1
27965: PPUSH
27966: LD_VAR 0 2
27970: PPUSH
27971: LD_VAR 0 3
27975: PPUSH
27976: LD_VAR 0 4
27980: PPUSH
27981: LD_VAR 0 5
27985: PPUSH
27986: CALL_OW 448
27990: IFFALSE 28023
// result := [ chassis , engine , control , weapon ] ;
27992: LD_ADDR_VAR 0 6
27996: PUSH
27997: LD_VAR 0 2
28001: PUSH
28002: LD_VAR 0 3
28006: PUSH
28007: LD_VAR 0 4
28011: PUSH
28012: LD_VAR 0 5
28016: PUSH
28017: EMPTY
28018: LIST
28019: LIST
28020: LIST
28021: LIST
28022: ST_TO_ADDR
// end ;
28023: LD_VAR 0 6
28027: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28028: LD_INT 0
28030: PPUSH
// if not chassis or not engine then
28031: LD_VAR 0 1
28035: NOT
28036: PUSH
28037: LD_VAR 0 2
28041: NOT
28042: OR
28043: IFFALSE 28047
// exit ;
28045: GO 28243
// case engine of engine_solar :
28047: LD_VAR 0 2
28051: PUSH
28052: LD_INT 2
28054: DOUBLE
28055: EQUAL
28056: IFTRUE 28060
28058: GO 28098
28060: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28061: LD_ADDR_VAR 0 3
28065: PUSH
28066: LD_INT 11
28068: PUSH
28069: LD_INT 12
28071: PUSH
28072: LD_INT 13
28074: PUSH
28075: LD_INT 14
28077: PUSH
28078: LD_INT 1
28080: PUSH
28081: LD_INT 2
28083: PUSH
28084: LD_INT 3
28086: PUSH
28087: EMPTY
28088: LIST
28089: LIST
28090: LIST
28091: LIST
28092: LIST
28093: LIST
28094: LIST
28095: ST_TO_ADDR
28096: GO 28227
28098: LD_INT 1
28100: DOUBLE
28101: EQUAL
28102: IFTRUE 28106
28104: GO 28168
28106: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28107: LD_ADDR_VAR 0 3
28111: PUSH
28112: LD_INT 11
28114: PUSH
28115: LD_INT 12
28117: PUSH
28118: LD_INT 13
28120: PUSH
28121: LD_INT 14
28123: PUSH
28124: LD_INT 1
28126: PUSH
28127: LD_INT 2
28129: PUSH
28130: LD_INT 3
28132: PUSH
28133: LD_INT 4
28135: PUSH
28136: LD_INT 5
28138: PUSH
28139: LD_INT 21
28141: PUSH
28142: LD_INT 23
28144: PUSH
28145: LD_INT 22
28147: PUSH
28148: LD_INT 24
28150: PUSH
28151: EMPTY
28152: LIST
28153: LIST
28154: LIST
28155: LIST
28156: LIST
28157: LIST
28158: LIST
28159: LIST
28160: LIST
28161: LIST
28162: LIST
28163: LIST
28164: LIST
28165: ST_TO_ADDR
28166: GO 28227
28168: LD_INT 3
28170: DOUBLE
28171: EQUAL
28172: IFTRUE 28176
28174: GO 28226
28176: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28177: LD_ADDR_VAR 0 3
28181: PUSH
28182: LD_INT 13
28184: PUSH
28185: LD_INT 14
28187: PUSH
28188: LD_INT 2
28190: PUSH
28191: LD_INT 3
28193: PUSH
28194: LD_INT 4
28196: PUSH
28197: LD_INT 5
28199: PUSH
28200: LD_INT 21
28202: PUSH
28203: LD_INT 22
28205: PUSH
28206: LD_INT 23
28208: PUSH
28209: LD_INT 24
28211: PUSH
28212: EMPTY
28213: LIST
28214: LIST
28215: LIST
28216: LIST
28217: LIST
28218: LIST
28219: LIST
28220: LIST
28221: LIST
28222: LIST
28223: ST_TO_ADDR
28224: GO 28227
28226: POP
// result := ( chassis in result ) ;
28227: LD_ADDR_VAR 0 3
28231: PUSH
28232: LD_VAR 0 1
28236: PUSH
28237: LD_VAR 0 3
28241: IN
28242: ST_TO_ADDR
// end ;
28243: LD_VAR 0 3
28247: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28248: LD_INT 0
28250: PPUSH
// if not chassis or not weapon then
28251: LD_VAR 0 1
28255: NOT
28256: PUSH
28257: LD_VAR 0 2
28261: NOT
28262: OR
28263: IFFALSE 28267
// exit ;
28265: GO 29293
// case weapon of us_machine_gun :
28267: LD_VAR 0 2
28271: PUSH
28272: LD_INT 2
28274: DOUBLE
28275: EQUAL
28276: IFTRUE 28280
28278: GO 28310
28280: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28281: LD_ADDR_VAR 0 3
28285: PUSH
28286: LD_INT 1
28288: PUSH
28289: LD_INT 2
28291: PUSH
28292: LD_INT 3
28294: PUSH
28295: LD_INT 4
28297: PUSH
28298: LD_INT 5
28300: PUSH
28301: EMPTY
28302: LIST
28303: LIST
28304: LIST
28305: LIST
28306: LIST
28307: ST_TO_ADDR
28308: GO 29277
28310: LD_INT 3
28312: DOUBLE
28313: EQUAL
28314: IFTRUE 28318
28316: GO 28348
28318: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28319: LD_ADDR_VAR 0 3
28323: PUSH
28324: LD_INT 1
28326: PUSH
28327: LD_INT 2
28329: PUSH
28330: LD_INT 3
28332: PUSH
28333: LD_INT 4
28335: PUSH
28336: LD_INT 5
28338: PUSH
28339: EMPTY
28340: LIST
28341: LIST
28342: LIST
28343: LIST
28344: LIST
28345: ST_TO_ADDR
28346: GO 29277
28348: LD_INT 11
28350: DOUBLE
28351: EQUAL
28352: IFTRUE 28356
28354: GO 28386
28356: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28357: LD_ADDR_VAR 0 3
28361: PUSH
28362: LD_INT 1
28364: PUSH
28365: LD_INT 2
28367: PUSH
28368: LD_INT 3
28370: PUSH
28371: LD_INT 4
28373: PUSH
28374: LD_INT 5
28376: PUSH
28377: EMPTY
28378: LIST
28379: LIST
28380: LIST
28381: LIST
28382: LIST
28383: ST_TO_ADDR
28384: GO 29277
28386: LD_INT 4
28388: DOUBLE
28389: EQUAL
28390: IFTRUE 28394
28392: GO 28420
28394: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28395: LD_ADDR_VAR 0 3
28399: PUSH
28400: LD_INT 2
28402: PUSH
28403: LD_INT 3
28405: PUSH
28406: LD_INT 4
28408: PUSH
28409: LD_INT 5
28411: PUSH
28412: EMPTY
28413: LIST
28414: LIST
28415: LIST
28416: LIST
28417: ST_TO_ADDR
28418: GO 29277
28420: LD_INT 5
28422: DOUBLE
28423: EQUAL
28424: IFTRUE 28428
28426: GO 28454
28428: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28429: LD_ADDR_VAR 0 3
28433: PUSH
28434: LD_INT 2
28436: PUSH
28437: LD_INT 3
28439: PUSH
28440: LD_INT 4
28442: PUSH
28443: LD_INT 5
28445: PUSH
28446: EMPTY
28447: LIST
28448: LIST
28449: LIST
28450: LIST
28451: ST_TO_ADDR
28452: GO 29277
28454: LD_INT 9
28456: DOUBLE
28457: EQUAL
28458: IFTRUE 28462
28460: GO 28488
28462: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28463: LD_ADDR_VAR 0 3
28467: PUSH
28468: LD_INT 2
28470: PUSH
28471: LD_INT 3
28473: PUSH
28474: LD_INT 4
28476: PUSH
28477: LD_INT 5
28479: PUSH
28480: EMPTY
28481: LIST
28482: LIST
28483: LIST
28484: LIST
28485: ST_TO_ADDR
28486: GO 29277
28488: LD_INT 7
28490: DOUBLE
28491: EQUAL
28492: IFTRUE 28496
28494: GO 28522
28496: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28497: LD_ADDR_VAR 0 3
28501: PUSH
28502: LD_INT 2
28504: PUSH
28505: LD_INT 3
28507: PUSH
28508: LD_INT 4
28510: PUSH
28511: LD_INT 5
28513: PUSH
28514: EMPTY
28515: LIST
28516: LIST
28517: LIST
28518: LIST
28519: ST_TO_ADDR
28520: GO 29277
28522: LD_INT 12
28524: DOUBLE
28525: EQUAL
28526: IFTRUE 28530
28528: GO 28556
28530: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28531: LD_ADDR_VAR 0 3
28535: PUSH
28536: LD_INT 2
28538: PUSH
28539: LD_INT 3
28541: PUSH
28542: LD_INT 4
28544: PUSH
28545: LD_INT 5
28547: PUSH
28548: EMPTY
28549: LIST
28550: LIST
28551: LIST
28552: LIST
28553: ST_TO_ADDR
28554: GO 29277
28556: LD_INT 13
28558: DOUBLE
28559: EQUAL
28560: IFTRUE 28564
28562: GO 28590
28564: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28565: LD_ADDR_VAR 0 3
28569: PUSH
28570: LD_INT 2
28572: PUSH
28573: LD_INT 3
28575: PUSH
28576: LD_INT 4
28578: PUSH
28579: LD_INT 5
28581: PUSH
28582: EMPTY
28583: LIST
28584: LIST
28585: LIST
28586: LIST
28587: ST_TO_ADDR
28588: GO 29277
28590: LD_INT 14
28592: DOUBLE
28593: EQUAL
28594: IFTRUE 28598
28596: GO 28616
28598: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28599: LD_ADDR_VAR 0 3
28603: PUSH
28604: LD_INT 4
28606: PUSH
28607: LD_INT 5
28609: PUSH
28610: EMPTY
28611: LIST
28612: LIST
28613: ST_TO_ADDR
28614: GO 29277
28616: LD_INT 6
28618: DOUBLE
28619: EQUAL
28620: IFTRUE 28624
28622: GO 28642
28624: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28625: LD_ADDR_VAR 0 3
28629: PUSH
28630: LD_INT 4
28632: PUSH
28633: LD_INT 5
28635: PUSH
28636: EMPTY
28637: LIST
28638: LIST
28639: ST_TO_ADDR
28640: GO 29277
28642: LD_INT 10
28644: DOUBLE
28645: EQUAL
28646: IFTRUE 28650
28648: GO 28668
28650: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
28651: LD_ADDR_VAR 0 3
28655: PUSH
28656: LD_INT 4
28658: PUSH
28659: LD_INT 5
28661: PUSH
28662: EMPTY
28663: LIST
28664: LIST
28665: ST_TO_ADDR
28666: GO 29277
28668: LD_INT 22
28670: DOUBLE
28671: EQUAL
28672: IFTRUE 28676
28674: GO 28702
28676: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
28677: LD_ADDR_VAR 0 3
28681: PUSH
28682: LD_INT 11
28684: PUSH
28685: LD_INT 12
28687: PUSH
28688: LD_INT 13
28690: PUSH
28691: LD_INT 14
28693: PUSH
28694: EMPTY
28695: LIST
28696: LIST
28697: LIST
28698: LIST
28699: ST_TO_ADDR
28700: GO 29277
28702: LD_INT 23
28704: DOUBLE
28705: EQUAL
28706: IFTRUE 28710
28708: GO 28736
28710: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
28711: LD_ADDR_VAR 0 3
28715: PUSH
28716: LD_INT 11
28718: PUSH
28719: LD_INT 12
28721: PUSH
28722: LD_INT 13
28724: PUSH
28725: LD_INT 14
28727: PUSH
28728: EMPTY
28729: LIST
28730: LIST
28731: LIST
28732: LIST
28733: ST_TO_ADDR
28734: GO 29277
28736: LD_INT 24
28738: DOUBLE
28739: EQUAL
28740: IFTRUE 28744
28742: GO 28770
28744: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
28745: LD_ADDR_VAR 0 3
28749: PUSH
28750: LD_INT 11
28752: PUSH
28753: LD_INT 12
28755: PUSH
28756: LD_INT 13
28758: PUSH
28759: LD_INT 14
28761: PUSH
28762: EMPTY
28763: LIST
28764: LIST
28765: LIST
28766: LIST
28767: ST_TO_ADDR
28768: GO 29277
28770: LD_INT 30
28772: DOUBLE
28773: EQUAL
28774: IFTRUE 28778
28776: GO 28804
28778: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
28779: LD_ADDR_VAR 0 3
28783: PUSH
28784: LD_INT 11
28786: PUSH
28787: LD_INT 12
28789: PUSH
28790: LD_INT 13
28792: PUSH
28793: LD_INT 14
28795: PUSH
28796: EMPTY
28797: LIST
28798: LIST
28799: LIST
28800: LIST
28801: ST_TO_ADDR
28802: GO 29277
28804: LD_INT 25
28806: DOUBLE
28807: EQUAL
28808: IFTRUE 28812
28810: GO 28830
28812: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
28813: LD_ADDR_VAR 0 3
28817: PUSH
28818: LD_INT 13
28820: PUSH
28821: LD_INT 14
28823: PUSH
28824: EMPTY
28825: LIST
28826: LIST
28827: ST_TO_ADDR
28828: GO 29277
28830: LD_INT 27
28832: DOUBLE
28833: EQUAL
28834: IFTRUE 28838
28836: GO 28856
28838: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
28839: LD_ADDR_VAR 0 3
28843: PUSH
28844: LD_INT 13
28846: PUSH
28847: LD_INT 14
28849: PUSH
28850: EMPTY
28851: LIST
28852: LIST
28853: ST_TO_ADDR
28854: GO 29277
28856: LD_INT 28
28858: DOUBLE
28859: EQUAL
28860: IFTRUE 28864
28862: GO 28882
28864: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
28865: LD_ADDR_VAR 0 3
28869: PUSH
28870: LD_INT 13
28872: PUSH
28873: LD_INT 14
28875: PUSH
28876: EMPTY
28877: LIST
28878: LIST
28879: ST_TO_ADDR
28880: GO 29277
28882: LD_INT 29
28884: DOUBLE
28885: EQUAL
28886: IFTRUE 28890
28888: GO 28908
28890: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
28891: LD_ADDR_VAR 0 3
28895: PUSH
28896: LD_INT 13
28898: PUSH
28899: LD_INT 14
28901: PUSH
28902: EMPTY
28903: LIST
28904: LIST
28905: ST_TO_ADDR
28906: GO 29277
28908: LD_INT 31
28910: DOUBLE
28911: EQUAL
28912: IFTRUE 28916
28914: GO 28934
28916: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
28917: LD_ADDR_VAR 0 3
28921: PUSH
28922: LD_INT 13
28924: PUSH
28925: LD_INT 14
28927: PUSH
28928: EMPTY
28929: LIST
28930: LIST
28931: ST_TO_ADDR
28932: GO 29277
28934: LD_INT 26
28936: DOUBLE
28937: EQUAL
28938: IFTRUE 28942
28940: GO 28960
28942: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
28943: LD_ADDR_VAR 0 3
28947: PUSH
28948: LD_INT 13
28950: PUSH
28951: LD_INT 14
28953: PUSH
28954: EMPTY
28955: LIST
28956: LIST
28957: ST_TO_ADDR
28958: GO 29277
28960: LD_INT 42
28962: DOUBLE
28963: EQUAL
28964: IFTRUE 28968
28966: GO 28994
28968: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
28969: LD_ADDR_VAR 0 3
28973: PUSH
28974: LD_INT 21
28976: PUSH
28977: LD_INT 22
28979: PUSH
28980: LD_INT 23
28982: PUSH
28983: LD_INT 24
28985: PUSH
28986: EMPTY
28987: LIST
28988: LIST
28989: LIST
28990: LIST
28991: ST_TO_ADDR
28992: GO 29277
28994: LD_INT 43
28996: DOUBLE
28997: EQUAL
28998: IFTRUE 29002
29000: GO 29028
29002: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29003: LD_ADDR_VAR 0 3
29007: PUSH
29008: LD_INT 21
29010: PUSH
29011: LD_INT 22
29013: PUSH
29014: LD_INT 23
29016: PUSH
29017: LD_INT 24
29019: PUSH
29020: EMPTY
29021: LIST
29022: LIST
29023: LIST
29024: LIST
29025: ST_TO_ADDR
29026: GO 29277
29028: LD_INT 44
29030: DOUBLE
29031: EQUAL
29032: IFTRUE 29036
29034: GO 29062
29036: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29037: LD_ADDR_VAR 0 3
29041: PUSH
29042: LD_INT 21
29044: PUSH
29045: LD_INT 22
29047: PUSH
29048: LD_INT 23
29050: PUSH
29051: LD_INT 24
29053: PUSH
29054: EMPTY
29055: LIST
29056: LIST
29057: LIST
29058: LIST
29059: ST_TO_ADDR
29060: GO 29277
29062: LD_INT 45
29064: DOUBLE
29065: EQUAL
29066: IFTRUE 29070
29068: GO 29096
29070: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29071: LD_ADDR_VAR 0 3
29075: PUSH
29076: LD_INT 21
29078: PUSH
29079: LD_INT 22
29081: PUSH
29082: LD_INT 23
29084: PUSH
29085: LD_INT 24
29087: PUSH
29088: EMPTY
29089: LIST
29090: LIST
29091: LIST
29092: LIST
29093: ST_TO_ADDR
29094: GO 29277
29096: LD_INT 49
29098: DOUBLE
29099: EQUAL
29100: IFTRUE 29104
29102: GO 29130
29104: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29105: LD_ADDR_VAR 0 3
29109: PUSH
29110: LD_INT 21
29112: PUSH
29113: LD_INT 22
29115: PUSH
29116: LD_INT 23
29118: PUSH
29119: LD_INT 24
29121: PUSH
29122: EMPTY
29123: LIST
29124: LIST
29125: LIST
29126: LIST
29127: ST_TO_ADDR
29128: GO 29277
29130: LD_INT 51
29132: DOUBLE
29133: EQUAL
29134: IFTRUE 29138
29136: GO 29164
29138: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29139: LD_ADDR_VAR 0 3
29143: PUSH
29144: LD_INT 21
29146: PUSH
29147: LD_INT 22
29149: PUSH
29150: LD_INT 23
29152: PUSH
29153: LD_INT 24
29155: PUSH
29156: EMPTY
29157: LIST
29158: LIST
29159: LIST
29160: LIST
29161: ST_TO_ADDR
29162: GO 29277
29164: LD_INT 52
29166: DOUBLE
29167: EQUAL
29168: IFTRUE 29172
29170: GO 29198
29172: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29173: LD_ADDR_VAR 0 3
29177: PUSH
29178: LD_INT 21
29180: PUSH
29181: LD_INT 22
29183: PUSH
29184: LD_INT 23
29186: PUSH
29187: LD_INT 24
29189: PUSH
29190: EMPTY
29191: LIST
29192: LIST
29193: LIST
29194: LIST
29195: ST_TO_ADDR
29196: GO 29277
29198: LD_INT 53
29200: DOUBLE
29201: EQUAL
29202: IFTRUE 29206
29204: GO 29224
29206: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29207: LD_ADDR_VAR 0 3
29211: PUSH
29212: LD_INT 23
29214: PUSH
29215: LD_INT 24
29217: PUSH
29218: EMPTY
29219: LIST
29220: LIST
29221: ST_TO_ADDR
29222: GO 29277
29224: LD_INT 46
29226: DOUBLE
29227: EQUAL
29228: IFTRUE 29232
29230: GO 29250
29232: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29233: LD_ADDR_VAR 0 3
29237: PUSH
29238: LD_INT 23
29240: PUSH
29241: LD_INT 24
29243: PUSH
29244: EMPTY
29245: LIST
29246: LIST
29247: ST_TO_ADDR
29248: GO 29277
29250: LD_INT 47
29252: DOUBLE
29253: EQUAL
29254: IFTRUE 29258
29256: GO 29276
29258: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29259: LD_ADDR_VAR 0 3
29263: PUSH
29264: LD_INT 23
29266: PUSH
29267: LD_INT 24
29269: PUSH
29270: EMPTY
29271: LIST
29272: LIST
29273: ST_TO_ADDR
29274: GO 29277
29276: POP
// result := ( chassis in result ) ;
29277: LD_ADDR_VAR 0 3
29281: PUSH
29282: LD_VAR 0 1
29286: PUSH
29287: LD_VAR 0 3
29291: IN
29292: ST_TO_ADDR
// end ;
29293: LD_VAR 0 3
29297: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29298: LD_INT 0
29300: PPUSH
29301: PPUSH
29302: PPUSH
29303: PPUSH
// uc_side = 0 ;
29304: LD_ADDR_OWVAR 20
29308: PUSH
29309: LD_INT 0
29311: ST_TO_ADDR
// uc_nation = 0 ;
29312: LD_ADDR_OWVAR 21
29316: PUSH
29317: LD_INT 0
29319: ST_TO_ADDR
// nat_area := nature_area ;
29320: LD_ADDR_VAR 0 4
29324: PUSH
29325: LD_INT 24
29327: ST_TO_ADDR
// InitHc ;
29328: CALL_OW 19
// for i = 1 to 4 do
29332: LD_ADDR_VAR 0 2
29336: PUSH
29337: DOUBLE
29338: LD_INT 1
29340: DEC
29341: ST_TO_ADDR
29342: LD_INT 4
29344: PUSH
29345: FOR_TO
29346: IFFALSE 29393
// begin hc_class = 18 ;
29348: LD_ADDR_OWVAR 28
29352: PUSH
29353: LD_INT 18
29355: ST_TO_ADDR
// hc_gallery =  ;
29356: LD_ADDR_OWVAR 33
29360: PUSH
29361: LD_STRING 
29363: ST_TO_ADDR
// animal := CreateHuman ;
29364: LD_ADDR_VAR 0 3
29368: PUSH
29369: CALL_OW 44
29373: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29374: LD_VAR 0 3
29378: PPUSH
29379: LD_VAR 0 4
29383: PPUSH
29384: LD_INT 0
29386: PPUSH
29387: CALL_OW 49
// end ;
29391: GO 29345
29393: POP
29394: POP
// for i = 1 to 3 do
29395: LD_ADDR_VAR 0 2
29399: PUSH
29400: DOUBLE
29401: LD_INT 1
29403: DEC
29404: ST_TO_ADDR
29405: LD_INT 3
29407: PUSH
29408: FOR_TO
29409: IFFALSE 29473
// begin hc_class = class_tiger ;
29411: LD_ADDR_OWVAR 28
29415: PUSH
29416: LD_INT 14
29418: ST_TO_ADDR
// hc_gallery =  ;
29419: LD_ADDR_OWVAR 33
29423: PUSH
29424: LD_STRING 
29426: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29427: LD_ADDR_OWVAR 35
29431: PUSH
29432: LD_INT 5
29434: NEG
29435: PPUSH
29436: LD_INT 5
29438: PPUSH
29439: CALL_OW 12
29443: ST_TO_ADDR
// animal := CreateHuman ;
29444: LD_ADDR_VAR 0 3
29448: PUSH
29449: CALL_OW 44
29453: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29454: LD_VAR 0 3
29458: PPUSH
29459: LD_VAR 0 4
29463: PPUSH
29464: LD_INT 0
29466: PPUSH
29467: CALL_OW 49
// end ;
29471: GO 29408
29473: POP
29474: POP
// for i = 1 to 3 do
29475: LD_ADDR_VAR 0 2
29479: PUSH
29480: DOUBLE
29481: LD_INT 1
29483: DEC
29484: ST_TO_ADDR
29485: LD_INT 3
29487: PUSH
29488: FOR_TO
29489: IFFALSE 29592
// begin hc_class = class_apeman ;
29491: LD_ADDR_OWVAR 28
29495: PUSH
29496: LD_INT 12
29498: ST_TO_ADDR
// hc_gallery =  ;
29499: LD_ADDR_OWVAR 33
29503: PUSH
29504: LD_STRING 
29506: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29507: LD_ADDR_OWVAR 35
29511: PUSH
29512: LD_INT 2
29514: NEG
29515: PPUSH
29516: LD_INT 2
29518: PPUSH
29519: CALL_OW 12
29523: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29524: LD_ADDR_OWVAR 31
29528: PUSH
29529: LD_INT 1
29531: PPUSH
29532: LD_INT 3
29534: PPUSH
29535: CALL_OW 12
29539: PUSH
29540: LD_INT 1
29542: PPUSH
29543: LD_INT 3
29545: PPUSH
29546: CALL_OW 12
29550: PUSH
29551: LD_INT 0
29553: PUSH
29554: LD_INT 0
29556: PUSH
29557: EMPTY
29558: LIST
29559: LIST
29560: LIST
29561: LIST
29562: ST_TO_ADDR
// animal := CreateHuman ;
29563: LD_ADDR_VAR 0 3
29567: PUSH
29568: CALL_OW 44
29572: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29573: LD_VAR 0 3
29577: PPUSH
29578: LD_VAR 0 4
29582: PPUSH
29583: LD_INT 0
29585: PPUSH
29586: CALL_OW 49
// end ;
29590: GO 29488
29592: POP
29593: POP
// for i = 1 to 3 do
29594: LD_ADDR_VAR 0 2
29598: PUSH
29599: DOUBLE
29600: LD_INT 1
29602: DEC
29603: ST_TO_ADDR
29604: LD_INT 3
29606: PUSH
29607: FOR_TO
29608: IFFALSE 29655
// begin hc_class = 13 ;
29610: LD_ADDR_OWVAR 28
29614: PUSH
29615: LD_INT 13
29617: ST_TO_ADDR
// hc_gallery =  ;
29618: LD_ADDR_OWVAR 33
29622: PUSH
29623: LD_STRING 
29625: ST_TO_ADDR
// animal := CreateHuman ;
29626: LD_ADDR_VAR 0 3
29630: PUSH
29631: CALL_OW 44
29635: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29636: LD_VAR 0 3
29640: PPUSH
29641: LD_VAR 0 4
29645: PPUSH
29646: LD_INT 0
29648: PPUSH
29649: CALL_OW 49
// end ;
29653: GO 29607
29655: POP
29656: POP
// for i = 1 to 3 do
29657: LD_ADDR_VAR 0 2
29661: PUSH
29662: DOUBLE
29663: LD_INT 1
29665: DEC
29666: ST_TO_ADDR
29667: LD_INT 3
29669: PUSH
29670: FOR_TO
29671: IFFALSE 29716
// begin hc_class = 20 ;
29673: LD_ADDR_OWVAR 28
29677: PUSH
29678: LD_INT 20
29680: ST_TO_ADDR
// hc_gallery =  ;
29681: LD_ADDR_OWVAR 33
29685: PUSH
29686: LD_STRING 
29688: ST_TO_ADDR
// animal := CreateHuman ;
29689: LD_ADDR_VAR 0 3
29693: PUSH
29694: CALL_OW 44
29698: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
29699: LD_VAR 0 3
29703: PPUSH
29704: LD_INT 4
29706: PPUSH
29707: LD_INT 0
29709: PPUSH
29710: CALL_OW 49
// end ;
29714: GO 29670
29716: POP
29717: POP
// end ; end_of_file
29718: LD_VAR 0 1
29722: RET
// export function Action ; begin
29723: LD_INT 0
29725: PPUSH
// InGameOn ;
29726: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
29730: LD_EXP 11
29734: PPUSH
29735: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
29739: LD_EXP 11
29743: PPUSH
29744: LD_STRING D1-JMM-1
29746: PPUSH
29747: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
29751: LD_EXP 12
29755: PPUSH
29756: LD_STRING D1-Roth-1
29758: PPUSH
29759: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
29763: LD_EXP 11
29767: PPUSH
29768: LD_STRING D1-JMM-2
29770: PPUSH
29771: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
29775: LD_EXP 12
29779: PPUSH
29780: LD_STRING D1-Roth-2
29782: PPUSH
29783: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
29787: LD_EXP 11
29791: PPUSH
29792: LD_STRING D1-JMM-3
29794: PPUSH
29795: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
29799: LD_EXP 12
29803: PPUSH
29804: LD_STRING D1-Roth-3
29806: PPUSH
29807: CALL_OW 88
// ComInvisible ( Roth ) ;
29811: LD_EXP 12
29815: PPUSH
29816: CALL_OW 152
// wait ( 0 0$1.3 ) ;
29820: LD_INT 46
29822: PPUSH
29823: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
29827: LD_EXP 11
29831: PPUSH
29832: LD_STRING D1-JMM-4
29834: PPUSH
29835: CALL_OW 88
// wait ( 0 0$0.3 ) ;
29839: LD_INT 10
29841: PPUSH
29842: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
29846: LD_EXP 12
29850: PPUSH
29851: LD_EXP 11
29855: PPUSH
29856: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
29860: LD_EXP 11
29864: PPUSH
29865: LD_STRING D1-JMM-4a
29867: PPUSH
29868: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
29872: LD_EXP 12
29876: PPUSH
29877: LD_STRING D1-Roth-4
29879: PPUSH
29880: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
29884: LD_EXP 11
29888: PPUSH
29889: LD_STRING D1-JMM-5
29891: PPUSH
29892: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
29896: LD_EXP 12
29900: PPUSH
29901: LD_STRING D1-Roth-5
29903: PPUSH
29904: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
29908: LD_EXP 11
29912: PPUSH
29913: LD_STRING D1-JMM-6
29915: PPUSH
29916: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
29920: LD_EXP 12
29924: PPUSH
29925: LD_STRING D1-Roth-6
29927: PPUSH
29928: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
29932: LD_EXP 11
29936: PPUSH
29937: LD_STRING D1-JMM-7
29939: PPUSH
29940: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
29944: LD_EXP 13
29948: PPUSH
29949: LD_EXP 11
29953: PPUSH
29954: CALL_OW 250
29958: PPUSH
29959: LD_EXP 11
29963: PPUSH
29964: CALL_OW 251
29968: PPUSH
29969: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
29973: LD_EXP 12
29977: PPUSH
29978: LD_STRING D1-Roth-7
29980: PPUSH
29981: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
29985: LD_INT 10
29987: PPUSH
29988: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
29992: LD_EXP 13
29996: PPUSH
29997: LD_EXP 11
30001: PPUSH
30002: CALL_OW 296
30006: PUSH
30007: LD_INT 6
30009: LESS
30010: IFFALSE 29985
// ComTurnUnit ( Powell , JMM ) ;
30012: LD_EXP 13
30016: PPUSH
30017: LD_EXP 11
30021: PPUSH
30022: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30026: LD_EXP 13
30030: PPUSH
30031: LD_STRING D1-Pow-7
30033: PPUSH
30034: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30038: LD_EXP 11
30042: PPUSH
30043: LD_EXP 13
30047: PPUSH
30048: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30052: LD_EXP 12
30056: PPUSH
30057: LD_EXP 13
30061: PPUSH
30062: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30066: LD_EXP 11
30070: PPUSH
30071: LD_STRING D1-JMM-8
30073: PPUSH
30074: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30078: LD_EXP 13
30082: PPUSH
30083: LD_STRING D1-Pow-8
30085: PPUSH
30086: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30090: LD_EXP 11
30094: PPUSH
30095: LD_STRING D1-JMM-9
30097: PPUSH
30098: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30102: LD_EXP 13
30106: PPUSH
30107: LD_INT 124
30109: PPUSH
30110: LD_INT 61
30112: PPUSH
30113: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30117: LD_INT 35
30119: PPUSH
30120: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30124: LD_EXP 11
30128: PPUSH
30129: LD_EXP 13
30133: PPUSH
30134: CALL_OW 296
30138: PUSH
30139: LD_INT 6
30141: GREATER
30142: IFFALSE 30117
// SayRadio ( Powell , D1-Pow-9 ) ;
30144: LD_EXP 13
30148: PPUSH
30149: LD_STRING D1-Pow-9
30151: PPUSH
30152: CALL_OW 94
// RemoveUnit ( Powell ) ;
30156: LD_EXP 13
30160: PPUSH
30161: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30165: LD_EXP 13
30169: PPUSH
30170: LD_INT 18
30172: PPUSH
30173: CALL_OW 52
// if Joan and not Joan in selected then
30177: LD_EXP 32
30181: PUSH
30182: LD_EXP 32
30186: PUSH
30187: LD_EXP 3
30191: IN
30192: NOT
30193: AND
30194: IFFALSE 30208
// SayRadio ( Joan , D1-Joan-9 ) ;
30196: LD_EXP 32
30200: PPUSH
30201: LD_STRING D1-Joan-9
30203: PPUSH
30204: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30208: LD_EXP 12
30212: PPUSH
30213: LD_EXP 11
30217: PPUSH
30218: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30222: LD_EXP 11
30226: PPUSH
30227: LD_EXP 12
30231: PPUSH
30232: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30236: LD_EXP 12
30240: PPUSH
30241: LD_STRING D1-Roth-9
30243: PPUSH
30244: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30248: LD_EXP 11
30252: PPUSH
30253: LD_STRING D1-JMM-10
30255: PPUSH
30256: CALL_OW 88
// InGameOff ;
30260: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30264: LD_STRING M1
30266: PPUSH
30267: CALL_OW 337
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30271: LD_INT 7
30273: PPUSH
30274: LD_INT 1
30276: PPUSH
30277: LD_INT 2
30279: PPUSH
30280: LD_INT 1
30282: PPUSH
30283: CALL_OW 80
// wait ( 0 0$3 ) ;
30287: LD_INT 105
30289: PPUSH
30290: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30294: LD_EXP 12
30298: PPUSH
30299: LD_INT 124
30301: PPUSH
30302: LD_INT 18
30304: PPUSH
30305: CALL_OW 111
// AddComInvisible ( Roth ) ;
30309: LD_EXP 12
30313: PPUSH
30314: CALL_OW 212
// AddComWait ( Roth , 1 1$30 ) ;
30318: LD_EXP 12
30322: PPUSH
30323: LD_INT 3150
30325: PPUSH
30326: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30330: LD_EXP 12
30334: PPUSH
30335: LD_INT 156
30337: PPUSH
30338: LD_INT 20
30340: PPUSH
30341: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30345: LD_EXP 12
30349: PPUSH
30350: LD_INT 178
30352: PPUSH
30353: LD_INT 42
30355: PPUSH
30356: CALL_OW 171
// AddComInvisible ( Roth ) ;
30360: LD_EXP 12
30364: PPUSH
30365: CALL_OW 212
// end ;
30369: LD_VAR 0 1
30373: RET
// every 0 0$1 do var i , tmp ;
30374: GO 30376
30376: DISABLE
30377: LD_INT 0
30379: PPUSH
30380: PPUSH
// begin tmp := selected union friends union others ;
30381: LD_ADDR_VAR 0 2
30385: PUSH
30386: LD_EXP 3
30390: PUSH
30391: LD_EXP 4
30395: UNION
30396: PUSH
30397: LD_EXP 5
30401: UNION
30402: ST_TO_ADDR
// if not tmp then
30403: LD_VAR 0 2
30407: NOT
30408: IFFALSE 30412
// exit ;
30410: GO 30484
// repeat wait ( 0 0$1 ) ;
30412: LD_INT 35
30414: PPUSH
30415: CALL_OW 67
// for i in tmp do
30419: LD_ADDR_VAR 0 1
30423: PUSH
30424: LD_VAR 0 2
30428: PUSH
30429: FOR_IN
30430: IFFALSE 30475
// if CanSpot ( JMM , i ) then
30432: LD_EXP 11
30436: PPUSH
30437: LD_VAR 0 1
30441: PPUSH
30442: CALL 27031 0 2
30446: IFFALSE 30473
// begin tmp := tmp diff i ;
30448: LD_ADDR_VAR 0 2
30452: PUSH
30453: LD_VAR 0 2
30457: PUSH
30458: LD_VAR 0 1
30462: DIFF
30463: ST_TO_ADDR
// Spot ( i ) ;
30464: LD_VAR 0 1
30468: PPUSH
30469: CALL 30487 0 1
// end ;
30473: GO 30429
30475: POP
30476: POP
// until not tmp ;
30477: LD_VAR 0 2
30481: NOT
30482: IFFALSE 30412
// end ;
30484: PPOPN 2
30486: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30487: LD_INT 0
30489: PPUSH
30490: PPUSH
30491: PPUSH
30492: PPUSH
// if not unit then
30493: LD_VAR 0 1
30497: NOT
30498: IFFALSE 30502
// exit ;
30500: GO 32391
// InGameOn ;
30502: CALL_OW 8
// side := GetSide ( JMM ) ;
30506: LD_ADDR_VAR 0 4
30510: PUSH
30511: LD_EXP 11
30515: PPUSH
30516: CALL_OW 255
30520: ST_TO_ADDR
// joined := false ;
30521: LD_ADDR_VAR 0 5
30525: PUSH
30526: LD_INT 0
30528: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30529: LD_ADDR_VAR 0 3
30533: PUSH
30534: LD_VAR 0 1
30538: PPUSH
30539: CALL_OW 310
30543: ST_TO_ADDR
// if building then
30544: LD_VAR 0 3
30548: IFFALSE 30607
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30550: LD_EXP 11
30554: PPUSH
30555: LD_VAR 0 1
30559: PPUSH
30560: CALL_OW 255
30564: PPUSH
30565: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30569: LD_EXP 11
30573: PPUSH
30574: LD_VAR 0 3
30578: PPUSH
30579: CALL_OW 120
// repeat wait ( 3 ) ;
30583: LD_INT 3
30585: PPUSH
30586: CALL_OW 67
// until IsInUnit ( JMM ) ;
30590: LD_EXP 11
30594: PPUSH
30595: CALL_OW 310
30599: IFFALSE 30583
// DialogueOn ;
30601: CALL_OW 6
// end else
30605: GO 30639
// begin ComTurnUnit ( JMM , unit ) ;
30607: LD_EXP 11
30611: PPUSH
30612: LD_VAR 0 1
30616: PPUSH
30617: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30621: LD_VAR 0 1
30625: PPUSH
30626: LD_EXP 11
30630: PPUSH
30631: CALL_OW 119
// DialogueOn ;
30635: CALL_OW 6
// end ; if unit = Joan then
30639: LD_VAR 0 1
30643: PUSH
30644: LD_EXP 32
30648: EQUAL
30649: IFFALSE 30759
// begin joined := true ;
30651: LD_ADDR_VAR 0 5
30655: PUSH
30656: LD_INT 1
30658: ST_TO_ADDR
// if Joan in selected then
30659: LD_EXP 32
30663: PUSH
30664: LD_EXP 3
30668: IN
30669: IFFALSE 30697
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
30671: LD_EXP 32
30675: PPUSH
30676: LD_STRING D3-Joan-Joan-1
30678: PPUSH
30679: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
30683: LD_EXP 11
30687: PPUSH
30688: LD_STRING D3-Joan-JMM-1
30690: PPUSH
30691: CALL_OW 88
// end else
30695: GO 30757
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
30697: LD_EXP 32
30701: PPUSH
30702: LD_STRING D4-Joan-Joan-1
30704: PPUSH
30705: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
30709: LD_EXP 11
30713: PPUSH
30714: LD_STRING D4-Joan-JMM-1
30716: PPUSH
30717: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
30721: LD_EXP 32
30725: PPUSH
30726: LD_STRING D4-Joan-Joan-2
30728: PPUSH
30729: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
30733: LD_EXP 11
30737: PPUSH
30738: LD_STRING D4-Joan-JMM-2
30740: PPUSH
30741: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
30745: LD_EXP 32
30749: PPUSH
30750: LD_STRING D4-Joan-Joan-3
30752: PPUSH
30753: CALL_OW 88
// end ; end else
30757: GO 32199
// if unit = Lisa then
30759: LD_VAR 0 1
30763: PUSH
30764: LD_EXP 19
30768: EQUAL
30769: IFFALSE 30961
// begin if Lisa in selected then
30771: LD_EXP 19
30775: PUSH
30776: LD_EXP 3
30780: IN
30781: IFFALSE 30894
// begin if GetSide ( Joan ) = 7 then
30783: LD_EXP 32
30787: PPUSH
30788: CALL_OW 255
30792: PUSH
30793: LD_INT 7
30795: EQUAL
30796: IFFALSE 30860
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
30798: LD_EXP 19
30802: PPUSH
30803: LD_STRING D3-LisaJ-Lisa-1
30805: PPUSH
30806: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
30810: LD_EXP 11
30814: PPUSH
30815: LD_STRING D3-LisaJ-JMM-1
30817: PPUSH
30818: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
30822: LD_EXP 19
30826: PPUSH
30827: LD_STRING D3-LisaJ-Lisa-2
30829: PPUSH
30830: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
30834: LD_EXP 11
30838: PPUSH
30839: LD_STRING D3-LisaJ-JMM-2
30841: PPUSH
30842: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
30846: LD_EXP 19
30850: PPUSH
30851: LD_STRING D3-LisaJ-Lisa-3
30853: PPUSH
30854: CALL_OW 88
// end else
30858: GO 30892
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
30860: LD_EXP 19
30864: PPUSH
30865: LD_STRING D3-LisaL-Lisa-1
30867: PPUSH
30868: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
30872: LD_EXP 11
30876: PPUSH
30877: LD_STRING D3-LisaL-JMM-1
30879: PPUSH
30880: CALL_OW 88
// joined := true ;
30884: LD_ADDR_VAR 0 5
30888: PUSH
30889: LD_INT 1
30891: ST_TO_ADDR
// end ; end else
30892: GO 30959
// begin if GetSide ( Joan ) = 7 then
30894: LD_EXP 32
30898: PPUSH
30899: CALL_OW 255
30903: PUSH
30904: LD_INT 7
30906: EQUAL
30907: IFFALSE 30947
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
30909: LD_EXP 19
30913: PPUSH
30914: LD_STRING D4-LisaJ-Lisa-1
30916: PPUSH
30917: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
30921: LD_EXP 11
30925: PPUSH
30926: LD_STRING D4-LisaJ-JMM-1
30928: PPUSH
30929: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
30933: LD_EXP 19
30937: PPUSH
30938: LD_STRING D4-LisaJ-Lisa-2
30940: PPUSH
30941: CALL_OW 88
// end else
30945: GO 30959
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
30947: LD_EXP 19
30951: PPUSH
30952: LD_STRING D4-LisaL-Lisa-1
30954: PPUSH
30955: CALL_OW 88
// end ; end ; end else
30959: GO 32199
// if unit = Frank then
30961: LD_VAR 0 1
30965: PUSH
30966: LD_EXP 29
30970: EQUAL
30971: IFFALSE 31111
// begin joined := true ;
30973: LD_ADDR_VAR 0 5
30977: PUSH
30978: LD_INT 1
30980: ST_TO_ADDR
// if Frank in selected then
30981: LD_EXP 29
30985: PUSH
30986: LD_EXP 3
30990: IN
30991: IFFALSE 31061
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
30993: LD_EXP 29
30997: PPUSH
30998: LD_STRING D3-Frank-Frank-1
31000: PPUSH
31001: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31005: LD_EXP 11
31009: PPUSH
31010: LD_STRING D3-Frank-JMM-1
31012: PPUSH
31013: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31017: LD_EXP 29
31021: PPUSH
31022: LD_STRING D3-Frank-Frank-2
31024: PPUSH
31025: CALL_OW 88
// if reached_lab then
31029: LD_EXP 6
31033: IFFALSE 31059
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31035: LD_EXP 11
31039: PPUSH
31040: LD_STRING D3-Frank-JMM-2
31042: PPUSH
31043: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31047: LD_EXP 29
31051: PPUSH
31052: LD_STRING D3-Frank-Frank-3
31054: PPUSH
31055: CALL_OW 88
// end ; end else
31059: GO 31109
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31061: LD_EXP 29
31065: PPUSH
31066: LD_STRING D4-Frank-Frank-1
31068: PPUSH
31069: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31073: LD_EXP 11
31077: PPUSH
31078: LD_STRING D4-Frank-JMM-1
31080: PPUSH
31081: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31085: LD_EXP 29
31089: PPUSH
31090: LD_STRING D4-Frank-Frank-2
31092: PPUSH
31093: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31097: LD_EXP 11
31101: PPUSH
31102: LD_STRING D4-Frank-JMM-2
31104: PPUSH
31105: CALL_OW 88
// end ; end else
31109: GO 32199
// if unit = Brown then
31111: LD_VAR 0 1
31115: PUSH
31116: LD_EXP 24
31120: EQUAL
31121: IFFALSE 31217
// begin if Brown in selected or gamma_commander = 2 then
31123: LD_EXP 24
31127: PUSH
31128: LD_EXP 3
31132: IN
31133: PUSH
31134: LD_EXP 10
31138: PUSH
31139: LD_INT 2
31141: EQUAL
31142: OR
31143: IFFALSE 31179
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31145: LD_EXP 24
31149: PPUSH
31150: LD_STRING D3-Soldier1-Sol1-1
31152: PPUSH
31153: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31157: LD_EXP 11
31161: PPUSH
31162: LD_STRING D3-Soldier1-JMM-1
31164: PPUSH
31165: CALL_OW 88
// joined := true ;
31169: LD_ADDR_VAR 0 5
31173: PUSH
31174: LD_INT 1
31176: ST_TO_ADDR
// end else
31177: GO 31215
// begin Say ( unit , D4-Soldier1-Sol1-1 ) ;
31179: LD_VAR 0 1
31183: PPUSH
31184: LD_STRING D4-Soldier1-Sol1-1
31186: PPUSH
31187: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31191: LD_EXP 11
31195: PPUSH
31196: LD_STRING D4-Soldier1-JMM-1
31198: PPUSH
31199: CALL_OW 88
// Say ( unit , D4-Soldier1-Sol1-2 ) ;
31203: LD_VAR 0 1
31207: PPUSH
31208: LD_STRING D4-Soldier1-Sol1-2
31210: PPUSH
31211: CALL_OW 88
// end ; end else
31215: GO 32199
// if unit = Donaldson then
31217: LD_VAR 0 1
31221: PUSH
31222: LD_EXP 20
31226: EQUAL
31227: IFFALSE 31323
// begin if Donaldson in selected or gamma_commander = 1 then
31229: LD_EXP 20
31233: PUSH
31234: LD_EXP 3
31238: IN
31239: PUSH
31240: LD_EXP 10
31244: PUSH
31245: LD_INT 1
31247: EQUAL
31248: OR
31249: IFFALSE 31285
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31251: LD_EXP 20
31255: PPUSH
31256: LD_STRING D3-Soldier2-FSol2-1
31258: PPUSH
31259: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31263: LD_EXP 11
31267: PPUSH
31268: LD_STRING D3-Soldier2-JMM-1
31270: PPUSH
31271: CALL_OW 88
// joined := true ;
31275: LD_ADDR_VAR 0 5
31279: PUSH
31280: LD_INT 1
31282: ST_TO_ADDR
// end else
31283: GO 31321
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31285: LD_VAR 0 1
31289: PPUSH
31290: LD_STRING D4-Soldier1-FSol1-1
31292: PPUSH
31293: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31297: LD_EXP 11
31301: PPUSH
31302: LD_STRING D4-Soldier1-JMM-1
31304: PPUSH
31305: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31309: LD_VAR 0 1
31313: PPUSH
31314: LD_STRING D4-Soldier1-FSol1-2
31316: PPUSH
31317: CALL_OW 88
// end ; end else
31321: GO 32199
// if unit = Cyrus then
31323: LD_VAR 0 1
31327: PUSH
31328: LD_EXP 22
31332: EQUAL
31333: IFFALSE 31407
// begin if Cyrus in selected then
31335: LD_EXP 22
31339: PUSH
31340: LD_EXP 3
31344: IN
31345: IFFALSE 31381
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31347: LD_EXP 22
31351: PPUSH
31352: LD_STRING D3-Cyrus-Cyrus-1
31354: PPUSH
31355: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31359: LD_EXP 11
31363: PPUSH
31364: LD_STRING D3-Cyrus-JMM-1
31366: PPUSH
31367: CALL_OW 88
// joined := true ;
31371: LD_ADDR_VAR 0 5
31375: PUSH
31376: LD_INT 1
31378: ST_TO_ADDR
// end else
31379: GO 31405
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31381: LD_EXP 22
31385: PPUSH
31386: LD_STRING D4-Cyrus-Cyrus-1
31388: PPUSH
31389: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31393: LD_EXP 11
31397: PPUSH
31398: LD_STRING D4-Cyrus-JMM-1
31400: PPUSH
31401: CALL_OW 88
// end ; end else
31405: GO 32199
// if unit = Bobby then
31407: LD_VAR 0 1
31411: PUSH
31412: LD_EXP 21
31416: EQUAL
31417: IFFALSE 31503
// begin if Bobby in selected then
31419: LD_EXP 21
31423: PUSH
31424: LD_EXP 3
31428: IN
31429: IFFALSE 31465
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31431: LD_EXP 21
31435: PPUSH
31436: LD_STRING D3-Bobby-Bobby-1
31438: PPUSH
31439: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31443: LD_EXP 11
31447: PPUSH
31448: LD_STRING D3-Bobby-JMM-1
31450: PPUSH
31451: CALL_OW 88
// joined := true ;
31455: LD_ADDR_VAR 0 5
31459: PUSH
31460: LD_INT 1
31462: ST_TO_ADDR
// end else
31463: GO 31501
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31465: LD_EXP 21
31469: PPUSH
31470: LD_STRING D4-Bobby-Bobby-1
31472: PPUSH
31473: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31477: LD_EXP 11
31481: PPUSH
31482: LD_STRING D4-Bobby-JMM-1
31484: PPUSH
31485: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31489: LD_EXP 21
31493: PPUSH
31494: LD_STRING D4-Bobby-Bobby-2
31496: PPUSH
31497: CALL_OW 88
// end ; end else
31501: GO 32199
// if unit = Cornel then
31503: LD_VAR 0 1
31507: PUSH
31508: LD_EXP 27
31512: EQUAL
31513: IFFALSE 31611
// begin if Cornel in selected then
31515: LD_EXP 27
31519: PUSH
31520: LD_EXP 3
31524: IN
31525: IFFALSE 31573
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31527: LD_EXP 27
31531: PPUSH
31532: LD_STRING D3-Mark-Corn-1
31534: PPUSH
31535: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31539: LD_EXP 11
31543: PPUSH
31544: LD_STRING D3-Mark-JMM-1
31546: PPUSH
31547: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31551: LD_EXP 27
31555: PPUSH
31556: LD_STRING D3-Mark-Corn-2
31558: PPUSH
31559: CALL_OW 88
// joined := true ;
31563: LD_ADDR_VAR 0 5
31567: PUSH
31568: LD_INT 1
31570: ST_TO_ADDR
// end else
31571: GO 31609
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31573: LD_EXP 27
31577: PPUSH
31578: LD_STRING D4-Mark-Corn-1
31580: PPUSH
31581: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31585: LD_EXP 11
31589: PPUSH
31590: LD_STRING D3-Joan-JMM-1
31592: PPUSH
31593: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31597: LD_EXP 27
31601: PPUSH
31602: LD_STRING D4-Mark-Corn-2
31604: PPUSH
31605: CALL_OW 88
// end ; end else
31609: GO 32199
// if unit = Gary then
31611: LD_VAR 0 1
31615: PUSH
31616: LD_EXP 28
31620: EQUAL
31621: IFFALSE 31705
// begin if Gary in selected then
31623: LD_EXP 28
31627: PUSH
31628: LD_EXP 3
31632: IN
31633: IFFALSE 31669
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
31635: LD_EXP 28
31639: PPUSH
31640: LD_STRING D3-Gary-Gary-1
31642: PPUSH
31643: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
31647: LD_EXP 11
31651: PPUSH
31652: LD_STRING D3-Gary-JMM-1
31654: PPUSH
31655: CALL_OW 88
// joined := true ;
31659: LD_ADDR_VAR 0 5
31663: PUSH
31664: LD_INT 1
31666: ST_TO_ADDR
// end else
31667: GO 31703
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
31669: LD_EXP 28
31673: PPUSH
31674: LD_STRING D4-Gary-Gary-1
31676: PPUSH
31677: CALL_OW 88
// SetSide ( Gary , 1 ) ;
31681: LD_EXP 28
31685: PPUSH
31686: LD_INT 1
31688: PPUSH
31689: CALL_OW 235
// DialogueOff ;
31693: CALL_OW 7
// InGameOff ;
31697: CALL_OW 9
// exit ;
31701: GO 32391
// end ; end else
31703: GO 32199
// if unit = Kikuchi then
31705: LD_VAR 0 1
31709: PUSH
31710: LD_EXP 30
31714: EQUAL
31715: IFFALSE 31799
// begin if Kikuchi in selected then
31717: LD_EXP 30
31721: PUSH
31722: LD_EXP 3
31726: IN
31727: IFFALSE 31763
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
31729: LD_EXP 30
31733: PPUSH
31734: LD_STRING D3-Yamako-Yam-1
31736: PPUSH
31737: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31741: LD_EXP 11
31745: PPUSH
31746: LD_STRING D3-Soldier2-JMM-1
31748: PPUSH
31749: CALL_OW 88
// joined := true ;
31753: LD_ADDR_VAR 0 5
31757: PUSH
31758: LD_INT 1
31760: ST_TO_ADDR
// end else
31761: GO 31797
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
31763: LD_EXP 30
31767: PPUSH
31768: LD_STRING D4-Yamako-Yam-1
31770: PPUSH
31771: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
31775: LD_EXP 30
31779: PPUSH
31780: LD_INT 1
31782: PPUSH
31783: CALL_OW 235
// DialogueOff ;
31787: CALL_OW 7
// InGameOff ;
31791: CALL_OW 9
// exit ;
31795: GO 32391
// end ; end else
31797: GO 32199
// if unit = Gladstone then
31799: LD_VAR 0 1
31803: PUSH
31804: LD_EXP 25
31808: EQUAL
31809: IFFALSE 31883
// begin if Gladstone in selected then
31811: LD_EXP 25
31815: PUSH
31816: LD_EXP 3
31820: IN
31821: IFFALSE 31857
// begin joined := true ;
31823: LD_ADDR_VAR 0 5
31827: PUSH
31828: LD_INT 1
31830: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
31831: LD_EXP 11
31835: PPUSH
31836: LD_STRING D3-Tim-JMM-1
31838: PPUSH
31839: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
31843: LD_EXP 25
31847: PPUSH
31848: LD_STRING D3-Tim-Glad-1
31850: PPUSH
31851: CALL_OW 88
// end else
31855: GO 31881
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
31857: LD_EXP 11
31861: PPUSH
31862: LD_STRING D4-Tim-JMM-1
31864: PPUSH
31865: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
31869: LD_EXP 25
31873: PPUSH
31874: LD_STRING D4-Tim-Glad-1
31876: PPUSH
31877: CALL_OW 88
// end ; end else
31881: GO 32199
// if unit = Denis then
31883: LD_VAR 0 1
31887: PUSH
31888: LD_EXP 23
31892: EQUAL
31893: IFFALSE 31929
// begin joined := true ;
31895: LD_ADDR_VAR 0 5
31899: PUSH
31900: LD_INT 1
31902: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
31903: LD_EXP 23
31907: PPUSH
31908: LD_STRING D3-Denis-Den-1
31910: PPUSH
31911: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
31915: LD_EXP 11
31919: PPUSH
31920: LD_STRING D3-Denis-JMM-1
31922: PPUSH
31923: CALL_OW 88
// end else
31927: GO 32199
// if unit = Simms then
31929: LD_VAR 0 1
31933: PUSH
31934: LD_EXP 31
31938: EQUAL
31939: IFFALSE 31975
// begin joined := true ;
31941: LD_ADDR_VAR 0 5
31945: PUSH
31946: LD_INT 1
31948: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
31949: LD_EXP 31
31953: PPUSH
31954: LD_STRING D3-Simms-Sim-1
31956: PPUSH
31957: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
31961: LD_EXP 11
31965: PPUSH
31966: LD_STRING D3-Simms-JMM-1
31968: PPUSH
31969: CALL_OW 88
// end else
31973: GO 32199
// if unit = DeltaDoctor then
31975: LD_VAR 0 1
31979: PUSH
31980: LD_EXP 33
31984: EQUAL
31985: IFFALSE 32021
// begin joined := true ;
31987: LD_ADDR_VAR 0 5
31991: PUSH
31992: LD_INT 1
31994: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
31995: LD_EXP 33
31999: PPUSH
32000: LD_STRING D3-Soldier1-Sol1-1
32002: PPUSH
32003: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32007: LD_EXP 11
32011: PPUSH
32012: LD_STRING D3-Soldier1-JMM-1
32014: PPUSH
32015: CALL_OW 88
// end else
32019: GO 32199
// begin joined := unit in selected ;
32021: LD_ADDR_VAR 0 5
32025: PUSH
32026: LD_VAR 0 1
32030: PUSH
32031: LD_EXP 3
32035: IN
32036: ST_TO_ADDR
// if joined then
32037: LD_VAR 0 5
32041: IFFALSE 32110
// begin if GetSex ( unit ) = sex_male then
32043: LD_VAR 0 1
32047: PPUSH
32048: CALL_OW 258
32052: PUSH
32053: LD_INT 1
32055: EQUAL
32056: IFFALSE 32084
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32058: LD_VAR 0 1
32062: PPUSH
32063: LD_STRING D3-Soldier1-Sol1-1
32065: PPUSH
32066: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32070: LD_EXP 11
32074: PPUSH
32075: LD_STRING D3-Soldier1-JMM-1
32077: PPUSH
32078: CALL_OW 88
// end else
32082: GO 32108
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32084: LD_VAR 0 1
32088: PPUSH
32089: LD_STRING D3-Soldier2-FSol2-1
32091: PPUSH
32092: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32096: LD_EXP 11
32100: PPUSH
32101: LD_STRING D3-Soldier2-JMM-1
32103: PPUSH
32104: CALL_OW 88
// end ; end else
32108: GO 32199
// begin if GetSex ( unit ) = sex_male then
32110: LD_VAR 0 1
32114: PPUSH
32115: CALL_OW 258
32119: PUSH
32120: LD_INT 1
32122: EQUAL
32123: IFFALSE 32163
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32125: LD_VAR 0 1
32129: PPUSH
32130: LD_STRING D4-Soldier2-Sol1-1
32132: PPUSH
32133: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32137: LD_EXP 11
32141: PPUSH
32142: LD_STRING D4-Soldier2-JMM-1
32144: PPUSH
32145: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32149: LD_VAR 0 1
32153: PPUSH
32154: LD_STRING D4-Soldier2-Sol2-1
32156: PPUSH
32157: CALL_OW 88
// end else
32161: GO 32199
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32163: LD_VAR 0 1
32167: PPUSH
32168: LD_STRING D4-Soldier1-FSol1-1
32170: PPUSH
32171: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32175: LD_EXP 11
32179: PPUSH
32180: LD_STRING D4-Soldier1-JMM-1
32182: PPUSH
32183: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32187: LD_VAR 0 1
32191: PPUSH
32192: LD_STRING D4-Soldier1-FSol1-2
32194: PPUSH
32195: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32199: CALL_OW 7
// InGameOff ;
32203: CALL_OW 9
// if building then
32207: LD_VAR 0 3
32211: IFFALSE 32312
// begin SetSide ( JMM , side ) ;
32213: LD_EXP 11
32217: PPUSH
32218: LD_VAR 0 4
32222: PPUSH
32223: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32227: LD_EXP 11
32231: PPUSH
32232: CALL_OW 122
// if joined then
32236: LD_VAR 0 5
32240: IFFALSE 32279
// begin SetSide ( unit , side ) ;
32242: LD_VAR 0 1
32246: PPUSH
32247: LD_VAR 0 4
32251: PPUSH
32252: CALL_OW 235
// SetSide ( building , 1 ) ;
32256: LD_VAR 0 3
32260: PPUSH
32261: LD_INT 1
32263: PPUSH
32264: CALL_OW 235
// ComExitBuilding ( unit ) ;
32268: LD_VAR 0 1
32272: PPUSH
32273: CALL_OW 122
// end else
32277: GO 32310
// begin wait ( 0 0$10 ) ;
32279: LD_INT 350
32281: PPUSH
32282: CALL_OW 67
// SetSide ( unit , 1 ) ;
32286: LD_VAR 0 1
32290: PPUSH
32291: LD_INT 1
32293: PPUSH
32294: CALL_OW 235
// SetSide ( building , 1 ) ;
32298: LD_VAR 0 3
32302: PPUSH
32303: LD_INT 1
32305: PPUSH
32306: CALL_OW 235
// end ; end else
32310: GO 32391
// begin ComStop ( [ JMM , unit ] ) ;
32312: LD_EXP 11
32316: PUSH
32317: LD_VAR 0 1
32321: PUSH
32322: EMPTY
32323: LIST
32324: LIST
32325: PPUSH
32326: CALL_OW 141
// if joined then
32330: LD_VAR 0 5
32334: IFFALSE 32352
// SetSide ( unit , side ) else
32336: LD_VAR 0 1
32340: PPUSH
32341: LD_VAR 0 4
32345: PPUSH
32346: CALL_OW 235
32350: GO 32391
// begin repeat wait ( 0 0$1 ) ;
32352: LD_INT 35
32354: PPUSH
32355: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32359: LD_EXP 11
32363: PPUSH
32364: LD_VAR 0 1
32368: PPUSH
32369: CALL_OW 296
32373: PUSH
32374: LD_INT 10
32376: GREATER
32377: IFFALSE 32352
// SetSide ( unit , 1 ) ;
32379: LD_VAR 0 1
32383: PPUSH
32384: LD_INT 1
32386: PPUSH
32387: CALL_OW 235
// end ; end ; end ;
32391: LD_VAR 0 2
32395: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32396: LD_EXP 11
32400: PPUSH
32401: CALL_OW 310
32405: PUSH
32406: LD_INT 47
32408: EQUAL
32409: IFFALSE 32477
32411: GO 32413
32413: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32414: LD_STRING M1a
32416: PPUSH
32417: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32421: LD_INT 13
32423: PPUSH
32424: LD_INT 1
32426: PPUSH
32427: LD_INT 2
32429: PPUSH
32430: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32434: LD_INT 29
32436: PPUSH
32437: LD_INT 1
32439: PPUSH
32440: LD_INT 2
32442: PPUSH
32443: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32447: LD_EXP 11
32451: PPUSH
32452: LD_INT 9
32454: PPUSH
32455: CALL_OW 336
// can_escape := true ;
32459: LD_ADDR_EXP 7
32463: PUSH
32464: LD_INT 1
32466: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32467: LD_INT 19
32469: PPUSH
32470: LD_INT 1
32472: PPUSH
32473: CALL_OW 424
// end ;
32477: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32478: LD_INT 22
32480: PUSH
32481: LD_INT 4
32483: PUSH
32484: EMPTY
32485: LIST
32486: LIST
32487: PUSH
32488: LD_INT 34
32490: PUSH
32491: LD_INT 12
32493: PUSH
32494: EMPTY
32495: LIST
32496: LIST
32497: PUSH
32498: EMPTY
32499: LIST
32500: LIST
32501: PPUSH
32502: CALL_OW 69
32506: IFFALSE 32588
32508: GO 32510
32510: DISABLE
32511: LD_INT 0
32513: PPUSH
// begin enable ;
32514: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32515: LD_ADDR_VAR 0 1
32519: PUSH
32520: LD_INT 22
32522: PUSH
32523: LD_INT 4
32525: PUSH
32526: EMPTY
32527: LIST
32528: LIST
32529: PUSH
32530: LD_INT 34
32532: PUSH
32533: LD_INT 12
32535: PUSH
32536: EMPTY
32537: LIST
32538: LIST
32539: PUSH
32540: EMPTY
32541: LIST
32542: LIST
32543: PPUSH
32544: CALL_OW 69
32548: PUSH
32549: FOR_IN
32550: IFFALSE 32586
// if GetDistUnits ( i , JMM ) < 6 then
32552: LD_VAR 0 1
32556: PPUSH
32557: LD_EXP 11
32561: PPUSH
32562: CALL_OW 296
32566: PUSH
32567: LD_INT 6
32569: LESS
32570: IFFALSE 32584
// SetSide ( i , 7 ) ;
32572: LD_VAR 0 1
32576: PPUSH
32577: LD_INT 7
32579: PPUSH
32580: CALL_OW 235
32584: GO 32549
32586: POP
32587: POP
// end ;
32588: PPOPN 1
32590: END
// every 0 0$01 trigger can_escape and FilterAllUnits ( [ f_side , 7 ] ) = FilterUnitsInArea ( escape_area , [ f_side , 7 ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32591: LD_EXP 7
32595: PUSH
32596: LD_INT 22
32598: PUSH
32599: LD_INT 7
32601: PUSH
32602: EMPTY
32603: LIST
32604: LIST
32605: PPUSH
32606: CALL_OW 69
32610: PUSH
32611: LD_INT 19
32613: PPUSH
32614: LD_INT 22
32616: PUSH
32617: LD_INT 7
32619: PUSH
32620: EMPTY
32621: LIST
32622: LIST
32623: PPUSH
32624: CALL_OW 70
32628: EQUAL
32629: AND
32630: PUSH
32631: LD_INT 3
32633: PPUSH
32634: CALL_OW 469
32638: NOT
32639: AND
32640: PUSH
32641: LD_INT 5
32643: PPUSH
32644: CALL_OW 469
32648: NOT
32649: AND
32650: IFFALSE 33756
32652: GO 32654
32654: DISABLE
32655: LD_INT 0
32657: PPUSH
32658: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
32659: LD_ADDR_VAR 0 1
32663: PUSH
32664: LD_EXP 3
32668: PPUSH
32669: LD_INT 22
32671: PUSH
32672: LD_INT 4
32674: PUSH
32675: EMPTY
32676: LIST
32677: LIST
32678: PUSH
32679: LD_INT 21
32681: PUSH
32682: LD_INT 1
32684: PUSH
32685: EMPTY
32686: LIST
32687: LIST
32688: PUSH
32689: EMPTY
32690: LIST
32691: LIST
32692: PPUSH
32693: CALL_OW 72
32697: PUSH
32698: LD_INT 0
32700: EQUAL
32701: ST_TO_ADDR
// if not all_taken then
32702: LD_VAR 0 1
32706: NOT
32707: IFFALSE 32849
// case query ( Q1 ) of 1 :
32709: LD_STRING Q1
32711: PPUSH
32712: CALL_OW 97
32716: PUSH
32717: LD_INT 1
32719: DOUBLE
32720: EQUAL
32721: IFTRUE 32725
32723: GO 32837
32725: POP
// begin repeat wait ( 0 0$1 ) ;
32726: LD_INT 35
32728: PPUSH
32729: CALL_OW 67
// until ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) and ( FilterAllUnits ( [ f_side , 7 ] ) = FilterUnitsInArea ( escape_area , [ f_side , 7 ] ) ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
32733: LD_EXP 3
32737: PPUSH
32738: LD_INT 22
32740: PUSH
32741: LD_INT 4
32743: PUSH
32744: EMPTY
32745: LIST
32746: LIST
32747: PUSH
32748: LD_INT 21
32750: PUSH
32751: LD_INT 1
32753: PUSH
32754: EMPTY
32755: LIST
32756: LIST
32757: PUSH
32758: EMPTY
32759: LIST
32760: LIST
32761: PPUSH
32762: CALL_OW 72
32766: PUSH
32767: LD_INT 0
32769: EQUAL
32770: PUSH
32771: LD_INT 22
32773: PUSH
32774: LD_INT 7
32776: PUSH
32777: EMPTY
32778: LIST
32779: LIST
32780: PPUSH
32781: CALL_OW 69
32785: PUSH
32786: LD_INT 19
32788: PPUSH
32789: LD_INT 22
32791: PUSH
32792: LD_INT 7
32794: PUSH
32795: EMPTY
32796: LIST
32797: LIST
32798: PPUSH
32799: CALL_OW 70
32803: EQUAL
32804: AND
32805: PUSH
32806: LD_INT 3
32808: PPUSH
32809: CALL_OW 469
32813: NOT
32814: AND
32815: PUSH
32816: LD_INT 5
32818: PPUSH
32819: CALL_OW 469
32823: NOT
32824: AND
32825: IFFALSE 32726
// all_taken := true ;
32827: LD_ADDR_VAR 0 1
32831: PUSH
32832: LD_INT 1
32834: ST_TO_ADDR
// end ; 2 :
32835: GO 32849
32837: LD_INT 2
32839: DOUBLE
32840: EQUAL
32841: IFTRUE 32845
32843: GO 32848
32845: POP
// ; end ;
32846: GO 32849
32848: POP
// if all_taken then
32849: LD_VAR 0 1
32853: IFFALSE 32867
// AddMedal ( All , 1 ) else
32855: LD_STRING All
32857: PPUSH
32858: LD_INT 1
32860: PPUSH
32861: CALL_OW 101
32865: GO 32878
// AddMedal ( All , - 1 ) ;
32867: LD_STRING All
32869: PPUSH
32870: LD_INT 1
32872: NEG
32873: PPUSH
32874: CALL_OW 101
// if team_kill_counter then
32878: LD_EXP 9
32882: IFFALSE 32897
// AddMedal ( Save , - 1 ) else
32884: LD_STRING Save
32886: PPUSH
32887: LD_INT 1
32889: NEG
32890: PPUSH
32891: CALL_OW 101
32895: GO 32907
// AddMedal ( Save , 1 ) ;
32897: LD_STRING Save
32899: PPUSH
32900: LD_INT 1
32902: PPUSH
32903: CALL_OW 101
// if friends_kill_counter then
32907: LD_EXP 8
32911: IFFALSE 32926
// AddMedal ( Friendship , - 1 ) else
32913: LD_STRING Friendship
32915: PPUSH
32916: LD_INT 1
32918: NEG
32919: PPUSH
32920: CALL_OW 101
32924: GO 32936
// AddMedal ( Friendship , 1 ) ;
32926: LD_STRING Friendship
32928: PPUSH
32929: LD_INT 1
32931: PPUSH
32932: CALL_OW 101
// tmp := FilterAllUnits ( [ [ f_side , 7 , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] ] ] ] ) ;
32936: LD_ADDR_VAR 0 2
32940: PUSH
32941: LD_INT 22
32943: PUSH
32944: LD_INT 7
32946: PUSH
32947: LD_INT 2
32949: PUSH
32950: LD_INT 25
32952: PUSH
32953: LD_INT 1
32955: PUSH
32956: EMPTY
32957: LIST
32958: LIST
32959: PUSH
32960: LD_INT 25
32962: PUSH
32963: LD_INT 2
32965: PUSH
32966: EMPTY
32967: LIST
32968: LIST
32969: PUSH
32970: LD_INT 25
32972: PUSH
32973: LD_INT 3
32975: PUSH
32976: EMPTY
32977: LIST
32978: LIST
32979: PUSH
32980: LD_INT 25
32982: PUSH
32983: LD_INT 4
32985: PUSH
32986: EMPTY
32987: LIST
32988: LIST
32989: PUSH
32990: LD_INT 25
32992: PUSH
32993: LD_INT 5
32995: PUSH
32996: EMPTY
32997: LIST
32998: LIST
32999: PUSH
33000: EMPTY
33001: LIST
33002: LIST
33003: LIST
33004: LIST
33005: LIST
33006: LIST
33007: PUSH
33008: EMPTY
33009: LIST
33010: LIST
33011: LIST
33012: PUSH
33013: EMPTY
33014: LIST
33015: PPUSH
33016: CALL_OW 69
33020: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33021: LD_VAR 0 2
33025: PUSH
33026: LD_EXP 12
33030: UNION
33031: PPUSH
33032: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33036: LD_EXP 11
33040: PPUSH
33041: LD_STRING 12a_JMM
33043: PPUSH
33044: CALL_OW 38
// if IsLive ( Roth ) then
33048: LD_EXP 12
33052: PPUSH
33053: CALL_OW 300
33057: IFFALSE 33071
// SaveCharacters ( Roth , 12a_Roth ) ;
33059: LD_EXP 12
33063: PPUSH
33064: LD_STRING 12a_Roth
33066: PPUSH
33067: CALL_OW 38
// if Lisa in tmp then
33071: LD_EXP 19
33075: PUSH
33076: LD_VAR 0 2
33080: IN
33081: IFFALSE 33097
// SaveCharacters ( Lisa , 12a_Lisa ) else
33083: LD_EXP 19
33087: PPUSH
33088: LD_STRING 12a_Lisa
33090: PPUSH
33091: CALL_OW 38
33095: GO 33115
// if Lisa then
33097: LD_EXP 19
33101: IFFALSE 33115
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33103: LD_EXP 19
33107: PPUSH
33108: LD_STRING 12p_Lisa
33110: PPUSH
33111: CALL_OW 38
// if Donaldson in tmp then
33115: LD_EXP 20
33119: PUSH
33120: LD_VAR 0 2
33124: IN
33125: IFFALSE 33141
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33127: LD_EXP 20
33131: PPUSH
33132: LD_STRING 12a_Donaldson
33134: PPUSH
33135: CALL_OW 38
33139: GO 33159
// if Donaldson then
33141: LD_EXP 20
33145: IFFALSE 33159
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33147: LD_EXP 20
33151: PPUSH
33152: LD_STRING 12p_Donaldson
33154: PPUSH
33155: CALL_OW 38
// if Bobby in tmp then
33159: LD_EXP 21
33163: PUSH
33164: LD_VAR 0 2
33168: IN
33169: IFFALSE 33185
// SaveCharacters ( Bobby , 12a_Bobby ) else
33171: LD_EXP 21
33175: PPUSH
33176: LD_STRING 12a_Bobby
33178: PPUSH
33179: CALL_OW 38
33183: GO 33203
// if Bobby then
33185: LD_EXP 21
33189: IFFALSE 33203
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33191: LD_EXP 21
33195: PPUSH
33196: LD_STRING 12p_Bobby
33198: PPUSH
33199: CALL_OW 38
// if Cyrus in tmp then
33203: LD_EXP 22
33207: PUSH
33208: LD_VAR 0 2
33212: IN
33213: IFFALSE 33229
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33215: LD_EXP 22
33219: PPUSH
33220: LD_STRING 12a_Cyrus
33222: PPUSH
33223: CALL_OW 38
33227: GO 33247
// if Cyrus then
33229: LD_EXP 22
33233: IFFALSE 33247
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33235: LD_EXP 22
33239: PPUSH
33240: LD_STRING 12p_Cyrus
33242: PPUSH
33243: CALL_OW 38
// if Denis in tmp then
33247: LD_EXP 23
33251: PUSH
33252: LD_VAR 0 2
33256: IN
33257: IFFALSE 33271
// SaveCharacters ( Denis , 12a_Denis ) ;
33259: LD_EXP 23
33263: PPUSH
33264: LD_STRING 12a_Denis
33266: PPUSH
33267: CALL_OW 38
// if Brown in tmp then
33271: LD_EXP 24
33275: PUSH
33276: LD_VAR 0 2
33280: IN
33281: IFFALSE 33297
// SaveCharacters ( Brown , 12a_Brown ) else
33283: LD_EXP 24
33287: PPUSH
33288: LD_STRING 12a_Brown
33290: PPUSH
33291: CALL_OW 38
33295: GO 33321
// if Brown in tmp then
33297: LD_EXP 24
33301: PUSH
33302: LD_VAR 0 2
33306: IN
33307: IFFALSE 33321
// SaveCharacters ( Brown , 12p_Brown ) ;
33309: LD_EXP 24
33313: PPUSH
33314: LD_STRING 12p_Brown
33316: PPUSH
33317: CALL_OW 38
// if Gladstone in tmp then
33321: LD_EXP 25
33325: PUSH
33326: LD_VAR 0 2
33330: IN
33331: IFFALSE 33347
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33333: LD_EXP 25
33337: PPUSH
33338: LD_STRING 12a_Gladstone
33340: PPUSH
33341: CALL_OW 38
33345: GO 33365
// if Gladstone then
33347: LD_EXP 25
33351: IFFALSE 33365
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33353: LD_EXP 25
33357: PPUSH
33358: LD_STRING 12p_Gladstone
33360: PPUSH
33361: CALL_OW 38
// if Houten in tmp then
33365: LD_EXP 26
33369: PUSH
33370: LD_VAR 0 2
33374: IN
33375: IFFALSE 33391
// SaveCharacters ( Houten , 12a_Houten ) else
33377: LD_EXP 26
33381: PPUSH
33382: LD_STRING 12a_Houten
33384: PPUSH
33385: CALL_OW 38
33389: GO 33409
// if Houten then
33391: LD_EXP 26
33395: IFFALSE 33409
// SaveCharacters ( Houten , 12p_Houten ) ;
33397: LD_EXP 26
33401: PPUSH
33402: LD_STRING 12p_Houten
33404: PPUSH
33405: CALL_OW 38
// if Cornel in tmp then
33409: LD_EXP 27
33413: PUSH
33414: LD_VAR 0 2
33418: IN
33419: IFFALSE 33435
// SaveCharacters ( Cornel , 12a_Cornel ) else
33421: LD_EXP 27
33425: PPUSH
33426: LD_STRING 12a_Cornel
33428: PPUSH
33429: CALL_OW 38
33433: GO 33453
// if Cornel then
33435: LD_EXP 27
33439: IFFALSE 33453
// SaveCharacters ( Cornel , 12p_Cornel ) ;
33441: LD_EXP 27
33445: PPUSH
33446: LD_STRING 12p_Cornel
33448: PPUSH
33449: CALL_OW 38
// if Gary in tmp then
33453: LD_EXP 28
33457: PUSH
33458: LD_VAR 0 2
33462: IN
33463: IFFALSE 33479
// SaveCharacters ( Gary , 12a_Gary ) else
33465: LD_EXP 28
33469: PPUSH
33470: LD_STRING 12a_Gary
33472: PPUSH
33473: CALL_OW 38
33477: GO 33497
// if Gary then
33479: LD_EXP 28
33483: IFFALSE 33497
// SaveCharacters ( Gary , 12p_Gary ) ;
33485: LD_EXP 28
33489: PPUSH
33490: LD_STRING 12p_Gary
33492: PPUSH
33493: CALL_OW 38
// if Kikuchi in tmp then
33497: LD_EXP 30
33501: PUSH
33502: LD_VAR 0 2
33506: IN
33507: IFFALSE 33523
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33509: LD_EXP 30
33513: PPUSH
33514: LD_STRING 12a_Kikuchi
33516: PPUSH
33517: CALL_OW 38
33521: GO 33541
// if Kikuchi then
33523: LD_EXP 30
33527: IFFALSE 33541
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
33529: LD_EXP 30
33533: PPUSH
33534: LD_STRING 12p_Kikuchi
33536: PPUSH
33537: CALL_OW 38
// if Simms in tmp then
33541: LD_EXP 31
33545: PUSH
33546: LD_VAR 0 2
33550: IN
33551: IFFALSE 33565
// SaveCharacters ( Simms , 12a_Simms ) ;
33553: LD_EXP 31
33557: PPUSH
33558: LD_STRING 12a_Simms
33560: PPUSH
33561: CALL_OW 38
// if Joan in tmp then
33565: LD_EXP 32
33569: PUSH
33570: LD_VAR 0 2
33574: IN
33575: IFFALSE 33589
// SaveCharacters ( Joan , 12a_Joan ) ;
33577: LD_EXP 32
33581: PPUSH
33582: LD_STRING 12a_Joan
33584: PPUSH
33585: CALL_OW 38
// if DeltaDoctor in tmp then
33589: LD_EXP 33
33593: PUSH
33594: LD_VAR 0 2
33598: IN
33599: IFFALSE 33613
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
33601: LD_EXP 33
33605: PPUSH
33606: LD_STRING 12a_DeltaDoctor
33608: PPUSH
33609: CALL_OW 38
// tmp := tmp diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
33613: LD_ADDR_VAR 0 2
33617: PUSH
33618: LD_VAR 0 2
33622: PUSH
33623: LD_EXP 19
33627: PUSH
33628: LD_EXP 20
33632: PUSH
33633: LD_EXP 21
33637: PUSH
33638: LD_EXP 22
33642: PUSH
33643: LD_EXP 23
33647: PUSH
33648: LD_EXP 24
33652: PUSH
33653: LD_EXP 25
33657: PUSH
33658: LD_EXP 26
33662: PUSH
33663: LD_EXP 27
33667: PUSH
33668: LD_EXP 28
33672: PUSH
33673: LD_EXP 29
33677: PUSH
33678: LD_EXP 30
33682: PUSH
33683: LD_EXP 31
33687: PUSH
33688: LD_EXP 32
33692: PUSH
33693: LD_EXP 33
33697: PUSH
33698: EMPTY
33699: LIST
33700: LIST
33701: LIST
33702: LIST
33703: LIST
33704: LIST
33705: LIST
33706: LIST
33707: LIST
33708: LIST
33709: LIST
33710: LIST
33711: LIST
33712: LIST
33713: LIST
33714: DIFF
33715: ST_TO_ADDR
// if tmp then
33716: LD_VAR 0 2
33720: IFFALSE 33734
// SaveCharacters ( tmp , 12a_others ) ;
33722: LD_VAR 0 2
33726: PPUSH
33727: LD_STRING 12a_others
33729: PPUSH
33730: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
33734: LD_EXP 5
33738: PUSH
33739: LD_VAR 0 2
33743: DIFF
33744: PPUSH
33745: LD_STRING 12p_others
33747: PPUSH
33748: CALL_OW 38
// YouWin ;
33752: CALL_OW 103
// end ; end_of_file
33756: PPOPN 2
33758: END
// on SailEvent ( event ) do var tmp ;
33759: LD_INT 0
33761: PPUSH
// begin if event = 1 then
33762: LD_VAR 0 1
33766: PUSH
33767: LD_INT 1
33769: EQUAL
33770: IFFALSE 33843
// begin if not mobile_patrol then
33772: LD_EXP 14
33776: NOT
33777: IFFALSE 33781
// exit ;
33779: GO 33843
// tmp := mobile_patrol [ mobile_patrol ] ;
33781: LD_ADDR_VAR 0 2
33785: PUSH
33786: LD_EXP 14
33790: PUSH
33791: LD_EXP 14
33795: ARRAY
33796: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
33797: LD_ADDR_EXP 14
33801: PUSH
33802: LD_EXP 14
33806: PPUSH
33807: LD_EXP 14
33811: PPUSH
33812: CALL_OW 3
33816: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
33817: LD_VAR 0 2
33821: PPUSH
33822: LD_EXP 15
33826: PUSH
33827: LD_EXP 14
33831: PUSH
33832: LD_INT 1
33834: PLUS
33835: ARRAY
33836: PPUSH
33837: EMPTY
33838: PPUSH
33839: CALL 5888 0 3
// end ; end ;
33843: PPOPN 2
33845: END
// on UnitDestroyed ( un ) do begin if un = JMM then
33846: LD_VAR 0 1
33850: PUSH
33851: LD_EXP 11
33855: EQUAL
33856: IFFALSE 33865
// YouLost ( JMM ) ;
33858: LD_STRING JMM
33860: PPUSH
33861: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
33865: LD_VAR 0 1
33869: PPUSH
33870: CALL_OW 255
33874: PUSH
33875: LD_INT 7
33877: EQUAL
33878: PUSH
33879: LD_VAR 0 1
33883: PPUSH
33884: CALL_OW 264
33888: PUSH
33889: LD_INT 12
33891: EQUAL
33892: AND
33893: IFFALSE 33902
// YouLost ( Artifact ) ;
33895: LD_STRING Artifact
33897: PPUSH
33898: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
33902: LD_VAR 0 1
33906: PPUSH
33907: CALL_OW 255
33911: PUSH
33912: LD_INT 7
33914: EQUAL
33915: PUSH
33916: LD_VAR 0 1
33920: PPUSH
33921: CALL_OW 247
33925: PUSH
33926: LD_INT 1
33928: EQUAL
33929: AND
33930: IFFALSE 33946
// team_kill_counter := team_kill_counter + 1 ;
33932: LD_ADDR_EXP 9
33936: PUSH
33937: LD_EXP 9
33941: PUSH
33942: LD_INT 1
33944: PLUS
33945: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
33946: LD_VAR 0 1
33950: PPUSH
33951: CALL_OW 255
33955: PUSH
33956: LD_INT 1
33958: EQUAL
33959: PUSH
33960: LD_VAR 0 1
33964: PPUSH
33965: CALL_OW 247
33969: PUSH
33970: LD_INT 1
33972: EQUAL
33973: AND
33974: IFFALSE 33990
// friends_kill_counter := friends_kill_counter + 1 ;
33976: LD_ADDR_EXP 8
33980: PUSH
33981: LD_EXP 8
33985: PUSH
33986: LD_INT 1
33988: PLUS
33989: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
33990: LD_VAR 0 1
33994: PPUSH
33995: CALL_OW 255
33999: PUSH
34000: LD_INT 1
34002: NONEQUAL
34003: IFFALSE 34007
// exit ;
34005: GO 34084
// if GetControl ( un ) = control_remote then
34007: LD_VAR 0 1
34011: PPUSH
34012: CALL_OW 263
34016: PUSH
34017: LD_INT 2
34019: EQUAL
34020: IFFALSE 34038
// defenders := defenders diff un ;
34022: LD_ADDR_EXP 17
34026: PUSH
34027: LD_EXP 17
34031: PUSH
34032: LD_VAR 0 1
34036: DIFF
34037: ST_TO_ADDR
// if not un in defenders then
34038: LD_VAR 0 1
34042: PUSH
34043: LD_EXP 17
34047: IN
34048: NOT
34049: IFFALSE 34084
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34051: LD_ADDR_EXP 18
34055: PUSH
34056: LD_VAR 0 1
34060: PPUSH
34061: CALL_OW 250
34065: PUSH
34066: LD_VAR 0 1
34070: PPUSH
34071: CALL_OW 251
34075: PUSH
34076: EMPTY
34077: LIST
34078: LIST
34079: ST_TO_ADDR
// Defend ;
34080: CALL 2367 0 0
// end ; end ;
34084: PPOPN 1
34086: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34087: LD_VAR 0 1
34091: PPUSH
34092: CALL_OW 255
34096: PUSH
34097: LD_INT 1
34099: NONEQUAL
34100: IFFALSE 34104
// exit ;
34102: GO 34128
// if GetControl ( veh ) = control_remote then
34104: LD_VAR 0 1
34108: PPUSH
34109: CALL_OW 263
34113: PUSH
34114: LD_INT 2
34116: EQUAL
34117: IFFALSE 34128
// Connect ( veh ) ;
34119: LD_VAR 0 1
34123: PPUSH
34124: CALL 5083 0 1
// end ;
34128: PPOPN 2
34130: END
// on UnitGoesToRed ( un ) do var i , veh ;
34131: LD_INT 0
34133: PPUSH
34134: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34135: LD_VAR 0 1
34139: PPUSH
34140: CALL_OW 255
34144: PUSH
34145: LD_INT 1
34147: EQUAL
34148: PUSH
34149: LD_VAR 0 1
34153: PPUSH
34154: CALL_OW 263
34158: PUSH
34159: LD_INT 2
34161: EQUAL
34162: AND
34163: IFFALSE 34174
// ComUnlink ( un ) ;
34165: LD_VAR 0 1
34169: PPUSH
34170: CALL_OW 136
// if un = ambar0 then
34174: LD_VAR 0 1
34178: PUSH
34179: LD_INT 18
34181: EQUAL
34182: IFFALSE 34292
// begin uc_side := 1 ;
34184: LD_ADDR_OWVAR 20
34188: PUSH
34189: LD_INT 1
34191: ST_TO_ADDR
// uc_nation := 1 ;
34192: LD_ADDR_OWVAR 21
34196: PUSH
34197: LD_INT 1
34199: ST_TO_ADDR
// for i = 1 to 6 do
34200: LD_ADDR_VAR 0 2
34204: PUSH
34205: DOUBLE
34206: LD_INT 1
34208: DEC
34209: ST_TO_ADDR
34210: LD_INT 6
34212: PUSH
34213: FOR_TO
34214: IFFALSE 34290
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34216: LD_INT 3
34218: PPUSH
34219: LD_INT 1
34221: PPUSH
34222: LD_INT 3
34224: PPUSH
34225: LD_INT 4
34227: PPUSH
34228: LD_INT 100
34230: PPUSH
34231: CALL 4847 0 5
// veh := CreateVehicle ;
34235: LD_ADDR_VAR 0 3
34239: PUSH
34240: CALL_OW 45
34244: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34245: LD_VAR 0 3
34249: PPUSH
34250: LD_INT 1
34252: PPUSH
34253: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34257: LD_VAR 0 3
34261: PPUSH
34262: LD_INT 25
34264: PPUSH
34265: LD_INT 0
34267: PPUSH
34268: CALL_OW 49
// defenders := defenders ^ veh ;
34272: LD_ADDR_EXP 17
34276: PUSH
34277: LD_EXP 17
34281: PUSH
34282: LD_VAR 0 3
34286: ADD
34287: ST_TO_ADDR
// end ;
34288: GO 34213
34290: POP
34291: POP
// end ; end ;
34292: PPOPN 3
34294: END
