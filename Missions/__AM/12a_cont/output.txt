// starting begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 30041 0 0
// PrepareAlliance ;
  12: CALL 218 0 0
// PrepareFriends ;
  16: CALL 3138 0 0
// PrepareAmerican ;
  20: CALL 655 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 14
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 12
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30466 0 0
// PreparePatrol ;
 103: CALL 1003 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , reached_lab , can_escape , on_hill , friends_kill_counter , team_kill_counter , gamma_commander , extra_patrol ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 5
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 6
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// extra_patrol := true ;
 197: LD_ADDR_EXP 11
 201: PUSH
 202: LD_INT 1
 204: ST_TO_ADDR
// on_hill := false ;
 205: LD_ADDR_EXP 7
 209: PUSH
 210: LD_INT 0
 212: ST_TO_ADDR
// end ; end_of_file
 213: LD_VAR 0 1
 217: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 218: LD_INT 0
 220: PPUSH
 221: PPUSH
// uc_side := 7 ;
 222: LD_ADDR_OWVAR 20
 226: PUSH
 227: LD_INT 7
 229: ST_TO_ADDR
// uc_nation := 1 ;
 230: LD_ADDR_OWVAR 21
 234: PUSH
 235: LD_INT 1
 237: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 238: LD_ADDR_EXP 12
 242: PUSH
 243: LD_STRING JMM
 245: PPUSH
 246: LD_EXP 1
 250: NOT
 251: PPUSH
 252: LD_STRING 11_
 254: PPUSH
 255: CALL 5465 0 3
 259: ST_TO_ADDR
// uc_side := 4 ;
 260: LD_ADDR_OWVAR 20
 264: PUSH
 265: LD_INT 4
 267: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 268: LD_ADDR_EXP 13
 272: PUSH
 273: LD_STRING Roth
 275: PPUSH
 276: CALL_OW 25
 280: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 281: LD_EXP 12
 285: PPUSH
 286: LD_INT 1
 288: PPUSH
 289: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 293: LD_EXP 12
 297: PPUSH
 298: LD_INT 1
 300: PPUSH
 301: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 305: LD_EXP 12
 309: PPUSH
 310: LD_INT 105
 312: PPUSH
 313: LD_INT 10
 315: PPUSH
 316: LD_INT 0
 318: PPUSH
 319: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 323: LD_EXP 13
 327: PPUSH
 328: LD_INT 4
 330: PPUSH
 331: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 335: LD_EXP 13
 339: PPUSH
 340: LD_INT 109
 342: PPUSH
 343: LD_INT 10
 345: PPUSH
 346: LD_INT 0
 348: PPUSH
 349: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 353: LD_EXP 12
 357: PPUSH
 358: LD_EXP 13
 362: PPUSH
 363: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 367: LD_EXP 13
 371: PPUSH
 372: LD_EXP 12
 376: PPUSH
 377: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 381: LD_INT 3
 383: PPUSH
 384: LD_INT 3
 386: PPUSH
 387: LD_INT 3
 389: PPUSH
 390: LD_INT 12
 392: PPUSH
 393: LD_INT 100
 395: PPUSH
 396: CALL 5528 0 5
// cargo := CreateVehicle ;
 400: LD_ADDR_VAR 0 2
 404: PUSH
 405: CALL_OW 45
 409: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 410: LD_VAR 0 2
 414: PPUSH
 415: LD_INT 1
 417: PPUSH
 418: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 422: LD_VAR 0 2
 426: PPUSH
 427: LD_INT 179
 429: PPUSH
 430: LD_INT 45
 432: PPUSH
 433: LD_INT 0
 435: PPUSH
 436: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 440: LD_VAR 0 2
 444: PPUSH
 445: LD_INT 4
 447: PPUSH
 448: LD_INT 30
 450: PPUSH
 451: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 455: LD_STRING 11_artifact_captured
 457: PPUSH
 458: LD_INT 0
 460: PPUSH
 461: CALL_OW 30
 465: IFFALSE 522
// begin cargo := CreateVehicle ;
 467: LD_ADDR_VAR 0 2
 471: PUSH
 472: CALL_OW 45
 476: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 477: LD_VAR 0 2
 481: PPUSH
 482: LD_INT 0
 484: PPUSH
 485: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 489: LD_VAR 0 2
 493: PPUSH
 494: LD_INT 171
 496: PPUSH
 497: LD_INT 85
 499: PPUSH
 500: LD_INT 0
 502: PPUSH
 503: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 507: LD_VAR 0 2
 511: PPUSH
 512: LD_INT 4
 514: PPUSH
 515: LD_INT 50
 517: PPUSH
 518: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 522: LD_INT 47
 524: PPUSH
 525: LD_INT 7
 527: PPUSH
 528: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 532: LD_INT 1
 534: PPUSH
 535: LD_INT 47
 537: PPUSH
 538: CALL_OW 471
// end ;
 542: LD_VAR 0 1
 546: RET
// every 0 0$1 trigger FilterUnitsInArea ( hill , [ f_side , 7 ] ) and not on_hill do
 547: LD_INT 38
 549: PPUSH
 550: LD_INT 22
 552: PUSH
 553: LD_INT 7
 555: PUSH
 556: EMPTY
 557: LIST
 558: LIST
 559: PPUSH
 560: CALL_OW 70
 564: PUSH
 565: LD_EXP 7
 569: NOT
 570: AND
 571: IFFALSE 602
 573: GO 575
 575: DISABLE
// begin enable ;
 576: ENABLE
// on_hill := true ;
 577: LD_ADDR_EXP 7
 581: PUSH
 582: LD_INT 1
 584: ST_TO_ADDR
// PlaceSeeing ( 126 , 13 , 7 , - 90 ) ;
 585: LD_INT 126
 587: PPUSH
 588: LD_INT 13
 590: PPUSH
 591: LD_INT 7
 593: PPUSH
 594: LD_INT 90
 596: NEG
 597: PPUSH
 598: CALL_OW 330
// end ;
 602: END
// every 0 0$1 trigger not FilterUnitsInArea ( hill , [ f_side , 7 ] ) and on_hill do
 603: LD_INT 38
 605: PPUSH
 606: LD_INT 22
 608: PUSH
 609: LD_INT 7
 611: PUSH
 612: EMPTY
 613: LIST
 614: LIST
 615: PPUSH
 616: CALL_OW 70
 620: NOT
 621: PUSH
 622: LD_EXP 7
 626: AND
 627: IFFALSE 654
 629: GO 631
 631: DISABLE
// begin enable ;
 632: ENABLE
// on_hill := false ;
 633: LD_ADDR_EXP 7
 637: PUSH
 638: LD_INT 0
 640: ST_TO_ADDR
// RemoveSeeing ( 126 , 13 , 7 ) ;
 641: LD_INT 126
 643: PPUSH
 644: LD_INT 13
 646: PPUSH
 647: LD_INT 7
 649: PPUSH
 650: CALL_OW 331
// end ; end_of_file
 654: END
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 655: LD_INT 0
 657: PPUSH
 658: PPUSH
 659: PPUSH
 660: PPUSH
 661: PPUSH
// defcon := 0 ;
 662: LD_ADDR_EXP 19
 666: PUSH
 667: LD_INT 0
 669: ST_TO_ADDR
// defcon_wave := 0 ;
 670: LD_ADDR_EXP 20
 674: PUSH
 675: LD_INT 0
 677: ST_TO_ADDR
// defenders := [ ] ;
 678: LD_ADDR_EXP 18
 682: PUSH
 683: EMPTY
 684: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 685: LD_INT 5
 687: PPUSH
 688: LD_STRING alpha
 690: PPUSH
 691: CALL_OW 500
// uc_side := 1 ;
 695: LD_ADDR_OWVAR 20
 699: PUSH
 700: LD_INT 1
 702: ST_TO_ADDR
// uc_nation := 1 ;
 703: LD_ADDR_OWVAR 21
 707: PUSH
 708: LD_INT 1
 710: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 711: LD_ADDR_EXP 14
 715: PUSH
 716: LD_STRING Powell
 718: PPUSH
 719: CALL_OW 25
 723: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 724: LD_EXP 14
 728: PPUSH
 729: LD_INT 110
 731: PPUSH
 732: LD_INT 26
 734: PPUSH
 735: LD_INT 0
 737: PPUSH
 738: CALL_OW 48
// ComHold ( Powell ) ;
 742: LD_EXP 14
 746: PPUSH
 747: CALL_OW 140
// for i = 1 to 5 do
 751: LD_ADDR_VAR 0 2
 755: PUSH
 756: DOUBLE
 757: LD_INT 1
 759: DEC
 760: ST_TO_ADDR
 761: LD_INT 5
 763: PUSH
 764: FOR_TO
 765: IFFALSE 821
// begin PrepareHuman ( false , 1 , 10 ) ;
 767: LD_INT 0
 769: PPUSH
 770: LD_INT 1
 772: PPUSH
 773: LD_INT 10
 775: PPUSH
 776: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 780: LD_ADDR_EXP 17
 784: PUSH
 785: LD_EXP 17
 789: PPUSH
 790: LD_INT 1
 792: PPUSH
 793: CALL_OW 44
 797: PPUSH
 798: CALL_OW 2
 802: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 803: LD_EXP 17
 807: PUSH
 808: LD_INT 1
 810: ARRAY
 811: PPUSH
 812: LD_INT 18
 814: PPUSH
 815: CALL_OW 52
// end ;
 819: GO 764
 821: POP
 822: POP
// if Difficulty > 2 then
 823: LD_OWVAR 67
 827: PUSH
 828: LD_INT 2
 830: GREATER
 831: IFFALSE 880
// begin bc_type := b_turret ;
 833: LD_ADDR_OWVAR 42
 837: PUSH
 838: LD_INT 33
 840: ST_TO_ADDR
// bc_level := 7 ;
 841: LD_ADDR_OWVAR 43
 845: PUSH
 846: LD_INT 7
 848: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 849: LD_ADDR_VAR 0 4
 853: PUSH
 854: LD_INT 107
 856: PPUSH
 857: LD_INT 55
 859: PPUSH
 860: LD_INT 5
 862: PPUSH
 863: CALL_OW 47
 867: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 868: LD_VAR 0 4
 872: PPUSH
 873: LD_INT 7
 875: PPUSH
 876: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 880: LD_ADDR_VAR 0 2
 884: PUSH
 885: LD_INT 22
 887: PUSH
 888: LD_INT 1
 890: PUSH
 891: EMPTY
 892: LIST
 893: LIST
 894: PUSH
 895: LD_INT 30
 897: PUSH
 898: LD_INT 3
 900: PUSH
 901: EMPTY
 902: LIST
 903: LIST
 904: PUSH
 905: EMPTY
 906: LIST
 907: LIST
 908: PPUSH
 909: CALL_OW 69
 913: PUSH
 914: LD_INT 22
 916: PUSH
 917: LD_INT 1
 919: PUSH
 920: EMPTY
 921: LIST
 922: LIST
 923: PUSH
 924: LD_INT 30
 926: PUSH
 927: LD_INT 36
 929: PUSH
 930: EMPTY
 931: LIST
 932: LIST
 933: PUSH
 934: EMPTY
 935: LIST
 936: LIST
 937: PPUSH
 938: CALL_OW 69
 942: ADD
 943: PUSH
 944: FOR_IN
 945: IFFALSE 996
// for j = 1 to 3 do
 947: LD_ADDR_VAR 0 3
 951: PUSH
 952: DOUBLE
 953: LD_INT 1
 955: DEC
 956: ST_TO_ADDR
 957: LD_INT 3
 959: PUSH
 960: FOR_TO
 961: IFFALSE 992
// begin PrepareHuman ( false , 3 , 6 ) ;
 963: LD_INT 0
 965: PPUSH
 966: LD_INT 3
 968: PPUSH
 969: LD_INT 6
 971: PPUSH
 972: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 976: CALL_OW 44
 980: PPUSH
 981: LD_VAR 0 2
 985: PPUSH
 986: CALL_OW 52
// end ;
 990: GO 960
 992: POP
 993: POP
 994: GO 944
 996: POP
 997: POP
// end ;
 998: LD_VAR 0 1
1002: RET
// export function PreparePatrol ; var i , un ; begin
1003: LD_INT 0
1005: PPUSH
1006: PPUSH
1007: PPUSH
// uc_side := 1 ;
1008: LD_ADDR_OWVAR 20
1012: PUSH
1013: LD_INT 1
1015: ST_TO_ADDR
// uc_nation := 1 ;
1016: LD_ADDR_OWVAR 21
1020: PUSH
1021: LD_INT 1
1023: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
1024: LD_ADDR_EXP 16
1028: PUSH
1029: LD_INT 99
1031: PUSH
1032: LD_INT 55
1034: PUSH
1035: EMPTY
1036: LIST
1037: LIST
1038: PUSH
1039: LD_INT 113
1041: PUSH
1042: LD_INT 67
1044: PUSH
1045: EMPTY
1046: LIST
1047: LIST
1048: PUSH
1049: LD_INT 129
1051: PUSH
1052: LD_INT 68
1054: PUSH
1055: EMPTY
1056: LIST
1057: LIST
1058: PUSH
1059: LD_INT 135
1061: PUSH
1062: LD_INT 62
1064: PUSH
1065: EMPTY
1066: LIST
1067: LIST
1068: PUSH
1069: LD_INT 103
1071: PUSH
1072: LD_INT 41
1074: PUSH
1075: EMPTY
1076: LIST
1077: LIST
1078: PUSH
1079: EMPTY
1080: LIST
1081: LIST
1082: LIST
1083: LIST
1084: LIST
1085: PUSH
1086: LD_INT 27
1088: PUSH
1089: LD_INT 49
1091: PUSH
1092: EMPTY
1093: LIST
1094: LIST
1095: PUSH
1096: LD_INT 46
1098: PUSH
1099: LD_INT 49
1101: PUSH
1102: EMPTY
1103: LIST
1104: LIST
1105: PUSH
1106: LD_INT 87
1108: PUSH
1109: LD_INT 70
1111: PUSH
1112: EMPTY
1113: LIST
1114: LIST
1115: PUSH
1116: LD_INT 99
1118: PUSH
1119: LD_INT 79
1121: PUSH
1122: EMPTY
1123: LIST
1124: LIST
1125: PUSH
1126: LD_INT 118
1128: PUSH
1129: LD_INT 111
1131: PUSH
1132: EMPTY
1133: LIST
1134: LIST
1135: PUSH
1136: LD_INT 99
1138: PUSH
1139: LD_INT 79
1141: PUSH
1142: EMPTY
1143: LIST
1144: LIST
1145: PUSH
1146: LD_INT 87
1148: PUSH
1149: LD_INT 70
1151: PUSH
1152: EMPTY
1153: LIST
1154: LIST
1155: PUSH
1156: LD_INT 46
1158: PUSH
1159: LD_INT 49
1161: PUSH
1162: EMPTY
1163: LIST
1164: LIST
1165: PUSH
1166: EMPTY
1167: LIST
1168: LIST
1169: LIST
1170: LIST
1171: LIST
1172: LIST
1173: LIST
1174: LIST
1175: PUSH
1176: LD_INT 200
1178: PUSH
1179: LD_INT 88
1181: PUSH
1182: EMPTY
1183: LIST
1184: LIST
1185: PUSH
1186: LD_INT 175
1188: PUSH
1189: LD_INT 80
1191: PUSH
1192: EMPTY
1193: LIST
1194: LIST
1195: PUSH
1196: LD_INT 135
1198: PUSH
1199: LD_INT 62
1201: PUSH
1202: EMPTY
1203: LIST
1204: LIST
1205: PUSH
1206: LD_INT 117
1208: PUSH
1209: LD_INT 53
1211: PUSH
1212: EMPTY
1213: LIST
1214: LIST
1215: PUSH
1216: LD_INT 103
1218: PUSH
1219: LD_INT 41
1221: PUSH
1222: EMPTY
1223: LIST
1224: LIST
1225: PUSH
1226: LD_INT 99
1228: PUSH
1229: LD_INT 24
1231: PUSH
1232: EMPTY
1233: LIST
1234: LIST
1235: PUSH
1236: LD_INT 85
1238: PUSH
1239: LD_INT 3
1241: PUSH
1242: EMPTY
1243: LIST
1244: LIST
1245: PUSH
1246: LD_INT 99
1248: PUSH
1249: LD_INT 24
1251: PUSH
1252: EMPTY
1253: LIST
1254: LIST
1255: PUSH
1256: LD_INT 103
1258: PUSH
1259: LD_INT 41
1261: PUSH
1262: EMPTY
1263: LIST
1264: LIST
1265: PUSH
1266: LD_INT 98
1268: PUSH
1269: LD_INT 47
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: PUSH
1276: LD_INT 99
1278: PUSH
1279: LD_INT 56
1281: PUSH
1282: EMPTY
1283: LIST
1284: LIST
1285: PUSH
1286: LD_INT 96
1288: PUSH
1289: LD_INT 66
1291: PUSH
1292: EMPTY
1293: LIST
1294: LIST
1295: PUSH
1296: LD_INT 99
1298: PUSH
1299: LD_INT 56
1301: PUSH
1302: EMPTY
1303: LIST
1304: LIST
1305: PUSH
1306: LD_INT 112
1308: PUSH
1309: LD_INT 66
1311: PUSH
1312: EMPTY
1313: LIST
1314: LIST
1315: PUSH
1316: LD_INT 129
1318: PUSH
1319: LD_INT 68
1321: PUSH
1322: EMPTY
1323: LIST
1324: LIST
1325: PUSH
1326: LD_INT 135
1328: PUSH
1329: LD_INT 62
1331: PUSH
1332: EMPTY
1333: LIST
1334: LIST
1335: PUSH
1336: LD_INT 156
1338: PUSH
1339: LD_INT 71
1341: PUSH
1342: EMPTY
1343: LIST
1344: LIST
1345: PUSH
1346: LD_INT 168
1348: PUSH
1349: LD_INT 76
1351: PUSH
1352: EMPTY
1353: LIST
1354: LIST
1355: PUSH
1356: LD_INT 168
1358: PUSH
1359: LD_INT 61
1361: PUSH
1362: EMPTY
1363: LIST
1364: LIST
1365: PUSH
1366: LD_INT 168
1368: PUSH
1369: LD_INT 75
1371: PUSH
1372: EMPTY
1373: LIST
1374: LIST
1375: PUSH
1376: LD_INT 185
1378: PUSH
1379: LD_INT 85
1381: PUSH
1382: EMPTY
1383: LIST
1384: LIST
1385: PUSH
1386: EMPTY
1387: LIST
1388: LIST
1389: LIST
1390: LIST
1391: LIST
1392: LIST
1393: LIST
1394: LIST
1395: LIST
1396: LIST
1397: LIST
1398: LIST
1399: LIST
1400: LIST
1401: LIST
1402: LIST
1403: LIST
1404: LIST
1405: LIST
1406: LIST
1407: LIST
1408: PUSH
1409: EMPTY
1410: LIST
1411: LIST
1412: LIST
1413: ST_TO_ADDR
// mobile_patrol := [ ] ;
1414: LD_ADDR_EXP 15
1418: PUSH
1419: EMPTY
1420: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1421: LD_INT 3
1423: PPUSH
1424: LD_INT 1
1426: PPUSH
1427: LD_INT 3
1429: PPUSH
1430: LD_INT 4
1432: PPUSH
1433: LD_INT 100
1435: PPUSH
1436: CALL 5528 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1440: LD_ADDR_EXP 15
1444: PUSH
1445: LD_EXP 15
1449: PPUSH
1450: LD_INT 1
1452: PPUSH
1453: CALL_OW 45
1457: PPUSH
1458: CALL_OW 2
1462: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1463: LD_EXP 15
1467: PUSH
1468: LD_INT 1
1470: ARRAY
1471: PPUSH
1472: LD_INT 99
1474: PPUSH
1475: LD_INT 55
1477: PPUSH
1478: LD_INT 0
1480: PPUSH
1481: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1485: LD_INT 2
1487: PPUSH
1488: LD_INT 1
1490: PPUSH
1491: LD_INT 3
1493: PPUSH
1494: LD_INT 4
1496: PPUSH
1497: LD_INT 100
1499: PPUSH
1500: CALL 5528 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1504: LD_ADDR_EXP 15
1508: PUSH
1509: LD_EXP 15
1513: PPUSH
1514: LD_INT 2
1516: PPUSH
1517: CALL_OW 45
1521: PPUSH
1522: CALL_OW 2
1526: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1527: LD_EXP 15
1531: PUSH
1532: LD_INT 2
1534: ARRAY
1535: PPUSH
1536: LD_INT 27
1538: PPUSH
1539: LD_INT 49
1541: PPUSH
1542: LD_INT 0
1544: PPUSH
1545: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1549: LD_INT 3
1551: PPUSH
1552: LD_INT 1
1554: PPUSH
1555: LD_INT 3
1557: PPUSH
1558: LD_INT 7
1560: PPUSH
1561: LD_INT 100
1563: PPUSH
1564: CALL 5528 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1568: LD_ADDR_EXP 15
1572: PUSH
1573: LD_EXP 15
1577: PPUSH
1578: LD_INT 3
1580: PPUSH
1581: CALL_OW 45
1585: PPUSH
1586: CALL_OW 2
1590: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1591: LD_EXP 15
1595: PUSH
1596: LD_INT 3
1598: ARRAY
1599: PPUSH
1600: LD_INT 200
1602: PPUSH
1603: LD_INT 88
1605: PPUSH
1606: LD_INT 0
1608: PPUSH
1609: CALL_OW 48
// for i = mobile_patrol downto 1 do
1613: LD_ADDR_VAR 0 2
1617: PUSH
1618: DOUBLE
1619: LD_EXP 15
1623: INC
1624: ST_TO_ADDR
1625: LD_INT 1
1627: PUSH
1628: FOR_DOWNTO
1629: IFFALSE 1640
// RaiseSailEvent ( 1 ) ;
1631: LD_INT 1
1633: PPUSH
1634: CALL_OW 427
1638: GO 1628
1640: POP
1641: POP
// end ;
1642: LD_VAR 0 1
1646: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1647: LD_INT 0
1649: PPUSH
1650: PPUSH
1651: PPUSH
1652: PPUSH
1653: PPUSH
1654: PPUSH
1655: PPUSH
1656: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1657: LD_ADDR_VAR 0 5
1661: PUSH
1662: LD_INT 20
1664: PUSH
1665: LD_INT 4
1667: PUSH
1668: EMPTY
1669: LIST
1670: LIST
1671: PUSH
1672: LD_INT 21
1674: PUSH
1675: LD_INT 5
1677: PUSH
1678: EMPTY
1679: LIST
1680: LIST
1681: PUSH
1682: LD_INT 22
1684: PUSH
1685: LD_INT 1
1687: PUSH
1688: EMPTY
1689: LIST
1690: LIST
1691: PUSH
1692: EMPTY
1693: LIST
1694: LIST
1695: LIST
1696: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1697: LD_ADDR_VAR 0 6
1701: PUSH
1702: LD_INT 176
1704: PUSH
1705: LD_INT 81
1707: PUSH
1708: LD_INT 135
1710: PUSH
1711: LD_INT 62
1713: PUSH
1714: LD_INT 114
1716: PUSH
1717: LD_INT 67
1719: PUSH
1720: LD_INT 93
1722: PUSH
1723: LD_INT 71
1725: PUSH
1726: LD_INT 76
1728: PUSH
1729: LD_INT 67
1731: PUSH
1732: EMPTY
1733: LIST
1734: LIST
1735: LIST
1736: LIST
1737: LIST
1738: LIST
1739: LIST
1740: LIST
1741: LIST
1742: LIST
1743: PUSH
1744: LD_INT 107
1746: PUSH
1747: LD_INT 92
1749: PUSH
1750: LD_INT 92
1752: PUSH
1753: LD_INT 72
1755: PUSH
1756: LD_INT 77
1758: PUSH
1759: LD_INT 68
1761: PUSH
1762: EMPTY
1763: LIST
1764: LIST
1765: LIST
1766: LIST
1767: LIST
1768: LIST
1769: PUSH
1770: LD_INT 45
1772: PUSH
1773: LD_INT 49
1775: PUSH
1776: LD_INT 67
1778: PUSH
1779: LD_INT 59
1781: PUSH
1782: LD_INT 77
1784: PUSH
1785: LD_INT 68
1787: PUSH
1788: EMPTY
1789: LIST
1790: LIST
1791: LIST
1792: LIST
1793: LIST
1794: LIST
1795: PUSH
1796: EMPTY
1797: LIST
1798: LIST
1799: LIST
1800: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1801: LD_ADDR_VAR 0 4
1805: PUSH
1806: LD_INT 1
1808: PPUSH
1809: LD_VAR 0 5
1813: PPUSH
1814: CALL_OW 12
1818: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1819: LD_ADDR_VAR 0 3
1823: PUSH
1824: LD_INT 1
1826: PPUSH
1827: LD_INT 2
1829: PPUSH
1830: CALL_OW 12
1834: ST_TO_ADDR
// uc_side := 1 ;
1835: LD_ADDR_OWVAR 20
1839: PUSH
1840: LD_INT 1
1842: ST_TO_ADDR
// uc_nation := 1 ;
1843: LD_ADDR_OWVAR 21
1847: PUSH
1848: LD_INT 1
1850: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1851: LD_INT 2
1853: PPUSH
1854: LD_INT 3
1856: PPUSH
1857: LD_INT 3
1859: PPUSH
1860: LD_INT 12
1862: PPUSH
1863: LD_INT 100
1865: PPUSH
1866: CALL 5528 0 5
// veh := CreateVehicle ;
1870: LD_ADDR_VAR 0 8
1874: PUSH
1875: CALL_OW 45
1879: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1880: LD_VAR 0 8
1884: PPUSH
1885: LD_VAR 0 5
1889: PUSH
1890: LD_VAR 0 4
1894: ARRAY
1895: PUSH
1896: LD_INT 2
1898: ARRAY
1899: PPUSH
1900: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1904: LD_VAR 0 8
1908: PPUSH
1909: LD_VAR 0 5
1913: PUSH
1914: LD_VAR 0 4
1918: ARRAY
1919: PUSH
1920: LD_INT 1
1922: ARRAY
1923: PPUSH
1924: LD_INT 0
1926: PPUSH
1927: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1931: LD_VAR 0 8
1935: PPUSH
1936: LD_INT 1
1938: PUSH
1939: LD_INT 3
1941: PUSH
1942: EMPTY
1943: LIST
1944: LIST
1945: PUSH
1946: LD_VAR 0 3
1950: ARRAY
1951: PPUSH
1952: LD_INT 100
1954: PPUSH
1955: CALL_OW 290
// tmp := road [ k ] ;
1959: LD_ADDR_VAR 0 7
1963: PUSH
1964: LD_VAR 0 6
1968: PUSH
1969: LD_VAR 0 4
1973: ARRAY
1974: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1975: LD_ADDR_VAR 0 2
1979: PUSH
1980: DOUBLE
1981: LD_INT 1
1983: DEC
1984: ST_TO_ADDR
1985: LD_VAR 0 7
1989: PUSH
1990: LD_INT 2
1992: DIV
1993: PUSH
1994: FOR_TO
1995: IFFALSE 2042
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1997: LD_VAR 0 8
2001: PPUSH
2002: LD_VAR 0 7
2006: PUSH
2007: LD_VAR 0 2
2011: PUSH
2012: LD_INT 2
2014: MUL
2015: PUSH
2016: LD_INT 1
2018: MINUS
2019: ARRAY
2020: PPUSH
2021: LD_VAR 0 7
2025: PUSH
2026: LD_VAR 0 2
2030: PUSH
2031: LD_INT 2
2033: MUL
2034: ARRAY
2035: PPUSH
2036: CALL_OW 171
2040: GO 1994
2042: POP
2043: POP
// AddComGive ( veh , alfa ) ;
2044: LD_VAR 0 8
2048: PPUSH
2049: LD_INT 5
2051: PPUSH
2052: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
2056: LD_VAR 0 8
2060: PPUSH
2061: LD_INT 70
2063: PPUSH
2064: CALL_OW 202
// for i = tmp div 2 downto 1 do
2068: LD_ADDR_VAR 0 2
2072: PUSH
2073: DOUBLE
2074: LD_VAR 0 7
2078: PUSH
2079: LD_INT 2
2081: DIV
2082: INC
2083: ST_TO_ADDR
2084: LD_INT 1
2086: PUSH
2087: FOR_DOWNTO
2088: IFFALSE 2135
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
2090: LD_VAR 0 8
2094: PPUSH
2095: LD_VAR 0 7
2099: PUSH
2100: LD_VAR 0 2
2104: PUSH
2105: LD_INT 2
2107: MUL
2108: PUSH
2109: LD_INT 1
2111: MINUS
2112: ARRAY
2113: PPUSH
2114: LD_VAR 0 7
2118: PUSH
2119: LD_VAR 0 2
2123: PUSH
2124: LD_INT 2
2126: MUL
2127: ARRAY
2128: PPUSH
2129: CALL_OW 171
2133: GO 2087
2135: POP
2136: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2137: LD_VAR 0 8
2141: PPUSH
2142: LD_VAR 0 5
2146: PUSH
2147: LD_VAR 0 4
2151: ARRAY
2152: PUSH
2153: LD_INT 1
2155: ARRAY
2156: PPUSH
2157: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2161: LD_INT 35
2163: PPUSH
2164: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2168: LD_VAR 0 8
2172: PPUSH
2173: LD_VAR 0 5
2177: PUSH
2178: LD_VAR 0 4
2182: ARRAY
2183: PUSH
2184: LD_INT 1
2186: ARRAY
2187: PPUSH
2188: CALL_OW 308
2192: PUSH
2193: LD_VAR 0 8
2197: PPUSH
2198: LD_VAR 0 3
2202: PPUSH
2203: CALL_OW 289
2207: PUSH
2208: LD_INT 0
2210: EQUAL
2211: AND
2212: IFFALSE 2161
// RemoveUnit ( veh ) ;
2214: LD_VAR 0 8
2218: PPUSH
2219: CALL_OW 64
// end ;
2223: LD_VAR 0 1
2227: RET
// every 3 3$00 do
2228: GO 2230
2230: DISABLE
// begin enable ;
2231: ENABLE
// SpawnCargo ;
2232: CALL 1647 0 0
// end ;
2236: END
// export function PrepareDefenders ; var i , tmp ; begin
2237: LD_INT 0
2239: PPUSH
2240: PPUSH
2241: PPUSH
// if defenders then
2242: LD_EXP 18
2246: IFFALSE 2250
// exit ;
2248: GO 2514
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2250: LD_ADDR_VAR 0 2
2254: PUSH
2255: DOUBLE
2256: LD_INT 1
2258: DEC
2259: ST_TO_ADDR
2260: LD_INT 4
2262: PUSH
2263: LD_INT 5
2265: PUSH
2266: LD_INT 6
2268: PUSH
2269: EMPTY
2270: LIST
2271: LIST
2272: LIST
2273: PUSH
2274: LD_OWVAR 67
2278: ARRAY
2279: PUSH
2280: FOR_TO
2281: IFFALSE 2420
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2283: LD_ADDR_VAR 0 3
2287: PUSH
2288: LD_INT 6
2290: PPUSH
2291: LD_INT 2
2293: PUSH
2294: LD_INT 3
2296: PUSH
2297: EMPTY
2298: LIST
2299: LIST
2300: PUSH
2301: LD_INT 1
2303: PPUSH
2304: LD_INT 2
2306: PPUSH
2307: CALL_OW 12
2311: ARRAY
2312: PPUSH
2313: LD_INT 1
2315: PUSH
2316: LD_INT 3
2318: PUSH
2319: EMPTY
2320: LIST
2321: LIST
2322: PUSH
2323: LD_INT 1
2325: PPUSH
2326: LD_INT 2
2328: PPUSH
2329: CALL_OW 12
2333: ARRAY
2334: PPUSH
2335: LD_INT 2
2337: PPUSH
2338: LD_INT 4
2340: PUSH
2341: LD_INT 5
2343: PUSH
2344: LD_INT 9
2346: PUSH
2347: EMPTY
2348: LIST
2349: LIST
2350: LIST
2351: PUSH
2352: LD_INT 1
2354: PPUSH
2355: LD_INT 3
2357: PPUSH
2358: CALL_OW 12
2362: ARRAY
2363: PPUSH
2364: CALL 28223 0 5
2368: ST_TO_ADDR
// if tmp then
2369: LD_VAR 0 3
2373: IFFALSE 2418
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2375: LD_INT 6
2377: PPUSH
2378: LD_VAR 0 3
2382: PUSH
2383: LD_INT 1
2385: ARRAY
2386: PPUSH
2387: LD_VAR 0 3
2391: PUSH
2392: LD_INT 2
2394: ARRAY
2395: PPUSH
2396: LD_VAR 0 3
2400: PUSH
2401: LD_INT 3
2403: ARRAY
2404: PPUSH
2405: LD_VAR 0 3
2409: PUSH
2410: LD_INT 4
2412: ARRAY
2413: PPUSH
2414: CALL_OW 185
// end ;
2418: GO 2280
2420: POP
2421: POP
// repeat wait ( 0 0$1 ) ;
2422: LD_INT 35
2424: PPUSH
2425: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2429: LD_INT 22
2431: PUSH
2432: LD_INT 1
2434: PUSH
2435: EMPTY
2436: LIST
2437: LIST
2438: PUSH
2439: LD_INT 33
2441: PUSH
2442: LD_INT 2
2444: PUSH
2445: EMPTY
2446: LIST
2447: LIST
2448: PUSH
2449: EMPTY
2450: LIST
2451: LIST
2452: PPUSH
2453: CALL_OW 69
2457: PUSH
2458: LD_INT 4
2460: PUSH
2461: LD_INT 5
2463: PUSH
2464: LD_INT 6
2466: PUSH
2467: EMPTY
2468: LIST
2469: LIST
2470: LIST
2471: PUSH
2472: LD_OWVAR 67
2476: ARRAY
2477: GREATEREQUAL
2478: IFFALSE 2422
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2480: LD_ADDR_EXP 18
2484: PUSH
2485: LD_INT 22
2487: PUSH
2488: LD_INT 1
2490: PUSH
2491: EMPTY
2492: LIST
2493: LIST
2494: PUSH
2495: LD_INT 33
2497: PUSH
2498: LD_INT 2
2500: PUSH
2501: EMPTY
2502: LIST
2503: LIST
2504: PUSH
2505: EMPTY
2506: LIST
2507: LIST
2508: PPUSH
2509: CALL_OW 69
2513: ST_TO_ADDR
// end ;
2514: LD_VAR 0 1
2518: RET
// export function Defend ; var i , un , veh , tmp ; begin
2519: LD_INT 0
2521: PPUSH
2522: PPUSH
2523: PPUSH
2524: PPUSH
2525: PPUSH
// defcon_wave := defcon_wave + 1 ;
2526: LD_ADDR_EXP 20
2530: PUSH
2531: LD_EXP 20
2535: PUSH
2536: LD_INT 1
2538: PLUS
2539: ST_TO_ADDR
// if not defenders then
2540: LD_EXP 18
2544: NOT
2545: IFFALSE 2551
// PrepareDefenders ;
2547: CALL 2237 0 0
// if defcon_wave > 1 then
2551: LD_EXP 20
2555: PUSH
2556: LD_INT 1
2558: GREATER
2559: IFFALSE 2785
// begin for i = 1 to defcon_wave + 2 do
2561: LD_ADDR_VAR 0 2
2565: PUSH
2566: DOUBLE
2567: LD_INT 1
2569: DEC
2570: ST_TO_ADDR
2571: LD_EXP 20
2575: PUSH
2576: LD_INT 2
2578: PLUS
2579: PUSH
2580: FOR_TO
2581: IFFALSE 2707
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2583: LD_INT 4
2585: PPUSH
2586: LD_INT 3
2588: PPUSH
2589: LD_INT 1
2591: PPUSH
2592: LD_INT 4
2594: PUSH
2595: LD_INT 6
2597: PUSH
2598: LD_INT 7
2600: PUSH
2601: EMPTY
2602: LIST
2603: LIST
2604: LIST
2605: PUSH
2606: LD_INT 1
2608: PPUSH
2609: LD_INT 3
2611: PPUSH
2612: CALL_OW 12
2616: ARRAY
2617: PPUSH
2618: LD_INT 100
2620: PPUSH
2621: CALL 5528 0 5
// veh := CreateVehicle ;
2625: LD_ADDR_VAR 0 4
2629: PUSH
2630: CALL_OW 45
2634: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2635: LD_VAR 0 4
2639: PPUSH
2640: LD_INT 1
2642: PPUSH
2643: CALL_OW 233
// defenders := defenders ^ veh ;
2647: LD_ADDR_EXP 18
2651: PUSH
2652: LD_EXP 18
2656: PUSH
2657: LD_VAR 0 4
2661: ADD
2662: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2663: LD_INT 0
2665: PPUSH
2666: LD_INT 3
2668: PPUSH
2669: LD_INT 9
2671: PPUSH
2672: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2676: CALL_OW 44
2680: PPUSH
2681: LD_VAR 0 4
2685: PPUSH
2686: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2690: LD_VAR 0 4
2694: PPUSH
2695: LD_INT 25
2697: PPUSH
2698: LD_INT 0
2700: PPUSH
2701: CALL_OW 49
// end ;
2705: GO 2580
2707: POP
2708: POP
// for i = 1 to defcon_wave do
2709: LD_ADDR_VAR 0 2
2713: PUSH
2714: DOUBLE
2715: LD_INT 1
2717: DEC
2718: ST_TO_ADDR
2719: LD_EXP 20
2723: PUSH
2724: FOR_TO
2725: IFFALSE 2783
// begin PrepareHuman ( false , 5 , 9 ) ;
2727: LD_INT 0
2729: PPUSH
2730: LD_INT 5
2732: PPUSH
2733: LD_INT 9
2735: PPUSH
2736: CALL_OW 380
// un := CreateHuman ;
2740: LD_ADDR_VAR 0 3
2744: PUSH
2745: CALL_OW 44
2749: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2750: LD_VAR 0 3
2754: PPUSH
2755: LD_INT 25
2757: PPUSH
2758: LD_INT 0
2760: PPUSH
2761: CALL_OW 49
// defenders := defenders ^ un ;
2765: LD_ADDR_EXP 18
2769: PUSH
2770: LD_EXP 18
2774: PUSH
2775: LD_VAR 0 3
2779: ADD
2780: ST_TO_ADDR
// end ;
2781: GO 2724
2783: POP
2784: POP
// end ; repeat wait ( 0 0$1 ) ;
2785: LD_INT 35
2787: PPUSH
2788: CALL_OW 67
// for i in defenders do
2792: LD_ADDR_VAR 0 2
2796: PUSH
2797: LD_EXP 18
2801: PUSH
2802: FOR_IN
2803: IFFALSE 2885
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2805: LD_EXP 19
2809: PUSH
2810: LD_VAR 0 2
2814: PPUSH
2815: LD_EXP 19
2819: PUSH
2820: LD_INT 1
2822: ARRAY
2823: PPUSH
2824: LD_EXP 19
2828: PUSH
2829: LD_INT 2
2831: ARRAY
2832: PPUSH
2833: CALL_OW 297
2837: PUSH
2838: LD_INT 10
2840: GREATER
2841: AND
2842: PUSH
2843: LD_VAR 0 2
2847: PPUSH
2848: CALL_OW 314
2852: NOT
2853: AND
2854: IFFALSE 2883
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2856: LD_VAR 0 2
2860: PPUSH
2861: LD_EXP 19
2865: PUSH
2866: LD_INT 1
2868: ARRAY
2869: PPUSH
2870: LD_EXP 19
2874: PUSH
2875: LD_INT 2
2877: ARRAY
2878: PPUSH
2879: CALL_OW 114
// end ;
2883: GO 2802
2885: POP
2886: POP
// until not defenders ;
2887: LD_EXP 18
2891: NOT
2892: IFFALSE 2785
// end ;
2894: LD_VAR 0 1
2898: RET
// every 7 7$30 trigger Difficulty > 1 and extra_patrol do var un ;
2899: LD_OWVAR 67
2903: PUSH
2904: LD_INT 1
2906: GREATER
2907: PUSH
2908: LD_EXP 11
2912: AND
2913: IFFALSE 3135
2915: GO 2917
2917: DISABLE
2918: LD_INT 0
2920: PPUSH
// begin enable ;
2921: ENABLE
// uc_side := 1 ;
2922: LD_ADDR_OWVAR 20
2926: PUSH
2927: LD_INT 1
2929: ST_TO_ADDR
// uc_nation := 1 ;
2930: LD_ADDR_OWVAR 21
2934: PUSH
2935: LD_INT 1
2937: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_gatling_gun , 100 ) ;
2938: LD_INT 3
2940: PPUSH
2941: LD_INT 3
2943: PPUSH
2944: LD_INT 3
2946: PPUSH
2947: LD_INT 4
2949: PPUSH
2950: LD_INT 100
2952: PPUSH
2953: CALL 5528 0 5
// un := CreateVehicle ;
2957: LD_ADDR_VAR 0 1
2961: PUSH
2962: CALL_OW 45
2966: ST_TO_ADDR
// SetDir ( un , 3 ) ;
2967: LD_VAR 0 1
2971: PPUSH
2972: LD_INT 3
2974: PPUSH
2975: CALL_OW 233
// PlaceUnitXY ( un , 155 , 2 , false ) ;
2979: LD_VAR 0 1
2983: PPUSH
2984: LD_INT 155
2986: PPUSH
2987: LD_INT 2
2989: PPUSH
2990: LD_INT 0
2992: PPUSH
2993: CALL_OW 48
// ComAgressiveMove ( un , 169 , 77 ) ;
2997: LD_VAR 0 1
3001: PPUSH
3002: LD_INT 169
3004: PPUSH
3005: LD_INT 77
3007: PPUSH
3008: CALL_OW 114
// AddComWait ( un , 0 0$2 ) ;
3012: LD_VAR 0 1
3016: PPUSH
3017: LD_INT 70
3019: PPUSH
3020: CALL_OW 202
// AddComAgressiveMove ( un , 134 , 62 ) ;
3024: LD_VAR 0 1
3028: PPUSH
3029: LD_INT 134
3031: PPUSH
3032: LD_INT 62
3034: PPUSH
3035: CALL_OW 174
// AddComAgressiveMove ( un , 103 , 42 ) ;
3039: LD_VAR 0 1
3043: PPUSH
3044: LD_INT 103
3046: PPUSH
3047: LD_INT 42
3049: PPUSH
3050: CALL_OW 174
// AddComWait ( un , 0 0$2 ) ;
3054: LD_VAR 0 1
3058: PPUSH
3059: LD_INT 70
3061: PPUSH
3062: CALL_OW 202
// AddComAgressiveMove ( un , 84 , 2 ) ;
3066: LD_VAR 0 1
3070: PPUSH
3071: LD_INT 84
3073: PPUSH
3074: LD_INT 2
3076: PPUSH
3077: CALL_OW 174
// repeat wait ( 0 0$1 ) ;
3081: LD_INT 35
3083: PPUSH
3084: CALL_OW 67
// if IsDead ( un ) then
3088: LD_VAR 0 1
3092: PPUSH
3093: CALL_OW 301
3097: IFFALSE 3109
// begin extra_patrol := false ;
3099: LD_ADDR_EXP 11
3103: PUSH
3104: LD_INT 0
3106: ST_TO_ADDR
// exit ;
3107: GO 3135
// end ; until IsAt ( un , 84 , 2 ) ;
3109: LD_VAR 0 1
3113: PPUSH
3114: LD_INT 84
3116: PPUSH
3117: LD_INT 2
3119: PPUSH
3120: CALL_OW 307
3124: IFFALSE 3081
// RemoveUnit ( un ) ;
3126: LD_VAR 0 1
3130: PPUSH
3131: CALL_OW 64
// end ; end_of_file
3135: PPOPN 1
3137: END
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
3138: LD_INT 0
3140: PPUSH
3141: PPUSH
3142: PPUSH
3143: PPUSH
3144: PPUSH
3145: PPUSH
3146: PPUSH
// uc_side := 4 ;
3147: LD_ADDR_OWVAR 20
3151: PUSH
3152: LD_INT 4
3154: ST_TO_ADDR
// uc_nation := 1 ;
3155: LD_ADDR_OWVAR 21
3159: PUSH
3160: LD_INT 1
3162: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
3163: LD_ADDR_EXP 35
3167: PUSH
3168: LD_STRING DeltaDoctor
3170: PPUSH
3171: LD_EXP 1
3175: NOT
3176: PPUSH
3177: LD_STRING 10c_
3179: PPUSH
3180: CALL 5465 0 3
3184: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
3185: LD_ADDR_EXP 34
3189: PUSH
3190: LD_STRING Joan
3192: PPUSH
3193: LD_EXP 1
3197: NOT
3198: PPUSH
3199: LD_STRING 10c_
3201: PPUSH
3202: CALL 5465 0 3
3206: ST_TO_ADDR
// if Joan then
3207: LD_EXP 34
3211: IFFALSE 3242
// friends := Insert ( friends , friends + 1 , Joan ) ;
3213: LD_ADDR_EXP 4
3217: PUSH
3218: LD_EXP 4
3222: PPUSH
3223: LD_EXP 4
3227: PUSH
3228: LD_INT 1
3230: PLUS
3231: PPUSH
3232: LD_EXP 34
3236: PPUSH
3237: CALL_OW 2
3241: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
3242: LD_ADDR_EXP 33
3246: PUSH
3247: LD_STRING Simms
3249: PPUSH
3250: LD_EXP 1
3254: NOT
3255: PPUSH
3256: LD_STRING 10c_
3258: PPUSH
3259: CALL 5465 0 3
3263: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
3264: LD_ADDR_EXP 32
3268: PUSH
3269: LD_STRING Kikuchi
3271: PPUSH
3272: LD_EXP 1
3276: NOT
3277: PPUSH
3278: LD_STRING 11_
3280: PPUSH
3281: CALL 5465 0 3
3285: ST_TO_ADDR
// if Kikuchi then
3286: LD_EXP 32
3290: IFFALSE 3321
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
3292: LD_ADDR_EXP 4
3296: PUSH
3297: LD_EXP 4
3301: PPUSH
3302: LD_EXP 4
3306: PUSH
3307: LD_INT 1
3309: PLUS
3310: PPUSH
3311: LD_EXP 32
3315: PPUSH
3316: CALL_OW 2
3320: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
3321: LD_ADDR_EXP 31
3325: PUSH
3326: LD_STRING Frank
3328: PPUSH
3329: LD_EXP 1
3333: NOT
3334: PPUSH
3335: LD_STRING 11_
3337: PPUSH
3338: CALL 5465 0 3
3342: ST_TO_ADDR
// if Frank then
3343: LD_EXP 31
3347: IFFALSE 3378
// friends := Insert ( friends , friends + 1 , Frank ) ;
3349: LD_ADDR_EXP 4
3353: PUSH
3354: LD_EXP 4
3358: PPUSH
3359: LD_EXP 4
3363: PUSH
3364: LD_INT 1
3366: PLUS
3367: PPUSH
3368: LD_EXP 31
3372: PPUSH
3373: CALL_OW 2
3377: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3378: LD_ADDR_EXP 30
3382: PUSH
3383: LD_STRING Gary
3385: PPUSH
3386: LD_EXP 1
3390: NOT
3391: PPUSH
3392: LD_STRING 11_
3394: PPUSH
3395: CALL 5465 0 3
3399: ST_TO_ADDR
// if Gary then
3400: LD_EXP 30
3404: IFFALSE 3435
// friends := Insert ( friends , friends + 1 , Gary ) ;
3406: LD_ADDR_EXP 4
3410: PUSH
3411: LD_EXP 4
3415: PPUSH
3416: LD_EXP 4
3420: PUSH
3421: LD_INT 1
3423: PLUS
3424: PPUSH
3425: LD_EXP 30
3429: PPUSH
3430: CALL_OW 2
3434: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornell , ( not debug ) , 11_ ) ;
3435: LD_ADDR_EXP 29
3439: PUSH
3440: LD_STRING Cornell
3442: PPUSH
3443: LD_EXP 1
3447: NOT
3448: PPUSH
3449: LD_STRING 11_
3451: PPUSH
3452: CALL 5465 0 3
3456: ST_TO_ADDR
// if Cornel then
3457: LD_EXP 29
3461: IFFALSE 3492
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3463: LD_ADDR_EXP 4
3467: PUSH
3468: LD_EXP 4
3472: PPUSH
3473: LD_EXP 4
3477: PUSH
3478: LD_INT 1
3480: PLUS
3481: PPUSH
3482: LD_EXP 29
3486: PPUSH
3487: CALL_OW 2
3491: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3492: LD_ADDR_EXP 28
3496: PUSH
3497: LD_STRING Houten
3499: PPUSH
3500: LD_EXP 1
3504: NOT
3505: PPUSH
3506: LD_STRING 11_
3508: PPUSH
3509: CALL 5465 0 3
3513: ST_TO_ADDR
// if Houten then
3514: LD_EXP 28
3518: IFFALSE 3549
// friends := Insert ( friends , friends + 1 , Houten ) ;
3520: LD_ADDR_EXP 4
3524: PUSH
3525: LD_EXP 4
3529: PPUSH
3530: LD_EXP 4
3534: PUSH
3535: LD_INT 1
3537: PLUS
3538: PPUSH
3539: LD_EXP 28
3543: PPUSH
3544: CALL_OW 2
3548: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3549: LD_ADDR_EXP 27
3553: PUSH
3554: LD_STRING Gladstone
3556: PPUSH
3557: LD_EXP 1
3561: NOT
3562: PPUSH
3563: LD_STRING 11_
3565: PPUSH
3566: CALL 5465 0 3
3570: ST_TO_ADDR
// if Gladstone then
3571: LD_EXP 27
3575: IFFALSE 3606
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3577: LD_ADDR_EXP 4
3581: PUSH
3582: LD_EXP 4
3586: PPUSH
3587: LD_EXP 4
3591: PUSH
3592: LD_INT 1
3594: PLUS
3595: PPUSH
3596: LD_EXP 27
3600: PPUSH
3601: CALL_OW 2
3605: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3606: LD_ADDR_EXP 21
3610: PUSH
3611: LD_STRING Lisa
3613: PPUSH
3614: LD_EXP 1
3618: NOT
3619: PPUSH
3620: LD_STRING 11_
3622: PPUSH
3623: CALL 5465 0 3
3627: ST_TO_ADDR
// if Lisa then
3628: LD_EXP 21
3632: IFFALSE 3657
// friends := Insert ( friends , 1 , Lisa ) ;
3634: LD_ADDR_EXP 4
3638: PUSH
3639: LD_EXP 4
3643: PPUSH
3644: LD_INT 1
3646: PPUSH
3647: LD_EXP 21
3651: PPUSH
3652: CALL_OW 2
3656: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3657: LD_ADDR_EXP 22
3661: PUSH
3662: LD_STRING Donaldson
3664: PPUSH
3665: LD_EXP 1
3669: NOT
3670: PPUSH
3671: LD_STRING 11_
3673: PPUSH
3674: CALL 5465 0 3
3678: ST_TO_ADDR
// if Donaldson then
3679: LD_EXP 22
3683: IFFALSE 3714
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3685: LD_ADDR_EXP 4
3689: PUSH
3690: LD_EXP 4
3694: PPUSH
3695: LD_EXP 4
3699: PUSH
3700: LD_INT 1
3702: PLUS
3703: PPUSH
3704: LD_EXP 22
3708: PPUSH
3709: CALL_OW 2
3713: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3714: LD_ADDR_EXP 23
3718: PUSH
3719: LD_STRING Bobby
3721: PPUSH
3722: LD_EXP 1
3726: NOT
3727: PPUSH
3728: LD_STRING 11_
3730: PPUSH
3731: CALL 5465 0 3
3735: ST_TO_ADDR
// if Bobby then
3736: LD_EXP 23
3740: IFFALSE 3771
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3742: LD_ADDR_EXP 4
3746: PUSH
3747: LD_EXP 4
3751: PPUSH
3752: LD_EXP 4
3756: PUSH
3757: LD_INT 1
3759: PLUS
3760: PPUSH
3761: LD_EXP 23
3765: PPUSH
3766: CALL_OW 2
3770: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3771: LD_ADDR_EXP 24
3775: PUSH
3776: LD_STRING Cyrus
3778: PPUSH
3779: LD_EXP 1
3783: NOT
3784: PPUSH
3785: LD_STRING 11_
3787: PPUSH
3788: CALL 5465 0 3
3792: ST_TO_ADDR
// if Cyrus then
3793: LD_EXP 24
3797: IFFALSE 3828
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3799: LD_ADDR_EXP 4
3803: PUSH
3804: LD_EXP 4
3808: PPUSH
3809: LD_EXP 4
3813: PUSH
3814: LD_INT 1
3816: PLUS
3817: PPUSH
3818: LD_EXP 24
3822: PPUSH
3823: CALL_OW 2
3827: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3828: LD_ADDR_EXP 25
3832: PUSH
3833: LD_STRING Denis
3835: PPUSH
3836: LD_EXP 1
3840: NOT
3841: PPUSH
3842: LD_STRING 11_
3844: PPUSH
3845: CALL 5465 0 3
3849: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3850: LD_ADDR_EXP 26
3854: PUSH
3855: LD_STRING Brown
3857: PPUSH
3858: LD_EXP 1
3862: NOT
3863: PPUSH
3864: LD_STRING 11_
3866: PPUSH
3867: CALL 5465 0 3
3871: ST_TO_ADDR
// if Brown then
3872: LD_EXP 26
3876: IFFALSE 3907
// friends := Insert ( friends , friends + 1 , Brown ) ;
3878: LD_ADDR_EXP 4
3882: PUSH
3883: LD_EXP 4
3887: PPUSH
3888: LD_EXP 4
3892: PUSH
3893: LD_INT 1
3895: PLUS
3896: PPUSH
3897: LD_EXP 26
3901: PPUSH
3902: CALL_OW 2
3906: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
3907: LD_ADDR_EXP 4
3911: PUSH
3912: LD_EXP 4
3916: PUSH
3917: LD_STRING 11c_others
3919: PPUSH
3920: CALL_OW 31
3924: ADD
3925: PUSH
3926: LD_STRING 11_others
3928: PPUSH
3929: CALL_OW 31
3933: ADD
3934: ST_TO_ADDR
// if friends < 18 then
3935: LD_EXP 4
3939: PUSH
3940: LD_INT 18
3942: LESS
3943: IFFALSE 4015
// for i = 1 to 18 do
3945: LD_ADDR_VAR 0 2
3949: PUSH
3950: DOUBLE
3951: LD_INT 1
3953: DEC
3954: ST_TO_ADDR
3955: LD_INT 18
3957: PUSH
3958: FOR_TO
3959: IFFALSE 4013
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3961: LD_INT 0
3963: PPUSH
3964: LD_INT 1
3966: PPUSH
3967: LD_INT 4
3969: PPUSH
3970: CALL_OW 12
3974: PPUSH
3975: LD_INT 7
3977: PPUSH
3978: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3982: LD_ADDR_EXP 4
3986: PUSH
3987: LD_EXP 4
3991: PPUSH
3992: LD_EXP 4
3996: PUSH
3997: LD_INT 1
3999: PLUS
4000: PPUSH
4001: CALL_OW 44
4005: PPUSH
4006: CALL_OW 2
4010: ST_TO_ADDR
// end ;
4011: GO 3958
4013: POP
4014: POP
// for i in friends do
4015: LD_ADDR_VAR 0 2
4019: PUSH
4020: LD_EXP 4
4024: PUSH
4025: FOR_IN
4026: IFFALSE 4084
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
4028: LD_VAR 0 2
4032: PPUSH
4033: LD_INT 1
4035: PPUSH
4036: CALL_OW 259
4040: PUSH
4041: LD_VAR 0 2
4045: PPUSH
4046: LD_INT 4
4048: PPUSH
4049: CALL_OW 259
4053: GREATEREQUAL
4054: IFFALSE 4070
// SetClass ( i , class_soldier ) else
4056: LD_VAR 0 2
4060: PPUSH
4061: LD_INT 1
4063: PPUSH
4064: CALL_OW 336
4068: GO 4082
// SetClass ( i , class_scientistic ) ;
4070: LD_VAR 0 2
4074: PPUSH
4075: LD_INT 4
4077: PPUSH
4078: CALL_OW 336
4082: GO 4025
4084: POP
4085: POP
// if Frank then
4086: LD_EXP 31
4090: IFFALSE 4104
// SetClass ( Frank , class_sniper ) ;
4092: LD_EXP 31
4096: PPUSH
4097: LD_INT 5
4099: PPUSH
4100: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
4104: LD_EXP 34
4108: PUSH
4109: LD_EXP 25
4113: PUSH
4114: LD_EXP 35
4118: PUSH
4119: LD_EXP 33
4123: PUSH
4124: EMPTY
4125: LIST
4126: LIST
4127: LIST
4128: LIST
4129: PPUSH
4130: LD_INT 4
4132: PPUSH
4133: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
4137: LD_ADDR_EXP 3
4141: PUSH
4142: LD_STRING 
4144: PPUSH
4145: LD_INT 7
4147: PPUSH
4148: LD_INT 7
4150: PPUSH
4151: LD_INT -6
4153: PUSH
4154: LD_EXP 12
4158: PUSH
4159: LD_EXP 13
4163: PUSH
4164: LD_EXP 33
4168: PUSH
4169: LD_EXP 25
4173: PUSH
4174: LD_EXP 35
4178: PUSH
4179: LD_INT -2
4181: PUSH
4182: LD_INT -3
4184: PUSH
4185: LD_INT -5
4187: PUSH
4188: EMPTY
4189: LIST
4190: LIST
4191: LIST
4192: LIST
4193: LIST
4194: LIST
4195: LIST
4196: LIST
4197: LIST
4198: PUSH
4199: LD_EXP 4
4203: ADD
4204: PPUSH
4205: LD_INT 1
4207: PUSH
4208: LD_INT 4
4210: PUSH
4211: LD_INT 2
4213: PUSH
4214: EMPTY
4215: LIST
4216: LIST
4217: PUSH
4218: LD_INT 5
4220: PUSH
4221: LD_INT 0
4223: PUSH
4224: LD_INT 3
4226: PUSH
4227: EMPTY
4228: LIST
4229: LIST
4230: LIST
4231: PUSH
4232: EMPTY
4233: LIST
4234: LIST
4235: LIST
4236: PPUSH
4237: CALL_OW 42
4241: ST_TO_ADDR
// if Simms then
4242: LD_EXP 33
4246: IFFALSE 4264
// selected := selected ^ Simms ;
4248: LD_ADDR_EXP 3
4252: PUSH
4253: LD_EXP 3
4257: PUSH
4258: LD_EXP 33
4262: ADD
4263: ST_TO_ADDR
// if Denis then
4264: LD_EXP 25
4268: IFFALSE 4286
// selected := selected ^ Denis ;
4270: LD_ADDR_EXP 3
4274: PUSH
4275: LD_EXP 3
4279: PUSH
4280: LD_EXP 25
4284: ADD
4285: ST_TO_ADDR
// if DeltaDoctor then
4286: LD_EXP 35
4290: IFFALSE 4308
// selected := selected ^ DeltaDoctor ;
4292: LD_ADDR_EXP 3
4296: PUSH
4297: LD_EXP 3
4301: PUSH
4302: LD_EXP 35
4306: ADD
4307: ST_TO_ADDR
// friends := friends diff selected ;
4308: LD_ADDR_EXP 4
4312: PUSH
4313: LD_EXP 4
4317: PUSH
4318: LD_EXP 3
4322: DIFF
4323: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4324: LD_ADDR_VAR 0 4
4328: PUSH
4329: LD_INT 111
4331: PUSH
4332: LD_INT 137
4334: PUSH
4335: LD_INT 51
4337: PUSH
4338: EMPTY
4339: LIST
4340: LIST
4341: LIST
4342: PUSH
4343: LD_INT 147
4345: PUSH
4346: LD_INT 129
4348: PUSH
4349: LD_INT 25
4351: PUSH
4352: EMPTY
4353: LIST
4354: LIST
4355: LIST
4356: PUSH
4357: EMPTY
4358: LIST
4359: LIST
4360: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4361: LD_ADDR_VAR 0 5
4365: PUSH
4366: LD_INT 5
4368: PUSH
4369: LD_INT 6
4371: PUSH
4372: LD_INT 7
4374: PUSH
4375: LD_INT 8
4377: PUSH
4378: LD_INT 17
4380: PUSH
4381: LD_INT 18
4383: PUSH
4384: EMPTY
4385: LIST
4386: LIST
4387: LIST
4388: LIST
4389: LIST
4390: LIST
4391: ST_TO_ADDR
// for i in buildings do
4392: LD_ADDR_VAR 0 2
4396: PUSH
4397: LD_VAR 0 4
4401: PUSH
4402: FOR_IN
4403: IFFALSE 4419
// SetSide ( i , 4 ) ;
4405: LD_VAR 0 2
4409: PPUSH
4410: LD_INT 4
4412: PPUSH
4413: CALL_OW 235
4417: GO 4402
4419: POP
4420: POP
// for i in selected do
4421: LD_ADDR_VAR 0 2
4425: PUSH
4426: LD_EXP 3
4430: PUSH
4431: FOR_IN
4432: IFFALSE 4694
// begin if GetClass ( i ) in [ 1 , 5 ] then
4434: LD_VAR 0 2
4438: PPUSH
4439: CALL_OW 257
4443: PUSH
4444: LD_INT 1
4446: PUSH
4447: LD_INT 5
4449: PUSH
4450: EMPTY
4451: LIST
4452: LIST
4453: IN
4454: IFFALSE 4575
// begin if buildings [ 1 ] then
4456: LD_VAR 0 4
4460: PUSH
4461: LD_INT 1
4463: ARRAY
4464: IFFALSE 4525
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4466: LD_VAR 0 2
4470: PPUSH
4471: LD_VAR 0 4
4475: PUSH
4476: LD_INT 1
4478: ARRAY
4479: PUSH
4480: LD_INT 1
4482: ARRAY
4483: PPUSH
4484: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4488: LD_ADDR_VAR 0 4
4492: PUSH
4493: LD_VAR 0 4
4497: PPUSH
4498: LD_INT 1
4500: PPUSH
4501: LD_VAR 0 4
4505: PUSH
4506: LD_INT 1
4508: ARRAY
4509: PPUSH
4510: LD_INT 1
4512: PPUSH
4513: CALL_OW 3
4517: PPUSH
4518: CALL_OW 1
4522: ST_TO_ADDR
// end else
4523: GO 4573
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4525: LD_VAR 0 2
4529: PPUSH
4530: LD_VAR 0 5
4534: PUSH
4535: LD_INT 1
4537: ARRAY
4538: PPUSH
4539: LD_INT 0
4541: PPUSH
4542: CALL_OW 49
// ComHold ( i ) ;
4546: LD_VAR 0 2
4550: PPUSH
4551: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4555: LD_ADDR_VAR 0 5
4559: PUSH
4560: LD_VAR 0 5
4564: PPUSH
4565: LD_INT 1
4567: PPUSH
4568: CALL_OW 3
4572: ST_TO_ADDR
// end ; end else
4573: GO 4692
// begin if buildings [ 2 ] then
4575: LD_VAR 0 4
4579: PUSH
4580: LD_INT 2
4582: ARRAY
4583: IFFALSE 4644
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4585: LD_VAR 0 2
4589: PPUSH
4590: LD_VAR 0 4
4594: PUSH
4595: LD_INT 2
4597: ARRAY
4598: PUSH
4599: LD_INT 1
4601: ARRAY
4602: PPUSH
4603: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4607: LD_ADDR_VAR 0 4
4611: PUSH
4612: LD_VAR 0 4
4616: PPUSH
4617: LD_INT 2
4619: PPUSH
4620: LD_VAR 0 4
4624: PUSH
4625: LD_INT 2
4627: ARRAY
4628: PPUSH
4629: LD_INT 1
4631: PPUSH
4632: CALL_OW 3
4636: PPUSH
4637: CALL_OW 1
4641: ST_TO_ADDR
// end else
4642: GO 4692
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4644: LD_VAR 0 2
4648: PPUSH
4649: LD_VAR 0 5
4653: PUSH
4654: LD_INT 1
4656: ARRAY
4657: PPUSH
4658: LD_INT 0
4660: PPUSH
4661: CALL_OW 49
// ComHold ( i ) ;
4665: LD_VAR 0 2
4669: PPUSH
4670: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4674: LD_ADDR_VAR 0 5
4678: PUSH
4679: LD_VAR 0 5
4683: PPUSH
4684: LD_INT 1
4686: PPUSH
4687: CALL_OW 3
4691: ST_TO_ADDR
// end ; end ; end ;
4692: GO 4431
4694: POP
4695: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4696: LD_ADDR_VAR 0 6
4700: PUSH
4701: LD_INT 22
4703: PUSH
4704: LD_INT 1
4706: PUSH
4707: EMPTY
4708: LIST
4709: LIST
4710: PUSH
4711: LD_INT 30
4713: PUSH
4714: LD_INT 32
4716: PUSH
4717: EMPTY
4718: LIST
4719: LIST
4720: PUSH
4721: EMPTY
4722: LIST
4723: LIST
4724: PPUSH
4725: CALL_OW 69
4729: ST_TO_ADDR
// for i = bunkers - friends downto 1 do
4730: LD_ADDR_VAR 0 2
4734: PUSH
4735: DOUBLE
4736: LD_VAR 0 6
4740: PUSH
4741: LD_EXP 4
4745: MINUS
4746: INC
4747: ST_TO_ADDR
4748: LD_INT 1
4750: PUSH
4751: FOR_DOWNTO
4752: IFFALSE 4815
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4754: LD_INT 0
4756: PPUSH
4757: LD_INT 1
4759: PPUSH
4760: LD_INT 7
4762: PUSH
4763: LD_INT 8
4765: PUSH
4766: LD_INT 9
4768: PUSH
4769: EMPTY
4770: LIST
4771: LIST
4772: LIST
4773: PUSH
4774: LD_OWVAR 67
4778: ARRAY
4779: PPUSH
4780: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
4784: LD_ADDR_EXP 4
4788: PUSH
4789: LD_EXP 4
4793: PPUSH
4794: LD_EXP 4
4798: PUSH
4799: LD_INT 1
4801: PLUS
4802: PPUSH
4803: CALL_OW 44
4807: PPUSH
4808: CALL_OW 2
4812: ST_TO_ADDR
// end ;
4813: GO 4751
4815: POP
4816: POP
// if friends then
4817: LD_EXP 4
4821: IFFALSE 4937
// begin tmp := friends ;
4823: LD_ADDR_VAR 0 3
4827: PUSH
4828: LD_EXP 4
4832: ST_TO_ADDR
// for i = 1 to bunkers do
4833: LD_ADDR_VAR 0 2
4837: PUSH
4838: DOUBLE
4839: LD_INT 1
4841: DEC
4842: ST_TO_ADDR
4843: LD_VAR 0 6
4847: PUSH
4848: FOR_TO
4849: IFFALSE 4935
// begin SetSide ( tmp [ tmp ] , 1 ) ;
4851: LD_VAR 0 3
4855: PUSH
4856: LD_VAR 0 3
4860: ARRAY
4861: PPUSH
4862: LD_INT 1
4864: PPUSH
4865: CALL_OW 235
// SetClass ( tmp [ tmp ] , 1 ) ;
4869: LD_VAR 0 3
4873: PUSH
4874: LD_VAR 0 3
4878: ARRAY
4879: PPUSH
4880: LD_INT 1
4882: PPUSH
4883: CALL_OW 336
// PlaceHumanInUnit ( tmp [ tmp ] , bunkers [ i ] ) ;
4887: LD_VAR 0 3
4891: PUSH
4892: LD_VAR 0 3
4896: ARRAY
4897: PPUSH
4898: LD_VAR 0 6
4902: PUSH
4903: LD_VAR 0 2
4907: ARRAY
4908: PPUSH
4909: CALL_OW 52
// tmp := Delete ( tmp , tmp ) ;
4913: LD_ADDR_VAR 0 3
4917: PUSH
4918: LD_VAR 0 3
4922: PPUSH
4923: LD_VAR 0 3
4927: PPUSH
4928: CALL_OW 3
4932: ST_TO_ADDR
// end ;
4933: GO 4848
4935: POP
4936: POP
// end ; areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 , guard_spawn_9 , guard_spawn_10 , guard_spawn_11 , guard_spawn_12 , guard_spawn_13 , guard_spawn_14 , guard_spawn_15 , guard_spawn_16 , guard_spawn_17 , guard_spawn_18 , guard_spawn_19 , guard_spawn_20 ] ;
4937: LD_ADDR_VAR 0 5
4941: PUSH
4942: LD_VAR 0 5
4946: PUSH
4947: LD_INT 9
4949: PUSH
4950: LD_INT 10
4952: PUSH
4953: LD_INT 11
4955: PUSH
4956: LD_INT 12
4958: PUSH
4959: LD_INT 13
4961: PUSH
4962: LD_INT 14
4964: PUSH
4965: LD_INT 15
4967: PUSH
4968: LD_INT 16
4970: PUSH
4971: LD_INT 26
4973: PUSH
4974: LD_INT 27
4976: PUSH
4977: LD_INT 28
4979: PUSH
4980: LD_INT 29
4982: PUSH
4983: LD_INT 30
4985: PUSH
4986: LD_INT 31
4988: PUSH
4989: LD_INT 32
4991: PUSH
4992: LD_INT 33
4994: PUSH
4995: LD_INT 34
4997: PUSH
4998: LD_INT 35
5000: PUSH
5001: LD_INT 36
5003: PUSH
5004: LD_INT 37
5006: PUSH
5007: EMPTY
5008: LIST
5009: LIST
5010: LIST
5011: LIST
5012: LIST
5013: LIST
5014: LIST
5015: LIST
5016: LIST
5017: LIST
5018: LIST
5019: LIST
5020: LIST
5021: LIST
5022: LIST
5023: LIST
5024: LIST
5025: LIST
5026: LIST
5027: LIST
5028: UNION
5029: ST_TO_ADDR
// for i in friends do
5030: LD_ADDR_VAR 0 2
5034: PUSH
5035: LD_EXP 4
5039: PUSH
5040: FOR_IN
5041: IFFALSE 5333
// begin SetTag ( i , 2 ) ;
5043: LD_VAR 0 2
5047: PPUSH
5048: LD_INT 2
5050: PPUSH
5051: CALL_OW 109
// if GetClass ( i ) = 1 and buildings [ 1 ] then
5055: LD_VAR 0 2
5059: PPUSH
5060: CALL_OW 257
5064: PUSH
5065: LD_INT 1
5067: EQUAL
5068: PUSH
5069: LD_VAR 0 4
5073: PUSH
5074: LD_INT 1
5076: ARRAY
5077: AND
5078: IFFALSE 5151
// begin SetClass ( i , 1 ) ;
5080: LD_VAR 0 2
5084: PPUSH
5085: LD_INT 1
5087: PPUSH
5088: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
5092: LD_VAR 0 2
5096: PPUSH
5097: LD_VAR 0 4
5101: PUSH
5102: LD_INT 1
5104: ARRAY
5105: PUSH
5106: LD_INT 1
5108: ARRAY
5109: PPUSH
5110: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
5114: LD_ADDR_VAR 0 4
5118: PUSH
5119: LD_VAR 0 4
5123: PPUSH
5124: LD_INT 1
5126: PPUSH
5127: LD_VAR 0 4
5131: PUSH
5132: LD_INT 1
5134: ARRAY
5135: PPUSH
5136: LD_INT 1
5138: PPUSH
5139: CALL_OW 3
5143: PPUSH
5144: CALL_OW 1
5148: ST_TO_ADDR
// continue ;
5149: GO 5040
// end ; if GetClass ( i ) = 4 and buildings [ 2 ] then
5151: LD_VAR 0 2
5155: PPUSH
5156: CALL_OW 257
5160: PUSH
5161: LD_INT 4
5163: EQUAL
5164: PUSH
5165: LD_VAR 0 4
5169: PUSH
5170: LD_INT 2
5172: ARRAY
5173: AND
5174: IFFALSE 5247
// begin SetClass ( i , 4 ) ;
5176: LD_VAR 0 2
5180: PPUSH
5181: LD_INT 4
5183: PPUSH
5184: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
5188: LD_VAR 0 2
5192: PPUSH
5193: LD_VAR 0 4
5197: PUSH
5198: LD_INT 2
5200: ARRAY
5201: PUSH
5202: LD_INT 1
5204: ARRAY
5205: PPUSH
5206: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
5210: LD_ADDR_VAR 0 4
5214: PUSH
5215: LD_VAR 0 4
5219: PPUSH
5220: LD_INT 2
5222: PPUSH
5223: LD_VAR 0 4
5227: PUSH
5228: LD_INT 2
5230: ARRAY
5231: PPUSH
5232: LD_INT 1
5234: PPUSH
5235: CALL_OW 3
5239: PPUSH
5240: CALL_OW 1
5244: ST_TO_ADDR
// continue ;
5245: GO 5040
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
5247: LD_VAR 0 2
5251: PPUSH
5252: LD_VAR 0 5
5256: PUSH
5257: LD_INT 1
5259: ARRAY
5260: PPUSH
5261: LD_INT 0
5263: PPUSH
5264: CALL_OW 49
// areas := Delete ( areas , 1 ) ;
5268: LD_ADDR_VAR 0 5
5272: PUSH
5273: LD_VAR 0 5
5277: PPUSH
5278: LD_INT 1
5280: PPUSH
5281: CALL_OW 3
5285: ST_TO_ADDR
// if GetClass ( i ) <> 1 then
5286: LD_VAR 0 2
5290: PPUSH
5291: CALL_OW 257
5295: PUSH
5296: LD_INT 1
5298: NONEQUAL
5299: IFFALSE 5313
// SetClass ( i , 1 ) ;
5301: LD_VAR 0 2
5305: PPUSH
5306: LD_INT 1
5308: PPUSH
5309: CALL_OW 336
// ComHold ( i ) ;
5313: LD_VAR 0 2
5317: PPUSH
5318: CALL_OW 140
// if not areas then
5322: LD_VAR 0 5
5326: NOT
5327: IFFALSE 5331
// break ;
5329: GO 5333
// end ;
5331: GO 5040
5333: POP
5334: POP
// if UnitFilter ( friends , [ f_not , [ f_placed ] ] ) then
5335: LD_EXP 4
5339: PPUSH
5340: LD_INT 3
5342: PUSH
5343: LD_INT 52
5345: PUSH
5346: EMPTY
5347: LIST
5348: PUSH
5349: EMPTY
5350: LIST
5351: LIST
5352: PPUSH
5353: CALL_OW 72
5357: IFFALSE 5424
// for i in UnitFilter ( friends , [ f_not , [ f_placed ] ] ) do
5359: LD_ADDR_VAR 0 2
5363: PUSH
5364: LD_EXP 4
5368: PPUSH
5369: LD_INT 3
5371: PUSH
5372: LD_INT 52
5374: PUSH
5375: EMPTY
5376: LIST
5377: PUSH
5378: EMPTY
5379: LIST
5380: LIST
5381: PPUSH
5382: CALL_OW 72
5386: PUSH
5387: FOR_IN
5388: IFFALSE 5422
// begin PlaceUnitXYR ( i , 65 , 58 , 7 , false ) ;
5390: LD_VAR 0 2
5394: PPUSH
5395: LD_INT 65
5397: PPUSH
5398: LD_INT 58
5400: PPUSH
5401: LD_INT 7
5403: PPUSH
5404: LD_INT 0
5406: PPUSH
5407: CALL_OW 50
// ComHold ( i ) ;
5411: LD_VAR 0 2
5415: PPUSH
5416: CALL_OW 140
// end ;
5420: GO 5387
5422: POP
5423: POP
// if Frank then
5424: LD_EXP 31
5428: IFFALSE 5442
// SetClass ( Frank , class_sniper ) ;
5430: LD_EXP 31
5434: PPUSH
5435: LD_INT 5
5437: PPUSH
5438: CALL_OW 336
// if Joan then
5442: LD_EXP 34
5446: IFFALSE 5460
// SetClass ( Joan , 4 ) ;
5448: LD_EXP 34
5452: PPUSH
5453: LD_INT 4
5455: PPUSH
5456: CALL_OW 336
// end ; end_of_file
5460: LD_VAR 0 1
5464: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5465: LD_INT 0
5467: PPUSH
5468: PPUSH
// if exist_mode then
5469: LD_VAR 0 2
5473: IFFALSE 5498
// unit := CreateCharacter ( prefix & ident ) else
5475: LD_ADDR_VAR 0 5
5479: PUSH
5480: LD_VAR 0 3
5484: PUSH
5485: LD_VAR 0 1
5489: STR
5490: PPUSH
5491: CALL_OW 34
5495: ST_TO_ADDR
5496: GO 5513
// unit := NewCharacter ( ident ) ;
5498: LD_ADDR_VAR 0 5
5502: PUSH
5503: LD_VAR 0 1
5507: PPUSH
5508: CALL_OW 25
5512: ST_TO_ADDR
// result := unit ;
5513: LD_ADDR_VAR 0 4
5517: PUSH
5518: LD_VAR 0 5
5522: ST_TO_ADDR
// end ;
5523: LD_VAR 0 4
5527: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5528: LD_INT 0
5530: PPUSH
// vc_chassis := chassis ;
5531: LD_ADDR_OWVAR 37
5535: PUSH
5536: LD_VAR 0 1
5540: ST_TO_ADDR
// vc_engine := engine ;
5541: LD_ADDR_OWVAR 39
5545: PUSH
5546: LD_VAR 0 2
5550: ST_TO_ADDR
// vc_control := control ;
5551: LD_ADDR_OWVAR 38
5555: PUSH
5556: LD_VAR 0 3
5560: ST_TO_ADDR
// vc_weapon := weapon ;
5561: LD_ADDR_OWVAR 40
5565: PUSH
5566: LD_VAR 0 4
5570: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5571: LD_ADDR_OWVAR 41
5575: PUSH
5576: LD_VAR 0 5
5580: ST_TO_ADDR
// end ;
5581: LD_VAR 0 6
5585: RET
// export function CanSayRand ( side ) ; begin
5586: LD_INT 0
5588: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5589: LD_ADDR_VAR 0 2
5593: PUSH
5594: LD_INT 52
5596: PUSH
5597: EMPTY
5598: LIST
5599: PUSH
5600: LD_INT 22
5602: PUSH
5603: LD_VAR 0 1
5607: PUSH
5608: EMPTY
5609: LIST
5610: LIST
5611: PUSH
5612: LD_INT 2
5614: PUSH
5615: LD_INT 25
5617: PUSH
5618: LD_INT 1
5620: PUSH
5621: EMPTY
5622: LIST
5623: LIST
5624: PUSH
5625: LD_INT 25
5627: PUSH
5628: LD_INT 2
5630: PUSH
5631: EMPTY
5632: LIST
5633: LIST
5634: PUSH
5635: LD_INT 25
5637: PUSH
5638: LD_INT 3
5640: PUSH
5641: EMPTY
5642: LIST
5643: LIST
5644: PUSH
5645: LD_INT 25
5647: PUSH
5648: LD_INT 4
5650: PUSH
5651: EMPTY
5652: LIST
5653: LIST
5654: PUSH
5655: EMPTY
5656: LIST
5657: LIST
5658: LIST
5659: LIST
5660: LIST
5661: PUSH
5662: EMPTY
5663: LIST
5664: LIST
5665: LIST
5666: PPUSH
5667: CALL_OW 69
5671: PUSH
5672: LD_EXP 12
5676: PUSH
5677: LD_EXP 31
5681: PUSH
5682: LD_EXP 21
5686: PUSH
5687: LD_EXP 22
5691: PUSH
5692: LD_EXP 23
5696: PUSH
5697: LD_EXP 24
5701: PUSH
5702: LD_EXP 25
5706: PUSH
5707: LD_EXP 26
5711: PUSH
5712: LD_EXP 27
5716: PUSH
5717: LD_EXP 28
5721: PUSH
5722: LD_EXP 14
5726: PUSH
5727: LD_EXP 29
5731: PUSH
5732: LD_EXP 30
5736: PUSH
5737: LD_EXP 32
5741: PUSH
5742: EMPTY
5743: LIST
5744: LIST
5745: LIST
5746: LIST
5747: LIST
5748: LIST
5749: LIST
5750: LIST
5751: LIST
5752: LIST
5753: LIST
5754: LIST
5755: LIST
5756: LIST
5757: DIFF
5758: ST_TO_ADDR
// end ;
5759: LD_VAR 0 2
5763: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5764: LD_INT 0
5766: PPUSH
5767: PPUSH
5768: PPUSH
5769: PPUSH
5770: PPUSH
5771: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5772: LD_VAR 0 1
5776: NOT
5777: PUSH
5778: LD_VAR 0 1
5782: PPUSH
5783: CALL_OW 263
5787: PUSH
5788: LD_INT 2
5790: EQUAL
5791: NOT
5792: OR
5793: IFFALSE 5797
// exit ;
5795: GO 6113
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5797: LD_ADDR_VAR 0 6
5801: PUSH
5802: LD_INT 22
5804: PUSH
5805: LD_VAR 0 1
5809: PPUSH
5810: CALL_OW 255
5814: PUSH
5815: EMPTY
5816: LIST
5817: LIST
5818: PUSH
5819: LD_INT 2
5821: PUSH
5822: LD_INT 30
5824: PUSH
5825: LD_INT 36
5827: PUSH
5828: EMPTY
5829: LIST
5830: LIST
5831: PUSH
5832: LD_INT 34
5834: PUSH
5835: LD_INT 31
5837: PUSH
5838: EMPTY
5839: LIST
5840: LIST
5841: PUSH
5842: EMPTY
5843: LIST
5844: LIST
5845: LIST
5846: PUSH
5847: EMPTY
5848: LIST
5849: LIST
5850: PPUSH
5851: CALL_OW 69
5855: ST_TO_ADDR
// if not tmp then
5856: LD_VAR 0 6
5860: NOT
5861: IFFALSE 5865
// exit ;
5863: GO 6113
// result := [ ] ;
5865: LD_ADDR_VAR 0 2
5869: PUSH
5870: EMPTY
5871: ST_TO_ADDR
// for i in tmp do
5872: LD_ADDR_VAR 0 3
5876: PUSH
5877: LD_VAR 0 6
5881: PUSH
5882: FOR_IN
5883: IFFALSE 5954
// begin t := UnitsInside ( i ) ;
5885: LD_ADDR_VAR 0 4
5889: PUSH
5890: LD_VAR 0 3
5894: PPUSH
5895: CALL_OW 313
5899: ST_TO_ADDR
// if t then
5900: LD_VAR 0 4
5904: IFFALSE 5952
// for j in t do
5906: LD_ADDR_VAR 0 7
5910: PUSH
5911: LD_VAR 0 4
5915: PUSH
5916: FOR_IN
5917: IFFALSE 5950
// result := Insert ( result , result + 1 , j ) ;
5919: LD_ADDR_VAR 0 2
5923: PUSH
5924: LD_VAR 0 2
5928: PPUSH
5929: LD_VAR 0 2
5933: PUSH
5934: LD_INT 1
5936: PLUS
5937: PPUSH
5938: LD_VAR 0 7
5942: PPUSH
5943: CALL_OW 2
5947: ST_TO_ADDR
5948: GO 5916
5950: POP
5951: POP
// end ;
5952: GO 5882
5954: POP
5955: POP
// if not result then
5956: LD_VAR 0 2
5960: NOT
5961: IFFALSE 5965
// exit ;
5963: GO 6113
// mech := result [ 1 ] ;
5965: LD_ADDR_VAR 0 5
5969: PUSH
5970: LD_VAR 0 2
5974: PUSH
5975: LD_INT 1
5977: ARRAY
5978: ST_TO_ADDR
// if result > 1 then
5979: LD_VAR 0 2
5983: PUSH
5984: LD_INT 1
5986: GREATER
5987: IFFALSE 6099
// for i = 2 to result do
5989: LD_ADDR_VAR 0 3
5993: PUSH
5994: DOUBLE
5995: LD_INT 2
5997: DEC
5998: ST_TO_ADDR
5999: LD_VAR 0 2
6003: PUSH
6004: FOR_TO
6005: IFFALSE 6097
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
6007: LD_ADDR_VAR 0 4
6011: PUSH
6012: LD_VAR 0 2
6016: PUSH
6017: LD_VAR 0 3
6021: ARRAY
6022: PPUSH
6023: LD_INT 3
6025: PPUSH
6026: CALL_OW 259
6030: PUSH
6031: LD_VAR 0 2
6035: PUSH
6036: LD_VAR 0 3
6040: ARRAY
6041: PPUSH
6042: CALL_OW 432
6046: MINUS
6047: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
6048: LD_VAR 0 4
6052: PUSH
6053: LD_VAR 0 5
6057: PPUSH
6058: LD_INT 3
6060: PPUSH
6061: CALL_OW 259
6065: PUSH
6066: LD_VAR 0 5
6070: PPUSH
6071: CALL_OW 432
6075: MINUS
6076: GREATEREQUAL
6077: IFFALSE 6095
// mech := result [ i ] ;
6079: LD_ADDR_VAR 0 5
6083: PUSH
6084: LD_VAR 0 2
6088: PUSH
6089: LD_VAR 0 3
6093: ARRAY
6094: ST_TO_ADDR
// end ;
6095: GO 6004
6097: POP
6098: POP
// ComLinkTo ( vehicle , mech ) ;
6099: LD_VAR 0 1
6103: PPUSH
6104: LD_VAR 0 5
6108: PPUSH
6109: CALL_OW 135
// end ;
6113: LD_VAR 0 2
6117: RET
// export function SayRand ( sex , dial ) ; begin
6118: LD_INT 0
6120: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
6121: LD_ADDR_VAR 0 3
6125: PUSH
6126: LD_INT 52
6128: PUSH
6129: EMPTY
6130: LIST
6131: PUSH
6132: LD_INT 22
6134: PUSH
6135: LD_INT 1
6137: PUSH
6138: EMPTY
6139: LIST
6140: LIST
6141: PUSH
6142: LD_INT 26
6144: PUSH
6145: LD_VAR 0 1
6149: PUSH
6150: EMPTY
6151: LIST
6152: LIST
6153: PUSH
6154: LD_INT 2
6156: PUSH
6157: LD_INT 25
6159: PUSH
6160: LD_INT 1
6162: PUSH
6163: EMPTY
6164: LIST
6165: LIST
6166: PUSH
6167: LD_INT 25
6169: PUSH
6170: LD_INT 2
6172: PUSH
6173: EMPTY
6174: LIST
6175: LIST
6176: PUSH
6177: LD_INT 25
6179: PUSH
6180: LD_INT 3
6182: PUSH
6183: EMPTY
6184: LIST
6185: LIST
6186: PUSH
6187: LD_INT 25
6189: PUSH
6190: LD_INT 4
6192: PUSH
6193: EMPTY
6194: LIST
6195: LIST
6196: PUSH
6197: EMPTY
6198: LIST
6199: LIST
6200: LIST
6201: LIST
6202: LIST
6203: PUSH
6204: EMPTY
6205: LIST
6206: LIST
6207: LIST
6208: LIST
6209: PPUSH
6210: CALL_OW 69
6214: PUSH
6215: LD_EXP 12
6219: PUSH
6220: LD_EXP 31
6224: PUSH
6225: LD_EXP 21
6229: PUSH
6230: LD_EXP 22
6234: PUSH
6235: LD_EXP 23
6239: PUSH
6240: LD_EXP 24
6244: PUSH
6245: LD_EXP 25
6249: PUSH
6250: LD_EXP 26
6254: PUSH
6255: LD_EXP 27
6259: PUSH
6260: LD_EXP 28
6264: PUSH
6265: LD_EXP 14
6269: PUSH
6270: LD_EXP 29
6274: PUSH
6275: LD_EXP 30
6279: PUSH
6280: LD_EXP 32
6284: PUSH
6285: EMPTY
6286: LIST
6287: LIST
6288: LIST
6289: LIST
6290: LIST
6291: LIST
6292: LIST
6293: LIST
6294: LIST
6295: LIST
6296: LIST
6297: LIST
6298: LIST
6299: LIST
6300: DIFF
6301: ST_TO_ADDR
// if not result then
6302: LD_VAR 0 3
6306: NOT
6307: IFFALSE 6311
// exit ;
6309: GO 6339
// result := result [ 1 ] ;
6311: LD_ADDR_VAR 0 3
6315: PUSH
6316: LD_VAR 0 3
6320: PUSH
6321: LD_INT 1
6323: ARRAY
6324: ST_TO_ADDR
// Say ( result , dial ) ;
6325: LD_VAR 0 3
6329: PPUSH
6330: LD_VAR 0 2
6334: PPUSH
6335: CALL_OW 88
// end ;
6339: LD_VAR 0 3
6343: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
6344: LD_INT 0
6346: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
6347: LD_ADDR_VAR 0 4
6351: PUSH
6352: LD_INT 22
6354: PUSH
6355: LD_INT 1
6357: PUSH
6358: EMPTY
6359: LIST
6360: LIST
6361: PUSH
6362: LD_INT 26
6364: PUSH
6365: LD_VAR 0 1
6369: PUSH
6370: EMPTY
6371: LIST
6372: LIST
6373: PUSH
6374: LD_INT 2
6376: PUSH
6377: LD_INT 25
6379: PUSH
6380: LD_INT 1
6382: PUSH
6383: EMPTY
6384: LIST
6385: LIST
6386: PUSH
6387: LD_INT 25
6389: PUSH
6390: LD_INT 2
6392: PUSH
6393: EMPTY
6394: LIST
6395: LIST
6396: PUSH
6397: LD_INT 25
6399: PUSH
6400: LD_INT 3
6402: PUSH
6403: EMPTY
6404: LIST
6405: LIST
6406: PUSH
6407: LD_INT 25
6409: PUSH
6410: LD_INT 4
6412: PUSH
6413: EMPTY
6414: LIST
6415: LIST
6416: PUSH
6417: EMPTY
6418: LIST
6419: LIST
6420: LIST
6421: LIST
6422: LIST
6423: PUSH
6424: EMPTY
6425: LIST
6426: LIST
6427: LIST
6428: PPUSH
6429: CALL_OW 69
6433: PUSH
6434: LD_EXP 12
6438: PUSH
6439: LD_EXP 31
6443: PUSH
6444: LD_EXP 21
6448: PUSH
6449: LD_EXP 22
6453: PUSH
6454: LD_EXP 23
6458: PUSH
6459: LD_EXP 24
6463: PUSH
6464: LD_EXP 25
6468: PUSH
6469: LD_EXP 26
6473: PUSH
6474: LD_EXP 27
6478: PUSH
6479: LD_EXP 28
6483: PUSH
6484: LD_EXP 14
6488: PUSH
6489: LD_EXP 29
6493: PUSH
6494: LD_EXP 30
6498: PUSH
6499: LD_EXP 32
6503: PUSH
6504: EMPTY
6505: LIST
6506: LIST
6507: LIST
6508: LIST
6509: LIST
6510: LIST
6511: LIST
6512: LIST
6513: LIST
6514: LIST
6515: LIST
6516: LIST
6517: LIST
6518: LIST
6519: PUSH
6520: LD_VAR 0 3
6524: ADD
6525: DIFF
6526: ST_TO_ADDR
// if not result then
6527: LD_VAR 0 4
6531: NOT
6532: IFFALSE 6536
// exit ;
6534: GO 6564
// result := result [ 1 ] ;
6536: LD_ADDR_VAR 0 4
6540: PUSH
6541: LD_VAR 0 4
6545: PUSH
6546: LD_INT 1
6548: ARRAY
6549: ST_TO_ADDR
// Say ( result , dial ) ;
6550: LD_VAR 0 4
6554: PPUSH
6555: LD_VAR 0 2
6559: PPUSH
6560: CALL_OW 88
// end ;
6564: LD_VAR 0 4
6568: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6569: LD_INT 0
6571: PPUSH
6572: PPUSH
6573: PPUSH
6574: PPUSH
6575: PPUSH
6576: PPUSH
6577: PPUSH
6578: PPUSH
6579: PPUSH
6580: PPUSH
6581: PPUSH
6582: PPUSH
6583: PPUSH
6584: PPUSH
6585: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6586: LD_VAR 0 1
6590: NOT
6591: PUSH
6592: LD_VAR 0 2
6596: NOT
6597: OR
6598: PUSH
6599: LD_VAR 0 1
6603: PPUSH
6604: CALL_OW 247
6608: PUSH
6609: LD_INT 3
6611: EQUAL
6612: OR
6613: IFFALSE 6617
// exit ;
6615: GO 8156
// for i = path downto 1 do
6617: LD_ADDR_VAR 0 5
6621: PUSH
6622: DOUBLE
6623: LD_VAR 0 2
6627: INC
6628: ST_TO_ADDR
6629: LD_INT 1
6631: PUSH
6632: FOR_DOWNTO
6633: IFFALSE 6694
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6635: LD_VAR 0 2
6639: PUSH
6640: LD_VAR 0 5
6644: ARRAY
6645: PUSH
6646: LD_INT 1
6648: ARRAY
6649: PPUSH
6650: LD_VAR 0 2
6654: PUSH
6655: LD_VAR 0 5
6659: ARRAY
6660: PUSH
6661: LD_INT 2
6663: ARRAY
6664: PPUSH
6665: CALL_OW 488
6669: NOT
6670: IFFALSE 6692
// path = Delete ( path , i ) ;
6672: LD_ADDR_VAR 0 2
6676: PUSH
6677: LD_VAR 0 2
6681: PPUSH
6682: LD_VAR 0 5
6686: PPUSH
6687: CALL_OW 3
6691: ST_TO_ADDR
// end ;
6692: GO 6632
6694: POP
6695: POP
// if not path then
6696: LD_VAR 0 2
6700: NOT
6701: IFFALSE 6705
// exit ;
6703: GO 8156
// tmp_path := [ ] ;
6705: LD_ADDR_VAR 0 11
6709: PUSH
6710: EMPTY
6711: ST_TO_ADDR
// if flags then
6712: LD_VAR 0 3
6716: IFFALSE 6790
// begin if flags [ 1 ] then
6718: LD_VAR 0 3
6722: PUSH
6723: LD_INT 1
6725: ARRAY
6726: IFFALSE 6742
// safe_place = flags [ 1 ] ;
6728: LD_ADDR_VAR 0 16
6732: PUSH
6733: LD_VAR 0 3
6737: PUSH
6738: LD_INT 1
6740: ARRAY
6741: ST_TO_ADDR
// if flags [ 2 ] then
6742: LD_VAR 0 3
6746: PUSH
6747: LD_INT 2
6749: ARRAY
6750: IFFALSE 6766
// spot_dist = flags [ 2 ] ;
6752: LD_ADDR_VAR 0 15
6756: PUSH
6757: LD_VAR 0 3
6761: PUSH
6762: LD_INT 2
6764: ARRAY
6765: ST_TO_ADDR
// if flags [ 3 ] then
6766: LD_VAR 0 3
6770: PUSH
6771: LD_INT 3
6773: ARRAY
6774: IFFALSE 6790
// chase_range = flags [ 3 ] ;
6776: LD_ADDR_VAR 0 17
6780: PUSH
6781: LD_VAR 0 3
6785: PUSH
6786: LD_INT 3
6788: ARRAY
6789: ST_TO_ADDR
// end ; if not chase_range then
6790: LD_VAR 0 17
6794: NOT
6795: IFFALSE 6805
// chase_range = 8 ;
6797: LD_ADDR_VAR 0 17
6801: PUSH
6802: LD_INT 8
6804: ST_TO_ADDR
// if not spot_dist then
6805: LD_VAR 0 15
6809: NOT
6810: IFFALSE 6820
// spot_dist := 8 ;
6812: LD_ADDR_VAR 0 15
6816: PUSH
6817: LD_INT 8
6819: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6820: LD_ADDR_VAR 0 18
6824: PUSH
6825: LD_VAR 0 1
6829: PPUSH
6830: CALL_OW 247
6834: PUSH
6835: LD_INT 2
6837: EQUAL
6838: PUSH
6839: LD_VAR 0 1
6843: PPUSH
6844: CALL_OW 262
6848: PUSH
6849: LD_INT 3
6851: NONEQUAL
6852: AND
6853: ST_TO_ADDR
// status = 1 ;
6854: LD_ADDR_VAR 0 12
6858: PUSH
6859: LD_INT 1
6861: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6862: LD_ADDR_VAR 0 11
6866: PUSH
6867: LD_INT 1
6869: PUSH
6870: LD_VAR 0 2
6874: PUSH
6875: LD_INT 1
6877: ARRAY
6878: PUSH
6879: EMPTY
6880: LIST
6881: LIST
6882: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6883: LD_INT 35
6885: PPUSH
6886: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6890: LD_VAR 0 18
6894: PUSH
6895: LD_VAR 0 1
6899: PPUSH
6900: CALL_OW 261
6904: PUSH
6905: LD_INT 20
6907: LESS
6908: AND
6909: IFFALSE 7102
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6911: LD_ADDR_VAR 0 10
6915: PUSH
6916: LD_INT 22
6918: PUSH
6919: LD_VAR 0 1
6923: PPUSH
6924: CALL_OW 255
6928: PUSH
6929: EMPTY
6930: LIST
6931: LIST
6932: PUSH
6933: LD_INT 2
6935: PUSH
6936: LD_INT 30
6938: PUSH
6939: LD_INT 0
6941: PUSH
6942: EMPTY
6943: LIST
6944: LIST
6945: PUSH
6946: LD_INT 30
6948: PUSH
6949: LD_INT 1
6951: PUSH
6952: EMPTY
6953: LIST
6954: LIST
6955: PUSH
6956: LD_INT 30
6958: PUSH
6959: LD_INT 29
6961: PUSH
6962: EMPTY
6963: LIST
6964: LIST
6965: PUSH
6966: LD_INT 30
6968: PUSH
6969: LD_INT 3
6971: PUSH
6972: EMPTY
6973: LIST
6974: LIST
6975: PUSH
6976: EMPTY
6977: LIST
6978: LIST
6979: LIST
6980: LIST
6981: LIST
6982: PUSH
6983: EMPTY
6984: LIST
6985: LIST
6986: PPUSH
6987: CALL_OW 69
6991: ST_TO_ADDR
// if not station then
6992: LD_VAR 0 10
6996: NOT
6997: IFFALSE 7013
// begin SetFuel ( unit , 40 ) ;
6999: LD_VAR 0 1
7003: PPUSH
7004: LD_INT 40
7006: PPUSH
7007: CALL_OW 240
// continue ;
7011: GO 6883
// end ; status := 6 ;
7013: LD_ADDR_VAR 0 12
7017: PUSH
7018: LD_INT 6
7020: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
7021: LD_ADDR_VAR 0 10
7025: PUSH
7026: LD_VAR 0 10
7030: PPUSH
7031: LD_VAR 0 1
7035: PPUSH
7036: CALL_OW 74
7040: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
7041: LD_INT 35
7043: PPUSH
7044: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
7048: LD_VAR 0 1
7052: PPUSH
7053: LD_VAR 0 10
7057: PPUSH
7058: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
7062: LD_VAR 0 1
7066: PPUSH
7067: LD_VAR 0 10
7071: PPUSH
7072: CALL_OW 296
7076: PUSH
7077: LD_INT 6
7079: LESS
7080: IFFALSE 7041
// SetFuel ( unit , 100 ) ;
7082: LD_VAR 0 1
7086: PPUSH
7087: LD_INT 100
7089: PPUSH
7090: CALL_OW 240
// status := 5 ;
7094: LD_ADDR_VAR 0 12
7098: PUSH
7099: LD_INT 5
7101: ST_TO_ADDR
// end ; if status = 1 then
7102: LD_VAR 0 12
7106: PUSH
7107: LD_INT 1
7109: EQUAL
7110: IFFALSE 7486
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
7112: LD_ADDR_VAR 0 13
7116: PUSH
7117: LD_INT 81
7119: PUSH
7120: LD_VAR 0 1
7124: PPUSH
7125: CALL_OW 255
7129: PUSH
7130: EMPTY
7131: LIST
7132: LIST
7133: PUSH
7134: LD_INT 3
7136: PUSH
7137: LD_INT 21
7139: PUSH
7140: LD_INT 3
7142: PUSH
7143: EMPTY
7144: LIST
7145: LIST
7146: PUSH
7147: EMPTY
7148: LIST
7149: LIST
7150: PUSH
7151: LD_INT 91
7153: PUSH
7154: LD_VAR 0 1
7158: PUSH
7159: LD_VAR 0 15
7163: PUSH
7164: EMPTY
7165: LIST
7166: LIST
7167: LIST
7168: PUSH
7169: LD_INT 101
7171: PUSH
7172: LD_INT 1
7174: PUSH
7175: EMPTY
7176: LIST
7177: LIST
7178: PUSH
7179: EMPTY
7180: LIST
7181: LIST
7182: LIST
7183: LIST
7184: PPUSH
7185: CALL_OW 69
7189: ST_TO_ADDR
// for i in enemy do
7190: LD_ADDR_VAR 0 5
7194: PUSH
7195: LD_VAR 0 13
7199: PUSH
7200: FOR_IN
7201: IFFALSE 7232
// if IsInvisible ( i ) then
7203: LD_VAR 0 5
7207: PPUSH
7208: CALL_OW 571
7212: IFFALSE 7230
// enemy := enemy diff i ;
7214: LD_ADDR_VAR 0 13
7218: PUSH
7219: LD_VAR 0 13
7223: PUSH
7224: LD_VAR 0 5
7228: DIFF
7229: ST_TO_ADDR
7230: GO 7200
7232: POP
7233: POP
// if enemy then
7234: LD_VAR 0 13
7238: IFFALSE 7288
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
7240: LD_VAR 0 1
7244: PPUSH
7245: LD_VAR 0 1
7249: PPUSH
7250: CALL_OW 250
7254: PPUSH
7255: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
7259: LD_VAR 0 1
7263: PPUSH
7264: LD_VAR 0 1
7268: PPUSH
7269: CALL_OW 251
7273: PPUSH
7274: CALL_OW 232
// status = 2 ;
7278: LD_ADDR_VAR 0 12
7282: PUSH
7283: LD_INT 2
7285: ST_TO_ADDR
// end else
7286: GO 7486
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
7288: LD_VAR 0 1
7292: PPUSH
7293: LD_VAR 0 11
7297: PUSH
7298: LD_INT 2
7300: ARRAY
7301: PUSH
7302: LD_INT 1
7304: ARRAY
7305: PPUSH
7306: LD_VAR 0 11
7310: PUSH
7311: LD_INT 2
7313: ARRAY
7314: PUSH
7315: LD_INT 2
7317: ARRAY
7318: PPUSH
7319: CALL_OW 307
7323: PUSH
7324: LD_VAR 0 1
7328: PPUSH
7329: CALL_OW 314
7333: NOT
7334: OR
7335: IFFALSE 7486
// begin wait ( 0 0$2 ) ;
7337: LD_INT 70
7339: PPUSH
7340: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
7344: LD_VAR 0 11
7348: PUSH
7349: LD_INT 1
7351: ARRAY
7352: PUSH
7353: LD_INT 1
7355: PLUS
7356: PUSH
7357: LD_VAR 0 2
7361: GREATER
7362: IFFALSE 7387
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
7364: LD_ADDR_VAR 0 11
7368: PUSH
7369: LD_VAR 0 11
7373: PPUSH
7374: LD_INT 1
7376: PPUSH
7377: LD_INT 1
7379: PPUSH
7380: CALL_OW 1
7384: ST_TO_ADDR
7385: GO 7418
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
7387: LD_ADDR_VAR 0 11
7391: PUSH
7392: LD_VAR 0 11
7396: PPUSH
7397: LD_INT 1
7399: PPUSH
7400: LD_VAR 0 11
7404: PUSH
7405: LD_INT 1
7407: ARRAY
7408: PUSH
7409: LD_INT 1
7411: PLUS
7412: PPUSH
7413: CALL_OW 1
7417: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
7418: LD_ADDR_VAR 0 11
7422: PUSH
7423: LD_VAR 0 11
7427: PPUSH
7428: LD_INT 2
7430: PPUSH
7431: LD_VAR 0 2
7435: PUSH
7436: LD_VAR 0 11
7440: PUSH
7441: LD_INT 1
7443: ARRAY
7444: ARRAY
7445: PPUSH
7446: CALL_OW 1
7450: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7451: LD_VAR 0 1
7455: PPUSH
7456: LD_VAR 0 11
7460: PUSH
7461: LD_INT 2
7463: ARRAY
7464: PUSH
7465: LD_INT 1
7467: ARRAY
7468: PPUSH
7469: LD_VAR 0 11
7473: PUSH
7474: LD_INT 2
7476: ARRAY
7477: PUSH
7478: LD_INT 2
7480: ARRAY
7481: PPUSH
7482: CALL_OW 114
// end ; end ; end ; if status = 2 then
7486: LD_VAR 0 12
7490: PUSH
7491: LD_INT 2
7493: EQUAL
7494: IFFALSE 7715
// begin if GetLives ( unit ) < 650 and safe_place then
7496: LD_VAR 0 1
7500: PPUSH
7501: CALL_OW 256
7505: PUSH
7506: LD_INT 650
7508: LESS
7509: PUSH
7510: LD_VAR 0 16
7514: AND
7515: IFFALSE 7527
// begin status = 3 ;
7517: LD_ADDR_VAR 0 12
7521: PUSH
7522: LD_INT 3
7524: ST_TO_ADDR
// continue ;
7525: GO 6883
// end ; x := GetRememberedX ( unit ) ;
7527: LD_ADDR_VAR 0 6
7531: PUSH
7532: LD_VAR 0 1
7536: PPUSH
7537: CALL_OW 252
7541: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7542: LD_ADDR_VAR 0 7
7546: PUSH
7547: LD_VAR 0 1
7551: PPUSH
7552: CALL_OW 253
7556: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7557: LD_ADDR_VAR 0 13
7561: PUSH
7562: LD_INT 81
7564: PUSH
7565: LD_VAR 0 1
7569: PPUSH
7570: CALL_OW 255
7574: PUSH
7575: EMPTY
7576: LIST
7577: LIST
7578: PUSH
7579: LD_INT 92
7581: PUSH
7582: LD_VAR 0 6
7586: PUSH
7587: LD_VAR 0 7
7591: PUSH
7592: LD_VAR 0 15
7596: PUSH
7597: EMPTY
7598: LIST
7599: LIST
7600: LIST
7601: LIST
7602: PUSH
7603: LD_INT 101
7605: PUSH
7606: LD_INT 1
7608: PUSH
7609: EMPTY
7610: LIST
7611: LIST
7612: PUSH
7613: EMPTY
7614: LIST
7615: LIST
7616: LIST
7617: PPUSH
7618: CALL_OW 69
7622: ST_TO_ADDR
// if enemy then
7623: LD_VAR 0 13
7627: IFFALSE 7698
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7629: LD_ADDR_VAR 0 14
7633: PUSH
7634: LD_VAR 0 13
7638: PPUSH
7639: LD_VAR 0 1
7643: PPUSH
7644: CALL_OW 74
7648: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7649: LD_VAR 0 14
7653: PPUSH
7654: LD_VAR 0 6
7658: PPUSH
7659: LD_VAR 0 7
7663: PPUSH
7664: CALL_OW 297
7668: PUSH
7669: LD_VAR 0 15
7673: PUSH
7674: LD_VAR 0 17
7678: PLUS
7679: LESS
7680: IFFALSE 7696
// ComAttackUnit ( unit , e ) ;
7682: LD_VAR 0 1
7686: PPUSH
7687: LD_VAR 0 14
7691: PPUSH
7692: CALL_OW 115
// end else
7696: GO 7715
// begin ComStop ( unit ) ;
7698: LD_VAR 0 1
7702: PPUSH
7703: CALL_OW 141
// status = 5 ;
7707: LD_ADDR_VAR 0 12
7711: PUSH
7712: LD_INT 5
7714: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7715: LD_VAR 0 12
7719: PUSH
7720: LD_INT 3
7722: EQUAL
7723: PUSH
7724: LD_VAR 0 16
7728: AND
7729: IFFALSE 7815
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7731: LD_VAR 0 1
7735: PPUSH
7736: LD_VAR 0 16
7740: PUSH
7741: LD_INT 1
7743: ARRAY
7744: PPUSH
7745: LD_VAR 0 16
7749: PUSH
7750: LD_INT 2
7752: ARRAY
7753: PPUSH
7754: CALL_OW 111
// wait ( 0 0$1 ) ;
7758: LD_INT 35
7760: PPUSH
7761: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7765: LD_VAR 0 1
7769: PPUSH
7770: LD_VAR 0 16
7774: PUSH
7775: LD_INT 1
7777: ARRAY
7778: PPUSH
7779: LD_VAR 0 16
7783: PUSH
7784: LD_INT 2
7786: ARRAY
7787: PPUSH
7788: CALL_OW 297
7792: PUSH
7793: LD_INT 4
7795: LESS
7796: IFFALSE 7731
// ComStop ( unit ) ;
7798: LD_VAR 0 1
7802: PPUSH
7803: CALL_OW 141
// status = 4 ;
7807: LD_ADDR_VAR 0 12
7811: PUSH
7812: LD_INT 4
7814: ST_TO_ADDR
// end ; if status = 4 then
7815: LD_VAR 0 12
7819: PUSH
7820: LD_INT 4
7822: EQUAL
7823: IFFALSE 7855
// begin repeat wait ( 0 0$1 ) ;
7825: LD_INT 35
7827: PPUSH
7828: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7832: LD_VAR 0 1
7836: PPUSH
7837: CALL_OW 256
7841: PUSH
7842: LD_INT 1000
7844: EQUAL
7845: IFFALSE 7825
// status = 5 ;
7847: LD_ADDR_VAR 0 12
7851: PUSH
7852: LD_INT 5
7854: ST_TO_ADDR
// end ; if status = 5 then
7855: LD_VAR 0 12
7859: PUSH
7860: LD_INT 5
7862: EQUAL
7863: IFFALSE 8145
// begin p := 999 ;
7865: LD_ADDR_VAR 0 9
7869: PUSH
7870: LD_INT 999
7872: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7873: LD_ADDR_VAR 0 14
7877: PUSH
7878: LD_VAR 0 11
7882: PUSH
7883: LD_INT 2
7885: ARRAY
7886: PUSH
7887: LD_INT 1
7889: ARRAY
7890: PUSH
7891: LD_VAR 0 11
7895: PUSH
7896: LD_INT 2
7898: ARRAY
7899: PUSH
7900: LD_INT 2
7902: ARRAY
7903: PUSH
7904: EMPTY
7905: LIST
7906: LIST
7907: ST_TO_ADDR
// c := 1 ;
7908: LD_ADDR_VAR 0 8
7912: PUSH
7913: LD_INT 1
7915: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7916: LD_ADDR_VAR 0 5
7920: PUSH
7921: DOUBLE
7922: LD_INT 1
7924: DEC
7925: ST_TO_ADDR
7926: LD_VAR 0 11
7930: PUSH
7931: LD_INT 2
7933: ARRAY
7934: PUSH
7935: LD_INT 2
7937: DIV
7938: PUSH
7939: FOR_TO
7940: IFFALSE 8072
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7942: LD_ADDR_VAR 0 6
7946: PUSH
7947: LD_VAR 0 1
7951: PPUSH
7952: LD_VAR 0 11
7956: PUSH
7957: LD_INT 2
7959: ARRAY
7960: PUSH
7961: LD_VAR 0 8
7965: ARRAY
7966: PPUSH
7967: LD_VAR 0 11
7971: PUSH
7972: LD_INT 2
7974: ARRAY
7975: PUSH
7976: LD_VAR 0 8
7980: PUSH
7981: LD_INT 1
7983: PLUS
7984: ARRAY
7985: PPUSH
7986: CALL_OW 297
7990: ST_TO_ADDR
// if x < p then
7991: LD_VAR 0 6
7995: PUSH
7996: LD_VAR 0 9
8000: LESS
8001: IFFALSE 8056
// begin p := x ;
8003: LD_ADDR_VAR 0 9
8007: PUSH
8008: LD_VAR 0 6
8012: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
8013: LD_ADDR_VAR 0 14
8017: PUSH
8018: LD_VAR 0 11
8022: PUSH
8023: LD_INT 2
8025: ARRAY
8026: PUSH
8027: LD_VAR 0 8
8031: ARRAY
8032: PUSH
8033: LD_VAR 0 11
8037: PUSH
8038: LD_INT 2
8040: ARRAY
8041: PUSH
8042: LD_VAR 0 8
8046: PUSH
8047: LD_INT 1
8049: PLUS
8050: ARRAY
8051: PUSH
8052: EMPTY
8053: LIST
8054: LIST
8055: ST_TO_ADDR
// end ; c = c + 2 ;
8056: LD_ADDR_VAR 0 8
8060: PUSH
8061: LD_VAR 0 8
8065: PUSH
8066: LD_INT 2
8068: PLUS
8069: ST_TO_ADDR
// end ;
8070: GO 7939
8072: POP
8073: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
8074: LD_VAR 0 1
8078: PPUSH
8079: LD_VAR 0 14
8083: PUSH
8084: LD_INT 1
8086: ARRAY
8087: PPUSH
8088: LD_VAR 0 14
8092: PUSH
8093: LD_INT 2
8095: ARRAY
8096: PPUSH
8097: CALL_OW 111
// wait ( 0 0$1 ) ;
8101: LD_INT 35
8103: PPUSH
8104: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
8108: LD_VAR 0 1
8112: PPUSH
8113: LD_VAR 0 14
8117: PUSH
8118: LD_INT 1
8120: ARRAY
8121: PPUSH
8122: LD_VAR 0 14
8126: PUSH
8127: LD_INT 2
8129: ARRAY
8130: PPUSH
8131: CALL_OW 307
8135: IFFALSE 8074
// status = 1 ;
8137: LD_ADDR_VAR 0 12
8141: PUSH
8142: LD_INT 1
8144: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
8145: LD_VAR 0 1
8149: PPUSH
8150: CALL_OW 301
8154: IFFALSE 6883
// end ;
8156: LD_VAR 0 4
8160: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
8161: LD_INT 0
8163: PPUSH
8164: PPUSH
8165: PPUSH
8166: PPUSH
8167: PPUSH
8168: PPUSH
8169: PPUSH
8170: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
8171: LD_VAR 0 1
8175: NOT
8176: PUSH
8177: LD_VAR 0 3
8181: NOT
8182: OR
8183: PUSH
8184: LD_VAR 0 4
8188: PUSH
8189: LD_INT 1
8191: PUSH
8192: LD_INT 2
8194: PUSH
8195: LD_INT 0
8197: PUSH
8198: EMPTY
8199: LIST
8200: LIST
8201: LIST
8202: IN
8203: NOT
8204: OR
8205: PUSH
8206: LD_VAR 0 6
8210: NOT
8211: OR
8212: PUSH
8213: LD_VAR 0 7
8217: NOT
8218: OR
8219: IFFALSE 8223
// exit ;
8221: GO 8614
// sex_id :=  ;
8223: LD_ADDR_VAR 0 14
8227: PUSH
8228: LD_STRING 
8230: ST_TO_ADDR
// case class of 1 :
8231: LD_VAR 0 5
8235: PUSH
8236: LD_INT 1
8238: DOUBLE
8239: EQUAL
8240: IFTRUE 8244
8242: GO 8255
8244: POP
// class_id := Sol ; 2 :
8245: LD_ADDR_VAR 0 15
8249: PUSH
8250: LD_STRING Sol
8252: ST_TO_ADDR
8253: GO 8313
8255: LD_INT 2
8257: DOUBLE
8258: EQUAL
8259: IFTRUE 8263
8261: GO 8274
8263: POP
// class_id := Eng ; 3 :
8264: LD_ADDR_VAR 0 15
8268: PUSH
8269: LD_STRING Eng
8271: ST_TO_ADDR
8272: GO 8313
8274: LD_INT 3
8276: DOUBLE
8277: EQUAL
8278: IFTRUE 8282
8280: GO 8293
8282: POP
// class_id := Mech ; 4 :
8283: LD_ADDR_VAR 0 15
8287: PUSH
8288: LD_STRING Mech
8290: ST_TO_ADDR
8291: GO 8313
8293: LD_INT 4
8295: DOUBLE
8296: EQUAL
8297: IFTRUE 8301
8299: GO 8312
8301: POP
// class_id := Sci ; end ;
8302: LD_ADDR_VAR 0 15
8306: PUSH
8307: LD_STRING Sci
8309: ST_TO_ADDR
8310: GO 8313
8312: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
8313: LD_ADDR_VAR 0 11
8317: PUSH
8318: LD_VAR 0 1
8322: PPUSH
8323: LD_INT 25
8325: PUSH
8326: LD_VAR 0 5
8330: PUSH
8331: EMPTY
8332: LIST
8333: LIST
8334: PPUSH
8335: CALL_OW 72
8339: ST_TO_ADDR
// if tmp then
8340: LD_VAR 0 11
8344: IFFALSE 8356
// units := tmp ;
8346: LD_ADDR_VAR 0 1
8350: PUSH
8351: LD_VAR 0 11
8355: ST_TO_ADDR
// if sex then
8356: LD_VAR 0 4
8360: IFFALSE 8416
// begin if sex = sex_female then
8362: LD_VAR 0 4
8366: PUSH
8367: LD_INT 2
8369: EQUAL
8370: IFFALSE 8380
// sex_id := F ;
8372: LD_ADDR_VAR 0 14
8376: PUSH
8377: LD_STRING F
8379: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
8380: LD_ADDR_VAR 0 1
8384: PUSH
8385: LD_VAR 0 1
8389: PPUSH
8390: LD_INT 26
8392: PUSH
8393: LD_VAR 0 4
8397: PUSH
8398: EMPTY
8399: LIST
8400: LIST
8401: PPUSH
8402: CALL_OW 72
8406: ST_TO_ADDR
// if not units then
8407: LD_VAR 0 1
8411: NOT
8412: IFFALSE 8416
// exit ;
8414: GO 8614
// end ; unit_id := id ;
8416: LD_ADDR_VAR 0 12
8420: PUSH
8421: LD_VAR 0 6
8425: ST_TO_ADDR
// if unit_id > units then
8426: LD_VAR 0 12
8430: PUSH
8431: LD_VAR 0 1
8435: GREATER
8436: IFFALSE 8446
// unit_id := 1 ;
8438: LD_ADDR_VAR 0 12
8442: PUSH
8443: LD_INT 1
8445: ST_TO_ADDR
// if not units [ unit_id ] then
8446: LD_VAR 0 1
8450: PUSH
8451: LD_VAR 0 12
8455: ARRAY
8456: NOT
8457: IFFALSE 8461
// exit ;
8459: GO 8614
// unit := units [ unit_id ] ;
8461: LD_ADDR_VAR 0 10
8465: PUSH
8466: LD_VAR 0 1
8470: PUSH
8471: LD_VAR 0 12
8475: ARRAY
8476: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8477: LD_ADDR_VAR 0 13
8481: PUSH
8482: LD_STRING D
8484: PUSH
8485: LD_VAR 0 3
8489: STR
8490: PUSH
8491: LD_STRING -
8493: STR
8494: PUSH
8495: LD_VAR 0 14
8499: STR
8500: PUSH
8501: LD_VAR 0 15
8505: STR
8506: PUSH
8507: LD_VAR 0 6
8511: STR
8512: PUSH
8513: LD_STRING -
8515: STR
8516: PUSH
8517: LD_VAR 0 7
8521: STR
8522: ST_TO_ADDR
// case type of 0 :
8523: LD_VAR 0 2
8527: PUSH
8528: LD_INT 0
8530: DOUBLE
8531: EQUAL
8532: IFTRUE 8536
8534: GO 8553
8536: POP
// Say ( unit , dialog_id ) ; 1 :
8537: LD_VAR 0 10
8541: PPUSH
8542: LD_VAR 0 13
8546: PPUSH
8547: CALL_OW 88
8551: GO 8604
8553: LD_INT 1
8555: DOUBLE
8556: EQUAL
8557: IFTRUE 8561
8559: GO 8578
8561: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8562: LD_VAR 0 10
8566: PPUSH
8567: LD_VAR 0 13
8571: PPUSH
8572: CALL_OW 94
8576: GO 8604
8578: LD_INT 2
8580: DOUBLE
8581: EQUAL
8582: IFTRUE 8586
8584: GO 8603
8586: POP
// ForceSay ( unit , dialog_id ) ; end ;
8587: LD_VAR 0 10
8591: PPUSH
8592: LD_VAR 0 13
8596: PPUSH
8597: CALL_OW 91
8601: GO 8604
8603: POP
// result := unit ;
8604: LD_ADDR_VAR 0 8
8608: PUSH
8609: LD_VAR 0 10
8613: ST_TO_ADDR
// end ;
8614: LD_VAR 0 8
8618: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8619: LD_INT 0
8621: PPUSH
8622: PPUSH
8623: PPUSH
8624: PPUSH
8625: PPUSH
8626: PPUSH
8627: PPUSH
// result := array ;
8628: LD_ADDR_VAR 0 5
8632: PUSH
8633: LD_VAR 0 1
8637: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8638: LD_VAR 0 1
8642: NOT
8643: PUSH
8644: LD_VAR 0 2
8648: NOT
8649: OR
8650: PUSH
8651: LD_VAR 0 3
8655: NOT
8656: OR
8657: PUSH
8658: LD_VAR 0 2
8662: PUSH
8663: LD_VAR 0 1
8667: GREATER
8668: OR
8669: PUSH
8670: LD_VAR 0 3
8674: PUSH
8675: LD_VAR 0 1
8679: GREATER
8680: OR
8681: IFFALSE 8685
// exit ;
8683: GO 8981
// if direction then
8685: LD_VAR 0 4
8689: IFFALSE 8753
// begin d := 1 ;
8691: LD_ADDR_VAR 0 9
8695: PUSH
8696: LD_INT 1
8698: ST_TO_ADDR
// if i_from > i_to then
8699: LD_VAR 0 2
8703: PUSH
8704: LD_VAR 0 3
8708: GREATER
8709: IFFALSE 8735
// length := ( array - i_from ) + i_to else
8711: LD_ADDR_VAR 0 11
8715: PUSH
8716: LD_VAR 0 1
8720: PUSH
8721: LD_VAR 0 2
8725: MINUS
8726: PUSH
8727: LD_VAR 0 3
8731: PLUS
8732: ST_TO_ADDR
8733: GO 8751
// length := i_to - i_from ;
8735: LD_ADDR_VAR 0 11
8739: PUSH
8740: LD_VAR 0 3
8744: PUSH
8745: LD_VAR 0 2
8749: MINUS
8750: ST_TO_ADDR
// end else
8751: GO 8814
// begin d := - 1 ;
8753: LD_ADDR_VAR 0 9
8757: PUSH
8758: LD_INT 1
8760: NEG
8761: ST_TO_ADDR
// if i_from > i_to then
8762: LD_VAR 0 2
8766: PUSH
8767: LD_VAR 0 3
8771: GREATER
8772: IFFALSE 8792
// length := i_from - i_to else
8774: LD_ADDR_VAR 0 11
8778: PUSH
8779: LD_VAR 0 2
8783: PUSH
8784: LD_VAR 0 3
8788: MINUS
8789: ST_TO_ADDR
8790: GO 8814
// length := ( array - i_to ) + i_from ;
8792: LD_ADDR_VAR 0 11
8796: PUSH
8797: LD_VAR 0 1
8801: PUSH
8802: LD_VAR 0 3
8806: MINUS
8807: PUSH
8808: LD_VAR 0 2
8812: PLUS
8813: ST_TO_ADDR
// end ; if not length then
8814: LD_VAR 0 11
8818: NOT
8819: IFFALSE 8823
// exit ;
8821: GO 8981
// tmp := array ;
8823: LD_ADDR_VAR 0 10
8827: PUSH
8828: LD_VAR 0 1
8832: ST_TO_ADDR
// for i = 1 to length do
8833: LD_ADDR_VAR 0 6
8837: PUSH
8838: DOUBLE
8839: LD_INT 1
8841: DEC
8842: ST_TO_ADDR
8843: LD_VAR 0 11
8847: PUSH
8848: FOR_TO
8849: IFFALSE 8969
// begin for j = 1 to array do
8851: LD_ADDR_VAR 0 7
8855: PUSH
8856: DOUBLE
8857: LD_INT 1
8859: DEC
8860: ST_TO_ADDR
8861: LD_VAR 0 1
8865: PUSH
8866: FOR_TO
8867: IFFALSE 8955
// begin k := j + d ;
8869: LD_ADDR_VAR 0 8
8873: PUSH
8874: LD_VAR 0 7
8878: PUSH
8879: LD_VAR 0 9
8883: PLUS
8884: ST_TO_ADDR
// if k > array then
8885: LD_VAR 0 8
8889: PUSH
8890: LD_VAR 0 1
8894: GREATER
8895: IFFALSE 8905
// k := 1 ;
8897: LD_ADDR_VAR 0 8
8901: PUSH
8902: LD_INT 1
8904: ST_TO_ADDR
// if not k then
8905: LD_VAR 0 8
8909: NOT
8910: IFFALSE 8922
// k := array ;
8912: LD_ADDR_VAR 0 8
8916: PUSH
8917: LD_VAR 0 1
8921: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8922: LD_ADDR_VAR 0 10
8926: PUSH
8927: LD_VAR 0 10
8931: PPUSH
8932: LD_VAR 0 8
8936: PPUSH
8937: LD_VAR 0 1
8941: PUSH
8942: LD_VAR 0 7
8946: ARRAY
8947: PPUSH
8948: CALL_OW 1
8952: ST_TO_ADDR
// end ;
8953: GO 8866
8955: POP
8956: POP
// array := tmp ;
8957: LD_ADDR_VAR 0 1
8961: PUSH
8962: LD_VAR 0 10
8966: ST_TO_ADDR
// end ;
8967: GO 8848
8969: POP
8970: POP
// result := array ;
8971: LD_ADDR_VAR 0 5
8975: PUSH
8976: LD_VAR 0 1
8980: ST_TO_ADDR
// end ;
8981: LD_VAR 0 5
8985: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8986: LD_INT 0
8988: PPUSH
8989: PPUSH
8990: PPUSH
8991: PPUSH
8992: PPUSH
8993: PPUSH
8994: PPUSH
8995: PPUSH
8996: PPUSH
8997: PPUSH
8998: PPUSH
8999: PPUSH
9000: PPUSH
9001: PPUSH
9002: PPUSH
9003: PPUSH
9004: PPUSH
9005: PPUSH
9006: PPUSH
9007: PPUSH
9008: PPUSH
9009: PPUSH
9010: PPUSH
9011: PPUSH
9012: PPUSH
9013: PPUSH
9014: PPUSH
9015: PPUSH
9016: PPUSH
9017: PPUSH
9018: PPUSH
9019: PPUSH
9020: PPUSH
9021: PPUSH
9022: PPUSH
9023: PPUSH
9024: PPUSH
9025: PPUSH
9026: PPUSH
9027: PPUSH
9028: PPUSH
9029: PPUSH
9030: PPUSH
9031: PPUSH
9032: PPUSH
9033: PPUSH
9034: PPUSH
9035: PPUSH
9036: PPUSH
9037: PPUSH
9038: PPUSH
9039: PPUSH
9040: PPUSH
9041: PPUSH
9042: PPUSH
9043: PPUSH
9044: PPUSH
9045: PPUSH
// result = [ ] ;
9046: LD_ADDR_VAR 0 7
9050: PUSH
9051: EMPTY
9052: ST_TO_ADDR
// temp_list = [ ] ;
9053: LD_ADDR_VAR 0 9
9057: PUSH
9058: EMPTY
9059: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
9060: LD_VAR 0 4
9064: PUSH
9065: LD_INT 0
9067: PUSH
9068: LD_INT 1
9070: PUSH
9071: LD_INT 2
9073: PUSH
9074: LD_INT 3
9076: PUSH
9077: LD_INT 4
9079: PUSH
9080: LD_INT 5
9082: PUSH
9083: EMPTY
9084: LIST
9085: LIST
9086: LIST
9087: LIST
9088: LIST
9089: LIST
9090: IN
9091: NOT
9092: PUSH
9093: LD_VAR 0 1
9097: PUSH
9098: LD_INT 0
9100: PUSH
9101: LD_INT 1
9103: PUSH
9104: EMPTY
9105: LIST
9106: LIST
9107: IN
9108: PUSH
9109: LD_VAR 0 5
9113: PUSH
9114: LD_INT 1
9116: PUSH
9117: LD_INT 2
9119: PUSH
9120: LD_INT 3
9122: PUSH
9123: EMPTY
9124: LIST
9125: LIST
9126: LIST
9127: IN
9128: NOT
9129: AND
9130: OR
9131: IFFALSE 9135
// exit ;
9133: GO 27520
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
9135: LD_VAR 0 1
9139: PUSH
9140: LD_INT 6
9142: PUSH
9143: LD_INT 7
9145: PUSH
9146: LD_INT 8
9148: PUSH
9149: LD_INT 13
9151: PUSH
9152: LD_INT 12
9154: PUSH
9155: LD_INT 15
9157: PUSH
9158: LD_INT 11
9160: PUSH
9161: LD_INT 14
9163: PUSH
9164: LD_INT 10
9166: PUSH
9167: EMPTY
9168: LIST
9169: LIST
9170: LIST
9171: LIST
9172: LIST
9173: LIST
9174: LIST
9175: LIST
9176: LIST
9177: IN
9178: IFFALSE 9188
// btype = b_lab ;
9180: LD_ADDR_VAR 0 1
9184: PUSH
9185: LD_INT 6
9187: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
9188: LD_VAR 0 6
9192: PUSH
9193: LD_INT 0
9195: PUSH
9196: LD_INT 1
9198: PUSH
9199: LD_INT 2
9201: PUSH
9202: EMPTY
9203: LIST
9204: LIST
9205: LIST
9206: IN
9207: NOT
9208: PUSH
9209: LD_VAR 0 1
9213: PUSH
9214: LD_INT 0
9216: PUSH
9217: LD_INT 1
9219: PUSH
9220: LD_INT 2
9222: PUSH
9223: LD_INT 3
9225: PUSH
9226: LD_INT 6
9228: PUSH
9229: LD_INT 36
9231: PUSH
9232: LD_INT 4
9234: PUSH
9235: LD_INT 5
9237: PUSH
9238: LD_INT 31
9240: PUSH
9241: LD_INT 32
9243: PUSH
9244: LD_INT 33
9246: PUSH
9247: EMPTY
9248: LIST
9249: LIST
9250: LIST
9251: LIST
9252: LIST
9253: LIST
9254: LIST
9255: LIST
9256: LIST
9257: LIST
9258: LIST
9259: IN
9260: NOT
9261: PUSH
9262: LD_VAR 0 6
9266: PUSH
9267: LD_INT 1
9269: EQUAL
9270: AND
9271: OR
9272: PUSH
9273: LD_VAR 0 1
9277: PUSH
9278: LD_INT 2
9280: PUSH
9281: LD_INT 3
9283: PUSH
9284: EMPTY
9285: LIST
9286: LIST
9287: IN
9288: NOT
9289: PUSH
9290: LD_VAR 0 6
9294: PUSH
9295: LD_INT 2
9297: EQUAL
9298: AND
9299: OR
9300: IFFALSE 9310
// mode = 0 ;
9302: LD_ADDR_VAR 0 6
9306: PUSH
9307: LD_INT 0
9309: ST_TO_ADDR
// case mode of 0 :
9310: LD_VAR 0 6
9314: PUSH
9315: LD_INT 0
9317: DOUBLE
9318: EQUAL
9319: IFTRUE 9323
9321: GO 20776
9323: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
9324: LD_ADDR_VAR 0 11
9328: PUSH
9329: LD_INT 0
9331: PUSH
9332: LD_INT 0
9334: PUSH
9335: EMPTY
9336: LIST
9337: LIST
9338: PUSH
9339: LD_INT 0
9341: PUSH
9342: LD_INT 1
9344: NEG
9345: PUSH
9346: EMPTY
9347: LIST
9348: LIST
9349: PUSH
9350: LD_INT 1
9352: PUSH
9353: LD_INT 0
9355: PUSH
9356: EMPTY
9357: LIST
9358: LIST
9359: PUSH
9360: LD_INT 1
9362: PUSH
9363: LD_INT 1
9365: PUSH
9366: EMPTY
9367: LIST
9368: LIST
9369: PUSH
9370: LD_INT 0
9372: PUSH
9373: LD_INT 1
9375: PUSH
9376: EMPTY
9377: LIST
9378: LIST
9379: PUSH
9380: LD_INT 1
9382: NEG
9383: PUSH
9384: LD_INT 0
9386: PUSH
9387: EMPTY
9388: LIST
9389: LIST
9390: PUSH
9391: LD_INT 1
9393: NEG
9394: PUSH
9395: LD_INT 1
9397: NEG
9398: PUSH
9399: EMPTY
9400: LIST
9401: LIST
9402: PUSH
9403: LD_INT 1
9405: NEG
9406: PUSH
9407: LD_INT 2
9409: NEG
9410: PUSH
9411: EMPTY
9412: LIST
9413: LIST
9414: PUSH
9415: LD_INT 0
9417: PUSH
9418: LD_INT 2
9420: NEG
9421: PUSH
9422: EMPTY
9423: LIST
9424: LIST
9425: PUSH
9426: LD_INT 1
9428: PUSH
9429: LD_INT 1
9431: NEG
9432: PUSH
9433: EMPTY
9434: LIST
9435: LIST
9436: PUSH
9437: LD_INT 1
9439: PUSH
9440: LD_INT 2
9442: PUSH
9443: EMPTY
9444: LIST
9445: LIST
9446: PUSH
9447: LD_INT 0
9449: PUSH
9450: LD_INT 2
9452: PUSH
9453: EMPTY
9454: LIST
9455: LIST
9456: PUSH
9457: LD_INT 1
9459: NEG
9460: PUSH
9461: LD_INT 1
9463: PUSH
9464: EMPTY
9465: LIST
9466: LIST
9467: PUSH
9468: LD_INT 1
9470: PUSH
9471: LD_INT 3
9473: PUSH
9474: EMPTY
9475: LIST
9476: LIST
9477: PUSH
9478: LD_INT 0
9480: PUSH
9481: LD_INT 3
9483: PUSH
9484: EMPTY
9485: LIST
9486: LIST
9487: PUSH
9488: LD_INT 1
9490: NEG
9491: PUSH
9492: LD_INT 2
9494: PUSH
9495: EMPTY
9496: LIST
9497: LIST
9498: PUSH
9499: EMPTY
9500: LIST
9501: LIST
9502: LIST
9503: LIST
9504: LIST
9505: LIST
9506: LIST
9507: LIST
9508: LIST
9509: LIST
9510: LIST
9511: LIST
9512: LIST
9513: LIST
9514: LIST
9515: LIST
9516: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9517: LD_ADDR_VAR 0 12
9521: PUSH
9522: LD_INT 0
9524: PUSH
9525: LD_INT 0
9527: PUSH
9528: EMPTY
9529: LIST
9530: LIST
9531: PUSH
9532: LD_INT 0
9534: PUSH
9535: LD_INT 1
9537: NEG
9538: PUSH
9539: EMPTY
9540: LIST
9541: LIST
9542: PUSH
9543: LD_INT 1
9545: PUSH
9546: LD_INT 0
9548: PUSH
9549: EMPTY
9550: LIST
9551: LIST
9552: PUSH
9553: LD_INT 1
9555: PUSH
9556: LD_INT 1
9558: PUSH
9559: EMPTY
9560: LIST
9561: LIST
9562: PUSH
9563: LD_INT 0
9565: PUSH
9566: LD_INT 1
9568: PUSH
9569: EMPTY
9570: LIST
9571: LIST
9572: PUSH
9573: LD_INT 1
9575: NEG
9576: PUSH
9577: LD_INT 0
9579: PUSH
9580: EMPTY
9581: LIST
9582: LIST
9583: PUSH
9584: LD_INT 1
9586: NEG
9587: PUSH
9588: LD_INT 1
9590: NEG
9591: PUSH
9592: EMPTY
9593: LIST
9594: LIST
9595: PUSH
9596: LD_INT 1
9598: PUSH
9599: LD_INT 1
9601: NEG
9602: PUSH
9603: EMPTY
9604: LIST
9605: LIST
9606: PUSH
9607: LD_INT 2
9609: PUSH
9610: LD_INT 0
9612: PUSH
9613: EMPTY
9614: LIST
9615: LIST
9616: PUSH
9617: LD_INT 2
9619: PUSH
9620: LD_INT 1
9622: PUSH
9623: EMPTY
9624: LIST
9625: LIST
9626: PUSH
9627: LD_INT 1
9629: NEG
9630: PUSH
9631: LD_INT 1
9633: PUSH
9634: EMPTY
9635: LIST
9636: LIST
9637: PUSH
9638: LD_INT 2
9640: NEG
9641: PUSH
9642: LD_INT 0
9644: PUSH
9645: EMPTY
9646: LIST
9647: LIST
9648: PUSH
9649: LD_INT 2
9651: NEG
9652: PUSH
9653: LD_INT 1
9655: NEG
9656: PUSH
9657: EMPTY
9658: LIST
9659: LIST
9660: PUSH
9661: LD_INT 2
9663: NEG
9664: PUSH
9665: LD_INT 1
9667: PUSH
9668: EMPTY
9669: LIST
9670: LIST
9671: PUSH
9672: LD_INT 3
9674: NEG
9675: PUSH
9676: LD_INT 0
9678: PUSH
9679: EMPTY
9680: LIST
9681: LIST
9682: PUSH
9683: LD_INT 3
9685: NEG
9686: PUSH
9687: LD_INT 1
9689: NEG
9690: PUSH
9691: EMPTY
9692: LIST
9693: LIST
9694: PUSH
9695: EMPTY
9696: LIST
9697: LIST
9698: LIST
9699: LIST
9700: LIST
9701: LIST
9702: LIST
9703: LIST
9704: LIST
9705: LIST
9706: LIST
9707: LIST
9708: LIST
9709: LIST
9710: LIST
9711: LIST
9712: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9713: LD_ADDR_VAR 0 13
9717: PUSH
9718: LD_INT 0
9720: PUSH
9721: LD_INT 0
9723: PUSH
9724: EMPTY
9725: LIST
9726: LIST
9727: PUSH
9728: LD_INT 0
9730: PUSH
9731: LD_INT 1
9733: NEG
9734: PUSH
9735: EMPTY
9736: LIST
9737: LIST
9738: PUSH
9739: LD_INT 1
9741: PUSH
9742: LD_INT 0
9744: PUSH
9745: EMPTY
9746: LIST
9747: LIST
9748: PUSH
9749: LD_INT 1
9751: PUSH
9752: LD_INT 1
9754: PUSH
9755: EMPTY
9756: LIST
9757: LIST
9758: PUSH
9759: LD_INT 0
9761: PUSH
9762: LD_INT 1
9764: PUSH
9765: EMPTY
9766: LIST
9767: LIST
9768: PUSH
9769: LD_INT 1
9771: NEG
9772: PUSH
9773: LD_INT 0
9775: PUSH
9776: EMPTY
9777: LIST
9778: LIST
9779: PUSH
9780: LD_INT 1
9782: NEG
9783: PUSH
9784: LD_INT 1
9786: NEG
9787: PUSH
9788: EMPTY
9789: LIST
9790: LIST
9791: PUSH
9792: LD_INT 1
9794: NEG
9795: PUSH
9796: LD_INT 2
9798: NEG
9799: PUSH
9800: EMPTY
9801: LIST
9802: LIST
9803: PUSH
9804: LD_INT 2
9806: PUSH
9807: LD_INT 1
9809: PUSH
9810: EMPTY
9811: LIST
9812: LIST
9813: PUSH
9814: LD_INT 2
9816: PUSH
9817: LD_INT 2
9819: PUSH
9820: EMPTY
9821: LIST
9822: LIST
9823: PUSH
9824: LD_INT 1
9826: PUSH
9827: LD_INT 2
9829: PUSH
9830: EMPTY
9831: LIST
9832: LIST
9833: PUSH
9834: LD_INT 2
9836: NEG
9837: PUSH
9838: LD_INT 1
9840: NEG
9841: PUSH
9842: EMPTY
9843: LIST
9844: LIST
9845: PUSH
9846: LD_INT 2
9848: NEG
9849: PUSH
9850: LD_INT 2
9852: NEG
9853: PUSH
9854: EMPTY
9855: LIST
9856: LIST
9857: PUSH
9858: LD_INT 2
9860: NEG
9861: PUSH
9862: LD_INT 3
9864: NEG
9865: PUSH
9866: EMPTY
9867: LIST
9868: LIST
9869: PUSH
9870: LD_INT 3
9872: NEG
9873: PUSH
9874: LD_INT 2
9876: NEG
9877: PUSH
9878: EMPTY
9879: LIST
9880: LIST
9881: PUSH
9882: LD_INT 3
9884: NEG
9885: PUSH
9886: LD_INT 3
9888: NEG
9889: PUSH
9890: EMPTY
9891: LIST
9892: LIST
9893: PUSH
9894: EMPTY
9895: LIST
9896: LIST
9897: LIST
9898: LIST
9899: LIST
9900: LIST
9901: LIST
9902: LIST
9903: LIST
9904: LIST
9905: LIST
9906: LIST
9907: LIST
9908: LIST
9909: LIST
9910: LIST
9911: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9912: LD_ADDR_VAR 0 14
9916: PUSH
9917: LD_INT 0
9919: PUSH
9920: LD_INT 0
9922: PUSH
9923: EMPTY
9924: LIST
9925: LIST
9926: PUSH
9927: LD_INT 0
9929: PUSH
9930: LD_INT 1
9932: NEG
9933: PUSH
9934: EMPTY
9935: LIST
9936: LIST
9937: PUSH
9938: LD_INT 1
9940: PUSH
9941: LD_INT 0
9943: PUSH
9944: EMPTY
9945: LIST
9946: LIST
9947: PUSH
9948: LD_INT 1
9950: PUSH
9951: LD_INT 1
9953: PUSH
9954: EMPTY
9955: LIST
9956: LIST
9957: PUSH
9958: LD_INT 0
9960: PUSH
9961: LD_INT 1
9963: PUSH
9964: EMPTY
9965: LIST
9966: LIST
9967: PUSH
9968: LD_INT 1
9970: NEG
9971: PUSH
9972: LD_INT 0
9974: PUSH
9975: EMPTY
9976: LIST
9977: LIST
9978: PUSH
9979: LD_INT 1
9981: NEG
9982: PUSH
9983: LD_INT 1
9985: NEG
9986: PUSH
9987: EMPTY
9988: LIST
9989: LIST
9990: PUSH
9991: LD_INT 1
9993: NEG
9994: PUSH
9995: LD_INT 2
9997: NEG
9998: PUSH
9999: EMPTY
10000: LIST
10001: LIST
10002: PUSH
10003: LD_INT 0
10005: PUSH
10006: LD_INT 2
10008: NEG
10009: PUSH
10010: EMPTY
10011: LIST
10012: LIST
10013: PUSH
10014: LD_INT 1
10016: PUSH
10017: LD_INT 1
10019: NEG
10020: PUSH
10021: EMPTY
10022: LIST
10023: LIST
10024: PUSH
10025: LD_INT 1
10027: PUSH
10028: LD_INT 2
10030: PUSH
10031: EMPTY
10032: LIST
10033: LIST
10034: PUSH
10035: LD_INT 0
10037: PUSH
10038: LD_INT 2
10040: PUSH
10041: EMPTY
10042: LIST
10043: LIST
10044: PUSH
10045: LD_INT 1
10047: NEG
10048: PUSH
10049: LD_INT 1
10051: PUSH
10052: EMPTY
10053: LIST
10054: LIST
10055: PUSH
10056: LD_INT 1
10058: NEG
10059: PUSH
10060: LD_INT 3
10062: NEG
10063: PUSH
10064: EMPTY
10065: LIST
10066: LIST
10067: PUSH
10068: LD_INT 0
10070: PUSH
10071: LD_INT 3
10073: NEG
10074: PUSH
10075: EMPTY
10076: LIST
10077: LIST
10078: PUSH
10079: LD_INT 1
10081: PUSH
10082: LD_INT 2
10084: NEG
10085: PUSH
10086: EMPTY
10087: LIST
10088: LIST
10089: PUSH
10090: EMPTY
10091: LIST
10092: LIST
10093: LIST
10094: LIST
10095: LIST
10096: LIST
10097: LIST
10098: LIST
10099: LIST
10100: LIST
10101: LIST
10102: LIST
10103: LIST
10104: LIST
10105: LIST
10106: LIST
10107: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
10108: LD_ADDR_VAR 0 15
10112: PUSH
10113: LD_INT 0
10115: PUSH
10116: LD_INT 0
10118: PUSH
10119: EMPTY
10120: LIST
10121: LIST
10122: PUSH
10123: LD_INT 0
10125: PUSH
10126: LD_INT 1
10128: NEG
10129: PUSH
10130: EMPTY
10131: LIST
10132: LIST
10133: PUSH
10134: LD_INT 1
10136: PUSH
10137: LD_INT 0
10139: PUSH
10140: EMPTY
10141: LIST
10142: LIST
10143: PUSH
10144: LD_INT 1
10146: PUSH
10147: LD_INT 1
10149: PUSH
10150: EMPTY
10151: LIST
10152: LIST
10153: PUSH
10154: LD_INT 0
10156: PUSH
10157: LD_INT 1
10159: PUSH
10160: EMPTY
10161: LIST
10162: LIST
10163: PUSH
10164: LD_INT 1
10166: NEG
10167: PUSH
10168: LD_INT 0
10170: PUSH
10171: EMPTY
10172: LIST
10173: LIST
10174: PUSH
10175: LD_INT 1
10177: NEG
10178: PUSH
10179: LD_INT 1
10181: NEG
10182: PUSH
10183: EMPTY
10184: LIST
10185: LIST
10186: PUSH
10187: LD_INT 1
10189: PUSH
10190: LD_INT 1
10192: NEG
10193: PUSH
10194: EMPTY
10195: LIST
10196: LIST
10197: PUSH
10198: LD_INT 2
10200: PUSH
10201: LD_INT 0
10203: PUSH
10204: EMPTY
10205: LIST
10206: LIST
10207: PUSH
10208: LD_INT 2
10210: PUSH
10211: LD_INT 1
10213: PUSH
10214: EMPTY
10215: LIST
10216: LIST
10217: PUSH
10218: LD_INT 1
10220: NEG
10221: PUSH
10222: LD_INT 1
10224: PUSH
10225: EMPTY
10226: LIST
10227: LIST
10228: PUSH
10229: LD_INT 2
10231: NEG
10232: PUSH
10233: LD_INT 0
10235: PUSH
10236: EMPTY
10237: LIST
10238: LIST
10239: PUSH
10240: LD_INT 2
10242: NEG
10243: PUSH
10244: LD_INT 1
10246: NEG
10247: PUSH
10248: EMPTY
10249: LIST
10250: LIST
10251: PUSH
10252: LD_INT 2
10254: PUSH
10255: LD_INT 1
10257: NEG
10258: PUSH
10259: EMPTY
10260: LIST
10261: LIST
10262: PUSH
10263: LD_INT 3
10265: PUSH
10266: LD_INT 0
10268: PUSH
10269: EMPTY
10270: LIST
10271: LIST
10272: PUSH
10273: LD_INT 3
10275: PUSH
10276: LD_INT 1
10278: PUSH
10279: EMPTY
10280: LIST
10281: LIST
10282: PUSH
10283: EMPTY
10284: LIST
10285: LIST
10286: LIST
10287: LIST
10288: LIST
10289: LIST
10290: LIST
10291: LIST
10292: LIST
10293: LIST
10294: LIST
10295: LIST
10296: LIST
10297: LIST
10298: LIST
10299: LIST
10300: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
10301: LD_ADDR_VAR 0 16
10305: PUSH
10306: LD_INT 0
10308: PUSH
10309: LD_INT 0
10311: PUSH
10312: EMPTY
10313: LIST
10314: LIST
10315: PUSH
10316: LD_INT 0
10318: PUSH
10319: LD_INT 1
10321: NEG
10322: PUSH
10323: EMPTY
10324: LIST
10325: LIST
10326: PUSH
10327: LD_INT 1
10329: PUSH
10330: LD_INT 0
10332: PUSH
10333: EMPTY
10334: LIST
10335: LIST
10336: PUSH
10337: LD_INT 1
10339: PUSH
10340: LD_INT 1
10342: PUSH
10343: EMPTY
10344: LIST
10345: LIST
10346: PUSH
10347: LD_INT 0
10349: PUSH
10350: LD_INT 1
10352: PUSH
10353: EMPTY
10354: LIST
10355: LIST
10356: PUSH
10357: LD_INT 1
10359: NEG
10360: PUSH
10361: LD_INT 0
10363: PUSH
10364: EMPTY
10365: LIST
10366: LIST
10367: PUSH
10368: LD_INT 1
10370: NEG
10371: PUSH
10372: LD_INT 1
10374: NEG
10375: PUSH
10376: EMPTY
10377: LIST
10378: LIST
10379: PUSH
10380: LD_INT 1
10382: NEG
10383: PUSH
10384: LD_INT 2
10386: NEG
10387: PUSH
10388: EMPTY
10389: LIST
10390: LIST
10391: PUSH
10392: LD_INT 2
10394: PUSH
10395: LD_INT 1
10397: PUSH
10398: EMPTY
10399: LIST
10400: LIST
10401: PUSH
10402: LD_INT 2
10404: PUSH
10405: LD_INT 2
10407: PUSH
10408: EMPTY
10409: LIST
10410: LIST
10411: PUSH
10412: LD_INT 1
10414: PUSH
10415: LD_INT 2
10417: PUSH
10418: EMPTY
10419: LIST
10420: LIST
10421: PUSH
10422: LD_INT 2
10424: NEG
10425: PUSH
10426: LD_INT 1
10428: NEG
10429: PUSH
10430: EMPTY
10431: LIST
10432: LIST
10433: PUSH
10434: LD_INT 2
10436: NEG
10437: PUSH
10438: LD_INT 2
10440: NEG
10441: PUSH
10442: EMPTY
10443: LIST
10444: LIST
10445: PUSH
10446: LD_INT 3
10448: PUSH
10449: LD_INT 2
10451: PUSH
10452: EMPTY
10453: LIST
10454: LIST
10455: PUSH
10456: LD_INT 3
10458: PUSH
10459: LD_INT 3
10461: PUSH
10462: EMPTY
10463: LIST
10464: LIST
10465: PUSH
10466: LD_INT 2
10468: PUSH
10469: LD_INT 3
10471: PUSH
10472: EMPTY
10473: LIST
10474: LIST
10475: PUSH
10476: EMPTY
10477: LIST
10478: LIST
10479: LIST
10480: LIST
10481: LIST
10482: LIST
10483: LIST
10484: LIST
10485: LIST
10486: LIST
10487: LIST
10488: LIST
10489: LIST
10490: LIST
10491: LIST
10492: LIST
10493: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10494: LD_ADDR_VAR 0 17
10498: PUSH
10499: LD_INT 0
10501: PUSH
10502: LD_INT 0
10504: PUSH
10505: EMPTY
10506: LIST
10507: LIST
10508: PUSH
10509: LD_INT 0
10511: PUSH
10512: LD_INT 1
10514: NEG
10515: PUSH
10516: EMPTY
10517: LIST
10518: LIST
10519: PUSH
10520: LD_INT 1
10522: PUSH
10523: LD_INT 0
10525: PUSH
10526: EMPTY
10527: LIST
10528: LIST
10529: PUSH
10530: LD_INT 1
10532: PUSH
10533: LD_INT 1
10535: PUSH
10536: EMPTY
10537: LIST
10538: LIST
10539: PUSH
10540: LD_INT 0
10542: PUSH
10543: LD_INT 1
10545: PUSH
10546: EMPTY
10547: LIST
10548: LIST
10549: PUSH
10550: LD_INT 1
10552: NEG
10553: PUSH
10554: LD_INT 0
10556: PUSH
10557: EMPTY
10558: LIST
10559: LIST
10560: PUSH
10561: LD_INT 1
10563: NEG
10564: PUSH
10565: LD_INT 1
10567: NEG
10568: PUSH
10569: EMPTY
10570: LIST
10571: LIST
10572: PUSH
10573: LD_INT 1
10575: NEG
10576: PUSH
10577: LD_INT 2
10579: NEG
10580: PUSH
10581: EMPTY
10582: LIST
10583: LIST
10584: PUSH
10585: LD_INT 0
10587: PUSH
10588: LD_INT 2
10590: NEG
10591: PUSH
10592: EMPTY
10593: LIST
10594: LIST
10595: PUSH
10596: LD_INT 1
10598: PUSH
10599: LD_INT 1
10601: NEG
10602: PUSH
10603: EMPTY
10604: LIST
10605: LIST
10606: PUSH
10607: LD_INT 2
10609: PUSH
10610: LD_INT 0
10612: PUSH
10613: EMPTY
10614: LIST
10615: LIST
10616: PUSH
10617: LD_INT 2
10619: PUSH
10620: LD_INT 1
10622: PUSH
10623: EMPTY
10624: LIST
10625: LIST
10626: PUSH
10627: LD_INT 2
10629: PUSH
10630: LD_INT 2
10632: PUSH
10633: EMPTY
10634: LIST
10635: LIST
10636: PUSH
10637: LD_INT 1
10639: PUSH
10640: LD_INT 2
10642: PUSH
10643: EMPTY
10644: LIST
10645: LIST
10646: PUSH
10647: LD_INT 0
10649: PUSH
10650: LD_INT 2
10652: PUSH
10653: EMPTY
10654: LIST
10655: LIST
10656: PUSH
10657: LD_INT 1
10659: NEG
10660: PUSH
10661: LD_INT 1
10663: PUSH
10664: EMPTY
10665: LIST
10666: LIST
10667: PUSH
10668: LD_INT 2
10670: NEG
10671: PUSH
10672: LD_INT 0
10674: PUSH
10675: EMPTY
10676: LIST
10677: LIST
10678: PUSH
10679: LD_INT 2
10681: NEG
10682: PUSH
10683: LD_INT 1
10685: NEG
10686: PUSH
10687: EMPTY
10688: LIST
10689: LIST
10690: PUSH
10691: LD_INT 2
10693: NEG
10694: PUSH
10695: LD_INT 2
10697: NEG
10698: PUSH
10699: EMPTY
10700: LIST
10701: LIST
10702: PUSH
10703: EMPTY
10704: LIST
10705: LIST
10706: LIST
10707: LIST
10708: LIST
10709: LIST
10710: LIST
10711: LIST
10712: LIST
10713: LIST
10714: LIST
10715: LIST
10716: LIST
10717: LIST
10718: LIST
10719: LIST
10720: LIST
10721: LIST
10722: LIST
10723: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10724: LD_ADDR_VAR 0 18
10728: PUSH
10729: LD_INT 0
10731: PUSH
10732: LD_INT 0
10734: PUSH
10735: EMPTY
10736: LIST
10737: LIST
10738: PUSH
10739: LD_INT 0
10741: PUSH
10742: LD_INT 1
10744: NEG
10745: PUSH
10746: EMPTY
10747: LIST
10748: LIST
10749: PUSH
10750: LD_INT 1
10752: PUSH
10753: LD_INT 0
10755: PUSH
10756: EMPTY
10757: LIST
10758: LIST
10759: PUSH
10760: LD_INT 1
10762: PUSH
10763: LD_INT 1
10765: PUSH
10766: EMPTY
10767: LIST
10768: LIST
10769: PUSH
10770: LD_INT 0
10772: PUSH
10773: LD_INT 1
10775: PUSH
10776: EMPTY
10777: LIST
10778: LIST
10779: PUSH
10780: LD_INT 1
10782: NEG
10783: PUSH
10784: LD_INT 0
10786: PUSH
10787: EMPTY
10788: LIST
10789: LIST
10790: PUSH
10791: LD_INT 1
10793: NEG
10794: PUSH
10795: LD_INT 1
10797: NEG
10798: PUSH
10799: EMPTY
10800: LIST
10801: LIST
10802: PUSH
10803: LD_INT 1
10805: NEG
10806: PUSH
10807: LD_INT 2
10809: NEG
10810: PUSH
10811: EMPTY
10812: LIST
10813: LIST
10814: PUSH
10815: LD_INT 0
10817: PUSH
10818: LD_INT 2
10820: NEG
10821: PUSH
10822: EMPTY
10823: LIST
10824: LIST
10825: PUSH
10826: LD_INT 1
10828: PUSH
10829: LD_INT 1
10831: NEG
10832: PUSH
10833: EMPTY
10834: LIST
10835: LIST
10836: PUSH
10837: LD_INT 2
10839: PUSH
10840: LD_INT 0
10842: PUSH
10843: EMPTY
10844: LIST
10845: LIST
10846: PUSH
10847: LD_INT 2
10849: PUSH
10850: LD_INT 1
10852: PUSH
10853: EMPTY
10854: LIST
10855: LIST
10856: PUSH
10857: LD_INT 2
10859: PUSH
10860: LD_INT 2
10862: PUSH
10863: EMPTY
10864: LIST
10865: LIST
10866: PUSH
10867: LD_INT 1
10869: PUSH
10870: LD_INT 2
10872: PUSH
10873: EMPTY
10874: LIST
10875: LIST
10876: PUSH
10877: LD_INT 0
10879: PUSH
10880: LD_INT 2
10882: PUSH
10883: EMPTY
10884: LIST
10885: LIST
10886: PUSH
10887: LD_INT 1
10889: NEG
10890: PUSH
10891: LD_INT 1
10893: PUSH
10894: EMPTY
10895: LIST
10896: LIST
10897: PUSH
10898: LD_INT 2
10900: NEG
10901: PUSH
10902: LD_INT 0
10904: PUSH
10905: EMPTY
10906: LIST
10907: LIST
10908: PUSH
10909: LD_INT 2
10911: NEG
10912: PUSH
10913: LD_INT 1
10915: NEG
10916: PUSH
10917: EMPTY
10918: LIST
10919: LIST
10920: PUSH
10921: LD_INT 2
10923: NEG
10924: PUSH
10925: LD_INT 2
10927: NEG
10928: PUSH
10929: EMPTY
10930: LIST
10931: LIST
10932: PUSH
10933: EMPTY
10934: LIST
10935: LIST
10936: LIST
10937: LIST
10938: LIST
10939: LIST
10940: LIST
10941: LIST
10942: LIST
10943: LIST
10944: LIST
10945: LIST
10946: LIST
10947: LIST
10948: LIST
10949: LIST
10950: LIST
10951: LIST
10952: LIST
10953: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10954: LD_ADDR_VAR 0 19
10958: PUSH
10959: LD_INT 0
10961: PUSH
10962: LD_INT 0
10964: PUSH
10965: EMPTY
10966: LIST
10967: LIST
10968: PUSH
10969: LD_INT 0
10971: PUSH
10972: LD_INT 1
10974: NEG
10975: PUSH
10976: EMPTY
10977: LIST
10978: LIST
10979: PUSH
10980: LD_INT 1
10982: PUSH
10983: LD_INT 0
10985: PUSH
10986: EMPTY
10987: LIST
10988: LIST
10989: PUSH
10990: LD_INT 1
10992: PUSH
10993: LD_INT 1
10995: PUSH
10996: EMPTY
10997: LIST
10998: LIST
10999: PUSH
11000: LD_INT 0
11002: PUSH
11003: LD_INT 1
11005: PUSH
11006: EMPTY
11007: LIST
11008: LIST
11009: PUSH
11010: LD_INT 1
11012: NEG
11013: PUSH
11014: LD_INT 0
11016: PUSH
11017: EMPTY
11018: LIST
11019: LIST
11020: PUSH
11021: LD_INT 1
11023: NEG
11024: PUSH
11025: LD_INT 1
11027: NEG
11028: PUSH
11029: EMPTY
11030: LIST
11031: LIST
11032: PUSH
11033: LD_INT 1
11035: NEG
11036: PUSH
11037: LD_INT 2
11039: NEG
11040: PUSH
11041: EMPTY
11042: LIST
11043: LIST
11044: PUSH
11045: LD_INT 0
11047: PUSH
11048: LD_INT 2
11050: NEG
11051: PUSH
11052: EMPTY
11053: LIST
11054: LIST
11055: PUSH
11056: LD_INT 1
11058: PUSH
11059: LD_INT 1
11061: NEG
11062: PUSH
11063: EMPTY
11064: LIST
11065: LIST
11066: PUSH
11067: LD_INT 2
11069: PUSH
11070: LD_INT 0
11072: PUSH
11073: EMPTY
11074: LIST
11075: LIST
11076: PUSH
11077: LD_INT 2
11079: PUSH
11080: LD_INT 1
11082: PUSH
11083: EMPTY
11084: LIST
11085: LIST
11086: PUSH
11087: LD_INT 2
11089: PUSH
11090: LD_INT 2
11092: PUSH
11093: EMPTY
11094: LIST
11095: LIST
11096: PUSH
11097: LD_INT 1
11099: PUSH
11100: LD_INT 2
11102: PUSH
11103: EMPTY
11104: LIST
11105: LIST
11106: PUSH
11107: LD_INT 0
11109: PUSH
11110: LD_INT 2
11112: PUSH
11113: EMPTY
11114: LIST
11115: LIST
11116: PUSH
11117: LD_INT 1
11119: NEG
11120: PUSH
11121: LD_INT 1
11123: PUSH
11124: EMPTY
11125: LIST
11126: LIST
11127: PUSH
11128: LD_INT 2
11130: NEG
11131: PUSH
11132: LD_INT 0
11134: PUSH
11135: EMPTY
11136: LIST
11137: LIST
11138: PUSH
11139: LD_INT 2
11141: NEG
11142: PUSH
11143: LD_INT 1
11145: NEG
11146: PUSH
11147: EMPTY
11148: LIST
11149: LIST
11150: PUSH
11151: LD_INT 2
11153: NEG
11154: PUSH
11155: LD_INT 2
11157: NEG
11158: PUSH
11159: EMPTY
11160: LIST
11161: LIST
11162: PUSH
11163: EMPTY
11164: LIST
11165: LIST
11166: LIST
11167: LIST
11168: LIST
11169: LIST
11170: LIST
11171: LIST
11172: LIST
11173: LIST
11174: LIST
11175: LIST
11176: LIST
11177: LIST
11178: LIST
11179: LIST
11180: LIST
11181: LIST
11182: LIST
11183: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11184: LD_ADDR_VAR 0 20
11188: PUSH
11189: LD_INT 0
11191: PUSH
11192: LD_INT 0
11194: PUSH
11195: EMPTY
11196: LIST
11197: LIST
11198: PUSH
11199: LD_INT 0
11201: PUSH
11202: LD_INT 1
11204: NEG
11205: PUSH
11206: EMPTY
11207: LIST
11208: LIST
11209: PUSH
11210: LD_INT 1
11212: PUSH
11213: LD_INT 0
11215: PUSH
11216: EMPTY
11217: LIST
11218: LIST
11219: PUSH
11220: LD_INT 1
11222: PUSH
11223: LD_INT 1
11225: PUSH
11226: EMPTY
11227: LIST
11228: LIST
11229: PUSH
11230: LD_INT 0
11232: PUSH
11233: LD_INT 1
11235: PUSH
11236: EMPTY
11237: LIST
11238: LIST
11239: PUSH
11240: LD_INT 1
11242: NEG
11243: PUSH
11244: LD_INT 0
11246: PUSH
11247: EMPTY
11248: LIST
11249: LIST
11250: PUSH
11251: LD_INT 1
11253: NEG
11254: PUSH
11255: LD_INT 1
11257: NEG
11258: PUSH
11259: EMPTY
11260: LIST
11261: LIST
11262: PUSH
11263: LD_INT 1
11265: NEG
11266: PUSH
11267: LD_INT 2
11269: NEG
11270: PUSH
11271: EMPTY
11272: LIST
11273: LIST
11274: PUSH
11275: LD_INT 0
11277: PUSH
11278: LD_INT 2
11280: NEG
11281: PUSH
11282: EMPTY
11283: LIST
11284: LIST
11285: PUSH
11286: LD_INT 1
11288: PUSH
11289: LD_INT 1
11291: NEG
11292: PUSH
11293: EMPTY
11294: LIST
11295: LIST
11296: PUSH
11297: LD_INT 2
11299: PUSH
11300: LD_INT 0
11302: PUSH
11303: EMPTY
11304: LIST
11305: LIST
11306: PUSH
11307: LD_INT 2
11309: PUSH
11310: LD_INT 1
11312: PUSH
11313: EMPTY
11314: LIST
11315: LIST
11316: PUSH
11317: LD_INT 2
11319: PUSH
11320: LD_INT 2
11322: PUSH
11323: EMPTY
11324: LIST
11325: LIST
11326: PUSH
11327: LD_INT 1
11329: PUSH
11330: LD_INT 2
11332: PUSH
11333: EMPTY
11334: LIST
11335: LIST
11336: PUSH
11337: LD_INT 0
11339: PUSH
11340: LD_INT 2
11342: PUSH
11343: EMPTY
11344: LIST
11345: LIST
11346: PUSH
11347: LD_INT 1
11349: NEG
11350: PUSH
11351: LD_INT 1
11353: PUSH
11354: EMPTY
11355: LIST
11356: LIST
11357: PUSH
11358: LD_INT 2
11360: NEG
11361: PUSH
11362: LD_INT 0
11364: PUSH
11365: EMPTY
11366: LIST
11367: LIST
11368: PUSH
11369: LD_INT 2
11371: NEG
11372: PUSH
11373: LD_INT 1
11375: NEG
11376: PUSH
11377: EMPTY
11378: LIST
11379: LIST
11380: PUSH
11381: LD_INT 2
11383: NEG
11384: PUSH
11385: LD_INT 2
11387: NEG
11388: PUSH
11389: EMPTY
11390: LIST
11391: LIST
11392: PUSH
11393: EMPTY
11394: LIST
11395: LIST
11396: LIST
11397: LIST
11398: LIST
11399: LIST
11400: LIST
11401: LIST
11402: LIST
11403: LIST
11404: LIST
11405: LIST
11406: LIST
11407: LIST
11408: LIST
11409: LIST
11410: LIST
11411: LIST
11412: LIST
11413: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11414: LD_ADDR_VAR 0 21
11418: PUSH
11419: LD_INT 0
11421: PUSH
11422: LD_INT 0
11424: PUSH
11425: EMPTY
11426: LIST
11427: LIST
11428: PUSH
11429: LD_INT 0
11431: PUSH
11432: LD_INT 1
11434: NEG
11435: PUSH
11436: EMPTY
11437: LIST
11438: LIST
11439: PUSH
11440: LD_INT 1
11442: PUSH
11443: LD_INT 0
11445: PUSH
11446: EMPTY
11447: LIST
11448: LIST
11449: PUSH
11450: LD_INT 1
11452: PUSH
11453: LD_INT 1
11455: PUSH
11456: EMPTY
11457: LIST
11458: LIST
11459: PUSH
11460: LD_INT 0
11462: PUSH
11463: LD_INT 1
11465: PUSH
11466: EMPTY
11467: LIST
11468: LIST
11469: PUSH
11470: LD_INT 1
11472: NEG
11473: PUSH
11474: LD_INT 0
11476: PUSH
11477: EMPTY
11478: LIST
11479: LIST
11480: PUSH
11481: LD_INT 1
11483: NEG
11484: PUSH
11485: LD_INT 1
11487: NEG
11488: PUSH
11489: EMPTY
11490: LIST
11491: LIST
11492: PUSH
11493: LD_INT 1
11495: NEG
11496: PUSH
11497: LD_INT 2
11499: NEG
11500: PUSH
11501: EMPTY
11502: LIST
11503: LIST
11504: PUSH
11505: LD_INT 0
11507: PUSH
11508: LD_INT 2
11510: NEG
11511: PUSH
11512: EMPTY
11513: LIST
11514: LIST
11515: PUSH
11516: LD_INT 1
11518: PUSH
11519: LD_INT 1
11521: NEG
11522: PUSH
11523: EMPTY
11524: LIST
11525: LIST
11526: PUSH
11527: LD_INT 2
11529: PUSH
11530: LD_INT 0
11532: PUSH
11533: EMPTY
11534: LIST
11535: LIST
11536: PUSH
11537: LD_INT 2
11539: PUSH
11540: LD_INT 1
11542: PUSH
11543: EMPTY
11544: LIST
11545: LIST
11546: PUSH
11547: LD_INT 2
11549: PUSH
11550: LD_INT 2
11552: PUSH
11553: EMPTY
11554: LIST
11555: LIST
11556: PUSH
11557: LD_INT 1
11559: PUSH
11560: LD_INT 2
11562: PUSH
11563: EMPTY
11564: LIST
11565: LIST
11566: PUSH
11567: LD_INT 0
11569: PUSH
11570: LD_INT 2
11572: PUSH
11573: EMPTY
11574: LIST
11575: LIST
11576: PUSH
11577: LD_INT 1
11579: NEG
11580: PUSH
11581: LD_INT 1
11583: PUSH
11584: EMPTY
11585: LIST
11586: LIST
11587: PUSH
11588: LD_INT 2
11590: NEG
11591: PUSH
11592: LD_INT 0
11594: PUSH
11595: EMPTY
11596: LIST
11597: LIST
11598: PUSH
11599: LD_INT 2
11601: NEG
11602: PUSH
11603: LD_INT 1
11605: NEG
11606: PUSH
11607: EMPTY
11608: LIST
11609: LIST
11610: PUSH
11611: LD_INT 2
11613: NEG
11614: PUSH
11615: LD_INT 2
11617: NEG
11618: PUSH
11619: EMPTY
11620: LIST
11621: LIST
11622: PUSH
11623: EMPTY
11624: LIST
11625: LIST
11626: LIST
11627: LIST
11628: LIST
11629: LIST
11630: LIST
11631: LIST
11632: LIST
11633: LIST
11634: LIST
11635: LIST
11636: LIST
11637: LIST
11638: LIST
11639: LIST
11640: LIST
11641: LIST
11642: LIST
11643: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11644: LD_ADDR_VAR 0 22
11648: PUSH
11649: LD_INT 0
11651: PUSH
11652: LD_INT 0
11654: PUSH
11655: EMPTY
11656: LIST
11657: LIST
11658: PUSH
11659: LD_INT 0
11661: PUSH
11662: LD_INT 1
11664: NEG
11665: PUSH
11666: EMPTY
11667: LIST
11668: LIST
11669: PUSH
11670: LD_INT 1
11672: PUSH
11673: LD_INT 0
11675: PUSH
11676: EMPTY
11677: LIST
11678: LIST
11679: PUSH
11680: LD_INT 1
11682: PUSH
11683: LD_INT 1
11685: PUSH
11686: EMPTY
11687: LIST
11688: LIST
11689: PUSH
11690: LD_INT 0
11692: PUSH
11693: LD_INT 1
11695: PUSH
11696: EMPTY
11697: LIST
11698: LIST
11699: PUSH
11700: LD_INT 1
11702: NEG
11703: PUSH
11704: LD_INT 0
11706: PUSH
11707: EMPTY
11708: LIST
11709: LIST
11710: PUSH
11711: LD_INT 1
11713: NEG
11714: PUSH
11715: LD_INT 1
11717: NEG
11718: PUSH
11719: EMPTY
11720: LIST
11721: LIST
11722: PUSH
11723: LD_INT 1
11725: NEG
11726: PUSH
11727: LD_INT 2
11729: NEG
11730: PUSH
11731: EMPTY
11732: LIST
11733: LIST
11734: PUSH
11735: LD_INT 0
11737: PUSH
11738: LD_INT 2
11740: NEG
11741: PUSH
11742: EMPTY
11743: LIST
11744: LIST
11745: PUSH
11746: LD_INT 1
11748: PUSH
11749: LD_INT 1
11751: NEG
11752: PUSH
11753: EMPTY
11754: LIST
11755: LIST
11756: PUSH
11757: LD_INT 2
11759: PUSH
11760: LD_INT 0
11762: PUSH
11763: EMPTY
11764: LIST
11765: LIST
11766: PUSH
11767: LD_INT 2
11769: PUSH
11770: LD_INT 1
11772: PUSH
11773: EMPTY
11774: LIST
11775: LIST
11776: PUSH
11777: LD_INT 2
11779: PUSH
11780: LD_INT 2
11782: PUSH
11783: EMPTY
11784: LIST
11785: LIST
11786: PUSH
11787: LD_INT 1
11789: PUSH
11790: LD_INT 2
11792: PUSH
11793: EMPTY
11794: LIST
11795: LIST
11796: PUSH
11797: LD_INT 0
11799: PUSH
11800: LD_INT 2
11802: PUSH
11803: EMPTY
11804: LIST
11805: LIST
11806: PUSH
11807: LD_INT 1
11809: NEG
11810: PUSH
11811: LD_INT 1
11813: PUSH
11814: EMPTY
11815: LIST
11816: LIST
11817: PUSH
11818: LD_INT 2
11820: NEG
11821: PUSH
11822: LD_INT 0
11824: PUSH
11825: EMPTY
11826: LIST
11827: LIST
11828: PUSH
11829: LD_INT 2
11831: NEG
11832: PUSH
11833: LD_INT 1
11835: NEG
11836: PUSH
11837: EMPTY
11838: LIST
11839: LIST
11840: PUSH
11841: LD_INT 2
11843: NEG
11844: PUSH
11845: LD_INT 2
11847: NEG
11848: PUSH
11849: EMPTY
11850: LIST
11851: LIST
11852: PUSH
11853: EMPTY
11854: LIST
11855: LIST
11856: LIST
11857: LIST
11858: LIST
11859: LIST
11860: LIST
11861: LIST
11862: LIST
11863: LIST
11864: LIST
11865: LIST
11866: LIST
11867: LIST
11868: LIST
11869: LIST
11870: LIST
11871: LIST
11872: LIST
11873: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11874: LD_ADDR_VAR 0 23
11878: PUSH
11879: LD_INT 0
11881: PUSH
11882: LD_INT 0
11884: PUSH
11885: EMPTY
11886: LIST
11887: LIST
11888: PUSH
11889: LD_INT 0
11891: PUSH
11892: LD_INT 1
11894: NEG
11895: PUSH
11896: EMPTY
11897: LIST
11898: LIST
11899: PUSH
11900: LD_INT 1
11902: PUSH
11903: LD_INT 0
11905: PUSH
11906: EMPTY
11907: LIST
11908: LIST
11909: PUSH
11910: LD_INT 1
11912: PUSH
11913: LD_INT 1
11915: PUSH
11916: EMPTY
11917: LIST
11918: LIST
11919: PUSH
11920: LD_INT 0
11922: PUSH
11923: LD_INT 1
11925: PUSH
11926: EMPTY
11927: LIST
11928: LIST
11929: PUSH
11930: LD_INT 1
11932: NEG
11933: PUSH
11934: LD_INT 0
11936: PUSH
11937: EMPTY
11938: LIST
11939: LIST
11940: PUSH
11941: LD_INT 1
11943: NEG
11944: PUSH
11945: LD_INT 1
11947: NEG
11948: PUSH
11949: EMPTY
11950: LIST
11951: LIST
11952: PUSH
11953: LD_INT 1
11955: NEG
11956: PUSH
11957: LD_INT 2
11959: NEG
11960: PUSH
11961: EMPTY
11962: LIST
11963: LIST
11964: PUSH
11965: LD_INT 0
11967: PUSH
11968: LD_INT 2
11970: NEG
11971: PUSH
11972: EMPTY
11973: LIST
11974: LIST
11975: PUSH
11976: LD_INT 1
11978: PUSH
11979: LD_INT 1
11981: NEG
11982: PUSH
11983: EMPTY
11984: LIST
11985: LIST
11986: PUSH
11987: LD_INT 2
11989: PUSH
11990: LD_INT 0
11992: PUSH
11993: EMPTY
11994: LIST
11995: LIST
11996: PUSH
11997: LD_INT 2
11999: PUSH
12000: LD_INT 1
12002: PUSH
12003: EMPTY
12004: LIST
12005: LIST
12006: PUSH
12007: LD_INT 2
12009: PUSH
12010: LD_INT 2
12012: PUSH
12013: EMPTY
12014: LIST
12015: LIST
12016: PUSH
12017: LD_INT 1
12019: PUSH
12020: LD_INT 2
12022: PUSH
12023: EMPTY
12024: LIST
12025: LIST
12026: PUSH
12027: LD_INT 0
12029: PUSH
12030: LD_INT 2
12032: PUSH
12033: EMPTY
12034: LIST
12035: LIST
12036: PUSH
12037: LD_INT 1
12039: NEG
12040: PUSH
12041: LD_INT 1
12043: PUSH
12044: EMPTY
12045: LIST
12046: LIST
12047: PUSH
12048: LD_INT 2
12050: NEG
12051: PUSH
12052: LD_INT 0
12054: PUSH
12055: EMPTY
12056: LIST
12057: LIST
12058: PUSH
12059: LD_INT 2
12061: NEG
12062: PUSH
12063: LD_INT 1
12065: NEG
12066: PUSH
12067: EMPTY
12068: LIST
12069: LIST
12070: PUSH
12071: LD_INT 2
12073: NEG
12074: PUSH
12075: LD_INT 2
12077: NEG
12078: PUSH
12079: EMPTY
12080: LIST
12081: LIST
12082: PUSH
12083: LD_INT 2
12085: NEG
12086: PUSH
12087: LD_INT 3
12089: NEG
12090: PUSH
12091: EMPTY
12092: LIST
12093: LIST
12094: PUSH
12095: LD_INT 1
12097: NEG
12098: PUSH
12099: LD_INT 3
12101: NEG
12102: PUSH
12103: EMPTY
12104: LIST
12105: LIST
12106: PUSH
12107: LD_INT 1
12109: PUSH
12110: LD_INT 2
12112: NEG
12113: PUSH
12114: EMPTY
12115: LIST
12116: LIST
12117: PUSH
12118: LD_INT 2
12120: PUSH
12121: LD_INT 1
12123: NEG
12124: PUSH
12125: EMPTY
12126: LIST
12127: LIST
12128: PUSH
12129: EMPTY
12130: LIST
12131: LIST
12132: LIST
12133: LIST
12134: LIST
12135: LIST
12136: LIST
12137: LIST
12138: LIST
12139: LIST
12140: LIST
12141: LIST
12142: LIST
12143: LIST
12144: LIST
12145: LIST
12146: LIST
12147: LIST
12148: LIST
12149: LIST
12150: LIST
12151: LIST
12152: LIST
12153: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
12154: LD_ADDR_VAR 0 24
12158: PUSH
12159: LD_INT 0
12161: PUSH
12162: LD_INT 0
12164: PUSH
12165: EMPTY
12166: LIST
12167: LIST
12168: PUSH
12169: LD_INT 0
12171: PUSH
12172: LD_INT 1
12174: NEG
12175: PUSH
12176: EMPTY
12177: LIST
12178: LIST
12179: PUSH
12180: LD_INT 1
12182: PUSH
12183: LD_INT 0
12185: PUSH
12186: EMPTY
12187: LIST
12188: LIST
12189: PUSH
12190: LD_INT 1
12192: PUSH
12193: LD_INT 1
12195: PUSH
12196: EMPTY
12197: LIST
12198: LIST
12199: PUSH
12200: LD_INT 0
12202: PUSH
12203: LD_INT 1
12205: PUSH
12206: EMPTY
12207: LIST
12208: LIST
12209: PUSH
12210: LD_INT 1
12212: NEG
12213: PUSH
12214: LD_INT 0
12216: PUSH
12217: EMPTY
12218: LIST
12219: LIST
12220: PUSH
12221: LD_INT 1
12223: NEG
12224: PUSH
12225: LD_INT 1
12227: NEG
12228: PUSH
12229: EMPTY
12230: LIST
12231: LIST
12232: PUSH
12233: LD_INT 1
12235: NEG
12236: PUSH
12237: LD_INT 2
12239: NEG
12240: PUSH
12241: EMPTY
12242: LIST
12243: LIST
12244: PUSH
12245: LD_INT 0
12247: PUSH
12248: LD_INT 2
12250: NEG
12251: PUSH
12252: EMPTY
12253: LIST
12254: LIST
12255: PUSH
12256: LD_INT 1
12258: PUSH
12259: LD_INT 1
12261: NEG
12262: PUSH
12263: EMPTY
12264: LIST
12265: LIST
12266: PUSH
12267: LD_INT 2
12269: PUSH
12270: LD_INT 0
12272: PUSH
12273: EMPTY
12274: LIST
12275: LIST
12276: PUSH
12277: LD_INT 2
12279: PUSH
12280: LD_INT 1
12282: PUSH
12283: EMPTY
12284: LIST
12285: LIST
12286: PUSH
12287: LD_INT 2
12289: PUSH
12290: LD_INT 2
12292: PUSH
12293: EMPTY
12294: LIST
12295: LIST
12296: PUSH
12297: LD_INT 1
12299: PUSH
12300: LD_INT 2
12302: PUSH
12303: EMPTY
12304: LIST
12305: LIST
12306: PUSH
12307: LD_INT 0
12309: PUSH
12310: LD_INT 2
12312: PUSH
12313: EMPTY
12314: LIST
12315: LIST
12316: PUSH
12317: LD_INT 1
12319: NEG
12320: PUSH
12321: LD_INT 1
12323: PUSH
12324: EMPTY
12325: LIST
12326: LIST
12327: PUSH
12328: LD_INT 2
12330: NEG
12331: PUSH
12332: LD_INT 0
12334: PUSH
12335: EMPTY
12336: LIST
12337: LIST
12338: PUSH
12339: LD_INT 2
12341: NEG
12342: PUSH
12343: LD_INT 1
12345: NEG
12346: PUSH
12347: EMPTY
12348: LIST
12349: LIST
12350: PUSH
12351: LD_INT 2
12353: NEG
12354: PUSH
12355: LD_INT 2
12357: NEG
12358: PUSH
12359: EMPTY
12360: LIST
12361: LIST
12362: PUSH
12363: LD_INT 1
12365: PUSH
12366: LD_INT 2
12368: NEG
12369: PUSH
12370: EMPTY
12371: LIST
12372: LIST
12373: PUSH
12374: LD_INT 2
12376: PUSH
12377: LD_INT 1
12379: NEG
12380: PUSH
12381: EMPTY
12382: LIST
12383: LIST
12384: PUSH
12385: LD_INT 3
12387: PUSH
12388: LD_INT 1
12390: PUSH
12391: EMPTY
12392: LIST
12393: LIST
12394: PUSH
12395: LD_INT 3
12397: PUSH
12398: LD_INT 2
12400: PUSH
12401: EMPTY
12402: LIST
12403: LIST
12404: PUSH
12405: EMPTY
12406: LIST
12407: LIST
12408: LIST
12409: LIST
12410: LIST
12411: LIST
12412: LIST
12413: LIST
12414: LIST
12415: LIST
12416: LIST
12417: LIST
12418: LIST
12419: LIST
12420: LIST
12421: LIST
12422: LIST
12423: LIST
12424: LIST
12425: LIST
12426: LIST
12427: LIST
12428: LIST
12429: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12430: LD_ADDR_VAR 0 25
12434: PUSH
12435: LD_INT 0
12437: PUSH
12438: LD_INT 0
12440: PUSH
12441: EMPTY
12442: LIST
12443: LIST
12444: PUSH
12445: LD_INT 0
12447: PUSH
12448: LD_INT 1
12450: NEG
12451: PUSH
12452: EMPTY
12453: LIST
12454: LIST
12455: PUSH
12456: LD_INT 1
12458: PUSH
12459: LD_INT 0
12461: PUSH
12462: EMPTY
12463: LIST
12464: LIST
12465: PUSH
12466: LD_INT 1
12468: PUSH
12469: LD_INT 1
12471: PUSH
12472: EMPTY
12473: LIST
12474: LIST
12475: PUSH
12476: LD_INT 0
12478: PUSH
12479: LD_INT 1
12481: PUSH
12482: EMPTY
12483: LIST
12484: LIST
12485: PUSH
12486: LD_INT 1
12488: NEG
12489: PUSH
12490: LD_INT 0
12492: PUSH
12493: EMPTY
12494: LIST
12495: LIST
12496: PUSH
12497: LD_INT 1
12499: NEG
12500: PUSH
12501: LD_INT 1
12503: NEG
12504: PUSH
12505: EMPTY
12506: LIST
12507: LIST
12508: PUSH
12509: LD_INT 1
12511: NEG
12512: PUSH
12513: LD_INT 2
12515: NEG
12516: PUSH
12517: EMPTY
12518: LIST
12519: LIST
12520: PUSH
12521: LD_INT 0
12523: PUSH
12524: LD_INT 2
12526: NEG
12527: PUSH
12528: EMPTY
12529: LIST
12530: LIST
12531: PUSH
12532: LD_INT 1
12534: PUSH
12535: LD_INT 1
12537: NEG
12538: PUSH
12539: EMPTY
12540: LIST
12541: LIST
12542: PUSH
12543: LD_INT 2
12545: PUSH
12546: LD_INT 0
12548: PUSH
12549: EMPTY
12550: LIST
12551: LIST
12552: PUSH
12553: LD_INT 2
12555: PUSH
12556: LD_INT 1
12558: PUSH
12559: EMPTY
12560: LIST
12561: LIST
12562: PUSH
12563: LD_INT 2
12565: PUSH
12566: LD_INT 2
12568: PUSH
12569: EMPTY
12570: LIST
12571: LIST
12572: PUSH
12573: LD_INT 1
12575: PUSH
12576: LD_INT 2
12578: PUSH
12579: EMPTY
12580: LIST
12581: LIST
12582: PUSH
12583: LD_INT 0
12585: PUSH
12586: LD_INT 2
12588: PUSH
12589: EMPTY
12590: LIST
12591: LIST
12592: PUSH
12593: LD_INT 1
12595: NEG
12596: PUSH
12597: LD_INT 1
12599: PUSH
12600: EMPTY
12601: LIST
12602: LIST
12603: PUSH
12604: LD_INT 2
12606: NEG
12607: PUSH
12608: LD_INT 0
12610: PUSH
12611: EMPTY
12612: LIST
12613: LIST
12614: PUSH
12615: LD_INT 2
12617: NEG
12618: PUSH
12619: LD_INT 1
12621: NEG
12622: PUSH
12623: EMPTY
12624: LIST
12625: LIST
12626: PUSH
12627: LD_INT 2
12629: NEG
12630: PUSH
12631: LD_INT 2
12633: NEG
12634: PUSH
12635: EMPTY
12636: LIST
12637: LIST
12638: PUSH
12639: LD_INT 3
12641: PUSH
12642: LD_INT 1
12644: PUSH
12645: EMPTY
12646: LIST
12647: LIST
12648: PUSH
12649: LD_INT 3
12651: PUSH
12652: LD_INT 2
12654: PUSH
12655: EMPTY
12656: LIST
12657: LIST
12658: PUSH
12659: LD_INT 2
12661: PUSH
12662: LD_INT 3
12664: PUSH
12665: EMPTY
12666: LIST
12667: LIST
12668: PUSH
12669: LD_INT 1
12671: PUSH
12672: LD_INT 3
12674: PUSH
12675: EMPTY
12676: LIST
12677: LIST
12678: PUSH
12679: EMPTY
12680: LIST
12681: LIST
12682: LIST
12683: LIST
12684: LIST
12685: LIST
12686: LIST
12687: LIST
12688: LIST
12689: LIST
12690: LIST
12691: LIST
12692: LIST
12693: LIST
12694: LIST
12695: LIST
12696: LIST
12697: LIST
12698: LIST
12699: LIST
12700: LIST
12701: LIST
12702: LIST
12703: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12704: LD_ADDR_VAR 0 26
12708: PUSH
12709: LD_INT 0
12711: PUSH
12712: LD_INT 0
12714: PUSH
12715: EMPTY
12716: LIST
12717: LIST
12718: PUSH
12719: LD_INT 0
12721: PUSH
12722: LD_INT 1
12724: NEG
12725: PUSH
12726: EMPTY
12727: LIST
12728: LIST
12729: PUSH
12730: LD_INT 1
12732: PUSH
12733: LD_INT 0
12735: PUSH
12736: EMPTY
12737: LIST
12738: LIST
12739: PUSH
12740: LD_INT 1
12742: PUSH
12743: LD_INT 1
12745: PUSH
12746: EMPTY
12747: LIST
12748: LIST
12749: PUSH
12750: LD_INT 0
12752: PUSH
12753: LD_INT 1
12755: PUSH
12756: EMPTY
12757: LIST
12758: LIST
12759: PUSH
12760: LD_INT 1
12762: NEG
12763: PUSH
12764: LD_INT 0
12766: PUSH
12767: EMPTY
12768: LIST
12769: LIST
12770: PUSH
12771: LD_INT 1
12773: NEG
12774: PUSH
12775: LD_INT 1
12777: NEG
12778: PUSH
12779: EMPTY
12780: LIST
12781: LIST
12782: PUSH
12783: LD_INT 1
12785: NEG
12786: PUSH
12787: LD_INT 2
12789: NEG
12790: PUSH
12791: EMPTY
12792: LIST
12793: LIST
12794: PUSH
12795: LD_INT 0
12797: PUSH
12798: LD_INT 2
12800: NEG
12801: PUSH
12802: EMPTY
12803: LIST
12804: LIST
12805: PUSH
12806: LD_INT 1
12808: PUSH
12809: LD_INT 1
12811: NEG
12812: PUSH
12813: EMPTY
12814: LIST
12815: LIST
12816: PUSH
12817: LD_INT 2
12819: PUSH
12820: LD_INT 0
12822: PUSH
12823: EMPTY
12824: LIST
12825: LIST
12826: PUSH
12827: LD_INT 2
12829: PUSH
12830: LD_INT 1
12832: PUSH
12833: EMPTY
12834: LIST
12835: LIST
12836: PUSH
12837: LD_INT 2
12839: PUSH
12840: LD_INT 2
12842: PUSH
12843: EMPTY
12844: LIST
12845: LIST
12846: PUSH
12847: LD_INT 1
12849: PUSH
12850: LD_INT 2
12852: PUSH
12853: EMPTY
12854: LIST
12855: LIST
12856: PUSH
12857: LD_INT 0
12859: PUSH
12860: LD_INT 2
12862: PUSH
12863: EMPTY
12864: LIST
12865: LIST
12866: PUSH
12867: LD_INT 1
12869: NEG
12870: PUSH
12871: LD_INT 1
12873: PUSH
12874: EMPTY
12875: LIST
12876: LIST
12877: PUSH
12878: LD_INT 2
12880: NEG
12881: PUSH
12882: LD_INT 0
12884: PUSH
12885: EMPTY
12886: LIST
12887: LIST
12888: PUSH
12889: LD_INT 2
12891: NEG
12892: PUSH
12893: LD_INT 1
12895: NEG
12896: PUSH
12897: EMPTY
12898: LIST
12899: LIST
12900: PUSH
12901: LD_INT 2
12903: NEG
12904: PUSH
12905: LD_INT 2
12907: NEG
12908: PUSH
12909: EMPTY
12910: LIST
12911: LIST
12912: PUSH
12913: LD_INT 2
12915: PUSH
12916: LD_INT 3
12918: PUSH
12919: EMPTY
12920: LIST
12921: LIST
12922: PUSH
12923: LD_INT 1
12925: PUSH
12926: LD_INT 3
12928: PUSH
12929: EMPTY
12930: LIST
12931: LIST
12932: PUSH
12933: LD_INT 1
12935: NEG
12936: PUSH
12937: LD_INT 2
12939: PUSH
12940: EMPTY
12941: LIST
12942: LIST
12943: PUSH
12944: LD_INT 2
12946: NEG
12947: PUSH
12948: LD_INT 1
12950: PUSH
12951: EMPTY
12952: LIST
12953: LIST
12954: PUSH
12955: EMPTY
12956: LIST
12957: LIST
12958: LIST
12959: LIST
12960: LIST
12961: LIST
12962: LIST
12963: LIST
12964: LIST
12965: LIST
12966: LIST
12967: LIST
12968: LIST
12969: LIST
12970: LIST
12971: LIST
12972: LIST
12973: LIST
12974: LIST
12975: LIST
12976: LIST
12977: LIST
12978: LIST
12979: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12980: LD_ADDR_VAR 0 27
12984: PUSH
12985: LD_INT 0
12987: PUSH
12988: LD_INT 0
12990: PUSH
12991: EMPTY
12992: LIST
12993: LIST
12994: PUSH
12995: LD_INT 0
12997: PUSH
12998: LD_INT 1
13000: NEG
13001: PUSH
13002: EMPTY
13003: LIST
13004: LIST
13005: PUSH
13006: LD_INT 1
13008: PUSH
13009: LD_INT 0
13011: PUSH
13012: EMPTY
13013: LIST
13014: LIST
13015: PUSH
13016: LD_INT 1
13018: PUSH
13019: LD_INT 1
13021: PUSH
13022: EMPTY
13023: LIST
13024: LIST
13025: PUSH
13026: LD_INT 0
13028: PUSH
13029: LD_INT 1
13031: PUSH
13032: EMPTY
13033: LIST
13034: LIST
13035: PUSH
13036: LD_INT 1
13038: NEG
13039: PUSH
13040: LD_INT 0
13042: PUSH
13043: EMPTY
13044: LIST
13045: LIST
13046: PUSH
13047: LD_INT 1
13049: NEG
13050: PUSH
13051: LD_INT 1
13053: NEG
13054: PUSH
13055: EMPTY
13056: LIST
13057: LIST
13058: PUSH
13059: LD_INT 1
13061: NEG
13062: PUSH
13063: LD_INT 2
13065: NEG
13066: PUSH
13067: EMPTY
13068: LIST
13069: LIST
13070: PUSH
13071: LD_INT 0
13073: PUSH
13074: LD_INT 2
13076: NEG
13077: PUSH
13078: EMPTY
13079: LIST
13080: LIST
13081: PUSH
13082: LD_INT 1
13084: PUSH
13085: LD_INT 1
13087: NEG
13088: PUSH
13089: EMPTY
13090: LIST
13091: LIST
13092: PUSH
13093: LD_INT 2
13095: PUSH
13096: LD_INT 0
13098: PUSH
13099: EMPTY
13100: LIST
13101: LIST
13102: PUSH
13103: LD_INT 2
13105: PUSH
13106: LD_INT 1
13108: PUSH
13109: EMPTY
13110: LIST
13111: LIST
13112: PUSH
13113: LD_INT 2
13115: PUSH
13116: LD_INT 2
13118: PUSH
13119: EMPTY
13120: LIST
13121: LIST
13122: PUSH
13123: LD_INT 1
13125: PUSH
13126: LD_INT 2
13128: PUSH
13129: EMPTY
13130: LIST
13131: LIST
13132: PUSH
13133: LD_INT 0
13135: PUSH
13136: LD_INT 2
13138: PUSH
13139: EMPTY
13140: LIST
13141: LIST
13142: PUSH
13143: LD_INT 1
13145: NEG
13146: PUSH
13147: LD_INT 1
13149: PUSH
13150: EMPTY
13151: LIST
13152: LIST
13153: PUSH
13154: LD_INT 2
13156: NEG
13157: PUSH
13158: LD_INT 0
13160: PUSH
13161: EMPTY
13162: LIST
13163: LIST
13164: PUSH
13165: LD_INT 2
13167: NEG
13168: PUSH
13169: LD_INT 1
13171: NEG
13172: PUSH
13173: EMPTY
13174: LIST
13175: LIST
13176: PUSH
13177: LD_INT 2
13179: NEG
13180: PUSH
13181: LD_INT 2
13183: NEG
13184: PUSH
13185: EMPTY
13186: LIST
13187: LIST
13188: PUSH
13189: LD_INT 1
13191: NEG
13192: PUSH
13193: LD_INT 2
13195: PUSH
13196: EMPTY
13197: LIST
13198: LIST
13199: PUSH
13200: LD_INT 2
13202: NEG
13203: PUSH
13204: LD_INT 1
13206: PUSH
13207: EMPTY
13208: LIST
13209: LIST
13210: PUSH
13211: LD_INT 3
13213: NEG
13214: PUSH
13215: LD_INT 1
13217: NEG
13218: PUSH
13219: EMPTY
13220: LIST
13221: LIST
13222: PUSH
13223: LD_INT 3
13225: NEG
13226: PUSH
13227: LD_INT 2
13229: NEG
13230: PUSH
13231: EMPTY
13232: LIST
13233: LIST
13234: PUSH
13235: EMPTY
13236: LIST
13237: LIST
13238: LIST
13239: LIST
13240: LIST
13241: LIST
13242: LIST
13243: LIST
13244: LIST
13245: LIST
13246: LIST
13247: LIST
13248: LIST
13249: LIST
13250: LIST
13251: LIST
13252: LIST
13253: LIST
13254: LIST
13255: LIST
13256: LIST
13257: LIST
13258: LIST
13259: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
13260: LD_ADDR_VAR 0 28
13264: PUSH
13265: LD_INT 0
13267: PUSH
13268: LD_INT 0
13270: PUSH
13271: EMPTY
13272: LIST
13273: LIST
13274: PUSH
13275: LD_INT 0
13277: PUSH
13278: LD_INT 1
13280: NEG
13281: PUSH
13282: EMPTY
13283: LIST
13284: LIST
13285: PUSH
13286: LD_INT 1
13288: PUSH
13289: LD_INT 0
13291: PUSH
13292: EMPTY
13293: LIST
13294: LIST
13295: PUSH
13296: LD_INT 1
13298: PUSH
13299: LD_INT 1
13301: PUSH
13302: EMPTY
13303: LIST
13304: LIST
13305: PUSH
13306: LD_INT 0
13308: PUSH
13309: LD_INT 1
13311: PUSH
13312: EMPTY
13313: LIST
13314: LIST
13315: PUSH
13316: LD_INT 1
13318: NEG
13319: PUSH
13320: LD_INT 0
13322: PUSH
13323: EMPTY
13324: LIST
13325: LIST
13326: PUSH
13327: LD_INT 1
13329: NEG
13330: PUSH
13331: LD_INT 1
13333: NEG
13334: PUSH
13335: EMPTY
13336: LIST
13337: LIST
13338: PUSH
13339: LD_INT 1
13341: NEG
13342: PUSH
13343: LD_INT 2
13345: NEG
13346: PUSH
13347: EMPTY
13348: LIST
13349: LIST
13350: PUSH
13351: LD_INT 0
13353: PUSH
13354: LD_INT 2
13356: NEG
13357: PUSH
13358: EMPTY
13359: LIST
13360: LIST
13361: PUSH
13362: LD_INT 1
13364: PUSH
13365: LD_INT 1
13367: NEG
13368: PUSH
13369: EMPTY
13370: LIST
13371: LIST
13372: PUSH
13373: LD_INT 2
13375: PUSH
13376: LD_INT 0
13378: PUSH
13379: EMPTY
13380: LIST
13381: LIST
13382: PUSH
13383: LD_INT 2
13385: PUSH
13386: LD_INT 1
13388: PUSH
13389: EMPTY
13390: LIST
13391: LIST
13392: PUSH
13393: LD_INT 2
13395: PUSH
13396: LD_INT 2
13398: PUSH
13399: EMPTY
13400: LIST
13401: LIST
13402: PUSH
13403: LD_INT 1
13405: PUSH
13406: LD_INT 2
13408: PUSH
13409: EMPTY
13410: LIST
13411: LIST
13412: PUSH
13413: LD_INT 0
13415: PUSH
13416: LD_INT 2
13418: PUSH
13419: EMPTY
13420: LIST
13421: LIST
13422: PUSH
13423: LD_INT 1
13425: NEG
13426: PUSH
13427: LD_INT 1
13429: PUSH
13430: EMPTY
13431: LIST
13432: LIST
13433: PUSH
13434: LD_INT 2
13436: NEG
13437: PUSH
13438: LD_INT 0
13440: PUSH
13441: EMPTY
13442: LIST
13443: LIST
13444: PUSH
13445: LD_INT 2
13447: NEG
13448: PUSH
13449: LD_INT 1
13451: NEG
13452: PUSH
13453: EMPTY
13454: LIST
13455: LIST
13456: PUSH
13457: LD_INT 2
13459: NEG
13460: PUSH
13461: LD_INT 2
13463: NEG
13464: PUSH
13465: EMPTY
13466: LIST
13467: LIST
13468: PUSH
13469: LD_INT 2
13471: NEG
13472: PUSH
13473: LD_INT 3
13475: NEG
13476: PUSH
13477: EMPTY
13478: LIST
13479: LIST
13480: PUSH
13481: LD_INT 1
13483: NEG
13484: PUSH
13485: LD_INT 3
13487: NEG
13488: PUSH
13489: EMPTY
13490: LIST
13491: LIST
13492: PUSH
13493: LD_INT 3
13495: NEG
13496: PUSH
13497: LD_INT 1
13499: NEG
13500: PUSH
13501: EMPTY
13502: LIST
13503: LIST
13504: PUSH
13505: LD_INT 3
13507: NEG
13508: PUSH
13509: LD_INT 2
13511: NEG
13512: PUSH
13513: EMPTY
13514: LIST
13515: LIST
13516: PUSH
13517: EMPTY
13518: LIST
13519: LIST
13520: LIST
13521: LIST
13522: LIST
13523: LIST
13524: LIST
13525: LIST
13526: LIST
13527: LIST
13528: LIST
13529: LIST
13530: LIST
13531: LIST
13532: LIST
13533: LIST
13534: LIST
13535: LIST
13536: LIST
13537: LIST
13538: LIST
13539: LIST
13540: LIST
13541: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13542: LD_ADDR_VAR 0 29
13546: PUSH
13547: LD_INT 0
13549: PUSH
13550: LD_INT 0
13552: PUSH
13553: EMPTY
13554: LIST
13555: LIST
13556: PUSH
13557: LD_INT 0
13559: PUSH
13560: LD_INT 1
13562: NEG
13563: PUSH
13564: EMPTY
13565: LIST
13566: LIST
13567: PUSH
13568: LD_INT 1
13570: PUSH
13571: LD_INT 0
13573: PUSH
13574: EMPTY
13575: LIST
13576: LIST
13577: PUSH
13578: LD_INT 1
13580: PUSH
13581: LD_INT 1
13583: PUSH
13584: EMPTY
13585: LIST
13586: LIST
13587: PUSH
13588: LD_INT 0
13590: PUSH
13591: LD_INT 1
13593: PUSH
13594: EMPTY
13595: LIST
13596: LIST
13597: PUSH
13598: LD_INT 1
13600: NEG
13601: PUSH
13602: LD_INT 0
13604: PUSH
13605: EMPTY
13606: LIST
13607: LIST
13608: PUSH
13609: LD_INT 1
13611: NEG
13612: PUSH
13613: LD_INT 1
13615: NEG
13616: PUSH
13617: EMPTY
13618: LIST
13619: LIST
13620: PUSH
13621: LD_INT 1
13623: NEG
13624: PUSH
13625: LD_INT 2
13627: NEG
13628: PUSH
13629: EMPTY
13630: LIST
13631: LIST
13632: PUSH
13633: LD_INT 0
13635: PUSH
13636: LD_INT 2
13638: NEG
13639: PUSH
13640: EMPTY
13641: LIST
13642: LIST
13643: PUSH
13644: LD_INT 1
13646: PUSH
13647: LD_INT 1
13649: NEG
13650: PUSH
13651: EMPTY
13652: LIST
13653: LIST
13654: PUSH
13655: LD_INT 2
13657: PUSH
13658: LD_INT 0
13660: PUSH
13661: EMPTY
13662: LIST
13663: LIST
13664: PUSH
13665: LD_INT 2
13667: PUSH
13668: LD_INT 1
13670: PUSH
13671: EMPTY
13672: LIST
13673: LIST
13674: PUSH
13675: LD_INT 1
13677: PUSH
13678: LD_INT 2
13680: PUSH
13681: EMPTY
13682: LIST
13683: LIST
13684: PUSH
13685: LD_INT 0
13687: PUSH
13688: LD_INT 2
13690: PUSH
13691: EMPTY
13692: LIST
13693: LIST
13694: PUSH
13695: LD_INT 1
13697: NEG
13698: PUSH
13699: LD_INT 1
13701: PUSH
13702: EMPTY
13703: LIST
13704: LIST
13705: PUSH
13706: LD_INT 2
13708: NEG
13709: PUSH
13710: LD_INT 1
13712: NEG
13713: PUSH
13714: EMPTY
13715: LIST
13716: LIST
13717: PUSH
13718: LD_INT 2
13720: NEG
13721: PUSH
13722: LD_INT 2
13724: NEG
13725: PUSH
13726: EMPTY
13727: LIST
13728: LIST
13729: PUSH
13730: LD_INT 2
13732: NEG
13733: PUSH
13734: LD_INT 3
13736: NEG
13737: PUSH
13738: EMPTY
13739: LIST
13740: LIST
13741: PUSH
13742: LD_INT 2
13744: PUSH
13745: LD_INT 1
13747: NEG
13748: PUSH
13749: EMPTY
13750: LIST
13751: LIST
13752: PUSH
13753: LD_INT 3
13755: PUSH
13756: LD_INT 1
13758: PUSH
13759: EMPTY
13760: LIST
13761: LIST
13762: PUSH
13763: LD_INT 1
13765: PUSH
13766: LD_INT 3
13768: PUSH
13769: EMPTY
13770: LIST
13771: LIST
13772: PUSH
13773: LD_INT 1
13775: NEG
13776: PUSH
13777: LD_INT 2
13779: PUSH
13780: EMPTY
13781: LIST
13782: LIST
13783: PUSH
13784: LD_INT 3
13786: NEG
13787: PUSH
13788: LD_INT 2
13790: NEG
13791: PUSH
13792: EMPTY
13793: LIST
13794: LIST
13795: PUSH
13796: EMPTY
13797: LIST
13798: LIST
13799: LIST
13800: LIST
13801: LIST
13802: LIST
13803: LIST
13804: LIST
13805: LIST
13806: LIST
13807: LIST
13808: LIST
13809: LIST
13810: LIST
13811: LIST
13812: LIST
13813: LIST
13814: LIST
13815: LIST
13816: LIST
13817: LIST
13818: LIST
13819: LIST
13820: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13821: LD_ADDR_VAR 0 30
13825: PUSH
13826: LD_INT 0
13828: PUSH
13829: LD_INT 0
13831: PUSH
13832: EMPTY
13833: LIST
13834: LIST
13835: PUSH
13836: LD_INT 0
13838: PUSH
13839: LD_INT 1
13841: NEG
13842: PUSH
13843: EMPTY
13844: LIST
13845: LIST
13846: PUSH
13847: LD_INT 1
13849: PUSH
13850: LD_INT 0
13852: PUSH
13853: EMPTY
13854: LIST
13855: LIST
13856: PUSH
13857: LD_INT 1
13859: PUSH
13860: LD_INT 1
13862: PUSH
13863: EMPTY
13864: LIST
13865: LIST
13866: PUSH
13867: LD_INT 0
13869: PUSH
13870: LD_INT 1
13872: PUSH
13873: EMPTY
13874: LIST
13875: LIST
13876: PUSH
13877: LD_INT 1
13879: NEG
13880: PUSH
13881: LD_INT 0
13883: PUSH
13884: EMPTY
13885: LIST
13886: LIST
13887: PUSH
13888: LD_INT 1
13890: NEG
13891: PUSH
13892: LD_INT 1
13894: NEG
13895: PUSH
13896: EMPTY
13897: LIST
13898: LIST
13899: PUSH
13900: LD_INT 1
13902: NEG
13903: PUSH
13904: LD_INT 2
13906: NEG
13907: PUSH
13908: EMPTY
13909: LIST
13910: LIST
13911: PUSH
13912: LD_INT 0
13914: PUSH
13915: LD_INT 2
13917: NEG
13918: PUSH
13919: EMPTY
13920: LIST
13921: LIST
13922: PUSH
13923: LD_INT 1
13925: PUSH
13926: LD_INT 1
13928: NEG
13929: PUSH
13930: EMPTY
13931: LIST
13932: LIST
13933: PUSH
13934: LD_INT 2
13936: PUSH
13937: LD_INT 0
13939: PUSH
13940: EMPTY
13941: LIST
13942: LIST
13943: PUSH
13944: LD_INT 2
13946: PUSH
13947: LD_INT 1
13949: PUSH
13950: EMPTY
13951: LIST
13952: LIST
13953: PUSH
13954: LD_INT 2
13956: PUSH
13957: LD_INT 2
13959: PUSH
13960: EMPTY
13961: LIST
13962: LIST
13963: PUSH
13964: LD_INT 1
13966: PUSH
13967: LD_INT 2
13969: PUSH
13970: EMPTY
13971: LIST
13972: LIST
13973: PUSH
13974: LD_INT 1
13976: NEG
13977: PUSH
13978: LD_INT 1
13980: PUSH
13981: EMPTY
13982: LIST
13983: LIST
13984: PUSH
13985: LD_INT 2
13987: NEG
13988: PUSH
13989: LD_INT 0
13991: PUSH
13992: EMPTY
13993: LIST
13994: LIST
13995: PUSH
13996: LD_INT 2
13998: NEG
13999: PUSH
14000: LD_INT 1
14002: NEG
14003: PUSH
14004: EMPTY
14005: LIST
14006: LIST
14007: PUSH
14008: LD_INT 1
14010: NEG
14011: PUSH
14012: LD_INT 3
14014: NEG
14015: PUSH
14016: EMPTY
14017: LIST
14018: LIST
14019: PUSH
14020: LD_INT 1
14022: PUSH
14023: LD_INT 2
14025: NEG
14026: PUSH
14027: EMPTY
14028: LIST
14029: LIST
14030: PUSH
14031: LD_INT 3
14033: PUSH
14034: LD_INT 2
14036: PUSH
14037: EMPTY
14038: LIST
14039: LIST
14040: PUSH
14041: LD_INT 2
14043: PUSH
14044: LD_INT 3
14046: PUSH
14047: EMPTY
14048: LIST
14049: LIST
14050: PUSH
14051: LD_INT 2
14053: NEG
14054: PUSH
14055: LD_INT 1
14057: PUSH
14058: EMPTY
14059: LIST
14060: LIST
14061: PUSH
14062: LD_INT 3
14064: NEG
14065: PUSH
14066: LD_INT 1
14068: NEG
14069: PUSH
14070: EMPTY
14071: LIST
14072: LIST
14073: PUSH
14074: EMPTY
14075: LIST
14076: LIST
14077: LIST
14078: LIST
14079: LIST
14080: LIST
14081: LIST
14082: LIST
14083: LIST
14084: LIST
14085: LIST
14086: LIST
14087: LIST
14088: LIST
14089: LIST
14090: LIST
14091: LIST
14092: LIST
14093: LIST
14094: LIST
14095: LIST
14096: LIST
14097: LIST
14098: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14099: LD_ADDR_VAR 0 31
14103: PUSH
14104: LD_INT 0
14106: PUSH
14107: LD_INT 0
14109: PUSH
14110: EMPTY
14111: LIST
14112: LIST
14113: PUSH
14114: LD_INT 0
14116: PUSH
14117: LD_INT 1
14119: NEG
14120: PUSH
14121: EMPTY
14122: LIST
14123: LIST
14124: PUSH
14125: LD_INT 1
14127: PUSH
14128: LD_INT 0
14130: PUSH
14131: EMPTY
14132: LIST
14133: LIST
14134: PUSH
14135: LD_INT 1
14137: PUSH
14138: LD_INT 1
14140: PUSH
14141: EMPTY
14142: LIST
14143: LIST
14144: PUSH
14145: LD_INT 0
14147: PUSH
14148: LD_INT 1
14150: PUSH
14151: EMPTY
14152: LIST
14153: LIST
14154: PUSH
14155: LD_INT 1
14157: NEG
14158: PUSH
14159: LD_INT 0
14161: PUSH
14162: EMPTY
14163: LIST
14164: LIST
14165: PUSH
14166: LD_INT 1
14168: NEG
14169: PUSH
14170: LD_INT 1
14172: NEG
14173: PUSH
14174: EMPTY
14175: LIST
14176: LIST
14177: PUSH
14178: LD_INT 1
14180: NEG
14181: PUSH
14182: LD_INT 2
14184: NEG
14185: PUSH
14186: EMPTY
14187: LIST
14188: LIST
14189: PUSH
14190: LD_INT 1
14192: PUSH
14193: LD_INT 1
14195: NEG
14196: PUSH
14197: EMPTY
14198: LIST
14199: LIST
14200: PUSH
14201: LD_INT 2
14203: PUSH
14204: LD_INT 0
14206: PUSH
14207: EMPTY
14208: LIST
14209: LIST
14210: PUSH
14211: LD_INT 2
14213: PUSH
14214: LD_INT 1
14216: PUSH
14217: EMPTY
14218: LIST
14219: LIST
14220: PUSH
14221: LD_INT 2
14223: PUSH
14224: LD_INT 2
14226: PUSH
14227: EMPTY
14228: LIST
14229: LIST
14230: PUSH
14231: LD_INT 1
14233: PUSH
14234: LD_INT 2
14236: PUSH
14237: EMPTY
14238: LIST
14239: LIST
14240: PUSH
14241: LD_INT 0
14243: PUSH
14244: LD_INT 2
14246: PUSH
14247: EMPTY
14248: LIST
14249: LIST
14250: PUSH
14251: LD_INT 1
14253: NEG
14254: PUSH
14255: LD_INT 1
14257: PUSH
14258: EMPTY
14259: LIST
14260: LIST
14261: PUSH
14262: LD_INT 2
14264: NEG
14265: PUSH
14266: LD_INT 1
14268: NEG
14269: PUSH
14270: EMPTY
14271: LIST
14272: LIST
14273: PUSH
14274: LD_INT 2
14276: NEG
14277: PUSH
14278: LD_INT 2
14280: NEG
14281: PUSH
14282: EMPTY
14283: LIST
14284: LIST
14285: PUSH
14286: LD_INT 2
14288: NEG
14289: PUSH
14290: LD_INT 3
14292: NEG
14293: PUSH
14294: EMPTY
14295: LIST
14296: LIST
14297: PUSH
14298: LD_INT 2
14300: PUSH
14301: LD_INT 1
14303: NEG
14304: PUSH
14305: EMPTY
14306: LIST
14307: LIST
14308: PUSH
14309: LD_INT 3
14311: PUSH
14312: LD_INT 1
14314: PUSH
14315: EMPTY
14316: LIST
14317: LIST
14318: PUSH
14319: LD_INT 1
14321: PUSH
14322: LD_INT 3
14324: PUSH
14325: EMPTY
14326: LIST
14327: LIST
14328: PUSH
14329: LD_INT 1
14331: NEG
14332: PUSH
14333: LD_INT 2
14335: PUSH
14336: EMPTY
14337: LIST
14338: LIST
14339: PUSH
14340: LD_INT 3
14342: NEG
14343: PUSH
14344: LD_INT 2
14346: NEG
14347: PUSH
14348: EMPTY
14349: LIST
14350: LIST
14351: PUSH
14352: EMPTY
14353: LIST
14354: LIST
14355: LIST
14356: LIST
14357: LIST
14358: LIST
14359: LIST
14360: LIST
14361: LIST
14362: LIST
14363: LIST
14364: LIST
14365: LIST
14366: LIST
14367: LIST
14368: LIST
14369: LIST
14370: LIST
14371: LIST
14372: LIST
14373: LIST
14374: LIST
14375: LIST
14376: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14377: LD_ADDR_VAR 0 32
14381: PUSH
14382: LD_INT 0
14384: PUSH
14385: LD_INT 0
14387: PUSH
14388: EMPTY
14389: LIST
14390: LIST
14391: PUSH
14392: LD_INT 0
14394: PUSH
14395: LD_INT 1
14397: NEG
14398: PUSH
14399: EMPTY
14400: LIST
14401: LIST
14402: PUSH
14403: LD_INT 1
14405: PUSH
14406: LD_INT 0
14408: PUSH
14409: EMPTY
14410: LIST
14411: LIST
14412: PUSH
14413: LD_INT 1
14415: PUSH
14416: LD_INT 1
14418: PUSH
14419: EMPTY
14420: LIST
14421: LIST
14422: PUSH
14423: LD_INT 0
14425: PUSH
14426: LD_INT 1
14428: PUSH
14429: EMPTY
14430: LIST
14431: LIST
14432: PUSH
14433: LD_INT 1
14435: NEG
14436: PUSH
14437: LD_INT 0
14439: PUSH
14440: EMPTY
14441: LIST
14442: LIST
14443: PUSH
14444: LD_INT 1
14446: NEG
14447: PUSH
14448: LD_INT 1
14450: NEG
14451: PUSH
14452: EMPTY
14453: LIST
14454: LIST
14455: PUSH
14456: LD_INT 1
14458: NEG
14459: PUSH
14460: LD_INT 2
14462: NEG
14463: PUSH
14464: EMPTY
14465: LIST
14466: LIST
14467: PUSH
14468: LD_INT 0
14470: PUSH
14471: LD_INT 2
14473: NEG
14474: PUSH
14475: EMPTY
14476: LIST
14477: LIST
14478: PUSH
14479: LD_INT 1
14481: PUSH
14482: LD_INT 1
14484: NEG
14485: PUSH
14486: EMPTY
14487: LIST
14488: LIST
14489: PUSH
14490: LD_INT 2
14492: PUSH
14493: LD_INT 1
14495: PUSH
14496: EMPTY
14497: LIST
14498: LIST
14499: PUSH
14500: LD_INT 2
14502: PUSH
14503: LD_INT 2
14505: PUSH
14506: EMPTY
14507: LIST
14508: LIST
14509: PUSH
14510: LD_INT 1
14512: PUSH
14513: LD_INT 2
14515: PUSH
14516: EMPTY
14517: LIST
14518: LIST
14519: PUSH
14520: LD_INT 0
14522: PUSH
14523: LD_INT 2
14525: PUSH
14526: EMPTY
14527: LIST
14528: LIST
14529: PUSH
14530: LD_INT 1
14532: NEG
14533: PUSH
14534: LD_INT 1
14536: PUSH
14537: EMPTY
14538: LIST
14539: LIST
14540: PUSH
14541: LD_INT 2
14543: NEG
14544: PUSH
14545: LD_INT 0
14547: PUSH
14548: EMPTY
14549: LIST
14550: LIST
14551: PUSH
14552: LD_INT 2
14554: NEG
14555: PUSH
14556: LD_INT 1
14558: NEG
14559: PUSH
14560: EMPTY
14561: LIST
14562: LIST
14563: PUSH
14564: LD_INT 1
14566: NEG
14567: PUSH
14568: LD_INT 3
14570: NEG
14571: PUSH
14572: EMPTY
14573: LIST
14574: LIST
14575: PUSH
14576: LD_INT 1
14578: PUSH
14579: LD_INT 2
14581: NEG
14582: PUSH
14583: EMPTY
14584: LIST
14585: LIST
14586: PUSH
14587: LD_INT 3
14589: PUSH
14590: LD_INT 2
14592: PUSH
14593: EMPTY
14594: LIST
14595: LIST
14596: PUSH
14597: LD_INT 2
14599: PUSH
14600: LD_INT 3
14602: PUSH
14603: EMPTY
14604: LIST
14605: LIST
14606: PUSH
14607: LD_INT 2
14609: NEG
14610: PUSH
14611: LD_INT 1
14613: PUSH
14614: EMPTY
14615: LIST
14616: LIST
14617: PUSH
14618: LD_INT 3
14620: NEG
14621: PUSH
14622: LD_INT 1
14624: NEG
14625: PUSH
14626: EMPTY
14627: LIST
14628: LIST
14629: PUSH
14630: EMPTY
14631: LIST
14632: LIST
14633: LIST
14634: LIST
14635: LIST
14636: LIST
14637: LIST
14638: LIST
14639: LIST
14640: LIST
14641: LIST
14642: LIST
14643: LIST
14644: LIST
14645: LIST
14646: LIST
14647: LIST
14648: LIST
14649: LIST
14650: LIST
14651: LIST
14652: LIST
14653: LIST
14654: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14655: LD_ADDR_VAR 0 33
14659: PUSH
14660: LD_INT 0
14662: PUSH
14663: LD_INT 0
14665: PUSH
14666: EMPTY
14667: LIST
14668: LIST
14669: PUSH
14670: LD_INT 0
14672: PUSH
14673: LD_INT 1
14675: NEG
14676: PUSH
14677: EMPTY
14678: LIST
14679: LIST
14680: PUSH
14681: LD_INT 1
14683: PUSH
14684: LD_INT 0
14686: PUSH
14687: EMPTY
14688: LIST
14689: LIST
14690: PUSH
14691: LD_INT 1
14693: PUSH
14694: LD_INT 1
14696: PUSH
14697: EMPTY
14698: LIST
14699: LIST
14700: PUSH
14701: LD_INT 0
14703: PUSH
14704: LD_INT 1
14706: PUSH
14707: EMPTY
14708: LIST
14709: LIST
14710: PUSH
14711: LD_INT 1
14713: NEG
14714: PUSH
14715: LD_INT 0
14717: PUSH
14718: EMPTY
14719: LIST
14720: LIST
14721: PUSH
14722: LD_INT 1
14724: NEG
14725: PUSH
14726: LD_INT 1
14728: NEG
14729: PUSH
14730: EMPTY
14731: LIST
14732: LIST
14733: PUSH
14734: LD_INT 1
14736: NEG
14737: PUSH
14738: LD_INT 2
14740: NEG
14741: PUSH
14742: EMPTY
14743: LIST
14744: LIST
14745: PUSH
14746: LD_INT 1
14748: PUSH
14749: LD_INT 1
14751: NEG
14752: PUSH
14753: EMPTY
14754: LIST
14755: LIST
14756: PUSH
14757: LD_INT 2
14759: PUSH
14760: LD_INT 0
14762: PUSH
14763: EMPTY
14764: LIST
14765: LIST
14766: PUSH
14767: LD_INT 2
14769: PUSH
14770: LD_INT 1
14772: PUSH
14773: EMPTY
14774: LIST
14775: LIST
14776: PUSH
14777: LD_INT 1
14779: PUSH
14780: LD_INT 2
14782: PUSH
14783: EMPTY
14784: LIST
14785: LIST
14786: PUSH
14787: LD_INT 0
14789: PUSH
14790: LD_INT 2
14792: PUSH
14793: EMPTY
14794: LIST
14795: LIST
14796: PUSH
14797: LD_INT 1
14799: NEG
14800: PUSH
14801: LD_INT 1
14803: PUSH
14804: EMPTY
14805: LIST
14806: LIST
14807: PUSH
14808: LD_INT 2
14810: NEG
14811: PUSH
14812: LD_INT 0
14814: PUSH
14815: EMPTY
14816: LIST
14817: LIST
14818: PUSH
14819: LD_INT 2
14821: NEG
14822: PUSH
14823: LD_INT 1
14825: NEG
14826: PUSH
14827: EMPTY
14828: LIST
14829: LIST
14830: PUSH
14831: LD_INT 2
14833: NEG
14834: PUSH
14835: LD_INT 2
14837: NEG
14838: PUSH
14839: EMPTY
14840: LIST
14841: LIST
14842: PUSH
14843: LD_INT 2
14845: NEG
14846: PUSH
14847: LD_INT 3
14849: NEG
14850: PUSH
14851: EMPTY
14852: LIST
14853: LIST
14854: PUSH
14855: LD_INT 2
14857: PUSH
14858: LD_INT 1
14860: NEG
14861: PUSH
14862: EMPTY
14863: LIST
14864: LIST
14865: PUSH
14866: LD_INT 3
14868: PUSH
14869: LD_INT 1
14871: PUSH
14872: EMPTY
14873: LIST
14874: LIST
14875: PUSH
14876: LD_INT 1
14878: PUSH
14879: LD_INT 3
14881: PUSH
14882: EMPTY
14883: LIST
14884: LIST
14885: PUSH
14886: LD_INT 1
14888: NEG
14889: PUSH
14890: LD_INT 2
14892: PUSH
14893: EMPTY
14894: LIST
14895: LIST
14896: PUSH
14897: LD_INT 3
14899: NEG
14900: PUSH
14901: LD_INT 2
14903: NEG
14904: PUSH
14905: EMPTY
14906: LIST
14907: LIST
14908: PUSH
14909: EMPTY
14910: LIST
14911: LIST
14912: LIST
14913: LIST
14914: LIST
14915: LIST
14916: LIST
14917: LIST
14918: LIST
14919: LIST
14920: LIST
14921: LIST
14922: LIST
14923: LIST
14924: LIST
14925: LIST
14926: LIST
14927: LIST
14928: LIST
14929: LIST
14930: LIST
14931: LIST
14932: LIST
14933: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14934: LD_ADDR_VAR 0 34
14938: PUSH
14939: LD_INT 0
14941: PUSH
14942: LD_INT 0
14944: PUSH
14945: EMPTY
14946: LIST
14947: LIST
14948: PUSH
14949: LD_INT 0
14951: PUSH
14952: LD_INT 1
14954: NEG
14955: PUSH
14956: EMPTY
14957: LIST
14958: LIST
14959: PUSH
14960: LD_INT 1
14962: PUSH
14963: LD_INT 0
14965: PUSH
14966: EMPTY
14967: LIST
14968: LIST
14969: PUSH
14970: LD_INT 1
14972: PUSH
14973: LD_INT 1
14975: PUSH
14976: EMPTY
14977: LIST
14978: LIST
14979: PUSH
14980: LD_INT 0
14982: PUSH
14983: LD_INT 1
14985: PUSH
14986: EMPTY
14987: LIST
14988: LIST
14989: PUSH
14990: LD_INT 1
14992: NEG
14993: PUSH
14994: LD_INT 0
14996: PUSH
14997: EMPTY
14998: LIST
14999: LIST
15000: PUSH
15001: LD_INT 1
15003: NEG
15004: PUSH
15005: LD_INT 1
15007: NEG
15008: PUSH
15009: EMPTY
15010: LIST
15011: LIST
15012: PUSH
15013: LD_INT 1
15015: NEG
15016: PUSH
15017: LD_INT 2
15019: NEG
15020: PUSH
15021: EMPTY
15022: LIST
15023: LIST
15024: PUSH
15025: LD_INT 0
15027: PUSH
15028: LD_INT 2
15030: NEG
15031: PUSH
15032: EMPTY
15033: LIST
15034: LIST
15035: PUSH
15036: LD_INT 1
15038: PUSH
15039: LD_INT 1
15041: NEG
15042: PUSH
15043: EMPTY
15044: LIST
15045: LIST
15046: PUSH
15047: LD_INT 2
15049: PUSH
15050: LD_INT 1
15052: PUSH
15053: EMPTY
15054: LIST
15055: LIST
15056: PUSH
15057: LD_INT 2
15059: PUSH
15060: LD_INT 2
15062: PUSH
15063: EMPTY
15064: LIST
15065: LIST
15066: PUSH
15067: LD_INT 1
15069: PUSH
15070: LD_INT 2
15072: PUSH
15073: EMPTY
15074: LIST
15075: LIST
15076: PUSH
15077: LD_INT 1
15079: NEG
15080: PUSH
15081: LD_INT 1
15083: PUSH
15084: EMPTY
15085: LIST
15086: LIST
15087: PUSH
15088: LD_INT 2
15090: NEG
15091: PUSH
15092: LD_INT 0
15094: PUSH
15095: EMPTY
15096: LIST
15097: LIST
15098: PUSH
15099: LD_INT 2
15101: NEG
15102: PUSH
15103: LD_INT 1
15105: NEG
15106: PUSH
15107: EMPTY
15108: LIST
15109: LIST
15110: PUSH
15111: LD_INT 2
15113: NEG
15114: PUSH
15115: LD_INT 2
15117: NEG
15118: PUSH
15119: EMPTY
15120: LIST
15121: LIST
15122: PUSH
15123: LD_INT 1
15125: NEG
15126: PUSH
15127: LD_INT 3
15129: NEG
15130: PUSH
15131: EMPTY
15132: LIST
15133: LIST
15134: PUSH
15135: LD_INT 1
15137: PUSH
15138: LD_INT 2
15140: NEG
15141: PUSH
15142: EMPTY
15143: LIST
15144: LIST
15145: PUSH
15146: LD_INT 3
15148: PUSH
15149: LD_INT 2
15151: PUSH
15152: EMPTY
15153: LIST
15154: LIST
15155: PUSH
15156: LD_INT 2
15158: PUSH
15159: LD_INT 3
15161: PUSH
15162: EMPTY
15163: LIST
15164: LIST
15165: PUSH
15166: LD_INT 2
15168: NEG
15169: PUSH
15170: LD_INT 1
15172: PUSH
15173: EMPTY
15174: LIST
15175: LIST
15176: PUSH
15177: LD_INT 3
15179: NEG
15180: PUSH
15181: LD_INT 1
15183: NEG
15184: PUSH
15185: EMPTY
15186: LIST
15187: LIST
15188: PUSH
15189: EMPTY
15190: LIST
15191: LIST
15192: LIST
15193: LIST
15194: LIST
15195: LIST
15196: LIST
15197: LIST
15198: LIST
15199: LIST
15200: LIST
15201: LIST
15202: LIST
15203: LIST
15204: LIST
15205: LIST
15206: LIST
15207: LIST
15208: LIST
15209: LIST
15210: LIST
15211: LIST
15212: LIST
15213: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15214: LD_ADDR_VAR 0 35
15218: PUSH
15219: LD_INT 0
15221: PUSH
15222: LD_INT 0
15224: PUSH
15225: EMPTY
15226: LIST
15227: LIST
15228: PUSH
15229: LD_INT 0
15231: PUSH
15232: LD_INT 1
15234: NEG
15235: PUSH
15236: EMPTY
15237: LIST
15238: LIST
15239: PUSH
15240: LD_INT 1
15242: PUSH
15243: LD_INT 0
15245: PUSH
15246: EMPTY
15247: LIST
15248: LIST
15249: PUSH
15250: LD_INT 1
15252: PUSH
15253: LD_INT 1
15255: PUSH
15256: EMPTY
15257: LIST
15258: LIST
15259: PUSH
15260: LD_INT 0
15262: PUSH
15263: LD_INT 1
15265: PUSH
15266: EMPTY
15267: LIST
15268: LIST
15269: PUSH
15270: LD_INT 1
15272: NEG
15273: PUSH
15274: LD_INT 0
15276: PUSH
15277: EMPTY
15278: LIST
15279: LIST
15280: PUSH
15281: LD_INT 1
15283: NEG
15284: PUSH
15285: LD_INT 1
15287: NEG
15288: PUSH
15289: EMPTY
15290: LIST
15291: LIST
15292: PUSH
15293: LD_INT 2
15295: PUSH
15296: LD_INT 1
15298: PUSH
15299: EMPTY
15300: LIST
15301: LIST
15302: PUSH
15303: LD_INT 2
15305: NEG
15306: PUSH
15307: LD_INT 1
15309: NEG
15310: PUSH
15311: EMPTY
15312: LIST
15313: LIST
15314: PUSH
15315: EMPTY
15316: LIST
15317: LIST
15318: LIST
15319: LIST
15320: LIST
15321: LIST
15322: LIST
15323: LIST
15324: LIST
15325: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15326: LD_ADDR_VAR 0 36
15330: PUSH
15331: LD_INT 0
15333: PUSH
15334: LD_INT 0
15336: PUSH
15337: EMPTY
15338: LIST
15339: LIST
15340: PUSH
15341: LD_INT 0
15343: PUSH
15344: LD_INT 1
15346: NEG
15347: PUSH
15348: EMPTY
15349: LIST
15350: LIST
15351: PUSH
15352: LD_INT 1
15354: PUSH
15355: LD_INT 0
15357: PUSH
15358: EMPTY
15359: LIST
15360: LIST
15361: PUSH
15362: LD_INT 1
15364: PUSH
15365: LD_INT 1
15367: PUSH
15368: EMPTY
15369: LIST
15370: LIST
15371: PUSH
15372: LD_INT 0
15374: PUSH
15375: LD_INT 1
15377: PUSH
15378: EMPTY
15379: LIST
15380: LIST
15381: PUSH
15382: LD_INT 1
15384: NEG
15385: PUSH
15386: LD_INT 0
15388: PUSH
15389: EMPTY
15390: LIST
15391: LIST
15392: PUSH
15393: LD_INT 1
15395: NEG
15396: PUSH
15397: LD_INT 1
15399: NEG
15400: PUSH
15401: EMPTY
15402: LIST
15403: LIST
15404: PUSH
15405: LD_INT 1
15407: NEG
15408: PUSH
15409: LD_INT 2
15411: NEG
15412: PUSH
15413: EMPTY
15414: LIST
15415: LIST
15416: PUSH
15417: LD_INT 1
15419: PUSH
15420: LD_INT 2
15422: PUSH
15423: EMPTY
15424: LIST
15425: LIST
15426: PUSH
15427: EMPTY
15428: LIST
15429: LIST
15430: LIST
15431: LIST
15432: LIST
15433: LIST
15434: LIST
15435: LIST
15436: LIST
15437: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15438: LD_ADDR_VAR 0 37
15442: PUSH
15443: LD_INT 0
15445: PUSH
15446: LD_INT 0
15448: PUSH
15449: EMPTY
15450: LIST
15451: LIST
15452: PUSH
15453: LD_INT 0
15455: PUSH
15456: LD_INT 1
15458: NEG
15459: PUSH
15460: EMPTY
15461: LIST
15462: LIST
15463: PUSH
15464: LD_INT 1
15466: PUSH
15467: LD_INT 0
15469: PUSH
15470: EMPTY
15471: LIST
15472: LIST
15473: PUSH
15474: LD_INT 1
15476: PUSH
15477: LD_INT 1
15479: PUSH
15480: EMPTY
15481: LIST
15482: LIST
15483: PUSH
15484: LD_INT 0
15486: PUSH
15487: LD_INT 1
15489: PUSH
15490: EMPTY
15491: LIST
15492: LIST
15493: PUSH
15494: LD_INT 1
15496: NEG
15497: PUSH
15498: LD_INT 0
15500: PUSH
15501: EMPTY
15502: LIST
15503: LIST
15504: PUSH
15505: LD_INT 1
15507: NEG
15508: PUSH
15509: LD_INT 1
15511: NEG
15512: PUSH
15513: EMPTY
15514: LIST
15515: LIST
15516: PUSH
15517: LD_INT 1
15519: PUSH
15520: LD_INT 1
15522: NEG
15523: PUSH
15524: EMPTY
15525: LIST
15526: LIST
15527: PUSH
15528: LD_INT 1
15530: NEG
15531: PUSH
15532: LD_INT 1
15534: PUSH
15535: EMPTY
15536: LIST
15537: LIST
15538: PUSH
15539: EMPTY
15540: LIST
15541: LIST
15542: LIST
15543: LIST
15544: LIST
15545: LIST
15546: LIST
15547: LIST
15548: LIST
15549: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15550: LD_ADDR_VAR 0 38
15554: PUSH
15555: LD_INT 0
15557: PUSH
15558: LD_INT 0
15560: PUSH
15561: EMPTY
15562: LIST
15563: LIST
15564: PUSH
15565: LD_INT 0
15567: PUSH
15568: LD_INT 1
15570: NEG
15571: PUSH
15572: EMPTY
15573: LIST
15574: LIST
15575: PUSH
15576: LD_INT 1
15578: PUSH
15579: LD_INT 0
15581: PUSH
15582: EMPTY
15583: LIST
15584: LIST
15585: PUSH
15586: LD_INT 1
15588: PUSH
15589: LD_INT 1
15591: PUSH
15592: EMPTY
15593: LIST
15594: LIST
15595: PUSH
15596: LD_INT 0
15598: PUSH
15599: LD_INT 1
15601: PUSH
15602: EMPTY
15603: LIST
15604: LIST
15605: PUSH
15606: LD_INT 1
15608: NEG
15609: PUSH
15610: LD_INT 0
15612: PUSH
15613: EMPTY
15614: LIST
15615: LIST
15616: PUSH
15617: LD_INT 1
15619: NEG
15620: PUSH
15621: LD_INT 1
15623: NEG
15624: PUSH
15625: EMPTY
15626: LIST
15627: LIST
15628: PUSH
15629: LD_INT 2
15631: PUSH
15632: LD_INT 1
15634: PUSH
15635: EMPTY
15636: LIST
15637: LIST
15638: PUSH
15639: LD_INT 2
15641: NEG
15642: PUSH
15643: LD_INT 1
15645: NEG
15646: PUSH
15647: EMPTY
15648: LIST
15649: LIST
15650: PUSH
15651: EMPTY
15652: LIST
15653: LIST
15654: LIST
15655: LIST
15656: LIST
15657: LIST
15658: LIST
15659: LIST
15660: LIST
15661: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15662: LD_ADDR_VAR 0 39
15666: PUSH
15667: LD_INT 0
15669: PUSH
15670: LD_INT 0
15672: PUSH
15673: EMPTY
15674: LIST
15675: LIST
15676: PUSH
15677: LD_INT 0
15679: PUSH
15680: LD_INT 1
15682: NEG
15683: PUSH
15684: EMPTY
15685: LIST
15686: LIST
15687: PUSH
15688: LD_INT 1
15690: PUSH
15691: LD_INT 0
15693: PUSH
15694: EMPTY
15695: LIST
15696: LIST
15697: PUSH
15698: LD_INT 1
15700: PUSH
15701: LD_INT 1
15703: PUSH
15704: EMPTY
15705: LIST
15706: LIST
15707: PUSH
15708: LD_INT 0
15710: PUSH
15711: LD_INT 1
15713: PUSH
15714: EMPTY
15715: LIST
15716: LIST
15717: PUSH
15718: LD_INT 1
15720: NEG
15721: PUSH
15722: LD_INT 0
15724: PUSH
15725: EMPTY
15726: LIST
15727: LIST
15728: PUSH
15729: LD_INT 1
15731: NEG
15732: PUSH
15733: LD_INT 1
15735: NEG
15736: PUSH
15737: EMPTY
15738: LIST
15739: LIST
15740: PUSH
15741: LD_INT 1
15743: NEG
15744: PUSH
15745: LD_INT 2
15747: NEG
15748: PUSH
15749: EMPTY
15750: LIST
15751: LIST
15752: PUSH
15753: LD_INT 1
15755: PUSH
15756: LD_INT 2
15758: PUSH
15759: EMPTY
15760: LIST
15761: LIST
15762: PUSH
15763: EMPTY
15764: LIST
15765: LIST
15766: LIST
15767: LIST
15768: LIST
15769: LIST
15770: LIST
15771: LIST
15772: LIST
15773: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15774: LD_ADDR_VAR 0 40
15778: PUSH
15779: LD_INT 0
15781: PUSH
15782: LD_INT 0
15784: PUSH
15785: EMPTY
15786: LIST
15787: LIST
15788: PUSH
15789: LD_INT 0
15791: PUSH
15792: LD_INT 1
15794: NEG
15795: PUSH
15796: EMPTY
15797: LIST
15798: LIST
15799: PUSH
15800: LD_INT 1
15802: PUSH
15803: LD_INT 0
15805: PUSH
15806: EMPTY
15807: LIST
15808: LIST
15809: PUSH
15810: LD_INT 1
15812: PUSH
15813: LD_INT 1
15815: PUSH
15816: EMPTY
15817: LIST
15818: LIST
15819: PUSH
15820: LD_INT 0
15822: PUSH
15823: LD_INT 1
15825: PUSH
15826: EMPTY
15827: LIST
15828: LIST
15829: PUSH
15830: LD_INT 1
15832: NEG
15833: PUSH
15834: LD_INT 0
15836: PUSH
15837: EMPTY
15838: LIST
15839: LIST
15840: PUSH
15841: LD_INT 1
15843: NEG
15844: PUSH
15845: LD_INT 1
15847: NEG
15848: PUSH
15849: EMPTY
15850: LIST
15851: LIST
15852: PUSH
15853: LD_INT 1
15855: PUSH
15856: LD_INT 1
15858: NEG
15859: PUSH
15860: EMPTY
15861: LIST
15862: LIST
15863: PUSH
15864: LD_INT 1
15866: NEG
15867: PUSH
15868: LD_INT 1
15870: PUSH
15871: EMPTY
15872: LIST
15873: LIST
15874: PUSH
15875: EMPTY
15876: LIST
15877: LIST
15878: LIST
15879: LIST
15880: LIST
15881: LIST
15882: LIST
15883: LIST
15884: LIST
15885: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15886: LD_ADDR_VAR 0 41
15890: PUSH
15891: LD_INT 0
15893: PUSH
15894: LD_INT 0
15896: PUSH
15897: EMPTY
15898: LIST
15899: LIST
15900: PUSH
15901: LD_INT 0
15903: PUSH
15904: LD_INT 1
15906: NEG
15907: PUSH
15908: EMPTY
15909: LIST
15910: LIST
15911: PUSH
15912: LD_INT 1
15914: PUSH
15915: LD_INT 0
15917: PUSH
15918: EMPTY
15919: LIST
15920: LIST
15921: PUSH
15922: LD_INT 1
15924: PUSH
15925: LD_INT 1
15927: PUSH
15928: EMPTY
15929: LIST
15930: LIST
15931: PUSH
15932: LD_INT 0
15934: PUSH
15935: LD_INT 1
15937: PUSH
15938: EMPTY
15939: LIST
15940: LIST
15941: PUSH
15942: LD_INT 1
15944: NEG
15945: PUSH
15946: LD_INT 0
15948: PUSH
15949: EMPTY
15950: LIST
15951: LIST
15952: PUSH
15953: LD_INT 1
15955: NEG
15956: PUSH
15957: LD_INT 1
15959: NEG
15960: PUSH
15961: EMPTY
15962: LIST
15963: LIST
15964: PUSH
15965: LD_INT 1
15967: NEG
15968: PUSH
15969: LD_INT 2
15971: NEG
15972: PUSH
15973: EMPTY
15974: LIST
15975: LIST
15976: PUSH
15977: LD_INT 1
15979: PUSH
15980: LD_INT 1
15982: NEG
15983: PUSH
15984: EMPTY
15985: LIST
15986: LIST
15987: PUSH
15988: LD_INT 2
15990: PUSH
15991: LD_INT 0
15993: PUSH
15994: EMPTY
15995: LIST
15996: LIST
15997: PUSH
15998: LD_INT 2
16000: PUSH
16001: LD_INT 1
16003: PUSH
16004: EMPTY
16005: LIST
16006: LIST
16007: PUSH
16008: LD_INT 2
16010: PUSH
16011: LD_INT 2
16013: PUSH
16014: EMPTY
16015: LIST
16016: LIST
16017: PUSH
16018: LD_INT 1
16020: PUSH
16021: LD_INT 2
16023: PUSH
16024: EMPTY
16025: LIST
16026: LIST
16027: PUSH
16028: LD_INT 1
16030: NEG
16031: PUSH
16032: LD_INT 1
16034: PUSH
16035: EMPTY
16036: LIST
16037: LIST
16038: PUSH
16039: LD_INT 2
16041: NEG
16042: PUSH
16043: LD_INT 0
16045: PUSH
16046: EMPTY
16047: LIST
16048: LIST
16049: PUSH
16050: LD_INT 2
16052: NEG
16053: PUSH
16054: LD_INT 1
16056: NEG
16057: PUSH
16058: EMPTY
16059: LIST
16060: LIST
16061: PUSH
16062: LD_INT 2
16064: NEG
16065: PUSH
16066: LD_INT 2
16068: NEG
16069: PUSH
16070: EMPTY
16071: LIST
16072: LIST
16073: PUSH
16074: LD_INT 2
16076: NEG
16077: PUSH
16078: LD_INT 3
16080: NEG
16081: PUSH
16082: EMPTY
16083: LIST
16084: LIST
16085: PUSH
16086: LD_INT 2
16088: PUSH
16089: LD_INT 1
16091: NEG
16092: PUSH
16093: EMPTY
16094: LIST
16095: LIST
16096: PUSH
16097: LD_INT 3
16099: PUSH
16100: LD_INT 0
16102: PUSH
16103: EMPTY
16104: LIST
16105: LIST
16106: PUSH
16107: LD_INT 3
16109: PUSH
16110: LD_INT 1
16112: PUSH
16113: EMPTY
16114: LIST
16115: LIST
16116: PUSH
16117: LD_INT 3
16119: PUSH
16120: LD_INT 2
16122: PUSH
16123: EMPTY
16124: LIST
16125: LIST
16126: PUSH
16127: LD_INT 3
16129: PUSH
16130: LD_INT 3
16132: PUSH
16133: EMPTY
16134: LIST
16135: LIST
16136: PUSH
16137: LD_INT 2
16139: PUSH
16140: LD_INT 3
16142: PUSH
16143: EMPTY
16144: LIST
16145: LIST
16146: PUSH
16147: LD_INT 2
16149: NEG
16150: PUSH
16151: LD_INT 1
16153: PUSH
16154: EMPTY
16155: LIST
16156: LIST
16157: PUSH
16158: LD_INT 3
16160: NEG
16161: PUSH
16162: LD_INT 0
16164: PUSH
16165: EMPTY
16166: LIST
16167: LIST
16168: PUSH
16169: LD_INT 3
16171: NEG
16172: PUSH
16173: LD_INT 1
16175: NEG
16176: PUSH
16177: EMPTY
16178: LIST
16179: LIST
16180: PUSH
16181: LD_INT 3
16183: NEG
16184: PUSH
16185: LD_INT 2
16187: NEG
16188: PUSH
16189: EMPTY
16190: LIST
16191: LIST
16192: PUSH
16193: LD_INT 3
16195: NEG
16196: PUSH
16197: LD_INT 3
16199: NEG
16200: PUSH
16201: EMPTY
16202: LIST
16203: LIST
16204: PUSH
16205: EMPTY
16206: LIST
16207: LIST
16208: LIST
16209: LIST
16210: LIST
16211: LIST
16212: LIST
16213: LIST
16214: LIST
16215: LIST
16216: LIST
16217: LIST
16218: LIST
16219: LIST
16220: LIST
16221: LIST
16222: LIST
16223: LIST
16224: LIST
16225: LIST
16226: LIST
16227: LIST
16228: LIST
16229: LIST
16230: LIST
16231: LIST
16232: LIST
16233: LIST
16234: LIST
16235: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16236: LD_ADDR_VAR 0 42
16240: PUSH
16241: LD_INT 0
16243: PUSH
16244: LD_INT 0
16246: PUSH
16247: EMPTY
16248: LIST
16249: LIST
16250: PUSH
16251: LD_INT 0
16253: PUSH
16254: LD_INT 1
16256: NEG
16257: PUSH
16258: EMPTY
16259: LIST
16260: LIST
16261: PUSH
16262: LD_INT 1
16264: PUSH
16265: LD_INT 0
16267: PUSH
16268: EMPTY
16269: LIST
16270: LIST
16271: PUSH
16272: LD_INT 1
16274: PUSH
16275: LD_INT 1
16277: PUSH
16278: EMPTY
16279: LIST
16280: LIST
16281: PUSH
16282: LD_INT 0
16284: PUSH
16285: LD_INT 1
16287: PUSH
16288: EMPTY
16289: LIST
16290: LIST
16291: PUSH
16292: LD_INT 1
16294: NEG
16295: PUSH
16296: LD_INT 0
16298: PUSH
16299: EMPTY
16300: LIST
16301: LIST
16302: PUSH
16303: LD_INT 1
16305: NEG
16306: PUSH
16307: LD_INT 1
16309: NEG
16310: PUSH
16311: EMPTY
16312: LIST
16313: LIST
16314: PUSH
16315: LD_INT 1
16317: NEG
16318: PUSH
16319: LD_INT 2
16321: NEG
16322: PUSH
16323: EMPTY
16324: LIST
16325: LIST
16326: PUSH
16327: LD_INT 0
16329: PUSH
16330: LD_INT 2
16332: NEG
16333: PUSH
16334: EMPTY
16335: LIST
16336: LIST
16337: PUSH
16338: LD_INT 1
16340: PUSH
16341: LD_INT 1
16343: NEG
16344: PUSH
16345: EMPTY
16346: LIST
16347: LIST
16348: PUSH
16349: LD_INT 2
16351: PUSH
16352: LD_INT 1
16354: PUSH
16355: EMPTY
16356: LIST
16357: LIST
16358: PUSH
16359: LD_INT 2
16361: PUSH
16362: LD_INT 2
16364: PUSH
16365: EMPTY
16366: LIST
16367: LIST
16368: PUSH
16369: LD_INT 1
16371: PUSH
16372: LD_INT 2
16374: PUSH
16375: EMPTY
16376: LIST
16377: LIST
16378: PUSH
16379: LD_INT 0
16381: PUSH
16382: LD_INT 2
16384: PUSH
16385: EMPTY
16386: LIST
16387: LIST
16388: PUSH
16389: LD_INT 1
16391: NEG
16392: PUSH
16393: LD_INT 1
16395: PUSH
16396: EMPTY
16397: LIST
16398: LIST
16399: PUSH
16400: LD_INT 2
16402: NEG
16403: PUSH
16404: LD_INT 1
16406: NEG
16407: PUSH
16408: EMPTY
16409: LIST
16410: LIST
16411: PUSH
16412: LD_INT 2
16414: NEG
16415: PUSH
16416: LD_INT 2
16418: NEG
16419: PUSH
16420: EMPTY
16421: LIST
16422: LIST
16423: PUSH
16424: LD_INT 2
16426: NEG
16427: PUSH
16428: LD_INT 3
16430: NEG
16431: PUSH
16432: EMPTY
16433: LIST
16434: LIST
16435: PUSH
16436: LD_INT 1
16438: NEG
16439: PUSH
16440: LD_INT 3
16442: NEG
16443: PUSH
16444: EMPTY
16445: LIST
16446: LIST
16447: PUSH
16448: LD_INT 0
16450: PUSH
16451: LD_INT 3
16453: NEG
16454: PUSH
16455: EMPTY
16456: LIST
16457: LIST
16458: PUSH
16459: LD_INT 1
16461: PUSH
16462: LD_INT 2
16464: NEG
16465: PUSH
16466: EMPTY
16467: LIST
16468: LIST
16469: PUSH
16470: LD_INT 3
16472: PUSH
16473: LD_INT 2
16475: PUSH
16476: EMPTY
16477: LIST
16478: LIST
16479: PUSH
16480: LD_INT 3
16482: PUSH
16483: LD_INT 3
16485: PUSH
16486: EMPTY
16487: LIST
16488: LIST
16489: PUSH
16490: LD_INT 2
16492: PUSH
16493: LD_INT 3
16495: PUSH
16496: EMPTY
16497: LIST
16498: LIST
16499: PUSH
16500: LD_INT 1
16502: PUSH
16503: LD_INT 3
16505: PUSH
16506: EMPTY
16507: LIST
16508: LIST
16509: PUSH
16510: LD_INT 0
16512: PUSH
16513: LD_INT 3
16515: PUSH
16516: EMPTY
16517: LIST
16518: LIST
16519: PUSH
16520: LD_INT 1
16522: NEG
16523: PUSH
16524: LD_INT 2
16526: PUSH
16527: EMPTY
16528: LIST
16529: LIST
16530: PUSH
16531: LD_INT 3
16533: NEG
16534: PUSH
16535: LD_INT 2
16537: NEG
16538: PUSH
16539: EMPTY
16540: LIST
16541: LIST
16542: PUSH
16543: LD_INT 3
16545: NEG
16546: PUSH
16547: LD_INT 3
16549: NEG
16550: PUSH
16551: EMPTY
16552: LIST
16553: LIST
16554: PUSH
16555: EMPTY
16556: LIST
16557: LIST
16558: LIST
16559: LIST
16560: LIST
16561: LIST
16562: LIST
16563: LIST
16564: LIST
16565: LIST
16566: LIST
16567: LIST
16568: LIST
16569: LIST
16570: LIST
16571: LIST
16572: LIST
16573: LIST
16574: LIST
16575: LIST
16576: LIST
16577: LIST
16578: LIST
16579: LIST
16580: LIST
16581: LIST
16582: LIST
16583: LIST
16584: LIST
16585: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16586: LD_ADDR_VAR 0 43
16590: PUSH
16591: LD_INT 0
16593: PUSH
16594: LD_INT 0
16596: PUSH
16597: EMPTY
16598: LIST
16599: LIST
16600: PUSH
16601: LD_INT 0
16603: PUSH
16604: LD_INT 1
16606: NEG
16607: PUSH
16608: EMPTY
16609: LIST
16610: LIST
16611: PUSH
16612: LD_INT 1
16614: PUSH
16615: LD_INT 0
16617: PUSH
16618: EMPTY
16619: LIST
16620: LIST
16621: PUSH
16622: LD_INT 1
16624: PUSH
16625: LD_INT 1
16627: PUSH
16628: EMPTY
16629: LIST
16630: LIST
16631: PUSH
16632: LD_INT 0
16634: PUSH
16635: LD_INT 1
16637: PUSH
16638: EMPTY
16639: LIST
16640: LIST
16641: PUSH
16642: LD_INT 1
16644: NEG
16645: PUSH
16646: LD_INT 0
16648: PUSH
16649: EMPTY
16650: LIST
16651: LIST
16652: PUSH
16653: LD_INT 1
16655: NEG
16656: PUSH
16657: LD_INT 1
16659: NEG
16660: PUSH
16661: EMPTY
16662: LIST
16663: LIST
16664: PUSH
16665: LD_INT 1
16667: NEG
16668: PUSH
16669: LD_INT 2
16671: NEG
16672: PUSH
16673: EMPTY
16674: LIST
16675: LIST
16676: PUSH
16677: LD_INT 0
16679: PUSH
16680: LD_INT 2
16682: NEG
16683: PUSH
16684: EMPTY
16685: LIST
16686: LIST
16687: PUSH
16688: LD_INT 1
16690: PUSH
16691: LD_INT 1
16693: NEG
16694: PUSH
16695: EMPTY
16696: LIST
16697: LIST
16698: PUSH
16699: LD_INT 2
16701: PUSH
16702: LD_INT 0
16704: PUSH
16705: EMPTY
16706: LIST
16707: LIST
16708: PUSH
16709: LD_INT 2
16711: PUSH
16712: LD_INT 1
16714: PUSH
16715: EMPTY
16716: LIST
16717: LIST
16718: PUSH
16719: LD_INT 1
16721: PUSH
16722: LD_INT 2
16724: PUSH
16725: EMPTY
16726: LIST
16727: LIST
16728: PUSH
16729: LD_INT 0
16731: PUSH
16732: LD_INT 2
16734: PUSH
16735: EMPTY
16736: LIST
16737: LIST
16738: PUSH
16739: LD_INT 1
16741: NEG
16742: PUSH
16743: LD_INT 1
16745: PUSH
16746: EMPTY
16747: LIST
16748: LIST
16749: PUSH
16750: LD_INT 2
16752: NEG
16753: PUSH
16754: LD_INT 0
16756: PUSH
16757: EMPTY
16758: LIST
16759: LIST
16760: PUSH
16761: LD_INT 2
16763: NEG
16764: PUSH
16765: LD_INT 1
16767: NEG
16768: PUSH
16769: EMPTY
16770: LIST
16771: LIST
16772: PUSH
16773: LD_INT 1
16775: NEG
16776: PUSH
16777: LD_INT 3
16779: NEG
16780: PUSH
16781: EMPTY
16782: LIST
16783: LIST
16784: PUSH
16785: LD_INT 0
16787: PUSH
16788: LD_INT 3
16790: NEG
16791: PUSH
16792: EMPTY
16793: LIST
16794: LIST
16795: PUSH
16796: LD_INT 1
16798: PUSH
16799: LD_INT 2
16801: NEG
16802: PUSH
16803: EMPTY
16804: LIST
16805: LIST
16806: PUSH
16807: LD_INT 2
16809: PUSH
16810: LD_INT 1
16812: NEG
16813: PUSH
16814: EMPTY
16815: LIST
16816: LIST
16817: PUSH
16818: LD_INT 3
16820: PUSH
16821: LD_INT 0
16823: PUSH
16824: EMPTY
16825: LIST
16826: LIST
16827: PUSH
16828: LD_INT 3
16830: PUSH
16831: LD_INT 1
16833: PUSH
16834: EMPTY
16835: LIST
16836: LIST
16837: PUSH
16838: LD_INT 1
16840: PUSH
16841: LD_INT 3
16843: PUSH
16844: EMPTY
16845: LIST
16846: LIST
16847: PUSH
16848: LD_INT 0
16850: PUSH
16851: LD_INT 3
16853: PUSH
16854: EMPTY
16855: LIST
16856: LIST
16857: PUSH
16858: LD_INT 1
16860: NEG
16861: PUSH
16862: LD_INT 2
16864: PUSH
16865: EMPTY
16866: LIST
16867: LIST
16868: PUSH
16869: LD_INT 2
16871: NEG
16872: PUSH
16873: LD_INT 1
16875: PUSH
16876: EMPTY
16877: LIST
16878: LIST
16879: PUSH
16880: LD_INT 3
16882: NEG
16883: PUSH
16884: LD_INT 0
16886: PUSH
16887: EMPTY
16888: LIST
16889: LIST
16890: PUSH
16891: LD_INT 3
16893: NEG
16894: PUSH
16895: LD_INT 1
16897: NEG
16898: PUSH
16899: EMPTY
16900: LIST
16901: LIST
16902: PUSH
16903: EMPTY
16904: LIST
16905: LIST
16906: LIST
16907: LIST
16908: LIST
16909: LIST
16910: LIST
16911: LIST
16912: LIST
16913: LIST
16914: LIST
16915: LIST
16916: LIST
16917: LIST
16918: LIST
16919: LIST
16920: LIST
16921: LIST
16922: LIST
16923: LIST
16924: LIST
16925: LIST
16926: LIST
16927: LIST
16928: LIST
16929: LIST
16930: LIST
16931: LIST
16932: LIST
16933: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16934: LD_ADDR_VAR 0 44
16938: PUSH
16939: LD_INT 0
16941: PUSH
16942: LD_INT 0
16944: PUSH
16945: EMPTY
16946: LIST
16947: LIST
16948: PUSH
16949: LD_INT 0
16951: PUSH
16952: LD_INT 1
16954: NEG
16955: PUSH
16956: EMPTY
16957: LIST
16958: LIST
16959: PUSH
16960: LD_INT 1
16962: PUSH
16963: LD_INT 0
16965: PUSH
16966: EMPTY
16967: LIST
16968: LIST
16969: PUSH
16970: LD_INT 1
16972: PUSH
16973: LD_INT 1
16975: PUSH
16976: EMPTY
16977: LIST
16978: LIST
16979: PUSH
16980: LD_INT 0
16982: PUSH
16983: LD_INT 1
16985: PUSH
16986: EMPTY
16987: LIST
16988: LIST
16989: PUSH
16990: LD_INT 1
16992: NEG
16993: PUSH
16994: LD_INT 0
16996: PUSH
16997: EMPTY
16998: LIST
16999: LIST
17000: PUSH
17001: LD_INT 1
17003: NEG
17004: PUSH
17005: LD_INT 1
17007: NEG
17008: PUSH
17009: EMPTY
17010: LIST
17011: LIST
17012: PUSH
17013: LD_INT 1
17015: NEG
17016: PUSH
17017: LD_INT 2
17019: NEG
17020: PUSH
17021: EMPTY
17022: LIST
17023: LIST
17024: PUSH
17025: LD_INT 1
17027: PUSH
17028: LD_INT 1
17030: NEG
17031: PUSH
17032: EMPTY
17033: LIST
17034: LIST
17035: PUSH
17036: LD_INT 2
17038: PUSH
17039: LD_INT 0
17041: PUSH
17042: EMPTY
17043: LIST
17044: LIST
17045: PUSH
17046: LD_INT 2
17048: PUSH
17049: LD_INT 1
17051: PUSH
17052: EMPTY
17053: LIST
17054: LIST
17055: PUSH
17056: LD_INT 2
17058: PUSH
17059: LD_INT 2
17061: PUSH
17062: EMPTY
17063: LIST
17064: LIST
17065: PUSH
17066: LD_INT 1
17068: PUSH
17069: LD_INT 2
17071: PUSH
17072: EMPTY
17073: LIST
17074: LIST
17075: PUSH
17076: LD_INT 1
17078: NEG
17079: PUSH
17080: LD_INT 1
17082: PUSH
17083: EMPTY
17084: LIST
17085: LIST
17086: PUSH
17087: LD_INT 2
17089: NEG
17090: PUSH
17091: LD_INT 0
17093: PUSH
17094: EMPTY
17095: LIST
17096: LIST
17097: PUSH
17098: LD_INT 2
17100: NEG
17101: PUSH
17102: LD_INT 1
17104: NEG
17105: PUSH
17106: EMPTY
17107: LIST
17108: LIST
17109: PUSH
17110: LD_INT 2
17112: NEG
17113: PUSH
17114: LD_INT 2
17116: NEG
17117: PUSH
17118: EMPTY
17119: LIST
17120: LIST
17121: PUSH
17122: LD_INT 2
17124: NEG
17125: PUSH
17126: LD_INT 3
17128: NEG
17129: PUSH
17130: EMPTY
17131: LIST
17132: LIST
17133: PUSH
17134: LD_INT 2
17136: PUSH
17137: LD_INT 1
17139: NEG
17140: PUSH
17141: EMPTY
17142: LIST
17143: LIST
17144: PUSH
17145: LD_INT 3
17147: PUSH
17148: LD_INT 0
17150: PUSH
17151: EMPTY
17152: LIST
17153: LIST
17154: PUSH
17155: LD_INT 3
17157: PUSH
17158: LD_INT 1
17160: PUSH
17161: EMPTY
17162: LIST
17163: LIST
17164: PUSH
17165: LD_INT 3
17167: PUSH
17168: LD_INT 2
17170: PUSH
17171: EMPTY
17172: LIST
17173: LIST
17174: PUSH
17175: LD_INT 3
17177: PUSH
17178: LD_INT 3
17180: PUSH
17181: EMPTY
17182: LIST
17183: LIST
17184: PUSH
17185: LD_INT 2
17187: PUSH
17188: LD_INT 3
17190: PUSH
17191: EMPTY
17192: LIST
17193: LIST
17194: PUSH
17195: LD_INT 2
17197: NEG
17198: PUSH
17199: LD_INT 1
17201: PUSH
17202: EMPTY
17203: LIST
17204: LIST
17205: PUSH
17206: LD_INT 3
17208: NEG
17209: PUSH
17210: LD_INT 0
17212: PUSH
17213: EMPTY
17214: LIST
17215: LIST
17216: PUSH
17217: LD_INT 3
17219: NEG
17220: PUSH
17221: LD_INT 1
17223: NEG
17224: PUSH
17225: EMPTY
17226: LIST
17227: LIST
17228: PUSH
17229: LD_INT 3
17231: NEG
17232: PUSH
17233: LD_INT 2
17235: NEG
17236: PUSH
17237: EMPTY
17238: LIST
17239: LIST
17240: PUSH
17241: LD_INT 3
17243: NEG
17244: PUSH
17245: LD_INT 3
17247: NEG
17248: PUSH
17249: EMPTY
17250: LIST
17251: LIST
17252: PUSH
17253: EMPTY
17254: LIST
17255: LIST
17256: LIST
17257: LIST
17258: LIST
17259: LIST
17260: LIST
17261: LIST
17262: LIST
17263: LIST
17264: LIST
17265: LIST
17266: LIST
17267: LIST
17268: LIST
17269: LIST
17270: LIST
17271: LIST
17272: LIST
17273: LIST
17274: LIST
17275: LIST
17276: LIST
17277: LIST
17278: LIST
17279: LIST
17280: LIST
17281: LIST
17282: LIST
17283: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
17284: LD_ADDR_VAR 0 45
17288: PUSH
17289: LD_INT 0
17291: PUSH
17292: LD_INT 0
17294: PUSH
17295: EMPTY
17296: LIST
17297: LIST
17298: PUSH
17299: LD_INT 0
17301: PUSH
17302: LD_INT 1
17304: NEG
17305: PUSH
17306: EMPTY
17307: LIST
17308: LIST
17309: PUSH
17310: LD_INT 1
17312: PUSH
17313: LD_INT 0
17315: PUSH
17316: EMPTY
17317: LIST
17318: LIST
17319: PUSH
17320: LD_INT 1
17322: PUSH
17323: LD_INT 1
17325: PUSH
17326: EMPTY
17327: LIST
17328: LIST
17329: PUSH
17330: LD_INT 0
17332: PUSH
17333: LD_INT 1
17335: PUSH
17336: EMPTY
17337: LIST
17338: LIST
17339: PUSH
17340: LD_INT 1
17342: NEG
17343: PUSH
17344: LD_INT 0
17346: PUSH
17347: EMPTY
17348: LIST
17349: LIST
17350: PUSH
17351: LD_INT 1
17353: NEG
17354: PUSH
17355: LD_INT 1
17357: NEG
17358: PUSH
17359: EMPTY
17360: LIST
17361: LIST
17362: PUSH
17363: LD_INT 1
17365: NEG
17366: PUSH
17367: LD_INT 2
17369: NEG
17370: PUSH
17371: EMPTY
17372: LIST
17373: LIST
17374: PUSH
17375: LD_INT 0
17377: PUSH
17378: LD_INT 2
17380: NEG
17381: PUSH
17382: EMPTY
17383: LIST
17384: LIST
17385: PUSH
17386: LD_INT 1
17388: PUSH
17389: LD_INT 1
17391: NEG
17392: PUSH
17393: EMPTY
17394: LIST
17395: LIST
17396: PUSH
17397: LD_INT 2
17399: PUSH
17400: LD_INT 1
17402: PUSH
17403: EMPTY
17404: LIST
17405: LIST
17406: PUSH
17407: LD_INT 2
17409: PUSH
17410: LD_INT 2
17412: PUSH
17413: EMPTY
17414: LIST
17415: LIST
17416: PUSH
17417: LD_INT 1
17419: PUSH
17420: LD_INT 2
17422: PUSH
17423: EMPTY
17424: LIST
17425: LIST
17426: PUSH
17427: LD_INT 0
17429: PUSH
17430: LD_INT 2
17432: PUSH
17433: EMPTY
17434: LIST
17435: LIST
17436: PUSH
17437: LD_INT 1
17439: NEG
17440: PUSH
17441: LD_INT 1
17443: PUSH
17444: EMPTY
17445: LIST
17446: LIST
17447: PUSH
17448: LD_INT 2
17450: NEG
17451: PUSH
17452: LD_INT 1
17454: NEG
17455: PUSH
17456: EMPTY
17457: LIST
17458: LIST
17459: PUSH
17460: LD_INT 2
17462: NEG
17463: PUSH
17464: LD_INT 2
17466: NEG
17467: PUSH
17468: EMPTY
17469: LIST
17470: LIST
17471: PUSH
17472: LD_INT 2
17474: NEG
17475: PUSH
17476: LD_INT 3
17478: NEG
17479: PUSH
17480: EMPTY
17481: LIST
17482: LIST
17483: PUSH
17484: LD_INT 1
17486: NEG
17487: PUSH
17488: LD_INT 3
17490: NEG
17491: PUSH
17492: EMPTY
17493: LIST
17494: LIST
17495: PUSH
17496: LD_INT 0
17498: PUSH
17499: LD_INT 3
17501: NEG
17502: PUSH
17503: EMPTY
17504: LIST
17505: LIST
17506: PUSH
17507: LD_INT 1
17509: PUSH
17510: LD_INT 2
17512: NEG
17513: PUSH
17514: EMPTY
17515: LIST
17516: LIST
17517: PUSH
17518: LD_INT 3
17520: PUSH
17521: LD_INT 2
17523: PUSH
17524: EMPTY
17525: LIST
17526: LIST
17527: PUSH
17528: LD_INT 3
17530: PUSH
17531: LD_INT 3
17533: PUSH
17534: EMPTY
17535: LIST
17536: LIST
17537: PUSH
17538: LD_INT 2
17540: PUSH
17541: LD_INT 3
17543: PUSH
17544: EMPTY
17545: LIST
17546: LIST
17547: PUSH
17548: LD_INT 1
17550: PUSH
17551: LD_INT 3
17553: PUSH
17554: EMPTY
17555: LIST
17556: LIST
17557: PUSH
17558: LD_INT 0
17560: PUSH
17561: LD_INT 3
17563: PUSH
17564: EMPTY
17565: LIST
17566: LIST
17567: PUSH
17568: LD_INT 1
17570: NEG
17571: PUSH
17572: LD_INT 2
17574: PUSH
17575: EMPTY
17576: LIST
17577: LIST
17578: PUSH
17579: LD_INT 3
17581: NEG
17582: PUSH
17583: LD_INT 2
17585: NEG
17586: PUSH
17587: EMPTY
17588: LIST
17589: LIST
17590: PUSH
17591: LD_INT 3
17593: NEG
17594: PUSH
17595: LD_INT 3
17597: NEG
17598: PUSH
17599: EMPTY
17600: LIST
17601: LIST
17602: PUSH
17603: EMPTY
17604: LIST
17605: LIST
17606: LIST
17607: LIST
17608: LIST
17609: LIST
17610: LIST
17611: LIST
17612: LIST
17613: LIST
17614: LIST
17615: LIST
17616: LIST
17617: LIST
17618: LIST
17619: LIST
17620: LIST
17621: LIST
17622: LIST
17623: LIST
17624: LIST
17625: LIST
17626: LIST
17627: LIST
17628: LIST
17629: LIST
17630: LIST
17631: LIST
17632: LIST
17633: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17634: LD_ADDR_VAR 0 46
17638: PUSH
17639: LD_INT 0
17641: PUSH
17642: LD_INT 0
17644: PUSH
17645: EMPTY
17646: LIST
17647: LIST
17648: PUSH
17649: LD_INT 0
17651: PUSH
17652: LD_INT 1
17654: NEG
17655: PUSH
17656: EMPTY
17657: LIST
17658: LIST
17659: PUSH
17660: LD_INT 1
17662: PUSH
17663: LD_INT 0
17665: PUSH
17666: EMPTY
17667: LIST
17668: LIST
17669: PUSH
17670: LD_INT 1
17672: PUSH
17673: LD_INT 1
17675: PUSH
17676: EMPTY
17677: LIST
17678: LIST
17679: PUSH
17680: LD_INT 0
17682: PUSH
17683: LD_INT 1
17685: PUSH
17686: EMPTY
17687: LIST
17688: LIST
17689: PUSH
17690: LD_INT 1
17692: NEG
17693: PUSH
17694: LD_INT 0
17696: PUSH
17697: EMPTY
17698: LIST
17699: LIST
17700: PUSH
17701: LD_INT 1
17703: NEG
17704: PUSH
17705: LD_INT 1
17707: NEG
17708: PUSH
17709: EMPTY
17710: LIST
17711: LIST
17712: PUSH
17713: LD_INT 1
17715: NEG
17716: PUSH
17717: LD_INT 2
17719: NEG
17720: PUSH
17721: EMPTY
17722: LIST
17723: LIST
17724: PUSH
17725: LD_INT 0
17727: PUSH
17728: LD_INT 2
17730: NEG
17731: PUSH
17732: EMPTY
17733: LIST
17734: LIST
17735: PUSH
17736: LD_INT 1
17738: PUSH
17739: LD_INT 1
17741: NEG
17742: PUSH
17743: EMPTY
17744: LIST
17745: LIST
17746: PUSH
17747: LD_INT 2
17749: PUSH
17750: LD_INT 0
17752: PUSH
17753: EMPTY
17754: LIST
17755: LIST
17756: PUSH
17757: LD_INT 2
17759: PUSH
17760: LD_INT 1
17762: PUSH
17763: EMPTY
17764: LIST
17765: LIST
17766: PUSH
17767: LD_INT 1
17769: PUSH
17770: LD_INT 2
17772: PUSH
17773: EMPTY
17774: LIST
17775: LIST
17776: PUSH
17777: LD_INT 0
17779: PUSH
17780: LD_INT 2
17782: PUSH
17783: EMPTY
17784: LIST
17785: LIST
17786: PUSH
17787: LD_INT 1
17789: NEG
17790: PUSH
17791: LD_INT 1
17793: PUSH
17794: EMPTY
17795: LIST
17796: LIST
17797: PUSH
17798: LD_INT 2
17800: NEG
17801: PUSH
17802: LD_INT 0
17804: PUSH
17805: EMPTY
17806: LIST
17807: LIST
17808: PUSH
17809: LD_INT 2
17811: NEG
17812: PUSH
17813: LD_INT 1
17815: NEG
17816: PUSH
17817: EMPTY
17818: LIST
17819: LIST
17820: PUSH
17821: LD_INT 1
17823: NEG
17824: PUSH
17825: LD_INT 3
17827: NEG
17828: PUSH
17829: EMPTY
17830: LIST
17831: LIST
17832: PUSH
17833: LD_INT 0
17835: PUSH
17836: LD_INT 3
17838: NEG
17839: PUSH
17840: EMPTY
17841: LIST
17842: LIST
17843: PUSH
17844: LD_INT 1
17846: PUSH
17847: LD_INT 2
17849: NEG
17850: PUSH
17851: EMPTY
17852: LIST
17853: LIST
17854: PUSH
17855: LD_INT 2
17857: PUSH
17858: LD_INT 1
17860: NEG
17861: PUSH
17862: EMPTY
17863: LIST
17864: LIST
17865: PUSH
17866: LD_INT 3
17868: PUSH
17869: LD_INT 0
17871: PUSH
17872: EMPTY
17873: LIST
17874: LIST
17875: PUSH
17876: LD_INT 3
17878: PUSH
17879: LD_INT 1
17881: PUSH
17882: EMPTY
17883: LIST
17884: LIST
17885: PUSH
17886: LD_INT 1
17888: PUSH
17889: LD_INT 3
17891: PUSH
17892: EMPTY
17893: LIST
17894: LIST
17895: PUSH
17896: LD_INT 0
17898: PUSH
17899: LD_INT 3
17901: PUSH
17902: EMPTY
17903: LIST
17904: LIST
17905: PUSH
17906: LD_INT 1
17908: NEG
17909: PUSH
17910: LD_INT 2
17912: PUSH
17913: EMPTY
17914: LIST
17915: LIST
17916: PUSH
17917: LD_INT 2
17919: NEG
17920: PUSH
17921: LD_INT 1
17923: PUSH
17924: EMPTY
17925: LIST
17926: LIST
17927: PUSH
17928: LD_INT 3
17930: NEG
17931: PUSH
17932: LD_INT 0
17934: PUSH
17935: EMPTY
17936: LIST
17937: LIST
17938: PUSH
17939: LD_INT 3
17941: NEG
17942: PUSH
17943: LD_INT 1
17945: NEG
17946: PUSH
17947: EMPTY
17948: LIST
17949: LIST
17950: PUSH
17951: EMPTY
17952: LIST
17953: LIST
17954: LIST
17955: LIST
17956: LIST
17957: LIST
17958: LIST
17959: LIST
17960: LIST
17961: LIST
17962: LIST
17963: LIST
17964: LIST
17965: LIST
17966: LIST
17967: LIST
17968: LIST
17969: LIST
17970: LIST
17971: LIST
17972: LIST
17973: LIST
17974: LIST
17975: LIST
17976: LIST
17977: LIST
17978: LIST
17979: LIST
17980: LIST
17981: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17982: LD_ADDR_VAR 0 47
17986: PUSH
17987: LD_INT 0
17989: PUSH
17990: LD_INT 0
17992: PUSH
17993: EMPTY
17994: LIST
17995: LIST
17996: PUSH
17997: LD_INT 0
17999: PUSH
18000: LD_INT 1
18002: NEG
18003: PUSH
18004: EMPTY
18005: LIST
18006: LIST
18007: PUSH
18008: LD_INT 1
18010: PUSH
18011: LD_INT 0
18013: PUSH
18014: EMPTY
18015: LIST
18016: LIST
18017: PUSH
18018: LD_INT 1
18020: PUSH
18021: LD_INT 1
18023: PUSH
18024: EMPTY
18025: LIST
18026: LIST
18027: PUSH
18028: LD_INT 0
18030: PUSH
18031: LD_INT 1
18033: PUSH
18034: EMPTY
18035: LIST
18036: LIST
18037: PUSH
18038: LD_INT 1
18040: NEG
18041: PUSH
18042: LD_INT 0
18044: PUSH
18045: EMPTY
18046: LIST
18047: LIST
18048: PUSH
18049: LD_INT 1
18051: NEG
18052: PUSH
18053: LD_INT 1
18055: NEG
18056: PUSH
18057: EMPTY
18058: LIST
18059: LIST
18060: PUSH
18061: LD_INT 1
18063: NEG
18064: PUSH
18065: LD_INT 2
18067: NEG
18068: PUSH
18069: EMPTY
18070: LIST
18071: LIST
18072: PUSH
18073: LD_INT 0
18075: PUSH
18076: LD_INT 2
18078: NEG
18079: PUSH
18080: EMPTY
18081: LIST
18082: LIST
18083: PUSH
18084: LD_INT 1
18086: PUSH
18087: LD_INT 1
18089: NEG
18090: PUSH
18091: EMPTY
18092: LIST
18093: LIST
18094: PUSH
18095: LD_INT 2
18097: NEG
18098: PUSH
18099: LD_INT 1
18101: NEG
18102: PUSH
18103: EMPTY
18104: LIST
18105: LIST
18106: PUSH
18107: LD_INT 2
18109: NEG
18110: PUSH
18111: LD_INT 2
18113: NEG
18114: PUSH
18115: EMPTY
18116: LIST
18117: LIST
18118: PUSH
18119: EMPTY
18120: LIST
18121: LIST
18122: LIST
18123: LIST
18124: LIST
18125: LIST
18126: LIST
18127: LIST
18128: LIST
18129: LIST
18130: LIST
18131: LIST
18132: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
18133: LD_ADDR_VAR 0 48
18137: PUSH
18138: LD_INT 0
18140: PUSH
18141: LD_INT 0
18143: PUSH
18144: EMPTY
18145: LIST
18146: LIST
18147: PUSH
18148: LD_INT 0
18150: PUSH
18151: LD_INT 1
18153: NEG
18154: PUSH
18155: EMPTY
18156: LIST
18157: LIST
18158: PUSH
18159: LD_INT 1
18161: PUSH
18162: LD_INT 0
18164: PUSH
18165: EMPTY
18166: LIST
18167: LIST
18168: PUSH
18169: LD_INT 1
18171: PUSH
18172: LD_INT 1
18174: PUSH
18175: EMPTY
18176: LIST
18177: LIST
18178: PUSH
18179: LD_INT 0
18181: PUSH
18182: LD_INT 1
18184: PUSH
18185: EMPTY
18186: LIST
18187: LIST
18188: PUSH
18189: LD_INT 1
18191: NEG
18192: PUSH
18193: LD_INT 0
18195: PUSH
18196: EMPTY
18197: LIST
18198: LIST
18199: PUSH
18200: LD_INT 1
18202: NEG
18203: PUSH
18204: LD_INT 1
18206: NEG
18207: PUSH
18208: EMPTY
18209: LIST
18210: LIST
18211: PUSH
18212: LD_INT 1
18214: NEG
18215: PUSH
18216: LD_INT 2
18218: NEG
18219: PUSH
18220: EMPTY
18221: LIST
18222: LIST
18223: PUSH
18224: LD_INT 0
18226: PUSH
18227: LD_INT 2
18229: NEG
18230: PUSH
18231: EMPTY
18232: LIST
18233: LIST
18234: PUSH
18235: LD_INT 1
18237: PUSH
18238: LD_INT 1
18240: NEG
18241: PUSH
18242: EMPTY
18243: LIST
18244: LIST
18245: PUSH
18246: LD_INT 2
18248: PUSH
18249: LD_INT 0
18251: PUSH
18252: EMPTY
18253: LIST
18254: LIST
18255: PUSH
18256: LD_INT 2
18258: PUSH
18259: LD_INT 1
18261: PUSH
18262: EMPTY
18263: LIST
18264: LIST
18265: PUSH
18266: EMPTY
18267: LIST
18268: LIST
18269: LIST
18270: LIST
18271: LIST
18272: LIST
18273: LIST
18274: LIST
18275: LIST
18276: LIST
18277: LIST
18278: LIST
18279: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
18280: LD_ADDR_VAR 0 49
18284: PUSH
18285: LD_INT 0
18287: PUSH
18288: LD_INT 0
18290: PUSH
18291: EMPTY
18292: LIST
18293: LIST
18294: PUSH
18295: LD_INT 0
18297: PUSH
18298: LD_INT 1
18300: NEG
18301: PUSH
18302: EMPTY
18303: LIST
18304: LIST
18305: PUSH
18306: LD_INT 1
18308: PUSH
18309: LD_INT 0
18311: PUSH
18312: EMPTY
18313: LIST
18314: LIST
18315: PUSH
18316: LD_INT 1
18318: PUSH
18319: LD_INT 1
18321: PUSH
18322: EMPTY
18323: LIST
18324: LIST
18325: PUSH
18326: LD_INT 0
18328: PUSH
18329: LD_INT 1
18331: PUSH
18332: EMPTY
18333: LIST
18334: LIST
18335: PUSH
18336: LD_INT 1
18338: NEG
18339: PUSH
18340: LD_INT 0
18342: PUSH
18343: EMPTY
18344: LIST
18345: LIST
18346: PUSH
18347: LD_INT 1
18349: NEG
18350: PUSH
18351: LD_INT 1
18353: NEG
18354: PUSH
18355: EMPTY
18356: LIST
18357: LIST
18358: PUSH
18359: LD_INT 1
18361: PUSH
18362: LD_INT 1
18364: NEG
18365: PUSH
18366: EMPTY
18367: LIST
18368: LIST
18369: PUSH
18370: LD_INT 2
18372: PUSH
18373: LD_INT 0
18375: PUSH
18376: EMPTY
18377: LIST
18378: LIST
18379: PUSH
18380: LD_INT 2
18382: PUSH
18383: LD_INT 1
18385: PUSH
18386: EMPTY
18387: LIST
18388: LIST
18389: PUSH
18390: LD_INT 2
18392: PUSH
18393: LD_INT 2
18395: PUSH
18396: EMPTY
18397: LIST
18398: LIST
18399: PUSH
18400: LD_INT 1
18402: PUSH
18403: LD_INT 2
18405: PUSH
18406: EMPTY
18407: LIST
18408: LIST
18409: PUSH
18410: EMPTY
18411: LIST
18412: LIST
18413: LIST
18414: LIST
18415: LIST
18416: LIST
18417: LIST
18418: LIST
18419: LIST
18420: LIST
18421: LIST
18422: LIST
18423: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
18424: LD_ADDR_VAR 0 50
18428: PUSH
18429: LD_INT 0
18431: PUSH
18432: LD_INT 0
18434: PUSH
18435: EMPTY
18436: LIST
18437: LIST
18438: PUSH
18439: LD_INT 0
18441: PUSH
18442: LD_INT 1
18444: NEG
18445: PUSH
18446: EMPTY
18447: LIST
18448: LIST
18449: PUSH
18450: LD_INT 1
18452: PUSH
18453: LD_INT 0
18455: PUSH
18456: EMPTY
18457: LIST
18458: LIST
18459: PUSH
18460: LD_INT 1
18462: PUSH
18463: LD_INT 1
18465: PUSH
18466: EMPTY
18467: LIST
18468: LIST
18469: PUSH
18470: LD_INT 0
18472: PUSH
18473: LD_INT 1
18475: PUSH
18476: EMPTY
18477: LIST
18478: LIST
18479: PUSH
18480: LD_INT 1
18482: NEG
18483: PUSH
18484: LD_INT 0
18486: PUSH
18487: EMPTY
18488: LIST
18489: LIST
18490: PUSH
18491: LD_INT 1
18493: NEG
18494: PUSH
18495: LD_INT 1
18497: NEG
18498: PUSH
18499: EMPTY
18500: LIST
18501: LIST
18502: PUSH
18503: LD_INT 2
18505: PUSH
18506: LD_INT 1
18508: PUSH
18509: EMPTY
18510: LIST
18511: LIST
18512: PUSH
18513: LD_INT 2
18515: PUSH
18516: LD_INT 2
18518: PUSH
18519: EMPTY
18520: LIST
18521: LIST
18522: PUSH
18523: LD_INT 1
18525: PUSH
18526: LD_INT 2
18528: PUSH
18529: EMPTY
18530: LIST
18531: LIST
18532: PUSH
18533: LD_INT 0
18535: PUSH
18536: LD_INT 2
18538: PUSH
18539: EMPTY
18540: LIST
18541: LIST
18542: PUSH
18543: LD_INT 1
18545: NEG
18546: PUSH
18547: LD_INT 1
18549: PUSH
18550: EMPTY
18551: LIST
18552: LIST
18553: PUSH
18554: EMPTY
18555: LIST
18556: LIST
18557: LIST
18558: LIST
18559: LIST
18560: LIST
18561: LIST
18562: LIST
18563: LIST
18564: LIST
18565: LIST
18566: LIST
18567: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18568: LD_ADDR_VAR 0 51
18572: PUSH
18573: LD_INT 0
18575: PUSH
18576: LD_INT 0
18578: PUSH
18579: EMPTY
18580: LIST
18581: LIST
18582: PUSH
18583: LD_INT 0
18585: PUSH
18586: LD_INT 1
18588: NEG
18589: PUSH
18590: EMPTY
18591: LIST
18592: LIST
18593: PUSH
18594: LD_INT 1
18596: PUSH
18597: LD_INT 0
18599: PUSH
18600: EMPTY
18601: LIST
18602: LIST
18603: PUSH
18604: LD_INT 1
18606: PUSH
18607: LD_INT 1
18609: PUSH
18610: EMPTY
18611: LIST
18612: LIST
18613: PUSH
18614: LD_INT 0
18616: PUSH
18617: LD_INT 1
18619: PUSH
18620: EMPTY
18621: LIST
18622: LIST
18623: PUSH
18624: LD_INT 1
18626: NEG
18627: PUSH
18628: LD_INT 0
18630: PUSH
18631: EMPTY
18632: LIST
18633: LIST
18634: PUSH
18635: LD_INT 1
18637: NEG
18638: PUSH
18639: LD_INT 1
18641: NEG
18642: PUSH
18643: EMPTY
18644: LIST
18645: LIST
18646: PUSH
18647: LD_INT 1
18649: PUSH
18650: LD_INT 2
18652: PUSH
18653: EMPTY
18654: LIST
18655: LIST
18656: PUSH
18657: LD_INT 0
18659: PUSH
18660: LD_INT 2
18662: PUSH
18663: EMPTY
18664: LIST
18665: LIST
18666: PUSH
18667: LD_INT 1
18669: NEG
18670: PUSH
18671: LD_INT 1
18673: PUSH
18674: EMPTY
18675: LIST
18676: LIST
18677: PUSH
18678: LD_INT 2
18680: NEG
18681: PUSH
18682: LD_INT 0
18684: PUSH
18685: EMPTY
18686: LIST
18687: LIST
18688: PUSH
18689: LD_INT 2
18691: NEG
18692: PUSH
18693: LD_INT 1
18695: NEG
18696: PUSH
18697: EMPTY
18698: LIST
18699: LIST
18700: PUSH
18701: EMPTY
18702: LIST
18703: LIST
18704: LIST
18705: LIST
18706: LIST
18707: LIST
18708: LIST
18709: LIST
18710: LIST
18711: LIST
18712: LIST
18713: LIST
18714: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18715: LD_ADDR_VAR 0 52
18719: PUSH
18720: LD_INT 0
18722: PUSH
18723: LD_INT 0
18725: PUSH
18726: EMPTY
18727: LIST
18728: LIST
18729: PUSH
18730: LD_INT 0
18732: PUSH
18733: LD_INT 1
18735: NEG
18736: PUSH
18737: EMPTY
18738: LIST
18739: LIST
18740: PUSH
18741: LD_INT 1
18743: PUSH
18744: LD_INT 0
18746: PUSH
18747: EMPTY
18748: LIST
18749: LIST
18750: PUSH
18751: LD_INT 1
18753: PUSH
18754: LD_INT 1
18756: PUSH
18757: EMPTY
18758: LIST
18759: LIST
18760: PUSH
18761: LD_INT 0
18763: PUSH
18764: LD_INT 1
18766: PUSH
18767: EMPTY
18768: LIST
18769: LIST
18770: PUSH
18771: LD_INT 1
18773: NEG
18774: PUSH
18775: LD_INT 0
18777: PUSH
18778: EMPTY
18779: LIST
18780: LIST
18781: PUSH
18782: LD_INT 1
18784: NEG
18785: PUSH
18786: LD_INT 1
18788: NEG
18789: PUSH
18790: EMPTY
18791: LIST
18792: LIST
18793: PUSH
18794: LD_INT 1
18796: NEG
18797: PUSH
18798: LD_INT 2
18800: NEG
18801: PUSH
18802: EMPTY
18803: LIST
18804: LIST
18805: PUSH
18806: LD_INT 1
18808: NEG
18809: PUSH
18810: LD_INT 1
18812: PUSH
18813: EMPTY
18814: LIST
18815: LIST
18816: PUSH
18817: LD_INT 2
18819: NEG
18820: PUSH
18821: LD_INT 0
18823: PUSH
18824: EMPTY
18825: LIST
18826: LIST
18827: PUSH
18828: LD_INT 2
18830: NEG
18831: PUSH
18832: LD_INT 1
18834: NEG
18835: PUSH
18836: EMPTY
18837: LIST
18838: LIST
18839: PUSH
18840: LD_INT 2
18842: NEG
18843: PUSH
18844: LD_INT 2
18846: NEG
18847: PUSH
18848: EMPTY
18849: LIST
18850: LIST
18851: PUSH
18852: EMPTY
18853: LIST
18854: LIST
18855: LIST
18856: LIST
18857: LIST
18858: LIST
18859: LIST
18860: LIST
18861: LIST
18862: LIST
18863: LIST
18864: LIST
18865: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18866: LD_ADDR_VAR 0 53
18870: PUSH
18871: LD_INT 0
18873: PUSH
18874: LD_INT 0
18876: PUSH
18877: EMPTY
18878: LIST
18879: LIST
18880: PUSH
18881: LD_INT 0
18883: PUSH
18884: LD_INT 1
18886: NEG
18887: PUSH
18888: EMPTY
18889: LIST
18890: LIST
18891: PUSH
18892: LD_INT 1
18894: PUSH
18895: LD_INT 0
18897: PUSH
18898: EMPTY
18899: LIST
18900: LIST
18901: PUSH
18902: LD_INT 1
18904: PUSH
18905: LD_INT 1
18907: PUSH
18908: EMPTY
18909: LIST
18910: LIST
18911: PUSH
18912: LD_INT 0
18914: PUSH
18915: LD_INT 1
18917: PUSH
18918: EMPTY
18919: LIST
18920: LIST
18921: PUSH
18922: LD_INT 1
18924: NEG
18925: PUSH
18926: LD_INT 0
18928: PUSH
18929: EMPTY
18930: LIST
18931: LIST
18932: PUSH
18933: LD_INT 1
18935: NEG
18936: PUSH
18937: LD_INT 1
18939: NEG
18940: PUSH
18941: EMPTY
18942: LIST
18943: LIST
18944: PUSH
18945: LD_INT 1
18947: NEG
18948: PUSH
18949: LD_INT 2
18951: NEG
18952: PUSH
18953: EMPTY
18954: LIST
18955: LIST
18956: PUSH
18957: LD_INT 0
18959: PUSH
18960: LD_INT 2
18962: NEG
18963: PUSH
18964: EMPTY
18965: LIST
18966: LIST
18967: PUSH
18968: LD_INT 1
18970: PUSH
18971: LD_INT 1
18973: NEG
18974: PUSH
18975: EMPTY
18976: LIST
18977: LIST
18978: PUSH
18979: LD_INT 2
18981: PUSH
18982: LD_INT 0
18984: PUSH
18985: EMPTY
18986: LIST
18987: LIST
18988: PUSH
18989: LD_INT 2
18991: PUSH
18992: LD_INT 1
18994: PUSH
18995: EMPTY
18996: LIST
18997: LIST
18998: PUSH
18999: LD_INT 2
19001: PUSH
19002: LD_INT 2
19004: PUSH
19005: EMPTY
19006: LIST
19007: LIST
19008: PUSH
19009: LD_INT 1
19011: PUSH
19012: LD_INT 2
19014: PUSH
19015: EMPTY
19016: LIST
19017: LIST
19018: PUSH
19019: LD_INT 0
19021: PUSH
19022: LD_INT 2
19024: PUSH
19025: EMPTY
19026: LIST
19027: LIST
19028: PUSH
19029: LD_INT 1
19031: NEG
19032: PUSH
19033: LD_INT 1
19035: PUSH
19036: EMPTY
19037: LIST
19038: LIST
19039: PUSH
19040: LD_INT 2
19042: NEG
19043: PUSH
19044: LD_INT 0
19046: PUSH
19047: EMPTY
19048: LIST
19049: LIST
19050: PUSH
19051: LD_INT 2
19053: NEG
19054: PUSH
19055: LD_INT 1
19057: NEG
19058: PUSH
19059: EMPTY
19060: LIST
19061: LIST
19062: PUSH
19063: LD_INT 2
19065: NEG
19066: PUSH
19067: LD_INT 2
19069: NEG
19070: PUSH
19071: EMPTY
19072: LIST
19073: LIST
19074: PUSH
19075: EMPTY
19076: LIST
19077: LIST
19078: LIST
19079: LIST
19080: LIST
19081: LIST
19082: LIST
19083: LIST
19084: LIST
19085: LIST
19086: LIST
19087: LIST
19088: LIST
19089: LIST
19090: LIST
19091: LIST
19092: LIST
19093: LIST
19094: LIST
19095: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19096: LD_ADDR_VAR 0 54
19100: PUSH
19101: LD_INT 0
19103: PUSH
19104: LD_INT 0
19106: PUSH
19107: EMPTY
19108: LIST
19109: LIST
19110: PUSH
19111: LD_INT 0
19113: PUSH
19114: LD_INT 1
19116: NEG
19117: PUSH
19118: EMPTY
19119: LIST
19120: LIST
19121: PUSH
19122: LD_INT 1
19124: PUSH
19125: LD_INT 0
19127: PUSH
19128: EMPTY
19129: LIST
19130: LIST
19131: PUSH
19132: LD_INT 1
19134: PUSH
19135: LD_INT 1
19137: PUSH
19138: EMPTY
19139: LIST
19140: LIST
19141: PUSH
19142: LD_INT 0
19144: PUSH
19145: LD_INT 1
19147: PUSH
19148: EMPTY
19149: LIST
19150: LIST
19151: PUSH
19152: LD_INT 1
19154: NEG
19155: PUSH
19156: LD_INT 0
19158: PUSH
19159: EMPTY
19160: LIST
19161: LIST
19162: PUSH
19163: LD_INT 1
19165: NEG
19166: PUSH
19167: LD_INT 1
19169: NEG
19170: PUSH
19171: EMPTY
19172: LIST
19173: LIST
19174: PUSH
19175: LD_INT 1
19177: NEG
19178: PUSH
19179: LD_INT 2
19181: NEG
19182: PUSH
19183: EMPTY
19184: LIST
19185: LIST
19186: PUSH
19187: LD_INT 0
19189: PUSH
19190: LD_INT 2
19192: NEG
19193: PUSH
19194: EMPTY
19195: LIST
19196: LIST
19197: PUSH
19198: LD_INT 1
19200: PUSH
19201: LD_INT 1
19203: NEG
19204: PUSH
19205: EMPTY
19206: LIST
19207: LIST
19208: PUSH
19209: LD_INT 2
19211: PUSH
19212: LD_INT 0
19214: PUSH
19215: EMPTY
19216: LIST
19217: LIST
19218: PUSH
19219: LD_INT 2
19221: PUSH
19222: LD_INT 1
19224: PUSH
19225: EMPTY
19226: LIST
19227: LIST
19228: PUSH
19229: LD_INT 2
19231: PUSH
19232: LD_INT 2
19234: PUSH
19235: EMPTY
19236: LIST
19237: LIST
19238: PUSH
19239: LD_INT 1
19241: PUSH
19242: LD_INT 2
19244: PUSH
19245: EMPTY
19246: LIST
19247: LIST
19248: PUSH
19249: LD_INT 0
19251: PUSH
19252: LD_INT 2
19254: PUSH
19255: EMPTY
19256: LIST
19257: LIST
19258: PUSH
19259: LD_INT 1
19261: NEG
19262: PUSH
19263: LD_INT 1
19265: PUSH
19266: EMPTY
19267: LIST
19268: LIST
19269: PUSH
19270: LD_INT 2
19272: NEG
19273: PUSH
19274: LD_INT 0
19276: PUSH
19277: EMPTY
19278: LIST
19279: LIST
19280: PUSH
19281: LD_INT 2
19283: NEG
19284: PUSH
19285: LD_INT 1
19287: NEG
19288: PUSH
19289: EMPTY
19290: LIST
19291: LIST
19292: PUSH
19293: LD_INT 2
19295: NEG
19296: PUSH
19297: LD_INT 2
19299: NEG
19300: PUSH
19301: EMPTY
19302: LIST
19303: LIST
19304: PUSH
19305: EMPTY
19306: LIST
19307: LIST
19308: LIST
19309: LIST
19310: LIST
19311: LIST
19312: LIST
19313: LIST
19314: LIST
19315: LIST
19316: LIST
19317: LIST
19318: LIST
19319: LIST
19320: LIST
19321: LIST
19322: LIST
19323: LIST
19324: LIST
19325: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19326: LD_ADDR_VAR 0 55
19330: PUSH
19331: LD_INT 0
19333: PUSH
19334: LD_INT 0
19336: PUSH
19337: EMPTY
19338: LIST
19339: LIST
19340: PUSH
19341: LD_INT 0
19343: PUSH
19344: LD_INT 1
19346: NEG
19347: PUSH
19348: EMPTY
19349: LIST
19350: LIST
19351: PUSH
19352: LD_INT 1
19354: PUSH
19355: LD_INT 0
19357: PUSH
19358: EMPTY
19359: LIST
19360: LIST
19361: PUSH
19362: LD_INT 1
19364: PUSH
19365: LD_INT 1
19367: PUSH
19368: EMPTY
19369: LIST
19370: LIST
19371: PUSH
19372: LD_INT 0
19374: PUSH
19375: LD_INT 1
19377: PUSH
19378: EMPTY
19379: LIST
19380: LIST
19381: PUSH
19382: LD_INT 1
19384: NEG
19385: PUSH
19386: LD_INT 0
19388: PUSH
19389: EMPTY
19390: LIST
19391: LIST
19392: PUSH
19393: LD_INT 1
19395: NEG
19396: PUSH
19397: LD_INT 1
19399: NEG
19400: PUSH
19401: EMPTY
19402: LIST
19403: LIST
19404: PUSH
19405: LD_INT 1
19407: NEG
19408: PUSH
19409: LD_INT 2
19411: NEG
19412: PUSH
19413: EMPTY
19414: LIST
19415: LIST
19416: PUSH
19417: LD_INT 0
19419: PUSH
19420: LD_INT 2
19422: NEG
19423: PUSH
19424: EMPTY
19425: LIST
19426: LIST
19427: PUSH
19428: LD_INT 1
19430: PUSH
19431: LD_INT 1
19433: NEG
19434: PUSH
19435: EMPTY
19436: LIST
19437: LIST
19438: PUSH
19439: LD_INT 2
19441: PUSH
19442: LD_INT 0
19444: PUSH
19445: EMPTY
19446: LIST
19447: LIST
19448: PUSH
19449: LD_INT 2
19451: PUSH
19452: LD_INT 1
19454: PUSH
19455: EMPTY
19456: LIST
19457: LIST
19458: PUSH
19459: LD_INT 2
19461: PUSH
19462: LD_INT 2
19464: PUSH
19465: EMPTY
19466: LIST
19467: LIST
19468: PUSH
19469: LD_INT 1
19471: PUSH
19472: LD_INT 2
19474: PUSH
19475: EMPTY
19476: LIST
19477: LIST
19478: PUSH
19479: LD_INT 0
19481: PUSH
19482: LD_INT 2
19484: PUSH
19485: EMPTY
19486: LIST
19487: LIST
19488: PUSH
19489: LD_INT 1
19491: NEG
19492: PUSH
19493: LD_INT 1
19495: PUSH
19496: EMPTY
19497: LIST
19498: LIST
19499: PUSH
19500: LD_INT 2
19502: NEG
19503: PUSH
19504: LD_INT 0
19506: PUSH
19507: EMPTY
19508: LIST
19509: LIST
19510: PUSH
19511: LD_INT 2
19513: NEG
19514: PUSH
19515: LD_INT 1
19517: NEG
19518: PUSH
19519: EMPTY
19520: LIST
19521: LIST
19522: PUSH
19523: LD_INT 2
19525: NEG
19526: PUSH
19527: LD_INT 2
19529: NEG
19530: PUSH
19531: EMPTY
19532: LIST
19533: LIST
19534: PUSH
19535: EMPTY
19536: LIST
19537: LIST
19538: LIST
19539: LIST
19540: LIST
19541: LIST
19542: LIST
19543: LIST
19544: LIST
19545: LIST
19546: LIST
19547: LIST
19548: LIST
19549: LIST
19550: LIST
19551: LIST
19552: LIST
19553: LIST
19554: LIST
19555: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19556: LD_ADDR_VAR 0 56
19560: PUSH
19561: LD_INT 0
19563: PUSH
19564: LD_INT 0
19566: PUSH
19567: EMPTY
19568: LIST
19569: LIST
19570: PUSH
19571: LD_INT 0
19573: PUSH
19574: LD_INT 1
19576: NEG
19577: PUSH
19578: EMPTY
19579: LIST
19580: LIST
19581: PUSH
19582: LD_INT 1
19584: PUSH
19585: LD_INT 0
19587: PUSH
19588: EMPTY
19589: LIST
19590: LIST
19591: PUSH
19592: LD_INT 1
19594: PUSH
19595: LD_INT 1
19597: PUSH
19598: EMPTY
19599: LIST
19600: LIST
19601: PUSH
19602: LD_INT 0
19604: PUSH
19605: LD_INT 1
19607: PUSH
19608: EMPTY
19609: LIST
19610: LIST
19611: PUSH
19612: LD_INT 1
19614: NEG
19615: PUSH
19616: LD_INT 0
19618: PUSH
19619: EMPTY
19620: LIST
19621: LIST
19622: PUSH
19623: LD_INT 1
19625: NEG
19626: PUSH
19627: LD_INT 1
19629: NEG
19630: PUSH
19631: EMPTY
19632: LIST
19633: LIST
19634: PUSH
19635: LD_INT 1
19637: NEG
19638: PUSH
19639: LD_INT 2
19641: NEG
19642: PUSH
19643: EMPTY
19644: LIST
19645: LIST
19646: PUSH
19647: LD_INT 0
19649: PUSH
19650: LD_INT 2
19652: NEG
19653: PUSH
19654: EMPTY
19655: LIST
19656: LIST
19657: PUSH
19658: LD_INT 1
19660: PUSH
19661: LD_INT 1
19663: NEG
19664: PUSH
19665: EMPTY
19666: LIST
19667: LIST
19668: PUSH
19669: LD_INT 2
19671: PUSH
19672: LD_INT 0
19674: PUSH
19675: EMPTY
19676: LIST
19677: LIST
19678: PUSH
19679: LD_INT 2
19681: PUSH
19682: LD_INT 1
19684: PUSH
19685: EMPTY
19686: LIST
19687: LIST
19688: PUSH
19689: LD_INT 2
19691: PUSH
19692: LD_INT 2
19694: PUSH
19695: EMPTY
19696: LIST
19697: LIST
19698: PUSH
19699: LD_INT 1
19701: PUSH
19702: LD_INT 2
19704: PUSH
19705: EMPTY
19706: LIST
19707: LIST
19708: PUSH
19709: LD_INT 0
19711: PUSH
19712: LD_INT 2
19714: PUSH
19715: EMPTY
19716: LIST
19717: LIST
19718: PUSH
19719: LD_INT 1
19721: NEG
19722: PUSH
19723: LD_INT 1
19725: PUSH
19726: EMPTY
19727: LIST
19728: LIST
19729: PUSH
19730: LD_INT 2
19732: NEG
19733: PUSH
19734: LD_INT 0
19736: PUSH
19737: EMPTY
19738: LIST
19739: LIST
19740: PUSH
19741: LD_INT 2
19743: NEG
19744: PUSH
19745: LD_INT 1
19747: NEG
19748: PUSH
19749: EMPTY
19750: LIST
19751: LIST
19752: PUSH
19753: LD_INT 2
19755: NEG
19756: PUSH
19757: LD_INT 2
19759: NEG
19760: PUSH
19761: EMPTY
19762: LIST
19763: LIST
19764: PUSH
19765: EMPTY
19766: LIST
19767: LIST
19768: LIST
19769: LIST
19770: LIST
19771: LIST
19772: LIST
19773: LIST
19774: LIST
19775: LIST
19776: LIST
19777: LIST
19778: LIST
19779: LIST
19780: LIST
19781: LIST
19782: LIST
19783: LIST
19784: LIST
19785: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19786: LD_ADDR_VAR 0 57
19790: PUSH
19791: LD_INT 0
19793: PUSH
19794: LD_INT 0
19796: PUSH
19797: EMPTY
19798: LIST
19799: LIST
19800: PUSH
19801: LD_INT 0
19803: PUSH
19804: LD_INT 1
19806: NEG
19807: PUSH
19808: EMPTY
19809: LIST
19810: LIST
19811: PUSH
19812: LD_INT 1
19814: PUSH
19815: LD_INT 0
19817: PUSH
19818: EMPTY
19819: LIST
19820: LIST
19821: PUSH
19822: LD_INT 1
19824: PUSH
19825: LD_INT 1
19827: PUSH
19828: EMPTY
19829: LIST
19830: LIST
19831: PUSH
19832: LD_INT 0
19834: PUSH
19835: LD_INT 1
19837: PUSH
19838: EMPTY
19839: LIST
19840: LIST
19841: PUSH
19842: LD_INT 1
19844: NEG
19845: PUSH
19846: LD_INT 0
19848: PUSH
19849: EMPTY
19850: LIST
19851: LIST
19852: PUSH
19853: LD_INT 1
19855: NEG
19856: PUSH
19857: LD_INT 1
19859: NEG
19860: PUSH
19861: EMPTY
19862: LIST
19863: LIST
19864: PUSH
19865: LD_INT 1
19867: NEG
19868: PUSH
19869: LD_INT 2
19871: NEG
19872: PUSH
19873: EMPTY
19874: LIST
19875: LIST
19876: PUSH
19877: LD_INT 0
19879: PUSH
19880: LD_INT 2
19882: NEG
19883: PUSH
19884: EMPTY
19885: LIST
19886: LIST
19887: PUSH
19888: LD_INT 1
19890: PUSH
19891: LD_INT 1
19893: NEG
19894: PUSH
19895: EMPTY
19896: LIST
19897: LIST
19898: PUSH
19899: LD_INT 2
19901: PUSH
19902: LD_INT 0
19904: PUSH
19905: EMPTY
19906: LIST
19907: LIST
19908: PUSH
19909: LD_INT 2
19911: PUSH
19912: LD_INT 1
19914: PUSH
19915: EMPTY
19916: LIST
19917: LIST
19918: PUSH
19919: LD_INT 2
19921: PUSH
19922: LD_INT 2
19924: PUSH
19925: EMPTY
19926: LIST
19927: LIST
19928: PUSH
19929: LD_INT 1
19931: PUSH
19932: LD_INT 2
19934: PUSH
19935: EMPTY
19936: LIST
19937: LIST
19938: PUSH
19939: LD_INT 0
19941: PUSH
19942: LD_INT 2
19944: PUSH
19945: EMPTY
19946: LIST
19947: LIST
19948: PUSH
19949: LD_INT 1
19951: NEG
19952: PUSH
19953: LD_INT 1
19955: PUSH
19956: EMPTY
19957: LIST
19958: LIST
19959: PUSH
19960: LD_INT 2
19962: NEG
19963: PUSH
19964: LD_INT 0
19966: PUSH
19967: EMPTY
19968: LIST
19969: LIST
19970: PUSH
19971: LD_INT 2
19973: NEG
19974: PUSH
19975: LD_INT 1
19977: NEG
19978: PUSH
19979: EMPTY
19980: LIST
19981: LIST
19982: PUSH
19983: LD_INT 2
19985: NEG
19986: PUSH
19987: LD_INT 2
19989: NEG
19990: PUSH
19991: EMPTY
19992: LIST
19993: LIST
19994: PUSH
19995: EMPTY
19996: LIST
19997: LIST
19998: LIST
19999: LIST
20000: LIST
20001: LIST
20002: LIST
20003: LIST
20004: LIST
20005: LIST
20006: LIST
20007: LIST
20008: LIST
20009: LIST
20010: LIST
20011: LIST
20012: LIST
20013: LIST
20014: LIST
20015: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
20016: LD_ADDR_VAR 0 58
20020: PUSH
20021: LD_INT 0
20023: PUSH
20024: LD_INT 0
20026: PUSH
20027: EMPTY
20028: LIST
20029: LIST
20030: PUSH
20031: LD_INT 0
20033: PUSH
20034: LD_INT 1
20036: NEG
20037: PUSH
20038: EMPTY
20039: LIST
20040: LIST
20041: PUSH
20042: LD_INT 1
20044: PUSH
20045: LD_INT 0
20047: PUSH
20048: EMPTY
20049: LIST
20050: LIST
20051: PUSH
20052: LD_INT 1
20054: PUSH
20055: LD_INT 1
20057: PUSH
20058: EMPTY
20059: LIST
20060: LIST
20061: PUSH
20062: LD_INT 0
20064: PUSH
20065: LD_INT 1
20067: PUSH
20068: EMPTY
20069: LIST
20070: LIST
20071: PUSH
20072: LD_INT 1
20074: NEG
20075: PUSH
20076: LD_INT 0
20078: PUSH
20079: EMPTY
20080: LIST
20081: LIST
20082: PUSH
20083: LD_INT 1
20085: NEG
20086: PUSH
20087: LD_INT 1
20089: NEG
20090: PUSH
20091: EMPTY
20092: LIST
20093: LIST
20094: PUSH
20095: LD_INT 1
20097: NEG
20098: PUSH
20099: LD_INT 2
20101: NEG
20102: PUSH
20103: EMPTY
20104: LIST
20105: LIST
20106: PUSH
20107: LD_INT 0
20109: PUSH
20110: LD_INT 2
20112: NEG
20113: PUSH
20114: EMPTY
20115: LIST
20116: LIST
20117: PUSH
20118: LD_INT 1
20120: PUSH
20121: LD_INT 1
20123: NEG
20124: PUSH
20125: EMPTY
20126: LIST
20127: LIST
20128: PUSH
20129: LD_INT 2
20131: PUSH
20132: LD_INT 0
20134: PUSH
20135: EMPTY
20136: LIST
20137: LIST
20138: PUSH
20139: LD_INT 2
20141: PUSH
20142: LD_INT 1
20144: PUSH
20145: EMPTY
20146: LIST
20147: LIST
20148: PUSH
20149: LD_INT 2
20151: PUSH
20152: LD_INT 2
20154: PUSH
20155: EMPTY
20156: LIST
20157: LIST
20158: PUSH
20159: LD_INT 1
20161: PUSH
20162: LD_INT 2
20164: PUSH
20165: EMPTY
20166: LIST
20167: LIST
20168: PUSH
20169: LD_INT 0
20171: PUSH
20172: LD_INT 2
20174: PUSH
20175: EMPTY
20176: LIST
20177: LIST
20178: PUSH
20179: LD_INT 1
20181: NEG
20182: PUSH
20183: LD_INT 1
20185: PUSH
20186: EMPTY
20187: LIST
20188: LIST
20189: PUSH
20190: LD_INT 2
20192: NEG
20193: PUSH
20194: LD_INT 0
20196: PUSH
20197: EMPTY
20198: LIST
20199: LIST
20200: PUSH
20201: LD_INT 2
20203: NEG
20204: PUSH
20205: LD_INT 1
20207: NEG
20208: PUSH
20209: EMPTY
20210: LIST
20211: LIST
20212: PUSH
20213: LD_INT 2
20215: NEG
20216: PUSH
20217: LD_INT 2
20219: NEG
20220: PUSH
20221: EMPTY
20222: LIST
20223: LIST
20224: PUSH
20225: EMPTY
20226: LIST
20227: LIST
20228: LIST
20229: LIST
20230: LIST
20231: LIST
20232: LIST
20233: LIST
20234: LIST
20235: LIST
20236: LIST
20237: LIST
20238: LIST
20239: LIST
20240: LIST
20241: LIST
20242: LIST
20243: LIST
20244: LIST
20245: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20246: LD_ADDR_VAR 0 59
20250: PUSH
20251: LD_INT 0
20253: PUSH
20254: LD_INT 0
20256: PUSH
20257: EMPTY
20258: LIST
20259: LIST
20260: PUSH
20261: LD_INT 0
20263: PUSH
20264: LD_INT 1
20266: NEG
20267: PUSH
20268: EMPTY
20269: LIST
20270: LIST
20271: PUSH
20272: LD_INT 1
20274: PUSH
20275: LD_INT 0
20277: PUSH
20278: EMPTY
20279: LIST
20280: LIST
20281: PUSH
20282: LD_INT 1
20284: PUSH
20285: LD_INT 1
20287: PUSH
20288: EMPTY
20289: LIST
20290: LIST
20291: PUSH
20292: LD_INT 0
20294: PUSH
20295: LD_INT 1
20297: PUSH
20298: EMPTY
20299: LIST
20300: LIST
20301: PUSH
20302: LD_INT 1
20304: NEG
20305: PUSH
20306: LD_INT 0
20308: PUSH
20309: EMPTY
20310: LIST
20311: LIST
20312: PUSH
20313: LD_INT 1
20315: NEG
20316: PUSH
20317: LD_INT 1
20319: NEG
20320: PUSH
20321: EMPTY
20322: LIST
20323: LIST
20324: PUSH
20325: EMPTY
20326: LIST
20327: LIST
20328: LIST
20329: LIST
20330: LIST
20331: LIST
20332: LIST
20333: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20334: LD_ADDR_VAR 0 60
20338: PUSH
20339: LD_INT 0
20341: PUSH
20342: LD_INT 0
20344: PUSH
20345: EMPTY
20346: LIST
20347: LIST
20348: PUSH
20349: LD_INT 0
20351: PUSH
20352: LD_INT 1
20354: NEG
20355: PUSH
20356: EMPTY
20357: LIST
20358: LIST
20359: PUSH
20360: LD_INT 1
20362: PUSH
20363: LD_INT 0
20365: PUSH
20366: EMPTY
20367: LIST
20368: LIST
20369: PUSH
20370: LD_INT 1
20372: PUSH
20373: LD_INT 1
20375: PUSH
20376: EMPTY
20377: LIST
20378: LIST
20379: PUSH
20380: LD_INT 0
20382: PUSH
20383: LD_INT 1
20385: PUSH
20386: EMPTY
20387: LIST
20388: LIST
20389: PUSH
20390: LD_INT 1
20392: NEG
20393: PUSH
20394: LD_INT 0
20396: PUSH
20397: EMPTY
20398: LIST
20399: LIST
20400: PUSH
20401: LD_INT 1
20403: NEG
20404: PUSH
20405: LD_INT 1
20407: NEG
20408: PUSH
20409: EMPTY
20410: LIST
20411: LIST
20412: PUSH
20413: EMPTY
20414: LIST
20415: LIST
20416: LIST
20417: LIST
20418: LIST
20419: LIST
20420: LIST
20421: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20422: LD_ADDR_VAR 0 61
20426: PUSH
20427: LD_INT 0
20429: PUSH
20430: LD_INT 0
20432: PUSH
20433: EMPTY
20434: LIST
20435: LIST
20436: PUSH
20437: LD_INT 0
20439: PUSH
20440: LD_INT 1
20442: NEG
20443: PUSH
20444: EMPTY
20445: LIST
20446: LIST
20447: PUSH
20448: LD_INT 1
20450: PUSH
20451: LD_INT 0
20453: PUSH
20454: EMPTY
20455: LIST
20456: LIST
20457: PUSH
20458: LD_INT 1
20460: PUSH
20461: LD_INT 1
20463: PUSH
20464: EMPTY
20465: LIST
20466: LIST
20467: PUSH
20468: LD_INT 0
20470: PUSH
20471: LD_INT 1
20473: PUSH
20474: EMPTY
20475: LIST
20476: LIST
20477: PUSH
20478: LD_INT 1
20480: NEG
20481: PUSH
20482: LD_INT 0
20484: PUSH
20485: EMPTY
20486: LIST
20487: LIST
20488: PUSH
20489: LD_INT 1
20491: NEG
20492: PUSH
20493: LD_INT 1
20495: NEG
20496: PUSH
20497: EMPTY
20498: LIST
20499: LIST
20500: PUSH
20501: EMPTY
20502: LIST
20503: LIST
20504: LIST
20505: LIST
20506: LIST
20507: LIST
20508: LIST
20509: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20510: LD_ADDR_VAR 0 62
20514: PUSH
20515: LD_INT 0
20517: PUSH
20518: LD_INT 0
20520: PUSH
20521: EMPTY
20522: LIST
20523: LIST
20524: PUSH
20525: LD_INT 0
20527: PUSH
20528: LD_INT 1
20530: NEG
20531: PUSH
20532: EMPTY
20533: LIST
20534: LIST
20535: PUSH
20536: LD_INT 1
20538: PUSH
20539: LD_INT 0
20541: PUSH
20542: EMPTY
20543: LIST
20544: LIST
20545: PUSH
20546: LD_INT 1
20548: PUSH
20549: LD_INT 1
20551: PUSH
20552: EMPTY
20553: LIST
20554: LIST
20555: PUSH
20556: LD_INT 0
20558: PUSH
20559: LD_INT 1
20561: PUSH
20562: EMPTY
20563: LIST
20564: LIST
20565: PUSH
20566: LD_INT 1
20568: NEG
20569: PUSH
20570: LD_INT 0
20572: PUSH
20573: EMPTY
20574: LIST
20575: LIST
20576: PUSH
20577: LD_INT 1
20579: NEG
20580: PUSH
20581: LD_INT 1
20583: NEG
20584: PUSH
20585: EMPTY
20586: LIST
20587: LIST
20588: PUSH
20589: EMPTY
20590: LIST
20591: LIST
20592: LIST
20593: LIST
20594: LIST
20595: LIST
20596: LIST
20597: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20598: LD_ADDR_VAR 0 63
20602: PUSH
20603: LD_INT 0
20605: PUSH
20606: LD_INT 0
20608: PUSH
20609: EMPTY
20610: LIST
20611: LIST
20612: PUSH
20613: LD_INT 0
20615: PUSH
20616: LD_INT 1
20618: NEG
20619: PUSH
20620: EMPTY
20621: LIST
20622: LIST
20623: PUSH
20624: LD_INT 1
20626: PUSH
20627: LD_INT 0
20629: PUSH
20630: EMPTY
20631: LIST
20632: LIST
20633: PUSH
20634: LD_INT 1
20636: PUSH
20637: LD_INT 1
20639: PUSH
20640: EMPTY
20641: LIST
20642: LIST
20643: PUSH
20644: LD_INT 0
20646: PUSH
20647: LD_INT 1
20649: PUSH
20650: EMPTY
20651: LIST
20652: LIST
20653: PUSH
20654: LD_INT 1
20656: NEG
20657: PUSH
20658: LD_INT 0
20660: PUSH
20661: EMPTY
20662: LIST
20663: LIST
20664: PUSH
20665: LD_INT 1
20667: NEG
20668: PUSH
20669: LD_INT 1
20671: NEG
20672: PUSH
20673: EMPTY
20674: LIST
20675: LIST
20676: PUSH
20677: EMPTY
20678: LIST
20679: LIST
20680: LIST
20681: LIST
20682: LIST
20683: LIST
20684: LIST
20685: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20686: LD_ADDR_VAR 0 64
20690: PUSH
20691: LD_INT 0
20693: PUSH
20694: LD_INT 0
20696: PUSH
20697: EMPTY
20698: LIST
20699: LIST
20700: PUSH
20701: LD_INT 0
20703: PUSH
20704: LD_INT 1
20706: NEG
20707: PUSH
20708: EMPTY
20709: LIST
20710: LIST
20711: PUSH
20712: LD_INT 1
20714: PUSH
20715: LD_INT 0
20717: PUSH
20718: EMPTY
20719: LIST
20720: LIST
20721: PUSH
20722: LD_INT 1
20724: PUSH
20725: LD_INT 1
20727: PUSH
20728: EMPTY
20729: LIST
20730: LIST
20731: PUSH
20732: LD_INT 0
20734: PUSH
20735: LD_INT 1
20737: PUSH
20738: EMPTY
20739: LIST
20740: LIST
20741: PUSH
20742: LD_INT 1
20744: NEG
20745: PUSH
20746: LD_INT 0
20748: PUSH
20749: EMPTY
20750: LIST
20751: LIST
20752: PUSH
20753: LD_INT 1
20755: NEG
20756: PUSH
20757: LD_INT 1
20759: NEG
20760: PUSH
20761: EMPTY
20762: LIST
20763: LIST
20764: PUSH
20765: EMPTY
20766: LIST
20767: LIST
20768: LIST
20769: LIST
20770: LIST
20771: LIST
20772: LIST
20773: ST_TO_ADDR
// end ; 1 :
20774: GO 26671
20776: LD_INT 1
20778: DOUBLE
20779: EQUAL
20780: IFTRUE 20784
20782: GO 23407
20784: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20785: LD_ADDR_VAR 0 11
20789: PUSH
20790: LD_INT 1
20792: NEG
20793: PUSH
20794: LD_INT 3
20796: NEG
20797: PUSH
20798: EMPTY
20799: LIST
20800: LIST
20801: PUSH
20802: LD_INT 0
20804: PUSH
20805: LD_INT 3
20807: NEG
20808: PUSH
20809: EMPTY
20810: LIST
20811: LIST
20812: PUSH
20813: LD_INT 1
20815: PUSH
20816: LD_INT 2
20818: NEG
20819: PUSH
20820: EMPTY
20821: LIST
20822: LIST
20823: PUSH
20824: EMPTY
20825: LIST
20826: LIST
20827: LIST
20828: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20829: LD_ADDR_VAR 0 12
20833: PUSH
20834: LD_INT 2
20836: PUSH
20837: LD_INT 1
20839: NEG
20840: PUSH
20841: EMPTY
20842: LIST
20843: LIST
20844: PUSH
20845: LD_INT 3
20847: PUSH
20848: LD_INT 0
20850: PUSH
20851: EMPTY
20852: LIST
20853: LIST
20854: PUSH
20855: LD_INT 3
20857: PUSH
20858: LD_INT 1
20860: PUSH
20861: EMPTY
20862: LIST
20863: LIST
20864: PUSH
20865: EMPTY
20866: LIST
20867: LIST
20868: LIST
20869: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20870: LD_ADDR_VAR 0 13
20874: PUSH
20875: LD_INT 3
20877: PUSH
20878: LD_INT 2
20880: PUSH
20881: EMPTY
20882: LIST
20883: LIST
20884: PUSH
20885: LD_INT 3
20887: PUSH
20888: LD_INT 3
20890: PUSH
20891: EMPTY
20892: LIST
20893: LIST
20894: PUSH
20895: LD_INT 2
20897: PUSH
20898: LD_INT 3
20900: PUSH
20901: EMPTY
20902: LIST
20903: LIST
20904: PUSH
20905: EMPTY
20906: LIST
20907: LIST
20908: LIST
20909: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20910: LD_ADDR_VAR 0 14
20914: PUSH
20915: LD_INT 1
20917: PUSH
20918: LD_INT 3
20920: PUSH
20921: EMPTY
20922: LIST
20923: LIST
20924: PUSH
20925: LD_INT 0
20927: PUSH
20928: LD_INT 3
20930: PUSH
20931: EMPTY
20932: LIST
20933: LIST
20934: PUSH
20935: LD_INT 1
20937: NEG
20938: PUSH
20939: LD_INT 2
20941: PUSH
20942: EMPTY
20943: LIST
20944: LIST
20945: PUSH
20946: EMPTY
20947: LIST
20948: LIST
20949: LIST
20950: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20951: LD_ADDR_VAR 0 15
20955: PUSH
20956: LD_INT 2
20958: NEG
20959: PUSH
20960: LD_INT 1
20962: PUSH
20963: EMPTY
20964: LIST
20965: LIST
20966: PUSH
20967: LD_INT 3
20969: NEG
20970: PUSH
20971: LD_INT 0
20973: PUSH
20974: EMPTY
20975: LIST
20976: LIST
20977: PUSH
20978: LD_INT 3
20980: NEG
20981: PUSH
20982: LD_INT 1
20984: NEG
20985: PUSH
20986: EMPTY
20987: LIST
20988: LIST
20989: PUSH
20990: EMPTY
20991: LIST
20992: LIST
20993: LIST
20994: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20995: LD_ADDR_VAR 0 16
20999: PUSH
21000: LD_INT 2
21002: NEG
21003: PUSH
21004: LD_INT 3
21006: NEG
21007: PUSH
21008: EMPTY
21009: LIST
21010: LIST
21011: PUSH
21012: LD_INT 3
21014: NEG
21015: PUSH
21016: LD_INT 2
21018: NEG
21019: PUSH
21020: EMPTY
21021: LIST
21022: LIST
21023: PUSH
21024: LD_INT 3
21026: NEG
21027: PUSH
21028: LD_INT 3
21030: NEG
21031: PUSH
21032: EMPTY
21033: LIST
21034: LIST
21035: PUSH
21036: EMPTY
21037: LIST
21038: LIST
21039: LIST
21040: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
21041: LD_ADDR_VAR 0 17
21045: PUSH
21046: LD_INT 1
21048: NEG
21049: PUSH
21050: LD_INT 3
21052: NEG
21053: PUSH
21054: EMPTY
21055: LIST
21056: LIST
21057: PUSH
21058: LD_INT 0
21060: PUSH
21061: LD_INT 3
21063: NEG
21064: PUSH
21065: EMPTY
21066: LIST
21067: LIST
21068: PUSH
21069: LD_INT 1
21071: PUSH
21072: LD_INT 2
21074: NEG
21075: PUSH
21076: EMPTY
21077: LIST
21078: LIST
21079: PUSH
21080: EMPTY
21081: LIST
21082: LIST
21083: LIST
21084: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
21085: LD_ADDR_VAR 0 18
21089: PUSH
21090: LD_INT 2
21092: PUSH
21093: LD_INT 1
21095: NEG
21096: PUSH
21097: EMPTY
21098: LIST
21099: LIST
21100: PUSH
21101: LD_INT 3
21103: PUSH
21104: LD_INT 0
21106: PUSH
21107: EMPTY
21108: LIST
21109: LIST
21110: PUSH
21111: LD_INT 3
21113: PUSH
21114: LD_INT 1
21116: PUSH
21117: EMPTY
21118: LIST
21119: LIST
21120: PUSH
21121: EMPTY
21122: LIST
21123: LIST
21124: LIST
21125: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
21126: LD_ADDR_VAR 0 19
21130: PUSH
21131: LD_INT 3
21133: PUSH
21134: LD_INT 2
21136: PUSH
21137: EMPTY
21138: LIST
21139: LIST
21140: PUSH
21141: LD_INT 3
21143: PUSH
21144: LD_INT 3
21146: PUSH
21147: EMPTY
21148: LIST
21149: LIST
21150: PUSH
21151: LD_INT 2
21153: PUSH
21154: LD_INT 3
21156: PUSH
21157: EMPTY
21158: LIST
21159: LIST
21160: PUSH
21161: EMPTY
21162: LIST
21163: LIST
21164: LIST
21165: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
21166: LD_ADDR_VAR 0 20
21170: PUSH
21171: LD_INT 1
21173: PUSH
21174: LD_INT 3
21176: PUSH
21177: EMPTY
21178: LIST
21179: LIST
21180: PUSH
21181: LD_INT 0
21183: PUSH
21184: LD_INT 3
21186: PUSH
21187: EMPTY
21188: LIST
21189: LIST
21190: PUSH
21191: LD_INT 1
21193: NEG
21194: PUSH
21195: LD_INT 2
21197: PUSH
21198: EMPTY
21199: LIST
21200: LIST
21201: PUSH
21202: EMPTY
21203: LIST
21204: LIST
21205: LIST
21206: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
21207: LD_ADDR_VAR 0 21
21211: PUSH
21212: LD_INT 2
21214: NEG
21215: PUSH
21216: LD_INT 1
21218: PUSH
21219: EMPTY
21220: LIST
21221: LIST
21222: PUSH
21223: LD_INT 3
21225: NEG
21226: PUSH
21227: LD_INT 0
21229: PUSH
21230: EMPTY
21231: LIST
21232: LIST
21233: PUSH
21234: LD_INT 3
21236: NEG
21237: PUSH
21238: LD_INT 1
21240: NEG
21241: PUSH
21242: EMPTY
21243: LIST
21244: LIST
21245: PUSH
21246: EMPTY
21247: LIST
21248: LIST
21249: LIST
21250: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
21251: LD_ADDR_VAR 0 22
21255: PUSH
21256: LD_INT 2
21258: NEG
21259: PUSH
21260: LD_INT 3
21262: NEG
21263: PUSH
21264: EMPTY
21265: LIST
21266: LIST
21267: PUSH
21268: LD_INT 3
21270: NEG
21271: PUSH
21272: LD_INT 2
21274: NEG
21275: PUSH
21276: EMPTY
21277: LIST
21278: LIST
21279: PUSH
21280: LD_INT 3
21282: NEG
21283: PUSH
21284: LD_INT 3
21286: NEG
21287: PUSH
21288: EMPTY
21289: LIST
21290: LIST
21291: PUSH
21292: EMPTY
21293: LIST
21294: LIST
21295: LIST
21296: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
21297: LD_ADDR_VAR 0 23
21301: PUSH
21302: LD_INT 0
21304: PUSH
21305: LD_INT 3
21307: NEG
21308: PUSH
21309: EMPTY
21310: LIST
21311: LIST
21312: PUSH
21313: LD_INT 1
21315: NEG
21316: PUSH
21317: LD_INT 4
21319: NEG
21320: PUSH
21321: EMPTY
21322: LIST
21323: LIST
21324: PUSH
21325: LD_INT 1
21327: PUSH
21328: LD_INT 3
21330: NEG
21331: PUSH
21332: EMPTY
21333: LIST
21334: LIST
21335: PUSH
21336: EMPTY
21337: LIST
21338: LIST
21339: LIST
21340: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
21341: LD_ADDR_VAR 0 24
21345: PUSH
21346: LD_INT 3
21348: PUSH
21349: LD_INT 0
21351: PUSH
21352: EMPTY
21353: LIST
21354: LIST
21355: PUSH
21356: LD_INT 3
21358: PUSH
21359: LD_INT 1
21361: NEG
21362: PUSH
21363: EMPTY
21364: LIST
21365: LIST
21366: PUSH
21367: LD_INT 4
21369: PUSH
21370: LD_INT 1
21372: PUSH
21373: EMPTY
21374: LIST
21375: LIST
21376: PUSH
21377: EMPTY
21378: LIST
21379: LIST
21380: LIST
21381: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
21382: LD_ADDR_VAR 0 25
21386: PUSH
21387: LD_INT 3
21389: PUSH
21390: LD_INT 3
21392: PUSH
21393: EMPTY
21394: LIST
21395: LIST
21396: PUSH
21397: LD_INT 4
21399: PUSH
21400: LD_INT 3
21402: PUSH
21403: EMPTY
21404: LIST
21405: LIST
21406: PUSH
21407: LD_INT 3
21409: PUSH
21410: LD_INT 4
21412: PUSH
21413: EMPTY
21414: LIST
21415: LIST
21416: PUSH
21417: EMPTY
21418: LIST
21419: LIST
21420: LIST
21421: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
21422: LD_ADDR_VAR 0 26
21426: PUSH
21427: LD_INT 0
21429: PUSH
21430: LD_INT 3
21432: PUSH
21433: EMPTY
21434: LIST
21435: LIST
21436: PUSH
21437: LD_INT 1
21439: PUSH
21440: LD_INT 4
21442: PUSH
21443: EMPTY
21444: LIST
21445: LIST
21446: PUSH
21447: LD_INT 1
21449: NEG
21450: PUSH
21451: LD_INT 3
21453: PUSH
21454: EMPTY
21455: LIST
21456: LIST
21457: PUSH
21458: EMPTY
21459: LIST
21460: LIST
21461: LIST
21462: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21463: LD_ADDR_VAR 0 27
21467: PUSH
21468: LD_INT 3
21470: NEG
21471: PUSH
21472: LD_INT 0
21474: PUSH
21475: EMPTY
21476: LIST
21477: LIST
21478: PUSH
21479: LD_INT 3
21481: NEG
21482: PUSH
21483: LD_INT 1
21485: PUSH
21486: EMPTY
21487: LIST
21488: LIST
21489: PUSH
21490: LD_INT 4
21492: NEG
21493: PUSH
21494: LD_INT 1
21496: NEG
21497: PUSH
21498: EMPTY
21499: LIST
21500: LIST
21501: PUSH
21502: EMPTY
21503: LIST
21504: LIST
21505: LIST
21506: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21507: LD_ADDR_VAR 0 28
21511: PUSH
21512: LD_INT 3
21514: NEG
21515: PUSH
21516: LD_INT 3
21518: NEG
21519: PUSH
21520: EMPTY
21521: LIST
21522: LIST
21523: PUSH
21524: LD_INT 3
21526: NEG
21527: PUSH
21528: LD_INT 4
21530: NEG
21531: PUSH
21532: EMPTY
21533: LIST
21534: LIST
21535: PUSH
21536: LD_INT 4
21538: NEG
21539: PUSH
21540: LD_INT 3
21542: NEG
21543: PUSH
21544: EMPTY
21545: LIST
21546: LIST
21547: PUSH
21548: EMPTY
21549: LIST
21550: LIST
21551: LIST
21552: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21553: LD_ADDR_VAR 0 29
21557: PUSH
21558: LD_INT 1
21560: NEG
21561: PUSH
21562: LD_INT 3
21564: NEG
21565: PUSH
21566: EMPTY
21567: LIST
21568: LIST
21569: PUSH
21570: LD_INT 0
21572: PUSH
21573: LD_INT 3
21575: NEG
21576: PUSH
21577: EMPTY
21578: LIST
21579: LIST
21580: PUSH
21581: LD_INT 1
21583: PUSH
21584: LD_INT 2
21586: NEG
21587: PUSH
21588: EMPTY
21589: LIST
21590: LIST
21591: PUSH
21592: LD_INT 1
21594: NEG
21595: PUSH
21596: LD_INT 4
21598: NEG
21599: PUSH
21600: EMPTY
21601: LIST
21602: LIST
21603: PUSH
21604: LD_INT 0
21606: PUSH
21607: LD_INT 4
21609: NEG
21610: PUSH
21611: EMPTY
21612: LIST
21613: LIST
21614: PUSH
21615: LD_INT 1
21617: PUSH
21618: LD_INT 3
21620: NEG
21621: PUSH
21622: EMPTY
21623: LIST
21624: LIST
21625: PUSH
21626: LD_INT 1
21628: NEG
21629: PUSH
21630: LD_INT 5
21632: NEG
21633: PUSH
21634: EMPTY
21635: LIST
21636: LIST
21637: PUSH
21638: LD_INT 0
21640: PUSH
21641: LD_INT 5
21643: NEG
21644: PUSH
21645: EMPTY
21646: LIST
21647: LIST
21648: PUSH
21649: LD_INT 1
21651: PUSH
21652: LD_INT 4
21654: NEG
21655: PUSH
21656: EMPTY
21657: LIST
21658: LIST
21659: PUSH
21660: LD_INT 1
21662: NEG
21663: PUSH
21664: LD_INT 6
21666: NEG
21667: PUSH
21668: EMPTY
21669: LIST
21670: LIST
21671: PUSH
21672: LD_INT 0
21674: PUSH
21675: LD_INT 6
21677: NEG
21678: PUSH
21679: EMPTY
21680: LIST
21681: LIST
21682: PUSH
21683: LD_INT 1
21685: PUSH
21686: LD_INT 5
21688: NEG
21689: PUSH
21690: EMPTY
21691: LIST
21692: LIST
21693: PUSH
21694: EMPTY
21695: LIST
21696: LIST
21697: LIST
21698: LIST
21699: LIST
21700: LIST
21701: LIST
21702: LIST
21703: LIST
21704: LIST
21705: LIST
21706: LIST
21707: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21708: LD_ADDR_VAR 0 30
21712: PUSH
21713: LD_INT 2
21715: PUSH
21716: LD_INT 1
21718: NEG
21719: PUSH
21720: EMPTY
21721: LIST
21722: LIST
21723: PUSH
21724: LD_INT 3
21726: PUSH
21727: LD_INT 0
21729: PUSH
21730: EMPTY
21731: LIST
21732: LIST
21733: PUSH
21734: LD_INT 3
21736: PUSH
21737: LD_INT 1
21739: PUSH
21740: EMPTY
21741: LIST
21742: LIST
21743: PUSH
21744: LD_INT 3
21746: PUSH
21747: LD_INT 1
21749: NEG
21750: PUSH
21751: EMPTY
21752: LIST
21753: LIST
21754: PUSH
21755: LD_INT 4
21757: PUSH
21758: LD_INT 0
21760: PUSH
21761: EMPTY
21762: LIST
21763: LIST
21764: PUSH
21765: LD_INT 4
21767: PUSH
21768: LD_INT 1
21770: PUSH
21771: EMPTY
21772: LIST
21773: LIST
21774: PUSH
21775: LD_INT 4
21777: PUSH
21778: LD_INT 1
21780: NEG
21781: PUSH
21782: EMPTY
21783: LIST
21784: LIST
21785: PUSH
21786: LD_INT 5
21788: PUSH
21789: LD_INT 0
21791: PUSH
21792: EMPTY
21793: LIST
21794: LIST
21795: PUSH
21796: LD_INT 5
21798: PUSH
21799: LD_INT 1
21801: PUSH
21802: EMPTY
21803: LIST
21804: LIST
21805: PUSH
21806: LD_INT 5
21808: PUSH
21809: LD_INT 1
21811: NEG
21812: PUSH
21813: EMPTY
21814: LIST
21815: LIST
21816: PUSH
21817: LD_INT 6
21819: PUSH
21820: LD_INT 0
21822: PUSH
21823: EMPTY
21824: LIST
21825: LIST
21826: PUSH
21827: LD_INT 6
21829: PUSH
21830: LD_INT 1
21832: PUSH
21833: EMPTY
21834: LIST
21835: LIST
21836: PUSH
21837: EMPTY
21838: LIST
21839: LIST
21840: LIST
21841: LIST
21842: LIST
21843: LIST
21844: LIST
21845: LIST
21846: LIST
21847: LIST
21848: LIST
21849: LIST
21850: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21851: LD_ADDR_VAR 0 31
21855: PUSH
21856: LD_INT 3
21858: PUSH
21859: LD_INT 2
21861: PUSH
21862: EMPTY
21863: LIST
21864: LIST
21865: PUSH
21866: LD_INT 3
21868: PUSH
21869: LD_INT 3
21871: PUSH
21872: EMPTY
21873: LIST
21874: LIST
21875: PUSH
21876: LD_INT 2
21878: PUSH
21879: LD_INT 3
21881: PUSH
21882: EMPTY
21883: LIST
21884: LIST
21885: PUSH
21886: LD_INT 4
21888: PUSH
21889: LD_INT 3
21891: PUSH
21892: EMPTY
21893: LIST
21894: LIST
21895: PUSH
21896: LD_INT 4
21898: PUSH
21899: LD_INT 4
21901: PUSH
21902: EMPTY
21903: LIST
21904: LIST
21905: PUSH
21906: LD_INT 3
21908: PUSH
21909: LD_INT 4
21911: PUSH
21912: EMPTY
21913: LIST
21914: LIST
21915: PUSH
21916: LD_INT 5
21918: PUSH
21919: LD_INT 4
21921: PUSH
21922: EMPTY
21923: LIST
21924: LIST
21925: PUSH
21926: LD_INT 5
21928: PUSH
21929: LD_INT 5
21931: PUSH
21932: EMPTY
21933: LIST
21934: LIST
21935: PUSH
21936: LD_INT 4
21938: PUSH
21939: LD_INT 5
21941: PUSH
21942: EMPTY
21943: LIST
21944: LIST
21945: PUSH
21946: LD_INT 6
21948: PUSH
21949: LD_INT 5
21951: PUSH
21952: EMPTY
21953: LIST
21954: LIST
21955: PUSH
21956: LD_INT 6
21958: PUSH
21959: LD_INT 6
21961: PUSH
21962: EMPTY
21963: LIST
21964: LIST
21965: PUSH
21966: LD_INT 5
21968: PUSH
21969: LD_INT 6
21971: PUSH
21972: EMPTY
21973: LIST
21974: LIST
21975: PUSH
21976: EMPTY
21977: LIST
21978: LIST
21979: LIST
21980: LIST
21981: LIST
21982: LIST
21983: LIST
21984: LIST
21985: LIST
21986: LIST
21987: LIST
21988: LIST
21989: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21990: LD_ADDR_VAR 0 32
21994: PUSH
21995: LD_INT 1
21997: PUSH
21998: LD_INT 3
22000: PUSH
22001: EMPTY
22002: LIST
22003: LIST
22004: PUSH
22005: LD_INT 0
22007: PUSH
22008: LD_INT 3
22010: PUSH
22011: EMPTY
22012: LIST
22013: LIST
22014: PUSH
22015: LD_INT 1
22017: NEG
22018: PUSH
22019: LD_INT 2
22021: PUSH
22022: EMPTY
22023: LIST
22024: LIST
22025: PUSH
22026: LD_INT 1
22028: PUSH
22029: LD_INT 4
22031: PUSH
22032: EMPTY
22033: LIST
22034: LIST
22035: PUSH
22036: LD_INT 0
22038: PUSH
22039: LD_INT 4
22041: PUSH
22042: EMPTY
22043: LIST
22044: LIST
22045: PUSH
22046: LD_INT 1
22048: NEG
22049: PUSH
22050: LD_INT 3
22052: PUSH
22053: EMPTY
22054: LIST
22055: LIST
22056: PUSH
22057: LD_INT 1
22059: PUSH
22060: LD_INT 5
22062: PUSH
22063: EMPTY
22064: LIST
22065: LIST
22066: PUSH
22067: LD_INT 0
22069: PUSH
22070: LD_INT 5
22072: PUSH
22073: EMPTY
22074: LIST
22075: LIST
22076: PUSH
22077: LD_INT 1
22079: NEG
22080: PUSH
22081: LD_INT 4
22083: PUSH
22084: EMPTY
22085: LIST
22086: LIST
22087: PUSH
22088: LD_INT 1
22090: PUSH
22091: LD_INT 6
22093: PUSH
22094: EMPTY
22095: LIST
22096: LIST
22097: PUSH
22098: LD_INT 0
22100: PUSH
22101: LD_INT 6
22103: PUSH
22104: EMPTY
22105: LIST
22106: LIST
22107: PUSH
22108: LD_INT 1
22110: NEG
22111: PUSH
22112: LD_INT 5
22114: PUSH
22115: EMPTY
22116: LIST
22117: LIST
22118: PUSH
22119: EMPTY
22120: LIST
22121: LIST
22122: LIST
22123: LIST
22124: LIST
22125: LIST
22126: LIST
22127: LIST
22128: LIST
22129: LIST
22130: LIST
22131: LIST
22132: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
22133: LD_ADDR_VAR 0 33
22137: PUSH
22138: LD_INT 2
22140: NEG
22141: PUSH
22142: LD_INT 1
22144: PUSH
22145: EMPTY
22146: LIST
22147: LIST
22148: PUSH
22149: LD_INT 3
22151: NEG
22152: PUSH
22153: LD_INT 0
22155: PUSH
22156: EMPTY
22157: LIST
22158: LIST
22159: PUSH
22160: LD_INT 3
22162: NEG
22163: PUSH
22164: LD_INT 1
22166: NEG
22167: PUSH
22168: EMPTY
22169: LIST
22170: LIST
22171: PUSH
22172: LD_INT 3
22174: NEG
22175: PUSH
22176: LD_INT 1
22178: PUSH
22179: EMPTY
22180: LIST
22181: LIST
22182: PUSH
22183: LD_INT 4
22185: NEG
22186: PUSH
22187: LD_INT 0
22189: PUSH
22190: EMPTY
22191: LIST
22192: LIST
22193: PUSH
22194: LD_INT 4
22196: NEG
22197: PUSH
22198: LD_INT 1
22200: NEG
22201: PUSH
22202: EMPTY
22203: LIST
22204: LIST
22205: PUSH
22206: LD_INT 4
22208: NEG
22209: PUSH
22210: LD_INT 1
22212: PUSH
22213: EMPTY
22214: LIST
22215: LIST
22216: PUSH
22217: LD_INT 5
22219: NEG
22220: PUSH
22221: LD_INT 0
22223: PUSH
22224: EMPTY
22225: LIST
22226: LIST
22227: PUSH
22228: LD_INT 5
22230: NEG
22231: PUSH
22232: LD_INT 1
22234: NEG
22235: PUSH
22236: EMPTY
22237: LIST
22238: LIST
22239: PUSH
22240: LD_INT 5
22242: NEG
22243: PUSH
22244: LD_INT 1
22246: PUSH
22247: EMPTY
22248: LIST
22249: LIST
22250: PUSH
22251: LD_INT 6
22253: NEG
22254: PUSH
22255: LD_INT 0
22257: PUSH
22258: EMPTY
22259: LIST
22260: LIST
22261: PUSH
22262: LD_INT 6
22264: NEG
22265: PUSH
22266: LD_INT 1
22268: NEG
22269: PUSH
22270: EMPTY
22271: LIST
22272: LIST
22273: PUSH
22274: EMPTY
22275: LIST
22276: LIST
22277: LIST
22278: LIST
22279: LIST
22280: LIST
22281: LIST
22282: LIST
22283: LIST
22284: LIST
22285: LIST
22286: LIST
22287: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
22288: LD_ADDR_VAR 0 34
22292: PUSH
22293: LD_INT 2
22295: NEG
22296: PUSH
22297: LD_INT 3
22299: NEG
22300: PUSH
22301: EMPTY
22302: LIST
22303: LIST
22304: PUSH
22305: LD_INT 3
22307: NEG
22308: PUSH
22309: LD_INT 2
22311: NEG
22312: PUSH
22313: EMPTY
22314: LIST
22315: LIST
22316: PUSH
22317: LD_INT 3
22319: NEG
22320: PUSH
22321: LD_INT 3
22323: NEG
22324: PUSH
22325: EMPTY
22326: LIST
22327: LIST
22328: PUSH
22329: LD_INT 3
22331: NEG
22332: PUSH
22333: LD_INT 4
22335: NEG
22336: PUSH
22337: EMPTY
22338: LIST
22339: LIST
22340: PUSH
22341: LD_INT 4
22343: NEG
22344: PUSH
22345: LD_INT 3
22347: NEG
22348: PUSH
22349: EMPTY
22350: LIST
22351: LIST
22352: PUSH
22353: LD_INT 4
22355: NEG
22356: PUSH
22357: LD_INT 4
22359: NEG
22360: PUSH
22361: EMPTY
22362: LIST
22363: LIST
22364: PUSH
22365: LD_INT 4
22367: NEG
22368: PUSH
22369: LD_INT 5
22371: NEG
22372: PUSH
22373: EMPTY
22374: LIST
22375: LIST
22376: PUSH
22377: LD_INT 5
22379: NEG
22380: PUSH
22381: LD_INT 4
22383: NEG
22384: PUSH
22385: EMPTY
22386: LIST
22387: LIST
22388: PUSH
22389: LD_INT 5
22391: NEG
22392: PUSH
22393: LD_INT 5
22395: NEG
22396: PUSH
22397: EMPTY
22398: LIST
22399: LIST
22400: PUSH
22401: LD_INT 5
22403: NEG
22404: PUSH
22405: LD_INT 6
22407: NEG
22408: PUSH
22409: EMPTY
22410: LIST
22411: LIST
22412: PUSH
22413: LD_INT 6
22415: NEG
22416: PUSH
22417: LD_INT 5
22419: NEG
22420: PUSH
22421: EMPTY
22422: LIST
22423: LIST
22424: PUSH
22425: LD_INT 6
22427: NEG
22428: PUSH
22429: LD_INT 6
22431: NEG
22432: PUSH
22433: EMPTY
22434: LIST
22435: LIST
22436: PUSH
22437: EMPTY
22438: LIST
22439: LIST
22440: LIST
22441: LIST
22442: LIST
22443: LIST
22444: LIST
22445: LIST
22446: LIST
22447: LIST
22448: LIST
22449: LIST
22450: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22451: LD_ADDR_VAR 0 41
22455: PUSH
22456: LD_INT 0
22458: PUSH
22459: LD_INT 2
22461: NEG
22462: PUSH
22463: EMPTY
22464: LIST
22465: LIST
22466: PUSH
22467: LD_INT 1
22469: NEG
22470: PUSH
22471: LD_INT 3
22473: NEG
22474: PUSH
22475: EMPTY
22476: LIST
22477: LIST
22478: PUSH
22479: LD_INT 1
22481: PUSH
22482: LD_INT 2
22484: NEG
22485: PUSH
22486: EMPTY
22487: LIST
22488: LIST
22489: PUSH
22490: EMPTY
22491: LIST
22492: LIST
22493: LIST
22494: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22495: LD_ADDR_VAR 0 42
22499: PUSH
22500: LD_INT 2
22502: PUSH
22503: LD_INT 0
22505: PUSH
22506: EMPTY
22507: LIST
22508: LIST
22509: PUSH
22510: LD_INT 2
22512: PUSH
22513: LD_INT 1
22515: NEG
22516: PUSH
22517: EMPTY
22518: LIST
22519: LIST
22520: PUSH
22521: LD_INT 3
22523: PUSH
22524: LD_INT 1
22526: PUSH
22527: EMPTY
22528: LIST
22529: LIST
22530: PUSH
22531: EMPTY
22532: LIST
22533: LIST
22534: LIST
22535: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22536: LD_ADDR_VAR 0 43
22540: PUSH
22541: LD_INT 2
22543: PUSH
22544: LD_INT 2
22546: PUSH
22547: EMPTY
22548: LIST
22549: LIST
22550: PUSH
22551: LD_INT 3
22553: PUSH
22554: LD_INT 2
22556: PUSH
22557: EMPTY
22558: LIST
22559: LIST
22560: PUSH
22561: LD_INT 2
22563: PUSH
22564: LD_INT 3
22566: PUSH
22567: EMPTY
22568: LIST
22569: LIST
22570: PUSH
22571: EMPTY
22572: LIST
22573: LIST
22574: LIST
22575: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22576: LD_ADDR_VAR 0 44
22580: PUSH
22581: LD_INT 0
22583: PUSH
22584: LD_INT 2
22586: PUSH
22587: EMPTY
22588: LIST
22589: LIST
22590: PUSH
22591: LD_INT 1
22593: PUSH
22594: LD_INT 3
22596: PUSH
22597: EMPTY
22598: LIST
22599: LIST
22600: PUSH
22601: LD_INT 1
22603: NEG
22604: PUSH
22605: LD_INT 2
22607: PUSH
22608: EMPTY
22609: LIST
22610: LIST
22611: PUSH
22612: EMPTY
22613: LIST
22614: LIST
22615: LIST
22616: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22617: LD_ADDR_VAR 0 45
22621: PUSH
22622: LD_INT 2
22624: NEG
22625: PUSH
22626: LD_INT 0
22628: PUSH
22629: EMPTY
22630: LIST
22631: LIST
22632: PUSH
22633: LD_INT 2
22635: NEG
22636: PUSH
22637: LD_INT 1
22639: PUSH
22640: EMPTY
22641: LIST
22642: LIST
22643: PUSH
22644: LD_INT 3
22646: NEG
22647: PUSH
22648: LD_INT 1
22650: NEG
22651: PUSH
22652: EMPTY
22653: LIST
22654: LIST
22655: PUSH
22656: EMPTY
22657: LIST
22658: LIST
22659: LIST
22660: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22661: LD_ADDR_VAR 0 46
22665: PUSH
22666: LD_INT 2
22668: NEG
22669: PUSH
22670: LD_INT 2
22672: NEG
22673: PUSH
22674: EMPTY
22675: LIST
22676: LIST
22677: PUSH
22678: LD_INT 2
22680: NEG
22681: PUSH
22682: LD_INT 3
22684: NEG
22685: PUSH
22686: EMPTY
22687: LIST
22688: LIST
22689: PUSH
22690: LD_INT 3
22692: NEG
22693: PUSH
22694: LD_INT 2
22696: NEG
22697: PUSH
22698: EMPTY
22699: LIST
22700: LIST
22701: PUSH
22702: EMPTY
22703: LIST
22704: LIST
22705: LIST
22706: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22707: LD_ADDR_VAR 0 47
22711: PUSH
22712: LD_INT 2
22714: NEG
22715: PUSH
22716: LD_INT 3
22718: NEG
22719: PUSH
22720: EMPTY
22721: LIST
22722: LIST
22723: PUSH
22724: LD_INT 1
22726: NEG
22727: PUSH
22728: LD_INT 3
22730: NEG
22731: PUSH
22732: EMPTY
22733: LIST
22734: LIST
22735: PUSH
22736: EMPTY
22737: LIST
22738: LIST
22739: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22740: LD_ADDR_VAR 0 48
22744: PUSH
22745: LD_INT 1
22747: PUSH
22748: LD_INT 2
22750: NEG
22751: PUSH
22752: EMPTY
22753: LIST
22754: LIST
22755: PUSH
22756: LD_INT 2
22758: PUSH
22759: LD_INT 1
22761: NEG
22762: PUSH
22763: EMPTY
22764: LIST
22765: LIST
22766: PUSH
22767: EMPTY
22768: LIST
22769: LIST
22770: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22771: LD_ADDR_VAR 0 49
22775: PUSH
22776: LD_INT 3
22778: PUSH
22779: LD_INT 1
22781: PUSH
22782: EMPTY
22783: LIST
22784: LIST
22785: PUSH
22786: LD_INT 3
22788: PUSH
22789: LD_INT 2
22791: PUSH
22792: EMPTY
22793: LIST
22794: LIST
22795: PUSH
22796: EMPTY
22797: LIST
22798: LIST
22799: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22800: LD_ADDR_VAR 0 50
22804: PUSH
22805: LD_INT 2
22807: PUSH
22808: LD_INT 3
22810: PUSH
22811: EMPTY
22812: LIST
22813: LIST
22814: PUSH
22815: LD_INT 1
22817: PUSH
22818: LD_INT 3
22820: PUSH
22821: EMPTY
22822: LIST
22823: LIST
22824: PUSH
22825: EMPTY
22826: LIST
22827: LIST
22828: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22829: LD_ADDR_VAR 0 51
22833: PUSH
22834: LD_INT 1
22836: NEG
22837: PUSH
22838: LD_INT 2
22840: PUSH
22841: EMPTY
22842: LIST
22843: LIST
22844: PUSH
22845: LD_INT 2
22847: NEG
22848: PUSH
22849: LD_INT 1
22851: PUSH
22852: EMPTY
22853: LIST
22854: LIST
22855: PUSH
22856: EMPTY
22857: LIST
22858: LIST
22859: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22860: LD_ADDR_VAR 0 52
22864: PUSH
22865: LD_INT 3
22867: NEG
22868: PUSH
22869: LD_INT 1
22871: NEG
22872: PUSH
22873: EMPTY
22874: LIST
22875: LIST
22876: PUSH
22877: LD_INT 3
22879: NEG
22880: PUSH
22881: LD_INT 2
22883: NEG
22884: PUSH
22885: EMPTY
22886: LIST
22887: LIST
22888: PUSH
22889: EMPTY
22890: LIST
22891: LIST
22892: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22893: LD_ADDR_VAR 0 53
22897: PUSH
22898: LD_INT 1
22900: NEG
22901: PUSH
22902: LD_INT 3
22904: NEG
22905: PUSH
22906: EMPTY
22907: LIST
22908: LIST
22909: PUSH
22910: LD_INT 0
22912: PUSH
22913: LD_INT 3
22915: NEG
22916: PUSH
22917: EMPTY
22918: LIST
22919: LIST
22920: PUSH
22921: LD_INT 1
22923: PUSH
22924: LD_INT 2
22926: NEG
22927: PUSH
22928: EMPTY
22929: LIST
22930: LIST
22931: PUSH
22932: EMPTY
22933: LIST
22934: LIST
22935: LIST
22936: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22937: LD_ADDR_VAR 0 54
22941: PUSH
22942: LD_INT 2
22944: PUSH
22945: LD_INT 1
22947: NEG
22948: PUSH
22949: EMPTY
22950: LIST
22951: LIST
22952: PUSH
22953: LD_INT 3
22955: PUSH
22956: LD_INT 0
22958: PUSH
22959: EMPTY
22960: LIST
22961: LIST
22962: PUSH
22963: LD_INT 3
22965: PUSH
22966: LD_INT 1
22968: PUSH
22969: EMPTY
22970: LIST
22971: LIST
22972: PUSH
22973: EMPTY
22974: LIST
22975: LIST
22976: LIST
22977: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22978: LD_ADDR_VAR 0 55
22982: PUSH
22983: LD_INT 3
22985: PUSH
22986: LD_INT 2
22988: PUSH
22989: EMPTY
22990: LIST
22991: LIST
22992: PUSH
22993: LD_INT 3
22995: PUSH
22996: LD_INT 3
22998: PUSH
22999: EMPTY
23000: LIST
23001: LIST
23002: PUSH
23003: LD_INT 2
23005: PUSH
23006: LD_INT 3
23008: PUSH
23009: EMPTY
23010: LIST
23011: LIST
23012: PUSH
23013: EMPTY
23014: LIST
23015: LIST
23016: LIST
23017: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
23018: LD_ADDR_VAR 0 56
23022: PUSH
23023: LD_INT 1
23025: PUSH
23026: LD_INT 3
23028: PUSH
23029: EMPTY
23030: LIST
23031: LIST
23032: PUSH
23033: LD_INT 0
23035: PUSH
23036: LD_INT 3
23038: PUSH
23039: EMPTY
23040: LIST
23041: LIST
23042: PUSH
23043: LD_INT 1
23045: NEG
23046: PUSH
23047: LD_INT 2
23049: PUSH
23050: EMPTY
23051: LIST
23052: LIST
23053: PUSH
23054: EMPTY
23055: LIST
23056: LIST
23057: LIST
23058: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
23059: LD_ADDR_VAR 0 57
23063: PUSH
23064: LD_INT 2
23066: NEG
23067: PUSH
23068: LD_INT 1
23070: PUSH
23071: EMPTY
23072: LIST
23073: LIST
23074: PUSH
23075: LD_INT 3
23077: NEG
23078: PUSH
23079: LD_INT 0
23081: PUSH
23082: EMPTY
23083: LIST
23084: LIST
23085: PUSH
23086: LD_INT 3
23088: NEG
23089: PUSH
23090: LD_INT 1
23092: NEG
23093: PUSH
23094: EMPTY
23095: LIST
23096: LIST
23097: PUSH
23098: EMPTY
23099: LIST
23100: LIST
23101: LIST
23102: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
23103: LD_ADDR_VAR 0 58
23107: PUSH
23108: LD_INT 2
23110: NEG
23111: PUSH
23112: LD_INT 3
23114: NEG
23115: PUSH
23116: EMPTY
23117: LIST
23118: LIST
23119: PUSH
23120: LD_INT 3
23122: NEG
23123: PUSH
23124: LD_INT 2
23126: NEG
23127: PUSH
23128: EMPTY
23129: LIST
23130: LIST
23131: PUSH
23132: LD_INT 3
23134: NEG
23135: PUSH
23136: LD_INT 3
23138: NEG
23139: PUSH
23140: EMPTY
23141: LIST
23142: LIST
23143: PUSH
23144: EMPTY
23145: LIST
23146: LIST
23147: LIST
23148: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
23149: LD_ADDR_VAR 0 59
23153: PUSH
23154: LD_INT 1
23156: NEG
23157: PUSH
23158: LD_INT 2
23160: NEG
23161: PUSH
23162: EMPTY
23163: LIST
23164: LIST
23165: PUSH
23166: LD_INT 0
23168: PUSH
23169: LD_INT 2
23171: NEG
23172: PUSH
23173: EMPTY
23174: LIST
23175: LIST
23176: PUSH
23177: LD_INT 1
23179: PUSH
23180: LD_INT 1
23182: NEG
23183: PUSH
23184: EMPTY
23185: LIST
23186: LIST
23187: PUSH
23188: EMPTY
23189: LIST
23190: LIST
23191: LIST
23192: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
23193: LD_ADDR_VAR 0 60
23197: PUSH
23198: LD_INT 1
23200: PUSH
23201: LD_INT 1
23203: NEG
23204: PUSH
23205: EMPTY
23206: LIST
23207: LIST
23208: PUSH
23209: LD_INT 2
23211: PUSH
23212: LD_INT 0
23214: PUSH
23215: EMPTY
23216: LIST
23217: LIST
23218: PUSH
23219: LD_INT 2
23221: PUSH
23222: LD_INT 1
23224: PUSH
23225: EMPTY
23226: LIST
23227: LIST
23228: PUSH
23229: EMPTY
23230: LIST
23231: LIST
23232: LIST
23233: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
23234: LD_ADDR_VAR 0 61
23238: PUSH
23239: LD_INT 2
23241: PUSH
23242: LD_INT 1
23244: PUSH
23245: EMPTY
23246: LIST
23247: LIST
23248: PUSH
23249: LD_INT 2
23251: PUSH
23252: LD_INT 2
23254: PUSH
23255: EMPTY
23256: LIST
23257: LIST
23258: PUSH
23259: LD_INT 1
23261: PUSH
23262: LD_INT 2
23264: PUSH
23265: EMPTY
23266: LIST
23267: LIST
23268: PUSH
23269: EMPTY
23270: LIST
23271: LIST
23272: LIST
23273: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
23274: LD_ADDR_VAR 0 62
23278: PUSH
23279: LD_INT 1
23281: PUSH
23282: LD_INT 2
23284: PUSH
23285: EMPTY
23286: LIST
23287: LIST
23288: PUSH
23289: LD_INT 0
23291: PUSH
23292: LD_INT 2
23294: PUSH
23295: EMPTY
23296: LIST
23297: LIST
23298: PUSH
23299: LD_INT 1
23301: NEG
23302: PUSH
23303: LD_INT 1
23305: PUSH
23306: EMPTY
23307: LIST
23308: LIST
23309: PUSH
23310: EMPTY
23311: LIST
23312: LIST
23313: LIST
23314: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
23315: LD_ADDR_VAR 0 63
23319: PUSH
23320: LD_INT 1
23322: NEG
23323: PUSH
23324: LD_INT 1
23326: PUSH
23327: EMPTY
23328: LIST
23329: LIST
23330: PUSH
23331: LD_INT 2
23333: NEG
23334: PUSH
23335: LD_INT 0
23337: PUSH
23338: EMPTY
23339: LIST
23340: LIST
23341: PUSH
23342: LD_INT 2
23344: NEG
23345: PUSH
23346: LD_INT 1
23348: NEG
23349: PUSH
23350: EMPTY
23351: LIST
23352: LIST
23353: PUSH
23354: EMPTY
23355: LIST
23356: LIST
23357: LIST
23358: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
23359: LD_ADDR_VAR 0 64
23363: PUSH
23364: LD_INT 1
23366: NEG
23367: PUSH
23368: LD_INT 2
23370: NEG
23371: PUSH
23372: EMPTY
23373: LIST
23374: LIST
23375: PUSH
23376: LD_INT 2
23378: NEG
23379: PUSH
23380: LD_INT 1
23382: NEG
23383: PUSH
23384: EMPTY
23385: LIST
23386: LIST
23387: PUSH
23388: LD_INT 2
23390: NEG
23391: PUSH
23392: LD_INT 2
23394: NEG
23395: PUSH
23396: EMPTY
23397: LIST
23398: LIST
23399: PUSH
23400: EMPTY
23401: LIST
23402: LIST
23403: LIST
23404: ST_TO_ADDR
// end ; 2 :
23405: GO 26671
23407: LD_INT 2
23409: DOUBLE
23410: EQUAL
23411: IFTRUE 23415
23413: GO 26670
23415: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
23416: LD_ADDR_VAR 0 29
23420: PUSH
23421: LD_INT 4
23423: PUSH
23424: LD_INT 0
23426: PUSH
23427: EMPTY
23428: LIST
23429: LIST
23430: PUSH
23431: LD_INT 4
23433: PUSH
23434: LD_INT 1
23436: NEG
23437: PUSH
23438: EMPTY
23439: LIST
23440: LIST
23441: PUSH
23442: LD_INT 5
23444: PUSH
23445: LD_INT 0
23447: PUSH
23448: EMPTY
23449: LIST
23450: LIST
23451: PUSH
23452: LD_INT 5
23454: PUSH
23455: LD_INT 1
23457: PUSH
23458: EMPTY
23459: LIST
23460: LIST
23461: PUSH
23462: LD_INT 4
23464: PUSH
23465: LD_INT 1
23467: PUSH
23468: EMPTY
23469: LIST
23470: LIST
23471: PUSH
23472: LD_INT 3
23474: PUSH
23475: LD_INT 0
23477: PUSH
23478: EMPTY
23479: LIST
23480: LIST
23481: PUSH
23482: LD_INT 3
23484: PUSH
23485: LD_INT 1
23487: NEG
23488: PUSH
23489: EMPTY
23490: LIST
23491: LIST
23492: PUSH
23493: LD_INT 3
23495: PUSH
23496: LD_INT 2
23498: NEG
23499: PUSH
23500: EMPTY
23501: LIST
23502: LIST
23503: PUSH
23504: LD_INT 5
23506: PUSH
23507: LD_INT 2
23509: PUSH
23510: EMPTY
23511: LIST
23512: LIST
23513: PUSH
23514: LD_INT 3
23516: PUSH
23517: LD_INT 3
23519: PUSH
23520: EMPTY
23521: LIST
23522: LIST
23523: PUSH
23524: LD_INT 3
23526: PUSH
23527: LD_INT 2
23529: PUSH
23530: EMPTY
23531: LIST
23532: LIST
23533: PUSH
23534: LD_INT 4
23536: PUSH
23537: LD_INT 3
23539: PUSH
23540: EMPTY
23541: LIST
23542: LIST
23543: PUSH
23544: LD_INT 4
23546: PUSH
23547: LD_INT 4
23549: PUSH
23550: EMPTY
23551: LIST
23552: LIST
23553: PUSH
23554: LD_INT 3
23556: PUSH
23557: LD_INT 4
23559: PUSH
23560: EMPTY
23561: LIST
23562: LIST
23563: PUSH
23564: LD_INT 2
23566: PUSH
23567: LD_INT 3
23569: PUSH
23570: EMPTY
23571: LIST
23572: LIST
23573: PUSH
23574: LD_INT 2
23576: PUSH
23577: LD_INT 2
23579: PUSH
23580: EMPTY
23581: LIST
23582: LIST
23583: PUSH
23584: LD_INT 4
23586: PUSH
23587: LD_INT 2
23589: PUSH
23590: EMPTY
23591: LIST
23592: LIST
23593: PUSH
23594: LD_INT 2
23596: PUSH
23597: LD_INT 4
23599: PUSH
23600: EMPTY
23601: LIST
23602: LIST
23603: PUSH
23604: LD_INT 0
23606: PUSH
23607: LD_INT 4
23609: PUSH
23610: EMPTY
23611: LIST
23612: LIST
23613: PUSH
23614: LD_INT 0
23616: PUSH
23617: LD_INT 3
23619: PUSH
23620: EMPTY
23621: LIST
23622: LIST
23623: PUSH
23624: LD_INT 1
23626: PUSH
23627: LD_INT 4
23629: PUSH
23630: EMPTY
23631: LIST
23632: LIST
23633: PUSH
23634: LD_INT 1
23636: PUSH
23637: LD_INT 5
23639: PUSH
23640: EMPTY
23641: LIST
23642: LIST
23643: PUSH
23644: LD_INT 0
23646: PUSH
23647: LD_INT 5
23649: PUSH
23650: EMPTY
23651: LIST
23652: LIST
23653: PUSH
23654: LD_INT 1
23656: NEG
23657: PUSH
23658: LD_INT 4
23660: PUSH
23661: EMPTY
23662: LIST
23663: LIST
23664: PUSH
23665: LD_INT 1
23667: NEG
23668: PUSH
23669: LD_INT 3
23671: PUSH
23672: EMPTY
23673: LIST
23674: LIST
23675: PUSH
23676: LD_INT 2
23678: PUSH
23679: LD_INT 5
23681: PUSH
23682: EMPTY
23683: LIST
23684: LIST
23685: PUSH
23686: LD_INT 2
23688: NEG
23689: PUSH
23690: LD_INT 3
23692: PUSH
23693: EMPTY
23694: LIST
23695: LIST
23696: PUSH
23697: LD_INT 3
23699: NEG
23700: PUSH
23701: LD_INT 0
23703: PUSH
23704: EMPTY
23705: LIST
23706: LIST
23707: PUSH
23708: LD_INT 3
23710: NEG
23711: PUSH
23712: LD_INT 1
23714: NEG
23715: PUSH
23716: EMPTY
23717: LIST
23718: LIST
23719: PUSH
23720: LD_INT 2
23722: NEG
23723: PUSH
23724: LD_INT 0
23726: PUSH
23727: EMPTY
23728: LIST
23729: LIST
23730: PUSH
23731: LD_INT 2
23733: NEG
23734: PUSH
23735: LD_INT 1
23737: PUSH
23738: EMPTY
23739: LIST
23740: LIST
23741: PUSH
23742: LD_INT 3
23744: NEG
23745: PUSH
23746: LD_INT 1
23748: PUSH
23749: EMPTY
23750: LIST
23751: LIST
23752: PUSH
23753: LD_INT 4
23755: NEG
23756: PUSH
23757: LD_INT 0
23759: PUSH
23760: EMPTY
23761: LIST
23762: LIST
23763: PUSH
23764: LD_INT 4
23766: NEG
23767: PUSH
23768: LD_INT 1
23770: NEG
23771: PUSH
23772: EMPTY
23773: LIST
23774: LIST
23775: PUSH
23776: LD_INT 4
23778: NEG
23779: PUSH
23780: LD_INT 2
23782: NEG
23783: PUSH
23784: EMPTY
23785: LIST
23786: LIST
23787: PUSH
23788: LD_INT 2
23790: NEG
23791: PUSH
23792: LD_INT 2
23794: PUSH
23795: EMPTY
23796: LIST
23797: LIST
23798: PUSH
23799: LD_INT 4
23801: NEG
23802: PUSH
23803: LD_INT 4
23805: NEG
23806: PUSH
23807: EMPTY
23808: LIST
23809: LIST
23810: PUSH
23811: LD_INT 4
23813: NEG
23814: PUSH
23815: LD_INT 5
23817: NEG
23818: PUSH
23819: EMPTY
23820: LIST
23821: LIST
23822: PUSH
23823: LD_INT 3
23825: NEG
23826: PUSH
23827: LD_INT 4
23829: NEG
23830: PUSH
23831: EMPTY
23832: LIST
23833: LIST
23834: PUSH
23835: LD_INT 3
23837: NEG
23838: PUSH
23839: LD_INT 3
23841: NEG
23842: PUSH
23843: EMPTY
23844: LIST
23845: LIST
23846: PUSH
23847: LD_INT 4
23849: NEG
23850: PUSH
23851: LD_INT 3
23853: NEG
23854: PUSH
23855: EMPTY
23856: LIST
23857: LIST
23858: PUSH
23859: LD_INT 5
23861: NEG
23862: PUSH
23863: LD_INT 4
23865: NEG
23866: PUSH
23867: EMPTY
23868: LIST
23869: LIST
23870: PUSH
23871: LD_INT 5
23873: NEG
23874: PUSH
23875: LD_INT 5
23877: NEG
23878: PUSH
23879: EMPTY
23880: LIST
23881: LIST
23882: PUSH
23883: LD_INT 3
23885: NEG
23886: PUSH
23887: LD_INT 5
23889: NEG
23890: PUSH
23891: EMPTY
23892: LIST
23893: LIST
23894: PUSH
23895: LD_INT 5
23897: NEG
23898: PUSH
23899: LD_INT 3
23901: NEG
23902: PUSH
23903: EMPTY
23904: LIST
23905: LIST
23906: PUSH
23907: EMPTY
23908: LIST
23909: LIST
23910: LIST
23911: LIST
23912: LIST
23913: LIST
23914: LIST
23915: LIST
23916: LIST
23917: LIST
23918: LIST
23919: LIST
23920: LIST
23921: LIST
23922: LIST
23923: LIST
23924: LIST
23925: LIST
23926: LIST
23927: LIST
23928: LIST
23929: LIST
23930: LIST
23931: LIST
23932: LIST
23933: LIST
23934: LIST
23935: LIST
23936: LIST
23937: LIST
23938: LIST
23939: LIST
23940: LIST
23941: LIST
23942: LIST
23943: LIST
23944: LIST
23945: LIST
23946: LIST
23947: LIST
23948: LIST
23949: LIST
23950: LIST
23951: LIST
23952: LIST
23953: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23954: LD_ADDR_VAR 0 30
23958: PUSH
23959: LD_INT 4
23961: PUSH
23962: LD_INT 4
23964: PUSH
23965: EMPTY
23966: LIST
23967: LIST
23968: PUSH
23969: LD_INT 4
23971: PUSH
23972: LD_INT 3
23974: PUSH
23975: EMPTY
23976: LIST
23977: LIST
23978: PUSH
23979: LD_INT 5
23981: PUSH
23982: LD_INT 4
23984: PUSH
23985: EMPTY
23986: LIST
23987: LIST
23988: PUSH
23989: LD_INT 5
23991: PUSH
23992: LD_INT 5
23994: PUSH
23995: EMPTY
23996: LIST
23997: LIST
23998: PUSH
23999: LD_INT 4
24001: PUSH
24002: LD_INT 5
24004: PUSH
24005: EMPTY
24006: LIST
24007: LIST
24008: PUSH
24009: LD_INT 3
24011: PUSH
24012: LD_INT 4
24014: PUSH
24015: EMPTY
24016: LIST
24017: LIST
24018: PUSH
24019: LD_INT 3
24021: PUSH
24022: LD_INT 3
24024: PUSH
24025: EMPTY
24026: LIST
24027: LIST
24028: PUSH
24029: LD_INT 5
24031: PUSH
24032: LD_INT 3
24034: PUSH
24035: EMPTY
24036: LIST
24037: LIST
24038: PUSH
24039: LD_INT 3
24041: PUSH
24042: LD_INT 5
24044: PUSH
24045: EMPTY
24046: LIST
24047: LIST
24048: PUSH
24049: LD_INT 0
24051: PUSH
24052: LD_INT 3
24054: PUSH
24055: EMPTY
24056: LIST
24057: LIST
24058: PUSH
24059: LD_INT 0
24061: PUSH
24062: LD_INT 2
24064: PUSH
24065: EMPTY
24066: LIST
24067: LIST
24068: PUSH
24069: LD_INT 1
24071: PUSH
24072: LD_INT 3
24074: PUSH
24075: EMPTY
24076: LIST
24077: LIST
24078: PUSH
24079: LD_INT 1
24081: PUSH
24082: LD_INT 4
24084: PUSH
24085: EMPTY
24086: LIST
24087: LIST
24088: PUSH
24089: LD_INT 0
24091: PUSH
24092: LD_INT 4
24094: PUSH
24095: EMPTY
24096: LIST
24097: LIST
24098: PUSH
24099: LD_INT 1
24101: NEG
24102: PUSH
24103: LD_INT 3
24105: PUSH
24106: EMPTY
24107: LIST
24108: LIST
24109: PUSH
24110: LD_INT 1
24112: NEG
24113: PUSH
24114: LD_INT 2
24116: PUSH
24117: EMPTY
24118: LIST
24119: LIST
24120: PUSH
24121: LD_INT 2
24123: PUSH
24124: LD_INT 4
24126: PUSH
24127: EMPTY
24128: LIST
24129: LIST
24130: PUSH
24131: LD_INT 2
24133: NEG
24134: PUSH
24135: LD_INT 2
24137: PUSH
24138: EMPTY
24139: LIST
24140: LIST
24141: PUSH
24142: LD_INT 4
24144: NEG
24145: PUSH
24146: LD_INT 0
24148: PUSH
24149: EMPTY
24150: LIST
24151: LIST
24152: PUSH
24153: LD_INT 4
24155: NEG
24156: PUSH
24157: LD_INT 1
24159: NEG
24160: PUSH
24161: EMPTY
24162: LIST
24163: LIST
24164: PUSH
24165: LD_INT 3
24167: NEG
24168: PUSH
24169: LD_INT 0
24171: PUSH
24172: EMPTY
24173: LIST
24174: LIST
24175: PUSH
24176: LD_INT 3
24178: NEG
24179: PUSH
24180: LD_INT 1
24182: PUSH
24183: EMPTY
24184: LIST
24185: LIST
24186: PUSH
24187: LD_INT 4
24189: NEG
24190: PUSH
24191: LD_INT 1
24193: PUSH
24194: EMPTY
24195: LIST
24196: LIST
24197: PUSH
24198: LD_INT 5
24200: NEG
24201: PUSH
24202: LD_INT 0
24204: PUSH
24205: EMPTY
24206: LIST
24207: LIST
24208: PUSH
24209: LD_INT 5
24211: NEG
24212: PUSH
24213: LD_INT 1
24215: NEG
24216: PUSH
24217: EMPTY
24218: LIST
24219: LIST
24220: PUSH
24221: LD_INT 5
24223: NEG
24224: PUSH
24225: LD_INT 2
24227: NEG
24228: PUSH
24229: EMPTY
24230: LIST
24231: LIST
24232: PUSH
24233: LD_INT 3
24235: NEG
24236: PUSH
24237: LD_INT 2
24239: PUSH
24240: EMPTY
24241: LIST
24242: LIST
24243: PUSH
24244: LD_INT 3
24246: NEG
24247: PUSH
24248: LD_INT 3
24250: NEG
24251: PUSH
24252: EMPTY
24253: LIST
24254: LIST
24255: PUSH
24256: LD_INT 3
24258: NEG
24259: PUSH
24260: LD_INT 4
24262: NEG
24263: PUSH
24264: EMPTY
24265: LIST
24266: LIST
24267: PUSH
24268: LD_INT 2
24270: NEG
24271: PUSH
24272: LD_INT 3
24274: NEG
24275: PUSH
24276: EMPTY
24277: LIST
24278: LIST
24279: PUSH
24280: LD_INT 2
24282: NEG
24283: PUSH
24284: LD_INT 2
24286: NEG
24287: PUSH
24288: EMPTY
24289: LIST
24290: LIST
24291: PUSH
24292: LD_INT 3
24294: NEG
24295: PUSH
24296: LD_INT 2
24298: NEG
24299: PUSH
24300: EMPTY
24301: LIST
24302: LIST
24303: PUSH
24304: LD_INT 4
24306: NEG
24307: PUSH
24308: LD_INT 3
24310: NEG
24311: PUSH
24312: EMPTY
24313: LIST
24314: LIST
24315: PUSH
24316: LD_INT 4
24318: NEG
24319: PUSH
24320: LD_INT 4
24322: NEG
24323: PUSH
24324: EMPTY
24325: LIST
24326: LIST
24327: PUSH
24328: LD_INT 2
24330: NEG
24331: PUSH
24332: LD_INT 4
24334: NEG
24335: PUSH
24336: EMPTY
24337: LIST
24338: LIST
24339: PUSH
24340: LD_INT 4
24342: NEG
24343: PUSH
24344: LD_INT 2
24346: NEG
24347: PUSH
24348: EMPTY
24349: LIST
24350: LIST
24351: PUSH
24352: LD_INT 0
24354: PUSH
24355: LD_INT 4
24357: NEG
24358: PUSH
24359: EMPTY
24360: LIST
24361: LIST
24362: PUSH
24363: LD_INT 0
24365: PUSH
24366: LD_INT 5
24368: NEG
24369: PUSH
24370: EMPTY
24371: LIST
24372: LIST
24373: PUSH
24374: LD_INT 1
24376: PUSH
24377: LD_INT 4
24379: NEG
24380: PUSH
24381: EMPTY
24382: LIST
24383: LIST
24384: PUSH
24385: LD_INT 1
24387: PUSH
24388: LD_INT 3
24390: NEG
24391: PUSH
24392: EMPTY
24393: LIST
24394: LIST
24395: PUSH
24396: LD_INT 0
24398: PUSH
24399: LD_INT 3
24401: NEG
24402: PUSH
24403: EMPTY
24404: LIST
24405: LIST
24406: PUSH
24407: LD_INT 1
24409: NEG
24410: PUSH
24411: LD_INT 4
24413: NEG
24414: PUSH
24415: EMPTY
24416: LIST
24417: LIST
24418: PUSH
24419: LD_INT 1
24421: NEG
24422: PUSH
24423: LD_INT 5
24425: NEG
24426: PUSH
24427: EMPTY
24428: LIST
24429: LIST
24430: PUSH
24431: LD_INT 2
24433: PUSH
24434: LD_INT 3
24436: NEG
24437: PUSH
24438: EMPTY
24439: LIST
24440: LIST
24441: PUSH
24442: LD_INT 2
24444: NEG
24445: PUSH
24446: LD_INT 5
24448: NEG
24449: PUSH
24450: EMPTY
24451: LIST
24452: LIST
24453: PUSH
24454: EMPTY
24455: LIST
24456: LIST
24457: LIST
24458: LIST
24459: LIST
24460: LIST
24461: LIST
24462: LIST
24463: LIST
24464: LIST
24465: LIST
24466: LIST
24467: LIST
24468: LIST
24469: LIST
24470: LIST
24471: LIST
24472: LIST
24473: LIST
24474: LIST
24475: LIST
24476: LIST
24477: LIST
24478: LIST
24479: LIST
24480: LIST
24481: LIST
24482: LIST
24483: LIST
24484: LIST
24485: LIST
24486: LIST
24487: LIST
24488: LIST
24489: LIST
24490: LIST
24491: LIST
24492: LIST
24493: LIST
24494: LIST
24495: LIST
24496: LIST
24497: LIST
24498: LIST
24499: LIST
24500: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24501: LD_ADDR_VAR 0 31
24505: PUSH
24506: LD_INT 0
24508: PUSH
24509: LD_INT 4
24511: PUSH
24512: EMPTY
24513: LIST
24514: LIST
24515: PUSH
24516: LD_INT 0
24518: PUSH
24519: LD_INT 3
24521: PUSH
24522: EMPTY
24523: LIST
24524: LIST
24525: PUSH
24526: LD_INT 1
24528: PUSH
24529: LD_INT 4
24531: PUSH
24532: EMPTY
24533: LIST
24534: LIST
24535: PUSH
24536: LD_INT 1
24538: PUSH
24539: LD_INT 5
24541: PUSH
24542: EMPTY
24543: LIST
24544: LIST
24545: PUSH
24546: LD_INT 0
24548: PUSH
24549: LD_INT 5
24551: PUSH
24552: EMPTY
24553: LIST
24554: LIST
24555: PUSH
24556: LD_INT 1
24558: NEG
24559: PUSH
24560: LD_INT 4
24562: PUSH
24563: EMPTY
24564: LIST
24565: LIST
24566: PUSH
24567: LD_INT 1
24569: NEG
24570: PUSH
24571: LD_INT 3
24573: PUSH
24574: EMPTY
24575: LIST
24576: LIST
24577: PUSH
24578: LD_INT 2
24580: PUSH
24581: LD_INT 5
24583: PUSH
24584: EMPTY
24585: LIST
24586: LIST
24587: PUSH
24588: LD_INT 2
24590: NEG
24591: PUSH
24592: LD_INT 3
24594: PUSH
24595: EMPTY
24596: LIST
24597: LIST
24598: PUSH
24599: LD_INT 3
24601: NEG
24602: PUSH
24603: LD_INT 0
24605: PUSH
24606: EMPTY
24607: LIST
24608: LIST
24609: PUSH
24610: LD_INT 3
24612: NEG
24613: PUSH
24614: LD_INT 1
24616: NEG
24617: PUSH
24618: EMPTY
24619: LIST
24620: LIST
24621: PUSH
24622: LD_INT 2
24624: NEG
24625: PUSH
24626: LD_INT 0
24628: PUSH
24629: EMPTY
24630: LIST
24631: LIST
24632: PUSH
24633: LD_INT 2
24635: NEG
24636: PUSH
24637: LD_INT 1
24639: PUSH
24640: EMPTY
24641: LIST
24642: LIST
24643: PUSH
24644: LD_INT 3
24646: NEG
24647: PUSH
24648: LD_INT 1
24650: PUSH
24651: EMPTY
24652: LIST
24653: LIST
24654: PUSH
24655: LD_INT 4
24657: NEG
24658: PUSH
24659: LD_INT 0
24661: PUSH
24662: EMPTY
24663: LIST
24664: LIST
24665: PUSH
24666: LD_INT 4
24668: NEG
24669: PUSH
24670: LD_INT 1
24672: NEG
24673: PUSH
24674: EMPTY
24675: LIST
24676: LIST
24677: PUSH
24678: LD_INT 4
24680: NEG
24681: PUSH
24682: LD_INT 2
24684: NEG
24685: PUSH
24686: EMPTY
24687: LIST
24688: LIST
24689: PUSH
24690: LD_INT 2
24692: NEG
24693: PUSH
24694: LD_INT 2
24696: PUSH
24697: EMPTY
24698: LIST
24699: LIST
24700: PUSH
24701: LD_INT 4
24703: NEG
24704: PUSH
24705: LD_INT 4
24707: NEG
24708: PUSH
24709: EMPTY
24710: LIST
24711: LIST
24712: PUSH
24713: LD_INT 4
24715: NEG
24716: PUSH
24717: LD_INT 5
24719: NEG
24720: PUSH
24721: EMPTY
24722: LIST
24723: LIST
24724: PUSH
24725: LD_INT 3
24727: NEG
24728: PUSH
24729: LD_INT 4
24731: NEG
24732: PUSH
24733: EMPTY
24734: LIST
24735: LIST
24736: PUSH
24737: LD_INT 3
24739: NEG
24740: PUSH
24741: LD_INT 3
24743: NEG
24744: PUSH
24745: EMPTY
24746: LIST
24747: LIST
24748: PUSH
24749: LD_INT 4
24751: NEG
24752: PUSH
24753: LD_INT 3
24755: NEG
24756: PUSH
24757: EMPTY
24758: LIST
24759: LIST
24760: PUSH
24761: LD_INT 5
24763: NEG
24764: PUSH
24765: LD_INT 4
24767: NEG
24768: PUSH
24769: EMPTY
24770: LIST
24771: LIST
24772: PUSH
24773: LD_INT 5
24775: NEG
24776: PUSH
24777: LD_INT 5
24779: NEG
24780: PUSH
24781: EMPTY
24782: LIST
24783: LIST
24784: PUSH
24785: LD_INT 3
24787: NEG
24788: PUSH
24789: LD_INT 5
24791: NEG
24792: PUSH
24793: EMPTY
24794: LIST
24795: LIST
24796: PUSH
24797: LD_INT 5
24799: NEG
24800: PUSH
24801: LD_INT 3
24803: NEG
24804: PUSH
24805: EMPTY
24806: LIST
24807: LIST
24808: PUSH
24809: LD_INT 0
24811: PUSH
24812: LD_INT 3
24814: NEG
24815: PUSH
24816: EMPTY
24817: LIST
24818: LIST
24819: PUSH
24820: LD_INT 0
24822: PUSH
24823: LD_INT 4
24825: NEG
24826: PUSH
24827: EMPTY
24828: LIST
24829: LIST
24830: PUSH
24831: LD_INT 1
24833: PUSH
24834: LD_INT 3
24836: NEG
24837: PUSH
24838: EMPTY
24839: LIST
24840: LIST
24841: PUSH
24842: LD_INT 1
24844: PUSH
24845: LD_INT 2
24847: NEG
24848: PUSH
24849: EMPTY
24850: LIST
24851: LIST
24852: PUSH
24853: LD_INT 0
24855: PUSH
24856: LD_INT 2
24858: NEG
24859: PUSH
24860: EMPTY
24861: LIST
24862: LIST
24863: PUSH
24864: LD_INT 1
24866: NEG
24867: PUSH
24868: LD_INT 3
24870: NEG
24871: PUSH
24872: EMPTY
24873: LIST
24874: LIST
24875: PUSH
24876: LD_INT 1
24878: NEG
24879: PUSH
24880: LD_INT 4
24882: NEG
24883: PUSH
24884: EMPTY
24885: LIST
24886: LIST
24887: PUSH
24888: LD_INT 2
24890: PUSH
24891: LD_INT 2
24893: NEG
24894: PUSH
24895: EMPTY
24896: LIST
24897: LIST
24898: PUSH
24899: LD_INT 2
24901: NEG
24902: PUSH
24903: LD_INT 4
24905: NEG
24906: PUSH
24907: EMPTY
24908: LIST
24909: LIST
24910: PUSH
24911: LD_INT 4
24913: PUSH
24914: LD_INT 0
24916: PUSH
24917: EMPTY
24918: LIST
24919: LIST
24920: PUSH
24921: LD_INT 4
24923: PUSH
24924: LD_INT 1
24926: NEG
24927: PUSH
24928: EMPTY
24929: LIST
24930: LIST
24931: PUSH
24932: LD_INT 5
24934: PUSH
24935: LD_INT 0
24937: PUSH
24938: EMPTY
24939: LIST
24940: LIST
24941: PUSH
24942: LD_INT 5
24944: PUSH
24945: LD_INT 1
24947: PUSH
24948: EMPTY
24949: LIST
24950: LIST
24951: PUSH
24952: LD_INT 4
24954: PUSH
24955: LD_INT 1
24957: PUSH
24958: EMPTY
24959: LIST
24960: LIST
24961: PUSH
24962: LD_INT 3
24964: PUSH
24965: LD_INT 0
24967: PUSH
24968: EMPTY
24969: LIST
24970: LIST
24971: PUSH
24972: LD_INT 3
24974: PUSH
24975: LD_INT 1
24977: NEG
24978: PUSH
24979: EMPTY
24980: LIST
24981: LIST
24982: PUSH
24983: LD_INT 3
24985: PUSH
24986: LD_INT 2
24988: NEG
24989: PUSH
24990: EMPTY
24991: LIST
24992: LIST
24993: PUSH
24994: LD_INT 5
24996: PUSH
24997: LD_INT 2
24999: PUSH
25000: EMPTY
25001: LIST
25002: LIST
25003: PUSH
25004: EMPTY
25005: LIST
25006: LIST
25007: LIST
25008: LIST
25009: LIST
25010: LIST
25011: LIST
25012: LIST
25013: LIST
25014: LIST
25015: LIST
25016: LIST
25017: LIST
25018: LIST
25019: LIST
25020: LIST
25021: LIST
25022: LIST
25023: LIST
25024: LIST
25025: LIST
25026: LIST
25027: LIST
25028: LIST
25029: LIST
25030: LIST
25031: LIST
25032: LIST
25033: LIST
25034: LIST
25035: LIST
25036: LIST
25037: LIST
25038: LIST
25039: LIST
25040: LIST
25041: LIST
25042: LIST
25043: LIST
25044: LIST
25045: LIST
25046: LIST
25047: LIST
25048: LIST
25049: LIST
25050: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
25051: LD_ADDR_VAR 0 32
25055: PUSH
25056: LD_INT 4
25058: NEG
25059: PUSH
25060: LD_INT 0
25062: PUSH
25063: EMPTY
25064: LIST
25065: LIST
25066: PUSH
25067: LD_INT 4
25069: NEG
25070: PUSH
25071: LD_INT 1
25073: NEG
25074: PUSH
25075: EMPTY
25076: LIST
25077: LIST
25078: PUSH
25079: LD_INT 3
25081: NEG
25082: PUSH
25083: LD_INT 0
25085: PUSH
25086: EMPTY
25087: LIST
25088: LIST
25089: PUSH
25090: LD_INT 3
25092: NEG
25093: PUSH
25094: LD_INT 1
25096: PUSH
25097: EMPTY
25098: LIST
25099: LIST
25100: PUSH
25101: LD_INT 4
25103: NEG
25104: PUSH
25105: LD_INT 1
25107: PUSH
25108: EMPTY
25109: LIST
25110: LIST
25111: PUSH
25112: LD_INT 5
25114: NEG
25115: PUSH
25116: LD_INT 0
25118: PUSH
25119: EMPTY
25120: LIST
25121: LIST
25122: PUSH
25123: LD_INT 5
25125: NEG
25126: PUSH
25127: LD_INT 1
25129: NEG
25130: PUSH
25131: EMPTY
25132: LIST
25133: LIST
25134: PUSH
25135: LD_INT 5
25137: NEG
25138: PUSH
25139: LD_INT 2
25141: NEG
25142: PUSH
25143: EMPTY
25144: LIST
25145: LIST
25146: PUSH
25147: LD_INT 3
25149: NEG
25150: PUSH
25151: LD_INT 2
25153: PUSH
25154: EMPTY
25155: LIST
25156: LIST
25157: PUSH
25158: LD_INT 3
25160: NEG
25161: PUSH
25162: LD_INT 3
25164: NEG
25165: PUSH
25166: EMPTY
25167: LIST
25168: LIST
25169: PUSH
25170: LD_INT 3
25172: NEG
25173: PUSH
25174: LD_INT 4
25176: NEG
25177: PUSH
25178: EMPTY
25179: LIST
25180: LIST
25181: PUSH
25182: LD_INT 2
25184: NEG
25185: PUSH
25186: LD_INT 3
25188: NEG
25189: PUSH
25190: EMPTY
25191: LIST
25192: LIST
25193: PUSH
25194: LD_INT 2
25196: NEG
25197: PUSH
25198: LD_INT 2
25200: NEG
25201: PUSH
25202: EMPTY
25203: LIST
25204: LIST
25205: PUSH
25206: LD_INT 3
25208: NEG
25209: PUSH
25210: LD_INT 2
25212: NEG
25213: PUSH
25214: EMPTY
25215: LIST
25216: LIST
25217: PUSH
25218: LD_INT 4
25220: NEG
25221: PUSH
25222: LD_INT 3
25224: NEG
25225: PUSH
25226: EMPTY
25227: LIST
25228: LIST
25229: PUSH
25230: LD_INT 4
25232: NEG
25233: PUSH
25234: LD_INT 4
25236: NEG
25237: PUSH
25238: EMPTY
25239: LIST
25240: LIST
25241: PUSH
25242: LD_INT 2
25244: NEG
25245: PUSH
25246: LD_INT 4
25248: NEG
25249: PUSH
25250: EMPTY
25251: LIST
25252: LIST
25253: PUSH
25254: LD_INT 4
25256: NEG
25257: PUSH
25258: LD_INT 2
25260: NEG
25261: PUSH
25262: EMPTY
25263: LIST
25264: LIST
25265: PUSH
25266: LD_INT 0
25268: PUSH
25269: LD_INT 4
25271: NEG
25272: PUSH
25273: EMPTY
25274: LIST
25275: LIST
25276: PUSH
25277: LD_INT 0
25279: PUSH
25280: LD_INT 5
25282: NEG
25283: PUSH
25284: EMPTY
25285: LIST
25286: LIST
25287: PUSH
25288: LD_INT 1
25290: PUSH
25291: LD_INT 4
25293: NEG
25294: PUSH
25295: EMPTY
25296: LIST
25297: LIST
25298: PUSH
25299: LD_INT 1
25301: PUSH
25302: LD_INT 3
25304: NEG
25305: PUSH
25306: EMPTY
25307: LIST
25308: LIST
25309: PUSH
25310: LD_INT 0
25312: PUSH
25313: LD_INT 3
25315: NEG
25316: PUSH
25317: EMPTY
25318: LIST
25319: LIST
25320: PUSH
25321: LD_INT 1
25323: NEG
25324: PUSH
25325: LD_INT 4
25327: NEG
25328: PUSH
25329: EMPTY
25330: LIST
25331: LIST
25332: PUSH
25333: LD_INT 1
25335: NEG
25336: PUSH
25337: LD_INT 5
25339: NEG
25340: PUSH
25341: EMPTY
25342: LIST
25343: LIST
25344: PUSH
25345: LD_INT 2
25347: PUSH
25348: LD_INT 3
25350: NEG
25351: PUSH
25352: EMPTY
25353: LIST
25354: LIST
25355: PUSH
25356: LD_INT 2
25358: NEG
25359: PUSH
25360: LD_INT 5
25362: NEG
25363: PUSH
25364: EMPTY
25365: LIST
25366: LIST
25367: PUSH
25368: LD_INT 3
25370: PUSH
25371: LD_INT 0
25373: PUSH
25374: EMPTY
25375: LIST
25376: LIST
25377: PUSH
25378: LD_INT 3
25380: PUSH
25381: LD_INT 1
25383: NEG
25384: PUSH
25385: EMPTY
25386: LIST
25387: LIST
25388: PUSH
25389: LD_INT 4
25391: PUSH
25392: LD_INT 0
25394: PUSH
25395: EMPTY
25396: LIST
25397: LIST
25398: PUSH
25399: LD_INT 4
25401: PUSH
25402: LD_INT 1
25404: PUSH
25405: EMPTY
25406: LIST
25407: LIST
25408: PUSH
25409: LD_INT 3
25411: PUSH
25412: LD_INT 1
25414: PUSH
25415: EMPTY
25416: LIST
25417: LIST
25418: PUSH
25419: LD_INT 2
25421: PUSH
25422: LD_INT 0
25424: PUSH
25425: EMPTY
25426: LIST
25427: LIST
25428: PUSH
25429: LD_INT 2
25431: PUSH
25432: LD_INT 1
25434: NEG
25435: PUSH
25436: EMPTY
25437: LIST
25438: LIST
25439: PUSH
25440: LD_INT 2
25442: PUSH
25443: LD_INT 2
25445: NEG
25446: PUSH
25447: EMPTY
25448: LIST
25449: LIST
25450: PUSH
25451: LD_INT 4
25453: PUSH
25454: LD_INT 2
25456: PUSH
25457: EMPTY
25458: LIST
25459: LIST
25460: PUSH
25461: LD_INT 4
25463: PUSH
25464: LD_INT 4
25466: PUSH
25467: EMPTY
25468: LIST
25469: LIST
25470: PUSH
25471: LD_INT 4
25473: PUSH
25474: LD_INT 3
25476: PUSH
25477: EMPTY
25478: LIST
25479: LIST
25480: PUSH
25481: LD_INT 5
25483: PUSH
25484: LD_INT 4
25486: PUSH
25487: EMPTY
25488: LIST
25489: LIST
25490: PUSH
25491: LD_INT 5
25493: PUSH
25494: LD_INT 5
25496: PUSH
25497: EMPTY
25498: LIST
25499: LIST
25500: PUSH
25501: LD_INT 4
25503: PUSH
25504: LD_INT 5
25506: PUSH
25507: EMPTY
25508: LIST
25509: LIST
25510: PUSH
25511: LD_INT 3
25513: PUSH
25514: LD_INT 4
25516: PUSH
25517: EMPTY
25518: LIST
25519: LIST
25520: PUSH
25521: LD_INT 3
25523: PUSH
25524: LD_INT 3
25526: PUSH
25527: EMPTY
25528: LIST
25529: LIST
25530: PUSH
25531: LD_INT 5
25533: PUSH
25534: LD_INT 3
25536: PUSH
25537: EMPTY
25538: LIST
25539: LIST
25540: PUSH
25541: LD_INT 3
25543: PUSH
25544: LD_INT 5
25546: PUSH
25547: EMPTY
25548: LIST
25549: LIST
25550: PUSH
25551: EMPTY
25552: LIST
25553: LIST
25554: LIST
25555: LIST
25556: LIST
25557: LIST
25558: LIST
25559: LIST
25560: LIST
25561: LIST
25562: LIST
25563: LIST
25564: LIST
25565: LIST
25566: LIST
25567: LIST
25568: LIST
25569: LIST
25570: LIST
25571: LIST
25572: LIST
25573: LIST
25574: LIST
25575: LIST
25576: LIST
25577: LIST
25578: LIST
25579: LIST
25580: LIST
25581: LIST
25582: LIST
25583: LIST
25584: LIST
25585: LIST
25586: LIST
25587: LIST
25588: LIST
25589: LIST
25590: LIST
25591: LIST
25592: LIST
25593: LIST
25594: LIST
25595: LIST
25596: LIST
25597: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25598: LD_ADDR_VAR 0 33
25602: PUSH
25603: LD_INT 4
25605: NEG
25606: PUSH
25607: LD_INT 4
25609: NEG
25610: PUSH
25611: EMPTY
25612: LIST
25613: LIST
25614: PUSH
25615: LD_INT 4
25617: NEG
25618: PUSH
25619: LD_INT 5
25621: NEG
25622: PUSH
25623: EMPTY
25624: LIST
25625: LIST
25626: PUSH
25627: LD_INT 3
25629: NEG
25630: PUSH
25631: LD_INT 4
25633: NEG
25634: PUSH
25635: EMPTY
25636: LIST
25637: LIST
25638: PUSH
25639: LD_INT 3
25641: NEG
25642: PUSH
25643: LD_INT 3
25645: NEG
25646: PUSH
25647: EMPTY
25648: LIST
25649: LIST
25650: PUSH
25651: LD_INT 4
25653: NEG
25654: PUSH
25655: LD_INT 3
25657: NEG
25658: PUSH
25659: EMPTY
25660: LIST
25661: LIST
25662: PUSH
25663: LD_INT 5
25665: NEG
25666: PUSH
25667: LD_INT 4
25669: NEG
25670: PUSH
25671: EMPTY
25672: LIST
25673: LIST
25674: PUSH
25675: LD_INT 5
25677: NEG
25678: PUSH
25679: LD_INT 5
25681: NEG
25682: PUSH
25683: EMPTY
25684: LIST
25685: LIST
25686: PUSH
25687: LD_INT 3
25689: NEG
25690: PUSH
25691: LD_INT 5
25693: NEG
25694: PUSH
25695: EMPTY
25696: LIST
25697: LIST
25698: PUSH
25699: LD_INT 5
25701: NEG
25702: PUSH
25703: LD_INT 3
25705: NEG
25706: PUSH
25707: EMPTY
25708: LIST
25709: LIST
25710: PUSH
25711: LD_INT 0
25713: PUSH
25714: LD_INT 3
25716: NEG
25717: PUSH
25718: EMPTY
25719: LIST
25720: LIST
25721: PUSH
25722: LD_INT 0
25724: PUSH
25725: LD_INT 4
25727: NEG
25728: PUSH
25729: EMPTY
25730: LIST
25731: LIST
25732: PUSH
25733: LD_INT 1
25735: PUSH
25736: LD_INT 3
25738: NEG
25739: PUSH
25740: EMPTY
25741: LIST
25742: LIST
25743: PUSH
25744: LD_INT 1
25746: PUSH
25747: LD_INT 2
25749: NEG
25750: PUSH
25751: EMPTY
25752: LIST
25753: LIST
25754: PUSH
25755: LD_INT 0
25757: PUSH
25758: LD_INT 2
25760: NEG
25761: PUSH
25762: EMPTY
25763: LIST
25764: LIST
25765: PUSH
25766: LD_INT 1
25768: NEG
25769: PUSH
25770: LD_INT 3
25772: NEG
25773: PUSH
25774: EMPTY
25775: LIST
25776: LIST
25777: PUSH
25778: LD_INT 1
25780: NEG
25781: PUSH
25782: LD_INT 4
25784: NEG
25785: PUSH
25786: EMPTY
25787: LIST
25788: LIST
25789: PUSH
25790: LD_INT 2
25792: PUSH
25793: LD_INT 2
25795: NEG
25796: PUSH
25797: EMPTY
25798: LIST
25799: LIST
25800: PUSH
25801: LD_INT 2
25803: NEG
25804: PUSH
25805: LD_INT 4
25807: NEG
25808: PUSH
25809: EMPTY
25810: LIST
25811: LIST
25812: PUSH
25813: LD_INT 4
25815: PUSH
25816: LD_INT 0
25818: PUSH
25819: EMPTY
25820: LIST
25821: LIST
25822: PUSH
25823: LD_INT 4
25825: PUSH
25826: LD_INT 1
25828: NEG
25829: PUSH
25830: EMPTY
25831: LIST
25832: LIST
25833: PUSH
25834: LD_INT 5
25836: PUSH
25837: LD_INT 0
25839: PUSH
25840: EMPTY
25841: LIST
25842: LIST
25843: PUSH
25844: LD_INT 5
25846: PUSH
25847: LD_INT 1
25849: PUSH
25850: EMPTY
25851: LIST
25852: LIST
25853: PUSH
25854: LD_INT 4
25856: PUSH
25857: LD_INT 1
25859: PUSH
25860: EMPTY
25861: LIST
25862: LIST
25863: PUSH
25864: LD_INT 3
25866: PUSH
25867: LD_INT 0
25869: PUSH
25870: EMPTY
25871: LIST
25872: LIST
25873: PUSH
25874: LD_INT 3
25876: PUSH
25877: LD_INT 1
25879: NEG
25880: PUSH
25881: EMPTY
25882: LIST
25883: LIST
25884: PUSH
25885: LD_INT 3
25887: PUSH
25888: LD_INT 2
25890: NEG
25891: PUSH
25892: EMPTY
25893: LIST
25894: LIST
25895: PUSH
25896: LD_INT 5
25898: PUSH
25899: LD_INT 2
25901: PUSH
25902: EMPTY
25903: LIST
25904: LIST
25905: PUSH
25906: LD_INT 3
25908: PUSH
25909: LD_INT 3
25911: PUSH
25912: EMPTY
25913: LIST
25914: LIST
25915: PUSH
25916: LD_INT 3
25918: PUSH
25919: LD_INT 2
25921: PUSH
25922: EMPTY
25923: LIST
25924: LIST
25925: PUSH
25926: LD_INT 4
25928: PUSH
25929: LD_INT 3
25931: PUSH
25932: EMPTY
25933: LIST
25934: LIST
25935: PUSH
25936: LD_INT 4
25938: PUSH
25939: LD_INT 4
25941: PUSH
25942: EMPTY
25943: LIST
25944: LIST
25945: PUSH
25946: LD_INT 3
25948: PUSH
25949: LD_INT 4
25951: PUSH
25952: EMPTY
25953: LIST
25954: LIST
25955: PUSH
25956: LD_INT 2
25958: PUSH
25959: LD_INT 3
25961: PUSH
25962: EMPTY
25963: LIST
25964: LIST
25965: PUSH
25966: LD_INT 2
25968: PUSH
25969: LD_INT 2
25971: PUSH
25972: EMPTY
25973: LIST
25974: LIST
25975: PUSH
25976: LD_INT 4
25978: PUSH
25979: LD_INT 2
25981: PUSH
25982: EMPTY
25983: LIST
25984: LIST
25985: PUSH
25986: LD_INT 2
25988: PUSH
25989: LD_INT 4
25991: PUSH
25992: EMPTY
25993: LIST
25994: LIST
25995: PUSH
25996: LD_INT 0
25998: PUSH
25999: LD_INT 4
26001: PUSH
26002: EMPTY
26003: LIST
26004: LIST
26005: PUSH
26006: LD_INT 0
26008: PUSH
26009: LD_INT 3
26011: PUSH
26012: EMPTY
26013: LIST
26014: LIST
26015: PUSH
26016: LD_INT 1
26018: PUSH
26019: LD_INT 4
26021: PUSH
26022: EMPTY
26023: LIST
26024: LIST
26025: PUSH
26026: LD_INT 1
26028: PUSH
26029: LD_INT 5
26031: PUSH
26032: EMPTY
26033: LIST
26034: LIST
26035: PUSH
26036: LD_INT 0
26038: PUSH
26039: LD_INT 5
26041: PUSH
26042: EMPTY
26043: LIST
26044: LIST
26045: PUSH
26046: LD_INT 1
26048: NEG
26049: PUSH
26050: LD_INT 4
26052: PUSH
26053: EMPTY
26054: LIST
26055: LIST
26056: PUSH
26057: LD_INT 1
26059: NEG
26060: PUSH
26061: LD_INT 3
26063: PUSH
26064: EMPTY
26065: LIST
26066: LIST
26067: PUSH
26068: LD_INT 2
26070: PUSH
26071: LD_INT 5
26073: PUSH
26074: EMPTY
26075: LIST
26076: LIST
26077: PUSH
26078: LD_INT 2
26080: NEG
26081: PUSH
26082: LD_INT 3
26084: PUSH
26085: EMPTY
26086: LIST
26087: LIST
26088: PUSH
26089: EMPTY
26090: LIST
26091: LIST
26092: LIST
26093: LIST
26094: LIST
26095: LIST
26096: LIST
26097: LIST
26098: LIST
26099: LIST
26100: LIST
26101: LIST
26102: LIST
26103: LIST
26104: LIST
26105: LIST
26106: LIST
26107: LIST
26108: LIST
26109: LIST
26110: LIST
26111: LIST
26112: LIST
26113: LIST
26114: LIST
26115: LIST
26116: LIST
26117: LIST
26118: LIST
26119: LIST
26120: LIST
26121: LIST
26122: LIST
26123: LIST
26124: LIST
26125: LIST
26126: LIST
26127: LIST
26128: LIST
26129: LIST
26130: LIST
26131: LIST
26132: LIST
26133: LIST
26134: LIST
26135: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
26136: LD_ADDR_VAR 0 34
26140: PUSH
26141: LD_INT 0
26143: PUSH
26144: LD_INT 4
26146: NEG
26147: PUSH
26148: EMPTY
26149: LIST
26150: LIST
26151: PUSH
26152: LD_INT 0
26154: PUSH
26155: LD_INT 5
26157: NEG
26158: PUSH
26159: EMPTY
26160: LIST
26161: LIST
26162: PUSH
26163: LD_INT 1
26165: PUSH
26166: LD_INT 4
26168: NEG
26169: PUSH
26170: EMPTY
26171: LIST
26172: LIST
26173: PUSH
26174: LD_INT 1
26176: PUSH
26177: LD_INT 3
26179: NEG
26180: PUSH
26181: EMPTY
26182: LIST
26183: LIST
26184: PUSH
26185: LD_INT 0
26187: PUSH
26188: LD_INT 3
26190: NEG
26191: PUSH
26192: EMPTY
26193: LIST
26194: LIST
26195: PUSH
26196: LD_INT 1
26198: NEG
26199: PUSH
26200: LD_INT 4
26202: NEG
26203: PUSH
26204: EMPTY
26205: LIST
26206: LIST
26207: PUSH
26208: LD_INT 1
26210: NEG
26211: PUSH
26212: LD_INT 5
26214: NEG
26215: PUSH
26216: EMPTY
26217: LIST
26218: LIST
26219: PUSH
26220: LD_INT 2
26222: PUSH
26223: LD_INT 3
26225: NEG
26226: PUSH
26227: EMPTY
26228: LIST
26229: LIST
26230: PUSH
26231: LD_INT 2
26233: NEG
26234: PUSH
26235: LD_INT 5
26237: NEG
26238: PUSH
26239: EMPTY
26240: LIST
26241: LIST
26242: PUSH
26243: LD_INT 3
26245: PUSH
26246: LD_INT 0
26248: PUSH
26249: EMPTY
26250: LIST
26251: LIST
26252: PUSH
26253: LD_INT 3
26255: PUSH
26256: LD_INT 1
26258: NEG
26259: PUSH
26260: EMPTY
26261: LIST
26262: LIST
26263: PUSH
26264: LD_INT 4
26266: PUSH
26267: LD_INT 0
26269: PUSH
26270: EMPTY
26271: LIST
26272: LIST
26273: PUSH
26274: LD_INT 4
26276: PUSH
26277: LD_INT 1
26279: PUSH
26280: EMPTY
26281: LIST
26282: LIST
26283: PUSH
26284: LD_INT 3
26286: PUSH
26287: LD_INT 1
26289: PUSH
26290: EMPTY
26291: LIST
26292: LIST
26293: PUSH
26294: LD_INT 2
26296: PUSH
26297: LD_INT 0
26299: PUSH
26300: EMPTY
26301: LIST
26302: LIST
26303: PUSH
26304: LD_INT 2
26306: PUSH
26307: LD_INT 1
26309: NEG
26310: PUSH
26311: EMPTY
26312: LIST
26313: LIST
26314: PUSH
26315: LD_INT 2
26317: PUSH
26318: LD_INT 2
26320: NEG
26321: PUSH
26322: EMPTY
26323: LIST
26324: LIST
26325: PUSH
26326: LD_INT 4
26328: PUSH
26329: LD_INT 2
26331: PUSH
26332: EMPTY
26333: LIST
26334: LIST
26335: PUSH
26336: LD_INT 4
26338: PUSH
26339: LD_INT 4
26341: PUSH
26342: EMPTY
26343: LIST
26344: LIST
26345: PUSH
26346: LD_INT 4
26348: PUSH
26349: LD_INT 3
26351: PUSH
26352: EMPTY
26353: LIST
26354: LIST
26355: PUSH
26356: LD_INT 5
26358: PUSH
26359: LD_INT 4
26361: PUSH
26362: EMPTY
26363: LIST
26364: LIST
26365: PUSH
26366: LD_INT 5
26368: PUSH
26369: LD_INT 5
26371: PUSH
26372: EMPTY
26373: LIST
26374: LIST
26375: PUSH
26376: LD_INT 4
26378: PUSH
26379: LD_INT 5
26381: PUSH
26382: EMPTY
26383: LIST
26384: LIST
26385: PUSH
26386: LD_INT 3
26388: PUSH
26389: LD_INT 4
26391: PUSH
26392: EMPTY
26393: LIST
26394: LIST
26395: PUSH
26396: LD_INT 3
26398: PUSH
26399: LD_INT 3
26401: PUSH
26402: EMPTY
26403: LIST
26404: LIST
26405: PUSH
26406: LD_INT 5
26408: PUSH
26409: LD_INT 3
26411: PUSH
26412: EMPTY
26413: LIST
26414: LIST
26415: PUSH
26416: LD_INT 3
26418: PUSH
26419: LD_INT 5
26421: PUSH
26422: EMPTY
26423: LIST
26424: LIST
26425: PUSH
26426: LD_INT 0
26428: PUSH
26429: LD_INT 3
26431: PUSH
26432: EMPTY
26433: LIST
26434: LIST
26435: PUSH
26436: LD_INT 0
26438: PUSH
26439: LD_INT 2
26441: PUSH
26442: EMPTY
26443: LIST
26444: LIST
26445: PUSH
26446: LD_INT 1
26448: PUSH
26449: LD_INT 3
26451: PUSH
26452: EMPTY
26453: LIST
26454: LIST
26455: PUSH
26456: LD_INT 1
26458: PUSH
26459: LD_INT 4
26461: PUSH
26462: EMPTY
26463: LIST
26464: LIST
26465: PUSH
26466: LD_INT 0
26468: PUSH
26469: LD_INT 4
26471: PUSH
26472: EMPTY
26473: LIST
26474: LIST
26475: PUSH
26476: LD_INT 1
26478: NEG
26479: PUSH
26480: LD_INT 3
26482: PUSH
26483: EMPTY
26484: LIST
26485: LIST
26486: PUSH
26487: LD_INT 1
26489: NEG
26490: PUSH
26491: LD_INT 2
26493: PUSH
26494: EMPTY
26495: LIST
26496: LIST
26497: PUSH
26498: LD_INT 2
26500: PUSH
26501: LD_INT 4
26503: PUSH
26504: EMPTY
26505: LIST
26506: LIST
26507: PUSH
26508: LD_INT 2
26510: NEG
26511: PUSH
26512: LD_INT 2
26514: PUSH
26515: EMPTY
26516: LIST
26517: LIST
26518: PUSH
26519: LD_INT 4
26521: NEG
26522: PUSH
26523: LD_INT 0
26525: PUSH
26526: EMPTY
26527: LIST
26528: LIST
26529: PUSH
26530: LD_INT 4
26532: NEG
26533: PUSH
26534: LD_INT 1
26536: NEG
26537: PUSH
26538: EMPTY
26539: LIST
26540: LIST
26541: PUSH
26542: LD_INT 3
26544: NEG
26545: PUSH
26546: LD_INT 0
26548: PUSH
26549: EMPTY
26550: LIST
26551: LIST
26552: PUSH
26553: LD_INT 3
26555: NEG
26556: PUSH
26557: LD_INT 1
26559: PUSH
26560: EMPTY
26561: LIST
26562: LIST
26563: PUSH
26564: LD_INT 4
26566: NEG
26567: PUSH
26568: LD_INT 1
26570: PUSH
26571: EMPTY
26572: LIST
26573: LIST
26574: PUSH
26575: LD_INT 5
26577: NEG
26578: PUSH
26579: LD_INT 0
26581: PUSH
26582: EMPTY
26583: LIST
26584: LIST
26585: PUSH
26586: LD_INT 5
26588: NEG
26589: PUSH
26590: LD_INT 1
26592: NEG
26593: PUSH
26594: EMPTY
26595: LIST
26596: LIST
26597: PUSH
26598: LD_INT 5
26600: NEG
26601: PUSH
26602: LD_INT 2
26604: NEG
26605: PUSH
26606: EMPTY
26607: LIST
26608: LIST
26609: PUSH
26610: LD_INT 3
26612: NEG
26613: PUSH
26614: LD_INT 2
26616: PUSH
26617: EMPTY
26618: LIST
26619: LIST
26620: PUSH
26621: EMPTY
26622: LIST
26623: LIST
26624: LIST
26625: LIST
26626: LIST
26627: LIST
26628: LIST
26629: LIST
26630: LIST
26631: LIST
26632: LIST
26633: LIST
26634: LIST
26635: LIST
26636: LIST
26637: LIST
26638: LIST
26639: LIST
26640: LIST
26641: LIST
26642: LIST
26643: LIST
26644: LIST
26645: LIST
26646: LIST
26647: LIST
26648: LIST
26649: LIST
26650: LIST
26651: LIST
26652: LIST
26653: LIST
26654: LIST
26655: LIST
26656: LIST
26657: LIST
26658: LIST
26659: LIST
26660: LIST
26661: LIST
26662: LIST
26663: LIST
26664: LIST
26665: LIST
26666: LIST
26667: ST_TO_ADDR
// end ; end ;
26668: GO 26671
26670: POP
// case btype of b_depot , b_warehouse :
26671: LD_VAR 0 1
26675: PUSH
26676: LD_INT 0
26678: DOUBLE
26679: EQUAL
26680: IFTRUE 26690
26682: LD_INT 1
26684: DOUBLE
26685: EQUAL
26686: IFTRUE 26690
26688: GO 26891
26690: POP
// case nation of nation_american :
26691: LD_VAR 0 5
26695: PUSH
26696: LD_INT 1
26698: DOUBLE
26699: EQUAL
26700: IFTRUE 26704
26702: GO 26760
26704: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26705: LD_ADDR_VAR 0 9
26709: PUSH
26710: LD_VAR 0 11
26714: PUSH
26715: LD_VAR 0 12
26719: PUSH
26720: LD_VAR 0 13
26724: PUSH
26725: LD_VAR 0 14
26729: PUSH
26730: LD_VAR 0 15
26734: PUSH
26735: LD_VAR 0 16
26739: PUSH
26740: EMPTY
26741: LIST
26742: LIST
26743: LIST
26744: LIST
26745: LIST
26746: LIST
26747: PUSH
26748: LD_VAR 0 4
26752: PUSH
26753: LD_INT 1
26755: PLUS
26756: ARRAY
26757: ST_TO_ADDR
26758: GO 26889
26760: LD_INT 2
26762: DOUBLE
26763: EQUAL
26764: IFTRUE 26768
26766: GO 26824
26768: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26769: LD_ADDR_VAR 0 9
26773: PUSH
26774: LD_VAR 0 17
26778: PUSH
26779: LD_VAR 0 18
26783: PUSH
26784: LD_VAR 0 19
26788: PUSH
26789: LD_VAR 0 20
26793: PUSH
26794: LD_VAR 0 21
26798: PUSH
26799: LD_VAR 0 22
26803: PUSH
26804: EMPTY
26805: LIST
26806: LIST
26807: LIST
26808: LIST
26809: LIST
26810: LIST
26811: PUSH
26812: LD_VAR 0 4
26816: PUSH
26817: LD_INT 1
26819: PLUS
26820: ARRAY
26821: ST_TO_ADDR
26822: GO 26889
26824: LD_INT 3
26826: DOUBLE
26827: EQUAL
26828: IFTRUE 26832
26830: GO 26888
26832: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26833: LD_ADDR_VAR 0 9
26837: PUSH
26838: LD_VAR 0 23
26842: PUSH
26843: LD_VAR 0 24
26847: PUSH
26848: LD_VAR 0 25
26852: PUSH
26853: LD_VAR 0 26
26857: PUSH
26858: LD_VAR 0 27
26862: PUSH
26863: LD_VAR 0 28
26867: PUSH
26868: EMPTY
26869: LIST
26870: LIST
26871: LIST
26872: LIST
26873: LIST
26874: LIST
26875: PUSH
26876: LD_VAR 0 4
26880: PUSH
26881: LD_INT 1
26883: PLUS
26884: ARRAY
26885: ST_TO_ADDR
26886: GO 26889
26888: POP
26889: GO 27438
26891: LD_INT 2
26893: DOUBLE
26894: EQUAL
26895: IFTRUE 26905
26897: LD_INT 3
26899: DOUBLE
26900: EQUAL
26901: IFTRUE 26905
26903: GO 26961
26905: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26906: LD_ADDR_VAR 0 9
26910: PUSH
26911: LD_VAR 0 29
26915: PUSH
26916: LD_VAR 0 30
26920: PUSH
26921: LD_VAR 0 31
26925: PUSH
26926: LD_VAR 0 32
26930: PUSH
26931: LD_VAR 0 33
26935: PUSH
26936: LD_VAR 0 34
26940: PUSH
26941: EMPTY
26942: LIST
26943: LIST
26944: LIST
26945: LIST
26946: LIST
26947: LIST
26948: PUSH
26949: LD_VAR 0 4
26953: PUSH
26954: LD_INT 1
26956: PLUS
26957: ARRAY
26958: ST_TO_ADDR
26959: GO 27438
26961: LD_INT 16
26963: DOUBLE
26964: EQUAL
26965: IFTRUE 27017
26967: LD_INT 17
26969: DOUBLE
26970: EQUAL
26971: IFTRUE 27017
26973: LD_INT 18
26975: DOUBLE
26976: EQUAL
26977: IFTRUE 27017
26979: LD_INT 19
26981: DOUBLE
26982: EQUAL
26983: IFTRUE 27017
26985: LD_INT 20
26987: DOUBLE
26988: EQUAL
26989: IFTRUE 27017
26991: LD_INT 21
26993: DOUBLE
26994: EQUAL
26995: IFTRUE 27017
26997: LD_INT 23
26999: DOUBLE
27000: EQUAL
27001: IFTRUE 27017
27003: LD_INT 24
27005: DOUBLE
27006: EQUAL
27007: IFTRUE 27017
27009: LD_INT 25
27011: DOUBLE
27012: EQUAL
27013: IFTRUE 27017
27015: GO 27073
27017: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
27018: LD_ADDR_VAR 0 9
27022: PUSH
27023: LD_VAR 0 35
27027: PUSH
27028: LD_VAR 0 36
27032: PUSH
27033: LD_VAR 0 37
27037: PUSH
27038: LD_VAR 0 38
27042: PUSH
27043: LD_VAR 0 39
27047: PUSH
27048: LD_VAR 0 40
27052: PUSH
27053: EMPTY
27054: LIST
27055: LIST
27056: LIST
27057: LIST
27058: LIST
27059: LIST
27060: PUSH
27061: LD_VAR 0 4
27065: PUSH
27066: LD_INT 1
27068: PLUS
27069: ARRAY
27070: ST_TO_ADDR
27071: GO 27438
27073: LD_INT 6
27075: DOUBLE
27076: EQUAL
27077: IFTRUE 27129
27079: LD_INT 7
27081: DOUBLE
27082: EQUAL
27083: IFTRUE 27129
27085: LD_INT 8
27087: DOUBLE
27088: EQUAL
27089: IFTRUE 27129
27091: LD_INT 13
27093: DOUBLE
27094: EQUAL
27095: IFTRUE 27129
27097: LD_INT 12
27099: DOUBLE
27100: EQUAL
27101: IFTRUE 27129
27103: LD_INT 15
27105: DOUBLE
27106: EQUAL
27107: IFTRUE 27129
27109: LD_INT 11
27111: DOUBLE
27112: EQUAL
27113: IFTRUE 27129
27115: LD_INT 14
27117: DOUBLE
27118: EQUAL
27119: IFTRUE 27129
27121: LD_INT 10
27123: DOUBLE
27124: EQUAL
27125: IFTRUE 27129
27127: GO 27185
27129: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
27130: LD_ADDR_VAR 0 9
27134: PUSH
27135: LD_VAR 0 41
27139: PUSH
27140: LD_VAR 0 42
27144: PUSH
27145: LD_VAR 0 43
27149: PUSH
27150: LD_VAR 0 44
27154: PUSH
27155: LD_VAR 0 45
27159: PUSH
27160: LD_VAR 0 46
27164: PUSH
27165: EMPTY
27166: LIST
27167: LIST
27168: LIST
27169: LIST
27170: LIST
27171: LIST
27172: PUSH
27173: LD_VAR 0 4
27177: PUSH
27178: LD_INT 1
27180: PLUS
27181: ARRAY
27182: ST_TO_ADDR
27183: GO 27438
27185: LD_INT 36
27187: DOUBLE
27188: EQUAL
27189: IFTRUE 27193
27191: GO 27249
27193: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
27194: LD_ADDR_VAR 0 9
27198: PUSH
27199: LD_VAR 0 47
27203: PUSH
27204: LD_VAR 0 48
27208: PUSH
27209: LD_VAR 0 49
27213: PUSH
27214: LD_VAR 0 50
27218: PUSH
27219: LD_VAR 0 51
27223: PUSH
27224: LD_VAR 0 52
27228: PUSH
27229: EMPTY
27230: LIST
27231: LIST
27232: LIST
27233: LIST
27234: LIST
27235: LIST
27236: PUSH
27237: LD_VAR 0 4
27241: PUSH
27242: LD_INT 1
27244: PLUS
27245: ARRAY
27246: ST_TO_ADDR
27247: GO 27438
27249: LD_INT 4
27251: DOUBLE
27252: EQUAL
27253: IFTRUE 27275
27255: LD_INT 5
27257: DOUBLE
27258: EQUAL
27259: IFTRUE 27275
27261: LD_INT 34
27263: DOUBLE
27264: EQUAL
27265: IFTRUE 27275
27267: LD_INT 37
27269: DOUBLE
27270: EQUAL
27271: IFTRUE 27275
27273: GO 27331
27275: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
27276: LD_ADDR_VAR 0 9
27280: PUSH
27281: LD_VAR 0 53
27285: PUSH
27286: LD_VAR 0 54
27290: PUSH
27291: LD_VAR 0 55
27295: PUSH
27296: LD_VAR 0 56
27300: PUSH
27301: LD_VAR 0 57
27305: PUSH
27306: LD_VAR 0 58
27310: PUSH
27311: EMPTY
27312: LIST
27313: LIST
27314: LIST
27315: LIST
27316: LIST
27317: LIST
27318: PUSH
27319: LD_VAR 0 4
27323: PUSH
27324: LD_INT 1
27326: PLUS
27327: ARRAY
27328: ST_TO_ADDR
27329: GO 27438
27331: LD_INT 31
27333: DOUBLE
27334: EQUAL
27335: IFTRUE 27381
27337: LD_INT 32
27339: DOUBLE
27340: EQUAL
27341: IFTRUE 27381
27343: LD_INT 33
27345: DOUBLE
27346: EQUAL
27347: IFTRUE 27381
27349: LD_INT 27
27351: DOUBLE
27352: EQUAL
27353: IFTRUE 27381
27355: LD_INT 26
27357: DOUBLE
27358: EQUAL
27359: IFTRUE 27381
27361: LD_INT 28
27363: DOUBLE
27364: EQUAL
27365: IFTRUE 27381
27367: LD_INT 29
27369: DOUBLE
27370: EQUAL
27371: IFTRUE 27381
27373: LD_INT 30
27375: DOUBLE
27376: EQUAL
27377: IFTRUE 27381
27379: GO 27437
27381: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
27382: LD_ADDR_VAR 0 9
27386: PUSH
27387: LD_VAR 0 59
27391: PUSH
27392: LD_VAR 0 60
27396: PUSH
27397: LD_VAR 0 61
27401: PUSH
27402: LD_VAR 0 62
27406: PUSH
27407: LD_VAR 0 63
27411: PUSH
27412: LD_VAR 0 64
27416: PUSH
27417: EMPTY
27418: LIST
27419: LIST
27420: LIST
27421: LIST
27422: LIST
27423: LIST
27424: PUSH
27425: LD_VAR 0 4
27429: PUSH
27430: LD_INT 1
27432: PLUS
27433: ARRAY
27434: ST_TO_ADDR
27435: GO 27438
27437: POP
// temp_list2 = [ ] ;
27438: LD_ADDR_VAR 0 10
27442: PUSH
27443: EMPTY
27444: ST_TO_ADDR
// for i in temp_list do
27445: LD_ADDR_VAR 0 8
27449: PUSH
27450: LD_VAR 0 9
27454: PUSH
27455: FOR_IN
27456: IFFALSE 27508
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27458: LD_ADDR_VAR 0 10
27462: PUSH
27463: LD_VAR 0 10
27467: PUSH
27468: LD_VAR 0 8
27472: PUSH
27473: LD_INT 1
27475: ARRAY
27476: PUSH
27477: LD_VAR 0 2
27481: PLUS
27482: PUSH
27483: LD_VAR 0 8
27487: PUSH
27488: LD_INT 2
27490: ARRAY
27491: PUSH
27492: LD_VAR 0 3
27496: PLUS
27497: PUSH
27498: EMPTY
27499: LIST
27500: LIST
27501: PUSH
27502: EMPTY
27503: LIST
27504: ADD
27505: ST_TO_ADDR
27506: GO 27455
27508: POP
27509: POP
// result = temp_list2 ;
27510: LD_ADDR_VAR 0 7
27514: PUSH
27515: LD_VAR 0 10
27519: ST_TO_ADDR
// end ;
27520: LD_VAR 0 7
27524: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27525: LD_INT 0
27527: PPUSH
27528: PPUSH
27529: PPUSH
// result := false ;
27530: LD_ADDR_VAR 0 4
27534: PUSH
27535: LD_INT 0
27537: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27538: LD_VAR 0 1
27542: NOT
27543: PUSH
27544: LD_VAR 0 2
27548: NOT
27549: OR
27550: PUSH
27551: LD_VAR 0 1
27555: PPUSH
27556: CALL_OW 310
27560: OR
27561: IFFALSE 27565
// exit ;
27563: GO 27769
// if distance < 0 then
27565: LD_VAR 0 3
27569: PUSH
27570: LD_INT 0
27572: LESS
27573: IFFALSE 27583
// distance := 0 ;
27575: LD_ADDR_VAR 0 3
27579: PUSH
27580: LD_INT 0
27582: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27583: LD_ADDR_VAR 0 6
27587: PUSH
27588: LD_VAR 0 2
27592: PPUSH
27593: CALL_OW 266
27597: PPUSH
27598: LD_VAR 0 2
27602: PPUSH
27603: CALL_OW 250
27607: PPUSH
27608: LD_VAR 0 2
27612: PPUSH
27613: CALL_OW 251
27617: PPUSH
27618: LD_VAR 0 2
27622: PPUSH
27623: CALL_OW 254
27627: PPUSH
27628: LD_VAR 0 2
27632: PPUSH
27633: CALL_OW 248
27637: PPUSH
27638: LD_INT 1
27640: PPUSH
27641: CALL 8986 0 6
27645: ST_TO_ADDR
// if not entrance then
27646: LD_VAR 0 6
27650: NOT
27651: IFFALSE 27655
// exit ;
27653: GO 27769
// for i in entrance do
27655: LD_ADDR_VAR 0 5
27659: PUSH
27660: LD_VAR 0 6
27664: PUSH
27665: FOR_IN
27666: IFFALSE 27767
// begin if not distance then
27668: LD_VAR 0 3
27672: NOT
27673: IFFALSE 27718
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27675: LD_VAR 0 1
27679: PPUSH
27680: LD_VAR 0 5
27684: PUSH
27685: LD_INT 1
27687: ARRAY
27688: PPUSH
27689: LD_VAR 0 5
27693: PUSH
27694: LD_INT 2
27696: ARRAY
27697: PPUSH
27698: CALL_OW 307
27702: IFFALSE 27716
// begin result := true ;
27704: LD_ADDR_VAR 0 4
27708: PUSH
27709: LD_INT 1
27711: ST_TO_ADDR
// exit ;
27712: POP
27713: POP
27714: GO 27769
// end ; end else
27716: GO 27765
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27718: LD_VAR 0 1
27722: PPUSH
27723: LD_VAR 0 5
27727: PUSH
27728: LD_INT 1
27730: ARRAY
27731: PPUSH
27732: LD_VAR 0 5
27736: PUSH
27737: LD_INT 2
27739: ARRAY
27740: PPUSH
27741: CALL_OW 297
27745: PUSH
27746: LD_VAR 0 3
27750: LESSEQUAL
27751: IFFALSE 27765
// begin result := true ;
27753: LD_ADDR_VAR 0 4
27757: PUSH
27758: LD_INT 1
27760: ST_TO_ADDR
// exit ;
27761: POP
27762: POP
27763: GO 27769
// end ; end ; end ;
27765: GO 27665
27767: POP
27768: POP
// end ;
27769: LD_VAR 0 4
27773: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27774: LD_INT 0
27776: PPUSH
27777: PPUSH
27778: PPUSH
// result := false ;
27779: LD_ADDR_VAR 0 3
27783: PUSH
27784: LD_INT 0
27786: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27787: LD_VAR 0 1
27791: NOT
27792: PUSH
27793: LD_VAR 0 2
27797: NOT
27798: OR
27799: PUSH
27800: LD_VAR 0 1
27804: PPUSH
27805: CALL_OW 302
27809: NOT
27810: OR
27811: PUSH
27812: LD_VAR 0 2
27816: PPUSH
27817: CALL_OW 302
27821: NOT
27822: OR
27823: IFFALSE 27827
// exit ;
27825: GO 27988
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27827: LD_VAR 0 1
27831: PPUSH
27832: LD_INT 81
27834: PUSH
27835: LD_VAR 0 1
27839: PPUSH
27840: CALL_OW 255
27844: PUSH
27845: EMPTY
27846: LIST
27847: LIST
27848: PUSH
27849: LD_INT 3
27851: PUSH
27852: LD_INT 21
27854: PUSH
27855: LD_INT 3
27857: PUSH
27858: EMPTY
27859: LIST
27860: LIST
27861: PUSH
27862: EMPTY
27863: LIST
27864: LIST
27865: PUSH
27866: EMPTY
27867: LIST
27868: LIST
27869: PPUSH
27870: CALL_OW 69
27874: PPUSH
27875: LD_VAR 0 1
27879: PPUSH
27880: CALL_OW 74
27884: PPUSH
27885: CALL_OW 296
27889: PUSH
27890: LD_INT 8
27892: LESS
27893: IFFALSE 27897
// exit ;
27895: GO 27988
// building := IsInUnit ( unit2 ) ;
27897: LD_ADDR_VAR 0 5
27901: PUSH
27902: LD_VAR 0 2
27906: PPUSH
27907: CALL_OW 310
27911: ST_TO_ADDR
// if building then
27912: LD_VAR 0 5
27916: IFFALSE 27943
// result := IsNearbyEntrance ( unit , building , 2 ) else
27918: LD_ADDR_VAR 0 3
27922: PUSH
27923: LD_VAR 0 1
27927: PPUSH
27928: LD_VAR 0 5
27932: PPUSH
27933: LD_INT 2
27935: PPUSH
27936: CALL 27525 0 3
27940: ST_TO_ADDR
27941: GO 27988
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27943: LD_ADDR_VAR 0 3
27947: PUSH
27948: LD_VAR 0 1
27952: PPUSH
27953: LD_VAR 0 2
27957: PPUSH
27958: CALL_OW 296
27962: PUSH
27963: LD_INT 6
27965: LESS
27966: PUSH
27967: LD_VAR 0 2
27971: PPUSH
27972: CALL_OW 255
27976: PPUSH
27977: LD_VAR 0 1
27981: PPUSH
27982: CALL_OW 292
27986: AND
27987: ST_TO_ADDR
// end ;
27988: LD_VAR 0 3
27992: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27993: LD_INT 0
27995: PPUSH
27996: PPUSH
27997: PPUSH
27998: PPUSH
// tmp := [ ] ;
27999: LD_ADDR_VAR 0 3
28003: PUSH
28004: EMPTY
28005: ST_TO_ADDR
// list := [ ] ;
28006: LD_ADDR_VAR 0 5
28010: PUSH
28011: EMPTY
28012: ST_TO_ADDR
// for i = 16 to 25 do
28013: LD_ADDR_VAR 0 4
28017: PUSH
28018: DOUBLE
28019: LD_INT 16
28021: DEC
28022: ST_TO_ADDR
28023: LD_INT 25
28025: PUSH
28026: FOR_TO
28027: IFFALSE 28100
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
28029: LD_ADDR_VAR 0 3
28033: PUSH
28034: LD_VAR 0 3
28038: PUSH
28039: LD_INT 22
28041: PUSH
28042: LD_VAR 0 1
28046: PPUSH
28047: CALL_OW 255
28051: PUSH
28052: EMPTY
28053: LIST
28054: LIST
28055: PUSH
28056: LD_INT 91
28058: PUSH
28059: LD_VAR 0 1
28063: PUSH
28064: LD_INT 6
28066: PUSH
28067: EMPTY
28068: LIST
28069: LIST
28070: LIST
28071: PUSH
28072: LD_INT 30
28074: PUSH
28075: LD_VAR 0 4
28079: PUSH
28080: EMPTY
28081: LIST
28082: LIST
28083: PUSH
28084: EMPTY
28085: LIST
28086: LIST
28087: LIST
28088: PUSH
28089: EMPTY
28090: LIST
28091: PPUSH
28092: CALL_OW 69
28096: ADD
28097: ST_TO_ADDR
28098: GO 28026
28100: POP
28101: POP
// for i = 1 to tmp do
28102: LD_ADDR_VAR 0 4
28106: PUSH
28107: DOUBLE
28108: LD_INT 1
28110: DEC
28111: ST_TO_ADDR
28112: LD_VAR 0 3
28116: PUSH
28117: FOR_TO
28118: IFFALSE 28206
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
28120: LD_ADDR_VAR 0 5
28124: PUSH
28125: LD_VAR 0 5
28129: PUSH
28130: LD_VAR 0 3
28134: PUSH
28135: LD_VAR 0 4
28139: ARRAY
28140: PPUSH
28141: CALL_OW 266
28145: PUSH
28146: LD_VAR 0 3
28150: PUSH
28151: LD_VAR 0 4
28155: ARRAY
28156: PPUSH
28157: CALL_OW 250
28161: PUSH
28162: LD_VAR 0 3
28166: PUSH
28167: LD_VAR 0 4
28171: ARRAY
28172: PPUSH
28173: CALL_OW 251
28177: PUSH
28178: LD_VAR 0 3
28182: PUSH
28183: LD_VAR 0 4
28187: ARRAY
28188: PPUSH
28189: CALL_OW 254
28193: PUSH
28194: EMPTY
28195: LIST
28196: LIST
28197: LIST
28198: LIST
28199: PUSH
28200: EMPTY
28201: LIST
28202: ADD
28203: ST_TO_ADDR
28204: GO 28117
28206: POP
28207: POP
// result := list ;
28208: LD_ADDR_VAR 0 2
28212: PUSH
28213: LD_VAR 0 5
28217: ST_TO_ADDR
// end ;
28218: LD_VAR 0 2
28222: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
28223: LD_INT 0
28225: PPUSH
28226: PPUSH
28227: PPUSH
28228: PPUSH
28229: PPUSH
28230: PPUSH
28231: PPUSH
// if not factory then
28232: LD_VAR 0 1
28236: NOT
28237: IFFALSE 28241
// exit ;
28239: GO 28766
// if control = control_apeman then
28241: LD_VAR 0 4
28245: PUSH
28246: LD_INT 5
28248: EQUAL
28249: IFFALSE 28358
// begin tmp := UnitsInside ( factory ) ;
28251: LD_ADDR_VAR 0 8
28255: PUSH
28256: LD_VAR 0 1
28260: PPUSH
28261: CALL_OW 313
28265: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
28266: LD_VAR 0 8
28270: PPUSH
28271: LD_INT 25
28273: PUSH
28274: LD_INT 12
28276: PUSH
28277: EMPTY
28278: LIST
28279: LIST
28280: PPUSH
28281: CALL_OW 72
28285: NOT
28286: IFFALSE 28296
// control := control_manual ;
28288: LD_ADDR_VAR 0 4
28292: PUSH
28293: LD_INT 1
28295: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
28296: LD_ADDR_VAR 0 8
28300: PUSH
28301: LD_VAR 0 1
28305: PPUSH
28306: CALL 27993 0 1
28310: ST_TO_ADDR
// if tmp then
28311: LD_VAR 0 8
28315: IFFALSE 28358
// begin for i in tmp do
28317: LD_ADDR_VAR 0 7
28321: PUSH
28322: LD_VAR 0 8
28326: PUSH
28327: FOR_IN
28328: IFFALSE 28356
// if i [ 1 ] = b_ext_radar then
28330: LD_VAR 0 7
28334: PUSH
28335: LD_INT 1
28337: ARRAY
28338: PUSH
28339: LD_INT 20
28341: EQUAL
28342: IFFALSE 28354
// begin control := control_remote ;
28344: LD_ADDR_VAR 0 4
28348: PUSH
28349: LD_INT 2
28351: ST_TO_ADDR
// break ;
28352: GO 28356
// end ;
28354: GO 28327
28356: POP
28357: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28358: LD_VAR 0 1
28362: PPUSH
28363: LD_VAR 0 2
28367: PPUSH
28368: LD_VAR 0 3
28372: PPUSH
28373: LD_VAR 0 4
28377: PPUSH
28378: LD_VAR 0 5
28382: PPUSH
28383: CALL_OW 448
28387: IFFALSE 28422
// begin result := [ chassis , engine , control , weapon ] ;
28389: LD_ADDR_VAR 0 6
28393: PUSH
28394: LD_VAR 0 2
28398: PUSH
28399: LD_VAR 0 3
28403: PUSH
28404: LD_VAR 0 4
28408: PUSH
28409: LD_VAR 0 5
28413: PUSH
28414: EMPTY
28415: LIST
28416: LIST
28417: LIST
28418: LIST
28419: ST_TO_ADDR
// exit ;
28420: GO 28766
// end ; _chassis := AvailableChassisList ( factory ) ;
28422: LD_ADDR_VAR 0 9
28426: PUSH
28427: LD_VAR 0 1
28431: PPUSH
28432: CALL_OW 475
28436: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28437: LD_ADDR_VAR 0 11
28441: PUSH
28442: LD_VAR 0 1
28446: PPUSH
28447: CALL_OW 476
28451: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28452: LD_ADDR_VAR 0 12
28456: PUSH
28457: LD_VAR 0 1
28461: PPUSH
28462: CALL_OW 477
28466: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28467: LD_ADDR_VAR 0 10
28471: PUSH
28472: LD_VAR 0 1
28476: PPUSH
28477: CALL_OW 478
28481: ST_TO_ADDR
// if not chassis in _chassis then
28482: LD_VAR 0 2
28486: PUSH
28487: LD_VAR 0 9
28491: IN
28492: NOT
28493: IFFALSE 28519
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28495: LD_ADDR_VAR 0 2
28499: PUSH
28500: LD_VAR 0 9
28504: PUSH
28505: LD_INT 1
28507: PPUSH
28508: LD_VAR 0 9
28512: PPUSH
28513: CALL_OW 12
28517: ARRAY
28518: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28519: LD_VAR 0 2
28523: PPUSH
28524: LD_VAR 0 3
28528: PPUSH
28529: CALL 28771 0 2
28533: NOT
28534: IFFALSE 28593
// repeat engine := _engine [ 1 ] ;
28536: LD_ADDR_VAR 0 3
28540: PUSH
28541: LD_VAR 0 11
28545: PUSH
28546: LD_INT 1
28548: ARRAY
28549: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28550: LD_ADDR_VAR 0 11
28554: PUSH
28555: LD_VAR 0 11
28559: PPUSH
28560: LD_INT 1
28562: PPUSH
28563: CALL_OW 3
28567: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28568: LD_VAR 0 2
28572: PPUSH
28573: LD_VAR 0 3
28577: PPUSH
28578: CALL 28771 0 2
28582: PUSH
28583: LD_VAR 0 11
28587: PUSH
28588: EMPTY
28589: EQUAL
28590: OR
28591: IFFALSE 28536
// if not control in _control then
28593: LD_VAR 0 4
28597: PUSH
28598: LD_VAR 0 12
28602: IN
28603: NOT
28604: IFFALSE 28630
// control := _control [ rand ( 1 , _control ) ] ;
28606: LD_ADDR_VAR 0 4
28610: PUSH
28611: LD_VAR 0 12
28615: PUSH
28616: LD_INT 1
28618: PPUSH
28619: LD_VAR 0 12
28623: PPUSH
28624: CALL_OW 12
28628: ARRAY
28629: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28630: LD_VAR 0 2
28634: PPUSH
28635: LD_VAR 0 5
28639: PPUSH
28640: CALL 28991 0 2
28644: NOT
28645: IFFALSE 28704
// repeat weapon := _weapon [ 1 ] ;
28647: LD_ADDR_VAR 0 5
28651: PUSH
28652: LD_VAR 0 10
28656: PUSH
28657: LD_INT 1
28659: ARRAY
28660: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28661: LD_ADDR_VAR 0 10
28665: PUSH
28666: LD_VAR 0 10
28670: PPUSH
28671: LD_INT 1
28673: PPUSH
28674: CALL_OW 3
28678: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28679: LD_VAR 0 2
28683: PPUSH
28684: LD_VAR 0 5
28688: PPUSH
28689: CALL 28991 0 2
28693: PUSH
28694: LD_VAR 0 10
28698: PUSH
28699: EMPTY
28700: EQUAL
28701: OR
28702: IFFALSE 28647
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28704: LD_VAR 0 1
28708: PPUSH
28709: LD_VAR 0 2
28713: PPUSH
28714: LD_VAR 0 3
28718: PPUSH
28719: LD_VAR 0 4
28723: PPUSH
28724: LD_VAR 0 5
28728: PPUSH
28729: CALL_OW 448
28733: IFFALSE 28766
// result := [ chassis , engine , control , weapon ] ;
28735: LD_ADDR_VAR 0 6
28739: PUSH
28740: LD_VAR 0 2
28744: PUSH
28745: LD_VAR 0 3
28749: PUSH
28750: LD_VAR 0 4
28754: PUSH
28755: LD_VAR 0 5
28759: PUSH
28760: EMPTY
28761: LIST
28762: LIST
28763: LIST
28764: LIST
28765: ST_TO_ADDR
// end ;
28766: LD_VAR 0 6
28770: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28771: LD_INT 0
28773: PPUSH
// if not chassis or not engine then
28774: LD_VAR 0 1
28778: NOT
28779: PUSH
28780: LD_VAR 0 2
28784: NOT
28785: OR
28786: IFFALSE 28790
// exit ;
28788: GO 28986
// case engine of engine_solar :
28790: LD_VAR 0 2
28794: PUSH
28795: LD_INT 2
28797: DOUBLE
28798: EQUAL
28799: IFTRUE 28803
28801: GO 28841
28803: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28804: LD_ADDR_VAR 0 3
28808: PUSH
28809: LD_INT 11
28811: PUSH
28812: LD_INT 12
28814: PUSH
28815: LD_INT 13
28817: PUSH
28818: LD_INT 14
28820: PUSH
28821: LD_INT 1
28823: PUSH
28824: LD_INT 2
28826: PUSH
28827: LD_INT 3
28829: PUSH
28830: EMPTY
28831: LIST
28832: LIST
28833: LIST
28834: LIST
28835: LIST
28836: LIST
28837: LIST
28838: ST_TO_ADDR
28839: GO 28970
28841: LD_INT 1
28843: DOUBLE
28844: EQUAL
28845: IFTRUE 28849
28847: GO 28911
28849: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28850: LD_ADDR_VAR 0 3
28854: PUSH
28855: LD_INT 11
28857: PUSH
28858: LD_INT 12
28860: PUSH
28861: LD_INT 13
28863: PUSH
28864: LD_INT 14
28866: PUSH
28867: LD_INT 1
28869: PUSH
28870: LD_INT 2
28872: PUSH
28873: LD_INT 3
28875: PUSH
28876: LD_INT 4
28878: PUSH
28879: LD_INT 5
28881: PUSH
28882: LD_INT 21
28884: PUSH
28885: LD_INT 23
28887: PUSH
28888: LD_INT 22
28890: PUSH
28891: LD_INT 24
28893: PUSH
28894: EMPTY
28895: LIST
28896: LIST
28897: LIST
28898: LIST
28899: LIST
28900: LIST
28901: LIST
28902: LIST
28903: LIST
28904: LIST
28905: LIST
28906: LIST
28907: LIST
28908: ST_TO_ADDR
28909: GO 28970
28911: LD_INT 3
28913: DOUBLE
28914: EQUAL
28915: IFTRUE 28919
28917: GO 28969
28919: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28920: LD_ADDR_VAR 0 3
28924: PUSH
28925: LD_INT 13
28927: PUSH
28928: LD_INT 14
28930: PUSH
28931: LD_INT 2
28933: PUSH
28934: LD_INT 3
28936: PUSH
28937: LD_INT 4
28939: PUSH
28940: LD_INT 5
28942: PUSH
28943: LD_INT 21
28945: PUSH
28946: LD_INT 22
28948: PUSH
28949: LD_INT 23
28951: PUSH
28952: LD_INT 24
28954: PUSH
28955: EMPTY
28956: LIST
28957: LIST
28958: LIST
28959: LIST
28960: LIST
28961: LIST
28962: LIST
28963: LIST
28964: LIST
28965: LIST
28966: ST_TO_ADDR
28967: GO 28970
28969: POP
// result := ( chassis in result ) ;
28970: LD_ADDR_VAR 0 3
28974: PUSH
28975: LD_VAR 0 1
28979: PUSH
28980: LD_VAR 0 3
28984: IN
28985: ST_TO_ADDR
// end ;
28986: LD_VAR 0 3
28990: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28991: LD_INT 0
28993: PPUSH
// if not chassis or not weapon then
28994: LD_VAR 0 1
28998: NOT
28999: PUSH
29000: LD_VAR 0 2
29004: NOT
29005: OR
29006: IFFALSE 29010
// exit ;
29008: GO 30036
// case weapon of us_machine_gun :
29010: LD_VAR 0 2
29014: PUSH
29015: LD_INT 2
29017: DOUBLE
29018: EQUAL
29019: IFTRUE 29023
29021: GO 29053
29023: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
29024: LD_ADDR_VAR 0 3
29028: PUSH
29029: LD_INT 1
29031: PUSH
29032: LD_INT 2
29034: PUSH
29035: LD_INT 3
29037: PUSH
29038: LD_INT 4
29040: PUSH
29041: LD_INT 5
29043: PUSH
29044: EMPTY
29045: LIST
29046: LIST
29047: LIST
29048: LIST
29049: LIST
29050: ST_TO_ADDR
29051: GO 30020
29053: LD_INT 3
29055: DOUBLE
29056: EQUAL
29057: IFTRUE 29061
29059: GO 29091
29061: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
29062: LD_ADDR_VAR 0 3
29066: PUSH
29067: LD_INT 1
29069: PUSH
29070: LD_INT 2
29072: PUSH
29073: LD_INT 3
29075: PUSH
29076: LD_INT 4
29078: PUSH
29079: LD_INT 5
29081: PUSH
29082: EMPTY
29083: LIST
29084: LIST
29085: LIST
29086: LIST
29087: LIST
29088: ST_TO_ADDR
29089: GO 30020
29091: LD_INT 11
29093: DOUBLE
29094: EQUAL
29095: IFTRUE 29099
29097: GO 29129
29099: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
29100: LD_ADDR_VAR 0 3
29104: PUSH
29105: LD_INT 1
29107: PUSH
29108: LD_INT 2
29110: PUSH
29111: LD_INT 3
29113: PUSH
29114: LD_INT 4
29116: PUSH
29117: LD_INT 5
29119: PUSH
29120: EMPTY
29121: LIST
29122: LIST
29123: LIST
29124: LIST
29125: LIST
29126: ST_TO_ADDR
29127: GO 30020
29129: LD_INT 4
29131: DOUBLE
29132: EQUAL
29133: IFTRUE 29137
29135: GO 29163
29137: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
29138: LD_ADDR_VAR 0 3
29142: PUSH
29143: LD_INT 2
29145: PUSH
29146: LD_INT 3
29148: PUSH
29149: LD_INT 4
29151: PUSH
29152: LD_INT 5
29154: PUSH
29155: EMPTY
29156: LIST
29157: LIST
29158: LIST
29159: LIST
29160: ST_TO_ADDR
29161: GO 30020
29163: LD_INT 5
29165: DOUBLE
29166: EQUAL
29167: IFTRUE 29171
29169: GO 29197
29171: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
29172: LD_ADDR_VAR 0 3
29176: PUSH
29177: LD_INT 2
29179: PUSH
29180: LD_INT 3
29182: PUSH
29183: LD_INT 4
29185: PUSH
29186: LD_INT 5
29188: PUSH
29189: EMPTY
29190: LIST
29191: LIST
29192: LIST
29193: LIST
29194: ST_TO_ADDR
29195: GO 30020
29197: LD_INT 9
29199: DOUBLE
29200: EQUAL
29201: IFTRUE 29205
29203: GO 29231
29205: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
29206: LD_ADDR_VAR 0 3
29210: PUSH
29211: LD_INT 2
29213: PUSH
29214: LD_INT 3
29216: PUSH
29217: LD_INT 4
29219: PUSH
29220: LD_INT 5
29222: PUSH
29223: EMPTY
29224: LIST
29225: LIST
29226: LIST
29227: LIST
29228: ST_TO_ADDR
29229: GO 30020
29231: LD_INT 7
29233: DOUBLE
29234: EQUAL
29235: IFTRUE 29239
29237: GO 29265
29239: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
29240: LD_ADDR_VAR 0 3
29244: PUSH
29245: LD_INT 2
29247: PUSH
29248: LD_INT 3
29250: PUSH
29251: LD_INT 4
29253: PUSH
29254: LD_INT 5
29256: PUSH
29257: EMPTY
29258: LIST
29259: LIST
29260: LIST
29261: LIST
29262: ST_TO_ADDR
29263: GO 30020
29265: LD_INT 12
29267: DOUBLE
29268: EQUAL
29269: IFTRUE 29273
29271: GO 29299
29273: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
29274: LD_ADDR_VAR 0 3
29278: PUSH
29279: LD_INT 2
29281: PUSH
29282: LD_INT 3
29284: PUSH
29285: LD_INT 4
29287: PUSH
29288: LD_INT 5
29290: PUSH
29291: EMPTY
29292: LIST
29293: LIST
29294: LIST
29295: LIST
29296: ST_TO_ADDR
29297: GO 30020
29299: LD_INT 13
29301: DOUBLE
29302: EQUAL
29303: IFTRUE 29307
29305: GO 29333
29307: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
29308: LD_ADDR_VAR 0 3
29312: PUSH
29313: LD_INT 2
29315: PUSH
29316: LD_INT 3
29318: PUSH
29319: LD_INT 4
29321: PUSH
29322: LD_INT 5
29324: PUSH
29325: EMPTY
29326: LIST
29327: LIST
29328: LIST
29329: LIST
29330: ST_TO_ADDR
29331: GO 30020
29333: LD_INT 14
29335: DOUBLE
29336: EQUAL
29337: IFTRUE 29341
29339: GO 29359
29341: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
29342: LD_ADDR_VAR 0 3
29346: PUSH
29347: LD_INT 4
29349: PUSH
29350: LD_INT 5
29352: PUSH
29353: EMPTY
29354: LIST
29355: LIST
29356: ST_TO_ADDR
29357: GO 30020
29359: LD_INT 6
29361: DOUBLE
29362: EQUAL
29363: IFTRUE 29367
29365: GO 29385
29367: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
29368: LD_ADDR_VAR 0 3
29372: PUSH
29373: LD_INT 4
29375: PUSH
29376: LD_INT 5
29378: PUSH
29379: EMPTY
29380: LIST
29381: LIST
29382: ST_TO_ADDR
29383: GO 30020
29385: LD_INT 10
29387: DOUBLE
29388: EQUAL
29389: IFTRUE 29393
29391: GO 29411
29393: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
29394: LD_ADDR_VAR 0 3
29398: PUSH
29399: LD_INT 4
29401: PUSH
29402: LD_INT 5
29404: PUSH
29405: EMPTY
29406: LIST
29407: LIST
29408: ST_TO_ADDR
29409: GO 30020
29411: LD_INT 22
29413: DOUBLE
29414: EQUAL
29415: IFTRUE 29419
29417: GO 29445
29419: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
29420: LD_ADDR_VAR 0 3
29424: PUSH
29425: LD_INT 11
29427: PUSH
29428: LD_INT 12
29430: PUSH
29431: LD_INT 13
29433: PUSH
29434: LD_INT 14
29436: PUSH
29437: EMPTY
29438: LIST
29439: LIST
29440: LIST
29441: LIST
29442: ST_TO_ADDR
29443: GO 30020
29445: LD_INT 23
29447: DOUBLE
29448: EQUAL
29449: IFTRUE 29453
29451: GO 29479
29453: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29454: LD_ADDR_VAR 0 3
29458: PUSH
29459: LD_INT 11
29461: PUSH
29462: LD_INT 12
29464: PUSH
29465: LD_INT 13
29467: PUSH
29468: LD_INT 14
29470: PUSH
29471: EMPTY
29472: LIST
29473: LIST
29474: LIST
29475: LIST
29476: ST_TO_ADDR
29477: GO 30020
29479: LD_INT 24
29481: DOUBLE
29482: EQUAL
29483: IFTRUE 29487
29485: GO 29513
29487: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29488: LD_ADDR_VAR 0 3
29492: PUSH
29493: LD_INT 11
29495: PUSH
29496: LD_INT 12
29498: PUSH
29499: LD_INT 13
29501: PUSH
29502: LD_INT 14
29504: PUSH
29505: EMPTY
29506: LIST
29507: LIST
29508: LIST
29509: LIST
29510: ST_TO_ADDR
29511: GO 30020
29513: LD_INT 30
29515: DOUBLE
29516: EQUAL
29517: IFTRUE 29521
29519: GO 29547
29521: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29522: LD_ADDR_VAR 0 3
29526: PUSH
29527: LD_INT 11
29529: PUSH
29530: LD_INT 12
29532: PUSH
29533: LD_INT 13
29535: PUSH
29536: LD_INT 14
29538: PUSH
29539: EMPTY
29540: LIST
29541: LIST
29542: LIST
29543: LIST
29544: ST_TO_ADDR
29545: GO 30020
29547: LD_INT 25
29549: DOUBLE
29550: EQUAL
29551: IFTRUE 29555
29553: GO 29573
29555: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29556: LD_ADDR_VAR 0 3
29560: PUSH
29561: LD_INT 13
29563: PUSH
29564: LD_INT 14
29566: PUSH
29567: EMPTY
29568: LIST
29569: LIST
29570: ST_TO_ADDR
29571: GO 30020
29573: LD_INT 27
29575: DOUBLE
29576: EQUAL
29577: IFTRUE 29581
29579: GO 29599
29581: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29582: LD_ADDR_VAR 0 3
29586: PUSH
29587: LD_INT 13
29589: PUSH
29590: LD_INT 14
29592: PUSH
29593: EMPTY
29594: LIST
29595: LIST
29596: ST_TO_ADDR
29597: GO 30020
29599: LD_INT 28
29601: DOUBLE
29602: EQUAL
29603: IFTRUE 29607
29605: GO 29625
29607: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29608: LD_ADDR_VAR 0 3
29612: PUSH
29613: LD_INT 13
29615: PUSH
29616: LD_INT 14
29618: PUSH
29619: EMPTY
29620: LIST
29621: LIST
29622: ST_TO_ADDR
29623: GO 30020
29625: LD_INT 29
29627: DOUBLE
29628: EQUAL
29629: IFTRUE 29633
29631: GO 29651
29633: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29634: LD_ADDR_VAR 0 3
29638: PUSH
29639: LD_INT 13
29641: PUSH
29642: LD_INT 14
29644: PUSH
29645: EMPTY
29646: LIST
29647: LIST
29648: ST_TO_ADDR
29649: GO 30020
29651: LD_INT 31
29653: DOUBLE
29654: EQUAL
29655: IFTRUE 29659
29657: GO 29677
29659: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29660: LD_ADDR_VAR 0 3
29664: PUSH
29665: LD_INT 13
29667: PUSH
29668: LD_INT 14
29670: PUSH
29671: EMPTY
29672: LIST
29673: LIST
29674: ST_TO_ADDR
29675: GO 30020
29677: LD_INT 26
29679: DOUBLE
29680: EQUAL
29681: IFTRUE 29685
29683: GO 29703
29685: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29686: LD_ADDR_VAR 0 3
29690: PUSH
29691: LD_INT 13
29693: PUSH
29694: LD_INT 14
29696: PUSH
29697: EMPTY
29698: LIST
29699: LIST
29700: ST_TO_ADDR
29701: GO 30020
29703: LD_INT 42
29705: DOUBLE
29706: EQUAL
29707: IFTRUE 29711
29709: GO 29737
29711: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29712: LD_ADDR_VAR 0 3
29716: PUSH
29717: LD_INT 21
29719: PUSH
29720: LD_INT 22
29722: PUSH
29723: LD_INT 23
29725: PUSH
29726: LD_INT 24
29728: PUSH
29729: EMPTY
29730: LIST
29731: LIST
29732: LIST
29733: LIST
29734: ST_TO_ADDR
29735: GO 30020
29737: LD_INT 43
29739: DOUBLE
29740: EQUAL
29741: IFTRUE 29745
29743: GO 29771
29745: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29746: LD_ADDR_VAR 0 3
29750: PUSH
29751: LD_INT 21
29753: PUSH
29754: LD_INT 22
29756: PUSH
29757: LD_INT 23
29759: PUSH
29760: LD_INT 24
29762: PUSH
29763: EMPTY
29764: LIST
29765: LIST
29766: LIST
29767: LIST
29768: ST_TO_ADDR
29769: GO 30020
29771: LD_INT 44
29773: DOUBLE
29774: EQUAL
29775: IFTRUE 29779
29777: GO 29805
29779: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29780: LD_ADDR_VAR 0 3
29784: PUSH
29785: LD_INT 21
29787: PUSH
29788: LD_INT 22
29790: PUSH
29791: LD_INT 23
29793: PUSH
29794: LD_INT 24
29796: PUSH
29797: EMPTY
29798: LIST
29799: LIST
29800: LIST
29801: LIST
29802: ST_TO_ADDR
29803: GO 30020
29805: LD_INT 45
29807: DOUBLE
29808: EQUAL
29809: IFTRUE 29813
29811: GO 29839
29813: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29814: LD_ADDR_VAR 0 3
29818: PUSH
29819: LD_INT 21
29821: PUSH
29822: LD_INT 22
29824: PUSH
29825: LD_INT 23
29827: PUSH
29828: LD_INT 24
29830: PUSH
29831: EMPTY
29832: LIST
29833: LIST
29834: LIST
29835: LIST
29836: ST_TO_ADDR
29837: GO 30020
29839: LD_INT 49
29841: DOUBLE
29842: EQUAL
29843: IFTRUE 29847
29845: GO 29873
29847: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29848: LD_ADDR_VAR 0 3
29852: PUSH
29853: LD_INT 21
29855: PUSH
29856: LD_INT 22
29858: PUSH
29859: LD_INT 23
29861: PUSH
29862: LD_INT 24
29864: PUSH
29865: EMPTY
29866: LIST
29867: LIST
29868: LIST
29869: LIST
29870: ST_TO_ADDR
29871: GO 30020
29873: LD_INT 51
29875: DOUBLE
29876: EQUAL
29877: IFTRUE 29881
29879: GO 29907
29881: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29882: LD_ADDR_VAR 0 3
29886: PUSH
29887: LD_INT 21
29889: PUSH
29890: LD_INT 22
29892: PUSH
29893: LD_INT 23
29895: PUSH
29896: LD_INT 24
29898: PUSH
29899: EMPTY
29900: LIST
29901: LIST
29902: LIST
29903: LIST
29904: ST_TO_ADDR
29905: GO 30020
29907: LD_INT 52
29909: DOUBLE
29910: EQUAL
29911: IFTRUE 29915
29913: GO 29941
29915: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29916: LD_ADDR_VAR 0 3
29920: PUSH
29921: LD_INT 21
29923: PUSH
29924: LD_INT 22
29926: PUSH
29927: LD_INT 23
29929: PUSH
29930: LD_INT 24
29932: PUSH
29933: EMPTY
29934: LIST
29935: LIST
29936: LIST
29937: LIST
29938: ST_TO_ADDR
29939: GO 30020
29941: LD_INT 53
29943: DOUBLE
29944: EQUAL
29945: IFTRUE 29949
29947: GO 29967
29949: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29950: LD_ADDR_VAR 0 3
29954: PUSH
29955: LD_INT 23
29957: PUSH
29958: LD_INT 24
29960: PUSH
29961: EMPTY
29962: LIST
29963: LIST
29964: ST_TO_ADDR
29965: GO 30020
29967: LD_INT 46
29969: DOUBLE
29970: EQUAL
29971: IFTRUE 29975
29973: GO 29993
29975: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29976: LD_ADDR_VAR 0 3
29980: PUSH
29981: LD_INT 23
29983: PUSH
29984: LD_INT 24
29986: PUSH
29987: EMPTY
29988: LIST
29989: LIST
29990: ST_TO_ADDR
29991: GO 30020
29993: LD_INT 47
29995: DOUBLE
29996: EQUAL
29997: IFTRUE 30001
29999: GO 30019
30001: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
30002: LD_ADDR_VAR 0 3
30006: PUSH
30007: LD_INT 23
30009: PUSH
30010: LD_INT 24
30012: PUSH
30013: EMPTY
30014: LIST
30015: LIST
30016: ST_TO_ADDR
30017: GO 30020
30019: POP
// result := ( chassis in result ) ;
30020: LD_ADDR_VAR 0 3
30024: PUSH
30025: LD_VAR 0 1
30029: PUSH
30030: LD_VAR 0 3
30034: IN
30035: ST_TO_ADDR
// end ;
30036: LD_VAR 0 3
30040: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
30041: LD_INT 0
30043: PPUSH
30044: PPUSH
30045: PPUSH
30046: PPUSH
// uc_side = 0 ;
30047: LD_ADDR_OWVAR 20
30051: PUSH
30052: LD_INT 0
30054: ST_TO_ADDR
// uc_nation = 0 ;
30055: LD_ADDR_OWVAR 21
30059: PUSH
30060: LD_INT 0
30062: ST_TO_ADDR
// nat_area := nature_area ;
30063: LD_ADDR_VAR 0 4
30067: PUSH
30068: LD_INT 24
30070: ST_TO_ADDR
// InitHc ;
30071: CALL_OW 19
// for i = 1 to 4 do
30075: LD_ADDR_VAR 0 2
30079: PUSH
30080: DOUBLE
30081: LD_INT 1
30083: DEC
30084: ST_TO_ADDR
30085: LD_INT 4
30087: PUSH
30088: FOR_TO
30089: IFFALSE 30136
// begin hc_class = 18 ;
30091: LD_ADDR_OWVAR 28
30095: PUSH
30096: LD_INT 18
30098: ST_TO_ADDR
// hc_gallery =  ;
30099: LD_ADDR_OWVAR 33
30103: PUSH
30104: LD_STRING 
30106: ST_TO_ADDR
// animal := CreateHuman ;
30107: LD_ADDR_VAR 0 3
30111: PUSH
30112: CALL_OW 44
30116: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30117: LD_VAR 0 3
30121: PPUSH
30122: LD_VAR 0 4
30126: PPUSH
30127: LD_INT 0
30129: PPUSH
30130: CALL_OW 49
// end ;
30134: GO 30088
30136: POP
30137: POP
// for i = 1 to 3 do
30138: LD_ADDR_VAR 0 2
30142: PUSH
30143: DOUBLE
30144: LD_INT 1
30146: DEC
30147: ST_TO_ADDR
30148: LD_INT 3
30150: PUSH
30151: FOR_TO
30152: IFFALSE 30216
// begin hc_class = class_tiger ;
30154: LD_ADDR_OWVAR 28
30158: PUSH
30159: LD_INT 14
30161: ST_TO_ADDR
// hc_gallery =  ;
30162: LD_ADDR_OWVAR 33
30166: PUSH
30167: LD_STRING 
30169: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
30170: LD_ADDR_OWVAR 35
30174: PUSH
30175: LD_INT 5
30177: NEG
30178: PPUSH
30179: LD_INT 5
30181: PPUSH
30182: CALL_OW 12
30186: ST_TO_ADDR
// animal := CreateHuman ;
30187: LD_ADDR_VAR 0 3
30191: PUSH
30192: CALL_OW 44
30196: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30197: LD_VAR 0 3
30201: PPUSH
30202: LD_VAR 0 4
30206: PPUSH
30207: LD_INT 0
30209: PPUSH
30210: CALL_OW 49
// end ;
30214: GO 30151
30216: POP
30217: POP
// for i = 1 to 3 do
30218: LD_ADDR_VAR 0 2
30222: PUSH
30223: DOUBLE
30224: LD_INT 1
30226: DEC
30227: ST_TO_ADDR
30228: LD_INT 3
30230: PUSH
30231: FOR_TO
30232: IFFALSE 30335
// begin hc_class = class_apeman ;
30234: LD_ADDR_OWVAR 28
30238: PUSH
30239: LD_INT 12
30241: ST_TO_ADDR
// hc_gallery =  ;
30242: LD_ADDR_OWVAR 33
30246: PUSH
30247: LD_STRING 
30249: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
30250: LD_ADDR_OWVAR 35
30254: PUSH
30255: LD_INT 2
30257: NEG
30258: PPUSH
30259: LD_INT 2
30261: PPUSH
30262: CALL_OW 12
30266: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
30267: LD_ADDR_OWVAR 31
30271: PUSH
30272: LD_INT 1
30274: PPUSH
30275: LD_INT 3
30277: PPUSH
30278: CALL_OW 12
30282: PUSH
30283: LD_INT 1
30285: PPUSH
30286: LD_INT 3
30288: PPUSH
30289: CALL_OW 12
30293: PUSH
30294: LD_INT 0
30296: PUSH
30297: LD_INT 0
30299: PUSH
30300: EMPTY
30301: LIST
30302: LIST
30303: LIST
30304: LIST
30305: ST_TO_ADDR
// animal := CreateHuman ;
30306: LD_ADDR_VAR 0 3
30310: PUSH
30311: CALL_OW 44
30315: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30316: LD_VAR 0 3
30320: PPUSH
30321: LD_VAR 0 4
30325: PPUSH
30326: LD_INT 0
30328: PPUSH
30329: CALL_OW 49
// end ;
30333: GO 30231
30335: POP
30336: POP
// for i = 1 to 3 do
30337: LD_ADDR_VAR 0 2
30341: PUSH
30342: DOUBLE
30343: LD_INT 1
30345: DEC
30346: ST_TO_ADDR
30347: LD_INT 3
30349: PUSH
30350: FOR_TO
30351: IFFALSE 30398
// begin hc_class = 13 ;
30353: LD_ADDR_OWVAR 28
30357: PUSH
30358: LD_INT 13
30360: ST_TO_ADDR
// hc_gallery =  ;
30361: LD_ADDR_OWVAR 33
30365: PUSH
30366: LD_STRING 
30368: ST_TO_ADDR
// animal := CreateHuman ;
30369: LD_ADDR_VAR 0 3
30373: PUSH
30374: CALL_OW 44
30378: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
30379: LD_VAR 0 3
30383: PPUSH
30384: LD_VAR 0 4
30388: PPUSH
30389: LD_INT 0
30391: PPUSH
30392: CALL_OW 49
// end ;
30396: GO 30350
30398: POP
30399: POP
// for i = 1 to 3 do
30400: LD_ADDR_VAR 0 2
30404: PUSH
30405: DOUBLE
30406: LD_INT 1
30408: DEC
30409: ST_TO_ADDR
30410: LD_INT 3
30412: PUSH
30413: FOR_TO
30414: IFFALSE 30459
// begin hc_class = 20 ;
30416: LD_ADDR_OWVAR 28
30420: PUSH
30421: LD_INT 20
30423: ST_TO_ADDR
// hc_gallery =  ;
30424: LD_ADDR_OWVAR 33
30428: PUSH
30429: LD_STRING 
30431: ST_TO_ADDR
// animal := CreateHuman ;
30432: LD_ADDR_VAR 0 3
30436: PUSH
30437: CALL_OW 44
30441: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30442: LD_VAR 0 3
30446: PPUSH
30447: LD_INT 4
30449: PPUSH
30450: LD_INT 0
30452: PPUSH
30453: CALL_OW 49
// end ;
30457: GO 30413
30459: POP
30460: POP
// end ; end_of_file
30461: LD_VAR 0 1
30465: RET
// export function Action ; begin
30466: LD_INT 0
30468: PPUSH
// InGameOn ;
30469: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30473: LD_EXP 12
30477: PPUSH
30478: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30482: LD_EXP 12
30486: PPUSH
30487: LD_STRING D1-JMM-1
30489: PPUSH
30490: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30494: LD_EXP 13
30498: PPUSH
30499: LD_STRING D1-Roth-1
30501: PPUSH
30502: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30506: LD_EXP 12
30510: PPUSH
30511: LD_STRING D1-JMM-2
30513: PPUSH
30514: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30518: LD_EXP 13
30522: PPUSH
30523: LD_STRING D1-Roth-2
30525: PPUSH
30526: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30530: LD_EXP 12
30534: PPUSH
30535: LD_STRING D1-JMM-3
30537: PPUSH
30538: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30542: LD_EXP 13
30546: PPUSH
30547: LD_STRING D1-Roth-3
30549: PPUSH
30550: CALL_OW 88
// ComInvisible ( Roth ) ;
30554: LD_EXP 13
30558: PPUSH
30559: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30563: LD_INT 46
30565: PPUSH
30566: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30570: LD_EXP 12
30574: PPUSH
30575: LD_STRING D1-JMM-4
30577: PPUSH
30578: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30582: LD_INT 10
30584: PPUSH
30585: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30589: LD_EXP 13
30593: PPUSH
30594: LD_EXP 12
30598: PPUSH
30599: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30603: LD_EXP 12
30607: PPUSH
30608: LD_STRING D1-JMM-4a
30610: PPUSH
30611: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30615: LD_EXP 13
30619: PPUSH
30620: LD_STRING D1-Roth-4
30622: PPUSH
30623: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30627: LD_EXP 12
30631: PPUSH
30632: LD_STRING D1-JMM-5
30634: PPUSH
30635: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30639: LD_EXP 13
30643: PPUSH
30644: LD_STRING D1-Roth-5
30646: PPUSH
30647: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30651: LD_EXP 12
30655: PPUSH
30656: LD_STRING D1-JMM-6
30658: PPUSH
30659: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30663: LD_EXP 13
30667: PPUSH
30668: LD_STRING D1-Roth-6
30670: PPUSH
30671: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30675: LD_EXP 12
30679: PPUSH
30680: LD_STRING D1-JMM-7
30682: PPUSH
30683: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30687: LD_EXP 14
30691: PPUSH
30692: LD_EXP 12
30696: PPUSH
30697: CALL_OW 250
30701: PPUSH
30702: LD_EXP 12
30706: PPUSH
30707: CALL_OW 251
30711: PPUSH
30712: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30716: LD_EXP 13
30720: PPUSH
30721: LD_STRING D1-Roth-7
30723: PPUSH
30724: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30728: LD_INT 10
30730: PPUSH
30731: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30735: LD_EXP 14
30739: PPUSH
30740: LD_EXP 12
30744: PPUSH
30745: CALL_OW 296
30749: PUSH
30750: LD_INT 6
30752: LESS
30753: IFFALSE 30728
// ComTurnUnit ( Powell , JMM ) ;
30755: LD_EXP 14
30759: PPUSH
30760: LD_EXP 12
30764: PPUSH
30765: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30769: LD_EXP 14
30773: PPUSH
30774: LD_STRING D1-Pow-7
30776: PPUSH
30777: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30781: LD_EXP 12
30785: PPUSH
30786: LD_EXP 14
30790: PPUSH
30791: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30795: LD_EXP 13
30799: PPUSH
30800: LD_EXP 14
30804: PPUSH
30805: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30809: LD_EXP 12
30813: PPUSH
30814: LD_STRING D1-JMM-8
30816: PPUSH
30817: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30821: LD_EXP 14
30825: PPUSH
30826: LD_STRING D1-Pow-8
30828: PPUSH
30829: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30833: LD_EXP 12
30837: PPUSH
30838: LD_STRING D1-JMM-9
30840: PPUSH
30841: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30845: LD_EXP 14
30849: PPUSH
30850: LD_INT 124
30852: PPUSH
30853: LD_INT 61
30855: PPUSH
30856: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30860: LD_INT 35
30862: PPUSH
30863: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30867: LD_EXP 12
30871: PPUSH
30872: LD_EXP 14
30876: PPUSH
30877: CALL_OW 296
30881: PUSH
30882: LD_INT 6
30884: GREATER
30885: IFFALSE 30860
// SayRadio ( Powell , D1-Pow-9 ) ;
30887: LD_EXP 14
30891: PPUSH
30892: LD_STRING D1-Pow-9
30894: PPUSH
30895: CALL_OW 94
// RemoveUnit ( Powell ) ;
30899: LD_EXP 14
30903: PPUSH
30904: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30908: LD_EXP 14
30912: PPUSH
30913: LD_INT 18
30915: PPUSH
30916: CALL_OW 52
// if Joan and not Joan in selected then
30920: LD_EXP 34
30924: PUSH
30925: LD_EXP 34
30929: PUSH
30930: LD_EXP 3
30934: IN
30935: NOT
30936: AND
30937: IFFALSE 30951
// SayRadio ( Joan , D1-Joan-9 ) ;
30939: LD_EXP 34
30943: PPUSH
30944: LD_STRING D1-Joan-9
30946: PPUSH
30947: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30951: LD_EXP 13
30955: PPUSH
30956: LD_EXP 12
30960: PPUSH
30961: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30965: LD_EXP 12
30969: PPUSH
30970: LD_EXP 13
30974: PPUSH
30975: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30979: LD_EXP 13
30983: PPUSH
30984: LD_STRING D1-Roth-9
30986: PPUSH
30987: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30991: LD_EXP 12
30995: PPUSH
30996: LD_STRING D1-JMM-10
30998: PPUSH
30999: CALL_OW 88
// InGameOff ;
31003: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
31007: LD_STRING M1
31009: PPUSH
31010: CALL_OW 337
// if Difficulty < 3 then
31014: LD_OWVAR 67
31018: PUSH
31019: LD_INT 3
31021: LESS
31022: IFFALSE 31034
// ChangeSideFog ( 4 , 7 ) ;
31024: LD_INT 4
31026: PPUSH
31027: LD_INT 7
31029: PPUSH
31030: CALL_OW 343
// SaveForQuickRestart ;
31034: CALL_OW 22
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
31038: LD_INT 7
31040: PPUSH
31041: LD_INT 1
31043: PPUSH
31044: LD_INT 2
31046: PPUSH
31047: LD_INT 1
31049: PPUSH
31050: CALL_OW 80
// wait ( 0 0$3 ) ;
31054: LD_INT 105
31056: PPUSH
31057: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
31061: LD_EXP 13
31065: PPUSH
31066: LD_INT 124
31068: PPUSH
31069: LD_INT 18
31071: PPUSH
31072: CALL_OW 111
// AddComInvisible ( Roth ) ;
31076: LD_EXP 13
31080: PPUSH
31081: CALL_OW 212
// wait ( 0 0$30 ) ;
31085: LD_INT 1050
31087: PPUSH
31088: CALL_OW 67
// AddComWait ( Roth , 1 1$00 ) ;
31092: LD_EXP 13
31096: PPUSH
31097: LD_INT 2100
31099: PPUSH
31100: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
31104: LD_EXP 13
31108: PPUSH
31109: LD_INT 156
31111: PPUSH
31112: LD_INT 20
31114: PPUSH
31115: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
31119: LD_EXP 13
31123: PPUSH
31124: LD_INT 178
31126: PPUSH
31127: LD_INT 42
31129: PPUSH
31130: CALL_OW 171
// AddComInvisible ( Roth ) ;
31134: LD_EXP 13
31138: PPUSH
31139: CALL_OW 212
// end ;
31143: LD_VAR 0 1
31147: RET
// every 0 0$1 do var i , tmp ;
31148: GO 31150
31150: DISABLE
31151: LD_INT 0
31153: PPUSH
31154: PPUSH
// begin tmp := selected union friends ;
31155: LD_ADDR_VAR 0 2
31159: PUSH
31160: LD_EXP 3
31164: PUSH
31165: LD_EXP 4
31169: UNION
31170: ST_TO_ADDR
// if not tmp then
31171: LD_VAR 0 2
31175: NOT
31176: IFFALSE 31180
// exit ;
31178: GO 31252
// repeat wait ( 0 0$1 ) ;
31180: LD_INT 35
31182: PPUSH
31183: CALL_OW 67
// for i in tmp do
31187: LD_ADDR_VAR 0 1
31191: PUSH
31192: LD_VAR 0 2
31196: PUSH
31197: FOR_IN
31198: IFFALSE 31243
// if CanSpot ( JMM , i ) then
31200: LD_EXP 12
31204: PPUSH
31205: LD_VAR 0 1
31209: PPUSH
31210: CALL 27774 0 2
31214: IFFALSE 31241
// begin tmp := tmp diff i ;
31216: LD_ADDR_VAR 0 2
31220: PUSH
31221: LD_VAR 0 2
31225: PUSH
31226: LD_VAR 0 1
31230: DIFF
31231: ST_TO_ADDR
// Spot ( i ) ;
31232: LD_VAR 0 1
31236: PPUSH
31237: CALL 31255 0 1
// end ;
31241: GO 31197
31243: POP
31244: POP
// until not tmp ;
31245: LD_VAR 0 2
31249: NOT
31250: IFFALSE 31180
// end ;
31252: PPOPN 2
31254: END
// export function Spot ( unit ) ; var building , side , joined ; begin
31255: LD_INT 0
31257: PPUSH
31258: PPUSH
31259: PPUSH
31260: PPUSH
// if not unit then
31261: LD_VAR 0 1
31265: NOT
31266: IFFALSE 31270
// exit ;
31268: GO 33159
// InGameOn ;
31270: CALL_OW 8
// side := GetSide ( JMM ) ;
31274: LD_ADDR_VAR 0 4
31278: PUSH
31279: LD_EXP 12
31283: PPUSH
31284: CALL_OW 255
31288: ST_TO_ADDR
// joined := false ;
31289: LD_ADDR_VAR 0 5
31293: PUSH
31294: LD_INT 0
31296: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
31297: LD_ADDR_VAR 0 3
31301: PUSH
31302: LD_VAR 0 1
31306: PPUSH
31307: CALL_OW 310
31311: ST_TO_ADDR
// if building then
31312: LD_VAR 0 3
31316: IFFALSE 31375
// begin SetSide ( JMM , GetSide ( unit ) ) ;
31318: LD_EXP 12
31322: PPUSH
31323: LD_VAR 0 1
31327: PPUSH
31328: CALL_OW 255
31332: PPUSH
31333: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
31337: LD_EXP 12
31341: PPUSH
31342: LD_VAR 0 3
31346: PPUSH
31347: CALL_OW 120
// repeat wait ( 3 ) ;
31351: LD_INT 3
31353: PPUSH
31354: CALL_OW 67
// until IsInUnit ( JMM ) ;
31358: LD_EXP 12
31362: PPUSH
31363: CALL_OW 310
31367: IFFALSE 31351
// DialogueOn ;
31369: CALL_OW 6
// end else
31373: GO 31407
// begin ComTurnUnit ( JMM , unit ) ;
31375: LD_EXP 12
31379: PPUSH
31380: LD_VAR 0 1
31384: PPUSH
31385: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
31389: LD_VAR 0 1
31393: PPUSH
31394: LD_EXP 12
31398: PPUSH
31399: CALL_OW 119
// DialogueOn ;
31403: CALL_OW 6
// end ; if unit = Joan then
31407: LD_VAR 0 1
31411: PUSH
31412: LD_EXP 34
31416: EQUAL
31417: IFFALSE 31527
// begin joined := true ;
31419: LD_ADDR_VAR 0 5
31423: PUSH
31424: LD_INT 1
31426: ST_TO_ADDR
// if Joan in selected then
31427: LD_EXP 34
31431: PUSH
31432: LD_EXP 3
31436: IN
31437: IFFALSE 31465
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
31439: LD_EXP 34
31443: PPUSH
31444: LD_STRING D3-Joan-Joan-1
31446: PPUSH
31447: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31451: LD_EXP 12
31455: PPUSH
31456: LD_STRING D3-Joan-JMM-1
31458: PPUSH
31459: CALL_OW 88
// end else
31463: GO 31525
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31465: LD_EXP 34
31469: PPUSH
31470: LD_STRING D4-Joan-Joan-1
31472: PPUSH
31473: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31477: LD_EXP 12
31481: PPUSH
31482: LD_STRING D4-Joan-JMM-1
31484: PPUSH
31485: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31489: LD_EXP 34
31493: PPUSH
31494: LD_STRING D4-Joan-Joan-2
31496: PPUSH
31497: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31501: LD_EXP 12
31505: PPUSH
31506: LD_STRING D4-Joan-JMM-2
31508: PPUSH
31509: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31513: LD_EXP 34
31517: PPUSH
31518: LD_STRING D4-Joan-Joan-3
31520: PPUSH
31521: CALL_OW 88
// end ; end else
31525: GO 32967
// if unit = Lisa then
31527: LD_VAR 0 1
31531: PUSH
31532: LD_EXP 21
31536: EQUAL
31537: IFFALSE 31729
// begin if Lisa in selected then
31539: LD_EXP 21
31543: PUSH
31544: LD_EXP 3
31548: IN
31549: IFFALSE 31662
// begin if GetSide ( Joan ) = 7 then
31551: LD_EXP 34
31555: PPUSH
31556: CALL_OW 255
31560: PUSH
31561: LD_INT 7
31563: EQUAL
31564: IFFALSE 31628
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31566: LD_EXP 21
31570: PPUSH
31571: LD_STRING D3-LisaJ-Lisa-1
31573: PPUSH
31574: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31578: LD_EXP 12
31582: PPUSH
31583: LD_STRING D3-LisaJ-JMM-1
31585: PPUSH
31586: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31590: LD_EXP 21
31594: PPUSH
31595: LD_STRING D3-LisaJ-Lisa-2
31597: PPUSH
31598: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31602: LD_EXP 12
31606: PPUSH
31607: LD_STRING D3-LisaJ-JMM-2
31609: PPUSH
31610: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31614: LD_EXP 21
31618: PPUSH
31619: LD_STRING D3-LisaJ-Lisa-3
31621: PPUSH
31622: CALL_OW 88
// end else
31626: GO 31660
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31628: LD_EXP 21
31632: PPUSH
31633: LD_STRING D3-LisaL-Lisa-1
31635: PPUSH
31636: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31640: LD_EXP 12
31644: PPUSH
31645: LD_STRING D3-LisaL-JMM-1
31647: PPUSH
31648: CALL_OW 88
// joined := true ;
31652: LD_ADDR_VAR 0 5
31656: PUSH
31657: LD_INT 1
31659: ST_TO_ADDR
// end ; end else
31660: GO 31727
// begin if GetSide ( Joan ) = 7 then
31662: LD_EXP 34
31666: PPUSH
31667: CALL_OW 255
31671: PUSH
31672: LD_INT 7
31674: EQUAL
31675: IFFALSE 31715
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31677: LD_EXP 21
31681: PPUSH
31682: LD_STRING D4-LisaJ-Lisa-1
31684: PPUSH
31685: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31689: LD_EXP 12
31693: PPUSH
31694: LD_STRING D4-LisaJ-JMM-1
31696: PPUSH
31697: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31701: LD_EXP 21
31705: PPUSH
31706: LD_STRING D4-LisaJ-Lisa-2
31708: PPUSH
31709: CALL_OW 88
// end else
31713: GO 31727
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31715: LD_EXP 21
31719: PPUSH
31720: LD_STRING D4-LisaL-Lisa-1
31722: PPUSH
31723: CALL_OW 88
// end ; end ; end else
31727: GO 32967
// if unit = Frank then
31729: LD_VAR 0 1
31733: PUSH
31734: LD_EXP 31
31738: EQUAL
31739: IFFALSE 31879
// begin joined := true ;
31741: LD_ADDR_VAR 0 5
31745: PUSH
31746: LD_INT 1
31748: ST_TO_ADDR
// if Frank in selected then
31749: LD_EXP 31
31753: PUSH
31754: LD_EXP 3
31758: IN
31759: IFFALSE 31829
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31761: LD_EXP 31
31765: PPUSH
31766: LD_STRING D3-Frank-Frank-1
31768: PPUSH
31769: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31773: LD_EXP 12
31777: PPUSH
31778: LD_STRING D3-Frank-JMM-1
31780: PPUSH
31781: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31785: LD_EXP 31
31789: PPUSH
31790: LD_STRING D3-Frank-Frank-2
31792: PPUSH
31793: CALL_OW 88
// if reached_lab then
31797: LD_EXP 5
31801: IFFALSE 31827
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31803: LD_EXP 12
31807: PPUSH
31808: LD_STRING D3-Frank-JMM-2
31810: PPUSH
31811: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31815: LD_EXP 31
31819: PPUSH
31820: LD_STRING D3-Frank-Frank-3
31822: PPUSH
31823: CALL_OW 88
// end ; end else
31827: GO 31877
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31829: LD_EXP 31
31833: PPUSH
31834: LD_STRING D4-Frank-Frank-1
31836: PPUSH
31837: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31841: LD_EXP 12
31845: PPUSH
31846: LD_STRING D4-Frank-JMM-1
31848: PPUSH
31849: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31853: LD_EXP 31
31857: PPUSH
31858: LD_STRING D4-Frank-Frank-2
31860: PPUSH
31861: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31865: LD_EXP 12
31869: PPUSH
31870: LD_STRING D4-Frank-JMM-2
31872: PPUSH
31873: CALL_OW 88
// end ; end else
31877: GO 32967
// if unit = Brown then
31879: LD_VAR 0 1
31883: PUSH
31884: LD_EXP 26
31888: EQUAL
31889: IFFALSE 31985
// begin if Brown in selected or gamma_commander = 2 then
31891: LD_EXP 26
31895: PUSH
31896: LD_EXP 3
31900: IN
31901: PUSH
31902: LD_EXP 10
31906: PUSH
31907: LD_INT 2
31909: EQUAL
31910: OR
31911: IFFALSE 31947
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31913: LD_EXP 26
31917: PPUSH
31918: LD_STRING D3-Soldier1-Sol1-1
31920: PPUSH
31921: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31925: LD_EXP 12
31929: PPUSH
31930: LD_STRING D3-Soldier1-JMM-1
31932: PPUSH
31933: CALL_OW 88
// joined := true ;
31937: LD_ADDR_VAR 0 5
31941: PUSH
31942: LD_INT 1
31944: ST_TO_ADDR
// end else
31945: GO 31983
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31947: LD_EXP 26
31951: PPUSH
31952: LD_STRING D4-Soldier1-Sol1-1
31954: PPUSH
31955: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31959: LD_EXP 12
31963: PPUSH
31964: LD_STRING D4-Soldier1-JMM-1
31966: PPUSH
31967: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31971: LD_EXP 26
31975: PPUSH
31976: LD_STRING D4-Soldier1-Sol1-2
31978: PPUSH
31979: CALL_OW 88
// end ; end else
31983: GO 32967
// if unit = Donaldson then
31985: LD_VAR 0 1
31989: PUSH
31990: LD_EXP 22
31994: EQUAL
31995: IFFALSE 32091
// begin if Donaldson in selected or gamma_commander = 1 then
31997: LD_EXP 22
32001: PUSH
32002: LD_EXP 3
32006: IN
32007: PUSH
32008: LD_EXP 10
32012: PUSH
32013: LD_INT 1
32015: EQUAL
32016: OR
32017: IFFALSE 32053
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
32019: LD_EXP 22
32023: PPUSH
32024: LD_STRING D3-Soldier2-FSol2-1
32026: PPUSH
32027: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32031: LD_EXP 12
32035: PPUSH
32036: LD_STRING D3-Soldier2-JMM-1
32038: PPUSH
32039: CALL_OW 88
// joined := true ;
32043: LD_ADDR_VAR 0 5
32047: PUSH
32048: LD_INT 1
32050: ST_TO_ADDR
// end else
32051: GO 32089
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32053: LD_VAR 0 1
32057: PPUSH
32058: LD_STRING D4-Soldier1-FSol1-1
32060: PPUSH
32061: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32065: LD_EXP 12
32069: PPUSH
32070: LD_STRING D4-Soldier1-JMM-1
32072: PPUSH
32073: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32077: LD_VAR 0 1
32081: PPUSH
32082: LD_STRING D4-Soldier1-FSol1-2
32084: PPUSH
32085: CALL_OW 88
// end ; end else
32089: GO 32967
// if unit = Cyrus then
32091: LD_VAR 0 1
32095: PUSH
32096: LD_EXP 24
32100: EQUAL
32101: IFFALSE 32175
// begin if Cyrus in selected then
32103: LD_EXP 24
32107: PUSH
32108: LD_EXP 3
32112: IN
32113: IFFALSE 32149
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
32115: LD_EXP 24
32119: PPUSH
32120: LD_STRING D3-Cyrus-Cyrus-1
32122: PPUSH
32123: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
32127: LD_EXP 12
32131: PPUSH
32132: LD_STRING D3-Cyrus-JMM-1
32134: PPUSH
32135: CALL_OW 88
// joined := true ;
32139: LD_ADDR_VAR 0 5
32143: PUSH
32144: LD_INT 1
32146: ST_TO_ADDR
// end else
32147: GO 32173
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
32149: LD_EXP 24
32153: PPUSH
32154: LD_STRING D4-Cyrus-Cyrus-1
32156: PPUSH
32157: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
32161: LD_EXP 12
32165: PPUSH
32166: LD_STRING D4-Cyrus-JMM-1
32168: PPUSH
32169: CALL_OW 88
// end ; end else
32173: GO 32967
// if unit = Bobby then
32175: LD_VAR 0 1
32179: PUSH
32180: LD_EXP 23
32184: EQUAL
32185: IFFALSE 32271
// begin if Bobby in selected then
32187: LD_EXP 23
32191: PUSH
32192: LD_EXP 3
32196: IN
32197: IFFALSE 32233
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
32199: LD_EXP 23
32203: PPUSH
32204: LD_STRING D3-Bobby-Bobby-1
32206: PPUSH
32207: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
32211: LD_EXP 12
32215: PPUSH
32216: LD_STRING D3-Bobby-JMM-1
32218: PPUSH
32219: CALL_OW 88
// joined := true ;
32223: LD_ADDR_VAR 0 5
32227: PUSH
32228: LD_INT 1
32230: ST_TO_ADDR
// end else
32231: GO 32269
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
32233: LD_EXP 23
32237: PPUSH
32238: LD_STRING D4-Bobby-Bobby-1
32240: PPUSH
32241: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
32245: LD_EXP 12
32249: PPUSH
32250: LD_STRING D4-Bobby-JMM-1
32252: PPUSH
32253: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
32257: LD_EXP 23
32261: PPUSH
32262: LD_STRING D4-Bobby-Bobby-2
32264: PPUSH
32265: CALL_OW 88
// end ; end else
32269: GO 32967
// if unit = Cornel then
32271: LD_VAR 0 1
32275: PUSH
32276: LD_EXP 29
32280: EQUAL
32281: IFFALSE 32379
// begin if Cornel in selected then
32283: LD_EXP 29
32287: PUSH
32288: LD_EXP 3
32292: IN
32293: IFFALSE 32341
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
32295: LD_EXP 29
32299: PPUSH
32300: LD_STRING D3-Mark-Corn-1
32302: PPUSH
32303: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
32307: LD_EXP 12
32311: PPUSH
32312: LD_STRING D3-Mark-JMM-1
32314: PPUSH
32315: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
32319: LD_EXP 29
32323: PPUSH
32324: LD_STRING D3-Mark-Corn-2
32326: PPUSH
32327: CALL_OW 88
// joined := true ;
32331: LD_ADDR_VAR 0 5
32335: PUSH
32336: LD_INT 1
32338: ST_TO_ADDR
// end else
32339: GO 32377
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
32341: LD_EXP 29
32345: PPUSH
32346: LD_STRING D4-Mark-Corn-1
32348: PPUSH
32349: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
32353: LD_EXP 12
32357: PPUSH
32358: LD_STRING D3-Joan-JMM-1
32360: PPUSH
32361: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
32365: LD_EXP 29
32369: PPUSH
32370: LD_STRING D4-Mark-Corn-2
32372: PPUSH
32373: CALL_OW 88
// end ; end else
32377: GO 32967
// if unit = Gary then
32379: LD_VAR 0 1
32383: PUSH
32384: LD_EXP 30
32388: EQUAL
32389: IFFALSE 32473
// begin if Gary in selected then
32391: LD_EXP 30
32395: PUSH
32396: LD_EXP 3
32400: IN
32401: IFFALSE 32437
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
32403: LD_EXP 30
32407: PPUSH
32408: LD_STRING D3-Gary-Gary-1
32410: PPUSH
32411: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
32415: LD_EXP 12
32419: PPUSH
32420: LD_STRING D3-Gary-JMM-1
32422: PPUSH
32423: CALL_OW 88
// joined := true ;
32427: LD_ADDR_VAR 0 5
32431: PUSH
32432: LD_INT 1
32434: ST_TO_ADDR
// end else
32435: GO 32471
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
32437: LD_EXP 30
32441: PPUSH
32442: LD_STRING D4-Gary-Gary-1
32444: PPUSH
32445: CALL_OW 88
// SetSide ( Gary , 1 ) ;
32449: LD_EXP 30
32453: PPUSH
32454: LD_INT 1
32456: PPUSH
32457: CALL_OW 235
// DialogueOff ;
32461: CALL_OW 7
// InGameOff ;
32465: CALL_OW 9
// exit ;
32469: GO 33159
// end ; end else
32471: GO 32967
// if unit = Kikuchi then
32473: LD_VAR 0 1
32477: PUSH
32478: LD_EXP 32
32482: EQUAL
32483: IFFALSE 32567
// begin if Kikuchi in selected then
32485: LD_EXP 32
32489: PUSH
32490: LD_EXP 3
32494: IN
32495: IFFALSE 32531
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32497: LD_EXP 32
32501: PPUSH
32502: LD_STRING D3-Yamako-Yam-1
32504: PPUSH
32505: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32509: LD_EXP 12
32513: PPUSH
32514: LD_STRING D3-Soldier2-JMM-1
32516: PPUSH
32517: CALL_OW 88
// joined := true ;
32521: LD_ADDR_VAR 0 5
32525: PUSH
32526: LD_INT 1
32528: ST_TO_ADDR
// end else
32529: GO 32565
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32531: LD_EXP 32
32535: PPUSH
32536: LD_STRING D4-Yamako-Yam-1
32538: PPUSH
32539: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32543: LD_EXP 32
32547: PPUSH
32548: LD_INT 1
32550: PPUSH
32551: CALL_OW 235
// DialogueOff ;
32555: CALL_OW 7
// InGameOff ;
32559: CALL_OW 9
// exit ;
32563: GO 33159
// end ; end else
32565: GO 32967
// if unit = Gladstone then
32567: LD_VAR 0 1
32571: PUSH
32572: LD_EXP 27
32576: EQUAL
32577: IFFALSE 32651
// begin if Gladstone in selected then
32579: LD_EXP 27
32583: PUSH
32584: LD_EXP 3
32588: IN
32589: IFFALSE 32625
// begin joined := true ;
32591: LD_ADDR_VAR 0 5
32595: PUSH
32596: LD_INT 1
32598: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32599: LD_EXP 12
32603: PPUSH
32604: LD_STRING D3-Tim-JMM-1
32606: PPUSH
32607: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32611: LD_EXP 27
32615: PPUSH
32616: LD_STRING D3-Tim-Glad-1
32618: PPUSH
32619: CALL_OW 88
// end else
32623: GO 32649
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32625: LD_EXP 12
32629: PPUSH
32630: LD_STRING D4-Tim-JMM-1
32632: PPUSH
32633: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32637: LD_EXP 27
32641: PPUSH
32642: LD_STRING D4-Tim-Glad-1
32644: PPUSH
32645: CALL_OW 88
// end ; end else
32649: GO 32967
// if unit = Denis then
32651: LD_VAR 0 1
32655: PUSH
32656: LD_EXP 25
32660: EQUAL
32661: IFFALSE 32697
// begin joined := true ;
32663: LD_ADDR_VAR 0 5
32667: PUSH
32668: LD_INT 1
32670: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32671: LD_EXP 25
32675: PPUSH
32676: LD_STRING D3-Denis-Den-1
32678: PPUSH
32679: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32683: LD_EXP 12
32687: PPUSH
32688: LD_STRING D3-Denis-JMM-1
32690: PPUSH
32691: CALL_OW 88
// end else
32695: GO 32967
// if unit = Simms then
32697: LD_VAR 0 1
32701: PUSH
32702: LD_EXP 33
32706: EQUAL
32707: IFFALSE 32743
// begin joined := true ;
32709: LD_ADDR_VAR 0 5
32713: PUSH
32714: LD_INT 1
32716: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32717: LD_EXP 33
32721: PPUSH
32722: LD_STRING D3-Simms-Sim-1
32724: PPUSH
32725: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32729: LD_EXP 12
32733: PPUSH
32734: LD_STRING D3-Simms-JMM-1
32736: PPUSH
32737: CALL_OW 88
// end else
32741: GO 32967
// if unit = DeltaDoctor then
32743: LD_VAR 0 1
32747: PUSH
32748: LD_EXP 35
32752: EQUAL
32753: IFFALSE 32789
// begin joined := true ;
32755: LD_ADDR_VAR 0 5
32759: PUSH
32760: LD_INT 1
32762: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32763: LD_EXP 35
32767: PPUSH
32768: LD_STRING D3-Soldier1-Sol1-1
32770: PPUSH
32771: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32775: LD_EXP 12
32779: PPUSH
32780: LD_STRING D3-Soldier1-JMM-1
32782: PPUSH
32783: CALL_OW 88
// end else
32787: GO 32967
// begin joined := unit in selected ;
32789: LD_ADDR_VAR 0 5
32793: PUSH
32794: LD_VAR 0 1
32798: PUSH
32799: LD_EXP 3
32803: IN
32804: ST_TO_ADDR
// if joined then
32805: LD_VAR 0 5
32809: IFFALSE 32878
// begin if GetSex ( unit ) = sex_male then
32811: LD_VAR 0 1
32815: PPUSH
32816: CALL_OW 258
32820: PUSH
32821: LD_INT 1
32823: EQUAL
32824: IFFALSE 32852
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32826: LD_VAR 0 1
32830: PPUSH
32831: LD_STRING D3-Soldier1-Sol1-1
32833: PPUSH
32834: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32838: LD_EXP 12
32842: PPUSH
32843: LD_STRING D3-Soldier1-JMM-1
32845: PPUSH
32846: CALL_OW 88
// end else
32850: GO 32876
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32852: LD_VAR 0 1
32856: PPUSH
32857: LD_STRING D3-Soldier2-FSol2-1
32859: PPUSH
32860: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32864: LD_EXP 12
32868: PPUSH
32869: LD_STRING D3-Soldier2-JMM-1
32871: PPUSH
32872: CALL_OW 88
// end ; end else
32876: GO 32967
// begin if GetSex ( unit ) = sex_male then
32878: LD_VAR 0 1
32882: PPUSH
32883: CALL_OW 258
32887: PUSH
32888: LD_INT 1
32890: EQUAL
32891: IFFALSE 32931
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32893: LD_VAR 0 1
32897: PPUSH
32898: LD_STRING D4-Soldier2-Sol1-1
32900: PPUSH
32901: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32905: LD_EXP 12
32909: PPUSH
32910: LD_STRING D4-Soldier2-JMM-1
32912: PPUSH
32913: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32917: LD_VAR 0 1
32921: PPUSH
32922: LD_STRING D4-Soldier2-Sol2-1
32924: PPUSH
32925: CALL_OW 88
// end else
32929: GO 32967
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32931: LD_VAR 0 1
32935: PPUSH
32936: LD_STRING D4-Soldier1-FSol1-1
32938: PPUSH
32939: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32943: LD_EXP 12
32947: PPUSH
32948: LD_STRING D4-Soldier1-JMM-1
32950: PPUSH
32951: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32955: LD_VAR 0 1
32959: PPUSH
32960: LD_STRING D4-Soldier1-FSol1-2
32962: PPUSH
32963: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32967: CALL_OW 7
// InGameOff ;
32971: CALL_OW 9
// if building then
32975: LD_VAR 0 3
32979: IFFALSE 33080
// begin SetSide ( JMM , side ) ;
32981: LD_EXP 12
32985: PPUSH
32986: LD_VAR 0 4
32990: PPUSH
32991: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32995: LD_EXP 12
32999: PPUSH
33000: CALL_OW 122
// if joined then
33004: LD_VAR 0 5
33008: IFFALSE 33047
// begin SetSide ( unit , side ) ;
33010: LD_VAR 0 1
33014: PPUSH
33015: LD_VAR 0 4
33019: PPUSH
33020: CALL_OW 235
// SetSide ( building , 1 ) ;
33024: LD_VAR 0 3
33028: PPUSH
33029: LD_INT 1
33031: PPUSH
33032: CALL_OW 235
// ComExitBuilding ( unit ) ;
33036: LD_VAR 0 1
33040: PPUSH
33041: CALL_OW 122
// end else
33045: GO 33078
// begin wait ( 0 0$10 ) ;
33047: LD_INT 350
33049: PPUSH
33050: CALL_OW 67
// SetSide ( unit , 1 ) ;
33054: LD_VAR 0 1
33058: PPUSH
33059: LD_INT 1
33061: PPUSH
33062: CALL_OW 235
// SetSide ( building , 1 ) ;
33066: LD_VAR 0 3
33070: PPUSH
33071: LD_INT 1
33073: PPUSH
33074: CALL_OW 235
// end ; end else
33078: GO 33159
// begin ComStop ( [ JMM , unit ] ) ;
33080: LD_EXP 12
33084: PUSH
33085: LD_VAR 0 1
33089: PUSH
33090: EMPTY
33091: LIST
33092: LIST
33093: PPUSH
33094: CALL_OW 141
// if joined then
33098: LD_VAR 0 5
33102: IFFALSE 33120
// SetSide ( unit , side ) else
33104: LD_VAR 0 1
33108: PPUSH
33109: LD_VAR 0 4
33113: PPUSH
33114: CALL_OW 235
33118: GO 33159
// begin repeat wait ( 0 0$1 ) ;
33120: LD_INT 35
33122: PPUSH
33123: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
33127: LD_EXP 12
33131: PPUSH
33132: LD_VAR 0 1
33136: PPUSH
33137: CALL_OW 296
33141: PUSH
33142: LD_INT 10
33144: GREATER
33145: IFFALSE 33120
// SetSide ( unit , 1 ) ;
33147: LD_VAR 0 1
33151: PPUSH
33152: LD_INT 1
33154: PPUSH
33155: CALL_OW 235
// end ; end ; end ;
33159: LD_VAR 0 2
33163: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
33164: LD_EXP 12
33168: PPUSH
33169: CALL_OW 310
33173: PUSH
33174: LD_INT 47
33176: EQUAL
33177: IFFALSE 33245
33179: GO 33181
33181: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
33182: LD_STRING M1a
33184: PPUSH
33185: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
33189: LD_INT 13
33191: PPUSH
33192: LD_INT 1
33194: PPUSH
33195: LD_INT 2
33197: PPUSH
33198: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
33202: LD_INT 29
33204: PPUSH
33205: LD_INT 1
33207: PPUSH
33208: LD_INT 2
33210: PPUSH
33211: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
33215: LD_EXP 12
33219: PPUSH
33220: LD_INT 9
33222: PPUSH
33223: CALL_OW 336
// can_escape := true ;
33227: LD_ADDR_EXP 6
33231: PUSH
33232: LD_INT 1
33234: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
33235: LD_INT 19
33237: PPUSH
33238: LD_INT 1
33240: PPUSH
33241: CALL_OW 424
// end ;
33245: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
33246: LD_INT 22
33248: PUSH
33249: LD_INT 4
33251: PUSH
33252: EMPTY
33253: LIST
33254: LIST
33255: PUSH
33256: LD_INT 34
33258: PUSH
33259: LD_INT 12
33261: PUSH
33262: EMPTY
33263: LIST
33264: LIST
33265: PUSH
33266: EMPTY
33267: LIST
33268: LIST
33269: PPUSH
33270: CALL_OW 69
33274: IFFALSE 33356
33276: GO 33278
33278: DISABLE
33279: LD_INT 0
33281: PPUSH
// begin enable ;
33282: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
33283: LD_ADDR_VAR 0 1
33287: PUSH
33288: LD_INT 22
33290: PUSH
33291: LD_INT 4
33293: PUSH
33294: EMPTY
33295: LIST
33296: LIST
33297: PUSH
33298: LD_INT 34
33300: PUSH
33301: LD_INT 12
33303: PUSH
33304: EMPTY
33305: LIST
33306: LIST
33307: PUSH
33308: EMPTY
33309: LIST
33310: LIST
33311: PPUSH
33312: CALL_OW 69
33316: PUSH
33317: FOR_IN
33318: IFFALSE 33354
// if GetDistUnits ( i , JMM ) < 6 then
33320: LD_VAR 0 1
33324: PPUSH
33325: LD_EXP 12
33329: PPUSH
33330: CALL_OW 296
33334: PUSH
33335: LD_INT 6
33337: LESS
33338: IFFALSE 33352
// SetSide ( i , 7 ) ;
33340: LD_VAR 0 1
33344: PPUSH
33345: LD_INT 7
33347: PPUSH
33348: CALL_OW 235
33352: GO 33317
33354: POP
33355: POP
// end ;
33356: PPOPN 1
33358: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
33359: LD_EXP 6
33363: PUSH
33364: LD_INT 19
33366: PPUSH
33367: LD_INT 22
33369: PUSH
33370: LD_INT 7
33372: PUSH
33373: EMPTY
33374: LIST
33375: LIST
33376: PUSH
33377: LD_INT 21
33379: PUSH
33380: LD_INT 1
33382: PUSH
33383: EMPTY
33384: LIST
33385: LIST
33386: PUSH
33387: EMPTY
33388: LIST
33389: LIST
33390: PPUSH
33391: CALL_OW 71
33395: NOT
33396: AND
33397: PUSH
33398: LD_INT 3
33400: PPUSH
33401: CALL_OW 469
33405: NOT
33406: AND
33407: PUSH
33408: LD_INT 5
33410: PPUSH
33411: CALL_OW 469
33415: NOT
33416: AND
33417: IFFALSE 34643
33419: GO 33421
33421: DISABLE
33422: LD_INT 0
33424: PPUSH
33425: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
33426: LD_ADDR_VAR 0 1
33430: PUSH
33431: LD_EXP 3
33435: PPUSH
33436: LD_INT 22
33438: PUSH
33439: LD_INT 4
33441: PUSH
33442: EMPTY
33443: LIST
33444: LIST
33445: PUSH
33446: LD_INT 21
33448: PUSH
33449: LD_INT 1
33451: PUSH
33452: EMPTY
33453: LIST
33454: LIST
33455: PUSH
33456: EMPTY
33457: LIST
33458: LIST
33459: PPUSH
33460: CALL_OW 72
33464: PUSH
33465: LD_INT 0
33467: EQUAL
33468: ST_TO_ADDR
// if not all_taken then
33469: LD_VAR 0 1
33473: NOT
33474: IFFALSE 33615
// case query ( Q1 ) of 1 :
33476: LD_STRING Q1
33478: PPUSH
33479: CALL_OW 97
33483: PUSH
33484: LD_INT 1
33486: DOUBLE
33487: EQUAL
33488: IFTRUE 33492
33490: GO 33603
33492: POP
// begin repeat wait ( 0 0$1 ) ;
33493: LD_INT 35
33495: PPUSH
33496: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33500: LD_EXP 3
33504: PPUSH
33505: LD_INT 22
33507: PUSH
33508: LD_INT 4
33510: PUSH
33511: EMPTY
33512: LIST
33513: LIST
33514: PUSH
33515: LD_INT 21
33517: PUSH
33518: LD_INT 1
33520: PUSH
33521: EMPTY
33522: LIST
33523: LIST
33524: PUSH
33525: EMPTY
33526: LIST
33527: LIST
33528: PPUSH
33529: CALL_OW 72
33533: PUSH
33534: LD_INT 0
33536: EQUAL
33537: PUSH
33538: LD_INT 19
33540: PPUSH
33541: LD_INT 22
33543: PUSH
33544: LD_INT 7
33546: PUSH
33547: EMPTY
33548: LIST
33549: LIST
33550: PUSH
33551: LD_INT 21
33553: PUSH
33554: LD_INT 1
33556: PUSH
33557: EMPTY
33558: LIST
33559: LIST
33560: PUSH
33561: EMPTY
33562: LIST
33563: LIST
33564: PPUSH
33565: CALL_OW 71
33569: NOT
33570: AND
33571: PUSH
33572: LD_INT 3
33574: PPUSH
33575: CALL_OW 469
33579: NOT
33580: AND
33581: PUSH
33582: LD_INT 5
33584: PPUSH
33585: CALL_OW 469
33589: NOT
33590: AND
33591: IFFALSE 33493
// all_taken := true ;
33593: LD_ADDR_VAR 0 1
33597: PUSH
33598: LD_INT 1
33600: ST_TO_ADDR
// end ; 2 :
33601: GO 33615
33603: LD_INT 2
33605: DOUBLE
33606: EQUAL
33607: IFTRUE 33611
33609: GO 33614
33611: POP
// ; end ;
33612: GO 33615
33614: POP
// if team_kill_counter then
33615: LD_EXP 9
33619: IFFALSE 33635
// Say ( JMM , D5-JMM-1 ) else
33621: LD_EXP 12
33625: PPUSH
33626: LD_STRING D5-JMM-1
33628: PPUSH
33629: CALL_OW 88
33633: GO 33647
// Say ( JMM , D5-JMM-1a ) ;
33635: LD_EXP 12
33639: PPUSH
33640: LD_STRING D5-JMM-1a
33642: PPUSH
33643: CALL_OW 88
// if all_taken then
33647: LD_VAR 0 1
33651: IFFALSE 33665
// AddMedal ( All , 1 ) else
33653: LD_STRING All
33655: PPUSH
33656: LD_INT 1
33658: PPUSH
33659: CALL_OW 101
33663: GO 33676
// AddMedal ( All , - 1 ) ;
33665: LD_STRING All
33667: PPUSH
33668: LD_INT 1
33670: NEG
33671: PPUSH
33672: CALL_OW 101
// if team_kill_counter then
33676: LD_EXP 9
33680: IFFALSE 33695
// AddMedal ( Save , - 1 ) else
33682: LD_STRING Save
33684: PPUSH
33685: LD_INT 1
33687: NEG
33688: PPUSH
33689: CALL_OW 101
33693: GO 33705
// AddMedal ( Save , 1 ) ;
33695: LD_STRING Save
33697: PPUSH
33698: LD_INT 1
33700: PPUSH
33701: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33705: LD_EXP 8
33709: PUSH
33710: LD_INT 2
33712: PUSH
33713: LD_INT 1
33715: PUSH
33716: LD_INT 1
33718: PUSH
33719: EMPTY
33720: LIST
33721: LIST
33722: LIST
33723: PUSH
33724: LD_OWVAR 67
33728: ARRAY
33729: GREATEREQUAL
33730: IFFALSE 33745
// AddMedal ( Friendship , - 1 ) else
33732: LD_STRING Friendship
33734: PPUSH
33735: LD_INT 1
33737: NEG
33738: PPUSH
33739: CALL_OW 101
33743: GO 33755
// AddMedal ( Friendship , 1 ) ;
33745: LD_STRING Friendship
33747: PPUSH
33748: LD_INT 1
33750: PPUSH
33751: CALL_OW 101
// GiveMedals ( MAIN ) ;
33755: LD_STRING MAIN
33757: PPUSH
33758: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33762: LD_ADDR_VAR 0 2
33766: PUSH
33767: LD_INT 22
33769: PUSH
33770: LD_INT 7
33772: PUSH
33773: EMPTY
33774: LIST
33775: LIST
33776: PUSH
33777: LD_INT 2
33779: PUSH
33780: LD_INT 25
33782: PUSH
33783: LD_INT 1
33785: PUSH
33786: EMPTY
33787: LIST
33788: LIST
33789: PUSH
33790: LD_INT 25
33792: PUSH
33793: LD_INT 2
33795: PUSH
33796: EMPTY
33797: LIST
33798: LIST
33799: PUSH
33800: LD_INT 25
33802: PUSH
33803: LD_INT 3
33805: PUSH
33806: EMPTY
33807: LIST
33808: LIST
33809: PUSH
33810: LD_INT 25
33812: PUSH
33813: LD_INT 4
33815: PUSH
33816: EMPTY
33817: LIST
33818: LIST
33819: PUSH
33820: LD_INT 25
33822: PUSH
33823: LD_INT 5
33825: PUSH
33826: EMPTY
33827: LIST
33828: LIST
33829: PUSH
33830: LD_INT 25
33832: PUSH
33833: LD_INT 8
33835: PUSH
33836: EMPTY
33837: LIST
33838: LIST
33839: PUSH
33840: LD_INT 25
33842: PUSH
33843: LD_INT 9
33845: PUSH
33846: EMPTY
33847: LIST
33848: LIST
33849: PUSH
33850: EMPTY
33851: LIST
33852: LIST
33853: LIST
33854: LIST
33855: LIST
33856: LIST
33857: LIST
33858: LIST
33859: PUSH
33860: EMPTY
33861: LIST
33862: LIST
33863: PUSH
33864: EMPTY
33865: LIST
33866: PPUSH
33867: CALL_OW 69
33871: ST_TO_ADDR
// RewardPeople ( tmp ^ Roth ) ;
33872: LD_VAR 0 2
33876: PUSH
33877: LD_EXP 13
33881: ADD
33882: PPUSH
33883: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33887: LD_EXP 12
33891: PPUSH
33892: LD_STRING 12a_JMM
33894: PPUSH
33895: CALL_OW 38
// if IsLive ( Roth ) then
33899: LD_EXP 13
33903: PPUSH
33904: CALL_OW 300
33908: IFFALSE 33922
// SaveCharacters ( Roth , 12a_Roth ) ;
33910: LD_EXP 13
33914: PPUSH
33915: LD_STRING 12a_Roth
33917: PPUSH
33918: CALL_OW 38
// if Lisa in tmp then
33922: LD_EXP 21
33926: PUSH
33927: LD_VAR 0 2
33931: IN
33932: IFFALSE 33948
// SaveCharacters ( Lisa , 12a_Lisa ) else
33934: LD_EXP 21
33938: PPUSH
33939: LD_STRING 12a_Lisa
33941: PPUSH
33942: CALL_OW 38
33946: GO 33966
// if Lisa then
33948: LD_EXP 21
33952: IFFALSE 33966
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33954: LD_EXP 21
33958: PPUSH
33959: LD_STRING 12p_Lisa
33961: PPUSH
33962: CALL_OW 38
// if Donaldson in tmp then
33966: LD_EXP 22
33970: PUSH
33971: LD_VAR 0 2
33975: IN
33976: IFFALSE 33992
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33978: LD_EXP 22
33982: PPUSH
33983: LD_STRING 12a_Donaldson
33985: PPUSH
33986: CALL_OW 38
33990: GO 34010
// if Donaldson then
33992: LD_EXP 22
33996: IFFALSE 34010
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33998: LD_EXP 22
34002: PPUSH
34003: LD_STRING 12p_Donaldson
34005: PPUSH
34006: CALL_OW 38
// if Bobby in tmp then
34010: LD_EXP 23
34014: PUSH
34015: LD_VAR 0 2
34019: IN
34020: IFFALSE 34036
// SaveCharacters ( Bobby , 12a_Bobby ) else
34022: LD_EXP 23
34026: PPUSH
34027: LD_STRING 12a_Bobby
34029: PPUSH
34030: CALL_OW 38
34034: GO 34054
// if Bobby then
34036: LD_EXP 23
34040: IFFALSE 34054
// SaveCharacters ( Bobby , 12p_Bobby ) ;
34042: LD_EXP 23
34046: PPUSH
34047: LD_STRING 12p_Bobby
34049: PPUSH
34050: CALL_OW 38
// if Cyrus in tmp then
34054: LD_EXP 24
34058: PUSH
34059: LD_VAR 0 2
34063: IN
34064: IFFALSE 34080
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
34066: LD_EXP 24
34070: PPUSH
34071: LD_STRING 12a_Cyrus
34073: PPUSH
34074: CALL_OW 38
34078: GO 34098
// if Cyrus then
34080: LD_EXP 24
34084: IFFALSE 34098
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
34086: LD_EXP 24
34090: PPUSH
34091: LD_STRING 12p_Cyrus
34093: PPUSH
34094: CALL_OW 38
// if Denis in tmp then
34098: LD_EXP 25
34102: PUSH
34103: LD_VAR 0 2
34107: IN
34108: IFFALSE 34122
// SaveCharacters ( Denis , 12a_Denis ) ;
34110: LD_EXP 25
34114: PPUSH
34115: LD_STRING 12a_Denis
34117: PPUSH
34118: CALL_OW 38
// if Brown in tmp then
34122: LD_EXP 26
34126: PUSH
34127: LD_VAR 0 2
34131: IN
34132: IFFALSE 34148
// SaveCharacters ( Brown , 12a_Brown ) else
34134: LD_EXP 26
34138: PPUSH
34139: LD_STRING 12a_Brown
34141: PPUSH
34142: CALL_OW 38
34146: GO 34172
// if Brown in tmp then
34148: LD_EXP 26
34152: PUSH
34153: LD_VAR 0 2
34157: IN
34158: IFFALSE 34172
// SaveCharacters ( Brown , 12p_Brown ) ;
34160: LD_EXP 26
34164: PPUSH
34165: LD_STRING 12p_Brown
34167: PPUSH
34168: CALL_OW 38
// if Gladstone in tmp then
34172: LD_EXP 27
34176: PUSH
34177: LD_VAR 0 2
34181: IN
34182: IFFALSE 34198
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
34184: LD_EXP 27
34188: PPUSH
34189: LD_STRING 12a_Gladstone
34191: PPUSH
34192: CALL_OW 38
34196: GO 34216
// if Gladstone then
34198: LD_EXP 27
34202: IFFALSE 34216
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
34204: LD_EXP 27
34208: PPUSH
34209: LD_STRING 12p_Gladstone
34211: PPUSH
34212: CALL_OW 38
// if Houten in tmp then
34216: LD_EXP 28
34220: PUSH
34221: LD_VAR 0 2
34225: IN
34226: IFFALSE 34242
// SaveCharacters ( Houten , 12a_Houten ) else
34228: LD_EXP 28
34232: PPUSH
34233: LD_STRING 12a_Houten
34235: PPUSH
34236: CALL_OW 38
34240: GO 34260
// if Houten then
34242: LD_EXP 28
34246: IFFALSE 34260
// SaveCharacters ( Houten , 12p_Houten ) ;
34248: LD_EXP 28
34252: PPUSH
34253: LD_STRING 12p_Houten
34255: PPUSH
34256: CALL_OW 38
// if Cornel in tmp then
34260: LD_EXP 29
34264: PUSH
34265: LD_VAR 0 2
34269: IN
34270: IFFALSE 34286
// SaveCharacters ( Cornel , 12a_Cornell ) else
34272: LD_EXP 29
34276: PPUSH
34277: LD_STRING 12a_Cornell
34279: PPUSH
34280: CALL_OW 38
34284: GO 34304
// if Cornel then
34286: LD_EXP 29
34290: IFFALSE 34304
// SaveCharacters ( Cornel , 12p_Cornell ) ;
34292: LD_EXP 29
34296: PPUSH
34297: LD_STRING 12p_Cornell
34299: PPUSH
34300: CALL_OW 38
// if Gary in tmp then
34304: LD_EXP 30
34308: PUSH
34309: LD_VAR 0 2
34313: IN
34314: IFFALSE 34330
// SaveCharacters ( Gary , 12a_Gary ) else
34316: LD_EXP 30
34320: PPUSH
34321: LD_STRING 12a_Gary
34323: PPUSH
34324: CALL_OW 38
34328: GO 34348
// if Gary then
34330: LD_EXP 30
34334: IFFALSE 34348
// SaveCharacters ( Gary , 12p_Gary ) ;
34336: LD_EXP 30
34340: PPUSH
34341: LD_STRING 12p_Gary
34343: PPUSH
34344: CALL_OW 38
// if Frank in tmp then
34348: LD_EXP 31
34352: PUSH
34353: LD_VAR 0 2
34357: IN
34358: IFFALSE 34372
// SaveCharacters ( Frank , 12a_Frank ) ;
34360: LD_EXP 31
34364: PPUSH
34365: LD_STRING 12a_Frank
34367: PPUSH
34368: CALL_OW 38
// if Kikuchi in tmp then
34372: LD_EXP 32
34376: PUSH
34377: LD_VAR 0 2
34381: IN
34382: IFFALSE 34398
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
34384: LD_EXP 32
34388: PPUSH
34389: LD_STRING 12a_Kikuchi
34391: PPUSH
34392: CALL_OW 38
34396: GO 34416
// if Kikuchi then
34398: LD_EXP 32
34402: IFFALSE 34416
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
34404: LD_EXP 32
34408: PPUSH
34409: LD_STRING 12p_Kikuchi
34411: PPUSH
34412: CALL_OW 38
// if Simms in tmp then
34416: LD_EXP 33
34420: PUSH
34421: LD_VAR 0 2
34425: IN
34426: IFFALSE 34440
// SaveCharacters ( Simms , 12a_Simms ) ;
34428: LD_EXP 33
34432: PPUSH
34433: LD_STRING 12a_Simms
34435: PPUSH
34436: CALL_OW 38
// if Joan in tmp then
34440: LD_EXP 34
34444: PUSH
34445: LD_VAR 0 2
34449: IN
34450: IFFALSE 34464
// SaveCharacters ( Joan , 12a_Joan ) ;
34452: LD_EXP 34
34456: PPUSH
34457: LD_STRING 12a_Joan
34459: PPUSH
34460: CALL_OW 38
// if DeltaDoctor in tmp then
34464: LD_EXP 35
34468: PUSH
34469: LD_VAR 0 2
34473: IN
34474: IFFALSE 34488
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
34476: LD_EXP 35
34480: PPUSH
34481: LD_STRING 12a_DeltaDoctor
34483: PPUSH
34484: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
34488: LD_ADDR_VAR 0 2
34492: PUSH
34493: LD_VAR 0 2
34497: PUSH
34498: LD_EXP 12
34502: PUSH
34503: LD_EXP 13
34507: PUSH
34508: LD_EXP 21
34512: PUSH
34513: LD_EXP 22
34517: PUSH
34518: LD_EXP 23
34522: PUSH
34523: LD_EXP 24
34527: PUSH
34528: LD_EXP 25
34532: PUSH
34533: LD_EXP 26
34537: PUSH
34538: LD_EXP 27
34542: PUSH
34543: LD_EXP 28
34547: PUSH
34548: LD_EXP 29
34552: PUSH
34553: LD_EXP 30
34557: PUSH
34558: LD_EXP 31
34562: PUSH
34563: LD_EXP 32
34567: PUSH
34568: LD_EXP 33
34572: PUSH
34573: LD_EXP 34
34577: PUSH
34578: LD_EXP 35
34582: PUSH
34583: EMPTY
34584: LIST
34585: LIST
34586: LIST
34587: LIST
34588: LIST
34589: LIST
34590: LIST
34591: LIST
34592: LIST
34593: LIST
34594: LIST
34595: LIST
34596: LIST
34597: LIST
34598: LIST
34599: LIST
34600: LIST
34601: DIFF
34602: ST_TO_ADDR
// if tmp then
34603: LD_VAR 0 2
34607: IFFALSE 34621
// SaveCharacters ( tmp , 12a_others ) ;
34609: LD_VAR 0 2
34613: PPUSH
34614: LD_STRING 12a_others
34616: PPUSH
34617: CALL_OW 38
// SaveCharacters ( friends diff tmp , 12p_others ) ;
34621: LD_EXP 4
34625: PUSH
34626: LD_VAR 0 2
34630: DIFF
34631: PPUSH
34632: LD_STRING 12p_others
34634: PPUSH
34635: CALL_OW 38
// YouWin ;
34639: CALL_OW 103
// end ; end_of_file
34643: PPOPN 2
34645: END
// on SailEvent ( event ) do var tmp ;
34646: LD_INT 0
34648: PPUSH
// begin if event = 1 then
34649: LD_VAR 0 1
34653: PUSH
34654: LD_INT 1
34656: EQUAL
34657: IFFALSE 34730
// begin if not mobile_patrol then
34659: LD_EXP 15
34663: NOT
34664: IFFALSE 34668
// exit ;
34666: GO 34730
// tmp := mobile_patrol [ mobile_patrol ] ;
34668: LD_ADDR_VAR 0 2
34672: PUSH
34673: LD_EXP 15
34677: PUSH
34678: LD_EXP 15
34682: ARRAY
34683: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34684: LD_ADDR_EXP 15
34688: PUSH
34689: LD_EXP 15
34693: PPUSH
34694: LD_EXP 15
34698: PPUSH
34699: CALL_OW 3
34703: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34704: LD_VAR 0 2
34708: PPUSH
34709: LD_EXP 16
34713: PUSH
34714: LD_EXP 15
34718: PUSH
34719: LD_INT 1
34721: PLUS
34722: ARRAY
34723: PPUSH
34724: EMPTY
34725: PPUSH
34726: CALL 6569 0 3
// end ; end ;
34730: PPOPN 2
34732: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34733: LD_VAR 0 1
34737: PUSH
34738: LD_EXP 12
34742: EQUAL
34743: IFFALSE 34752
// YouLost ( JMM ) ;
34745: LD_STRING JMM
34747: PPUSH
34748: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34752: LD_VAR 0 1
34756: PPUSH
34757: CALL_OW 255
34761: PUSH
34762: LD_INT 7
34764: EQUAL
34765: PUSH
34766: LD_VAR 0 1
34770: PPUSH
34771: CALL_OW 264
34775: PUSH
34776: LD_INT 12
34778: EQUAL
34779: AND
34780: IFFALSE 34789
// YouLost ( Artifact ) ;
34782: LD_STRING Artifact
34784: PPUSH
34785: CALL_OW 104
// if ( GetSide ( un ) = 7 and GetType ( un ) = unit_human ) or un = Roth then
34789: LD_VAR 0 1
34793: PPUSH
34794: CALL_OW 255
34798: PUSH
34799: LD_INT 7
34801: EQUAL
34802: PUSH
34803: LD_VAR 0 1
34807: PPUSH
34808: CALL_OW 247
34812: PUSH
34813: LD_INT 1
34815: EQUAL
34816: AND
34817: PUSH
34818: LD_VAR 0 1
34822: PUSH
34823: LD_EXP 13
34827: EQUAL
34828: OR
34829: IFFALSE 34845
// team_kill_counter := team_kill_counter + 1 ;
34831: LD_ADDR_EXP 9
34835: PUSH
34836: LD_EXP 9
34840: PUSH
34841: LD_INT 1
34843: PLUS
34844: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34845: LD_VAR 0 1
34849: PPUSH
34850: CALL_OW 255
34854: PUSH
34855: LD_INT 1
34857: EQUAL
34858: PUSH
34859: LD_VAR 0 1
34863: PPUSH
34864: CALL_OW 247
34868: PUSH
34869: LD_INT 1
34871: EQUAL
34872: AND
34873: IFFALSE 34889
// friends_kill_counter := friends_kill_counter + 1 ;
34875: LD_ADDR_EXP 8
34879: PUSH
34880: LD_EXP 8
34884: PUSH
34885: LD_INT 1
34887: PLUS
34888: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34889: LD_VAR 0 1
34893: PPUSH
34894: CALL_OW 255
34898: PUSH
34899: LD_INT 1
34901: NONEQUAL
34902: IFFALSE 34906
// exit ;
34904: GO 34983
// if GetControl ( un ) = control_remote then
34906: LD_VAR 0 1
34910: PPUSH
34911: CALL_OW 263
34915: PUSH
34916: LD_INT 2
34918: EQUAL
34919: IFFALSE 34937
// defenders := defenders diff un ;
34921: LD_ADDR_EXP 18
34925: PUSH
34926: LD_EXP 18
34930: PUSH
34931: LD_VAR 0 1
34935: DIFF
34936: ST_TO_ADDR
// if not un in defenders then
34937: LD_VAR 0 1
34941: PUSH
34942: LD_EXP 18
34946: IN
34947: NOT
34948: IFFALSE 34983
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34950: LD_ADDR_EXP 19
34954: PUSH
34955: LD_VAR 0 1
34959: PPUSH
34960: CALL_OW 250
34964: PUSH
34965: LD_VAR 0 1
34969: PPUSH
34970: CALL_OW 251
34974: PUSH
34975: EMPTY
34976: LIST
34977: LIST
34978: ST_TO_ADDR
// Defend ;
34979: CALL 2519 0 0
// end ; end ;
34983: PPOPN 1
34985: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34986: LD_VAR 0 1
34990: PPUSH
34991: CALL_OW 255
34995: PUSH
34996: LD_INT 1
34998: NONEQUAL
34999: IFFALSE 35003
// exit ;
35001: GO 35027
// if GetControl ( veh ) = control_remote then
35003: LD_VAR 0 1
35007: PPUSH
35008: CALL_OW 263
35012: PUSH
35013: LD_INT 2
35015: EQUAL
35016: IFFALSE 35027
// Connect ( veh ) ;
35018: LD_VAR 0 1
35022: PPUSH
35023: CALL 5764 0 1
// end ;
35027: PPOPN 2
35029: END
// on UnitGoesToRed ( un ) do var i , veh ;
35030: LD_INT 0
35032: PPUSH
35033: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
35034: LD_VAR 0 1
35038: PPUSH
35039: CALL_OW 255
35043: PUSH
35044: LD_INT 1
35046: EQUAL
35047: PUSH
35048: LD_VAR 0 1
35052: PPUSH
35053: CALL_OW 263
35057: PUSH
35058: LD_INT 2
35060: EQUAL
35061: AND
35062: IFFALSE 35073
// ComUnlink ( un ) ;
35064: LD_VAR 0 1
35068: PPUSH
35069: CALL_OW 136
// if un = ambar0 then
35073: LD_VAR 0 1
35077: PUSH
35078: LD_INT 18
35080: EQUAL
35081: IFFALSE 35191
// begin uc_side := 1 ;
35083: LD_ADDR_OWVAR 20
35087: PUSH
35088: LD_INT 1
35090: ST_TO_ADDR
// uc_nation := 1 ;
35091: LD_ADDR_OWVAR 21
35095: PUSH
35096: LD_INT 1
35098: ST_TO_ADDR
// for i = 1 to 6 do
35099: LD_ADDR_VAR 0 2
35103: PUSH
35104: DOUBLE
35105: LD_INT 1
35107: DEC
35108: ST_TO_ADDR
35109: LD_INT 6
35111: PUSH
35112: FOR_TO
35113: IFFALSE 35189
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
35115: LD_INT 3
35117: PPUSH
35118: LD_INT 1
35120: PPUSH
35121: LD_INT 3
35123: PPUSH
35124: LD_INT 4
35126: PPUSH
35127: LD_INT 100
35129: PPUSH
35130: CALL 5528 0 5
// veh := CreateVehicle ;
35134: LD_ADDR_VAR 0 3
35138: PUSH
35139: CALL_OW 45
35143: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
35144: LD_VAR 0 3
35148: PPUSH
35149: LD_INT 1
35151: PPUSH
35152: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
35156: LD_VAR 0 3
35160: PPUSH
35161: LD_INT 25
35163: PPUSH
35164: LD_INT 0
35166: PPUSH
35167: CALL_OW 49
// defenders := defenders ^ veh ;
35171: LD_ADDR_EXP 18
35175: PUSH
35176: LD_EXP 18
35180: PUSH
35181: LD_VAR 0 3
35185: ADD
35186: ST_TO_ADDR
// end ;
35187: GO 35112
35189: POP
35190: POP
// end ; end ;
35191: PPOPN 3
35193: END
// on EnterBuilding ( building , unit ) do begin if unit = Powell then
35194: LD_VAR 0 2
35198: PUSH
35199: LD_EXP 14
35203: EQUAL
35204: IFFALSE 35215
// RemoveUnit ( Powell ) ;
35206: LD_EXP 14
35210: PPUSH
35211: CALL_OW 64
// end ;
35215: PPOPN 2
35217: END
