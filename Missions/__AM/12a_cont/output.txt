// starting var i ; begin ResetFog ;
   0: CALL_OW 335
// InitVariables ;
   4: CALL 116 0 0
// PrepareNature ;
   8: CALL 29613 0 0
// PrepareAlliance ;
  12: CALL 202 0 0
// PrepareFriends ;
  16: CALL 2785 0 0
// PrepareAmerican ;
  20: CALL 541 0 0
// PlaceSeeing ( 91 , 70 , 7 , - 32178 ) ;
  24: LD_INT 91
  26: PPUSH
  27: LD_INT 70
  29: PPUSH
  30: LD_INT 7
  32: PPUSH
  33: LD_INT 32178
  35: NEG
  36: PPUSH
  37: CALL_OW 330
// RemoveSeeing ( 91 , 70 , 7 ) ;
  41: LD_INT 91
  43: PPUSH
  44: LD_INT 70
  46: PPUSH
  47: LD_INT 7
  49: PPUSH
  50: CALL_OW 331
// if debug then
  54: LD_EXP 1
  58: IFFALSE 99
// begin SetAttitude ( 1 , 7 , att_enemy , true ) ;
  60: LD_INT 1
  62: PPUSH
  63: LD_INT 7
  65: PPUSH
  66: LD_INT 2
  68: PPUSH
  69: LD_INT 1
  71: PPUSH
  72: CALL_OW 80
// RemoveUnit ( Powell ) ;
  76: LD_EXP 13
  80: PPUSH
  81: CALL_OW 64
// DoNotAttack ( 1 , JMM ) ;
  85: LD_INT 1
  87: PPUSH
  88: LD_EXP 11
  92: PPUSH
  93: CALL_OW 471
// end else
  97: GO 103
// Action ;
  99: CALL 30038 0 0
// PreparePatrol ;
 103: CALL 889 0 0
// game := true ;
 107: LD_ADDR_EXP 2
 111: PUSH
 112: LD_INT 1
 114: ST_TO_ADDR
// end ;
 115: END
// export debug , game , selected , friends , others , reached_lab , can_escape , friends_kill_counter , team_kill_counter , gamma_commander ; export function InitVariables ; begin
 116: LD_INT 0
 118: PPUSH
// debug := false ;
 119: LD_ADDR_EXP 1
 123: PUSH
 124: LD_INT 0
 126: ST_TO_ADDR
// friends := [ ] ;
 127: LD_ADDR_EXP 4
 131: PUSH
 132: EMPTY
 133: ST_TO_ADDR
// selected := [ ] ;
 134: LD_ADDR_EXP 3
 138: PUSH
 139: EMPTY
 140: ST_TO_ADDR
// reached_lab := false ;
 141: LD_ADDR_EXP 6
 145: PUSH
 146: LD_INT 0
 148: ST_TO_ADDR
// can_escape := false ;
 149: LD_ADDR_EXP 7
 153: PUSH
 154: LD_INT 0
 156: ST_TO_ADDR
// game := false ;
 157: LD_ADDR_EXP 2
 161: PUSH
 162: LD_INT 0
 164: ST_TO_ADDR
// gamma_commander := LoadVariable ( GammaCommander , 2 ) ;
 165: LD_ADDR_EXP 10
 169: PUSH
 170: LD_STRING GammaCommander
 172: PPUSH
 173: LD_INT 2
 175: PPUSH
 176: CALL_OW 30
 180: ST_TO_ADDR
// friends_kill_counter := 0 ;
 181: LD_ADDR_EXP 8
 185: PUSH
 186: LD_INT 0
 188: ST_TO_ADDR
// team_kill_counter := 0 ;
 189: LD_ADDR_EXP 9
 193: PUSH
 194: LD_INT 0
 196: ST_TO_ADDR
// end ; end_of_file
 197: LD_VAR 0 1
 201: RET
// export JMM , Roth ; export function PrepareAlliance ; var cargo ; begin
 202: LD_INT 0
 204: PPUSH
 205: PPUSH
// uc_side := 7 ;
 206: LD_ADDR_OWVAR 20
 210: PUSH
 211: LD_INT 7
 213: ST_TO_ADDR
// uc_nation := 1 ;
 214: LD_ADDR_OWVAR 21
 218: PUSH
 219: LD_INT 1
 221: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , ( not debug ) , 11_ ) ;
 222: LD_ADDR_EXP 11
 226: PUSH
 227: LD_STRING JMM
 229: PPUSH
 230: LD_EXP 1
 234: NOT
 235: PPUSH
 236: LD_STRING 11_
 238: PPUSH
 239: CALL 5081 0 3
 243: ST_TO_ADDR
// uc_side := 4 ;
 244: LD_ADDR_OWVAR 20
 248: PUSH
 249: LD_INT 4
 251: ST_TO_ADDR
// Roth := NewCharacter ( Roth ) ;
 252: LD_ADDR_EXP 12
 256: PUSH
 257: LD_STRING Roth
 259: PPUSH
 260: CALL_OW 25
 264: ST_TO_ADDR
// SetDir ( JMM , 1 ) ;
 265: LD_EXP 11
 269: PPUSH
 270: LD_INT 1
 272: PPUSH
 273: CALL_OW 233
// SetClass ( JMM , 1 ) ;
 277: LD_EXP 11
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL_OW 336
// PlaceUnitXY ( JMM , 105 , 10 , false ) ;
 289: LD_EXP 11
 293: PPUSH
 294: LD_INT 105
 296: PPUSH
 297: LD_INT 10
 299: PPUSH
 300: LD_INT 0
 302: PPUSH
 303: CALL_OW 48
// SetDir ( Roth , 4 ) ;
 307: LD_EXP 12
 311: PPUSH
 312: LD_INT 4
 314: PPUSH
 315: CALL_OW 233
// PlaceUnitXY ( Roth , 109 , 10 , false ) ;
 319: LD_EXP 12
 323: PPUSH
 324: LD_INT 109
 326: PPUSH
 327: LD_INT 10
 329: PPUSH
 330: LD_INT 0
 332: PPUSH
 333: CALL_OW 48
// ComTurnUnit ( JMM , Roth ) ;
 337: LD_EXP 11
 341: PPUSH
 342: LD_EXP 12
 346: PPUSH
 347: CALL_OW 119
// ComTurnUnit ( Roth , JMM ) ;
 351: LD_EXP 12
 355: PPUSH
 356: LD_EXP 11
 360: PPUSH
 361: CALL_OW 119
// PrepareVehicle ( us_medium_tracked , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
 365: LD_INT 3
 367: PPUSH
 368: LD_INT 3
 370: PPUSH
 371: LD_INT 3
 373: PPUSH
 374: LD_INT 12
 376: PPUSH
 377: LD_INT 100
 379: PPUSH
 380: CALL 5144 0 5
// cargo := CreateVehicle ;
 384: LD_ADDR_VAR 0 2
 388: PUSH
 389: CALL_OW 45
 393: ST_TO_ADDR
// SetDir ( cargo , 1 ) ;
 394: LD_VAR 0 2
 398: PPUSH
 399: LD_INT 1
 401: PPUSH
 402: CALL_OW 233
// PlaceUnitXY ( cargo , 179 , 45 , false ) ;
 406: LD_VAR 0 2
 410: PPUSH
 411: LD_INT 179
 413: PPUSH
 414: LD_INT 45
 416: PPUSH
 417: LD_INT 0
 419: PPUSH
 420: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 30 ) ;
 424: LD_VAR 0 2
 428: PPUSH
 429: LD_INT 4
 431: PPUSH
 432: LD_INT 30
 434: PPUSH
 435: CALL_OW 290
// if LoadVariable ( 11_artifact_captured , 0 ) then
 439: LD_STRING 11_artifact_captured
 441: PPUSH
 442: LD_INT 0
 444: PPUSH
 445: CALL_OW 30
 449: IFFALSE 506
// begin cargo := CreateVehicle ;
 451: LD_ADDR_VAR 0 2
 455: PUSH
 456: CALL_OW 45
 460: ST_TO_ADDR
// SetDir ( cargo , 0 ) ;
 461: LD_VAR 0 2
 465: PPUSH
 466: LD_INT 0
 468: PPUSH
 469: CALL_OW 233
// PlaceUnitXY ( cargo , 171 , 85 , false ) ;
 473: LD_VAR 0 2
 477: PPUSH
 478: LD_INT 171
 480: PPUSH
 481: LD_INT 85
 483: PPUSH
 484: LD_INT 0
 486: PPUSH
 487: CALL_OW 48
// SetCargo ( cargo , mat_artifact , 50 ) ;
 491: LD_VAR 0 2
 495: PPUSH
 496: LD_INT 4
 498: PPUSH
 499: LD_INT 50
 501: PPUSH
 502: CALL_OW 290
// end ; SetSide ( amlab , 7 ) ;
 506: LD_INT 47
 508: PPUSH
 509: LD_INT 7
 511: PPUSH
 512: CALL_OW 235
// DoNotAttack ( 1 , amlab ) ;
 516: LD_INT 1
 518: PPUSH
 519: LD_INT 47
 521: PPUSH
 522: CALL_OW 471
// ChangeSideFog ( 7 , 4 ) ;
 526: LD_INT 7
 528: PPUSH
 529: LD_INT 4
 531: PPUSH
 532: CALL_OW 343
// end ; end_of_file
 536: LD_VAR 0 1
 540: RET
// export Powell , mobile_patrol , mobile_points , powell_guards , defenders , defcon , defcon_wave ; export function PrepareAmerican ; var i , j , b , un ; begin
 541: LD_INT 0
 543: PPUSH
 544: PPUSH
 545: PPUSH
 546: PPUSH
 547: PPUSH
// defcon := 0 ;
 548: LD_ADDR_EXP 18
 552: PUSH
 553: LD_INT 0
 555: ST_TO_ADDR
// defcon_wave := 0 ;
 556: LD_ADDR_EXP 19
 560: PUSH
 561: LD_INT 0
 563: ST_TO_ADDR
// defenders := [ ] ;
 564: LD_ADDR_EXP 17
 568: PUSH
 569: EMPTY
 570: ST_TO_ADDR
// SetBName ( alfa , alpha ) ;
 571: LD_INT 5
 573: PPUSH
 574: LD_STRING alpha
 576: PPUSH
 577: CALL_OW 500
// uc_side := 1 ;
 581: LD_ADDR_OWVAR 20
 585: PUSH
 586: LD_INT 1
 588: ST_TO_ADDR
// uc_nation := 1 ;
 589: LD_ADDR_OWVAR 21
 593: PUSH
 594: LD_INT 1
 596: ST_TO_ADDR
// Powell := NewCharacter ( Powell ) ;
 597: LD_ADDR_EXP 13
 601: PUSH
 602: LD_STRING Powell
 604: PPUSH
 605: CALL_OW 25
 609: ST_TO_ADDR
// PlaceUnitXY ( Powell , 110 , 26 , false ) ;
 610: LD_EXP 13
 614: PPUSH
 615: LD_INT 110
 617: PPUSH
 618: LD_INT 26
 620: PPUSH
 621: LD_INT 0
 623: PPUSH
 624: CALL_OW 48
// ComHold ( Powell ) ;
 628: LD_EXP 13
 632: PPUSH
 633: CALL_OW 140
// for i = 1 to 5 do
 637: LD_ADDR_VAR 0 2
 641: PUSH
 642: DOUBLE
 643: LD_INT 1
 645: DEC
 646: ST_TO_ADDR
 647: LD_INT 5
 649: PUSH
 650: FOR_TO
 651: IFFALSE 707
// begin PrepareHuman ( false , 1 , 10 ) ;
 653: LD_INT 0
 655: PPUSH
 656: LD_INT 1
 658: PPUSH
 659: LD_INT 10
 661: PPUSH
 662: CALL_OW 380
// powell_guards := Insert ( powell_guards , 1 , CreateHuman ) ;
 666: LD_ADDR_EXP 16
 670: PUSH
 671: LD_EXP 16
 675: PPUSH
 676: LD_INT 1
 678: PPUSH
 679: CALL_OW 44
 683: PPUSH
 684: CALL_OW 2
 688: ST_TO_ADDR
// PlaceHumanInUnit ( powell_guards [ 1 ] , ambar0 ) ;
 689: LD_EXP 16
 693: PUSH
 694: LD_INT 1
 696: ARRAY
 697: PPUSH
 698: LD_INT 18
 700: PPUSH
 701: CALL_OW 52
// end ;
 705: GO 650
 707: POP
 708: POP
// if Difficulty > 2 then
 709: LD_OWVAR 67
 713: PUSH
 714: LD_INT 2
 716: GREATER
 717: IFFALSE 766
// begin bc_type := b_turret ;
 719: LD_ADDR_OWVAR 42
 723: PUSH
 724: LD_INT 33
 726: ST_TO_ADDR
// bc_level := 7 ;
 727: LD_ADDR_OWVAR 43
 731: PUSH
 732: LD_INT 7
 734: ST_TO_ADDR
// b := CreateAndPlaceBuildingXYD ( 107 , 55 , 5 ) ;
 735: LD_ADDR_VAR 0 4
 739: PUSH
 740: LD_INT 107
 742: PPUSH
 743: LD_INT 55
 745: PPUSH
 746: LD_INT 5
 748: PPUSH
 749: CALL_OW 47
 753: ST_TO_ADDR
// PlaceWeaponTurret ( b , us_rocket_launcher ) ;
 754: LD_VAR 0 4
 758: PPUSH
 759: LD_INT 7
 761: PPUSH
 762: CALL_OW 431
// end ; for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_factory ] ] ) ^ FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_control_tower ] ] ) do
 766: LD_ADDR_VAR 0 2
 770: PUSH
 771: LD_INT 22
 773: PUSH
 774: LD_INT 1
 776: PUSH
 777: EMPTY
 778: LIST
 779: LIST
 780: PUSH
 781: LD_INT 30
 783: PUSH
 784: LD_INT 3
 786: PUSH
 787: EMPTY
 788: LIST
 789: LIST
 790: PUSH
 791: EMPTY
 792: LIST
 793: LIST
 794: PPUSH
 795: CALL_OW 69
 799: PUSH
 800: LD_INT 22
 802: PUSH
 803: LD_INT 1
 805: PUSH
 806: EMPTY
 807: LIST
 808: LIST
 809: PUSH
 810: LD_INT 30
 812: PUSH
 813: LD_INT 36
 815: PUSH
 816: EMPTY
 817: LIST
 818: LIST
 819: PUSH
 820: EMPTY
 821: LIST
 822: LIST
 823: PPUSH
 824: CALL_OW 69
 828: ADD
 829: PUSH
 830: FOR_IN
 831: IFFALSE 882
// for j = 1 to 3 do
 833: LD_ADDR_VAR 0 3
 837: PUSH
 838: DOUBLE
 839: LD_INT 1
 841: DEC
 842: ST_TO_ADDR
 843: LD_INT 3
 845: PUSH
 846: FOR_TO
 847: IFFALSE 878
// begin PrepareHuman ( false , 3 , 6 ) ;
 849: LD_INT 0
 851: PPUSH
 852: LD_INT 3
 854: PPUSH
 855: LD_INT 6
 857: PPUSH
 858: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , i ) ;
 862: CALL_OW 44
 866: PPUSH
 867: LD_VAR 0 2
 871: PPUSH
 872: CALL_OW 52
// end ;
 876: GO 846
 878: POP
 879: POP
 880: GO 830
 882: POP
 883: POP
// end ;
 884: LD_VAR 0 1
 888: RET
// export function PreparePatrol ; var i , un ; begin
 889: LD_INT 0
 891: PPUSH
 892: PPUSH
 893: PPUSH
// uc_side := 1 ;
 894: LD_ADDR_OWVAR 20
 898: PUSH
 899: LD_INT 1
 901: ST_TO_ADDR
// uc_nation := 1 ;
 902: LD_ADDR_OWVAR 21
 906: PUSH
 907: LD_INT 1
 909: ST_TO_ADDR
// mobile_points := [ [ [ 99 , 55 ] , [ 113 , 67 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 103 , 41 ] ] , [ [ 27 , 49 ] , [ 46 , 49 ] , [ 87 , 70 ] , [ 99 , 79 ] , [ 118 , 111 ] , [ 99 , 79 ] , [ 87 , 70 ] , [ 46 , 49 ] ] , [ [ 200 , 88 ] , [ 175 , 80 ] , [ 135 , 62 ] , [ 117 , 53 ] , [ 103 , 41 ] , [ 99 , 24 ] , [ 85 , 3 ] , [ 99 , 24 ] , [ 103 , 41 ] , [ 98 , 47 ] , [ 99 , 56 ] , [ 96 , 66 ] , [ 99 , 56 ] , [ 112 , 66 ] , [ 129 , 68 ] , [ 135 , 62 ] , [ 156 , 71 ] , [ 168 , 76 ] , [ 168 , 61 ] , [ 168 , 75 ] , [ 185 , 85 ] ] ] ;
 910: LD_ADDR_EXP 15
 914: PUSH
 915: LD_INT 99
 917: PUSH
 918: LD_INT 55
 920: PUSH
 921: EMPTY
 922: LIST
 923: LIST
 924: PUSH
 925: LD_INT 113
 927: PUSH
 928: LD_INT 67
 930: PUSH
 931: EMPTY
 932: LIST
 933: LIST
 934: PUSH
 935: LD_INT 129
 937: PUSH
 938: LD_INT 68
 940: PUSH
 941: EMPTY
 942: LIST
 943: LIST
 944: PUSH
 945: LD_INT 135
 947: PUSH
 948: LD_INT 62
 950: PUSH
 951: EMPTY
 952: LIST
 953: LIST
 954: PUSH
 955: LD_INT 103
 957: PUSH
 958: LD_INT 41
 960: PUSH
 961: EMPTY
 962: LIST
 963: LIST
 964: PUSH
 965: EMPTY
 966: LIST
 967: LIST
 968: LIST
 969: LIST
 970: LIST
 971: PUSH
 972: LD_INT 27
 974: PUSH
 975: LD_INT 49
 977: PUSH
 978: EMPTY
 979: LIST
 980: LIST
 981: PUSH
 982: LD_INT 46
 984: PUSH
 985: LD_INT 49
 987: PUSH
 988: EMPTY
 989: LIST
 990: LIST
 991: PUSH
 992: LD_INT 87
 994: PUSH
 995: LD_INT 70
 997: PUSH
 998: EMPTY
 999: LIST
1000: LIST
1001: PUSH
1002: LD_INT 99
1004: PUSH
1005: LD_INT 79
1007: PUSH
1008: EMPTY
1009: LIST
1010: LIST
1011: PUSH
1012: LD_INT 118
1014: PUSH
1015: LD_INT 111
1017: PUSH
1018: EMPTY
1019: LIST
1020: LIST
1021: PUSH
1022: LD_INT 99
1024: PUSH
1025: LD_INT 79
1027: PUSH
1028: EMPTY
1029: LIST
1030: LIST
1031: PUSH
1032: LD_INT 87
1034: PUSH
1035: LD_INT 70
1037: PUSH
1038: EMPTY
1039: LIST
1040: LIST
1041: PUSH
1042: LD_INT 46
1044: PUSH
1045: LD_INT 49
1047: PUSH
1048: EMPTY
1049: LIST
1050: LIST
1051: PUSH
1052: EMPTY
1053: LIST
1054: LIST
1055: LIST
1056: LIST
1057: LIST
1058: LIST
1059: LIST
1060: LIST
1061: PUSH
1062: LD_INT 200
1064: PUSH
1065: LD_INT 88
1067: PUSH
1068: EMPTY
1069: LIST
1070: LIST
1071: PUSH
1072: LD_INT 175
1074: PUSH
1075: LD_INT 80
1077: PUSH
1078: EMPTY
1079: LIST
1080: LIST
1081: PUSH
1082: LD_INT 135
1084: PUSH
1085: LD_INT 62
1087: PUSH
1088: EMPTY
1089: LIST
1090: LIST
1091: PUSH
1092: LD_INT 117
1094: PUSH
1095: LD_INT 53
1097: PUSH
1098: EMPTY
1099: LIST
1100: LIST
1101: PUSH
1102: LD_INT 103
1104: PUSH
1105: LD_INT 41
1107: PUSH
1108: EMPTY
1109: LIST
1110: LIST
1111: PUSH
1112: LD_INT 99
1114: PUSH
1115: LD_INT 24
1117: PUSH
1118: EMPTY
1119: LIST
1120: LIST
1121: PUSH
1122: LD_INT 85
1124: PUSH
1125: LD_INT 3
1127: PUSH
1128: EMPTY
1129: LIST
1130: LIST
1131: PUSH
1132: LD_INT 99
1134: PUSH
1135: LD_INT 24
1137: PUSH
1138: EMPTY
1139: LIST
1140: LIST
1141: PUSH
1142: LD_INT 103
1144: PUSH
1145: LD_INT 41
1147: PUSH
1148: EMPTY
1149: LIST
1150: LIST
1151: PUSH
1152: LD_INT 98
1154: PUSH
1155: LD_INT 47
1157: PUSH
1158: EMPTY
1159: LIST
1160: LIST
1161: PUSH
1162: LD_INT 99
1164: PUSH
1165: LD_INT 56
1167: PUSH
1168: EMPTY
1169: LIST
1170: LIST
1171: PUSH
1172: LD_INT 96
1174: PUSH
1175: LD_INT 66
1177: PUSH
1178: EMPTY
1179: LIST
1180: LIST
1181: PUSH
1182: LD_INT 99
1184: PUSH
1185: LD_INT 56
1187: PUSH
1188: EMPTY
1189: LIST
1190: LIST
1191: PUSH
1192: LD_INT 112
1194: PUSH
1195: LD_INT 66
1197: PUSH
1198: EMPTY
1199: LIST
1200: LIST
1201: PUSH
1202: LD_INT 129
1204: PUSH
1205: LD_INT 68
1207: PUSH
1208: EMPTY
1209: LIST
1210: LIST
1211: PUSH
1212: LD_INT 135
1214: PUSH
1215: LD_INT 62
1217: PUSH
1218: EMPTY
1219: LIST
1220: LIST
1221: PUSH
1222: LD_INT 156
1224: PUSH
1225: LD_INT 71
1227: PUSH
1228: EMPTY
1229: LIST
1230: LIST
1231: PUSH
1232: LD_INT 168
1234: PUSH
1235: LD_INT 76
1237: PUSH
1238: EMPTY
1239: LIST
1240: LIST
1241: PUSH
1242: LD_INT 168
1244: PUSH
1245: LD_INT 61
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: PUSH
1252: LD_INT 168
1254: PUSH
1255: LD_INT 75
1257: PUSH
1258: EMPTY
1259: LIST
1260: LIST
1261: PUSH
1262: LD_INT 185
1264: PUSH
1265: LD_INT 85
1267: PUSH
1268: EMPTY
1269: LIST
1270: LIST
1271: PUSH
1272: EMPTY
1273: LIST
1274: LIST
1275: LIST
1276: LIST
1277: LIST
1278: LIST
1279: LIST
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: LIST
1287: LIST
1288: LIST
1289: LIST
1290: LIST
1291: LIST
1292: LIST
1293: LIST
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: ST_TO_ADDR
// mobile_patrol := [ ] ;
1300: LD_ADDR_EXP 14
1304: PUSH
1305: EMPTY
1306: ST_TO_ADDR
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1307: LD_INT 3
1309: PPUSH
1310: LD_INT 1
1312: PPUSH
1313: LD_INT 3
1315: PPUSH
1316: LD_INT 4
1318: PPUSH
1319: LD_INT 100
1321: PPUSH
1322: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 1 , CreateVehicle ) ;
1326: LD_ADDR_EXP 14
1330: PUSH
1331: LD_EXP 14
1335: PPUSH
1336: LD_INT 1
1338: PPUSH
1339: CALL_OW 45
1343: PPUSH
1344: CALL_OW 2
1348: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 1 ] , 99 , 55 , false ) ;
1349: LD_EXP 14
1353: PUSH
1354: LD_INT 1
1356: ARRAY
1357: PPUSH
1358: LD_INT 99
1360: PPUSH
1361: LD_INT 55
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 48
// PrepareVehicle ( us_medium_wheeled , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
1371: LD_INT 2
1373: PPUSH
1374: LD_INT 1
1376: PPUSH
1377: LD_INT 3
1379: PPUSH
1380: LD_INT 4
1382: PPUSH
1383: LD_INT 100
1385: PPUSH
1386: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 2 , CreateVehicle ) ;
1390: LD_ADDR_EXP 14
1394: PUSH
1395: LD_EXP 14
1399: PPUSH
1400: LD_INT 2
1402: PPUSH
1403: CALL_OW 45
1407: PPUSH
1408: CALL_OW 2
1412: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 2 ] , 27 , 49 , false ) ;
1413: LD_EXP 14
1417: PUSH
1418: LD_INT 2
1420: ARRAY
1421: PPUSH
1422: LD_INT 27
1424: PPUSH
1425: LD_INT 49
1427: PPUSH
1428: LD_INT 0
1430: PPUSH
1431: CALL_OW 48
// PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_rocket_launcher , 100 ) ;
1435: LD_INT 3
1437: PPUSH
1438: LD_INT 1
1440: PPUSH
1441: LD_INT 3
1443: PPUSH
1444: LD_INT 7
1446: PPUSH
1447: LD_INT 100
1449: PPUSH
1450: CALL 5144 0 5
// mobile_patrol := Insert ( mobile_patrol , 3 , CreateVehicle ) ;
1454: LD_ADDR_EXP 14
1458: PUSH
1459: LD_EXP 14
1463: PPUSH
1464: LD_INT 3
1466: PPUSH
1467: CALL_OW 45
1471: PPUSH
1472: CALL_OW 2
1476: ST_TO_ADDR
// PlaceUnitXY ( mobile_patrol [ 3 ] , 200 , 88 , false ) ;
1477: LD_EXP 14
1481: PUSH
1482: LD_INT 3
1484: ARRAY
1485: PPUSH
1486: LD_INT 200
1488: PPUSH
1489: LD_INT 88
1491: PPUSH
1492: LD_INT 0
1494: PPUSH
1495: CALL_OW 48
// for i = mobile_patrol downto 1 do
1499: LD_ADDR_VAR 0 2
1503: PUSH
1504: DOUBLE
1505: LD_EXP 14
1509: INC
1510: ST_TO_ADDR
1511: LD_INT 1
1513: PUSH
1514: FOR_DOWNTO
1515: IFFALSE 1526
// RaiseSailEvent ( 1 ) ;
1517: LD_INT 1
1519: PPUSH
1520: CALL_OW 427
1524: GO 1514
1526: POP
1527: POP
// end ;
1528: LD_VAR 0 1
1532: RET
// export function SpawnCargo ( ) ; var i , c , k , areas , road , tmp , veh ; begin
1533: LD_INT 0
1535: PPUSH
1536: PPUSH
1537: PPUSH
1538: PPUSH
1539: PPUSH
1540: PPUSH
1541: PPUSH
1542: PPUSH
// areas := [ [ road_east , 4 ] , [ road_south , 5 ] , [ road_west , 1 ] ] ;
1543: LD_ADDR_VAR 0 5
1547: PUSH
1548: LD_INT 20
1550: PUSH
1551: LD_INT 4
1553: PUSH
1554: EMPTY
1555: LIST
1556: LIST
1557: PUSH
1558: LD_INT 21
1560: PUSH
1561: LD_INT 5
1563: PUSH
1564: EMPTY
1565: LIST
1566: LIST
1567: PUSH
1568: LD_INT 22
1570: PUSH
1571: LD_INT 1
1573: PUSH
1574: EMPTY
1575: LIST
1576: LIST
1577: PUSH
1578: EMPTY
1579: LIST
1580: LIST
1581: LIST
1582: ST_TO_ADDR
// road := [ [ 176 , 81 , 135 , 62 , 114 , 67 , 93 , 71 , 76 , 67 ] , [ 107 , 92 , 92 , 72 , 77 , 68 ] , [ 45 , 49 , 67 , 59 , 77 , 68 ] ] ;
1583: LD_ADDR_VAR 0 6
1587: PUSH
1588: LD_INT 176
1590: PUSH
1591: LD_INT 81
1593: PUSH
1594: LD_INT 135
1596: PUSH
1597: LD_INT 62
1599: PUSH
1600: LD_INT 114
1602: PUSH
1603: LD_INT 67
1605: PUSH
1606: LD_INT 93
1608: PUSH
1609: LD_INT 71
1611: PUSH
1612: LD_INT 76
1614: PUSH
1615: LD_INT 67
1617: PUSH
1618: EMPTY
1619: LIST
1620: LIST
1621: LIST
1622: LIST
1623: LIST
1624: LIST
1625: LIST
1626: LIST
1627: LIST
1628: LIST
1629: PUSH
1630: LD_INT 107
1632: PUSH
1633: LD_INT 92
1635: PUSH
1636: LD_INT 92
1638: PUSH
1639: LD_INT 72
1641: PUSH
1642: LD_INT 77
1644: PUSH
1645: LD_INT 68
1647: PUSH
1648: EMPTY
1649: LIST
1650: LIST
1651: LIST
1652: LIST
1653: LIST
1654: LIST
1655: PUSH
1656: LD_INT 45
1658: PUSH
1659: LD_INT 49
1661: PUSH
1662: LD_INT 67
1664: PUSH
1665: LD_INT 59
1667: PUSH
1668: LD_INT 77
1670: PUSH
1671: LD_INT 68
1673: PUSH
1674: EMPTY
1675: LIST
1676: LIST
1677: LIST
1678: LIST
1679: LIST
1680: LIST
1681: PUSH
1682: EMPTY
1683: LIST
1684: LIST
1685: LIST
1686: ST_TO_ADDR
// k := rand ( 1 , areas ) ;
1687: LD_ADDR_VAR 0 4
1691: PUSH
1692: LD_INT 1
1694: PPUSH
1695: LD_VAR 0 5
1699: PPUSH
1700: CALL_OW 12
1704: ST_TO_ADDR
// c := rand ( 1 , 2 ) ;
1705: LD_ADDR_VAR 0 3
1709: PUSH
1710: LD_INT 1
1712: PPUSH
1713: LD_INT 2
1715: PPUSH
1716: CALL_OW 12
1720: ST_TO_ADDR
// uc_side := 1 ;
1721: LD_ADDR_OWVAR 20
1725: PUSH
1726: LD_INT 1
1728: ST_TO_ADDR
// uc_nation := 1 ;
1729: LD_ADDR_OWVAR 21
1733: PUSH
1734: LD_INT 1
1736: ST_TO_ADDR
// PrepareVehicle ( us_medium_wheeled , engine_siberite , control_computer , us_cargo_bay , 100 ) ;
1737: LD_INT 2
1739: PPUSH
1740: LD_INT 3
1742: PPUSH
1743: LD_INT 3
1745: PPUSH
1746: LD_INT 12
1748: PPUSH
1749: LD_INT 100
1751: PPUSH
1752: CALL 5144 0 5
// veh := CreateVehicle ;
1756: LD_ADDR_VAR 0 8
1760: PUSH
1761: CALL_OW 45
1765: ST_TO_ADDR
// SetDir ( veh , areas [ k ] [ 2 ] ) ;
1766: LD_VAR 0 8
1770: PPUSH
1771: LD_VAR 0 5
1775: PUSH
1776: LD_VAR 0 4
1780: ARRAY
1781: PUSH
1782: LD_INT 2
1784: ARRAY
1785: PPUSH
1786: CALL_OW 233
// PlaceUnitArea ( veh , areas [ k ] [ 1 ] , false ) ;
1790: LD_VAR 0 8
1794: PPUSH
1795: LD_VAR 0 5
1799: PUSH
1800: LD_VAR 0 4
1804: ARRAY
1805: PUSH
1806: LD_INT 1
1808: ARRAY
1809: PPUSH
1810: LD_INT 0
1812: PPUSH
1813: CALL_OW 49
// SetCargo ( veh , [ mat_cans , mat_siberit ] [ c ] , 100 ) ;
1817: LD_VAR 0 8
1821: PPUSH
1822: LD_INT 1
1824: PUSH
1825: LD_INT 3
1827: PUSH
1828: EMPTY
1829: LIST
1830: LIST
1831: PUSH
1832: LD_VAR 0 3
1836: ARRAY
1837: PPUSH
1838: LD_INT 100
1840: PPUSH
1841: CALL_OW 290
// tmp := road [ k ] ;
1845: LD_ADDR_VAR 0 7
1849: PUSH
1850: LD_VAR 0 6
1854: PUSH
1855: LD_VAR 0 4
1859: ARRAY
1860: ST_TO_ADDR
// for i = 1 to tmp div 2 do
1861: LD_ADDR_VAR 0 2
1865: PUSH
1866: DOUBLE
1867: LD_INT 1
1869: DEC
1870: ST_TO_ADDR
1871: LD_VAR 0 7
1875: PUSH
1876: LD_INT 2
1878: DIV
1879: PUSH
1880: FOR_TO
1881: IFFALSE 1928
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1883: LD_VAR 0 8
1887: PPUSH
1888: LD_VAR 0 7
1892: PUSH
1893: LD_VAR 0 2
1897: PUSH
1898: LD_INT 2
1900: MUL
1901: PUSH
1902: LD_INT 1
1904: MINUS
1905: ARRAY
1906: PPUSH
1907: LD_VAR 0 7
1911: PUSH
1912: LD_VAR 0 2
1916: PUSH
1917: LD_INT 2
1919: MUL
1920: ARRAY
1921: PPUSH
1922: CALL_OW 171
1926: GO 1880
1928: POP
1929: POP
// AddComGive ( veh , alfa ) ;
1930: LD_VAR 0 8
1934: PPUSH
1935: LD_INT 5
1937: PPUSH
1938: CALL_OW 221
// AddComWait ( veh , 0 0$2 ) ;
1942: LD_VAR 0 8
1946: PPUSH
1947: LD_INT 70
1949: PPUSH
1950: CALL_OW 202
// for i = tmp div 2 downto 1 do
1954: LD_ADDR_VAR 0 2
1958: PUSH
1959: DOUBLE
1960: LD_VAR 0 7
1964: PUSH
1965: LD_INT 2
1967: DIV
1968: INC
1969: ST_TO_ADDR
1970: LD_INT 1
1972: PUSH
1973: FOR_DOWNTO
1974: IFFALSE 2021
// AddComMoveXY ( veh , tmp [ i * 2 - 1 ] , tmp [ i * 2 ] ) ;
1976: LD_VAR 0 8
1980: PPUSH
1981: LD_VAR 0 7
1985: PUSH
1986: LD_VAR 0 2
1990: PUSH
1991: LD_INT 2
1993: MUL
1994: PUSH
1995: LD_INT 1
1997: MINUS
1998: ARRAY
1999: PPUSH
2000: LD_VAR 0 7
2004: PUSH
2005: LD_VAR 0 2
2009: PUSH
2010: LD_INT 2
2012: MUL
2013: ARRAY
2014: PPUSH
2015: CALL_OW 171
2019: GO 1973
2021: POP
2022: POP
// AddComMoveToArea ( veh , areas [ k ] [ 1 ] ) ;
2023: LD_VAR 0 8
2027: PPUSH
2028: LD_VAR 0 5
2032: PUSH
2033: LD_VAR 0 4
2037: ARRAY
2038: PUSH
2039: LD_INT 1
2041: ARRAY
2042: PPUSH
2043: CALL_OW 173
// repeat wait ( 0 0$1 ) ;
2047: LD_INT 35
2049: PPUSH
2050: CALL_OW 67
// until IsInArea ( veh , areas [ k ] [ 1 ] ) and GetCargo ( veh , c ) = 0 ;
2054: LD_VAR 0 8
2058: PPUSH
2059: LD_VAR 0 5
2063: PUSH
2064: LD_VAR 0 4
2068: ARRAY
2069: PUSH
2070: LD_INT 1
2072: ARRAY
2073: PPUSH
2074: CALL_OW 308
2078: PUSH
2079: LD_VAR 0 8
2083: PPUSH
2084: LD_VAR 0 3
2088: PPUSH
2089: CALL_OW 289
2093: PUSH
2094: LD_INT 0
2096: EQUAL
2097: AND
2098: IFFALSE 2047
// RemoveUnit ( veh ) ;
2100: LD_VAR 0 8
2104: PPUSH
2105: CALL_OW 64
// end ;
2109: LD_VAR 0 1
2113: RET
// every 3 3$00 do
2114: GO 2116
2116: DISABLE
// begin enable ;
2117: ENABLE
// SpawnCargo ;
2118: CALL 1533 0 0
// end ;
2122: END
// export function PrepareDefenders ; var i , tmp ; begin
2123: LD_INT 0
2125: PPUSH
2126: PPUSH
2127: PPUSH
// if defenders then
2128: LD_EXP 17
2132: IFFALSE 2136
// exit ;
2134: GO 2400
// for i = 1 to [ 4 , 5 , 6 ] [ Difficulty ] do
2136: LD_ADDR_VAR 0 2
2140: PUSH
2141: DOUBLE
2142: LD_INT 1
2144: DEC
2145: ST_TO_ADDR
2146: LD_INT 4
2148: PUSH
2149: LD_INT 5
2151: PUSH
2152: LD_INT 6
2154: PUSH
2155: EMPTY
2156: LIST
2157: LIST
2158: LIST
2159: PUSH
2160: LD_OWVAR 67
2164: ARRAY
2165: PUSH
2166: FOR_TO
2167: IFFALSE 2306
// begin tmp := Produce ( amfac2 , [ us_medium_wheeled , us_medium_tracked ] [ rand ( 1 , 2 ) ] , [ engine_combustion , engine_siberite ] [ rand ( 1 , 2 ) ] , control_remote , [ us_gatling_gun , us_double_gun , us_laser ] [ rand ( 1 , 3 ) ] ) ;
2169: LD_ADDR_VAR 0 3
2173: PUSH
2174: LD_INT 6
2176: PPUSH
2177: LD_INT 2
2179: PUSH
2180: LD_INT 3
2182: PUSH
2183: EMPTY
2184: LIST
2185: LIST
2186: PUSH
2187: LD_INT 1
2189: PPUSH
2190: LD_INT 2
2192: PPUSH
2193: CALL_OW 12
2197: ARRAY
2198: PPUSH
2199: LD_INT 1
2201: PUSH
2202: LD_INT 3
2204: PUSH
2205: EMPTY
2206: LIST
2207: LIST
2208: PUSH
2209: LD_INT 1
2211: PPUSH
2212: LD_INT 2
2214: PPUSH
2215: CALL_OW 12
2219: ARRAY
2220: PPUSH
2221: LD_INT 2
2223: PPUSH
2224: LD_INT 4
2226: PUSH
2227: LD_INT 5
2229: PUSH
2230: LD_INT 9
2232: PUSH
2233: EMPTY
2234: LIST
2235: LIST
2236: LIST
2237: PUSH
2238: LD_INT 1
2240: PPUSH
2241: LD_INT 3
2243: PPUSH
2244: CALL_OW 12
2248: ARRAY
2249: PPUSH
2250: CALL 27795 0 5
2254: ST_TO_ADDR
// if tmp then
2255: LD_VAR 0 3
2259: IFFALSE 2304
// AddComConstruct ( amfac2 , tmp [ 1 ] , tmp [ 2 ] , tmp [ 3 ] , tmp [ 4 ] ) ;
2261: LD_INT 6
2263: PPUSH
2264: LD_VAR 0 3
2268: PUSH
2269: LD_INT 1
2271: ARRAY
2272: PPUSH
2273: LD_VAR 0 3
2277: PUSH
2278: LD_INT 2
2280: ARRAY
2281: PPUSH
2282: LD_VAR 0 3
2286: PUSH
2287: LD_INT 3
2289: ARRAY
2290: PPUSH
2291: LD_VAR 0 3
2295: PUSH
2296: LD_INT 4
2298: ARRAY
2299: PPUSH
2300: CALL_OW 185
// end ;
2304: GO 2166
2306: POP
2307: POP
// repeat wait ( 0 0$1 ) ;
2308: LD_INT 35
2310: PPUSH
2311: CALL_OW 67
// until FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) >= [ 4 , 5 , 6 ] [ Difficulty ] ;
2315: LD_INT 22
2317: PUSH
2318: LD_INT 1
2320: PUSH
2321: EMPTY
2322: LIST
2323: LIST
2324: PUSH
2325: LD_INT 33
2327: PUSH
2328: LD_INT 2
2330: PUSH
2331: EMPTY
2332: LIST
2333: LIST
2334: PUSH
2335: EMPTY
2336: LIST
2337: LIST
2338: PPUSH
2339: CALL_OW 69
2343: PUSH
2344: LD_INT 4
2346: PUSH
2347: LD_INT 5
2349: PUSH
2350: LD_INT 6
2352: PUSH
2353: EMPTY
2354: LIST
2355: LIST
2356: LIST
2357: PUSH
2358: LD_OWVAR 67
2362: ARRAY
2363: GREATEREQUAL
2364: IFFALSE 2308
// defenders := FilterAllUnits ( [ [ f_side , 1 ] , [ f_control , control_remote ] ] ) ;
2366: LD_ADDR_EXP 17
2370: PUSH
2371: LD_INT 22
2373: PUSH
2374: LD_INT 1
2376: PUSH
2377: EMPTY
2378: LIST
2379: LIST
2380: PUSH
2381: LD_INT 33
2383: PUSH
2384: LD_INT 2
2386: PUSH
2387: EMPTY
2388: LIST
2389: LIST
2390: PUSH
2391: EMPTY
2392: LIST
2393: LIST
2394: PPUSH
2395: CALL_OW 69
2399: ST_TO_ADDR
// end ;
2400: LD_VAR 0 1
2404: RET
// export function Defend ; var i , un , veh , tmp ; begin
2405: LD_INT 0
2407: PPUSH
2408: PPUSH
2409: PPUSH
2410: PPUSH
2411: PPUSH
// defcon_wave := defcon_wave + 1 ;
2412: LD_ADDR_EXP 19
2416: PUSH
2417: LD_EXP 19
2421: PUSH
2422: LD_INT 1
2424: PLUS
2425: ST_TO_ADDR
// if not defenders then
2426: LD_EXP 17
2430: NOT
2431: IFFALSE 2437
// PrepareDefenders ;
2433: CALL 2123 0 0
// if defcon_wave > 1 then
2437: LD_EXP 19
2441: PUSH
2442: LD_INT 1
2444: GREATER
2445: IFFALSE 2671
// begin for i = 1 to defcon_wave + 2 do
2447: LD_ADDR_VAR 0 2
2451: PUSH
2452: DOUBLE
2453: LD_INT 1
2455: DEC
2456: ST_TO_ADDR
2457: LD_EXP 19
2461: PUSH
2462: LD_INT 2
2464: PLUS
2465: PUSH
2466: FOR_TO
2467: IFFALSE 2593
// begin PrepareVehicle ( us_heavy_tracked , engine_siberite , control_manual , [ us_gatling_gun , us_heavy_gun , us_rocket_launcher ] [ rand ( 1 , 3 ) ] , 100 ) ;
2469: LD_INT 4
2471: PPUSH
2472: LD_INT 3
2474: PPUSH
2475: LD_INT 1
2477: PPUSH
2478: LD_INT 4
2480: PUSH
2481: LD_INT 6
2483: PUSH
2484: LD_INT 7
2486: PUSH
2487: EMPTY
2488: LIST
2489: LIST
2490: LIST
2491: PUSH
2492: LD_INT 1
2494: PPUSH
2495: LD_INT 3
2497: PPUSH
2498: CALL_OW 12
2502: ARRAY
2503: PPUSH
2504: LD_INT 100
2506: PPUSH
2507: CALL 5144 0 5
// veh := CreateVehicle ;
2511: LD_ADDR_VAR 0 4
2515: PUSH
2516: CALL_OW 45
2520: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
2521: LD_VAR 0 4
2525: PPUSH
2526: LD_INT 1
2528: PPUSH
2529: CALL_OW 233
// defenders := defenders ^ veh ;
2533: LD_ADDR_EXP 17
2537: PUSH
2538: LD_EXP 17
2542: PUSH
2543: LD_VAR 0 4
2547: ADD
2548: ST_TO_ADDR
// PrepareHuman ( false , 3 , 9 ) ;
2549: LD_INT 0
2551: PPUSH
2552: LD_INT 3
2554: PPUSH
2555: LD_INT 9
2557: PPUSH
2558: CALL_OW 380
// PlaceHumanInUnit ( CreateHuman , veh ) ;
2562: CALL_OW 44
2566: PPUSH
2567: LD_VAR 0 4
2571: PPUSH
2572: CALL_OW 52
// PlaceUnitArea ( veh , west_spawn , false ) ;
2576: LD_VAR 0 4
2580: PPUSH
2581: LD_INT 25
2583: PPUSH
2584: LD_INT 0
2586: PPUSH
2587: CALL_OW 49
// end ;
2591: GO 2466
2593: POP
2594: POP
// for i = 1 to defcon_wave do
2595: LD_ADDR_VAR 0 2
2599: PUSH
2600: DOUBLE
2601: LD_INT 1
2603: DEC
2604: ST_TO_ADDR
2605: LD_EXP 19
2609: PUSH
2610: FOR_TO
2611: IFFALSE 2669
// begin PrepareHuman ( false , 5 , 9 ) ;
2613: LD_INT 0
2615: PPUSH
2616: LD_INT 5
2618: PPUSH
2619: LD_INT 9
2621: PPUSH
2622: CALL_OW 380
// un := CreateHuman ;
2626: LD_ADDR_VAR 0 3
2630: PUSH
2631: CALL_OW 44
2635: ST_TO_ADDR
// PlaceUnitArea ( un , west_spawn , false ) ;
2636: LD_VAR 0 3
2640: PPUSH
2641: LD_INT 25
2643: PPUSH
2644: LD_INT 0
2646: PPUSH
2647: CALL_OW 49
// defenders := defenders ^ un ;
2651: LD_ADDR_EXP 17
2655: PUSH
2656: LD_EXP 17
2660: PUSH
2661: LD_VAR 0 3
2665: ADD
2666: ST_TO_ADDR
// end ;
2667: GO 2610
2669: POP
2670: POP
// end ; repeat wait ( 0 0$1 ) ;
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 67
// for i in defenders do
2678: LD_ADDR_VAR 0 2
2682: PUSH
2683: LD_EXP 17
2687: PUSH
2688: FOR_IN
2689: IFFALSE 2771
// begin if defcon and GetDistUnitXY ( i , defcon [ 1 ] , defcon [ 2 ] ) > 10 and not HasTask ( i ) then
2691: LD_EXP 18
2695: PUSH
2696: LD_VAR 0 2
2700: PPUSH
2701: LD_EXP 18
2705: PUSH
2706: LD_INT 1
2708: ARRAY
2709: PPUSH
2710: LD_EXP 18
2714: PUSH
2715: LD_INT 2
2717: ARRAY
2718: PPUSH
2719: CALL_OW 297
2723: PUSH
2724: LD_INT 10
2726: GREATER
2727: AND
2728: PUSH
2729: LD_VAR 0 2
2733: PPUSH
2734: CALL_OW 314
2738: NOT
2739: AND
2740: IFFALSE 2769
// ComAgressiveMove ( i , defcon [ 1 ] , defcon [ 2 ] ) ;
2742: LD_VAR 0 2
2746: PPUSH
2747: LD_EXP 18
2751: PUSH
2752: LD_INT 1
2754: ARRAY
2755: PPUSH
2756: LD_EXP 18
2760: PUSH
2761: LD_INT 2
2763: ARRAY
2764: PPUSH
2765: CALL_OW 114
// end ;
2769: GO 2688
2771: POP
2772: POP
// until not defenders ;
2773: LD_EXP 17
2777: NOT
2778: IFFALSE 2671
// end ; end_of_file
2780: LD_VAR 0 1
2784: RET
// export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ; export function PrepareFriends ; var i , tmp , buildings , areas , bunkers , cl ; begin
2785: LD_INT 0
2787: PPUSH
2788: PPUSH
2789: PPUSH
2790: PPUSH
2791: PPUSH
2792: PPUSH
2793: PPUSH
// uc_side := 4 ;
2794: LD_ADDR_OWVAR 20
2798: PUSH
2799: LD_INT 4
2801: ST_TO_ADDR
// uc_nation := 1 ;
2802: LD_ADDR_OWVAR 21
2806: PUSH
2807: LD_INT 1
2809: ST_TO_ADDR
// DeltaDoctor := PrepareUnit ( DeltaDoctor , ( not debug ) , 10c_ ) ;
2810: LD_ADDR_EXP 34
2814: PUSH
2815: LD_STRING DeltaDoctor
2817: PPUSH
2818: LD_EXP 1
2822: NOT
2823: PPUSH
2824: LD_STRING 10c_
2826: PPUSH
2827: CALL 5081 0 3
2831: ST_TO_ADDR
// Joan := PrepareUnit ( Joan , ( not debug ) , 10c_ ) ;
2832: LD_ADDR_EXP 33
2836: PUSH
2837: LD_STRING Joan
2839: PPUSH
2840: LD_EXP 1
2844: NOT
2845: PPUSH
2846: LD_STRING 10c_
2848: PPUSH
2849: CALL 5081 0 3
2853: ST_TO_ADDR
// if Joan then
2854: LD_EXP 33
2858: IFFALSE 2889
// friends := Insert ( friends , friends + 1 , Joan ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_EXP 4
2869: PPUSH
2870: LD_EXP 4
2874: PUSH
2875: LD_INT 1
2877: PLUS
2878: PPUSH
2879: LD_EXP 33
2883: PPUSH
2884: CALL_OW 2
2888: ST_TO_ADDR
// Simms := PrepareUnit ( Simms , ( not debug ) , 10c_ ) ;
2889: LD_ADDR_EXP 32
2893: PUSH
2894: LD_STRING Simms
2896: PPUSH
2897: LD_EXP 1
2901: NOT
2902: PPUSH
2903: LD_STRING 10c_
2905: PPUSH
2906: CALL 5081 0 3
2910: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , ( not debug ) , 11_ ) ;
2911: LD_ADDR_EXP 31
2915: PUSH
2916: LD_STRING Kikuchi
2918: PPUSH
2919: LD_EXP 1
2923: NOT
2924: PPUSH
2925: LD_STRING 11_
2927: PPUSH
2928: CALL 5081 0 3
2932: ST_TO_ADDR
// if Kikuchi then
2933: LD_EXP 31
2937: IFFALSE 2968
// friends := Insert ( friends , friends + 1 , Kikuchi ) ;
2939: LD_ADDR_EXP 4
2943: PUSH
2944: LD_EXP 4
2948: PPUSH
2949: LD_EXP 4
2953: PUSH
2954: LD_INT 1
2956: PLUS
2957: PPUSH
2958: LD_EXP 31
2962: PPUSH
2963: CALL_OW 2
2967: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , ( not debug ) , 11_ ) ;
2968: LD_ADDR_EXP 30
2972: PUSH
2973: LD_STRING Frank
2975: PPUSH
2976: LD_EXP 1
2980: NOT
2981: PPUSH
2982: LD_STRING 11_
2984: PPUSH
2985: CALL 5081 0 3
2989: ST_TO_ADDR
// if Frank then
2990: LD_EXP 30
2994: IFFALSE 3025
// friends := Insert ( friends , friends + 1 , Frank ) ;
2996: LD_ADDR_EXP 4
3000: PUSH
3001: LD_EXP 4
3005: PPUSH
3006: LD_EXP 4
3010: PUSH
3011: LD_INT 1
3013: PLUS
3014: PPUSH
3015: LD_EXP 30
3019: PPUSH
3020: CALL_OW 2
3024: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , ( not debug ) , 11_ ) ;
3025: LD_ADDR_EXP 29
3029: PUSH
3030: LD_STRING Gary
3032: PPUSH
3033: LD_EXP 1
3037: NOT
3038: PPUSH
3039: LD_STRING 11_
3041: PPUSH
3042: CALL 5081 0 3
3046: ST_TO_ADDR
// if Gary then
3047: LD_EXP 29
3051: IFFALSE 3082
// friends := Insert ( friends , friends + 1 , Gary ) ;
3053: LD_ADDR_EXP 4
3057: PUSH
3058: LD_EXP 4
3062: PPUSH
3063: LD_EXP 4
3067: PUSH
3068: LD_INT 1
3070: PLUS
3071: PPUSH
3072: LD_EXP 29
3076: PPUSH
3077: CALL_OW 2
3081: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , ( not debug ) , 11_ ) ;
3082: LD_ADDR_EXP 28
3086: PUSH
3087: LD_STRING Cornel
3089: PPUSH
3090: LD_EXP 1
3094: NOT
3095: PPUSH
3096: LD_STRING 11_
3098: PPUSH
3099: CALL 5081 0 3
3103: ST_TO_ADDR
// if Cornel then
3104: LD_EXP 28
3108: IFFALSE 3139
// friends := Insert ( friends , friends + 1 , Cornel ) ;
3110: LD_ADDR_EXP 4
3114: PUSH
3115: LD_EXP 4
3119: PPUSH
3120: LD_EXP 4
3124: PUSH
3125: LD_INT 1
3127: PLUS
3128: PPUSH
3129: LD_EXP 28
3133: PPUSH
3134: CALL_OW 2
3138: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , ( not debug ) , 11_ ) ;
3139: LD_ADDR_EXP 27
3143: PUSH
3144: LD_STRING Houten
3146: PPUSH
3147: LD_EXP 1
3151: NOT
3152: PPUSH
3153: LD_STRING 11_
3155: PPUSH
3156: CALL 5081 0 3
3160: ST_TO_ADDR
// if Houten then
3161: LD_EXP 27
3165: IFFALSE 3196
// friends := Insert ( friends , friends + 1 , Houten ) ;
3167: LD_ADDR_EXP 4
3171: PUSH
3172: LD_EXP 4
3176: PPUSH
3177: LD_EXP 4
3181: PUSH
3182: LD_INT 1
3184: PLUS
3185: PPUSH
3186: LD_EXP 27
3190: PPUSH
3191: CALL_OW 2
3195: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , ( not debug ) , 11_ ) ;
3196: LD_ADDR_EXP 26
3200: PUSH
3201: LD_STRING Gladstone
3203: PPUSH
3204: LD_EXP 1
3208: NOT
3209: PPUSH
3210: LD_STRING 11_
3212: PPUSH
3213: CALL 5081 0 3
3217: ST_TO_ADDR
// if Gladstone then
3218: LD_EXP 26
3222: IFFALSE 3253
// friends := Insert ( friends , friends + 1 , Gladstone ) ;
3224: LD_ADDR_EXP 4
3228: PUSH
3229: LD_EXP 4
3233: PPUSH
3234: LD_EXP 4
3238: PUSH
3239: LD_INT 1
3241: PLUS
3242: PPUSH
3243: LD_EXP 26
3247: PPUSH
3248: CALL_OW 2
3252: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , ( not debug ) , 11_ ) ;
3253: LD_ADDR_EXP 20
3257: PUSH
3258: LD_STRING Lisa
3260: PPUSH
3261: LD_EXP 1
3265: NOT
3266: PPUSH
3267: LD_STRING 11_
3269: PPUSH
3270: CALL 5081 0 3
3274: ST_TO_ADDR
// if Lisa then
3275: LD_EXP 20
3279: IFFALSE 3304
// friends := Insert ( friends , 1 , Lisa ) ;
3281: LD_ADDR_EXP 4
3285: PUSH
3286: LD_EXP 4
3290: PPUSH
3291: LD_INT 1
3293: PPUSH
3294: LD_EXP 20
3298: PPUSH
3299: CALL_OW 2
3303: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , ( not debug ) , 11_ ) ;
3304: LD_ADDR_EXP 21
3308: PUSH
3309: LD_STRING Donaldson
3311: PPUSH
3312: LD_EXP 1
3316: NOT
3317: PPUSH
3318: LD_STRING 11_
3320: PPUSH
3321: CALL 5081 0 3
3325: ST_TO_ADDR
// if Donaldson then
3326: LD_EXP 21
3330: IFFALSE 3361
// friends := Insert ( friends , friends + 1 , Donaldson ) ;
3332: LD_ADDR_EXP 4
3336: PUSH
3337: LD_EXP 4
3341: PPUSH
3342: LD_EXP 4
3346: PUSH
3347: LD_INT 1
3349: PLUS
3350: PPUSH
3351: LD_EXP 21
3355: PPUSH
3356: CALL_OW 2
3360: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , ( not debug ) , 11_ ) ;
3361: LD_ADDR_EXP 22
3365: PUSH
3366: LD_STRING Bobby
3368: PPUSH
3369: LD_EXP 1
3373: NOT
3374: PPUSH
3375: LD_STRING 11_
3377: PPUSH
3378: CALL 5081 0 3
3382: ST_TO_ADDR
// if Bobby then
3383: LD_EXP 22
3387: IFFALSE 3418
// friends := Insert ( friends , friends + 1 , Bobby ) ;
3389: LD_ADDR_EXP 4
3393: PUSH
3394: LD_EXP 4
3398: PPUSH
3399: LD_EXP 4
3403: PUSH
3404: LD_INT 1
3406: PLUS
3407: PPUSH
3408: LD_EXP 22
3412: PPUSH
3413: CALL_OW 2
3417: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , ( not debug ) , 11_ ) ;
3418: LD_ADDR_EXP 23
3422: PUSH
3423: LD_STRING Cyrus
3425: PPUSH
3426: LD_EXP 1
3430: NOT
3431: PPUSH
3432: LD_STRING 11_
3434: PPUSH
3435: CALL 5081 0 3
3439: ST_TO_ADDR
// if Cyrus then
3440: LD_EXP 23
3444: IFFALSE 3475
// friends := Insert ( friends , friends + 1 , Cyrus ) ;
3446: LD_ADDR_EXP 4
3450: PUSH
3451: LD_EXP 4
3455: PPUSH
3456: LD_EXP 4
3460: PUSH
3461: LD_INT 1
3463: PLUS
3464: PPUSH
3465: LD_EXP 23
3469: PPUSH
3470: CALL_OW 2
3474: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , ( not debug ) , 11_ ) ;
3475: LD_ADDR_EXP 24
3479: PUSH
3480: LD_STRING Denis
3482: PPUSH
3483: LD_EXP 1
3487: NOT
3488: PPUSH
3489: LD_STRING 11_
3491: PPUSH
3492: CALL 5081 0 3
3496: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , ( not debug ) , 11_ ) ;
3497: LD_ADDR_EXP 25
3501: PUSH
3502: LD_STRING Brown
3504: PPUSH
3505: LD_EXP 1
3509: NOT
3510: PPUSH
3511: LD_STRING 11_
3513: PPUSH
3514: CALL 5081 0 3
3518: ST_TO_ADDR
// if Brown then
3519: LD_EXP 25
3523: IFFALSE 3554
// friends := Insert ( friends , friends + 1 , Brown ) ;
3525: LD_ADDR_EXP 4
3529: PUSH
3530: LD_EXP 4
3534: PPUSH
3535: LD_EXP 4
3539: PUSH
3540: LD_INT 1
3542: PLUS
3543: PPUSH
3544: LD_EXP 25
3548: PPUSH
3549: CALL_OW 2
3553: ST_TO_ADDR
// friends := friends ^ CreateCharacterSet ( 11c_others ) ^ CreateCharacterSet ( 11_others ) ;
3554: LD_ADDR_EXP 4
3558: PUSH
3559: LD_EXP 4
3563: PUSH
3564: LD_STRING 11c_others
3566: PPUSH
3567: CALL_OW 31
3571: ADD
3572: PUSH
3573: LD_STRING 11_others
3575: PPUSH
3576: CALL_OW 31
3580: ADD
3581: ST_TO_ADDR
// if friends < 10 then
3582: LD_EXP 4
3586: PUSH
3587: LD_INT 10
3589: LESS
3590: IFFALSE 3662
// for i = 1 to 10 do
3592: LD_ADDR_VAR 0 2
3596: PUSH
3597: DOUBLE
3598: LD_INT 1
3600: DEC
3601: ST_TO_ADDR
3602: LD_INT 10
3604: PUSH
3605: FOR_TO
3606: IFFALSE 3660
// begin PrepareHuman ( false , rand ( 1 , 4 ) , 7 ) ;
3608: LD_INT 0
3610: PPUSH
3611: LD_INT 1
3613: PPUSH
3614: LD_INT 4
3616: PPUSH
3617: CALL_OW 12
3621: PPUSH
3622: LD_INT 7
3624: PPUSH
3625: CALL_OW 380
// friends := Insert ( friends , friends + 1 , CreateHuman ) ;
3629: LD_ADDR_EXP 4
3633: PUSH
3634: LD_EXP 4
3638: PPUSH
3639: LD_EXP 4
3643: PUSH
3644: LD_INT 1
3646: PLUS
3647: PPUSH
3648: CALL_OW 44
3652: PPUSH
3653: CALL_OW 2
3657: ST_TO_ADDR
// end ;
3658: GO 3605
3660: POP
3661: POP
// for i in friends do
3662: LD_ADDR_VAR 0 2
3666: PUSH
3667: LD_EXP 4
3671: PUSH
3672: FOR_IN
3673: IFFALSE 3731
// if GetSkill ( i , 1 ) >= GetSkill ( i , 4 ) then
3675: LD_VAR 0 2
3679: PPUSH
3680: LD_INT 1
3682: PPUSH
3683: CALL_OW 259
3687: PUSH
3688: LD_VAR 0 2
3692: PPUSH
3693: LD_INT 4
3695: PPUSH
3696: CALL_OW 259
3700: GREATEREQUAL
3701: IFFALSE 3717
// SetClass ( i , class_soldier ) else
3703: LD_VAR 0 2
3707: PPUSH
3708: LD_INT 1
3710: PPUSH
3711: CALL_OW 336
3715: GO 3729
// SetClass ( i , class_scientistic ) ;
3717: LD_VAR 0 2
3721: PPUSH
3722: LD_INT 4
3724: PPUSH
3725: CALL_OW 336
3729: GO 3672
3731: POP
3732: POP
// if Frank then
3733: LD_EXP 30
3737: IFFALSE 3751
// SetClass ( Frank , class_sniper ) ;
3739: LD_EXP 30
3743: PPUSH
3744: LD_INT 5
3746: PPUSH
3747: CALL_OW 336
// SetClass ( [ Joan , Denis , DeltaDoctor , Simms ] , class_scientistic ) ;
3751: LD_EXP 33
3755: PUSH
3756: LD_EXP 24
3760: PUSH
3761: LD_EXP 34
3765: PUSH
3766: LD_EXP 32
3770: PUSH
3771: EMPTY
3772: LIST
3773: LIST
3774: LIST
3775: LIST
3776: PPUSH
3777: LD_INT 4
3779: PPUSH
3780: CALL_OW 336
// selected = CharacterSelection (  , 7 , 7 , [ sel_dont_change_class , JMM , Roth , Simms , Denis , DeltaDoctor , sel_not_hired , sel_changeable , sel_change_class ] ^ friends , [ class_soldier , [ class_scientistic , 2 ] , [ class_sniper , 0 , 3 ] ] ) ;
3784: LD_ADDR_EXP 3
3788: PUSH
3789: LD_STRING 
3791: PPUSH
3792: LD_INT 7
3794: PPUSH
3795: LD_INT 7
3797: PPUSH
3798: LD_INT -6
3800: PUSH
3801: LD_EXP 11
3805: PUSH
3806: LD_EXP 12
3810: PUSH
3811: LD_EXP 32
3815: PUSH
3816: LD_EXP 24
3820: PUSH
3821: LD_EXP 34
3825: PUSH
3826: LD_INT -2
3828: PUSH
3829: LD_INT -3
3831: PUSH
3832: LD_INT -5
3834: PUSH
3835: EMPTY
3836: LIST
3837: LIST
3838: LIST
3839: LIST
3840: LIST
3841: LIST
3842: LIST
3843: LIST
3844: LIST
3845: PUSH
3846: LD_EXP 4
3850: ADD
3851: PPUSH
3852: LD_INT 1
3854: PUSH
3855: LD_INT 4
3857: PUSH
3858: LD_INT 2
3860: PUSH
3861: EMPTY
3862: LIST
3863: LIST
3864: PUSH
3865: LD_INT 5
3867: PUSH
3868: LD_INT 0
3870: PUSH
3871: LD_INT 3
3873: PUSH
3874: EMPTY
3875: LIST
3876: LIST
3877: LIST
3878: PUSH
3879: EMPTY
3880: LIST
3881: LIST
3882: LIST
3883: PPUSH
3884: CALL_OW 42
3888: ST_TO_ADDR
// selected := selected union [ Denis , Simms ] ;
3889: LD_ADDR_EXP 3
3893: PUSH
3894: LD_EXP 3
3898: PUSH
3899: LD_EXP 24
3903: PUSH
3904: LD_EXP 32
3908: PUSH
3909: EMPTY
3910: LIST
3911: LIST
3912: UNION
3913: ST_TO_ADDR
// others := friends diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ^ selected ;
3914: LD_ADDR_EXP 5
3918: PUSH
3919: LD_EXP 4
3923: PUSH
3924: LD_EXP 11
3928: PUSH
3929: LD_EXP 12
3933: PUSH
3934: LD_EXP 20
3938: PUSH
3939: LD_EXP 21
3943: PUSH
3944: LD_EXP 22
3948: PUSH
3949: LD_EXP 23
3953: PUSH
3954: LD_EXP 24
3958: PUSH
3959: LD_EXP 25
3963: PUSH
3964: LD_EXP 26
3968: PUSH
3969: LD_EXP 27
3973: PUSH
3974: LD_EXP 28
3978: PUSH
3979: LD_EXP 29
3983: PUSH
3984: LD_EXP 30
3988: PUSH
3989: LD_EXP 31
3993: PUSH
3994: LD_EXP 32
3998: PUSH
3999: LD_EXP 33
4003: PUSH
4004: LD_EXP 34
4008: PUSH
4009: EMPTY
4010: LIST
4011: LIST
4012: LIST
4013: LIST
4014: LIST
4015: LIST
4016: LIST
4017: LIST
4018: LIST
4019: LIST
4020: LIST
4021: LIST
4022: LIST
4023: LIST
4024: LIST
4025: LIST
4026: LIST
4027: PUSH
4028: LD_EXP 3
4032: ADD
4033: DIFF
4034: ST_TO_ADDR
// friends := friends diff others ;
4035: LD_ADDR_EXP 4
4039: PUSH
4040: LD_EXP 4
4044: PUSH
4045: LD_EXP 5
4049: DIFF
4050: ST_TO_ADDR
// buildings := [ [ ambar1 , ambar2 , ambar3 ] , [ amlab2 , amlab3 , amlab4 ] ] ;
4051: LD_ADDR_VAR 0 4
4055: PUSH
4056: LD_INT 111
4058: PUSH
4059: LD_INT 137
4061: PUSH
4062: LD_INT 51
4064: PUSH
4065: EMPTY
4066: LIST
4067: LIST
4068: LIST
4069: PUSH
4070: LD_INT 147
4072: PUSH
4073: LD_INT 129
4075: PUSH
4076: LD_INT 25
4078: PUSH
4079: EMPTY
4080: LIST
4081: LIST
4082: LIST
4083: PUSH
4084: EMPTY
4085: LIST
4086: LIST
4087: ST_TO_ADDR
// areas := [ friends_spawn_1 , friends_spawn_2 , friends_spawn_3 , friends_spawn_4 , friends_spawn_5 , friends_spawn_6 ] ;
4088: LD_ADDR_VAR 0 5
4092: PUSH
4093: LD_INT 5
4095: PUSH
4096: LD_INT 6
4098: PUSH
4099: LD_INT 7
4101: PUSH
4102: LD_INT 8
4104: PUSH
4105: LD_INT 17
4107: PUSH
4108: LD_INT 18
4110: PUSH
4111: EMPTY
4112: LIST
4113: LIST
4114: LIST
4115: LIST
4116: LIST
4117: LIST
4118: ST_TO_ADDR
// for i in buildings do
4119: LD_ADDR_VAR 0 2
4123: PUSH
4124: LD_VAR 0 4
4128: PUSH
4129: FOR_IN
4130: IFFALSE 4146
// SetSide ( i , 4 ) ;
4132: LD_VAR 0 2
4136: PPUSH
4137: LD_INT 4
4139: PPUSH
4140: CALL_OW 235
4144: GO 4129
4146: POP
4147: POP
// for i in selected do
4148: LD_ADDR_VAR 0 2
4152: PUSH
4153: LD_EXP 3
4157: PUSH
4158: FOR_IN
4159: IFFALSE 4421
// begin if GetClass ( i ) in [ 1 , 5 ] then
4161: LD_VAR 0 2
4165: PPUSH
4166: CALL_OW 257
4170: PUSH
4171: LD_INT 1
4173: PUSH
4174: LD_INT 5
4176: PUSH
4177: EMPTY
4178: LIST
4179: LIST
4180: IN
4181: IFFALSE 4302
// begin if buildings [ 1 ] then
4183: LD_VAR 0 4
4187: PUSH
4188: LD_INT 1
4190: ARRAY
4191: IFFALSE 4252
// begin PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4193: LD_VAR 0 2
4197: PPUSH
4198: LD_VAR 0 4
4202: PUSH
4203: LD_INT 1
4205: ARRAY
4206: PUSH
4207: LD_INT 1
4209: ARRAY
4210: PPUSH
4211: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4215: LD_ADDR_VAR 0 4
4219: PUSH
4220: LD_VAR 0 4
4224: PPUSH
4225: LD_INT 1
4227: PPUSH
4228: LD_VAR 0 4
4232: PUSH
4233: LD_INT 1
4235: ARRAY
4236: PPUSH
4237: LD_INT 1
4239: PPUSH
4240: CALL_OW 3
4244: PPUSH
4245: CALL_OW 1
4249: ST_TO_ADDR
// end else
4250: GO 4300
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4252: LD_VAR 0 2
4256: PPUSH
4257: LD_VAR 0 5
4261: PUSH
4262: LD_INT 1
4264: ARRAY
4265: PPUSH
4266: LD_INT 0
4268: PPUSH
4269: CALL_OW 49
// ComHold ( i ) ;
4273: LD_VAR 0 2
4277: PPUSH
4278: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4282: LD_ADDR_VAR 0 5
4286: PUSH
4287: LD_VAR 0 5
4291: PPUSH
4292: LD_INT 1
4294: PPUSH
4295: CALL_OW 3
4299: ST_TO_ADDR
// end ; end else
4300: GO 4419
// begin if buildings [ 2 ] then
4302: LD_VAR 0 4
4306: PUSH
4307: LD_INT 2
4309: ARRAY
4310: IFFALSE 4371
// begin PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4312: LD_VAR 0 2
4316: PPUSH
4317: LD_VAR 0 4
4321: PUSH
4322: LD_INT 2
4324: ARRAY
4325: PUSH
4326: LD_INT 1
4328: ARRAY
4329: PPUSH
4330: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4334: LD_ADDR_VAR 0 4
4338: PUSH
4339: LD_VAR 0 4
4343: PPUSH
4344: LD_INT 2
4346: PPUSH
4347: LD_VAR 0 4
4351: PUSH
4352: LD_INT 2
4354: ARRAY
4355: PPUSH
4356: LD_INT 1
4358: PPUSH
4359: CALL_OW 3
4363: PPUSH
4364: CALL_OW 1
4368: ST_TO_ADDR
// end else
4369: GO 4419
// begin PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4371: LD_VAR 0 2
4375: PPUSH
4376: LD_VAR 0 5
4380: PUSH
4381: LD_INT 1
4383: ARRAY
4384: PPUSH
4385: LD_INT 0
4387: PPUSH
4388: CALL_OW 49
// ComHold ( i ) ;
4392: LD_VAR 0 2
4396: PPUSH
4397: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
4401: LD_ADDR_VAR 0 5
4405: PUSH
4406: LD_VAR 0 5
4410: PPUSH
4411: LD_INT 1
4413: PPUSH
4414: CALL_OW 3
4418: ST_TO_ADDR
// end ; end ; end ;
4419: GO 4158
4421: POP
4422: POP
// bunkers := FilterAllUnits ( [ [ f_side , 1 ] , [ f_btype , b_bunker ] ] ) ;
4423: LD_ADDR_VAR 0 6
4427: PUSH
4428: LD_INT 22
4430: PUSH
4431: LD_INT 1
4433: PUSH
4434: EMPTY
4435: LIST
4436: LIST
4437: PUSH
4438: LD_INT 30
4440: PUSH
4441: LD_INT 32
4443: PUSH
4444: EMPTY
4445: LIST
4446: LIST
4447: PUSH
4448: EMPTY
4449: LIST
4450: LIST
4451: PPUSH
4452: CALL_OW 69
4456: ST_TO_ADDR
// for i = bunkers - others downto 1 do
4457: LD_ADDR_VAR 0 2
4461: PUSH
4462: DOUBLE
4463: LD_VAR 0 6
4467: PUSH
4468: LD_EXP 5
4472: MINUS
4473: INC
4474: ST_TO_ADDR
4475: LD_INT 1
4477: PUSH
4478: FOR_DOWNTO
4479: IFFALSE 4542
// begin PrepareHuman ( false , 1 , [ 7 , 8 , 9 ] [ Difficulty ] ) ;
4481: LD_INT 0
4483: PPUSH
4484: LD_INT 1
4486: PPUSH
4487: LD_INT 7
4489: PUSH
4490: LD_INT 8
4492: PUSH
4493: LD_INT 9
4495: PUSH
4496: EMPTY
4497: LIST
4498: LIST
4499: LIST
4500: PUSH
4501: LD_OWVAR 67
4505: ARRAY
4506: PPUSH
4507: CALL_OW 380
// others := Insert ( others , others + 1 , CreateHuman ) ;
4511: LD_ADDR_EXP 5
4515: PUSH
4516: LD_EXP 5
4520: PPUSH
4521: LD_EXP 5
4525: PUSH
4526: LD_INT 1
4528: PLUS
4529: PPUSH
4530: CALL_OW 44
4534: PPUSH
4535: CALL_OW 2
4539: ST_TO_ADDR
// end ;
4540: GO 4478
4542: POP
4543: POP
// if others then
4544: LD_EXP 5
4548: IFFALSE 4654
// for i = 1 to bunkers do
4550: LD_ADDR_VAR 0 2
4554: PUSH
4555: DOUBLE
4556: LD_INT 1
4558: DEC
4559: ST_TO_ADDR
4560: LD_VAR 0 6
4564: PUSH
4565: FOR_TO
4566: IFFALSE 4652
// begin SetSide ( others [ others ] , 1 ) ;
4568: LD_EXP 5
4572: PUSH
4573: LD_EXP 5
4577: ARRAY
4578: PPUSH
4579: LD_INT 1
4581: PPUSH
4582: CALL_OW 235
// SetClass ( others [ others ] , 1 ) ;
4586: LD_EXP 5
4590: PUSH
4591: LD_EXP 5
4595: ARRAY
4596: PPUSH
4597: LD_INT 1
4599: PPUSH
4600: CALL_OW 336
// PlaceHumanInUnit ( others [ others ] , bunkers [ i ] ) ;
4604: LD_EXP 5
4608: PUSH
4609: LD_EXP 5
4613: ARRAY
4614: PPUSH
4615: LD_VAR 0 6
4619: PUSH
4620: LD_VAR 0 2
4624: ARRAY
4625: PPUSH
4626: CALL_OW 52
// others := Delete ( others , others ) ;
4630: LD_ADDR_EXP 5
4634: PUSH
4635: LD_EXP 5
4639: PPUSH
4640: LD_EXP 5
4644: PPUSH
4645: CALL_OW 3
4649: ST_TO_ADDR
// end ;
4650: GO 4565
4652: POP
4653: POP
// areas := areas union [ guard_spawn_1 , guard_spawn_2 , guard_spawn_3 , guard_spawn_4 , guard_spawn_5 , guard_spawn_6 , guard_spawn_7 , guard_spawn_8 ] ;
4654: LD_ADDR_VAR 0 5
4658: PUSH
4659: LD_VAR 0 5
4663: PUSH
4664: LD_INT 9
4666: PUSH
4667: LD_INT 10
4669: PUSH
4670: LD_INT 11
4672: PUSH
4673: LD_INT 12
4675: PUSH
4676: LD_INT 13
4678: PUSH
4679: LD_INT 14
4681: PUSH
4682: LD_INT 15
4684: PUSH
4685: LD_INT 16
4687: PUSH
4688: EMPTY
4689: LIST
4690: LIST
4691: LIST
4692: LIST
4693: LIST
4694: LIST
4695: LIST
4696: LIST
4697: UNION
4698: ST_TO_ADDR
// for i in friends ^ others do
4699: LD_ADDR_VAR 0 2
4703: PUSH
4704: LD_EXP 4
4708: PUSH
4709: LD_EXP 5
4713: ADD
4714: PUSH
4715: FOR_IN
4716: IFFALSE 5056
// begin SetTag ( i , 2 ) ;
4718: LD_VAR 0 2
4722: PPUSH
4723: LD_INT 2
4725: PPUSH
4726: CALL_OW 109
// if ( ( i in friends and GetClass ( i ) = 1 ) or i in others ) and buildings [ 1 ] then
4730: LD_VAR 0 2
4734: PUSH
4735: LD_EXP 4
4739: IN
4740: PUSH
4741: LD_VAR 0 2
4745: PPUSH
4746: CALL_OW 257
4750: PUSH
4751: LD_INT 1
4753: EQUAL
4754: AND
4755: PUSH
4756: LD_VAR 0 2
4760: PUSH
4761: LD_EXP 5
4765: IN
4766: OR
4767: PUSH
4768: LD_VAR 0 4
4772: PUSH
4773: LD_INT 1
4775: ARRAY
4776: AND
4777: IFFALSE 4850
// begin SetClass ( i , 1 ) ;
4779: LD_VAR 0 2
4783: PPUSH
4784: LD_INT 1
4786: PPUSH
4787: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 1 ] [ 1 ] ) ;
4791: LD_VAR 0 2
4795: PPUSH
4796: LD_VAR 0 4
4800: PUSH
4801: LD_INT 1
4803: ARRAY
4804: PUSH
4805: LD_INT 1
4807: ARRAY
4808: PPUSH
4809: CALL_OW 52
// buildings := Replace ( buildings , 1 , Delete ( buildings [ 1 ] , 1 ) ) ;
4813: LD_ADDR_VAR 0 4
4817: PUSH
4818: LD_VAR 0 4
4822: PPUSH
4823: LD_INT 1
4825: PPUSH
4826: LD_VAR 0 4
4830: PUSH
4831: LD_INT 1
4833: ARRAY
4834: PPUSH
4835: LD_INT 1
4837: PPUSH
4838: CALL_OW 3
4842: PPUSH
4843: CALL_OW 1
4847: ST_TO_ADDR
// continue ;
4848: GO 4715
// end ; if ( ( i in friends and GetClass ( i ) = 4 ) or i in others ) and buildings [ 2 ] then
4850: LD_VAR 0 2
4854: PUSH
4855: LD_EXP 4
4859: IN
4860: PUSH
4861: LD_VAR 0 2
4865: PPUSH
4866: CALL_OW 257
4870: PUSH
4871: LD_INT 4
4873: EQUAL
4874: AND
4875: PUSH
4876: LD_VAR 0 2
4880: PUSH
4881: LD_EXP 5
4885: IN
4886: OR
4887: PUSH
4888: LD_VAR 0 4
4892: PUSH
4893: LD_INT 2
4895: ARRAY
4896: AND
4897: IFFALSE 4970
// begin SetClass ( i , 4 ) ;
4899: LD_VAR 0 2
4903: PPUSH
4904: LD_INT 4
4906: PPUSH
4907: CALL_OW 336
// PlaceHumanInUnit ( i , buildings [ 2 ] [ 1 ] ) ;
4911: LD_VAR 0 2
4915: PPUSH
4916: LD_VAR 0 4
4920: PUSH
4921: LD_INT 2
4923: ARRAY
4924: PUSH
4925: LD_INT 1
4927: ARRAY
4928: PPUSH
4929: CALL_OW 52
// buildings := Replace ( buildings , 2 , Delete ( buildings [ 2 ] , 1 ) ) ;
4933: LD_ADDR_VAR 0 4
4937: PUSH
4938: LD_VAR 0 4
4942: PPUSH
4943: LD_INT 2
4945: PPUSH
4946: LD_VAR 0 4
4950: PUSH
4951: LD_INT 2
4953: ARRAY
4954: PPUSH
4955: LD_INT 1
4957: PPUSH
4958: CALL_OW 3
4962: PPUSH
4963: CALL_OW 1
4967: ST_TO_ADDR
// continue ;
4968: GO 4715
// end ; PlaceUnitArea ( i , areas [ 1 ] , false ) ;
4970: LD_VAR 0 2
4974: PPUSH
4975: LD_VAR 0 5
4979: PUSH
4980: LD_INT 1
4982: ARRAY
4983: PPUSH
4984: LD_INT 0
4986: PPUSH
4987: CALL_OW 49
// if GetClass ( i ) <> 4 then
4991: LD_VAR 0 2
4995: PPUSH
4996: CALL_OW 257
5000: PUSH
5001: LD_INT 4
5003: NONEQUAL
5004: IFFALSE 5018
// SetClass ( i , 1 ) ;
5006: LD_VAR 0 2
5010: PPUSH
5011: LD_INT 1
5013: PPUSH
5014: CALL_OW 336
// ComHold ( i ) ;
5018: LD_VAR 0 2
5022: PPUSH
5023: CALL_OW 140
// areas := Delete ( areas , 1 ) ;
5027: LD_ADDR_VAR 0 5
5031: PUSH
5032: LD_VAR 0 5
5036: PPUSH
5037: LD_INT 1
5039: PPUSH
5040: CALL_OW 3
5044: ST_TO_ADDR
// if not areas then
5045: LD_VAR 0 5
5049: NOT
5050: IFFALSE 5054
// break ;
5052: GO 5056
// end ;
5054: GO 4715
5056: POP
5057: POP
// if Frank then
5058: LD_EXP 30
5062: IFFALSE 5076
// SetClass ( Frank , class_sniper ) ;
5064: LD_EXP 30
5068: PPUSH
5069: LD_INT 5
5071: PPUSH
5072: CALL_OW 336
// end ; end_of_file
5076: LD_VAR 0 1
5080: RET
// export function PrepareUnit ( ident , exist_mode , prefix ) ; var unit ; begin
5081: LD_INT 0
5083: PPUSH
5084: PPUSH
// if exist_mode then
5085: LD_VAR 0 2
5089: IFFALSE 5114
// unit := CreateCharacter ( prefix & ident ) else
5091: LD_ADDR_VAR 0 5
5095: PUSH
5096: LD_VAR 0 3
5100: PUSH
5101: LD_VAR 0 1
5105: STR
5106: PPUSH
5107: CALL_OW 34
5111: ST_TO_ADDR
5112: GO 5129
// unit := NewCharacter ( ident ) ;
5114: LD_ADDR_VAR 0 5
5118: PUSH
5119: LD_VAR 0 1
5123: PPUSH
5124: CALL_OW 25
5128: ST_TO_ADDR
// result := unit ;
5129: LD_ADDR_VAR 0 4
5133: PUSH
5134: LD_VAR 0 5
5138: ST_TO_ADDR
// end ;
5139: LD_VAR 0 4
5143: RET
// export function PrepareVehicle ( chassis , engine , control , weapon , fuel ) ; begin
5144: LD_INT 0
5146: PPUSH
// vc_chassis := chassis ;
5147: LD_ADDR_OWVAR 37
5151: PUSH
5152: LD_VAR 0 1
5156: ST_TO_ADDR
// vc_engine := engine ;
5157: LD_ADDR_OWVAR 39
5161: PUSH
5162: LD_VAR 0 2
5166: ST_TO_ADDR
// vc_control := control ;
5167: LD_ADDR_OWVAR 38
5171: PUSH
5172: LD_VAR 0 3
5176: ST_TO_ADDR
// vc_weapon := weapon ;
5177: LD_ADDR_OWVAR 40
5181: PUSH
5182: LD_VAR 0 4
5186: ST_TO_ADDR
// vc_fuel_battery := fuel ;
5187: LD_ADDR_OWVAR 41
5191: PUSH
5192: LD_VAR 0 5
5196: ST_TO_ADDR
// end ;
5197: LD_VAR 0 6
5201: RET
// export function CanSayRand ( side ) ; begin
5202: LD_INT 0
5204: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , side ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5205: LD_ADDR_VAR 0 2
5209: PUSH
5210: LD_INT 52
5212: PUSH
5213: EMPTY
5214: LIST
5215: PUSH
5216: LD_INT 22
5218: PUSH
5219: LD_VAR 0 1
5223: PUSH
5224: EMPTY
5225: LIST
5226: LIST
5227: PUSH
5228: LD_INT 2
5230: PUSH
5231: LD_INT 25
5233: PUSH
5234: LD_INT 1
5236: PUSH
5237: EMPTY
5238: LIST
5239: LIST
5240: PUSH
5241: LD_INT 25
5243: PUSH
5244: LD_INT 2
5246: PUSH
5247: EMPTY
5248: LIST
5249: LIST
5250: PUSH
5251: LD_INT 25
5253: PUSH
5254: LD_INT 3
5256: PUSH
5257: EMPTY
5258: LIST
5259: LIST
5260: PUSH
5261: LD_INT 25
5263: PUSH
5264: LD_INT 4
5266: PUSH
5267: EMPTY
5268: LIST
5269: LIST
5270: PUSH
5271: EMPTY
5272: LIST
5273: LIST
5274: LIST
5275: LIST
5276: LIST
5277: PUSH
5278: EMPTY
5279: LIST
5280: LIST
5281: LIST
5282: PPUSH
5283: CALL_OW 69
5287: PUSH
5288: LD_EXP 11
5292: PUSH
5293: LD_EXP 30
5297: PUSH
5298: LD_EXP 20
5302: PUSH
5303: LD_EXP 21
5307: PUSH
5308: LD_EXP 22
5312: PUSH
5313: LD_EXP 23
5317: PUSH
5318: LD_EXP 24
5322: PUSH
5323: LD_EXP 25
5327: PUSH
5328: LD_EXP 26
5332: PUSH
5333: LD_EXP 27
5337: PUSH
5338: LD_EXP 13
5342: PUSH
5343: LD_EXP 28
5347: PUSH
5348: LD_EXP 29
5352: PUSH
5353: LD_EXP 31
5357: PUSH
5358: EMPTY
5359: LIST
5360: LIST
5361: LIST
5362: LIST
5363: LIST
5364: LIST
5365: LIST
5366: LIST
5367: LIST
5368: LIST
5369: LIST
5370: LIST
5371: LIST
5372: LIST
5373: DIFF
5374: ST_TO_ADDR
// end ;
5375: LD_VAR 0 2
5379: RET
// export function Connect ( vehicle ) ; var i , t , mech , tmp , j ; begin
5380: LD_INT 0
5382: PPUSH
5383: PPUSH
5384: PPUSH
5385: PPUSH
5386: PPUSH
5387: PPUSH
// if not vehicle or not GetControl ( vehicle ) = control_remote then
5388: LD_VAR 0 1
5392: NOT
5393: PUSH
5394: LD_VAR 0 1
5398: PPUSH
5399: CALL_OW 263
5403: PUSH
5404: LD_INT 2
5406: EQUAL
5407: NOT
5408: OR
5409: IFFALSE 5413
// exit ;
5411: GO 5729
// tmp := FilterAllUnits ( [ [ f_side , GetSide ( vehicle ) ] , [ f_or , [ f_btype , b_control_tower ] , [ f_weapon , ar_control_tower ] ] ] ) ;
5413: LD_ADDR_VAR 0 6
5417: PUSH
5418: LD_INT 22
5420: PUSH
5421: LD_VAR 0 1
5425: PPUSH
5426: CALL_OW 255
5430: PUSH
5431: EMPTY
5432: LIST
5433: LIST
5434: PUSH
5435: LD_INT 2
5437: PUSH
5438: LD_INT 30
5440: PUSH
5441: LD_INT 36
5443: PUSH
5444: EMPTY
5445: LIST
5446: LIST
5447: PUSH
5448: LD_INT 34
5450: PUSH
5451: LD_INT 31
5453: PUSH
5454: EMPTY
5455: LIST
5456: LIST
5457: PUSH
5458: EMPTY
5459: LIST
5460: LIST
5461: LIST
5462: PUSH
5463: EMPTY
5464: LIST
5465: LIST
5466: PPUSH
5467: CALL_OW 69
5471: ST_TO_ADDR
// if not tmp then
5472: LD_VAR 0 6
5476: NOT
5477: IFFALSE 5481
// exit ;
5479: GO 5729
// result := [ ] ;
5481: LD_ADDR_VAR 0 2
5485: PUSH
5486: EMPTY
5487: ST_TO_ADDR
// for i in tmp do
5488: LD_ADDR_VAR 0 3
5492: PUSH
5493: LD_VAR 0 6
5497: PUSH
5498: FOR_IN
5499: IFFALSE 5570
// begin t := UnitsInside ( i ) ;
5501: LD_ADDR_VAR 0 4
5505: PUSH
5506: LD_VAR 0 3
5510: PPUSH
5511: CALL_OW 313
5515: ST_TO_ADDR
// if t then
5516: LD_VAR 0 4
5520: IFFALSE 5568
// for j in t do
5522: LD_ADDR_VAR 0 7
5526: PUSH
5527: LD_VAR 0 4
5531: PUSH
5532: FOR_IN
5533: IFFALSE 5566
// result := Insert ( result , result + 1 , j ) ;
5535: LD_ADDR_VAR 0 2
5539: PUSH
5540: LD_VAR 0 2
5544: PPUSH
5545: LD_VAR 0 2
5549: PUSH
5550: LD_INT 1
5552: PLUS
5553: PPUSH
5554: LD_VAR 0 7
5558: PPUSH
5559: CALL_OW 2
5563: ST_TO_ADDR
5564: GO 5532
5566: POP
5567: POP
// end ;
5568: GO 5498
5570: POP
5571: POP
// if not result then
5572: LD_VAR 0 2
5576: NOT
5577: IFFALSE 5581
// exit ;
5579: GO 5729
// mech := result [ 1 ] ;
5581: LD_ADDR_VAR 0 5
5585: PUSH
5586: LD_VAR 0 2
5590: PUSH
5591: LD_INT 1
5593: ARRAY
5594: ST_TO_ADDR
// if result > 1 then
5595: LD_VAR 0 2
5599: PUSH
5600: LD_INT 1
5602: GREATER
5603: IFFALSE 5715
// for i = 2 to result do
5605: LD_ADDR_VAR 0 3
5609: PUSH
5610: DOUBLE
5611: LD_INT 2
5613: DEC
5614: ST_TO_ADDR
5615: LD_VAR 0 2
5619: PUSH
5620: FOR_TO
5621: IFFALSE 5713
// begin t := GetSkill ( result [ i ] , 3 ) - UnitsLinked ( result [ i ] ) ;
5623: LD_ADDR_VAR 0 4
5627: PUSH
5628: LD_VAR 0 2
5632: PUSH
5633: LD_VAR 0 3
5637: ARRAY
5638: PPUSH
5639: LD_INT 3
5641: PPUSH
5642: CALL_OW 259
5646: PUSH
5647: LD_VAR 0 2
5651: PUSH
5652: LD_VAR 0 3
5656: ARRAY
5657: PPUSH
5658: CALL_OW 432
5662: MINUS
5663: ST_TO_ADDR
// if t >= ( GetSkill ( mech , 3 ) - UnitsLinked ( mech ) ) then
5664: LD_VAR 0 4
5668: PUSH
5669: LD_VAR 0 5
5673: PPUSH
5674: LD_INT 3
5676: PPUSH
5677: CALL_OW 259
5681: PUSH
5682: LD_VAR 0 5
5686: PPUSH
5687: CALL_OW 432
5691: MINUS
5692: GREATEREQUAL
5693: IFFALSE 5711
// mech := result [ i ] ;
5695: LD_ADDR_VAR 0 5
5699: PUSH
5700: LD_VAR 0 2
5704: PUSH
5705: LD_VAR 0 3
5709: ARRAY
5710: ST_TO_ADDR
// end ;
5711: GO 5620
5713: POP
5714: POP
// ComLinkTo ( vehicle , mech ) ;
5715: LD_VAR 0 1
5719: PPUSH
5720: LD_VAR 0 5
5724: PPUSH
5725: CALL_OW 135
// end ;
5729: LD_VAR 0 2
5733: RET
// export function SayRand ( sex , dial ) ; begin
5734: LD_INT 0
5736: PPUSH
// result := FilterAllUnits ( [ [ f_placed ] , [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ;
5737: LD_ADDR_VAR 0 3
5741: PUSH
5742: LD_INT 52
5744: PUSH
5745: EMPTY
5746: LIST
5747: PUSH
5748: LD_INT 22
5750: PUSH
5751: LD_INT 1
5753: PUSH
5754: EMPTY
5755: LIST
5756: LIST
5757: PUSH
5758: LD_INT 26
5760: PUSH
5761: LD_VAR 0 1
5765: PUSH
5766: EMPTY
5767: LIST
5768: LIST
5769: PUSH
5770: LD_INT 2
5772: PUSH
5773: LD_INT 25
5775: PUSH
5776: LD_INT 1
5778: PUSH
5779: EMPTY
5780: LIST
5781: LIST
5782: PUSH
5783: LD_INT 25
5785: PUSH
5786: LD_INT 2
5788: PUSH
5789: EMPTY
5790: LIST
5791: LIST
5792: PUSH
5793: LD_INT 25
5795: PUSH
5796: LD_INT 3
5798: PUSH
5799: EMPTY
5800: LIST
5801: LIST
5802: PUSH
5803: LD_INT 25
5805: PUSH
5806: LD_INT 4
5808: PUSH
5809: EMPTY
5810: LIST
5811: LIST
5812: PUSH
5813: EMPTY
5814: LIST
5815: LIST
5816: LIST
5817: LIST
5818: LIST
5819: PUSH
5820: EMPTY
5821: LIST
5822: LIST
5823: LIST
5824: LIST
5825: PPUSH
5826: CALL_OW 69
5830: PUSH
5831: LD_EXP 11
5835: PUSH
5836: LD_EXP 30
5840: PUSH
5841: LD_EXP 20
5845: PUSH
5846: LD_EXP 21
5850: PUSH
5851: LD_EXP 22
5855: PUSH
5856: LD_EXP 23
5860: PUSH
5861: LD_EXP 24
5865: PUSH
5866: LD_EXP 25
5870: PUSH
5871: LD_EXP 26
5875: PUSH
5876: LD_EXP 27
5880: PUSH
5881: LD_EXP 13
5885: PUSH
5886: LD_EXP 28
5890: PUSH
5891: LD_EXP 29
5895: PUSH
5896: LD_EXP 31
5900: PUSH
5901: EMPTY
5902: LIST
5903: LIST
5904: LIST
5905: LIST
5906: LIST
5907: LIST
5908: LIST
5909: LIST
5910: LIST
5911: LIST
5912: LIST
5913: LIST
5914: LIST
5915: LIST
5916: DIFF
5917: ST_TO_ADDR
// if not result then
5918: LD_VAR 0 3
5922: NOT
5923: IFFALSE 5927
// exit ;
5925: GO 5955
// result := result [ 1 ] ;
5927: LD_ADDR_VAR 0 3
5931: PUSH
5932: LD_VAR 0 3
5936: PUSH
5937: LD_INT 1
5939: ARRAY
5940: ST_TO_ADDR
// Say ( result , dial ) ;
5941: LD_VAR 0 3
5945: PPUSH
5946: LD_VAR 0 2
5950: PPUSH
5951: CALL_OW 88
// end ;
5955: LD_VAR 0 3
5959: RET
// export function SayRand2 ( sex , dial , filter ) ; begin
5960: LD_INT 0
5962: PPUSH
// result := FilterAllUnits ( [ [ f_side , 1 ] , [ f_sex , sex ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] ] ] ) diff [ JMM , Frank , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Powell , Cornel , Gary , Kikuchi ] ^ filter ;
5963: LD_ADDR_VAR 0 4
5967: PUSH
5968: LD_INT 22
5970: PUSH
5971: LD_INT 1
5973: PUSH
5974: EMPTY
5975: LIST
5976: LIST
5977: PUSH
5978: LD_INT 26
5980: PUSH
5981: LD_VAR 0 1
5985: PUSH
5986: EMPTY
5987: LIST
5988: LIST
5989: PUSH
5990: LD_INT 2
5992: PUSH
5993: LD_INT 25
5995: PUSH
5996: LD_INT 1
5998: PUSH
5999: EMPTY
6000: LIST
6001: LIST
6002: PUSH
6003: LD_INT 25
6005: PUSH
6006: LD_INT 2
6008: PUSH
6009: EMPTY
6010: LIST
6011: LIST
6012: PUSH
6013: LD_INT 25
6015: PUSH
6016: LD_INT 3
6018: PUSH
6019: EMPTY
6020: LIST
6021: LIST
6022: PUSH
6023: LD_INT 25
6025: PUSH
6026: LD_INT 4
6028: PUSH
6029: EMPTY
6030: LIST
6031: LIST
6032: PUSH
6033: EMPTY
6034: LIST
6035: LIST
6036: LIST
6037: LIST
6038: LIST
6039: PUSH
6040: EMPTY
6041: LIST
6042: LIST
6043: LIST
6044: PPUSH
6045: CALL_OW 69
6049: PUSH
6050: LD_EXP 11
6054: PUSH
6055: LD_EXP 30
6059: PUSH
6060: LD_EXP 20
6064: PUSH
6065: LD_EXP 21
6069: PUSH
6070: LD_EXP 22
6074: PUSH
6075: LD_EXP 23
6079: PUSH
6080: LD_EXP 24
6084: PUSH
6085: LD_EXP 25
6089: PUSH
6090: LD_EXP 26
6094: PUSH
6095: LD_EXP 27
6099: PUSH
6100: LD_EXP 13
6104: PUSH
6105: LD_EXP 28
6109: PUSH
6110: LD_EXP 29
6114: PUSH
6115: LD_EXP 31
6119: PUSH
6120: EMPTY
6121: LIST
6122: LIST
6123: LIST
6124: LIST
6125: LIST
6126: LIST
6127: LIST
6128: LIST
6129: LIST
6130: LIST
6131: LIST
6132: LIST
6133: LIST
6134: LIST
6135: PUSH
6136: LD_VAR 0 3
6140: ADD
6141: DIFF
6142: ST_TO_ADDR
// if not result then
6143: LD_VAR 0 4
6147: NOT
6148: IFFALSE 6152
// exit ;
6150: GO 6180
// result := result [ 1 ] ;
6152: LD_ADDR_VAR 0 4
6156: PUSH
6157: LD_VAR 0 4
6161: PUSH
6162: LD_INT 1
6164: ARRAY
6165: ST_TO_ADDR
// Say ( result , dial ) ;
6166: LD_VAR 0 4
6170: PPUSH
6171: LD_VAR 0 2
6175: PPUSH
6176: CALL_OW 88
// end ;
6180: LD_VAR 0 4
6184: RET
// export function Patrol ( unit , path , flags ) ; var i , x , y , c , p , station , tmp_path , status , enemy , e , spot_dist , safe_place , chase_range , need_refuel ; begin
6185: LD_INT 0
6187: PPUSH
6188: PPUSH
6189: PPUSH
6190: PPUSH
6191: PPUSH
6192: PPUSH
6193: PPUSH
6194: PPUSH
6195: PPUSH
6196: PPUSH
6197: PPUSH
6198: PPUSH
6199: PPUSH
6200: PPUSH
6201: PPUSH
// if not unit or not path or GetType ( unit ) = unit_building then
6202: LD_VAR 0 1
6206: NOT
6207: PUSH
6208: LD_VAR 0 2
6212: NOT
6213: OR
6214: PUSH
6215: LD_VAR 0 1
6219: PPUSH
6220: CALL_OW 247
6224: PUSH
6225: LD_INT 3
6227: EQUAL
6228: OR
6229: IFFALSE 6233
// exit ;
6231: GO 7728
// for i = path downto 1 do
6233: LD_ADDR_VAR 0 5
6237: PUSH
6238: DOUBLE
6239: LD_VAR 0 2
6243: INC
6244: ST_TO_ADDR
6245: LD_INT 1
6247: PUSH
6248: FOR_DOWNTO
6249: IFFALSE 6310
// begin if not ValidHex ( path [ i ] [ 1 ] , path [ i ] [ 2 ] ) then
6251: LD_VAR 0 2
6255: PUSH
6256: LD_VAR 0 5
6260: ARRAY
6261: PUSH
6262: LD_INT 1
6264: ARRAY
6265: PPUSH
6266: LD_VAR 0 2
6270: PUSH
6271: LD_VAR 0 5
6275: ARRAY
6276: PUSH
6277: LD_INT 2
6279: ARRAY
6280: PPUSH
6281: CALL_OW 488
6285: NOT
6286: IFFALSE 6308
// path = Delete ( path , i ) ;
6288: LD_ADDR_VAR 0 2
6292: PUSH
6293: LD_VAR 0 2
6297: PPUSH
6298: LD_VAR 0 5
6302: PPUSH
6303: CALL_OW 3
6307: ST_TO_ADDR
// end ;
6308: GO 6248
6310: POP
6311: POP
// if not path then
6312: LD_VAR 0 2
6316: NOT
6317: IFFALSE 6321
// exit ;
6319: GO 7728
// tmp_path := [ ] ;
6321: LD_ADDR_VAR 0 11
6325: PUSH
6326: EMPTY
6327: ST_TO_ADDR
// if flags then
6328: LD_VAR 0 3
6332: IFFALSE 6406
// begin if flags [ 1 ] then
6334: LD_VAR 0 3
6338: PUSH
6339: LD_INT 1
6341: ARRAY
6342: IFFALSE 6358
// safe_place = flags [ 1 ] ;
6344: LD_ADDR_VAR 0 16
6348: PUSH
6349: LD_VAR 0 3
6353: PUSH
6354: LD_INT 1
6356: ARRAY
6357: ST_TO_ADDR
// if flags [ 2 ] then
6358: LD_VAR 0 3
6362: PUSH
6363: LD_INT 2
6365: ARRAY
6366: IFFALSE 6382
// spot_dist = flags [ 2 ] ;
6368: LD_ADDR_VAR 0 15
6372: PUSH
6373: LD_VAR 0 3
6377: PUSH
6378: LD_INT 2
6380: ARRAY
6381: ST_TO_ADDR
// if flags [ 3 ] then
6382: LD_VAR 0 3
6386: PUSH
6387: LD_INT 3
6389: ARRAY
6390: IFFALSE 6406
// chase_range = flags [ 3 ] ;
6392: LD_ADDR_VAR 0 17
6396: PUSH
6397: LD_VAR 0 3
6401: PUSH
6402: LD_INT 3
6404: ARRAY
6405: ST_TO_ADDR
// end ; if not chase_range then
6406: LD_VAR 0 17
6410: NOT
6411: IFFALSE 6421
// chase_range = 8 ;
6413: LD_ADDR_VAR 0 17
6417: PUSH
6418: LD_INT 8
6420: ST_TO_ADDR
// if not spot_dist then
6421: LD_VAR 0 15
6425: NOT
6426: IFFALSE 6436
// spot_dist := 8 ;
6428: LD_ADDR_VAR 0 15
6432: PUSH
6433: LD_INT 8
6435: ST_TO_ADDR
// need_refuel = ( GetType ( unit ) = unit_vehicle and GetEngine ( unit ) <> engine_siberite ) ;
6436: LD_ADDR_VAR 0 18
6440: PUSH
6441: LD_VAR 0 1
6445: PPUSH
6446: CALL_OW 247
6450: PUSH
6451: LD_INT 2
6453: EQUAL
6454: PUSH
6455: LD_VAR 0 1
6459: PPUSH
6460: CALL_OW 262
6464: PUSH
6465: LD_INT 3
6467: NONEQUAL
6468: AND
6469: ST_TO_ADDR
// status = 1 ;
6470: LD_ADDR_VAR 0 12
6474: PUSH
6475: LD_INT 1
6477: ST_TO_ADDR
// tmp_path = [ 1 , path [ 1 ] ] ;
6478: LD_ADDR_VAR 0 11
6482: PUSH
6483: LD_INT 1
6485: PUSH
6486: LD_VAR 0 2
6490: PUSH
6491: LD_INT 1
6493: ARRAY
6494: PUSH
6495: EMPTY
6496: LIST
6497: LIST
6498: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6499: LD_INT 35
6501: PPUSH
6502: CALL_OW 67
// if need_refuel and GetFuel ( unit ) < 20 then
6506: LD_VAR 0 18
6510: PUSH
6511: LD_VAR 0 1
6515: PPUSH
6516: CALL_OW 261
6520: PUSH
6521: LD_INT 20
6523: LESS
6524: AND
6525: IFFALSE 6718
// begin station := FilterAllUnits ( [ [ f_side , GetSide ( unit ) ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , b_warehouse ] , [ f_btype , b_oil_mine ] , [ f_btype , b_factory ] ] ] ) ;
6527: LD_ADDR_VAR 0 10
6531: PUSH
6532: LD_INT 22
6534: PUSH
6535: LD_VAR 0 1
6539: PPUSH
6540: CALL_OW 255
6544: PUSH
6545: EMPTY
6546: LIST
6547: LIST
6548: PUSH
6549: LD_INT 2
6551: PUSH
6552: LD_INT 30
6554: PUSH
6555: LD_INT 0
6557: PUSH
6558: EMPTY
6559: LIST
6560: LIST
6561: PUSH
6562: LD_INT 30
6564: PUSH
6565: LD_INT 1
6567: PUSH
6568: EMPTY
6569: LIST
6570: LIST
6571: PUSH
6572: LD_INT 30
6574: PUSH
6575: LD_INT 29
6577: PUSH
6578: EMPTY
6579: LIST
6580: LIST
6581: PUSH
6582: LD_INT 30
6584: PUSH
6585: LD_INT 3
6587: PUSH
6588: EMPTY
6589: LIST
6590: LIST
6591: PUSH
6592: EMPTY
6593: LIST
6594: LIST
6595: LIST
6596: LIST
6597: LIST
6598: PUSH
6599: EMPTY
6600: LIST
6601: LIST
6602: PPUSH
6603: CALL_OW 69
6607: ST_TO_ADDR
// if not station then
6608: LD_VAR 0 10
6612: NOT
6613: IFFALSE 6629
// begin SetFuel ( unit , 40 ) ;
6615: LD_VAR 0 1
6619: PPUSH
6620: LD_INT 40
6622: PPUSH
6623: CALL_OW 240
// continue ;
6627: GO 6499
// end ; status := 6 ;
6629: LD_ADDR_VAR 0 12
6633: PUSH
6634: LD_INT 6
6636: ST_TO_ADDR
// station := NearestUnitToUnit ( station , unit ) ;
6637: LD_ADDR_VAR 0 10
6641: PUSH
6642: LD_VAR 0 10
6646: PPUSH
6647: LD_VAR 0 1
6651: PPUSH
6652: CALL_OW 74
6656: ST_TO_ADDR
// repeat wait ( 0 0$1 ) ;
6657: LD_INT 35
6659: PPUSH
6660: CALL_OW 67
// ComMoveUnit ( unit , station ) ;
6664: LD_VAR 0 1
6668: PPUSH
6669: LD_VAR 0 10
6673: PPUSH
6674: CALL_OW 112
// until GetDistUnits ( unit , station ) < 6 ;
6678: LD_VAR 0 1
6682: PPUSH
6683: LD_VAR 0 10
6687: PPUSH
6688: CALL_OW 296
6692: PUSH
6693: LD_INT 6
6695: LESS
6696: IFFALSE 6657
// SetFuel ( unit , 100 ) ;
6698: LD_VAR 0 1
6702: PPUSH
6703: LD_INT 100
6705: PPUSH
6706: CALL_OW 240
// status := 5 ;
6710: LD_ADDR_VAR 0 12
6714: PUSH
6715: LD_INT 5
6717: ST_TO_ADDR
// end ; if status = 1 then
6718: LD_VAR 0 12
6722: PUSH
6723: LD_INT 1
6725: EQUAL
6726: IFFALSE 7058
// begin enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] , [ f_dist , unit , spot_dist ] , [ f_see , 1 ] ] ) ;
6728: LD_ADDR_VAR 0 13
6732: PUSH
6733: LD_INT 81
6735: PUSH
6736: LD_VAR 0 1
6740: PPUSH
6741: CALL_OW 255
6745: PUSH
6746: EMPTY
6747: LIST
6748: LIST
6749: PUSH
6750: LD_INT 3
6752: PUSH
6753: LD_INT 21
6755: PUSH
6756: LD_INT 3
6758: PUSH
6759: EMPTY
6760: LIST
6761: LIST
6762: PUSH
6763: EMPTY
6764: LIST
6765: LIST
6766: PUSH
6767: LD_INT 91
6769: PUSH
6770: LD_VAR 0 1
6774: PUSH
6775: LD_VAR 0 15
6779: PUSH
6780: EMPTY
6781: LIST
6782: LIST
6783: LIST
6784: PUSH
6785: LD_INT 101
6787: PUSH
6788: LD_INT 1
6790: PUSH
6791: EMPTY
6792: LIST
6793: LIST
6794: PUSH
6795: EMPTY
6796: LIST
6797: LIST
6798: LIST
6799: LIST
6800: PPUSH
6801: CALL_OW 69
6805: ST_TO_ADDR
// if ( enemy ) then
6806: LD_VAR 0 13
6810: IFFALSE 6860
// begin SetRememberedX ( unit , GetX ( unit ) ) ;
6812: LD_VAR 0 1
6816: PPUSH
6817: LD_VAR 0 1
6821: PPUSH
6822: CALL_OW 250
6826: PPUSH
6827: CALL_OW 231
// SetRememberedY ( unit , GetY ( unit ) ) ;
6831: LD_VAR 0 1
6835: PPUSH
6836: LD_VAR 0 1
6840: PPUSH
6841: CALL_OW 251
6845: PPUSH
6846: CALL_OW 232
// status = 2 ;
6850: LD_ADDR_VAR 0 12
6854: PUSH
6855: LD_INT 2
6857: ST_TO_ADDR
// end else
6858: GO 7058
// begin if IsAt ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) or not HasTask ( unit ) then
6860: LD_VAR 0 1
6864: PPUSH
6865: LD_VAR 0 11
6869: PUSH
6870: LD_INT 2
6872: ARRAY
6873: PUSH
6874: LD_INT 1
6876: ARRAY
6877: PPUSH
6878: LD_VAR 0 11
6882: PUSH
6883: LD_INT 2
6885: ARRAY
6886: PUSH
6887: LD_INT 2
6889: ARRAY
6890: PPUSH
6891: CALL_OW 307
6895: PUSH
6896: LD_VAR 0 1
6900: PPUSH
6901: CALL_OW 314
6905: NOT
6906: OR
6907: IFFALSE 7058
// begin wait ( 0 0$2 ) ;
6909: LD_INT 70
6911: PPUSH
6912: CALL_OW 67
// if tmp_path [ 1 ] + 1 > path then
6916: LD_VAR 0 11
6920: PUSH
6921: LD_INT 1
6923: ARRAY
6924: PUSH
6925: LD_INT 1
6927: PLUS
6928: PUSH
6929: LD_VAR 0 2
6933: GREATER
6934: IFFALSE 6959
// tmp_path := Replace ( tmp_path , 1 , 1 ) else
6936: LD_ADDR_VAR 0 11
6940: PUSH
6941: LD_VAR 0 11
6945: PPUSH
6946: LD_INT 1
6948: PPUSH
6949: LD_INT 1
6951: PPUSH
6952: CALL_OW 1
6956: ST_TO_ADDR
6957: GO 6990
// tmp_path := Replace ( tmp_path , 1 , tmp_path [ 1 ] + 1 ) ;
6959: LD_ADDR_VAR 0 11
6963: PUSH
6964: LD_VAR 0 11
6968: PPUSH
6969: LD_INT 1
6971: PPUSH
6972: LD_VAR 0 11
6976: PUSH
6977: LD_INT 1
6979: ARRAY
6980: PUSH
6981: LD_INT 1
6983: PLUS
6984: PPUSH
6985: CALL_OW 1
6989: ST_TO_ADDR
// tmp_path := Replace ( tmp_path , 2 , path [ tmp_path [ 1 ] ] ) ;
6990: LD_ADDR_VAR 0 11
6994: PUSH
6995: LD_VAR 0 11
6999: PPUSH
7000: LD_INT 2
7002: PPUSH
7003: LD_VAR 0 2
7007: PUSH
7008: LD_VAR 0 11
7012: PUSH
7013: LD_INT 1
7015: ARRAY
7016: ARRAY
7017: PPUSH
7018: CALL_OW 1
7022: ST_TO_ADDR
// ComAgressiveMove ( unit , tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ) ;
7023: LD_VAR 0 1
7027: PPUSH
7028: LD_VAR 0 11
7032: PUSH
7033: LD_INT 2
7035: ARRAY
7036: PUSH
7037: LD_INT 1
7039: ARRAY
7040: PPUSH
7041: LD_VAR 0 11
7045: PUSH
7046: LD_INT 2
7048: ARRAY
7049: PUSH
7050: LD_INT 2
7052: ARRAY
7053: PPUSH
7054: CALL_OW 114
// end ; end ; end ; if status = 2 then
7058: LD_VAR 0 12
7062: PUSH
7063: LD_INT 2
7065: EQUAL
7066: IFFALSE 7287
// begin if GetLives ( unit ) < 650 and safe_place then
7068: LD_VAR 0 1
7072: PPUSH
7073: CALL_OW 256
7077: PUSH
7078: LD_INT 650
7080: LESS
7081: PUSH
7082: LD_VAR 0 16
7086: AND
7087: IFFALSE 7099
// begin status = 3 ;
7089: LD_ADDR_VAR 0 12
7093: PUSH
7094: LD_INT 3
7096: ST_TO_ADDR
// continue ;
7097: GO 6499
// end ; x := GetRememberedX ( unit ) ;
7099: LD_ADDR_VAR 0 6
7103: PUSH
7104: LD_VAR 0 1
7108: PPUSH
7109: CALL_OW 252
7113: ST_TO_ADDR
// y := GetRememberedY ( unit ) ;
7114: LD_ADDR_VAR 0 7
7118: PUSH
7119: LD_VAR 0 1
7123: PPUSH
7124: CALL_OW 253
7128: ST_TO_ADDR
// enemy := FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_distxy , x , y , spot_dist ] , [ f_see , 1 ] ] ) ;
7129: LD_ADDR_VAR 0 13
7133: PUSH
7134: LD_INT 81
7136: PUSH
7137: LD_VAR 0 1
7141: PPUSH
7142: CALL_OW 255
7146: PUSH
7147: EMPTY
7148: LIST
7149: LIST
7150: PUSH
7151: LD_INT 92
7153: PUSH
7154: LD_VAR 0 6
7158: PUSH
7159: LD_VAR 0 7
7163: PUSH
7164: LD_VAR 0 15
7168: PUSH
7169: EMPTY
7170: LIST
7171: LIST
7172: LIST
7173: LIST
7174: PUSH
7175: LD_INT 101
7177: PUSH
7178: LD_INT 1
7180: PUSH
7181: EMPTY
7182: LIST
7183: LIST
7184: PUSH
7185: EMPTY
7186: LIST
7187: LIST
7188: LIST
7189: PPUSH
7190: CALL_OW 69
7194: ST_TO_ADDR
// if enemy then
7195: LD_VAR 0 13
7199: IFFALSE 7270
// begin e := NearestUnitToUnit ( enemy , unit ) ;
7201: LD_ADDR_VAR 0 14
7205: PUSH
7206: LD_VAR 0 13
7210: PPUSH
7211: LD_VAR 0 1
7215: PPUSH
7216: CALL_OW 74
7220: ST_TO_ADDR
// if GetDistUnitXY ( e , x , y ) < spot_dist + chase_range then
7221: LD_VAR 0 14
7225: PPUSH
7226: LD_VAR 0 6
7230: PPUSH
7231: LD_VAR 0 7
7235: PPUSH
7236: CALL_OW 297
7240: PUSH
7241: LD_VAR 0 15
7245: PUSH
7246: LD_VAR 0 17
7250: PLUS
7251: LESS
7252: IFFALSE 7268
// ComAttackUnit ( unit , e ) ;
7254: LD_VAR 0 1
7258: PPUSH
7259: LD_VAR 0 14
7263: PPUSH
7264: CALL_OW 115
// end else
7268: GO 7287
// begin ComStop ( unit ) ;
7270: LD_VAR 0 1
7274: PPUSH
7275: CALL_OW 141
// status = 5 ;
7279: LD_ADDR_VAR 0 12
7283: PUSH
7284: LD_INT 5
7286: ST_TO_ADDR
// end ; end ; if status = 3 and safe_place then
7287: LD_VAR 0 12
7291: PUSH
7292: LD_INT 3
7294: EQUAL
7295: PUSH
7296: LD_VAR 0 16
7300: AND
7301: IFFALSE 7387
// begin repeat ComMoveXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) ;
7303: LD_VAR 0 1
7307: PPUSH
7308: LD_VAR 0 16
7312: PUSH
7313: LD_INT 1
7315: ARRAY
7316: PPUSH
7317: LD_VAR 0 16
7321: PUSH
7322: LD_INT 2
7324: ARRAY
7325: PPUSH
7326: CALL_OW 111
// wait ( 0 0$1 ) ;
7330: LD_INT 35
7332: PPUSH
7333: CALL_OW 67
// until GetDistUnitXY ( unit , safe_place [ 1 ] , safe_place [ 2 ] ) < 4 ;
7337: LD_VAR 0 1
7341: PPUSH
7342: LD_VAR 0 16
7346: PUSH
7347: LD_INT 1
7349: ARRAY
7350: PPUSH
7351: LD_VAR 0 16
7355: PUSH
7356: LD_INT 2
7358: ARRAY
7359: PPUSH
7360: CALL_OW 297
7364: PUSH
7365: LD_INT 4
7367: LESS
7368: IFFALSE 7303
// ComStop ( unit ) ;
7370: LD_VAR 0 1
7374: PPUSH
7375: CALL_OW 141
// status = 4 ;
7379: LD_ADDR_VAR 0 12
7383: PUSH
7384: LD_INT 4
7386: ST_TO_ADDR
// end ; if status = 4 then
7387: LD_VAR 0 12
7391: PUSH
7392: LD_INT 4
7394: EQUAL
7395: IFFALSE 7427
// begin repeat wait ( 0 0$1 ) ;
7397: LD_INT 35
7399: PPUSH
7400: CALL_OW 67
// until GetLives ( unit ) = 1000 ;
7404: LD_VAR 0 1
7408: PPUSH
7409: CALL_OW 256
7413: PUSH
7414: LD_INT 1000
7416: EQUAL
7417: IFFALSE 7397
// status = 5 ;
7419: LD_ADDR_VAR 0 12
7423: PUSH
7424: LD_INT 5
7426: ST_TO_ADDR
// end ; if status = 5 then
7427: LD_VAR 0 12
7431: PUSH
7432: LD_INT 5
7434: EQUAL
7435: IFFALSE 7717
// begin p := 999 ;
7437: LD_ADDR_VAR 0 9
7441: PUSH
7442: LD_INT 999
7444: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ 1 ] , tmp_path [ 2 ] [ 2 ] ] ;
7445: LD_ADDR_VAR 0 14
7449: PUSH
7450: LD_VAR 0 11
7454: PUSH
7455: LD_INT 2
7457: ARRAY
7458: PUSH
7459: LD_INT 1
7461: ARRAY
7462: PUSH
7463: LD_VAR 0 11
7467: PUSH
7468: LD_INT 2
7470: ARRAY
7471: PUSH
7472: LD_INT 2
7474: ARRAY
7475: PUSH
7476: EMPTY
7477: LIST
7478: LIST
7479: ST_TO_ADDR
// c := 1 ;
7480: LD_ADDR_VAR 0 8
7484: PUSH
7485: LD_INT 1
7487: ST_TO_ADDR
// for i = 1 to tmp_path [ 2 ] div 2 do
7488: LD_ADDR_VAR 0 5
7492: PUSH
7493: DOUBLE
7494: LD_INT 1
7496: DEC
7497: ST_TO_ADDR
7498: LD_VAR 0 11
7502: PUSH
7503: LD_INT 2
7505: ARRAY
7506: PUSH
7507: LD_INT 2
7509: DIV
7510: PUSH
7511: FOR_TO
7512: IFFALSE 7644
// begin x := GetDistUnitXY ( unit , tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ) ;
7514: LD_ADDR_VAR 0 6
7518: PUSH
7519: LD_VAR 0 1
7523: PPUSH
7524: LD_VAR 0 11
7528: PUSH
7529: LD_INT 2
7531: ARRAY
7532: PUSH
7533: LD_VAR 0 8
7537: ARRAY
7538: PPUSH
7539: LD_VAR 0 11
7543: PUSH
7544: LD_INT 2
7546: ARRAY
7547: PUSH
7548: LD_VAR 0 8
7552: PUSH
7553: LD_INT 1
7555: PLUS
7556: ARRAY
7557: PPUSH
7558: CALL_OW 297
7562: ST_TO_ADDR
// if x < p then
7563: LD_VAR 0 6
7567: PUSH
7568: LD_VAR 0 9
7572: LESS
7573: IFFALSE 7628
// begin p := x ;
7575: LD_ADDR_VAR 0 9
7579: PUSH
7580: LD_VAR 0 6
7584: ST_TO_ADDR
// e := [ tmp_path [ 2 ] [ c ] , tmp_path [ 2 ] [ c + 1 ] ] ;
7585: LD_ADDR_VAR 0 14
7589: PUSH
7590: LD_VAR 0 11
7594: PUSH
7595: LD_INT 2
7597: ARRAY
7598: PUSH
7599: LD_VAR 0 8
7603: ARRAY
7604: PUSH
7605: LD_VAR 0 11
7609: PUSH
7610: LD_INT 2
7612: ARRAY
7613: PUSH
7614: LD_VAR 0 8
7618: PUSH
7619: LD_INT 1
7621: PLUS
7622: ARRAY
7623: PUSH
7624: EMPTY
7625: LIST
7626: LIST
7627: ST_TO_ADDR
// end ; c = c + 2 ;
7628: LD_ADDR_VAR 0 8
7632: PUSH
7633: LD_VAR 0 8
7637: PUSH
7638: LD_INT 2
7640: PLUS
7641: ST_TO_ADDR
// end ;
7642: GO 7511
7644: POP
7645: POP
// repeat ComMoveXY ( unit , e [ 1 ] , e [ 2 ] ) ;
7646: LD_VAR 0 1
7650: PPUSH
7651: LD_VAR 0 14
7655: PUSH
7656: LD_INT 1
7658: ARRAY
7659: PPUSH
7660: LD_VAR 0 14
7664: PUSH
7665: LD_INT 2
7667: ARRAY
7668: PPUSH
7669: CALL_OW 111
// wait ( 0 0$1 ) ;
7673: LD_INT 35
7675: PPUSH
7676: CALL_OW 67
// until IsAt ( unit , e [ 1 ] , e [ 2 ] ) ;
7680: LD_VAR 0 1
7684: PPUSH
7685: LD_VAR 0 14
7689: PUSH
7690: LD_INT 1
7692: ARRAY
7693: PPUSH
7694: LD_VAR 0 14
7698: PUSH
7699: LD_INT 2
7701: ARRAY
7702: PPUSH
7703: CALL_OW 307
7707: IFFALSE 7646
// status = 1 ;
7709: LD_ADDR_VAR 0 12
7713: PUSH
7714: LD_INT 1
7716: ST_TO_ADDR
// end ; until IsDead ( unit ) ;
7717: LD_VAR 0 1
7721: PPUSH
7722: CALL_OW 301
7726: IFFALSE 6499
// end ;
7728: LD_VAR 0 4
7732: RET
// export function Talk ( units , type , sequence , sex , class , id , order_id ) ; var i , unit , tmp , unit_id , dialog_id , sex_id , class_id ; begin
7733: LD_INT 0
7735: PPUSH
7736: PPUSH
7737: PPUSH
7738: PPUSH
7739: PPUSH
7740: PPUSH
7741: PPUSH
7742: PPUSH
// if not units or not sequence or not sex in [ sex_male , sex_female , 0 ] or not id or not order_id then
7743: LD_VAR 0 1
7747: NOT
7748: PUSH
7749: LD_VAR 0 3
7753: NOT
7754: OR
7755: PUSH
7756: LD_VAR 0 4
7760: PUSH
7761: LD_INT 1
7763: PUSH
7764: LD_INT 2
7766: PUSH
7767: LD_INT 0
7769: PUSH
7770: EMPTY
7771: LIST
7772: LIST
7773: LIST
7774: IN
7775: NOT
7776: OR
7777: PUSH
7778: LD_VAR 0 6
7782: NOT
7783: OR
7784: PUSH
7785: LD_VAR 0 7
7789: NOT
7790: OR
7791: IFFALSE 7795
// exit ;
7793: GO 8186
// sex_id :=  ;
7795: LD_ADDR_VAR 0 14
7799: PUSH
7800: LD_STRING 
7802: ST_TO_ADDR
// case class of 1 :
7803: LD_VAR 0 5
7807: PUSH
7808: LD_INT 1
7810: DOUBLE
7811: EQUAL
7812: IFTRUE 7816
7814: GO 7827
7816: POP
// class_id := Sol ; 2 :
7817: LD_ADDR_VAR 0 15
7821: PUSH
7822: LD_STRING Sol
7824: ST_TO_ADDR
7825: GO 7885
7827: LD_INT 2
7829: DOUBLE
7830: EQUAL
7831: IFTRUE 7835
7833: GO 7846
7835: POP
// class_id := Eng ; 3 :
7836: LD_ADDR_VAR 0 15
7840: PUSH
7841: LD_STRING Eng
7843: ST_TO_ADDR
7844: GO 7885
7846: LD_INT 3
7848: DOUBLE
7849: EQUAL
7850: IFTRUE 7854
7852: GO 7865
7854: POP
// class_id := Mech ; 4 :
7855: LD_ADDR_VAR 0 15
7859: PUSH
7860: LD_STRING Mech
7862: ST_TO_ADDR
7863: GO 7885
7865: LD_INT 4
7867: DOUBLE
7868: EQUAL
7869: IFTRUE 7873
7871: GO 7884
7873: POP
// class_id := Sci ; end ;
7874: LD_ADDR_VAR 0 15
7878: PUSH
7879: LD_STRING Sci
7881: ST_TO_ADDR
7882: GO 7885
7884: POP
// tmp := UnitFilter ( units , [ f_class , class ] ) ;
7885: LD_ADDR_VAR 0 11
7889: PUSH
7890: LD_VAR 0 1
7894: PPUSH
7895: LD_INT 25
7897: PUSH
7898: LD_VAR 0 5
7902: PUSH
7903: EMPTY
7904: LIST
7905: LIST
7906: PPUSH
7907: CALL_OW 72
7911: ST_TO_ADDR
// if tmp then
7912: LD_VAR 0 11
7916: IFFALSE 7928
// units := tmp ;
7918: LD_ADDR_VAR 0 1
7922: PUSH
7923: LD_VAR 0 11
7927: ST_TO_ADDR
// if sex then
7928: LD_VAR 0 4
7932: IFFALSE 7988
// begin if sex = sex_female then
7934: LD_VAR 0 4
7938: PUSH
7939: LD_INT 2
7941: EQUAL
7942: IFFALSE 7952
// sex_id := F ;
7944: LD_ADDR_VAR 0 14
7948: PUSH
7949: LD_STRING F
7951: ST_TO_ADDR
// units := UnitFilter ( units , [ f_sex , sex ] ) ;
7952: LD_ADDR_VAR 0 1
7956: PUSH
7957: LD_VAR 0 1
7961: PPUSH
7962: LD_INT 26
7964: PUSH
7965: LD_VAR 0 4
7969: PUSH
7970: EMPTY
7971: LIST
7972: LIST
7973: PPUSH
7974: CALL_OW 72
7978: ST_TO_ADDR
// if not units then
7979: LD_VAR 0 1
7983: NOT
7984: IFFALSE 7988
// exit ;
7986: GO 8186
// end ; unit_id := id ;
7988: LD_ADDR_VAR 0 12
7992: PUSH
7993: LD_VAR 0 6
7997: ST_TO_ADDR
// if unit_id > units then
7998: LD_VAR 0 12
8002: PUSH
8003: LD_VAR 0 1
8007: GREATER
8008: IFFALSE 8018
// unit_id := 1 ;
8010: LD_ADDR_VAR 0 12
8014: PUSH
8015: LD_INT 1
8017: ST_TO_ADDR
// if not units [ unit_id ] then
8018: LD_VAR 0 1
8022: PUSH
8023: LD_VAR 0 12
8027: ARRAY
8028: NOT
8029: IFFALSE 8033
// exit ;
8031: GO 8186
// unit := units [ unit_id ] ;
8033: LD_ADDR_VAR 0 10
8037: PUSH
8038: LD_VAR 0 1
8042: PUSH
8043: LD_VAR 0 12
8047: ARRAY
8048: ST_TO_ADDR
// dialog_id := D & sequence & - & sex_id & class_id & id & - & order_id ;
8049: LD_ADDR_VAR 0 13
8053: PUSH
8054: LD_STRING D
8056: PUSH
8057: LD_VAR 0 3
8061: STR
8062: PUSH
8063: LD_STRING -
8065: STR
8066: PUSH
8067: LD_VAR 0 14
8071: STR
8072: PUSH
8073: LD_VAR 0 15
8077: STR
8078: PUSH
8079: LD_VAR 0 6
8083: STR
8084: PUSH
8085: LD_STRING -
8087: STR
8088: PUSH
8089: LD_VAR 0 7
8093: STR
8094: ST_TO_ADDR
// case type of 0 :
8095: LD_VAR 0 2
8099: PUSH
8100: LD_INT 0
8102: DOUBLE
8103: EQUAL
8104: IFTRUE 8108
8106: GO 8125
8108: POP
// Say ( unit , dialog_id ) ; 1 :
8109: LD_VAR 0 10
8113: PPUSH
8114: LD_VAR 0 13
8118: PPUSH
8119: CALL_OW 88
8123: GO 8176
8125: LD_INT 1
8127: DOUBLE
8128: EQUAL
8129: IFTRUE 8133
8131: GO 8150
8133: POP
// SayRadio ( unit , dialog_id ) ; 2 :
8134: LD_VAR 0 10
8138: PPUSH
8139: LD_VAR 0 13
8143: PPUSH
8144: CALL_OW 94
8148: GO 8176
8150: LD_INT 2
8152: DOUBLE
8153: EQUAL
8154: IFTRUE 8158
8156: GO 8175
8158: POP
// ForceSay ( unit , dialog_id ) ; end ;
8159: LD_VAR 0 10
8163: PPUSH
8164: LD_VAR 0 13
8168: PPUSH
8169: CALL_OW 91
8173: GO 8176
8175: POP
// result := unit ;
8176: LD_ADDR_VAR 0 8
8180: PUSH
8181: LD_VAR 0 10
8185: ST_TO_ADDR
// end ;
8186: LD_VAR 0 8
8190: RET
// export function Reindex ( array , i_from , i_to , direction ) ; var i , j , k , d , tmp , length ; begin
8191: LD_INT 0
8193: PPUSH
8194: PPUSH
8195: PPUSH
8196: PPUSH
8197: PPUSH
8198: PPUSH
8199: PPUSH
// result := array ;
8200: LD_ADDR_VAR 0 5
8204: PUSH
8205: LD_VAR 0 1
8209: ST_TO_ADDR
// if not array or not i_from or not i_to or i_from > array or i_to > array then
8210: LD_VAR 0 1
8214: NOT
8215: PUSH
8216: LD_VAR 0 2
8220: NOT
8221: OR
8222: PUSH
8223: LD_VAR 0 3
8227: NOT
8228: OR
8229: PUSH
8230: LD_VAR 0 2
8234: PUSH
8235: LD_VAR 0 1
8239: GREATER
8240: OR
8241: PUSH
8242: LD_VAR 0 3
8246: PUSH
8247: LD_VAR 0 1
8251: GREATER
8252: OR
8253: IFFALSE 8257
// exit ;
8255: GO 8553
// if direction then
8257: LD_VAR 0 4
8261: IFFALSE 8325
// begin d := 1 ;
8263: LD_ADDR_VAR 0 9
8267: PUSH
8268: LD_INT 1
8270: ST_TO_ADDR
// if i_from > i_to then
8271: LD_VAR 0 2
8275: PUSH
8276: LD_VAR 0 3
8280: GREATER
8281: IFFALSE 8307
// length := ( array - i_from ) + i_to else
8283: LD_ADDR_VAR 0 11
8287: PUSH
8288: LD_VAR 0 1
8292: PUSH
8293: LD_VAR 0 2
8297: MINUS
8298: PUSH
8299: LD_VAR 0 3
8303: PLUS
8304: ST_TO_ADDR
8305: GO 8323
// length := i_to - i_from ;
8307: LD_ADDR_VAR 0 11
8311: PUSH
8312: LD_VAR 0 3
8316: PUSH
8317: LD_VAR 0 2
8321: MINUS
8322: ST_TO_ADDR
// end else
8323: GO 8386
// begin d := - 1 ;
8325: LD_ADDR_VAR 0 9
8329: PUSH
8330: LD_INT 1
8332: NEG
8333: ST_TO_ADDR
// if i_from > i_to then
8334: LD_VAR 0 2
8338: PUSH
8339: LD_VAR 0 3
8343: GREATER
8344: IFFALSE 8364
// length := i_from - i_to else
8346: LD_ADDR_VAR 0 11
8350: PUSH
8351: LD_VAR 0 2
8355: PUSH
8356: LD_VAR 0 3
8360: MINUS
8361: ST_TO_ADDR
8362: GO 8386
// length := ( array - i_to ) + i_from ;
8364: LD_ADDR_VAR 0 11
8368: PUSH
8369: LD_VAR 0 1
8373: PUSH
8374: LD_VAR 0 3
8378: MINUS
8379: PUSH
8380: LD_VAR 0 2
8384: PLUS
8385: ST_TO_ADDR
// end ; if not length then
8386: LD_VAR 0 11
8390: NOT
8391: IFFALSE 8395
// exit ;
8393: GO 8553
// tmp := array ;
8395: LD_ADDR_VAR 0 10
8399: PUSH
8400: LD_VAR 0 1
8404: ST_TO_ADDR
// for i = 1 to length do
8405: LD_ADDR_VAR 0 6
8409: PUSH
8410: DOUBLE
8411: LD_INT 1
8413: DEC
8414: ST_TO_ADDR
8415: LD_VAR 0 11
8419: PUSH
8420: FOR_TO
8421: IFFALSE 8541
// begin for j = 1 to array do
8423: LD_ADDR_VAR 0 7
8427: PUSH
8428: DOUBLE
8429: LD_INT 1
8431: DEC
8432: ST_TO_ADDR
8433: LD_VAR 0 1
8437: PUSH
8438: FOR_TO
8439: IFFALSE 8527
// begin k := j + d ;
8441: LD_ADDR_VAR 0 8
8445: PUSH
8446: LD_VAR 0 7
8450: PUSH
8451: LD_VAR 0 9
8455: PLUS
8456: ST_TO_ADDR
// if k > array then
8457: LD_VAR 0 8
8461: PUSH
8462: LD_VAR 0 1
8466: GREATER
8467: IFFALSE 8477
// k := 1 ;
8469: LD_ADDR_VAR 0 8
8473: PUSH
8474: LD_INT 1
8476: ST_TO_ADDR
// if not k then
8477: LD_VAR 0 8
8481: NOT
8482: IFFALSE 8494
// k := array ;
8484: LD_ADDR_VAR 0 8
8488: PUSH
8489: LD_VAR 0 1
8493: ST_TO_ADDR
// tmp := Replace ( tmp , k , array [ j ] ) ;
8494: LD_ADDR_VAR 0 10
8498: PUSH
8499: LD_VAR 0 10
8503: PPUSH
8504: LD_VAR 0 8
8508: PPUSH
8509: LD_VAR 0 1
8513: PUSH
8514: LD_VAR 0 7
8518: ARRAY
8519: PPUSH
8520: CALL_OW 1
8524: ST_TO_ADDR
// end ;
8525: GO 8438
8527: POP
8528: POP
// array := tmp ;
8529: LD_ADDR_VAR 0 1
8533: PUSH
8534: LD_VAR 0 10
8538: ST_TO_ADDR
// end ;
8539: GO 8420
8541: POP
8542: POP
// result := array ;
8543: LD_ADDR_VAR 0 5
8547: PUSH
8548: LD_VAR 0 1
8552: ST_TO_ADDR
// end ;
8553: LD_VAR 0 5
8557: RET
// export function GetBuildingHexes ( btype , x , y , dir , nation , mode ) ; var i , temp_list , temp_list2 ; var DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 , DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 , DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ; var Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 , Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ; var Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 , ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ; var Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 , Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ; begin
8558: LD_INT 0
8560: PPUSH
8561: PPUSH
8562: PPUSH
8563: PPUSH
8564: PPUSH
8565: PPUSH
8566: PPUSH
8567: PPUSH
8568: PPUSH
8569: PPUSH
8570: PPUSH
8571: PPUSH
8572: PPUSH
8573: PPUSH
8574: PPUSH
8575: PPUSH
8576: PPUSH
8577: PPUSH
8578: PPUSH
8579: PPUSH
8580: PPUSH
8581: PPUSH
8582: PPUSH
8583: PPUSH
8584: PPUSH
8585: PPUSH
8586: PPUSH
8587: PPUSH
8588: PPUSH
8589: PPUSH
8590: PPUSH
8591: PPUSH
8592: PPUSH
8593: PPUSH
8594: PPUSH
8595: PPUSH
8596: PPUSH
8597: PPUSH
8598: PPUSH
8599: PPUSH
8600: PPUSH
8601: PPUSH
8602: PPUSH
8603: PPUSH
8604: PPUSH
8605: PPUSH
8606: PPUSH
8607: PPUSH
8608: PPUSH
8609: PPUSH
8610: PPUSH
8611: PPUSH
8612: PPUSH
8613: PPUSH
8614: PPUSH
8615: PPUSH
8616: PPUSH
8617: PPUSH
// result = [ ] ;
8618: LD_ADDR_VAR 0 7
8622: PUSH
8623: EMPTY
8624: ST_TO_ADDR
// temp_list = [ ] ;
8625: LD_ADDR_VAR 0 9
8629: PUSH
8630: EMPTY
8631: ST_TO_ADDR
// if not dir in [ 0 , 1 , 2 , 3 , 4 , 5 ] or ( btype in [ b_depot , b_warehouse ] and not nation in [ nation_american , nation_arabian , nation_russian ] ) then
8632: LD_VAR 0 4
8636: PUSH
8637: LD_INT 0
8639: PUSH
8640: LD_INT 1
8642: PUSH
8643: LD_INT 2
8645: PUSH
8646: LD_INT 3
8648: PUSH
8649: LD_INT 4
8651: PUSH
8652: LD_INT 5
8654: PUSH
8655: EMPTY
8656: LIST
8657: LIST
8658: LIST
8659: LIST
8660: LIST
8661: LIST
8662: IN
8663: NOT
8664: PUSH
8665: LD_VAR 0 1
8669: PUSH
8670: LD_INT 0
8672: PUSH
8673: LD_INT 1
8675: PUSH
8676: EMPTY
8677: LIST
8678: LIST
8679: IN
8680: PUSH
8681: LD_VAR 0 5
8685: PUSH
8686: LD_INT 1
8688: PUSH
8689: LD_INT 2
8691: PUSH
8692: LD_INT 3
8694: PUSH
8695: EMPTY
8696: LIST
8697: LIST
8698: LIST
8699: IN
8700: NOT
8701: AND
8702: OR
8703: IFFALSE 8707
// exit ;
8705: GO 27092
// if btype in [ b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon ] then
8707: LD_VAR 0 1
8711: PUSH
8712: LD_INT 6
8714: PUSH
8715: LD_INT 7
8717: PUSH
8718: LD_INT 8
8720: PUSH
8721: LD_INT 13
8723: PUSH
8724: LD_INT 12
8726: PUSH
8727: LD_INT 15
8729: PUSH
8730: LD_INT 11
8732: PUSH
8733: LD_INT 14
8735: PUSH
8736: LD_INT 10
8738: PUSH
8739: EMPTY
8740: LIST
8741: LIST
8742: LIST
8743: LIST
8744: LIST
8745: LIST
8746: LIST
8747: LIST
8748: LIST
8749: IN
8750: IFFALSE 8760
// btype = b_lab ;
8752: LD_ADDR_VAR 0 1
8756: PUSH
8757: LD_INT 6
8759: ST_TO_ADDR
// if not mode in [ 0 , 1 , 2 ] or ( not btype in [ b_depot , b_warehouse , b_workshop , b_factory , b_lab , b_control_tower , b_armoury , b_barracks , b_breastwork , b_bunker , b_turret ] and mode = 1 ) or ( not btype in [ b_workshop , b_factory ] and mode = 2 ) then
8760: LD_VAR 0 6
8764: PUSH
8765: LD_INT 0
8767: PUSH
8768: LD_INT 1
8770: PUSH
8771: LD_INT 2
8773: PUSH
8774: EMPTY
8775: LIST
8776: LIST
8777: LIST
8778: IN
8779: NOT
8780: PUSH
8781: LD_VAR 0 1
8785: PUSH
8786: LD_INT 0
8788: PUSH
8789: LD_INT 1
8791: PUSH
8792: LD_INT 2
8794: PUSH
8795: LD_INT 3
8797: PUSH
8798: LD_INT 6
8800: PUSH
8801: LD_INT 36
8803: PUSH
8804: LD_INT 4
8806: PUSH
8807: LD_INT 5
8809: PUSH
8810: LD_INT 31
8812: PUSH
8813: LD_INT 32
8815: PUSH
8816: LD_INT 33
8818: PUSH
8819: EMPTY
8820: LIST
8821: LIST
8822: LIST
8823: LIST
8824: LIST
8825: LIST
8826: LIST
8827: LIST
8828: LIST
8829: LIST
8830: LIST
8831: IN
8832: NOT
8833: PUSH
8834: LD_VAR 0 6
8838: PUSH
8839: LD_INT 1
8841: EQUAL
8842: AND
8843: OR
8844: PUSH
8845: LD_VAR 0 1
8849: PUSH
8850: LD_INT 2
8852: PUSH
8853: LD_INT 3
8855: PUSH
8856: EMPTY
8857: LIST
8858: LIST
8859: IN
8860: NOT
8861: PUSH
8862: LD_VAR 0 6
8866: PUSH
8867: LD_INT 2
8869: EQUAL
8870: AND
8871: OR
8872: IFFALSE 8882
// mode = 0 ;
8874: LD_ADDR_VAR 0 6
8878: PUSH
8879: LD_INT 0
8881: ST_TO_ADDR
// case mode of 0 :
8882: LD_VAR 0 6
8886: PUSH
8887: LD_INT 0
8889: DOUBLE
8890: EQUAL
8891: IFTRUE 8895
8893: GO 20348
8895: POP
// begin DepotAm0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
8896: LD_ADDR_VAR 0 11
8900: PUSH
8901: LD_INT 0
8903: PUSH
8904: LD_INT 0
8906: PUSH
8907: EMPTY
8908: LIST
8909: LIST
8910: PUSH
8911: LD_INT 0
8913: PUSH
8914: LD_INT 1
8916: NEG
8917: PUSH
8918: EMPTY
8919: LIST
8920: LIST
8921: PUSH
8922: LD_INT 1
8924: PUSH
8925: LD_INT 0
8927: PUSH
8928: EMPTY
8929: LIST
8930: LIST
8931: PUSH
8932: LD_INT 1
8934: PUSH
8935: LD_INT 1
8937: PUSH
8938: EMPTY
8939: LIST
8940: LIST
8941: PUSH
8942: LD_INT 0
8944: PUSH
8945: LD_INT 1
8947: PUSH
8948: EMPTY
8949: LIST
8950: LIST
8951: PUSH
8952: LD_INT 1
8954: NEG
8955: PUSH
8956: LD_INT 0
8958: PUSH
8959: EMPTY
8960: LIST
8961: LIST
8962: PUSH
8963: LD_INT 1
8965: NEG
8966: PUSH
8967: LD_INT 1
8969: NEG
8970: PUSH
8971: EMPTY
8972: LIST
8973: LIST
8974: PUSH
8975: LD_INT 1
8977: NEG
8978: PUSH
8979: LD_INT 2
8981: NEG
8982: PUSH
8983: EMPTY
8984: LIST
8985: LIST
8986: PUSH
8987: LD_INT 0
8989: PUSH
8990: LD_INT 2
8992: NEG
8993: PUSH
8994: EMPTY
8995: LIST
8996: LIST
8997: PUSH
8998: LD_INT 1
9000: PUSH
9001: LD_INT 1
9003: NEG
9004: PUSH
9005: EMPTY
9006: LIST
9007: LIST
9008: PUSH
9009: LD_INT 1
9011: PUSH
9012: LD_INT 2
9014: PUSH
9015: EMPTY
9016: LIST
9017: LIST
9018: PUSH
9019: LD_INT 0
9021: PUSH
9022: LD_INT 2
9024: PUSH
9025: EMPTY
9026: LIST
9027: LIST
9028: PUSH
9029: LD_INT 1
9031: NEG
9032: PUSH
9033: LD_INT 1
9035: PUSH
9036: EMPTY
9037: LIST
9038: LIST
9039: PUSH
9040: LD_INT 1
9042: PUSH
9043: LD_INT 3
9045: PUSH
9046: EMPTY
9047: LIST
9048: LIST
9049: PUSH
9050: LD_INT 0
9052: PUSH
9053: LD_INT 3
9055: PUSH
9056: EMPTY
9057: LIST
9058: LIST
9059: PUSH
9060: LD_INT 1
9062: NEG
9063: PUSH
9064: LD_INT 2
9066: PUSH
9067: EMPTY
9068: LIST
9069: LIST
9070: PUSH
9071: EMPTY
9072: LIST
9073: LIST
9074: LIST
9075: LIST
9076: LIST
9077: LIST
9078: LIST
9079: LIST
9080: LIST
9081: LIST
9082: LIST
9083: LIST
9084: LIST
9085: LIST
9086: LIST
9087: LIST
9088: ST_TO_ADDR
// DepotAm1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
9089: LD_ADDR_VAR 0 12
9093: PUSH
9094: LD_INT 0
9096: PUSH
9097: LD_INT 0
9099: PUSH
9100: EMPTY
9101: LIST
9102: LIST
9103: PUSH
9104: LD_INT 0
9106: PUSH
9107: LD_INT 1
9109: NEG
9110: PUSH
9111: EMPTY
9112: LIST
9113: LIST
9114: PUSH
9115: LD_INT 1
9117: PUSH
9118: LD_INT 0
9120: PUSH
9121: EMPTY
9122: LIST
9123: LIST
9124: PUSH
9125: LD_INT 1
9127: PUSH
9128: LD_INT 1
9130: PUSH
9131: EMPTY
9132: LIST
9133: LIST
9134: PUSH
9135: LD_INT 0
9137: PUSH
9138: LD_INT 1
9140: PUSH
9141: EMPTY
9142: LIST
9143: LIST
9144: PUSH
9145: LD_INT 1
9147: NEG
9148: PUSH
9149: LD_INT 0
9151: PUSH
9152: EMPTY
9153: LIST
9154: LIST
9155: PUSH
9156: LD_INT 1
9158: NEG
9159: PUSH
9160: LD_INT 1
9162: NEG
9163: PUSH
9164: EMPTY
9165: LIST
9166: LIST
9167: PUSH
9168: LD_INT 1
9170: PUSH
9171: LD_INT 1
9173: NEG
9174: PUSH
9175: EMPTY
9176: LIST
9177: LIST
9178: PUSH
9179: LD_INT 2
9181: PUSH
9182: LD_INT 0
9184: PUSH
9185: EMPTY
9186: LIST
9187: LIST
9188: PUSH
9189: LD_INT 2
9191: PUSH
9192: LD_INT 1
9194: PUSH
9195: EMPTY
9196: LIST
9197: LIST
9198: PUSH
9199: LD_INT 1
9201: NEG
9202: PUSH
9203: LD_INT 1
9205: PUSH
9206: EMPTY
9207: LIST
9208: LIST
9209: PUSH
9210: LD_INT 2
9212: NEG
9213: PUSH
9214: LD_INT 0
9216: PUSH
9217: EMPTY
9218: LIST
9219: LIST
9220: PUSH
9221: LD_INT 2
9223: NEG
9224: PUSH
9225: LD_INT 1
9227: NEG
9228: PUSH
9229: EMPTY
9230: LIST
9231: LIST
9232: PUSH
9233: LD_INT 2
9235: NEG
9236: PUSH
9237: LD_INT 1
9239: PUSH
9240: EMPTY
9241: LIST
9242: LIST
9243: PUSH
9244: LD_INT 3
9246: NEG
9247: PUSH
9248: LD_INT 0
9250: PUSH
9251: EMPTY
9252: LIST
9253: LIST
9254: PUSH
9255: LD_INT 3
9257: NEG
9258: PUSH
9259: LD_INT 1
9261: NEG
9262: PUSH
9263: EMPTY
9264: LIST
9265: LIST
9266: PUSH
9267: EMPTY
9268: LIST
9269: LIST
9270: LIST
9271: LIST
9272: LIST
9273: LIST
9274: LIST
9275: LIST
9276: LIST
9277: LIST
9278: LIST
9279: LIST
9280: LIST
9281: LIST
9282: LIST
9283: LIST
9284: ST_TO_ADDR
// DepotAm2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
9285: LD_ADDR_VAR 0 13
9289: PUSH
9290: LD_INT 0
9292: PUSH
9293: LD_INT 0
9295: PUSH
9296: EMPTY
9297: LIST
9298: LIST
9299: PUSH
9300: LD_INT 0
9302: PUSH
9303: LD_INT 1
9305: NEG
9306: PUSH
9307: EMPTY
9308: LIST
9309: LIST
9310: PUSH
9311: LD_INT 1
9313: PUSH
9314: LD_INT 0
9316: PUSH
9317: EMPTY
9318: LIST
9319: LIST
9320: PUSH
9321: LD_INT 1
9323: PUSH
9324: LD_INT 1
9326: PUSH
9327: EMPTY
9328: LIST
9329: LIST
9330: PUSH
9331: LD_INT 0
9333: PUSH
9334: LD_INT 1
9336: PUSH
9337: EMPTY
9338: LIST
9339: LIST
9340: PUSH
9341: LD_INT 1
9343: NEG
9344: PUSH
9345: LD_INT 0
9347: PUSH
9348: EMPTY
9349: LIST
9350: LIST
9351: PUSH
9352: LD_INT 1
9354: NEG
9355: PUSH
9356: LD_INT 1
9358: NEG
9359: PUSH
9360: EMPTY
9361: LIST
9362: LIST
9363: PUSH
9364: LD_INT 1
9366: NEG
9367: PUSH
9368: LD_INT 2
9370: NEG
9371: PUSH
9372: EMPTY
9373: LIST
9374: LIST
9375: PUSH
9376: LD_INT 2
9378: PUSH
9379: LD_INT 1
9381: PUSH
9382: EMPTY
9383: LIST
9384: LIST
9385: PUSH
9386: LD_INT 2
9388: PUSH
9389: LD_INT 2
9391: PUSH
9392: EMPTY
9393: LIST
9394: LIST
9395: PUSH
9396: LD_INT 1
9398: PUSH
9399: LD_INT 2
9401: PUSH
9402: EMPTY
9403: LIST
9404: LIST
9405: PUSH
9406: LD_INT 2
9408: NEG
9409: PUSH
9410: LD_INT 1
9412: NEG
9413: PUSH
9414: EMPTY
9415: LIST
9416: LIST
9417: PUSH
9418: LD_INT 2
9420: NEG
9421: PUSH
9422: LD_INT 2
9424: NEG
9425: PUSH
9426: EMPTY
9427: LIST
9428: LIST
9429: PUSH
9430: LD_INT 2
9432: NEG
9433: PUSH
9434: LD_INT 3
9436: NEG
9437: PUSH
9438: EMPTY
9439: LIST
9440: LIST
9441: PUSH
9442: LD_INT 3
9444: NEG
9445: PUSH
9446: LD_INT 2
9448: NEG
9449: PUSH
9450: EMPTY
9451: LIST
9452: LIST
9453: PUSH
9454: LD_INT 3
9456: NEG
9457: PUSH
9458: LD_INT 3
9460: NEG
9461: PUSH
9462: EMPTY
9463: LIST
9464: LIST
9465: PUSH
9466: EMPTY
9467: LIST
9468: LIST
9469: LIST
9470: LIST
9471: LIST
9472: LIST
9473: LIST
9474: LIST
9475: LIST
9476: LIST
9477: LIST
9478: LIST
9479: LIST
9480: LIST
9481: LIST
9482: LIST
9483: ST_TO_ADDR
// DepotAm3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
9484: LD_ADDR_VAR 0 14
9488: PUSH
9489: LD_INT 0
9491: PUSH
9492: LD_INT 0
9494: PUSH
9495: EMPTY
9496: LIST
9497: LIST
9498: PUSH
9499: LD_INT 0
9501: PUSH
9502: LD_INT 1
9504: NEG
9505: PUSH
9506: EMPTY
9507: LIST
9508: LIST
9509: PUSH
9510: LD_INT 1
9512: PUSH
9513: LD_INT 0
9515: PUSH
9516: EMPTY
9517: LIST
9518: LIST
9519: PUSH
9520: LD_INT 1
9522: PUSH
9523: LD_INT 1
9525: PUSH
9526: EMPTY
9527: LIST
9528: LIST
9529: PUSH
9530: LD_INT 0
9532: PUSH
9533: LD_INT 1
9535: PUSH
9536: EMPTY
9537: LIST
9538: LIST
9539: PUSH
9540: LD_INT 1
9542: NEG
9543: PUSH
9544: LD_INT 0
9546: PUSH
9547: EMPTY
9548: LIST
9549: LIST
9550: PUSH
9551: LD_INT 1
9553: NEG
9554: PUSH
9555: LD_INT 1
9557: NEG
9558: PUSH
9559: EMPTY
9560: LIST
9561: LIST
9562: PUSH
9563: LD_INT 1
9565: NEG
9566: PUSH
9567: LD_INT 2
9569: NEG
9570: PUSH
9571: EMPTY
9572: LIST
9573: LIST
9574: PUSH
9575: LD_INT 0
9577: PUSH
9578: LD_INT 2
9580: NEG
9581: PUSH
9582: EMPTY
9583: LIST
9584: LIST
9585: PUSH
9586: LD_INT 1
9588: PUSH
9589: LD_INT 1
9591: NEG
9592: PUSH
9593: EMPTY
9594: LIST
9595: LIST
9596: PUSH
9597: LD_INT 1
9599: PUSH
9600: LD_INT 2
9602: PUSH
9603: EMPTY
9604: LIST
9605: LIST
9606: PUSH
9607: LD_INT 0
9609: PUSH
9610: LD_INT 2
9612: PUSH
9613: EMPTY
9614: LIST
9615: LIST
9616: PUSH
9617: LD_INT 1
9619: NEG
9620: PUSH
9621: LD_INT 1
9623: PUSH
9624: EMPTY
9625: LIST
9626: LIST
9627: PUSH
9628: LD_INT 1
9630: NEG
9631: PUSH
9632: LD_INT 3
9634: NEG
9635: PUSH
9636: EMPTY
9637: LIST
9638: LIST
9639: PUSH
9640: LD_INT 0
9642: PUSH
9643: LD_INT 3
9645: NEG
9646: PUSH
9647: EMPTY
9648: LIST
9649: LIST
9650: PUSH
9651: LD_INT 1
9653: PUSH
9654: LD_INT 2
9656: NEG
9657: PUSH
9658: EMPTY
9659: LIST
9660: LIST
9661: PUSH
9662: EMPTY
9663: LIST
9664: LIST
9665: LIST
9666: LIST
9667: LIST
9668: LIST
9669: LIST
9670: LIST
9671: LIST
9672: LIST
9673: LIST
9674: LIST
9675: LIST
9676: LIST
9677: LIST
9678: LIST
9679: ST_TO_ADDR
// DepotAm4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
9680: LD_ADDR_VAR 0 15
9684: PUSH
9685: LD_INT 0
9687: PUSH
9688: LD_INT 0
9690: PUSH
9691: EMPTY
9692: LIST
9693: LIST
9694: PUSH
9695: LD_INT 0
9697: PUSH
9698: LD_INT 1
9700: NEG
9701: PUSH
9702: EMPTY
9703: LIST
9704: LIST
9705: PUSH
9706: LD_INT 1
9708: PUSH
9709: LD_INT 0
9711: PUSH
9712: EMPTY
9713: LIST
9714: LIST
9715: PUSH
9716: LD_INT 1
9718: PUSH
9719: LD_INT 1
9721: PUSH
9722: EMPTY
9723: LIST
9724: LIST
9725: PUSH
9726: LD_INT 0
9728: PUSH
9729: LD_INT 1
9731: PUSH
9732: EMPTY
9733: LIST
9734: LIST
9735: PUSH
9736: LD_INT 1
9738: NEG
9739: PUSH
9740: LD_INT 0
9742: PUSH
9743: EMPTY
9744: LIST
9745: LIST
9746: PUSH
9747: LD_INT 1
9749: NEG
9750: PUSH
9751: LD_INT 1
9753: NEG
9754: PUSH
9755: EMPTY
9756: LIST
9757: LIST
9758: PUSH
9759: LD_INT 1
9761: PUSH
9762: LD_INT 1
9764: NEG
9765: PUSH
9766: EMPTY
9767: LIST
9768: LIST
9769: PUSH
9770: LD_INT 2
9772: PUSH
9773: LD_INT 0
9775: PUSH
9776: EMPTY
9777: LIST
9778: LIST
9779: PUSH
9780: LD_INT 2
9782: PUSH
9783: LD_INT 1
9785: PUSH
9786: EMPTY
9787: LIST
9788: LIST
9789: PUSH
9790: LD_INT 1
9792: NEG
9793: PUSH
9794: LD_INT 1
9796: PUSH
9797: EMPTY
9798: LIST
9799: LIST
9800: PUSH
9801: LD_INT 2
9803: NEG
9804: PUSH
9805: LD_INT 0
9807: PUSH
9808: EMPTY
9809: LIST
9810: LIST
9811: PUSH
9812: LD_INT 2
9814: NEG
9815: PUSH
9816: LD_INT 1
9818: NEG
9819: PUSH
9820: EMPTY
9821: LIST
9822: LIST
9823: PUSH
9824: LD_INT 2
9826: PUSH
9827: LD_INT 1
9829: NEG
9830: PUSH
9831: EMPTY
9832: LIST
9833: LIST
9834: PUSH
9835: LD_INT 3
9837: PUSH
9838: LD_INT 0
9840: PUSH
9841: EMPTY
9842: LIST
9843: LIST
9844: PUSH
9845: LD_INT 3
9847: PUSH
9848: LD_INT 1
9850: PUSH
9851: EMPTY
9852: LIST
9853: LIST
9854: PUSH
9855: EMPTY
9856: LIST
9857: LIST
9858: LIST
9859: LIST
9860: LIST
9861: LIST
9862: LIST
9863: LIST
9864: LIST
9865: LIST
9866: LIST
9867: LIST
9868: LIST
9869: LIST
9870: LIST
9871: LIST
9872: ST_TO_ADDR
// DepotAm5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
9873: LD_ADDR_VAR 0 16
9877: PUSH
9878: LD_INT 0
9880: PUSH
9881: LD_INT 0
9883: PUSH
9884: EMPTY
9885: LIST
9886: LIST
9887: PUSH
9888: LD_INT 0
9890: PUSH
9891: LD_INT 1
9893: NEG
9894: PUSH
9895: EMPTY
9896: LIST
9897: LIST
9898: PUSH
9899: LD_INT 1
9901: PUSH
9902: LD_INT 0
9904: PUSH
9905: EMPTY
9906: LIST
9907: LIST
9908: PUSH
9909: LD_INT 1
9911: PUSH
9912: LD_INT 1
9914: PUSH
9915: EMPTY
9916: LIST
9917: LIST
9918: PUSH
9919: LD_INT 0
9921: PUSH
9922: LD_INT 1
9924: PUSH
9925: EMPTY
9926: LIST
9927: LIST
9928: PUSH
9929: LD_INT 1
9931: NEG
9932: PUSH
9933: LD_INT 0
9935: PUSH
9936: EMPTY
9937: LIST
9938: LIST
9939: PUSH
9940: LD_INT 1
9942: NEG
9943: PUSH
9944: LD_INT 1
9946: NEG
9947: PUSH
9948: EMPTY
9949: LIST
9950: LIST
9951: PUSH
9952: LD_INT 1
9954: NEG
9955: PUSH
9956: LD_INT 2
9958: NEG
9959: PUSH
9960: EMPTY
9961: LIST
9962: LIST
9963: PUSH
9964: LD_INT 2
9966: PUSH
9967: LD_INT 1
9969: PUSH
9970: EMPTY
9971: LIST
9972: LIST
9973: PUSH
9974: LD_INT 2
9976: PUSH
9977: LD_INT 2
9979: PUSH
9980: EMPTY
9981: LIST
9982: LIST
9983: PUSH
9984: LD_INT 1
9986: PUSH
9987: LD_INT 2
9989: PUSH
9990: EMPTY
9991: LIST
9992: LIST
9993: PUSH
9994: LD_INT 2
9996: NEG
9997: PUSH
9998: LD_INT 1
10000: NEG
10001: PUSH
10002: EMPTY
10003: LIST
10004: LIST
10005: PUSH
10006: LD_INT 2
10008: NEG
10009: PUSH
10010: LD_INT 2
10012: NEG
10013: PUSH
10014: EMPTY
10015: LIST
10016: LIST
10017: PUSH
10018: LD_INT 3
10020: PUSH
10021: LD_INT 2
10023: PUSH
10024: EMPTY
10025: LIST
10026: LIST
10027: PUSH
10028: LD_INT 3
10030: PUSH
10031: LD_INT 3
10033: PUSH
10034: EMPTY
10035: LIST
10036: LIST
10037: PUSH
10038: LD_INT 2
10040: PUSH
10041: LD_INT 3
10043: PUSH
10044: EMPTY
10045: LIST
10046: LIST
10047: PUSH
10048: EMPTY
10049: LIST
10050: LIST
10051: LIST
10052: LIST
10053: LIST
10054: LIST
10055: LIST
10056: LIST
10057: LIST
10058: LIST
10059: LIST
10060: LIST
10061: LIST
10062: LIST
10063: LIST
10064: LIST
10065: ST_TO_ADDR
// DepotAr0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10066: LD_ADDR_VAR 0 17
10070: PUSH
10071: LD_INT 0
10073: PUSH
10074: LD_INT 0
10076: PUSH
10077: EMPTY
10078: LIST
10079: LIST
10080: PUSH
10081: LD_INT 0
10083: PUSH
10084: LD_INT 1
10086: NEG
10087: PUSH
10088: EMPTY
10089: LIST
10090: LIST
10091: PUSH
10092: LD_INT 1
10094: PUSH
10095: LD_INT 0
10097: PUSH
10098: EMPTY
10099: LIST
10100: LIST
10101: PUSH
10102: LD_INT 1
10104: PUSH
10105: LD_INT 1
10107: PUSH
10108: EMPTY
10109: LIST
10110: LIST
10111: PUSH
10112: LD_INT 0
10114: PUSH
10115: LD_INT 1
10117: PUSH
10118: EMPTY
10119: LIST
10120: LIST
10121: PUSH
10122: LD_INT 1
10124: NEG
10125: PUSH
10126: LD_INT 0
10128: PUSH
10129: EMPTY
10130: LIST
10131: LIST
10132: PUSH
10133: LD_INT 1
10135: NEG
10136: PUSH
10137: LD_INT 1
10139: NEG
10140: PUSH
10141: EMPTY
10142: LIST
10143: LIST
10144: PUSH
10145: LD_INT 1
10147: NEG
10148: PUSH
10149: LD_INT 2
10151: NEG
10152: PUSH
10153: EMPTY
10154: LIST
10155: LIST
10156: PUSH
10157: LD_INT 0
10159: PUSH
10160: LD_INT 2
10162: NEG
10163: PUSH
10164: EMPTY
10165: LIST
10166: LIST
10167: PUSH
10168: LD_INT 1
10170: PUSH
10171: LD_INT 1
10173: NEG
10174: PUSH
10175: EMPTY
10176: LIST
10177: LIST
10178: PUSH
10179: LD_INT 2
10181: PUSH
10182: LD_INT 0
10184: PUSH
10185: EMPTY
10186: LIST
10187: LIST
10188: PUSH
10189: LD_INT 2
10191: PUSH
10192: LD_INT 1
10194: PUSH
10195: EMPTY
10196: LIST
10197: LIST
10198: PUSH
10199: LD_INT 2
10201: PUSH
10202: LD_INT 2
10204: PUSH
10205: EMPTY
10206: LIST
10207: LIST
10208: PUSH
10209: LD_INT 1
10211: PUSH
10212: LD_INT 2
10214: PUSH
10215: EMPTY
10216: LIST
10217: LIST
10218: PUSH
10219: LD_INT 0
10221: PUSH
10222: LD_INT 2
10224: PUSH
10225: EMPTY
10226: LIST
10227: LIST
10228: PUSH
10229: LD_INT 1
10231: NEG
10232: PUSH
10233: LD_INT 1
10235: PUSH
10236: EMPTY
10237: LIST
10238: LIST
10239: PUSH
10240: LD_INT 2
10242: NEG
10243: PUSH
10244: LD_INT 0
10246: PUSH
10247: EMPTY
10248: LIST
10249: LIST
10250: PUSH
10251: LD_INT 2
10253: NEG
10254: PUSH
10255: LD_INT 1
10257: NEG
10258: PUSH
10259: EMPTY
10260: LIST
10261: LIST
10262: PUSH
10263: LD_INT 2
10265: NEG
10266: PUSH
10267: LD_INT 2
10269: NEG
10270: PUSH
10271: EMPTY
10272: LIST
10273: LIST
10274: PUSH
10275: EMPTY
10276: LIST
10277: LIST
10278: LIST
10279: LIST
10280: LIST
10281: LIST
10282: LIST
10283: LIST
10284: LIST
10285: LIST
10286: LIST
10287: LIST
10288: LIST
10289: LIST
10290: LIST
10291: LIST
10292: LIST
10293: LIST
10294: LIST
10295: ST_TO_ADDR
// DepotAr1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10296: LD_ADDR_VAR 0 18
10300: PUSH
10301: LD_INT 0
10303: PUSH
10304: LD_INT 0
10306: PUSH
10307: EMPTY
10308: LIST
10309: LIST
10310: PUSH
10311: LD_INT 0
10313: PUSH
10314: LD_INT 1
10316: NEG
10317: PUSH
10318: EMPTY
10319: LIST
10320: LIST
10321: PUSH
10322: LD_INT 1
10324: PUSH
10325: LD_INT 0
10327: PUSH
10328: EMPTY
10329: LIST
10330: LIST
10331: PUSH
10332: LD_INT 1
10334: PUSH
10335: LD_INT 1
10337: PUSH
10338: EMPTY
10339: LIST
10340: LIST
10341: PUSH
10342: LD_INT 0
10344: PUSH
10345: LD_INT 1
10347: PUSH
10348: EMPTY
10349: LIST
10350: LIST
10351: PUSH
10352: LD_INT 1
10354: NEG
10355: PUSH
10356: LD_INT 0
10358: PUSH
10359: EMPTY
10360: LIST
10361: LIST
10362: PUSH
10363: LD_INT 1
10365: NEG
10366: PUSH
10367: LD_INT 1
10369: NEG
10370: PUSH
10371: EMPTY
10372: LIST
10373: LIST
10374: PUSH
10375: LD_INT 1
10377: NEG
10378: PUSH
10379: LD_INT 2
10381: NEG
10382: PUSH
10383: EMPTY
10384: LIST
10385: LIST
10386: PUSH
10387: LD_INT 0
10389: PUSH
10390: LD_INT 2
10392: NEG
10393: PUSH
10394: EMPTY
10395: LIST
10396: LIST
10397: PUSH
10398: LD_INT 1
10400: PUSH
10401: LD_INT 1
10403: NEG
10404: PUSH
10405: EMPTY
10406: LIST
10407: LIST
10408: PUSH
10409: LD_INT 2
10411: PUSH
10412: LD_INT 0
10414: PUSH
10415: EMPTY
10416: LIST
10417: LIST
10418: PUSH
10419: LD_INT 2
10421: PUSH
10422: LD_INT 1
10424: PUSH
10425: EMPTY
10426: LIST
10427: LIST
10428: PUSH
10429: LD_INT 2
10431: PUSH
10432: LD_INT 2
10434: PUSH
10435: EMPTY
10436: LIST
10437: LIST
10438: PUSH
10439: LD_INT 1
10441: PUSH
10442: LD_INT 2
10444: PUSH
10445: EMPTY
10446: LIST
10447: LIST
10448: PUSH
10449: LD_INT 0
10451: PUSH
10452: LD_INT 2
10454: PUSH
10455: EMPTY
10456: LIST
10457: LIST
10458: PUSH
10459: LD_INT 1
10461: NEG
10462: PUSH
10463: LD_INT 1
10465: PUSH
10466: EMPTY
10467: LIST
10468: LIST
10469: PUSH
10470: LD_INT 2
10472: NEG
10473: PUSH
10474: LD_INT 0
10476: PUSH
10477: EMPTY
10478: LIST
10479: LIST
10480: PUSH
10481: LD_INT 2
10483: NEG
10484: PUSH
10485: LD_INT 1
10487: NEG
10488: PUSH
10489: EMPTY
10490: LIST
10491: LIST
10492: PUSH
10493: LD_INT 2
10495: NEG
10496: PUSH
10497: LD_INT 2
10499: NEG
10500: PUSH
10501: EMPTY
10502: LIST
10503: LIST
10504: PUSH
10505: EMPTY
10506: LIST
10507: LIST
10508: LIST
10509: LIST
10510: LIST
10511: LIST
10512: LIST
10513: LIST
10514: LIST
10515: LIST
10516: LIST
10517: LIST
10518: LIST
10519: LIST
10520: LIST
10521: LIST
10522: LIST
10523: LIST
10524: LIST
10525: ST_TO_ADDR
// DepotAr2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10526: LD_ADDR_VAR 0 19
10530: PUSH
10531: LD_INT 0
10533: PUSH
10534: LD_INT 0
10536: PUSH
10537: EMPTY
10538: LIST
10539: LIST
10540: PUSH
10541: LD_INT 0
10543: PUSH
10544: LD_INT 1
10546: NEG
10547: PUSH
10548: EMPTY
10549: LIST
10550: LIST
10551: PUSH
10552: LD_INT 1
10554: PUSH
10555: LD_INT 0
10557: PUSH
10558: EMPTY
10559: LIST
10560: LIST
10561: PUSH
10562: LD_INT 1
10564: PUSH
10565: LD_INT 1
10567: PUSH
10568: EMPTY
10569: LIST
10570: LIST
10571: PUSH
10572: LD_INT 0
10574: PUSH
10575: LD_INT 1
10577: PUSH
10578: EMPTY
10579: LIST
10580: LIST
10581: PUSH
10582: LD_INT 1
10584: NEG
10585: PUSH
10586: LD_INT 0
10588: PUSH
10589: EMPTY
10590: LIST
10591: LIST
10592: PUSH
10593: LD_INT 1
10595: NEG
10596: PUSH
10597: LD_INT 1
10599: NEG
10600: PUSH
10601: EMPTY
10602: LIST
10603: LIST
10604: PUSH
10605: LD_INT 1
10607: NEG
10608: PUSH
10609: LD_INT 2
10611: NEG
10612: PUSH
10613: EMPTY
10614: LIST
10615: LIST
10616: PUSH
10617: LD_INT 0
10619: PUSH
10620: LD_INT 2
10622: NEG
10623: PUSH
10624: EMPTY
10625: LIST
10626: LIST
10627: PUSH
10628: LD_INT 1
10630: PUSH
10631: LD_INT 1
10633: NEG
10634: PUSH
10635: EMPTY
10636: LIST
10637: LIST
10638: PUSH
10639: LD_INT 2
10641: PUSH
10642: LD_INT 0
10644: PUSH
10645: EMPTY
10646: LIST
10647: LIST
10648: PUSH
10649: LD_INT 2
10651: PUSH
10652: LD_INT 1
10654: PUSH
10655: EMPTY
10656: LIST
10657: LIST
10658: PUSH
10659: LD_INT 2
10661: PUSH
10662: LD_INT 2
10664: PUSH
10665: EMPTY
10666: LIST
10667: LIST
10668: PUSH
10669: LD_INT 1
10671: PUSH
10672: LD_INT 2
10674: PUSH
10675: EMPTY
10676: LIST
10677: LIST
10678: PUSH
10679: LD_INT 0
10681: PUSH
10682: LD_INT 2
10684: PUSH
10685: EMPTY
10686: LIST
10687: LIST
10688: PUSH
10689: LD_INT 1
10691: NEG
10692: PUSH
10693: LD_INT 1
10695: PUSH
10696: EMPTY
10697: LIST
10698: LIST
10699: PUSH
10700: LD_INT 2
10702: NEG
10703: PUSH
10704: LD_INT 0
10706: PUSH
10707: EMPTY
10708: LIST
10709: LIST
10710: PUSH
10711: LD_INT 2
10713: NEG
10714: PUSH
10715: LD_INT 1
10717: NEG
10718: PUSH
10719: EMPTY
10720: LIST
10721: LIST
10722: PUSH
10723: LD_INT 2
10725: NEG
10726: PUSH
10727: LD_INT 2
10729: NEG
10730: PUSH
10731: EMPTY
10732: LIST
10733: LIST
10734: PUSH
10735: EMPTY
10736: LIST
10737: LIST
10738: LIST
10739: LIST
10740: LIST
10741: LIST
10742: LIST
10743: LIST
10744: LIST
10745: LIST
10746: LIST
10747: LIST
10748: LIST
10749: LIST
10750: LIST
10751: LIST
10752: LIST
10753: LIST
10754: LIST
10755: ST_TO_ADDR
// DepotAr3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10756: LD_ADDR_VAR 0 20
10760: PUSH
10761: LD_INT 0
10763: PUSH
10764: LD_INT 0
10766: PUSH
10767: EMPTY
10768: LIST
10769: LIST
10770: PUSH
10771: LD_INT 0
10773: PUSH
10774: LD_INT 1
10776: NEG
10777: PUSH
10778: EMPTY
10779: LIST
10780: LIST
10781: PUSH
10782: LD_INT 1
10784: PUSH
10785: LD_INT 0
10787: PUSH
10788: EMPTY
10789: LIST
10790: LIST
10791: PUSH
10792: LD_INT 1
10794: PUSH
10795: LD_INT 1
10797: PUSH
10798: EMPTY
10799: LIST
10800: LIST
10801: PUSH
10802: LD_INT 0
10804: PUSH
10805: LD_INT 1
10807: PUSH
10808: EMPTY
10809: LIST
10810: LIST
10811: PUSH
10812: LD_INT 1
10814: NEG
10815: PUSH
10816: LD_INT 0
10818: PUSH
10819: EMPTY
10820: LIST
10821: LIST
10822: PUSH
10823: LD_INT 1
10825: NEG
10826: PUSH
10827: LD_INT 1
10829: NEG
10830: PUSH
10831: EMPTY
10832: LIST
10833: LIST
10834: PUSH
10835: LD_INT 1
10837: NEG
10838: PUSH
10839: LD_INT 2
10841: NEG
10842: PUSH
10843: EMPTY
10844: LIST
10845: LIST
10846: PUSH
10847: LD_INT 0
10849: PUSH
10850: LD_INT 2
10852: NEG
10853: PUSH
10854: EMPTY
10855: LIST
10856: LIST
10857: PUSH
10858: LD_INT 1
10860: PUSH
10861: LD_INT 1
10863: NEG
10864: PUSH
10865: EMPTY
10866: LIST
10867: LIST
10868: PUSH
10869: LD_INT 2
10871: PUSH
10872: LD_INT 0
10874: PUSH
10875: EMPTY
10876: LIST
10877: LIST
10878: PUSH
10879: LD_INT 2
10881: PUSH
10882: LD_INT 1
10884: PUSH
10885: EMPTY
10886: LIST
10887: LIST
10888: PUSH
10889: LD_INT 2
10891: PUSH
10892: LD_INT 2
10894: PUSH
10895: EMPTY
10896: LIST
10897: LIST
10898: PUSH
10899: LD_INT 1
10901: PUSH
10902: LD_INT 2
10904: PUSH
10905: EMPTY
10906: LIST
10907: LIST
10908: PUSH
10909: LD_INT 0
10911: PUSH
10912: LD_INT 2
10914: PUSH
10915: EMPTY
10916: LIST
10917: LIST
10918: PUSH
10919: LD_INT 1
10921: NEG
10922: PUSH
10923: LD_INT 1
10925: PUSH
10926: EMPTY
10927: LIST
10928: LIST
10929: PUSH
10930: LD_INT 2
10932: NEG
10933: PUSH
10934: LD_INT 0
10936: PUSH
10937: EMPTY
10938: LIST
10939: LIST
10940: PUSH
10941: LD_INT 2
10943: NEG
10944: PUSH
10945: LD_INT 1
10947: NEG
10948: PUSH
10949: EMPTY
10950: LIST
10951: LIST
10952: PUSH
10953: LD_INT 2
10955: NEG
10956: PUSH
10957: LD_INT 2
10959: NEG
10960: PUSH
10961: EMPTY
10962: LIST
10963: LIST
10964: PUSH
10965: EMPTY
10966: LIST
10967: LIST
10968: LIST
10969: LIST
10970: LIST
10971: LIST
10972: LIST
10973: LIST
10974: LIST
10975: LIST
10976: LIST
10977: LIST
10978: LIST
10979: LIST
10980: LIST
10981: LIST
10982: LIST
10983: LIST
10984: LIST
10985: ST_TO_ADDR
// DepotAr4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
10986: LD_ADDR_VAR 0 21
10990: PUSH
10991: LD_INT 0
10993: PUSH
10994: LD_INT 0
10996: PUSH
10997: EMPTY
10998: LIST
10999: LIST
11000: PUSH
11001: LD_INT 0
11003: PUSH
11004: LD_INT 1
11006: NEG
11007: PUSH
11008: EMPTY
11009: LIST
11010: LIST
11011: PUSH
11012: LD_INT 1
11014: PUSH
11015: LD_INT 0
11017: PUSH
11018: EMPTY
11019: LIST
11020: LIST
11021: PUSH
11022: LD_INT 1
11024: PUSH
11025: LD_INT 1
11027: PUSH
11028: EMPTY
11029: LIST
11030: LIST
11031: PUSH
11032: LD_INT 0
11034: PUSH
11035: LD_INT 1
11037: PUSH
11038: EMPTY
11039: LIST
11040: LIST
11041: PUSH
11042: LD_INT 1
11044: NEG
11045: PUSH
11046: LD_INT 0
11048: PUSH
11049: EMPTY
11050: LIST
11051: LIST
11052: PUSH
11053: LD_INT 1
11055: NEG
11056: PUSH
11057: LD_INT 1
11059: NEG
11060: PUSH
11061: EMPTY
11062: LIST
11063: LIST
11064: PUSH
11065: LD_INT 1
11067: NEG
11068: PUSH
11069: LD_INT 2
11071: NEG
11072: PUSH
11073: EMPTY
11074: LIST
11075: LIST
11076: PUSH
11077: LD_INT 0
11079: PUSH
11080: LD_INT 2
11082: NEG
11083: PUSH
11084: EMPTY
11085: LIST
11086: LIST
11087: PUSH
11088: LD_INT 1
11090: PUSH
11091: LD_INT 1
11093: NEG
11094: PUSH
11095: EMPTY
11096: LIST
11097: LIST
11098: PUSH
11099: LD_INT 2
11101: PUSH
11102: LD_INT 0
11104: PUSH
11105: EMPTY
11106: LIST
11107: LIST
11108: PUSH
11109: LD_INT 2
11111: PUSH
11112: LD_INT 1
11114: PUSH
11115: EMPTY
11116: LIST
11117: LIST
11118: PUSH
11119: LD_INT 2
11121: PUSH
11122: LD_INT 2
11124: PUSH
11125: EMPTY
11126: LIST
11127: LIST
11128: PUSH
11129: LD_INT 1
11131: PUSH
11132: LD_INT 2
11134: PUSH
11135: EMPTY
11136: LIST
11137: LIST
11138: PUSH
11139: LD_INT 0
11141: PUSH
11142: LD_INT 2
11144: PUSH
11145: EMPTY
11146: LIST
11147: LIST
11148: PUSH
11149: LD_INT 1
11151: NEG
11152: PUSH
11153: LD_INT 1
11155: PUSH
11156: EMPTY
11157: LIST
11158: LIST
11159: PUSH
11160: LD_INT 2
11162: NEG
11163: PUSH
11164: LD_INT 0
11166: PUSH
11167: EMPTY
11168: LIST
11169: LIST
11170: PUSH
11171: LD_INT 2
11173: NEG
11174: PUSH
11175: LD_INT 1
11177: NEG
11178: PUSH
11179: EMPTY
11180: LIST
11181: LIST
11182: PUSH
11183: LD_INT 2
11185: NEG
11186: PUSH
11187: LD_INT 2
11189: NEG
11190: PUSH
11191: EMPTY
11192: LIST
11193: LIST
11194: PUSH
11195: EMPTY
11196: LIST
11197: LIST
11198: LIST
11199: LIST
11200: LIST
11201: LIST
11202: LIST
11203: LIST
11204: LIST
11205: LIST
11206: LIST
11207: LIST
11208: LIST
11209: LIST
11210: LIST
11211: LIST
11212: LIST
11213: LIST
11214: LIST
11215: ST_TO_ADDR
// DepotAr5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
11216: LD_ADDR_VAR 0 22
11220: PUSH
11221: LD_INT 0
11223: PUSH
11224: LD_INT 0
11226: PUSH
11227: EMPTY
11228: LIST
11229: LIST
11230: PUSH
11231: LD_INT 0
11233: PUSH
11234: LD_INT 1
11236: NEG
11237: PUSH
11238: EMPTY
11239: LIST
11240: LIST
11241: PUSH
11242: LD_INT 1
11244: PUSH
11245: LD_INT 0
11247: PUSH
11248: EMPTY
11249: LIST
11250: LIST
11251: PUSH
11252: LD_INT 1
11254: PUSH
11255: LD_INT 1
11257: PUSH
11258: EMPTY
11259: LIST
11260: LIST
11261: PUSH
11262: LD_INT 0
11264: PUSH
11265: LD_INT 1
11267: PUSH
11268: EMPTY
11269: LIST
11270: LIST
11271: PUSH
11272: LD_INT 1
11274: NEG
11275: PUSH
11276: LD_INT 0
11278: PUSH
11279: EMPTY
11280: LIST
11281: LIST
11282: PUSH
11283: LD_INT 1
11285: NEG
11286: PUSH
11287: LD_INT 1
11289: NEG
11290: PUSH
11291: EMPTY
11292: LIST
11293: LIST
11294: PUSH
11295: LD_INT 1
11297: NEG
11298: PUSH
11299: LD_INT 2
11301: NEG
11302: PUSH
11303: EMPTY
11304: LIST
11305: LIST
11306: PUSH
11307: LD_INT 0
11309: PUSH
11310: LD_INT 2
11312: NEG
11313: PUSH
11314: EMPTY
11315: LIST
11316: LIST
11317: PUSH
11318: LD_INT 1
11320: PUSH
11321: LD_INT 1
11323: NEG
11324: PUSH
11325: EMPTY
11326: LIST
11327: LIST
11328: PUSH
11329: LD_INT 2
11331: PUSH
11332: LD_INT 0
11334: PUSH
11335: EMPTY
11336: LIST
11337: LIST
11338: PUSH
11339: LD_INT 2
11341: PUSH
11342: LD_INT 1
11344: PUSH
11345: EMPTY
11346: LIST
11347: LIST
11348: PUSH
11349: LD_INT 2
11351: PUSH
11352: LD_INT 2
11354: PUSH
11355: EMPTY
11356: LIST
11357: LIST
11358: PUSH
11359: LD_INT 1
11361: PUSH
11362: LD_INT 2
11364: PUSH
11365: EMPTY
11366: LIST
11367: LIST
11368: PUSH
11369: LD_INT 0
11371: PUSH
11372: LD_INT 2
11374: PUSH
11375: EMPTY
11376: LIST
11377: LIST
11378: PUSH
11379: LD_INT 1
11381: NEG
11382: PUSH
11383: LD_INT 1
11385: PUSH
11386: EMPTY
11387: LIST
11388: LIST
11389: PUSH
11390: LD_INT 2
11392: NEG
11393: PUSH
11394: LD_INT 0
11396: PUSH
11397: EMPTY
11398: LIST
11399: LIST
11400: PUSH
11401: LD_INT 2
11403: NEG
11404: PUSH
11405: LD_INT 1
11407: NEG
11408: PUSH
11409: EMPTY
11410: LIST
11411: LIST
11412: PUSH
11413: LD_INT 2
11415: NEG
11416: PUSH
11417: LD_INT 2
11419: NEG
11420: PUSH
11421: EMPTY
11422: LIST
11423: LIST
11424: PUSH
11425: EMPTY
11426: LIST
11427: LIST
11428: LIST
11429: LIST
11430: LIST
11431: LIST
11432: LIST
11433: LIST
11434: LIST
11435: LIST
11436: LIST
11437: LIST
11438: LIST
11439: LIST
11440: LIST
11441: LIST
11442: LIST
11443: LIST
11444: LIST
11445: ST_TO_ADDR
// DepotRu0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
11446: LD_ADDR_VAR 0 23
11450: PUSH
11451: LD_INT 0
11453: PUSH
11454: LD_INT 0
11456: PUSH
11457: EMPTY
11458: LIST
11459: LIST
11460: PUSH
11461: LD_INT 0
11463: PUSH
11464: LD_INT 1
11466: NEG
11467: PUSH
11468: EMPTY
11469: LIST
11470: LIST
11471: PUSH
11472: LD_INT 1
11474: PUSH
11475: LD_INT 0
11477: PUSH
11478: EMPTY
11479: LIST
11480: LIST
11481: PUSH
11482: LD_INT 1
11484: PUSH
11485: LD_INT 1
11487: PUSH
11488: EMPTY
11489: LIST
11490: LIST
11491: PUSH
11492: LD_INT 0
11494: PUSH
11495: LD_INT 1
11497: PUSH
11498: EMPTY
11499: LIST
11500: LIST
11501: PUSH
11502: LD_INT 1
11504: NEG
11505: PUSH
11506: LD_INT 0
11508: PUSH
11509: EMPTY
11510: LIST
11511: LIST
11512: PUSH
11513: LD_INT 1
11515: NEG
11516: PUSH
11517: LD_INT 1
11519: NEG
11520: PUSH
11521: EMPTY
11522: LIST
11523: LIST
11524: PUSH
11525: LD_INT 1
11527: NEG
11528: PUSH
11529: LD_INT 2
11531: NEG
11532: PUSH
11533: EMPTY
11534: LIST
11535: LIST
11536: PUSH
11537: LD_INT 0
11539: PUSH
11540: LD_INT 2
11542: NEG
11543: PUSH
11544: EMPTY
11545: LIST
11546: LIST
11547: PUSH
11548: LD_INT 1
11550: PUSH
11551: LD_INT 1
11553: NEG
11554: PUSH
11555: EMPTY
11556: LIST
11557: LIST
11558: PUSH
11559: LD_INT 2
11561: PUSH
11562: LD_INT 0
11564: PUSH
11565: EMPTY
11566: LIST
11567: LIST
11568: PUSH
11569: LD_INT 2
11571: PUSH
11572: LD_INT 1
11574: PUSH
11575: EMPTY
11576: LIST
11577: LIST
11578: PUSH
11579: LD_INT 2
11581: PUSH
11582: LD_INT 2
11584: PUSH
11585: EMPTY
11586: LIST
11587: LIST
11588: PUSH
11589: LD_INT 1
11591: PUSH
11592: LD_INT 2
11594: PUSH
11595: EMPTY
11596: LIST
11597: LIST
11598: PUSH
11599: LD_INT 0
11601: PUSH
11602: LD_INT 2
11604: PUSH
11605: EMPTY
11606: LIST
11607: LIST
11608: PUSH
11609: LD_INT 1
11611: NEG
11612: PUSH
11613: LD_INT 1
11615: PUSH
11616: EMPTY
11617: LIST
11618: LIST
11619: PUSH
11620: LD_INT 2
11622: NEG
11623: PUSH
11624: LD_INT 0
11626: PUSH
11627: EMPTY
11628: LIST
11629: LIST
11630: PUSH
11631: LD_INT 2
11633: NEG
11634: PUSH
11635: LD_INT 1
11637: NEG
11638: PUSH
11639: EMPTY
11640: LIST
11641: LIST
11642: PUSH
11643: LD_INT 2
11645: NEG
11646: PUSH
11647: LD_INT 2
11649: NEG
11650: PUSH
11651: EMPTY
11652: LIST
11653: LIST
11654: PUSH
11655: LD_INT 2
11657: NEG
11658: PUSH
11659: LD_INT 3
11661: NEG
11662: PUSH
11663: EMPTY
11664: LIST
11665: LIST
11666: PUSH
11667: LD_INT 1
11669: NEG
11670: PUSH
11671: LD_INT 3
11673: NEG
11674: PUSH
11675: EMPTY
11676: LIST
11677: LIST
11678: PUSH
11679: LD_INT 1
11681: PUSH
11682: LD_INT 2
11684: NEG
11685: PUSH
11686: EMPTY
11687: LIST
11688: LIST
11689: PUSH
11690: LD_INT 2
11692: PUSH
11693: LD_INT 1
11695: NEG
11696: PUSH
11697: EMPTY
11698: LIST
11699: LIST
11700: PUSH
11701: EMPTY
11702: LIST
11703: LIST
11704: LIST
11705: LIST
11706: LIST
11707: LIST
11708: LIST
11709: LIST
11710: LIST
11711: LIST
11712: LIST
11713: LIST
11714: LIST
11715: LIST
11716: LIST
11717: LIST
11718: LIST
11719: LIST
11720: LIST
11721: LIST
11722: LIST
11723: LIST
11724: LIST
11725: ST_TO_ADDR
// DepotRu1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 3 , 2 ] ] ;
11726: LD_ADDR_VAR 0 24
11730: PUSH
11731: LD_INT 0
11733: PUSH
11734: LD_INT 0
11736: PUSH
11737: EMPTY
11738: LIST
11739: LIST
11740: PUSH
11741: LD_INT 0
11743: PUSH
11744: LD_INT 1
11746: NEG
11747: PUSH
11748: EMPTY
11749: LIST
11750: LIST
11751: PUSH
11752: LD_INT 1
11754: PUSH
11755: LD_INT 0
11757: PUSH
11758: EMPTY
11759: LIST
11760: LIST
11761: PUSH
11762: LD_INT 1
11764: PUSH
11765: LD_INT 1
11767: PUSH
11768: EMPTY
11769: LIST
11770: LIST
11771: PUSH
11772: LD_INT 0
11774: PUSH
11775: LD_INT 1
11777: PUSH
11778: EMPTY
11779: LIST
11780: LIST
11781: PUSH
11782: LD_INT 1
11784: NEG
11785: PUSH
11786: LD_INT 0
11788: PUSH
11789: EMPTY
11790: LIST
11791: LIST
11792: PUSH
11793: LD_INT 1
11795: NEG
11796: PUSH
11797: LD_INT 1
11799: NEG
11800: PUSH
11801: EMPTY
11802: LIST
11803: LIST
11804: PUSH
11805: LD_INT 1
11807: NEG
11808: PUSH
11809: LD_INT 2
11811: NEG
11812: PUSH
11813: EMPTY
11814: LIST
11815: LIST
11816: PUSH
11817: LD_INT 0
11819: PUSH
11820: LD_INT 2
11822: NEG
11823: PUSH
11824: EMPTY
11825: LIST
11826: LIST
11827: PUSH
11828: LD_INT 1
11830: PUSH
11831: LD_INT 1
11833: NEG
11834: PUSH
11835: EMPTY
11836: LIST
11837: LIST
11838: PUSH
11839: LD_INT 2
11841: PUSH
11842: LD_INT 0
11844: PUSH
11845: EMPTY
11846: LIST
11847: LIST
11848: PUSH
11849: LD_INT 2
11851: PUSH
11852: LD_INT 1
11854: PUSH
11855: EMPTY
11856: LIST
11857: LIST
11858: PUSH
11859: LD_INT 2
11861: PUSH
11862: LD_INT 2
11864: PUSH
11865: EMPTY
11866: LIST
11867: LIST
11868: PUSH
11869: LD_INT 1
11871: PUSH
11872: LD_INT 2
11874: PUSH
11875: EMPTY
11876: LIST
11877: LIST
11878: PUSH
11879: LD_INT 0
11881: PUSH
11882: LD_INT 2
11884: PUSH
11885: EMPTY
11886: LIST
11887: LIST
11888: PUSH
11889: LD_INT 1
11891: NEG
11892: PUSH
11893: LD_INT 1
11895: PUSH
11896: EMPTY
11897: LIST
11898: LIST
11899: PUSH
11900: LD_INT 2
11902: NEG
11903: PUSH
11904: LD_INT 0
11906: PUSH
11907: EMPTY
11908: LIST
11909: LIST
11910: PUSH
11911: LD_INT 2
11913: NEG
11914: PUSH
11915: LD_INT 1
11917: NEG
11918: PUSH
11919: EMPTY
11920: LIST
11921: LIST
11922: PUSH
11923: LD_INT 2
11925: NEG
11926: PUSH
11927: LD_INT 2
11929: NEG
11930: PUSH
11931: EMPTY
11932: LIST
11933: LIST
11934: PUSH
11935: LD_INT 1
11937: PUSH
11938: LD_INT 2
11940: NEG
11941: PUSH
11942: EMPTY
11943: LIST
11944: LIST
11945: PUSH
11946: LD_INT 2
11948: PUSH
11949: LD_INT 1
11951: NEG
11952: PUSH
11953: EMPTY
11954: LIST
11955: LIST
11956: PUSH
11957: LD_INT 3
11959: PUSH
11960: LD_INT 1
11962: PUSH
11963: EMPTY
11964: LIST
11965: LIST
11966: PUSH
11967: LD_INT 3
11969: PUSH
11970: LD_INT 2
11972: PUSH
11973: EMPTY
11974: LIST
11975: LIST
11976: PUSH
11977: EMPTY
11978: LIST
11979: LIST
11980: LIST
11981: LIST
11982: LIST
11983: LIST
11984: LIST
11985: LIST
11986: LIST
11987: LIST
11988: LIST
11989: LIST
11990: LIST
11991: LIST
11992: LIST
11993: LIST
11994: LIST
11995: LIST
11996: LIST
11997: LIST
11998: LIST
11999: LIST
12000: LIST
12001: ST_TO_ADDR
// DepotRu2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ 1 , 3 ] ] ;
12002: LD_ADDR_VAR 0 25
12006: PUSH
12007: LD_INT 0
12009: PUSH
12010: LD_INT 0
12012: PUSH
12013: EMPTY
12014: LIST
12015: LIST
12016: PUSH
12017: LD_INT 0
12019: PUSH
12020: LD_INT 1
12022: NEG
12023: PUSH
12024: EMPTY
12025: LIST
12026: LIST
12027: PUSH
12028: LD_INT 1
12030: PUSH
12031: LD_INT 0
12033: PUSH
12034: EMPTY
12035: LIST
12036: LIST
12037: PUSH
12038: LD_INT 1
12040: PUSH
12041: LD_INT 1
12043: PUSH
12044: EMPTY
12045: LIST
12046: LIST
12047: PUSH
12048: LD_INT 0
12050: PUSH
12051: LD_INT 1
12053: PUSH
12054: EMPTY
12055: LIST
12056: LIST
12057: PUSH
12058: LD_INT 1
12060: NEG
12061: PUSH
12062: LD_INT 0
12064: PUSH
12065: EMPTY
12066: LIST
12067: LIST
12068: PUSH
12069: LD_INT 1
12071: NEG
12072: PUSH
12073: LD_INT 1
12075: NEG
12076: PUSH
12077: EMPTY
12078: LIST
12079: LIST
12080: PUSH
12081: LD_INT 1
12083: NEG
12084: PUSH
12085: LD_INT 2
12087: NEG
12088: PUSH
12089: EMPTY
12090: LIST
12091: LIST
12092: PUSH
12093: LD_INT 0
12095: PUSH
12096: LD_INT 2
12098: NEG
12099: PUSH
12100: EMPTY
12101: LIST
12102: LIST
12103: PUSH
12104: LD_INT 1
12106: PUSH
12107: LD_INT 1
12109: NEG
12110: PUSH
12111: EMPTY
12112: LIST
12113: LIST
12114: PUSH
12115: LD_INT 2
12117: PUSH
12118: LD_INT 0
12120: PUSH
12121: EMPTY
12122: LIST
12123: LIST
12124: PUSH
12125: LD_INT 2
12127: PUSH
12128: LD_INT 1
12130: PUSH
12131: EMPTY
12132: LIST
12133: LIST
12134: PUSH
12135: LD_INT 2
12137: PUSH
12138: LD_INT 2
12140: PUSH
12141: EMPTY
12142: LIST
12143: LIST
12144: PUSH
12145: LD_INT 1
12147: PUSH
12148: LD_INT 2
12150: PUSH
12151: EMPTY
12152: LIST
12153: LIST
12154: PUSH
12155: LD_INT 0
12157: PUSH
12158: LD_INT 2
12160: PUSH
12161: EMPTY
12162: LIST
12163: LIST
12164: PUSH
12165: LD_INT 1
12167: NEG
12168: PUSH
12169: LD_INT 1
12171: PUSH
12172: EMPTY
12173: LIST
12174: LIST
12175: PUSH
12176: LD_INT 2
12178: NEG
12179: PUSH
12180: LD_INT 0
12182: PUSH
12183: EMPTY
12184: LIST
12185: LIST
12186: PUSH
12187: LD_INT 2
12189: NEG
12190: PUSH
12191: LD_INT 1
12193: NEG
12194: PUSH
12195: EMPTY
12196: LIST
12197: LIST
12198: PUSH
12199: LD_INT 2
12201: NEG
12202: PUSH
12203: LD_INT 2
12205: NEG
12206: PUSH
12207: EMPTY
12208: LIST
12209: LIST
12210: PUSH
12211: LD_INT 3
12213: PUSH
12214: LD_INT 1
12216: PUSH
12217: EMPTY
12218: LIST
12219: LIST
12220: PUSH
12221: LD_INT 3
12223: PUSH
12224: LD_INT 2
12226: PUSH
12227: EMPTY
12228: LIST
12229: LIST
12230: PUSH
12231: LD_INT 2
12233: PUSH
12234: LD_INT 3
12236: PUSH
12237: EMPTY
12238: LIST
12239: LIST
12240: PUSH
12241: LD_INT 1
12243: PUSH
12244: LD_INT 3
12246: PUSH
12247: EMPTY
12248: LIST
12249: LIST
12250: PUSH
12251: EMPTY
12252: LIST
12253: LIST
12254: LIST
12255: LIST
12256: LIST
12257: LIST
12258: LIST
12259: LIST
12260: LIST
12261: LIST
12262: LIST
12263: LIST
12264: LIST
12265: LIST
12266: LIST
12267: LIST
12268: LIST
12269: LIST
12270: LIST
12271: LIST
12272: LIST
12273: LIST
12274: LIST
12275: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
12276: LD_ADDR_VAR 0 26
12280: PUSH
12281: LD_INT 0
12283: PUSH
12284: LD_INT 0
12286: PUSH
12287: EMPTY
12288: LIST
12289: LIST
12290: PUSH
12291: LD_INT 0
12293: PUSH
12294: LD_INT 1
12296: NEG
12297: PUSH
12298: EMPTY
12299: LIST
12300: LIST
12301: PUSH
12302: LD_INT 1
12304: PUSH
12305: LD_INT 0
12307: PUSH
12308: EMPTY
12309: LIST
12310: LIST
12311: PUSH
12312: LD_INT 1
12314: PUSH
12315: LD_INT 1
12317: PUSH
12318: EMPTY
12319: LIST
12320: LIST
12321: PUSH
12322: LD_INT 0
12324: PUSH
12325: LD_INT 1
12327: PUSH
12328: EMPTY
12329: LIST
12330: LIST
12331: PUSH
12332: LD_INT 1
12334: NEG
12335: PUSH
12336: LD_INT 0
12338: PUSH
12339: EMPTY
12340: LIST
12341: LIST
12342: PUSH
12343: LD_INT 1
12345: NEG
12346: PUSH
12347: LD_INT 1
12349: NEG
12350: PUSH
12351: EMPTY
12352: LIST
12353: LIST
12354: PUSH
12355: LD_INT 1
12357: NEG
12358: PUSH
12359: LD_INT 2
12361: NEG
12362: PUSH
12363: EMPTY
12364: LIST
12365: LIST
12366: PUSH
12367: LD_INT 0
12369: PUSH
12370: LD_INT 2
12372: NEG
12373: PUSH
12374: EMPTY
12375: LIST
12376: LIST
12377: PUSH
12378: LD_INT 1
12380: PUSH
12381: LD_INT 1
12383: NEG
12384: PUSH
12385: EMPTY
12386: LIST
12387: LIST
12388: PUSH
12389: LD_INT 2
12391: PUSH
12392: LD_INT 0
12394: PUSH
12395: EMPTY
12396: LIST
12397: LIST
12398: PUSH
12399: LD_INT 2
12401: PUSH
12402: LD_INT 1
12404: PUSH
12405: EMPTY
12406: LIST
12407: LIST
12408: PUSH
12409: LD_INT 2
12411: PUSH
12412: LD_INT 2
12414: PUSH
12415: EMPTY
12416: LIST
12417: LIST
12418: PUSH
12419: LD_INT 1
12421: PUSH
12422: LD_INT 2
12424: PUSH
12425: EMPTY
12426: LIST
12427: LIST
12428: PUSH
12429: LD_INT 0
12431: PUSH
12432: LD_INT 2
12434: PUSH
12435: EMPTY
12436: LIST
12437: LIST
12438: PUSH
12439: LD_INT 1
12441: NEG
12442: PUSH
12443: LD_INT 1
12445: PUSH
12446: EMPTY
12447: LIST
12448: LIST
12449: PUSH
12450: LD_INT 2
12452: NEG
12453: PUSH
12454: LD_INT 0
12456: PUSH
12457: EMPTY
12458: LIST
12459: LIST
12460: PUSH
12461: LD_INT 2
12463: NEG
12464: PUSH
12465: LD_INT 1
12467: NEG
12468: PUSH
12469: EMPTY
12470: LIST
12471: LIST
12472: PUSH
12473: LD_INT 2
12475: NEG
12476: PUSH
12477: LD_INT 2
12479: NEG
12480: PUSH
12481: EMPTY
12482: LIST
12483: LIST
12484: PUSH
12485: LD_INT 2
12487: PUSH
12488: LD_INT 3
12490: PUSH
12491: EMPTY
12492: LIST
12493: LIST
12494: PUSH
12495: LD_INT 1
12497: PUSH
12498: LD_INT 3
12500: PUSH
12501: EMPTY
12502: LIST
12503: LIST
12504: PUSH
12505: LD_INT 1
12507: NEG
12508: PUSH
12509: LD_INT 2
12511: PUSH
12512: EMPTY
12513: LIST
12514: LIST
12515: PUSH
12516: LD_INT 2
12518: NEG
12519: PUSH
12520: LD_INT 1
12522: PUSH
12523: EMPTY
12524: LIST
12525: LIST
12526: PUSH
12527: EMPTY
12528: LIST
12529: LIST
12530: LIST
12531: LIST
12532: LIST
12533: LIST
12534: LIST
12535: LIST
12536: LIST
12537: LIST
12538: LIST
12539: LIST
12540: LIST
12541: LIST
12542: LIST
12543: LIST
12544: LIST
12545: LIST
12546: LIST
12547: LIST
12548: LIST
12549: LIST
12550: LIST
12551: ST_TO_ADDR
// DepotRu4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12552: LD_ADDR_VAR 0 27
12556: PUSH
12557: LD_INT 0
12559: PUSH
12560: LD_INT 0
12562: PUSH
12563: EMPTY
12564: LIST
12565: LIST
12566: PUSH
12567: LD_INT 0
12569: PUSH
12570: LD_INT 1
12572: NEG
12573: PUSH
12574: EMPTY
12575: LIST
12576: LIST
12577: PUSH
12578: LD_INT 1
12580: PUSH
12581: LD_INT 0
12583: PUSH
12584: EMPTY
12585: LIST
12586: LIST
12587: PUSH
12588: LD_INT 1
12590: PUSH
12591: LD_INT 1
12593: PUSH
12594: EMPTY
12595: LIST
12596: LIST
12597: PUSH
12598: LD_INT 0
12600: PUSH
12601: LD_INT 1
12603: PUSH
12604: EMPTY
12605: LIST
12606: LIST
12607: PUSH
12608: LD_INT 1
12610: NEG
12611: PUSH
12612: LD_INT 0
12614: PUSH
12615: EMPTY
12616: LIST
12617: LIST
12618: PUSH
12619: LD_INT 1
12621: NEG
12622: PUSH
12623: LD_INT 1
12625: NEG
12626: PUSH
12627: EMPTY
12628: LIST
12629: LIST
12630: PUSH
12631: LD_INT 1
12633: NEG
12634: PUSH
12635: LD_INT 2
12637: NEG
12638: PUSH
12639: EMPTY
12640: LIST
12641: LIST
12642: PUSH
12643: LD_INT 0
12645: PUSH
12646: LD_INT 2
12648: NEG
12649: PUSH
12650: EMPTY
12651: LIST
12652: LIST
12653: PUSH
12654: LD_INT 1
12656: PUSH
12657: LD_INT 1
12659: NEG
12660: PUSH
12661: EMPTY
12662: LIST
12663: LIST
12664: PUSH
12665: LD_INT 2
12667: PUSH
12668: LD_INT 0
12670: PUSH
12671: EMPTY
12672: LIST
12673: LIST
12674: PUSH
12675: LD_INT 2
12677: PUSH
12678: LD_INT 1
12680: PUSH
12681: EMPTY
12682: LIST
12683: LIST
12684: PUSH
12685: LD_INT 2
12687: PUSH
12688: LD_INT 2
12690: PUSH
12691: EMPTY
12692: LIST
12693: LIST
12694: PUSH
12695: LD_INT 1
12697: PUSH
12698: LD_INT 2
12700: PUSH
12701: EMPTY
12702: LIST
12703: LIST
12704: PUSH
12705: LD_INT 0
12707: PUSH
12708: LD_INT 2
12710: PUSH
12711: EMPTY
12712: LIST
12713: LIST
12714: PUSH
12715: LD_INT 1
12717: NEG
12718: PUSH
12719: LD_INT 1
12721: PUSH
12722: EMPTY
12723: LIST
12724: LIST
12725: PUSH
12726: LD_INT 2
12728: NEG
12729: PUSH
12730: LD_INT 0
12732: PUSH
12733: EMPTY
12734: LIST
12735: LIST
12736: PUSH
12737: LD_INT 2
12739: NEG
12740: PUSH
12741: LD_INT 1
12743: NEG
12744: PUSH
12745: EMPTY
12746: LIST
12747: LIST
12748: PUSH
12749: LD_INT 2
12751: NEG
12752: PUSH
12753: LD_INT 2
12755: NEG
12756: PUSH
12757: EMPTY
12758: LIST
12759: LIST
12760: PUSH
12761: LD_INT 1
12763: NEG
12764: PUSH
12765: LD_INT 2
12767: PUSH
12768: EMPTY
12769: LIST
12770: LIST
12771: PUSH
12772: LD_INT 2
12774: NEG
12775: PUSH
12776: LD_INT 1
12778: PUSH
12779: EMPTY
12780: LIST
12781: LIST
12782: PUSH
12783: LD_INT 3
12785: NEG
12786: PUSH
12787: LD_INT 1
12789: NEG
12790: PUSH
12791: EMPTY
12792: LIST
12793: LIST
12794: PUSH
12795: LD_INT 3
12797: NEG
12798: PUSH
12799: LD_INT 2
12801: NEG
12802: PUSH
12803: EMPTY
12804: LIST
12805: LIST
12806: PUSH
12807: EMPTY
12808: LIST
12809: LIST
12810: LIST
12811: LIST
12812: LIST
12813: LIST
12814: LIST
12815: LIST
12816: LIST
12817: LIST
12818: LIST
12819: LIST
12820: LIST
12821: LIST
12822: LIST
12823: LIST
12824: LIST
12825: LIST
12826: LIST
12827: LIST
12828: LIST
12829: LIST
12830: LIST
12831: ST_TO_ADDR
// DepotRu5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
12832: LD_ADDR_VAR 0 28
12836: PUSH
12837: LD_INT 0
12839: PUSH
12840: LD_INT 0
12842: PUSH
12843: EMPTY
12844: LIST
12845: LIST
12846: PUSH
12847: LD_INT 0
12849: PUSH
12850: LD_INT 1
12852: NEG
12853: PUSH
12854: EMPTY
12855: LIST
12856: LIST
12857: PUSH
12858: LD_INT 1
12860: PUSH
12861: LD_INT 0
12863: PUSH
12864: EMPTY
12865: LIST
12866: LIST
12867: PUSH
12868: LD_INT 1
12870: PUSH
12871: LD_INT 1
12873: PUSH
12874: EMPTY
12875: LIST
12876: LIST
12877: PUSH
12878: LD_INT 0
12880: PUSH
12881: LD_INT 1
12883: PUSH
12884: EMPTY
12885: LIST
12886: LIST
12887: PUSH
12888: LD_INT 1
12890: NEG
12891: PUSH
12892: LD_INT 0
12894: PUSH
12895: EMPTY
12896: LIST
12897: LIST
12898: PUSH
12899: LD_INT 1
12901: NEG
12902: PUSH
12903: LD_INT 1
12905: NEG
12906: PUSH
12907: EMPTY
12908: LIST
12909: LIST
12910: PUSH
12911: LD_INT 1
12913: NEG
12914: PUSH
12915: LD_INT 2
12917: NEG
12918: PUSH
12919: EMPTY
12920: LIST
12921: LIST
12922: PUSH
12923: LD_INT 0
12925: PUSH
12926: LD_INT 2
12928: NEG
12929: PUSH
12930: EMPTY
12931: LIST
12932: LIST
12933: PUSH
12934: LD_INT 1
12936: PUSH
12937: LD_INT 1
12939: NEG
12940: PUSH
12941: EMPTY
12942: LIST
12943: LIST
12944: PUSH
12945: LD_INT 2
12947: PUSH
12948: LD_INT 0
12950: PUSH
12951: EMPTY
12952: LIST
12953: LIST
12954: PUSH
12955: LD_INT 2
12957: PUSH
12958: LD_INT 1
12960: PUSH
12961: EMPTY
12962: LIST
12963: LIST
12964: PUSH
12965: LD_INT 2
12967: PUSH
12968: LD_INT 2
12970: PUSH
12971: EMPTY
12972: LIST
12973: LIST
12974: PUSH
12975: LD_INT 1
12977: PUSH
12978: LD_INT 2
12980: PUSH
12981: EMPTY
12982: LIST
12983: LIST
12984: PUSH
12985: LD_INT 0
12987: PUSH
12988: LD_INT 2
12990: PUSH
12991: EMPTY
12992: LIST
12993: LIST
12994: PUSH
12995: LD_INT 1
12997: NEG
12998: PUSH
12999: LD_INT 1
13001: PUSH
13002: EMPTY
13003: LIST
13004: LIST
13005: PUSH
13006: LD_INT 2
13008: NEG
13009: PUSH
13010: LD_INT 0
13012: PUSH
13013: EMPTY
13014: LIST
13015: LIST
13016: PUSH
13017: LD_INT 2
13019: NEG
13020: PUSH
13021: LD_INT 1
13023: NEG
13024: PUSH
13025: EMPTY
13026: LIST
13027: LIST
13028: PUSH
13029: LD_INT 2
13031: NEG
13032: PUSH
13033: LD_INT 2
13035: NEG
13036: PUSH
13037: EMPTY
13038: LIST
13039: LIST
13040: PUSH
13041: LD_INT 2
13043: NEG
13044: PUSH
13045: LD_INT 3
13047: NEG
13048: PUSH
13049: EMPTY
13050: LIST
13051: LIST
13052: PUSH
13053: LD_INT 1
13055: NEG
13056: PUSH
13057: LD_INT 3
13059: NEG
13060: PUSH
13061: EMPTY
13062: LIST
13063: LIST
13064: PUSH
13065: LD_INT 3
13067: NEG
13068: PUSH
13069: LD_INT 1
13071: NEG
13072: PUSH
13073: EMPTY
13074: LIST
13075: LIST
13076: PUSH
13077: LD_INT 3
13079: NEG
13080: PUSH
13081: LD_INT 2
13083: NEG
13084: PUSH
13085: EMPTY
13086: LIST
13087: LIST
13088: PUSH
13089: EMPTY
13090: LIST
13091: LIST
13092: LIST
13093: LIST
13094: LIST
13095: LIST
13096: LIST
13097: LIST
13098: LIST
13099: LIST
13100: LIST
13101: LIST
13102: LIST
13103: LIST
13104: LIST
13105: LIST
13106: LIST
13107: LIST
13108: LIST
13109: LIST
13110: LIST
13111: LIST
13112: LIST
13113: ST_TO_ADDR
// Factory0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13114: LD_ADDR_VAR 0 29
13118: PUSH
13119: LD_INT 0
13121: PUSH
13122: LD_INT 0
13124: PUSH
13125: EMPTY
13126: LIST
13127: LIST
13128: PUSH
13129: LD_INT 0
13131: PUSH
13132: LD_INT 1
13134: NEG
13135: PUSH
13136: EMPTY
13137: LIST
13138: LIST
13139: PUSH
13140: LD_INT 1
13142: PUSH
13143: LD_INT 0
13145: PUSH
13146: EMPTY
13147: LIST
13148: LIST
13149: PUSH
13150: LD_INT 1
13152: PUSH
13153: LD_INT 1
13155: PUSH
13156: EMPTY
13157: LIST
13158: LIST
13159: PUSH
13160: LD_INT 0
13162: PUSH
13163: LD_INT 1
13165: PUSH
13166: EMPTY
13167: LIST
13168: LIST
13169: PUSH
13170: LD_INT 1
13172: NEG
13173: PUSH
13174: LD_INT 0
13176: PUSH
13177: EMPTY
13178: LIST
13179: LIST
13180: PUSH
13181: LD_INT 1
13183: NEG
13184: PUSH
13185: LD_INT 1
13187: NEG
13188: PUSH
13189: EMPTY
13190: LIST
13191: LIST
13192: PUSH
13193: LD_INT 1
13195: NEG
13196: PUSH
13197: LD_INT 2
13199: NEG
13200: PUSH
13201: EMPTY
13202: LIST
13203: LIST
13204: PUSH
13205: LD_INT 0
13207: PUSH
13208: LD_INT 2
13210: NEG
13211: PUSH
13212: EMPTY
13213: LIST
13214: LIST
13215: PUSH
13216: LD_INT 1
13218: PUSH
13219: LD_INT 1
13221: NEG
13222: PUSH
13223: EMPTY
13224: LIST
13225: LIST
13226: PUSH
13227: LD_INT 2
13229: PUSH
13230: LD_INT 0
13232: PUSH
13233: EMPTY
13234: LIST
13235: LIST
13236: PUSH
13237: LD_INT 2
13239: PUSH
13240: LD_INT 1
13242: PUSH
13243: EMPTY
13244: LIST
13245: LIST
13246: PUSH
13247: LD_INT 1
13249: PUSH
13250: LD_INT 2
13252: PUSH
13253: EMPTY
13254: LIST
13255: LIST
13256: PUSH
13257: LD_INT 0
13259: PUSH
13260: LD_INT 2
13262: PUSH
13263: EMPTY
13264: LIST
13265: LIST
13266: PUSH
13267: LD_INT 1
13269: NEG
13270: PUSH
13271: LD_INT 1
13273: PUSH
13274: EMPTY
13275: LIST
13276: LIST
13277: PUSH
13278: LD_INT 2
13280: NEG
13281: PUSH
13282: LD_INT 1
13284: NEG
13285: PUSH
13286: EMPTY
13287: LIST
13288: LIST
13289: PUSH
13290: LD_INT 2
13292: NEG
13293: PUSH
13294: LD_INT 2
13296: NEG
13297: PUSH
13298: EMPTY
13299: LIST
13300: LIST
13301: PUSH
13302: LD_INT 2
13304: NEG
13305: PUSH
13306: LD_INT 3
13308: NEG
13309: PUSH
13310: EMPTY
13311: LIST
13312: LIST
13313: PUSH
13314: LD_INT 2
13316: PUSH
13317: LD_INT 1
13319: NEG
13320: PUSH
13321: EMPTY
13322: LIST
13323: LIST
13324: PUSH
13325: LD_INT 3
13327: PUSH
13328: LD_INT 1
13330: PUSH
13331: EMPTY
13332: LIST
13333: LIST
13334: PUSH
13335: LD_INT 1
13337: PUSH
13338: LD_INT 3
13340: PUSH
13341: EMPTY
13342: LIST
13343: LIST
13344: PUSH
13345: LD_INT 1
13347: NEG
13348: PUSH
13349: LD_INT 2
13351: PUSH
13352: EMPTY
13353: LIST
13354: LIST
13355: PUSH
13356: LD_INT 3
13358: NEG
13359: PUSH
13360: LD_INT 2
13362: NEG
13363: PUSH
13364: EMPTY
13365: LIST
13366: LIST
13367: PUSH
13368: EMPTY
13369: LIST
13370: LIST
13371: LIST
13372: LIST
13373: LIST
13374: LIST
13375: LIST
13376: LIST
13377: LIST
13378: LIST
13379: LIST
13380: LIST
13381: LIST
13382: LIST
13383: LIST
13384: LIST
13385: LIST
13386: LIST
13387: LIST
13388: LIST
13389: LIST
13390: LIST
13391: LIST
13392: ST_TO_ADDR
// Factory1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13393: LD_ADDR_VAR 0 30
13397: PUSH
13398: LD_INT 0
13400: PUSH
13401: LD_INT 0
13403: PUSH
13404: EMPTY
13405: LIST
13406: LIST
13407: PUSH
13408: LD_INT 0
13410: PUSH
13411: LD_INT 1
13413: NEG
13414: PUSH
13415: EMPTY
13416: LIST
13417: LIST
13418: PUSH
13419: LD_INT 1
13421: PUSH
13422: LD_INT 0
13424: PUSH
13425: EMPTY
13426: LIST
13427: LIST
13428: PUSH
13429: LD_INT 1
13431: PUSH
13432: LD_INT 1
13434: PUSH
13435: EMPTY
13436: LIST
13437: LIST
13438: PUSH
13439: LD_INT 0
13441: PUSH
13442: LD_INT 1
13444: PUSH
13445: EMPTY
13446: LIST
13447: LIST
13448: PUSH
13449: LD_INT 1
13451: NEG
13452: PUSH
13453: LD_INT 0
13455: PUSH
13456: EMPTY
13457: LIST
13458: LIST
13459: PUSH
13460: LD_INT 1
13462: NEG
13463: PUSH
13464: LD_INT 1
13466: NEG
13467: PUSH
13468: EMPTY
13469: LIST
13470: LIST
13471: PUSH
13472: LD_INT 1
13474: NEG
13475: PUSH
13476: LD_INT 2
13478: NEG
13479: PUSH
13480: EMPTY
13481: LIST
13482: LIST
13483: PUSH
13484: LD_INT 0
13486: PUSH
13487: LD_INT 2
13489: NEG
13490: PUSH
13491: EMPTY
13492: LIST
13493: LIST
13494: PUSH
13495: LD_INT 1
13497: PUSH
13498: LD_INT 1
13500: NEG
13501: PUSH
13502: EMPTY
13503: LIST
13504: LIST
13505: PUSH
13506: LD_INT 2
13508: PUSH
13509: LD_INT 0
13511: PUSH
13512: EMPTY
13513: LIST
13514: LIST
13515: PUSH
13516: LD_INT 2
13518: PUSH
13519: LD_INT 1
13521: PUSH
13522: EMPTY
13523: LIST
13524: LIST
13525: PUSH
13526: LD_INT 2
13528: PUSH
13529: LD_INT 2
13531: PUSH
13532: EMPTY
13533: LIST
13534: LIST
13535: PUSH
13536: LD_INT 1
13538: PUSH
13539: LD_INT 2
13541: PUSH
13542: EMPTY
13543: LIST
13544: LIST
13545: PUSH
13546: LD_INT 1
13548: NEG
13549: PUSH
13550: LD_INT 1
13552: PUSH
13553: EMPTY
13554: LIST
13555: LIST
13556: PUSH
13557: LD_INT 2
13559: NEG
13560: PUSH
13561: LD_INT 0
13563: PUSH
13564: EMPTY
13565: LIST
13566: LIST
13567: PUSH
13568: LD_INT 2
13570: NEG
13571: PUSH
13572: LD_INT 1
13574: NEG
13575: PUSH
13576: EMPTY
13577: LIST
13578: LIST
13579: PUSH
13580: LD_INT 1
13582: NEG
13583: PUSH
13584: LD_INT 3
13586: NEG
13587: PUSH
13588: EMPTY
13589: LIST
13590: LIST
13591: PUSH
13592: LD_INT 1
13594: PUSH
13595: LD_INT 2
13597: NEG
13598: PUSH
13599: EMPTY
13600: LIST
13601: LIST
13602: PUSH
13603: LD_INT 3
13605: PUSH
13606: LD_INT 2
13608: PUSH
13609: EMPTY
13610: LIST
13611: LIST
13612: PUSH
13613: LD_INT 2
13615: PUSH
13616: LD_INT 3
13618: PUSH
13619: EMPTY
13620: LIST
13621: LIST
13622: PUSH
13623: LD_INT 2
13625: NEG
13626: PUSH
13627: LD_INT 1
13629: PUSH
13630: EMPTY
13631: LIST
13632: LIST
13633: PUSH
13634: LD_INT 3
13636: NEG
13637: PUSH
13638: LD_INT 1
13640: NEG
13641: PUSH
13642: EMPTY
13643: LIST
13644: LIST
13645: PUSH
13646: EMPTY
13647: LIST
13648: LIST
13649: LIST
13650: LIST
13651: LIST
13652: LIST
13653: LIST
13654: LIST
13655: LIST
13656: LIST
13657: LIST
13658: LIST
13659: LIST
13660: LIST
13661: LIST
13662: LIST
13663: LIST
13664: LIST
13665: LIST
13666: LIST
13667: LIST
13668: LIST
13669: LIST
13670: ST_TO_ADDR
// Factory2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
13671: LD_ADDR_VAR 0 31
13675: PUSH
13676: LD_INT 0
13678: PUSH
13679: LD_INT 0
13681: PUSH
13682: EMPTY
13683: LIST
13684: LIST
13685: PUSH
13686: LD_INT 0
13688: PUSH
13689: LD_INT 1
13691: NEG
13692: PUSH
13693: EMPTY
13694: LIST
13695: LIST
13696: PUSH
13697: LD_INT 1
13699: PUSH
13700: LD_INT 0
13702: PUSH
13703: EMPTY
13704: LIST
13705: LIST
13706: PUSH
13707: LD_INT 1
13709: PUSH
13710: LD_INT 1
13712: PUSH
13713: EMPTY
13714: LIST
13715: LIST
13716: PUSH
13717: LD_INT 0
13719: PUSH
13720: LD_INT 1
13722: PUSH
13723: EMPTY
13724: LIST
13725: LIST
13726: PUSH
13727: LD_INT 1
13729: NEG
13730: PUSH
13731: LD_INT 0
13733: PUSH
13734: EMPTY
13735: LIST
13736: LIST
13737: PUSH
13738: LD_INT 1
13740: NEG
13741: PUSH
13742: LD_INT 1
13744: NEG
13745: PUSH
13746: EMPTY
13747: LIST
13748: LIST
13749: PUSH
13750: LD_INT 1
13752: NEG
13753: PUSH
13754: LD_INT 2
13756: NEG
13757: PUSH
13758: EMPTY
13759: LIST
13760: LIST
13761: PUSH
13762: LD_INT 1
13764: PUSH
13765: LD_INT 1
13767: NEG
13768: PUSH
13769: EMPTY
13770: LIST
13771: LIST
13772: PUSH
13773: LD_INT 2
13775: PUSH
13776: LD_INT 0
13778: PUSH
13779: EMPTY
13780: LIST
13781: LIST
13782: PUSH
13783: LD_INT 2
13785: PUSH
13786: LD_INT 1
13788: PUSH
13789: EMPTY
13790: LIST
13791: LIST
13792: PUSH
13793: LD_INT 2
13795: PUSH
13796: LD_INT 2
13798: PUSH
13799: EMPTY
13800: LIST
13801: LIST
13802: PUSH
13803: LD_INT 1
13805: PUSH
13806: LD_INT 2
13808: PUSH
13809: EMPTY
13810: LIST
13811: LIST
13812: PUSH
13813: LD_INT 0
13815: PUSH
13816: LD_INT 2
13818: PUSH
13819: EMPTY
13820: LIST
13821: LIST
13822: PUSH
13823: LD_INT 1
13825: NEG
13826: PUSH
13827: LD_INT 1
13829: PUSH
13830: EMPTY
13831: LIST
13832: LIST
13833: PUSH
13834: LD_INT 2
13836: NEG
13837: PUSH
13838: LD_INT 1
13840: NEG
13841: PUSH
13842: EMPTY
13843: LIST
13844: LIST
13845: PUSH
13846: LD_INT 2
13848: NEG
13849: PUSH
13850: LD_INT 2
13852: NEG
13853: PUSH
13854: EMPTY
13855: LIST
13856: LIST
13857: PUSH
13858: LD_INT 2
13860: NEG
13861: PUSH
13862: LD_INT 3
13864: NEG
13865: PUSH
13866: EMPTY
13867: LIST
13868: LIST
13869: PUSH
13870: LD_INT 2
13872: PUSH
13873: LD_INT 1
13875: NEG
13876: PUSH
13877: EMPTY
13878: LIST
13879: LIST
13880: PUSH
13881: LD_INT 3
13883: PUSH
13884: LD_INT 1
13886: PUSH
13887: EMPTY
13888: LIST
13889: LIST
13890: PUSH
13891: LD_INT 1
13893: PUSH
13894: LD_INT 3
13896: PUSH
13897: EMPTY
13898: LIST
13899: LIST
13900: PUSH
13901: LD_INT 1
13903: NEG
13904: PUSH
13905: LD_INT 2
13907: PUSH
13908: EMPTY
13909: LIST
13910: LIST
13911: PUSH
13912: LD_INT 3
13914: NEG
13915: PUSH
13916: LD_INT 2
13918: NEG
13919: PUSH
13920: EMPTY
13921: LIST
13922: LIST
13923: PUSH
13924: EMPTY
13925: LIST
13926: LIST
13927: LIST
13928: LIST
13929: LIST
13930: LIST
13931: LIST
13932: LIST
13933: LIST
13934: LIST
13935: LIST
13936: LIST
13937: LIST
13938: LIST
13939: LIST
13940: LIST
13941: LIST
13942: LIST
13943: LIST
13944: LIST
13945: LIST
13946: LIST
13947: LIST
13948: ST_TO_ADDR
// Factory3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
13949: LD_ADDR_VAR 0 32
13953: PUSH
13954: LD_INT 0
13956: PUSH
13957: LD_INT 0
13959: PUSH
13960: EMPTY
13961: LIST
13962: LIST
13963: PUSH
13964: LD_INT 0
13966: PUSH
13967: LD_INT 1
13969: NEG
13970: PUSH
13971: EMPTY
13972: LIST
13973: LIST
13974: PUSH
13975: LD_INT 1
13977: PUSH
13978: LD_INT 0
13980: PUSH
13981: EMPTY
13982: LIST
13983: LIST
13984: PUSH
13985: LD_INT 1
13987: PUSH
13988: LD_INT 1
13990: PUSH
13991: EMPTY
13992: LIST
13993: LIST
13994: PUSH
13995: LD_INT 0
13997: PUSH
13998: LD_INT 1
14000: PUSH
14001: EMPTY
14002: LIST
14003: LIST
14004: PUSH
14005: LD_INT 1
14007: NEG
14008: PUSH
14009: LD_INT 0
14011: PUSH
14012: EMPTY
14013: LIST
14014: LIST
14015: PUSH
14016: LD_INT 1
14018: NEG
14019: PUSH
14020: LD_INT 1
14022: NEG
14023: PUSH
14024: EMPTY
14025: LIST
14026: LIST
14027: PUSH
14028: LD_INT 1
14030: NEG
14031: PUSH
14032: LD_INT 2
14034: NEG
14035: PUSH
14036: EMPTY
14037: LIST
14038: LIST
14039: PUSH
14040: LD_INT 0
14042: PUSH
14043: LD_INT 2
14045: NEG
14046: PUSH
14047: EMPTY
14048: LIST
14049: LIST
14050: PUSH
14051: LD_INT 1
14053: PUSH
14054: LD_INT 1
14056: NEG
14057: PUSH
14058: EMPTY
14059: LIST
14060: LIST
14061: PUSH
14062: LD_INT 2
14064: PUSH
14065: LD_INT 1
14067: PUSH
14068: EMPTY
14069: LIST
14070: LIST
14071: PUSH
14072: LD_INT 2
14074: PUSH
14075: LD_INT 2
14077: PUSH
14078: EMPTY
14079: LIST
14080: LIST
14081: PUSH
14082: LD_INT 1
14084: PUSH
14085: LD_INT 2
14087: PUSH
14088: EMPTY
14089: LIST
14090: LIST
14091: PUSH
14092: LD_INT 0
14094: PUSH
14095: LD_INT 2
14097: PUSH
14098: EMPTY
14099: LIST
14100: LIST
14101: PUSH
14102: LD_INT 1
14104: NEG
14105: PUSH
14106: LD_INT 1
14108: PUSH
14109: EMPTY
14110: LIST
14111: LIST
14112: PUSH
14113: LD_INT 2
14115: NEG
14116: PUSH
14117: LD_INT 0
14119: PUSH
14120: EMPTY
14121: LIST
14122: LIST
14123: PUSH
14124: LD_INT 2
14126: NEG
14127: PUSH
14128: LD_INT 1
14130: NEG
14131: PUSH
14132: EMPTY
14133: LIST
14134: LIST
14135: PUSH
14136: LD_INT 1
14138: NEG
14139: PUSH
14140: LD_INT 3
14142: NEG
14143: PUSH
14144: EMPTY
14145: LIST
14146: LIST
14147: PUSH
14148: LD_INT 1
14150: PUSH
14151: LD_INT 2
14153: NEG
14154: PUSH
14155: EMPTY
14156: LIST
14157: LIST
14158: PUSH
14159: LD_INT 3
14161: PUSH
14162: LD_INT 2
14164: PUSH
14165: EMPTY
14166: LIST
14167: LIST
14168: PUSH
14169: LD_INT 2
14171: PUSH
14172: LD_INT 3
14174: PUSH
14175: EMPTY
14176: LIST
14177: LIST
14178: PUSH
14179: LD_INT 2
14181: NEG
14182: PUSH
14183: LD_INT 1
14185: PUSH
14186: EMPTY
14187: LIST
14188: LIST
14189: PUSH
14190: LD_INT 3
14192: NEG
14193: PUSH
14194: LD_INT 1
14196: NEG
14197: PUSH
14198: EMPTY
14199: LIST
14200: LIST
14201: PUSH
14202: EMPTY
14203: LIST
14204: LIST
14205: LIST
14206: LIST
14207: LIST
14208: LIST
14209: LIST
14210: LIST
14211: LIST
14212: LIST
14213: LIST
14214: LIST
14215: LIST
14216: LIST
14217: LIST
14218: LIST
14219: LIST
14220: LIST
14221: LIST
14222: LIST
14223: LIST
14224: LIST
14225: LIST
14226: ST_TO_ADDR
// Factory4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] ] ;
14227: LD_ADDR_VAR 0 33
14231: PUSH
14232: LD_INT 0
14234: PUSH
14235: LD_INT 0
14237: PUSH
14238: EMPTY
14239: LIST
14240: LIST
14241: PUSH
14242: LD_INT 0
14244: PUSH
14245: LD_INT 1
14247: NEG
14248: PUSH
14249: EMPTY
14250: LIST
14251: LIST
14252: PUSH
14253: LD_INT 1
14255: PUSH
14256: LD_INT 0
14258: PUSH
14259: EMPTY
14260: LIST
14261: LIST
14262: PUSH
14263: LD_INT 1
14265: PUSH
14266: LD_INT 1
14268: PUSH
14269: EMPTY
14270: LIST
14271: LIST
14272: PUSH
14273: LD_INT 0
14275: PUSH
14276: LD_INT 1
14278: PUSH
14279: EMPTY
14280: LIST
14281: LIST
14282: PUSH
14283: LD_INT 1
14285: NEG
14286: PUSH
14287: LD_INT 0
14289: PUSH
14290: EMPTY
14291: LIST
14292: LIST
14293: PUSH
14294: LD_INT 1
14296: NEG
14297: PUSH
14298: LD_INT 1
14300: NEG
14301: PUSH
14302: EMPTY
14303: LIST
14304: LIST
14305: PUSH
14306: LD_INT 1
14308: NEG
14309: PUSH
14310: LD_INT 2
14312: NEG
14313: PUSH
14314: EMPTY
14315: LIST
14316: LIST
14317: PUSH
14318: LD_INT 1
14320: PUSH
14321: LD_INT 1
14323: NEG
14324: PUSH
14325: EMPTY
14326: LIST
14327: LIST
14328: PUSH
14329: LD_INT 2
14331: PUSH
14332: LD_INT 0
14334: PUSH
14335: EMPTY
14336: LIST
14337: LIST
14338: PUSH
14339: LD_INT 2
14341: PUSH
14342: LD_INT 1
14344: PUSH
14345: EMPTY
14346: LIST
14347: LIST
14348: PUSH
14349: LD_INT 1
14351: PUSH
14352: LD_INT 2
14354: PUSH
14355: EMPTY
14356: LIST
14357: LIST
14358: PUSH
14359: LD_INT 0
14361: PUSH
14362: LD_INT 2
14364: PUSH
14365: EMPTY
14366: LIST
14367: LIST
14368: PUSH
14369: LD_INT 1
14371: NEG
14372: PUSH
14373: LD_INT 1
14375: PUSH
14376: EMPTY
14377: LIST
14378: LIST
14379: PUSH
14380: LD_INT 2
14382: NEG
14383: PUSH
14384: LD_INT 0
14386: PUSH
14387: EMPTY
14388: LIST
14389: LIST
14390: PUSH
14391: LD_INT 2
14393: NEG
14394: PUSH
14395: LD_INT 1
14397: NEG
14398: PUSH
14399: EMPTY
14400: LIST
14401: LIST
14402: PUSH
14403: LD_INT 2
14405: NEG
14406: PUSH
14407: LD_INT 2
14409: NEG
14410: PUSH
14411: EMPTY
14412: LIST
14413: LIST
14414: PUSH
14415: LD_INT 2
14417: NEG
14418: PUSH
14419: LD_INT 3
14421: NEG
14422: PUSH
14423: EMPTY
14424: LIST
14425: LIST
14426: PUSH
14427: LD_INT 2
14429: PUSH
14430: LD_INT 1
14432: NEG
14433: PUSH
14434: EMPTY
14435: LIST
14436: LIST
14437: PUSH
14438: LD_INT 3
14440: PUSH
14441: LD_INT 1
14443: PUSH
14444: EMPTY
14445: LIST
14446: LIST
14447: PUSH
14448: LD_INT 1
14450: PUSH
14451: LD_INT 3
14453: PUSH
14454: EMPTY
14455: LIST
14456: LIST
14457: PUSH
14458: LD_INT 1
14460: NEG
14461: PUSH
14462: LD_INT 2
14464: PUSH
14465: EMPTY
14466: LIST
14467: LIST
14468: PUSH
14469: LD_INT 3
14471: NEG
14472: PUSH
14473: LD_INT 2
14475: NEG
14476: PUSH
14477: EMPTY
14478: LIST
14479: LIST
14480: PUSH
14481: EMPTY
14482: LIST
14483: LIST
14484: LIST
14485: LIST
14486: LIST
14487: LIST
14488: LIST
14489: LIST
14490: LIST
14491: LIST
14492: LIST
14493: LIST
14494: LIST
14495: LIST
14496: LIST
14497: LIST
14498: LIST
14499: LIST
14500: LIST
14501: LIST
14502: LIST
14503: LIST
14504: LIST
14505: ST_TO_ADDR
// Factory5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
14506: LD_ADDR_VAR 0 34
14510: PUSH
14511: LD_INT 0
14513: PUSH
14514: LD_INT 0
14516: PUSH
14517: EMPTY
14518: LIST
14519: LIST
14520: PUSH
14521: LD_INT 0
14523: PUSH
14524: LD_INT 1
14526: NEG
14527: PUSH
14528: EMPTY
14529: LIST
14530: LIST
14531: PUSH
14532: LD_INT 1
14534: PUSH
14535: LD_INT 0
14537: PUSH
14538: EMPTY
14539: LIST
14540: LIST
14541: PUSH
14542: LD_INT 1
14544: PUSH
14545: LD_INT 1
14547: PUSH
14548: EMPTY
14549: LIST
14550: LIST
14551: PUSH
14552: LD_INT 0
14554: PUSH
14555: LD_INT 1
14557: PUSH
14558: EMPTY
14559: LIST
14560: LIST
14561: PUSH
14562: LD_INT 1
14564: NEG
14565: PUSH
14566: LD_INT 0
14568: PUSH
14569: EMPTY
14570: LIST
14571: LIST
14572: PUSH
14573: LD_INT 1
14575: NEG
14576: PUSH
14577: LD_INT 1
14579: NEG
14580: PUSH
14581: EMPTY
14582: LIST
14583: LIST
14584: PUSH
14585: LD_INT 1
14587: NEG
14588: PUSH
14589: LD_INT 2
14591: NEG
14592: PUSH
14593: EMPTY
14594: LIST
14595: LIST
14596: PUSH
14597: LD_INT 0
14599: PUSH
14600: LD_INT 2
14602: NEG
14603: PUSH
14604: EMPTY
14605: LIST
14606: LIST
14607: PUSH
14608: LD_INT 1
14610: PUSH
14611: LD_INT 1
14613: NEG
14614: PUSH
14615: EMPTY
14616: LIST
14617: LIST
14618: PUSH
14619: LD_INT 2
14621: PUSH
14622: LD_INT 1
14624: PUSH
14625: EMPTY
14626: LIST
14627: LIST
14628: PUSH
14629: LD_INT 2
14631: PUSH
14632: LD_INT 2
14634: PUSH
14635: EMPTY
14636: LIST
14637: LIST
14638: PUSH
14639: LD_INT 1
14641: PUSH
14642: LD_INT 2
14644: PUSH
14645: EMPTY
14646: LIST
14647: LIST
14648: PUSH
14649: LD_INT 1
14651: NEG
14652: PUSH
14653: LD_INT 1
14655: PUSH
14656: EMPTY
14657: LIST
14658: LIST
14659: PUSH
14660: LD_INT 2
14662: NEG
14663: PUSH
14664: LD_INT 0
14666: PUSH
14667: EMPTY
14668: LIST
14669: LIST
14670: PUSH
14671: LD_INT 2
14673: NEG
14674: PUSH
14675: LD_INT 1
14677: NEG
14678: PUSH
14679: EMPTY
14680: LIST
14681: LIST
14682: PUSH
14683: LD_INT 2
14685: NEG
14686: PUSH
14687: LD_INT 2
14689: NEG
14690: PUSH
14691: EMPTY
14692: LIST
14693: LIST
14694: PUSH
14695: LD_INT 1
14697: NEG
14698: PUSH
14699: LD_INT 3
14701: NEG
14702: PUSH
14703: EMPTY
14704: LIST
14705: LIST
14706: PUSH
14707: LD_INT 1
14709: PUSH
14710: LD_INT 2
14712: NEG
14713: PUSH
14714: EMPTY
14715: LIST
14716: LIST
14717: PUSH
14718: LD_INT 3
14720: PUSH
14721: LD_INT 2
14723: PUSH
14724: EMPTY
14725: LIST
14726: LIST
14727: PUSH
14728: LD_INT 2
14730: PUSH
14731: LD_INT 3
14733: PUSH
14734: EMPTY
14735: LIST
14736: LIST
14737: PUSH
14738: LD_INT 2
14740: NEG
14741: PUSH
14742: LD_INT 1
14744: PUSH
14745: EMPTY
14746: LIST
14747: LIST
14748: PUSH
14749: LD_INT 3
14751: NEG
14752: PUSH
14753: LD_INT 1
14755: NEG
14756: PUSH
14757: EMPTY
14758: LIST
14759: LIST
14760: PUSH
14761: EMPTY
14762: LIST
14763: LIST
14764: LIST
14765: LIST
14766: LIST
14767: LIST
14768: LIST
14769: LIST
14770: LIST
14771: LIST
14772: LIST
14773: LIST
14774: LIST
14775: LIST
14776: LIST
14777: LIST
14778: LIST
14779: LIST
14780: LIST
14781: LIST
14782: LIST
14783: LIST
14784: LIST
14785: ST_TO_ADDR
// Ext0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
14786: LD_ADDR_VAR 0 35
14790: PUSH
14791: LD_INT 0
14793: PUSH
14794: LD_INT 0
14796: PUSH
14797: EMPTY
14798: LIST
14799: LIST
14800: PUSH
14801: LD_INT 0
14803: PUSH
14804: LD_INT 1
14806: NEG
14807: PUSH
14808: EMPTY
14809: LIST
14810: LIST
14811: PUSH
14812: LD_INT 1
14814: PUSH
14815: LD_INT 0
14817: PUSH
14818: EMPTY
14819: LIST
14820: LIST
14821: PUSH
14822: LD_INT 1
14824: PUSH
14825: LD_INT 1
14827: PUSH
14828: EMPTY
14829: LIST
14830: LIST
14831: PUSH
14832: LD_INT 0
14834: PUSH
14835: LD_INT 1
14837: PUSH
14838: EMPTY
14839: LIST
14840: LIST
14841: PUSH
14842: LD_INT 1
14844: NEG
14845: PUSH
14846: LD_INT 0
14848: PUSH
14849: EMPTY
14850: LIST
14851: LIST
14852: PUSH
14853: LD_INT 1
14855: NEG
14856: PUSH
14857: LD_INT 1
14859: NEG
14860: PUSH
14861: EMPTY
14862: LIST
14863: LIST
14864: PUSH
14865: LD_INT 2
14867: PUSH
14868: LD_INT 1
14870: PUSH
14871: EMPTY
14872: LIST
14873: LIST
14874: PUSH
14875: LD_INT 2
14877: NEG
14878: PUSH
14879: LD_INT 1
14881: NEG
14882: PUSH
14883: EMPTY
14884: LIST
14885: LIST
14886: PUSH
14887: EMPTY
14888: LIST
14889: LIST
14890: LIST
14891: LIST
14892: LIST
14893: LIST
14894: LIST
14895: LIST
14896: LIST
14897: ST_TO_ADDR
// Ext1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
14898: LD_ADDR_VAR 0 36
14902: PUSH
14903: LD_INT 0
14905: PUSH
14906: LD_INT 0
14908: PUSH
14909: EMPTY
14910: LIST
14911: LIST
14912: PUSH
14913: LD_INT 0
14915: PUSH
14916: LD_INT 1
14918: NEG
14919: PUSH
14920: EMPTY
14921: LIST
14922: LIST
14923: PUSH
14924: LD_INT 1
14926: PUSH
14927: LD_INT 0
14929: PUSH
14930: EMPTY
14931: LIST
14932: LIST
14933: PUSH
14934: LD_INT 1
14936: PUSH
14937: LD_INT 1
14939: PUSH
14940: EMPTY
14941: LIST
14942: LIST
14943: PUSH
14944: LD_INT 0
14946: PUSH
14947: LD_INT 1
14949: PUSH
14950: EMPTY
14951: LIST
14952: LIST
14953: PUSH
14954: LD_INT 1
14956: NEG
14957: PUSH
14958: LD_INT 0
14960: PUSH
14961: EMPTY
14962: LIST
14963: LIST
14964: PUSH
14965: LD_INT 1
14967: NEG
14968: PUSH
14969: LD_INT 1
14971: NEG
14972: PUSH
14973: EMPTY
14974: LIST
14975: LIST
14976: PUSH
14977: LD_INT 1
14979: NEG
14980: PUSH
14981: LD_INT 2
14983: NEG
14984: PUSH
14985: EMPTY
14986: LIST
14987: LIST
14988: PUSH
14989: LD_INT 1
14991: PUSH
14992: LD_INT 2
14994: PUSH
14995: EMPTY
14996: LIST
14997: LIST
14998: PUSH
14999: EMPTY
15000: LIST
15001: LIST
15002: LIST
15003: LIST
15004: LIST
15005: LIST
15006: LIST
15007: LIST
15008: LIST
15009: ST_TO_ADDR
// Ext2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15010: LD_ADDR_VAR 0 37
15014: PUSH
15015: LD_INT 0
15017: PUSH
15018: LD_INT 0
15020: PUSH
15021: EMPTY
15022: LIST
15023: LIST
15024: PUSH
15025: LD_INT 0
15027: PUSH
15028: LD_INT 1
15030: NEG
15031: PUSH
15032: EMPTY
15033: LIST
15034: LIST
15035: PUSH
15036: LD_INT 1
15038: PUSH
15039: LD_INT 0
15041: PUSH
15042: EMPTY
15043: LIST
15044: LIST
15045: PUSH
15046: LD_INT 1
15048: PUSH
15049: LD_INT 1
15051: PUSH
15052: EMPTY
15053: LIST
15054: LIST
15055: PUSH
15056: LD_INT 0
15058: PUSH
15059: LD_INT 1
15061: PUSH
15062: EMPTY
15063: LIST
15064: LIST
15065: PUSH
15066: LD_INT 1
15068: NEG
15069: PUSH
15070: LD_INT 0
15072: PUSH
15073: EMPTY
15074: LIST
15075: LIST
15076: PUSH
15077: LD_INT 1
15079: NEG
15080: PUSH
15081: LD_INT 1
15083: NEG
15084: PUSH
15085: EMPTY
15086: LIST
15087: LIST
15088: PUSH
15089: LD_INT 1
15091: PUSH
15092: LD_INT 1
15094: NEG
15095: PUSH
15096: EMPTY
15097: LIST
15098: LIST
15099: PUSH
15100: LD_INT 1
15102: NEG
15103: PUSH
15104: LD_INT 1
15106: PUSH
15107: EMPTY
15108: LIST
15109: LIST
15110: PUSH
15111: EMPTY
15112: LIST
15113: LIST
15114: LIST
15115: LIST
15116: LIST
15117: LIST
15118: LIST
15119: LIST
15120: LIST
15121: ST_TO_ADDR
// Ext3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ - 2 , - 1 ] ] ;
15122: LD_ADDR_VAR 0 38
15126: PUSH
15127: LD_INT 0
15129: PUSH
15130: LD_INT 0
15132: PUSH
15133: EMPTY
15134: LIST
15135: LIST
15136: PUSH
15137: LD_INT 0
15139: PUSH
15140: LD_INT 1
15142: NEG
15143: PUSH
15144: EMPTY
15145: LIST
15146: LIST
15147: PUSH
15148: LD_INT 1
15150: PUSH
15151: LD_INT 0
15153: PUSH
15154: EMPTY
15155: LIST
15156: LIST
15157: PUSH
15158: LD_INT 1
15160: PUSH
15161: LD_INT 1
15163: PUSH
15164: EMPTY
15165: LIST
15166: LIST
15167: PUSH
15168: LD_INT 0
15170: PUSH
15171: LD_INT 1
15173: PUSH
15174: EMPTY
15175: LIST
15176: LIST
15177: PUSH
15178: LD_INT 1
15180: NEG
15181: PUSH
15182: LD_INT 0
15184: PUSH
15185: EMPTY
15186: LIST
15187: LIST
15188: PUSH
15189: LD_INT 1
15191: NEG
15192: PUSH
15193: LD_INT 1
15195: NEG
15196: PUSH
15197: EMPTY
15198: LIST
15199: LIST
15200: PUSH
15201: LD_INT 2
15203: PUSH
15204: LD_INT 1
15206: PUSH
15207: EMPTY
15208: LIST
15209: LIST
15210: PUSH
15211: LD_INT 2
15213: NEG
15214: PUSH
15215: LD_INT 1
15217: NEG
15218: PUSH
15219: EMPTY
15220: LIST
15221: LIST
15222: PUSH
15223: EMPTY
15224: LIST
15225: LIST
15226: LIST
15227: LIST
15228: LIST
15229: LIST
15230: LIST
15231: LIST
15232: LIST
15233: ST_TO_ADDR
// Ext4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , 2 ] ] ;
15234: LD_ADDR_VAR 0 39
15238: PUSH
15239: LD_INT 0
15241: PUSH
15242: LD_INT 0
15244: PUSH
15245: EMPTY
15246: LIST
15247: LIST
15248: PUSH
15249: LD_INT 0
15251: PUSH
15252: LD_INT 1
15254: NEG
15255: PUSH
15256: EMPTY
15257: LIST
15258: LIST
15259: PUSH
15260: LD_INT 1
15262: PUSH
15263: LD_INT 0
15265: PUSH
15266: EMPTY
15267: LIST
15268: LIST
15269: PUSH
15270: LD_INT 1
15272: PUSH
15273: LD_INT 1
15275: PUSH
15276: EMPTY
15277: LIST
15278: LIST
15279: PUSH
15280: LD_INT 0
15282: PUSH
15283: LD_INT 1
15285: PUSH
15286: EMPTY
15287: LIST
15288: LIST
15289: PUSH
15290: LD_INT 1
15292: NEG
15293: PUSH
15294: LD_INT 0
15296: PUSH
15297: EMPTY
15298: LIST
15299: LIST
15300: PUSH
15301: LD_INT 1
15303: NEG
15304: PUSH
15305: LD_INT 1
15307: NEG
15308: PUSH
15309: EMPTY
15310: LIST
15311: LIST
15312: PUSH
15313: LD_INT 1
15315: NEG
15316: PUSH
15317: LD_INT 2
15319: NEG
15320: PUSH
15321: EMPTY
15322: LIST
15323: LIST
15324: PUSH
15325: LD_INT 1
15327: PUSH
15328: LD_INT 2
15330: PUSH
15331: EMPTY
15332: LIST
15333: LIST
15334: PUSH
15335: EMPTY
15336: LIST
15337: LIST
15338: LIST
15339: LIST
15340: LIST
15341: LIST
15342: LIST
15343: LIST
15344: LIST
15345: ST_TO_ADDR
// Ext5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ - 1 , 1 ] ] ;
15346: LD_ADDR_VAR 0 40
15350: PUSH
15351: LD_INT 0
15353: PUSH
15354: LD_INT 0
15356: PUSH
15357: EMPTY
15358: LIST
15359: LIST
15360: PUSH
15361: LD_INT 0
15363: PUSH
15364: LD_INT 1
15366: NEG
15367: PUSH
15368: EMPTY
15369: LIST
15370: LIST
15371: PUSH
15372: LD_INT 1
15374: PUSH
15375: LD_INT 0
15377: PUSH
15378: EMPTY
15379: LIST
15380: LIST
15381: PUSH
15382: LD_INT 1
15384: PUSH
15385: LD_INT 1
15387: PUSH
15388: EMPTY
15389: LIST
15390: LIST
15391: PUSH
15392: LD_INT 0
15394: PUSH
15395: LD_INT 1
15397: PUSH
15398: EMPTY
15399: LIST
15400: LIST
15401: PUSH
15402: LD_INT 1
15404: NEG
15405: PUSH
15406: LD_INT 0
15408: PUSH
15409: EMPTY
15410: LIST
15411: LIST
15412: PUSH
15413: LD_INT 1
15415: NEG
15416: PUSH
15417: LD_INT 1
15419: NEG
15420: PUSH
15421: EMPTY
15422: LIST
15423: LIST
15424: PUSH
15425: LD_INT 1
15427: PUSH
15428: LD_INT 1
15430: NEG
15431: PUSH
15432: EMPTY
15433: LIST
15434: LIST
15435: PUSH
15436: LD_INT 1
15438: NEG
15439: PUSH
15440: LD_INT 1
15442: PUSH
15443: EMPTY
15444: LIST
15445: LIST
15446: PUSH
15447: EMPTY
15448: LIST
15449: LIST
15450: LIST
15451: LIST
15452: LIST
15453: LIST
15454: LIST
15455: LIST
15456: LIST
15457: ST_TO_ADDR
// Lab0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15458: LD_ADDR_VAR 0 41
15462: PUSH
15463: LD_INT 0
15465: PUSH
15466: LD_INT 0
15468: PUSH
15469: EMPTY
15470: LIST
15471: LIST
15472: PUSH
15473: LD_INT 0
15475: PUSH
15476: LD_INT 1
15478: NEG
15479: PUSH
15480: EMPTY
15481: LIST
15482: LIST
15483: PUSH
15484: LD_INT 1
15486: PUSH
15487: LD_INT 0
15489: PUSH
15490: EMPTY
15491: LIST
15492: LIST
15493: PUSH
15494: LD_INT 1
15496: PUSH
15497: LD_INT 1
15499: PUSH
15500: EMPTY
15501: LIST
15502: LIST
15503: PUSH
15504: LD_INT 0
15506: PUSH
15507: LD_INT 1
15509: PUSH
15510: EMPTY
15511: LIST
15512: LIST
15513: PUSH
15514: LD_INT 1
15516: NEG
15517: PUSH
15518: LD_INT 0
15520: PUSH
15521: EMPTY
15522: LIST
15523: LIST
15524: PUSH
15525: LD_INT 1
15527: NEG
15528: PUSH
15529: LD_INT 1
15531: NEG
15532: PUSH
15533: EMPTY
15534: LIST
15535: LIST
15536: PUSH
15537: LD_INT 1
15539: NEG
15540: PUSH
15541: LD_INT 2
15543: NEG
15544: PUSH
15545: EMPTY
15546: LIST
15547: LIST
15548: PUSH
15549: LD_INT 1
15551: PUSH
15552: LD_INT 1
15554: NEG
15555: PUSH
15556: EMPTY
15557: LIST
15558: LIST
15559: PUSH
15560: LD_INT 2
15562: PUSH
15563: LD_INT 0
15565: PUSH
15566: EMPTY
15567: LIST
15568: LIST
15569: PUSH
15570: LD_INT 2
15572: PUSH
15573: LD_INT 1
15575: PUSH
15576: EMPTY
15577: LIST
15578: LIST
15579: PUSH
15580: LD_INT 2
15582: PUSH
15583: LD_INT 2
15585: PUSH
15586: EMPTY
15587: LIST
15588: LIST
15589: PUSH
15590: LD_INT 1
15592: PUSH
15593: LD_INT 2
15595: PUSH
15596: EMPTY
15597: LIST
15598: LIST
15599: PUSH
15600: LD_INT 1
15602: NEG
15603: PUSH
15604: LD_INT 1
15606: PUSH
15607: EMPTY
15608: LIST
15609: LIST
15610: PUSH
15611: LD_INT 2
15613: NEG
15614: PUSH
15615: LD_INT 0
15617: PUSH
15618: EMPTY
15619: LIST
15620: LIST
15621: PUSH
15622: LD_INT 2
15624: NEG
15625: PUSH
15626: LD_INT 1
15628: NEG
15629: PUSH
15630: EMPTY
15631: LIST
15632: LIST
15633: PUSH
15634: LD_INT 2
15636: NEG
15637: PUSH
15638: LD_INT 2
15640: NEG
15641: PUSH
15642: EMPTY
15643: LIST
15644: LIST
15645: PUSH
15646: LD_INT 2
15648: NEG
15649: PUSH
15650: LD_INT 3
15652: NEG
15653: PUSH
15654: EMPTY
15655: LIST
15656: LIST
15657: PUSH
15658: LD_INT 2
15660: PUSH
15661: LD_INT 1
15663: NEG
15664: PUSH
15665: EMPTY
15666: LIST
15667: LIST
15668: PUSH
15669: LD_INT 3
15671: PUSH
15672: LD_INT 0
15674: PUSH
15675: EMPTY
15676: LIST
15677: LIST
15678: PUSH
15679: LD_INT 3
15681: PUSH
15682: LD_INT 1
15684: PUSH
15685: EMPTY
15686: LIST
15687: LIST
15688: PUSH
15689: LD_INT 3
15691: PUSH
15692: LD_INT 2
15694: PUSH
15695: EMPTY
15696: LIST
15697: LIST
15698: PUSH
15699: LD_INT 3
15701: PUSH
15702: LD_INT 3
15704: PUSH
15705: EMPTY
15706: LIST
15707: LIST
15708: PUSH
15709: LD_INT 2
15711: PUSH
15712: LD_INT 3
15714: PUSH
15715: EMPTY
15716: LIST
15717: LIST
15718: PUSH
15719: LD_INT 2
15721: NEG
15722: PUSH
15723: LD_INT 1
15725: PUSH
15726: EMPTY
15727: LIST
15728: LIST
15729: PUSH
15730: LD_INT 3
15732: NEG
15733: PUSH
15734: LD_INT 0
15736: PUSH
15737: EMPTY
15738: LIST
15739: LIST
15740: PUSH
15741: LD_INT 3
15743: NEG
15744: PUSH
15745: LD_INT 1
15747: NEG
15748: PUSH
15749: EMPTY
15750: LIST
15751: LIST
15752: PUSH
15753: LD_INT 3
15755: NEG
15756: PUSH
15757: LD_INT 2
15759: NEG
15760: PUSH
15761: EMPTY
15762: LIST
15763: LIST
15764: PUSH
15765: LD_INT 3
15767: NEG
15768: PUSH
15769: LD_INT 3
15771: NEG
15772: PUSH
15773: EMPTY
15774: LIST
15775: LIST
15776: PUSH
15777: EMPTY
15778: LIST
15779: LIST
15780: LIST
15781: LIST
15782: LIST
15783: LIST
15784: LIST
15785: LIST
15786: LIST
15787: LIST
15788: LIST
15789: LIST
15790: LIST
15791: LIST
15792: LIST
15793: LIST
15794: LIST
15795: LIST
15796: LIST
15797: LIST
15798: LIST
15799: LIST
15800: LIST
15801: LIST
15802: LIST
15803: LIST
15804: LIST
15805: LIST
15806: LIST
15807: ST_TO_ADDR
// Lab1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
15808: LD_ADDR_VAR 0 42
15812: PUSH
15813: LD_INT 0
15815: PUSH
15816: LD_INT 0
15818: PUSH
15819: EMPTY
15820: LIST
15821: LIST
15822: PUSH
15823: LD_INT 0
15825: PUSH
15826: LD_INT 1
15828: NEG
15829: PUSH
15830: EMPTY
15831: LIST
15832: LIST
15833: PUSH
15834: LD_INT 1
15836: PUSH
15837: LD_INT 0
15839: PUSH
15840: EMPTY
15841: LIST
15842: LIST
15843: PUSH
15844: LD_INT 1
15846: PUSH
15847: LD_INT 1
15849: PUSH
15850: EMPTY
15851: LIST
15852: LIST
15853: PUSH
15854: LD_INT 0
15856: PUSH
15857: LD_INT 1
15859: PUSH
15860: EMPTY
15861: LIST
15862: LIST
15863: PUSH
15864: LD_INT 1
15866: NEG
15867: PUSH
15868: LD_INT 0
15870: PUSH
15871: EMPTY
15872: LIST
15873: LIST
15874: PUSH
15875: LD_INT 1
15877: NEG
15878: PUSH
15879: LD_INT 1
15881: NEG
15882: PUSH
15883: EMPTY
15884: LIST
15885: LIST
15886: PUSH
15887: LD_INT 1
15889: NEG
15890: PUSH
15891: LD_INT 2
15893: NEG
15894: PUSH
15895: EMPTY
15896: LIST
15897: LIST
15898: PUSH
15899: LD_INT 0
15901: PUSH
15902: LD_INT 2
15904: NEG
15905: PUSH
15906: EMPTY
15907: LIST
15908: LIST
15909: PUSH
15910: LD_INT 1
15912: PUSH
15913: LD_INT 1
15915: NEG
15916: PUSH
15917: EMPTY
15918: LIST
15919: LIST
15920: PUSH
15921: LD_INT 2
15923: PUSH
15924: LD_INT 1
15926: PUSH
15927: EMPTY
15928: LIST
15929: LIST
15930: PUSH
15931: LD_INT 2
15933: PUSH
15934: LD_INT 2
15936: PUSH
15937: EMPTY
15938: LIST
15939: LIST
15940: PUSH
15941: LD_INT 1
15943: PUSH
15944: LD_INT 2
15946: PUSH
15947: EMPTY
15948: LIST
15949: LIST
15950: PUSH
15951: LD_INT 0
15953: PUSH
15954: LD_INT 2
15956: PUSH
15957: EMPTY
15958: LIST
15959: LIST
15960: PUSH
15961: LD_INT 1
15963: NEG
15964: PUSH
15965: LD_INT 1
15967: PUSH
15968: EMPTY
15969: LIST
15970: LIST
15971: PUSH
15972: LD_INT 2
15974: NEG
15975: PUSH
15976: LD_INT 1
15978: NEG
15979: PUSH
15980: EMPTY
15981: LIST
15982: LIST
15983: PUSH
15984: LD_INT 2
15986: NEG
15987: PUSH
15988: LD_INT 2
15990: NEG
15991: PUSH
15992: EMPTY
15993: LIST
15994: LIST
15995: PUSH
15996: LD_INT 2
15998: NEG
15999: PUSH
16000: LD_INT 3
16002: NEG
16003: PUSH
16004: EMPTY
16005: LIST
16006: LIST
16007: PUSH
16008: LD_INT 1
16010: NEG
16011: PUSH
16012: LD_INT 3
16014: NEG
16015: PUSH
16016: EMPTY
16017: LIST
16018: LIST
16019: PUSH
16020: LD_INT 0
16022: PUSH
16023: LD_INT 3
16025: NEG
16026: PUSH
16027: EMPTY
16028: LIST
16029: LIST
16030: PUSH
16031: LD_INT 1
16033: PUSH
16034: LD_INT 2
16036: NEG
16037: PUSH
16038: EMPTY
16039: LIST
16040: LIST
16041: PUSH
16042: LD_INT 3
16044: PUSH
16045: LD_INT 2
16047: PUSH
16048: EMPTY
16049: LIST
16050: LIST
16051: PUSH
16052: LD_INT 3
16054: PUSH
16055: LD_INT 3
16057: PUSH
16058: EMPTY
16059: LIST
16060: LIST
16061: PUSH
16062: LD_INT 2
16064: PUSH
16065: LD_INT 3
16067: PUSH
16068: EMPTY
16069: LIST
16070: LIST
16071: PUSH
16072: LD_INT 1
16074: PUSH
16075: LD_INT 3
16077: PUSH
16078: EMPTY
16079: LIST
16080: LIST
16081: PUSH
16082: LD_INT 0
16084: PUSH
16085: LD_INT 3
16087: PUSH
16088: EMPTY
16089: LIST
16090: LIST
16091: PUSH
16092: LD_INT 1
16094: NEG
16095: PUSH
16096: LD_INT 2
16098: PUSH
16099: EMPTY
16100: LIST
16101: LIST
16102: PUSH
16103: LD_INT 3
16105: NEG
16106: PUSH
16107: LD_INT 2
16109: NEG
16110: PUSH
16111: EMPTY
16112: LIST
16113: LIST
16114: PUSH
16115: LD_INT 3
16117: NEG
16118: PUSH
16119: LD_INT 3
16121: NEG
16122: PUSH
16123: EMPTY
16124: LIST
16125: LIST
16126: PUSH
16127: EMPTY
16128: LIST
16129: LIST
16130: LIST
16131: LIST
16132: LIST
16133: LIST
16134: LIST
16135: LIST
16136: LIST
16137: LIST
16138: LIST
16139: LIST
16140: LIST
16141: LIST
16142: LIST
16143: LIST
16144: LIST
16145: LIST
16146: LIST
16147: LIST
16148: LIST
16149: LIST
16150: LIST
16151: LIST
16152: LIST
16153: LIST
16154: LIST
16155: LIST
16156: LIST
16157: ST_TO_ADDR
// Lab2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
16158: LD_ADDR_VAR 0 43
16162: PUSH
16163: LD_INT 0
16165: PUSH
16166: LD_INT 0
16168: PUSH
16169: EMPTY
16170: LIST
16171: LIST
16172: PUSH
16173: LD_INT 0
16175: PUSH
16176: LD_INT 1
16178: NEG
16179: PUSH
16180: EMPTY
16181: LIST
16182: LIST
16183: PUSH
16184: LD_INT 1
16186: PUSH
16187: LD_INT 0
16189: PUSH
16190: EMPTY
16191: LIST
16192: LIST
16193: PUSH
16194: LD_INT 1
16196: PUSH
16197: LD_INT 1
16199: PUSH
16200: EMPTY
16201: LIST
16202: LIST
16203: PUSH
16204: LD_INT 0
16206: PUSH
16207: LD_INT 1
16209: PUSH
16210: EMPTY
16211: LIST
16212: LIST
16213: PUSH
16214: LD_INT 1
16216: NEG
16217: PUSH
16218: LD_INT 0
16220: PUSH
16221: EMPTY
16222: LIST
16223: LIST
16224: PUSH
16225: LD_INT 1
16227: NEG
16228: PUSH
16229: LD_INT 1
16231: NEG
16232: PUSH
16233: EMPTY
16234: LIST
16235: LIST
16236: PUSH
16237: LD_INT 1
16239: NEG
16240: PUSH
16241: LD_INT 2
16243: NEG
16244: PUSH
16245: EMPTY
16246: LIST
16247: LIST
16248: PUSH
16249: LD_INT 0
16251: PUSH
16252: LD_INT 2
16254: NEG
16255: PUSH
16256: EMPTY
16257: LIST
16258: LIST
16259: PUSH
16260: LD_INT 1
16262: PUSH
16263: LD_INT 1
16265: NEG
16266: PUSH
16267: EMPTY
16268: LIST
16269: LIST
16270: PUSH
16271: LD_INT 2
16273: PUSH
16274: LD_INT 0
16276: PUSH
16277: EMPTY
16278: LIST
16279: LIST
16280: PUSH
16281: LD_INT 2
16283: PUSH
16284: LD_INT 1
16286: PUSH
16287: EMPTY
16288: LIST
16289: LIST
16290: PUSH
16291: LD_INT 1
16293: PUSH
16294: LD_INT 2
16296: PUSH
16297: EMPTY
16298: LIST
16299: LIST
16300: PUSH
16301: LD_INT 0
16303: PUSH
16304: LD_INT 2
16306: PUSH
16307: EMPTY
16308: LIST
16309: LIST
16310: PUSH
16311: LD_INT 1
16313: NEG
16314: PUSH
16315: LD_INT 1
16317: PUSH
16318: EMPTY
16319: LIST
16320: LIST
16321: PUSH
16322: LD_INT 2
16324: NEG
16325: PUSH
16326: LD_INT 0
16328: PUSH
16329: EMPTY
16330: LIST
16331: LIST
16332: PUSH
16333: LD_INT 2
16335: NEG
16336: PUSH
16337: LD_INT 1
16339: NEG
16340: PUSH
16341: EMPTY
16342: LIST
16343: LIST
16344: PUSH
16345: LD_INT 1
16347: NEG
16348: PUSH
16349: LD_INT 3
16351: NEG
16352: PUSH
16353: EMPTY
16354: LIST
16355: LIST
16356: PUSH
16357: LD_INT 0
16359: PUSH
16360: LD_INT 3
16362: NEG
16363: PUSH
16364: EMPTY
16365: LIST
16366: LIST
16367: PUSH
16368: LD_INT 1
16370: PUSH
16371: LD_INT 2
16373: NEG
16374: PUSH
16375: EMPTY
16376: LIST
16377: LIST
16378: PUSH
16379: LD_INT 2
16381: PUSH
16382: LD_INT 1
16384: NEG
16385: PUSH
16386: EMPTY
16387: LIST
16388: LIST
16389: PUSH
16390: LD_INT 3
16392: PUSH
16393: LD_INT 0
16395: PUSH
16396: EMPTY
16397: LIST
16398: LIST
16399: PUSH
16400: LD_INT 3
16402: PUSH
16403: LD_INT 1
16405: PUSH
16406: EMPTY
16407: LIST
16408: LIST
16409: PUSH
16410: LD_INT 1
16412: PUSH
16413: LD_INT 3
16415: PUSH
16416: EMPTY
16417: LIST
16418: LIST
16419: PUSH
16420: LD_INT 0
16422: PUSH
16423: LD_INT 3
16425: PUSH
16426: EMPTY
16427: LIST
16428: LIST
16429: PUSH
16430: LD_INT 1
16432: NEG
16433: PUSH
16434: LD_INT 2
16436: PUSH
16437: EMPTY
16438: LIST
16439: LIST
16440: PUSH
16441: LD_INT 2
16443: NEG
16444: PUSH
16445: LD_INT 1
16447: PUSH
16448: EMPTY
16449: LIST
16450: LIST
16451: PUSH
16452: LD_INT 3
16454: NEG
16455: PUSH
16456: LD_INT 0
16458: PUSH
16459: EMPTY
16460: LIST
16461: LIST
16462: PUSH
16463: LD_INT 3
16465: NEG
16466: PUSH
16467: LD_INT 1
16469: NEG
16470: PUSH
16471: EMPTY
16472: LIST
16473: LIST
16474: PUSH
16475: EMPTY
16476: LIST
16477: LIST
16478: LIST
16479: LIST
16480: LIST
16481: LIST
16482: LIST
16483: LIST
16484: LIST
16485: LIST
16486: LIST
16487: LIST
16488: LIST
16489: LIST
16490: LIST
16491: LIST
16492: LIST
16493: LIST
16494: LIST
16495: LIST
16496: LIST
16497: LIST
16498: LIST
16499: LIST
16500: LIST
16501: LIST
16502: LIST
16503: LIST
16504: LIST
16505: ST_TO_ADDR
// Lab3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16506: LD_ADDR_VAR 0 44
16510: PUSH
16511: LD_INT 0
16513: PUSH
16514: LD_INT 0
16516: PUSH
16517: EMPTY
16518: LIST
16519: LIST
16520: PUSH
16521: LD_INT 0
16523: PUSH
16524: LD_INT 1
16526: NEG
16527: PUSH
16528: EMPTY
16529: LIST
16530: LIST
16531: PUSH
16532: LD_INT 1
16534: PUSH
16535: LD_INT 0
16537: PUSH
16538: EMPTY
16539: LIST
16540: LIST
16541: PUSH
16542: LD_INT 1
16544: PUSH
16545: LD_INT 1
16547: PUSH
16548: EMPTY
16549: LIST
16550: LIST
16551: PUSH
16552: LD_INT 0
16554: PUSH
16555: LD_INT 1
16557: PUSH
16558: EMPTY
16559: LIST
16560: LIST
16561: PUSH
16562: LD_INT 1
16564: NEG
16565: PUSH
16566: LD_INT 0
16568: PUSH
16569: EMPTY
16570: LIST
16571: LIST
16572: PUSH
16573: LD_INT 1
16575: NEG
16576: PUSH
16577: LD_INT 1
16579: NEG
16580: PUSH
16581: EMPTY
16582: LIST
16583: LIST
16584: PUSH
16585: LD_INT 1
16587: NEG
16588: PUSH
16589: LD_INT 2
16591: NEG
16592: PUSH
16593: EMPTY
16594: LIST
16595: LIST
16596: PUSH
16597: LD_INT 1
16599: PUSH
16600: LD_INT 1
16602: NEG
16603: PUSH
16604: EMPTY
16605: LIST
16606: LIST
16607: PUSH
16608: LD_INT 2
16610: PUSH
16611: LD_INT 0
16613: PUSH
16614: EMPTY
16615: LIST
16616: LIST
16617: PUSH
16618: LD_INT 2
16620: PUSH
16621: LD_INT 1
16623: PUSH
16624: EMPTY
16625: LIST
16626: LIST
16627: PUSH
16628: LD_INT 2
16630: PUSH
16631: LD_INT 2
16633: PUSH
16634: EMPTY
16635: LIST
16636: LIST
16637: PUSH
16638: LD_INT 1
16640: PUSH
16641: LD_INT 2
16643: PUSH
16644: EMPTY
16645: LIST
16646: LIST
16647: PUSH
16648: LD_INT 1
16650: NEG
16651: PUSH
16652: LD_INT 1
16654: PUSH
16655: EMPTY
16656: LIST
16657: LIST
16658: PUSH
16659: LD_INT 2
16661: NEG
16662: PUSH
16663: LD_INT 0
16665: PUSH
16666: EMPTY
16667: LIST
16668: LIST
16669: PUSH
16670: LD_INT 2
16672: NEG
16673: PUSH
16674: LD_INT 1
16676: NEG
16677: PUSH
16678: EMPTY
16679: LIST
16680: LIST
16681: PUSH
16682: LD_INT 2
16684: NEG
16685: PUSH
16686: LD_INT 2
16688: NEG
16689: PUSH
16690: EMPTY
16691: LIST
16692: LIST
16693: PUSH
16694: LD_INT 2
16696: NEG
16697: PUSH
16698: LD_INT 3
16700: NEG
16701: PUSH
16702: EMPTY
16703: LIST
16704: LIST
16705: PUSH
16706: LD_INT 2
16708: PUSH
16709: LD_INT 1
16711: NEG
16712: PUSH
16713: EMPTY
16714: LIST
16715: LIST
16716: PUSH
16717: LD_INT 3
16719: PUSH
16720: LD_INT 0
16722: PUSH
16723: EMPTY
16724: LIST
16725: LIST
16726: PUSH
16727: LD_INT 3
16729: PUSH
16730: LD_INT 1
16732: PUSH
16733: EMPTY
16734: LIST
16735: LIST
16736: PUSH
16737: LD_INT 3
16739: PUSH
16740: LD_INT 2
16742: PUSH
16743: EMPTY
16744: LIST
16745: LIST
16746: PUSH
16747: LD_INT 3
16749: PUSH
16750: LD_INT 3
16752: PUSH
16753: EMPTY
16754: LIST
16755: LIST
16756: PUSH
16757: LD_INT 2
16759: PUSH
16760: LD_INT 3
16762: PUSH
16763: EMPTY
16764: LIST
16765: LIST
16766: PUSH
16767: LD_INT 2
16769: NEG
16770: PUSH
16771: LD_INT 1
16773: PUSH
16774: EMPTY
16775: LIST
16776: LIST
16777: PUSH
16778: LD_INT 3
16780: NEG
16781: PUSH
16782: LD_INT 0
16784: PUSH
16785: EMPTY
16786: LIST
16787: LIST
16788: PUSH
16789: LD_INT 3
16791: NEG
16792: PUSH
16793: LD_INT 1
16795: NEG
16796: PUSH
16797: EMPTY
16798: LIST
16799: LIST
16800: PUSH
16801: LD_INT 3
16803: NEG
16804: PUSH
16805: LD_INT 2
16807: NEG
16808: PUSH
16809: EMPTY
16810: LIST
16811: LIST
16812: PUSH
16813: LD_INT 3
16815: NEG
16816: PUSH
16817: LD_INT 3
16819: NEG
16820: PUSH
16821: EMPTY
16822: LIST
16823: LIST
16824: PUSH
16825: EMPTY
16826: LIST
16827: LIST
16828: LIST
16829: LIST
16830: LIST
16831: LIST
16832: LIST
16833: LIST
16834: LIST
16835: LIST
16836: LIST
16837: LIST
16838: LIST
16839: LIST
16840: LIST
16841: LIST
16842: LIST
16843: LIST
16844: LIST
16845: LIST
16846: LIST
16847: LIST
16848: LIST
16849: LIST
16850: LIST
16851: LIST
16852: LIST
16853: LIST
16854: LIST
16855: ST_TO_ADDR
// Lab4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
16856: LD_ADDR_VAR 0 45
16860: PUSH
16861: LD_INT 0
16863: PUSH
16864: LD_INT 0
16866: PUSH
16867: EMPTY
16868: LIST
16869: LIST
16870: PUSH
16871: LD_INT 0
16873: PUSH
16874: LD_INT 1
16876: NEG
16877: PUSH
16878: EMPTY
16879: LIST
16880: LIST
16881: PUSH
16882: LD_INT 1
16884: PUSH
16885: LD_INT 0
16887: PUSH
16888: EMPTY
16889: LIST
16890: LIST
16891: PUSH
16892: LD_INT 1
16894: PUSH
16895: LD_INT 1
16897: PUSH
16898: EMPTY
16899: LIST
16900: LIST
16901: PUSH
16902: LD_INT 0
16904: PUSH
16905: LD_INT 1
16907: PUSH
16908: EMPTY
16909: LIST
16910: LIST
16911: PUSH
16912: LD_INT 1
16914: NEG
16915: PUSH
16916: LD_INT 0
16918: PUSH
16919: EMPTY
16920: LIST
16921: LIST
16922: PUSH
16923: LD_INT 1
16925: NEG
16926: PUSH
16927: LD_INT 1
16929: NEG
16930: PUSH
16931: EMPTY
16932: LIST
16933: LIST
16934: PUSH
16935: LD_INT 1
16937: NEG
16938: PUSH
16939: LD_INT 2
16941: NEG
16942: PUSH
16943: EMPTY
16944: LIST
16945: LIST
16946: PUSH
16947: LD_INT 0
16949: PUSH
16950: LD_INT 2
16952: NEG
16953: PUSH
16954: EMPTY
16955: LIST
16956: LIST
16957: PUSH
16958: LD_INT 1
16960: PUSH
16961: LD_INT 1
16963: NEG
16964: PUSH
16965: EMPTY
16966: LIST
16967: LIST
16968: PUSH
16969: LD_INT 2
16971: PUSH
16972: LD_INT 1
16974: PUSH
16975: EMPTY
16976: LIST
16977: LIST
16978: PUSH
16979: LD_INT 2
16981: PUSH
16982: LD_INT 2
16984: PUSH
16985: EMPTY
16986: LIST
16987: LIST
16988: PUSH
16989: LD_INT 1
16991: PUSH
16992: LD_INT 2
16994: PUSH
16995: EMPTY
16996: LIST
16997: LIST
16998: PUSH
16999: LD_INT 0
17001: PUSH
17002: LD_INT 2
17004: PUSH
17005: EMPTY
17006: LIST
17007: LIST
17008: PUSH
17009: LD_INT 1
17011: NEG
17012: PUSH
17013: LD_INT 1
17015: PUSH
17016: EMPTY
17017: LIST
17018: LIST
17019: PUSH
17020: LD_INT 2
17022: NEG
17023: PUSH
17024: LD_INT 1
17026: NEG
17027: PUSH
17028: EMPTY
17029: LIST
17030: LIST
17031: PUSH
17032: LD_INT 2
17034: NEG
17035: PUSH
17036: LD_INT 2
17038: NEG
17039: PUSH
17040: EMPTY
17041: LIST
17042: LIST
17043: PUSH
17044: LD_INT 2
17046: NEG
17047: PUSH
17048: LD_INT 3
17050: NEG
17051: PUSH
17052: EMPTY
17053: LIST
17054: LIST
17055: PUSH
17056: LD_INT 1
17058: NEG
17059: PUSH
17060: LD_INT 3
17062: NEG
17063: PUSH
17064: EMPTY
17065: LIST
17066: LIST
17067: PUSH
17068: LD_INT 0
17070: PUSH
17071: LD_INT 3
17073: NEG
17074: PUSH
17075: EMPTY
17076: LIST
17077: LIST
17078: PUSH
17079: LD_INT 1
17081: PUSH
17082: LD_INT 2
17084: NEG
17085: PUSH
17086: EMPTY
17087: LIST
17088: LIST
17089: PUSH
17090: LD_INT 3
17092: PUSH
17093: LD_INT 2
17095: PUSH
17096: EMPTY
17097: LIST
17098: LIST
17099: PUSH
17100: LD_INT 3
17102: PUSH
17103: LD_INT 3
17105: PUSH
17106: EMPTY
17107: LIST
17108: LIST
17109: PUSH
17110: LD_INT 2
17112: PUSH
17113: LD_INT 3
17115: PUSH
17116: EMPTY
17117: LIST
17118: LIST
17119: PUSH
17120: LD_INT 1
17122: PUSH
17123: LD_INT 3
17125: PUSH
17126: EMPTY
17127: LIST
17128: LIST
17129: PUSH
17130: LD_INT 0
17132: PUSH
17133: LD_INT 3
17135: PUSH
17136: EMPTY
17137: LIST
17138: LIST
17139: PUSH
17140: LD_INT 1
17142: NEG
17143: PUSH
17144: LD_INT 2
17146: PUSH
17147: EMPTY
17148: LIST
17149: LIST
17150: PUSH
17151: LD_INT 3
17153: NEG
17154: PUSH
17155: LD_INT 2
17157: NEG
17158: PUSH
17159: EMPTY
17160: LIST
17161: LIST
17162: PUSH
17163: LD_INT 3
17165: NEG
17166: PUSH
17167: LD_INT 3
17169: NEG
17170: PUSH
17171: EMPTY
17172: LIST
17173: LIST
17174: PUSH
17175: EMPTY
17176: LIST
17177: LIST
17178: LIST
17179: LIST
17180: LIST
17181: LIST
17182: LIST
17183: LIST
17184: LIST
17185: LIST
17186: LIST
17187: LIST
17188: LIST
17189: LIST
17190: LIST
17191: LIST
17192: LIST
17193: LIST
17194: LIST
17195: LIST
17196: LIST
17197: LIST
17198: LIST
17199: LIST
17200: LIST
17201: LIST
17202: LIST
17203: LIST
17204: LIST
17205: ST_TO_ADDR
// Lab5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
17206: LD_ADDR_VAR 0 46
17210: PUSH
17211: LD_INT 0
17213: PUSH
17214: LD_INT 0
17216: PUSH
17217: EMPTY
17218: LIST
17219: LIST
17220: PUSH
17221: LD_INT 0
17223: PUSH
17224: LD_INT 1
17226: NEG
17227: PUSH
17228: EMPTY
17229: LIST
17230: LIST
17231: PUSH
17232: LD_INT 1
17234: PUSH
17235: LD_INT 0
17237: PUSH
17238: EMPTY
17239: LIST
17240: LIST
17241: PUSH
17242: LD_INT 1
17244: PUSH
17245: LD_INT 1
17247: PUSH
17248: EMPTY
17249: LIST
17250: LIST
17251: PUSH
17252: LD_INT 0
17254: PUSH
17255: LD_INT 1
17257: PUSH
17258: EMPTY
17259: LIST
17260: LIST
17261: PUSH
17262: LD_INT 1
17264: NEG
17265: PUSH
17266: LD_INT 0
17268: PUSH
17269: EMPTY
17270: LIST
17271: LIST
17272: PUSH
17273: LD_INT 1
17275: NEG
17276: PUSH
17277: LD_INT 1
17279: NEG
17280: PUSH
17281: EMPTY
17282: LIST
17283: LIST
17284: PUSH
17285: LD_INT 1
17287: NEG
17288: PUSH
17289: LD_INT 2
17291: NEG
17292: PUSH
17293: EMPTY
17294: LIST
17295: LIST
17296: PUSH
17297: LD_INT 0
17299: PUSH
17300: LD_INT 2
17302: NEG
17303: PUSH
17304: EMPTY
17305: LIST
17306: LIST
17307: PUSH
17308: LD_INT 1
17310: PUSH
17311: LD_INT 1
17313: NEG
17314: PUSH
17315: EMPTY
17316: LIST
17317: LIST
17318: PUSH
17319: LD_INT 2
17321: PUSH
17322: LD_INT 0
17324: PUSH
17325: EMPTY
17326: LIST
17327: LIST
17328: PUSH
17329: LD_INT 2
17331: PUSH
17332: LD_INT 1
17334: PUSH
17335: EMPTY
17336: LIST
17337: LIST
17338: PUSH
17339: LD_INT 1
17341: PUSH
17342: LD_INT 2
17344: PUSH
17345: EMPTY
17346: LIST
17347: LIST
17348: PUSH
17349: LD_INT 0
17351: PUSH
17352: LD_INT 2
17354: PUSH
17355: EMPTY
17356: LIST
17357: LIST
17358: PUSH
17359: LD_INT 1
17361: NEG
17362: PUSH
17363: LD_INT 1
17365: PUSH
17366: EMPTY
17367: LIST
17368: LIST
17369: PUSH
17370: LD_INT 2
17372: NEG
17373: PUSH
17374: LD_INT 0
17376: PUSH
17377: EMPTY
17378: LIST
17379: LIST
17380: PUSH
17381: LD_INT 2
17383: NEG
17384: PUSH
17385: LD_INT 1
17387: NEG
17388: PUSH
17389: EMPTY
17390: LIST
17391: LIST
17392: PUSH
17393: LD_INT 1
17395: NEG
17396: PUSH
17397: LD_INT 3
17399: NEG
17400: PUSH
17401: EMPTY
17402: LIST
17403: LIST
17404: PUSH
17405: LD_INT 0
17407: PUSH
17408: LD_INT 3
17410: NEG
17411: PUSH
17412: EMPTY
17413: LIST
17414: LIST
17415: PUSH
17416: LD_INT 1
17418: PUSH
17419: LD_INT 2
17421: NEG
17422: PUSH
17423: EMPTY
17424: LIST
17425: LIST
17426: PUSH
17427: LD_INT 2
17429: PUSH
17430: LD_INT 1
17432: NEG
17433: PUSH
17434: EMPTY
17435: LIST
17436: LIST
17437: PUSH
17438: LD_INT 3
17440: PUSH
17441: LD_INT 0
17443: PUSH
17444: EMPTY
17445: LIST
17446: LIST
17447: PUSH
17448: LD_INT 3
17450: PUSH
17451: LD_INT 1
17453: PUSH
17454: EMPTY
17455: LIST
17456: LIST
17457: PUSH
17458: LD_INT 1
17460: PUSH
17461: LD_INT 3
17463: PUSH
17464: EMPTY
17465: LIST
17466: LIST
17467: PUSH
17468: LD_INT 0
17470: PUSH
17471: LD_INT 3
17473: PUSH
17474: EMPTY
17475: LIST
17476: LIST
17477: PUSH
17478: LD_INT 1
17480: NEG
17481: PUSH
17482: LD_INT 2
17484: PUSH
17485: EMPTY
17486: LIST
17487: LIST
17488: PUSH
17489: LD_INT 2
17491: NEG
17492: PUSH
17493: LD_INT 1
17495: PUSH
17496: EMPTY
17497: LIST
17498: LIST
17499: PUSH
17500: LD_INT 3
17502: NEG
17503: PUSH
17504: LD_INT 0
17506: PUSH
17507: EMPTY
17508: LIST
17509: LIST
17510: PUSH
17511: LD_INT 3
17513: NEG
17514: PUSH
17515: LD_INT 1
17517: NEG
17518: PUSH
17519: EMPTY
17520: LIST
17521: LIST
17522: PUSH
17523: EMPTY
17524: LIST
17525: LIST
17526: LIST
17527: LIST
17528: LIST
17529: LIST
17530: LIST
17531: LIST
17532: LIST
17533: LIST
17534: LIST
17535: LIST
17536: LIST
17537: LIST
17538: LIST
17539: LIST
17540: LIST
17541: LIST
17542: LIST
17543: LIST
17544: LIST
17545: LIST
17546: LIST
17547: LIST
17548: LIST
17549: LIST
17550: LIST
17551: LIST
17552: LIST
17553: ST_TO_ADDR
// ControlTower0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
17554: LD_ADDR_VAR 0 47
17558: PUSH
17559: LD_INT 0
17561: PUSH
17562: LD_INT 0
17564: PUSH
17565: EMPTY
17566: LIST
17567: LIST
17568: PUSH
17569: LD_INT 0
17571: PUSH
17572: LD_INT 1
17574: NEG
17575: PUSH
17576: EMPTY
17577: LIST
17578: LIST
17579: PUSH
17580: LD_INT 1
17582: PUSH
17583: LD_INT 0
17585: PUSH
17586: EMPTY
17587: LIST
17588: LIST
17589: PUSH
17590: LD_INT 1
17592: PUSH
17593: LD_INT 1
17595: PUSH
17596: EMPTY
17597: LIST
17598: LIST
17599: PUSH
17600: LD_INT 0
17602: PUSH
17603: LD_INT 1
17605: PUSH
17606: EMPTY
17607: LIST
17608: LIST
17609: PUSH
17610: LD_INT 1
17612: NEG
17613: PUSH
17614: LD_INT 0
17616: PUSH
17617: EMPTY
17618: LIST
17619: LIST
17620: PUSH
17621: LD_INT 1
17623: NEG
17624: PUSH
17625: LD_INT 1
17627: NEG
17628: PUSH
17629: EMPTY
17630: LIST
17631: LIST
17632: PUSH
17633: LD_INT 1
17635: NEG
17636: PUSH
17637: LD_INT 2
17639: NEG
17640: PUSH
17641: EMPTY
17642: LIST
17643: LIST
17644: PUSH
17645: LD_INT 0
17647: PUSH
17648: LD_INT 2
17650: NEG
17651: PUSH
17652: EMPTY
17653: LIST
17654: LIST
17655: PUSH
17656: LD_INT 1
17658: PUSH
17659: LD_INT 1
17661: NEG
17662: PUSH
17663: EMPTY
17664: LIST
17665: LIST
17666: PUSH
17667: LD_INT 2
17669: NEG
17670: PUSH
17671: LD_INT 1
17673: NEG
17674: PUSH
17675: EMPTY
17676: LIST
17677: LIST
17678: PUSH
17679: LD_INT 2
17681: NEG
17682: PUSH
17683: LD_INT 2
17685: NEG
17686: PUSH
17687: EMPTY
17688: LIST
17689: LIST
17690: PUSH
17691: EMPTY
17692: LIST
17693: LIST
17694: LIST
17695: LIST
17696: LIST
17697: LIST
17698: LIST
17699: LIST
17700: LIST
17701: LIST
17702: LIST
17703: LIST
17704: ST_TO_ADDR
// ControlTower1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
17705: LD_ADDR_VAR 0 48
17709: PUSH
17710: LD_INT 0
17712: PUSH
17713: LD_INT 0
17715: PUSH
17716: EMPTY
17717: LIST
17718: LIST
17719: PUSH
17720: LD_INT 0
17722: PUSH
17723: LD_INT 1
17725: NEG
17726: PUSH
17727: EMPTY
17728: LIST
17729: LIST
17730: PUSH
17731: LD_INT 1
17733: PUSH
17734: LD_INT 0
17736: PUSH
17737: EMPTY
17738: LIST
17739: LIST
17740: PUSH
17741: LD_INT 1
17743: PUSH
17744: LD_INT 1
17746: PUSH
17747: EMPTY
17748: LIST
17749: LIST
17750: PUSH
17751: LD_INT 0
17753: PUSH
17754: LD_INT 1
17756: PUSH
17757: EMPTY
17758: LIST
17759: LIST
17760: PUSH
17761: LD_INT 1
17763: NEG
17764: PUSH
17765: LD_INT 0
17767: PUSH
17768: EMPTY
17769: LIST
17770: LIST
17771: PUSH
17772: LD_INT 1
17774: NEG
17775: PUSH
17776: LD_INT 1
17778: NEG
17779: PUSH
17780: EMPTY
17781: LIST
17782: LIST
17783: PUSH
17784: LD_INT 1
17786: NEG
17787: PUSH
17788: LD_INT 2
17790: NEG
17791: PUSH
17792: EMPTY
17793: LIST
17794: LIST
17795: PUSH
17796: LD_INT 0
17798: PUSH
17799: LD_INT 2
17801: NEG
17802: PUSH
17803: EMPTY
17804: LIST
17805: LIST
17806: PUSH
17807: LD_INT 1
17809: PUSH
17810: LD_INT 1
17812: NEG
17813: PUSH
17814: EMPTY
17815: LIST
17816: LIST
17817: PUSH
17818: LD_INT 2
17820: PUSH
17821: LD_INT 0
17823: PUSH
17824: EMPTY
17825: LIST
17826: LIST
17827: PUSH
17828: LD_INT 2
17830: PUSH
17831: LD_INT 1
17833: PUSH
17834: EMPTY
17835: LIST
17836: LIST
17837: PUSH
17838: EMPTY
17839: LIST
17840: LIST
17841: LIST
17842: LIST
17843: LIST
17844: LIST
17845: LIST
17846: LIST
17847: LIST
17848: LIST
17849: LIST
17850: LIST
17851: ST_TO_ADDR
// ControlTower2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
17852: LD_ADDR_VAR 0 49
17856: PUSH
17857: LD_INT 0
17859: PUSH
17860: LD_INT 0
17862: PUSH
17863: EMPTY
17864: LIST
17865: LIST
17866: PUSH
17867: LD_INT 0
17869: PUSH
17870: LD_INT 1
17872: NEG
17873: PUSH
17874: EMPTY
17875: LIST
17876: LIST
17877: PUSH
17878: LD_INT 1
17880: PUSH
17881: LD_INT 0
17883: PUSH
17884: EMPTY
17885: LIST
17886: LIST
17887: PUSH
17888: LD_INT 1
17890: PUSH
17891: LD_INT 1
17893: PUSH
17894: EMPTY
17895: LIST
17896: LIST
17897: PUSH
17898: LD_INT 0
17900: PUSH
17901: LD_INT 1
17903: PUSH
17904: EMPTY
17905: LIST
17906: LIST
17907: PUSH
17908: LD_INT 1
17910: NEG
17911: PUSH
17912: LD_INT 0
17914: PUSH
17915: EMPTY
17916: LIST
17917: LIST
17918: PUSH
17919: LD_INT 1
17921: NEG
17922: PUSH
17923: LD_INT 1
17925: NEG
17926: PUSH
17927: EMPTY
17928: LIST
17929: LIST
17930: PUSH
17931: LD_INT 1
17933: PUSH
17934: LD_INT 1
17936: NEG
17937: PUSH
17938: EMPTY
17939: LIST
17940: LIST
17941: PUSH
17942: LD_INT 2
17944: PUSH
17945: LD_INT 0
17947: PUSH
17948: EMPTY
17949: LIST
17950: LIST
17951: PUSH
17952: LD_INT 2
17954: PUSH
17955: LD_INT 1
17957: PUSH
17958: EMPTY
17959: LIST
17960: LIST
17961: PUSH
17962: LD_INT 2
17964: PUSH
17965: LD_INT 2
17967: PUSH
17968: EMPTY
17969: LIST
17970: LIST
17971: PUSH
17972: LD_INT 1
17974: PUSH
17975: LD_INT 2
17977: PUSH
17978: EMPTY
17979: LIST
17980: LIST
17981: PUSH
17982: EMPTY
17983: LIST
17984: LIST
17985: LIST
17986: LIST
17987: LIST
17988: LIST
17989: LIST
17990: LIST
17991: LIST
17992: LIST
17993: LIST
17994: LIST
17995: ST_TO_ADDR
// ControlTower3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
17996: LD_ADDR_VAR 0 50
18000: PUSH
18001: LD_INT 0
18003: PUSH
18004: LD_INT 0
18006: PUSH
18007: EMPTY
18008: LIST
18009: LIST
18010: PUSH
18011: LD_INT 0
18013: PUSH
18014: LD_INT 1
18016: NEG
18017: PUSH
18018: EMPTY
18019: LIST
18020: LIST
18021: PUSH
18022: LD_INT 1
18024: PUSH
18025: LD_INT 0
18027: PUSH
18028: EMPTY
18029: LIST
18030: LIST
18031: PUSH
18032: LD_INT 1
18034: PUSH
18035: LD_INT 1
18037: PUSH
18038: EMPTY
18039: LIST
18040: LIST
18041: PUSH
18042: LD_INT 0
18044: PUSH
18045: LD_INT 1
18047: PUSH
18048: EMPTY
18049: LIST
18050: LIST
18051: PUSH
18052: LD_INT 1
18054: NEG
18055: PUSH
18056: LD_INT 0
18058: PUSH
18059: EMPTY
18060: LIST
18061: LIST
18062: PUSH
18063: LD_INT 1
18065: NEG
18066: PUSH
18067: LD_INT 1
18069: NEG
18070: PUSH
18071: EMPTY
18072: LIST
18073: LIST
18074: PUSH
18075: LD_INT 2
18077: PUSH
18078: LD_INT 1
18080: PUSH
18081: EMPTY
18082: LIST
18083: LIST
18084: PUSH
18085: LD_INT 2
18087: PUSH
18088: LD_INT 2
18090: PUSH
18091: EMPTY
18092: LIST
18093: LIST
18094: PUSH
18095: LD_INT 1
18097: PUSH
18098: LD_INT 2
18100: PUSH
18101: EMPTY
18102: LIST
18103: LIST
18104: PUSH
18105: LD_INT 0
18107: PUSH
18108: LD_INT 2
18110: PUSH
18111: EMPTY
18112: LIST
18113: LIST
18114: PUSH
18115: LD_INT 1
18117: NEG
18118: PUSH
18119: LD_INT 1
18121: PUSH
18122: EMPTY
18123: LIST
18124: LIST
18125: PUSH
18126: EMPTY
18127: LIST
18128: LIST
18129: LIST
18130: LIST
18131: LIST
18132: LIST
18133: LIST
18134: LIST
18135: LIST
18136: LIST
18137: LIST
18138: LIST
18139: ST_TO_ADDR
// ControlTower4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
18140: LD_ADDR_VAR 0 51
18144: PUSH
18145: LD_INT 0
18147: PUSH
18148: LD_INT 0
18150: PUSH
18151: EMPTY
18152: LIST
18153: LIST
18154: PUSH
18155: LD_INT 0
18157: PUSH
18158: LD_INT 1
18160: NEG
18161: PUSH
18162: EMPTY
18163: LIST
18164: LIST
18165: PUSH
18166: LD_INT 1
18168: PUSH
18169: LD_INT 0
18171: PUSH
18172: EMPTY
18173: LIST
18174: LIST
18175: PUSH
18176: LD_INT 1
18178: PUSH
18179: LD_INT 1
18181: PUSH
18182: EMPTY
18183: LIST
18184: LIST
18185: PUSH
18186: LD_INT 0
18188: PUSH
18189: LD_INT 1
18191: PUSH
18192: EMPTY
18193: LIST
18194: LIST
18195: PUSH
18196: LD_INT 1
18198: NEG
18199: PUSH
18200: LD_INT 0
18202: PUSH
18203: EMPTY
18204: LIST
18205: LIST
18206: PUSH
18207: LD_INT 1
18209: NEG
18210: PUSH
18211: LD_INT 1
18213: NEG
18214: PUSH
18215: EMPTY
18216: LIST
18217: LIST
18218: PUSH
18219: LD_INT 1
18221: PUSH
18222: LD_INT 2
18224: PUSH
18225: EMPTY
18226: LIST
18227: LIST
18228: PUSH
18229: LD_INT 0
18231: PUSH
18232: LD_INT 2
18234: PUSH
18235: EMPTY
18236: LIST
18237: LIST
18238: PUSH
18239: LD_INT 1
18241: NEG
18242: PUSH
18243: LD_INT 1
18245: PUSH
18246: EMPTY
18247: LIST
18248: LIST
18249: PUSH
18250: LD_INT 2
18252: NEG
18253: PUSH
18254: LD_INT 0
18256: PUSH
18257: EMPTY
18258: LIST
18259: LIST
18260: PUSH
18261: LD_INT 2
18263: NEG
18264: PUSH
18265: LD_INT 1
18267: NEG
18268: PUSH
18269: EMPTY
18270: LIST
18271: LIST
18272: PUSH
18273: EMPTY
18274: LIST
18275: LIST
18276: LIST
18277: LIST
18278: LIST
18279: LIST
18280: LIST
18281: LIST
18282: LIST
18283: LIST
18284: LIST
18285: LIST
18286: ST_TO_ADDR
// ControlTower5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18287: LD_ADDR_VAR 0 52
18291: PUSH
18292: LD_INT 0
18294: PUSH
18295: LD_INT 0
18297: PUSH
18298: EMPTY
18299: LIST
18300: LIST
18301: PUSH
18302: LD_INT 0
18304: PUSH
18305: LD_INT 1
18307: NEG
18308: PUSH
18309: EMPTY
18310: LIST
18311: LIST
18312: PUSH
18313: LD_INT 1
18315: PUSH
18316: LD_INT 0
18318: PUSH
18319: EMPTY
18320: LIST
18321: LIST
18322: PUSH
18323: LD_INT 1
18325: PUSH
18326: LD_INT 1
18328: PUSH
18329: EMPTY
18330: LIST
18331: LIST
18332: PUSH
18333: LD_INT 0
18335: PUSH
18336: LD_INT 1
18338: PUSH
18339: EMPTY
18340: LIST
18341: LIST
18342: PUSH
18343: LD_INT 1
18345: NEG
18346: PUSH
18347: LD_INT 0
18349: PUSH
18350: EMPTY
18351: LIST
18352: LIST
18353: PUSH
18354: LD_INT 1
18356: NEG
18357: PUSH
18358: LD_INT 1
18360: NEG
18361: PUSH
18362: EMPTY
18363: LIST
18364: LIST
18365: PUSH
18366: LD_INT 1
18368: NEG
18369: PUSH
18370: LD_INT 2
18372: NEG
18373: PUSH
18374: EMPTY
18375: LIST
18376: LIST
18377: PUSH
18378: LD_INT 1
18380: NEG
18381: PUSH
18382: LD_INT 1
18384: PUSH
18385: EMPTY
18386: LIST
18387: LIST
18388: PUSH
18389: LD_INT 2
18391: NEG
18392: PUSH
18393: LD_INT 0
18395: PUSH
18396: EMPTY
18397: LIST
18398: LIST
18399: PUSH
18400: LD_INT 2
18402: NEG
18403: PUSH
18404: LD_INT 1
18406: NEG
18407: PUSH
18408: EMPTY
18409: LIST
18410: LIST
18411: PUSH
18412: LD_INT 2
18414: NEG
18415: PUSH
18416: LD_INT 2
18418: NEG
18419: PUSH
18420: EMPTY
18421: LIST
18422: LIST
18423: PUSH
18424: EMPTY
18425: LIST
18426: LIST
18427: LIST
18428: LIST
18429: LIST
18430: LIST
18431: LIST
18432: LIST
18433: LIST
18434: LIST
18435: LIST
18436: LIST
18437: ST_TO_ADDR
// Barracks0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18438: LD_ADDR_VAR 0 53
18442: PUSH
18443: LD_INT 0
18445: PUSH
18446: LD_INT 0
18448: PUSH
18449: EMPTY
18450: LIST
18451: LIST
18452: PUSH
18453: LD_INT 0
18455: PUSH
18456: LD_INT 1
18458: NEG
18459: PUSH
18460: EMPTY
18461: LIST
18462: LIST
18463: PUSH
18464: LD_INT 1
18466: PUSH
18467: LD_INT 0
18469: PUSH
18470: EMPTY
18471: LIST
18472: LIST
18473: PUSH
18474: LD_INT 1
18476: PUSH
18477: LD_INT 1
18479: PUSH
18480: EMPTY
18481: LIST
18482: LIST
18483: PUSH
18484: LD_INT 0
18486: PUSH
18487: LD_INT 1
18489: PUSH
18490: EMPTY
18491: LIST
18492: LIST
18493: PUSH
18494: LD_INT 1
18496: NEG
18497: PUSH
18498: LD_INT 0
18500: PUSH
18501: EMPTY
18502: LIST
18503: LIST
18504: PUSH
18505: LD_INT 1
18507: NEG
18508: PUSH
18509: LD_INT 1
18511: NEG
18512: PUSH
18513: EMPTY
18514: LIST
18515: LIST
18516: PUSH
18517: LD_INT 1
18519: NEG
18520: PUSH
18521: LD_INT 2
18523: NEG
18524: PUSH
18525: EMPTY
18526: LIST
18527: LIST
18528: PUSH
18529: LD_INT 0
18531: PUSH
18532: LD_INT 2
18534: NEG
18535: PUSH
18536: EMPTY
18537: LIST
18538: LIST
18539: PUSH
18540: LD_INT 1
18542: PUSH
18543: LD_INT 1
18545: NEG
18546: PUSH
18547: EMPTY
18548: LIST
18549: LIST
18550: PUSH
18551: LD_INT 2
18553: PUSH
18554: LD_INT 0
18556: PUSH
18557: EMPTY
18558: LIST
18559: LIST
18560: PUSH
18561: LD_INT 2
18563: PUSH
18564: LD_INT 1
18566: PUSH
18567: EMPTY
18568: LIST
18569: LIST
18570: PUSH
18571: LD_INT 2
18573: PUSH
18574: LD_INT 2
18576: PUSH
18577: EMPTY
18578: LIST
18579: LIST
18580: PUSH
18581: LD_INT 1
18583: PUSH
18584: LD_INT 2
18586: PUSH
18587: EMPTY
18588: LIST
18589: LIST
18590: PUSH
18591: LD_INT 0
18593: PUSH
18594: LD_INT 2
18596: PUSH
18597: EMPTY
18598: LIST
18599: LIST
18600: PUSH
18601: LD_INT 1
18603: NEG
18604: PUSH
18605: LD_INT 1
18607: PUSH
18608: EMPTY
18609: LIST
18610: LIST
18611: PUSH
18612: LD_INT 2
18614: NEG
18615: PUSH
18616: LD_INT 0
18618: PUSH
18619: EMPTY
18620: LIST
18621: LIST
18622: PUSH
18623: LD_INT 2
18625: NEG
18626: PUSH
18627: LD_INT 1
18629: NEG
18630: PUSH
18631: EMPTY
18632: LIST
18633: LIST
18634: PUSH
18635: LD_INT 2
18637: NEG
18638: PUSH
18639: LD_INT 2
18641: NEG
18642: PUSH
18643: EMPTY
18644: LIST
18645: LIST
18646: PUSH
18647: EMPTY
18648: LIST
18649: LIST
18650: LIST
18651: LIST
18652: LIST
18653: LIST
18654: LIST
18655: LIST
18656: LIST
18657: LIST
18658: LIST
18659: LIST
18660: LIST
18661: LIST
18662: LIST
18663: LIST
18664: LIST
18665: LIST
18666: LIST
18667: ST_TO_ADDR
// Barracks1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18668: LD_ADDR_VAR 0 54
18672: PUSH
18673: LD_INT 0
18675: PUSH
18676: LD_INT 0
18678: PUSH
18679: EMPTY
18680: LIST
18681: LIST
18682: PUSH
18683: LD_INT 0
18685: PUSH
18686: LD_INT 1
18688: NEG
18689: PUSH
18690: EMPTY
18691: LIST
18692: LIST
18693: PUSH
18694: LD_INT 1
18696: PUSH
18697: LD_INT 0
18699: PUSH
18700: EMPTY
18701: LIST
18702: LIST
18703: PUSH
18704: LD_INT 1
18706: PUSH
18707: LD_INT 1
18709: PUSH
18710: EMPTY
18711: LIST
18712: LIST
18713: PUSH
18714: LD_INT 0
18716: PUSH
18717: LD_INT 1
18719: PUSH
18720: EMPTY
18721: LIST
18722: LIST
18723: PUSH
18724: LD_INT 1
18726: NEG
18727: PUSH
18728: LD_INT 0
18730: PUSH
18731: EMPTY
18732: LIST
18733: LIST
18734: PUSH
18735: LD_INT 1
18737: NEG
18738: PUSH
18739: LD_INT 1
18741: NEG
18742: PUSH
18743: EMPTY
18744: LIST
18745: LIST
18746: PUSH
18747: LD_INT 1
18749: NEG
18750: PUSH
18751: LD_INT 2
18753: NEG
18754: PUSH
18755: EMPTY
18756: LIST
18757: LIST
18758: PUSH
18759: LD_INT 0
18761: PUSH
18762: LD_INT 2
18764: NEG
18765: PUSH
18766: EMPTY
18767: LIST
18768: LIST
18769: PUSH
18770: LD_INT 1
18772: PUSH
18773: LD_INT 1
18775: NEG
18776: PUSH
18777: EMPTY
18778: LIST
18779: LIST
18780: PUSH
18781: LD_INT 2
18783: PUSH
18784: LD_INT 0
18786: PUSH
18787: EMPTY
18788: LIST
18789: LIST
18790: PUSH
18791: LD_INT 2
18793: PUSH
18794: LD_INT 1
18796: PUSH
18797: EMPTY
18798: LIST
18799: LIST
18800: PUSH
18801: LD_INT 2
18803: PUSH
18804: LD_INT 2
18806: PUSH
18807: EMPTY
18808: LIST
18809: LIST
18810: PUSH
18811: LD_INT 1
18813: PUSH
18814: LD_INT 2
18816: PUSH
18817: EMPTY
18818: LIST
18819: LIST
18820: PUSH
18821: LD_INT 0
18823: PUSH
18824: LD_INT 2
18826: PUSH
18827: EMPTY
18828: LIST
18829: LIST
18830: PUSH
18831: LD_INT 1
18833: NEG
18834: PUSH
18835: LD_INT 1
18837: PUSH
18838: EMPTY
18839: LIST
18840: LIST
18841: PUSH
18842: LD_INT 2
18844: NEG
18845: PUSH
18846: LD_INT 0
18848: PUSH
18849: EMPTY
18850: LIST
18851: LIST
18852: PUSH
18853: LD_INT 2
18855: NEG
18856: PUSH
18857: LD_INT 1
18859: NEG
18860: PUSH
18861: EMPTY
18862: LIST
18863: LIST
18864: PUSH
18865: LD_INT 2
18867: NEG
18868: PUSH
18869: LD_INT 2
18871: NEG
18872: PUSH
18873: EMPTY
18874: LIST
18875: LIST
18876: PUSH
18877: EMPTY
18878: LIST
18879: LIST
18880: LIST
18881: LIST
18882: LIST
18883: LIST
18884: LIST
18885: LIST
18886: LIST
18887: LIST
18888: LIST
18889: LIST
18890: LIST
18891: LIST
18892: LIST
18893: LIST
18894: LIST
18895: LIST
18896: LIST
18897: ST_TO_ADDR
// Barracks2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
18898: LD_ADDR_VAR 0 55
18902: PUSH
18903: LD_INT 0
18905: PUSH
18906: LD_INT 0
18908: PUSH
18909: EMPTY
18910: LIST
18911: LIST
18912: PUSH
18913: LD_INT 0
18915: PUSH
18916: LD_INT 1
18918: NEG
18919: PUSH
18920: EMPTY
18921: LIST
18922: LIST
18923: PUSH
18924: LD_INT 1
18926: PUSH
18927: LD_INT 0
18929: PUSH
18930: EMPTY
18931: LIST
18932: LIST
18933: PUSH
18934: LD_INT 1
18936: PUSH
18937: LD_INT 1
18939: PUSH
18940: EMPTY
18941: LIST
18942: LIST
18943: PUSH
18944: LD_INT 0
18946: PUSH
18947: LD_INT 1
18949: PUSH
18950: EMPTY
18951: LIST
18952: LIST
18953: PUSH
18954: LD_INT 1
18956: NEG
18957: PUSH
18958: LD_INT 0
18960: PUSH
18961: EMPTY
18962: LIST
18963: LIST
18964: PUSH
18965: LD_INT 1
18967: NEG
18968: PUSH
18969: LD_INT 1
18971: NEG
18972: PUSH
18973: EMPTY
18974: LIST
18975: LIST
18976: PUSH
18977: LD_INT 1
18979: NEG
18980: PUSH
18981: LD_INT 2
18983: NEG
18984: PUSH
18985: EMPTY
18986: LIST
18987: LIST
18988: PUSH
18989: LD_INT 0
18991: PUSH
18992: LD_INT 2
18994: NEG
18995: PUSH
18996: EMPTY
18997: LIST
18998: LIST
18999: PUSH
19000: LD_INT 1
19002: PUSH
19003: LD_INT 1
19005: NEG
19006: PUSH
19007: EMPTY
19008: LIST
19009: LIST
19010: PUSH
19011: LD_INT 2
19013: PUSH
19014: LD_INT 0
19016: PUSH
19017: EMPTY
19018: LIST
19019: LIST
19020: PUSH
19021: LD_INT 2
19023: PUSH
19024: LD_INT 1
19026: PUSH
19027: EMPTY
19028: LIST
19029: LIST
19030: PUSH
19031: LD_INT 2
19033: PUSH
19034: LD_INT 2
19036: PUSH
19037: EMPTY
19038: LIST
19039: LIST
19040: PUSH
19041: LD_INT 1
19043: PUSH
19044: LD_INT 2
19046: PUSH
19047: EMPTY
19048: LIST
19049: LIST
19050: PUSH
19051: LD_INT 0
19053: PUSH
19054: LD_INT 2
19056: PUSH
19057: EMPTY
19058: LIST
19059: LIST
19060: PUSH
19061: LD_INT 1
19063: NEG
19064: PUSH
19065: LD_INT 1
19067: PUSH
19068: EMPTY
19069: LIST
19070: LIST
19071: PUSH
19072: LD_INT 2
19074: NEG
19075: PUSH
19076: LD_INT 0
19078: PUSH
19079: EMPTY
19080: LIST
19081: LIST
19082: PUSH
19083: LD_INT 2
19085: NEG
19086: PUSH
19087: LD_INT 1
19089: NEG
19090: PUSH
19091: EMPTY
19092: LIST
19093: LIST
19094: PUSH
19095: LD_INT 2
19097: NEG
19098: PUSH
19099: LD_INT 2
19101: NEG
19102: PUSH
19103: EMPTY
19104: LIST
19105: LIST
19106: PUSH
19107: EMPTY
19108: LIST
19109: LIST
19110: LIST
19111: LIST
19112: LIST
19113: LIST
19114: LIST
19115: LIST
19116: LIST
19117: LIST
19118: LIST
19119: LIST
19120: LIST
19121: LIST
19122: LIST
19123: LIST
19124: LIST
19125: LIST
19126: LIST
19127: ST_TO_ADDR
// Barracks3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19128: LD_ADDR_VAR 0 56
19132: PUSH
19133: LD_INT 0
19135: PUSH
19136: LD_INT 0
19138: PUSH
19139: EMPTY
19140: LIST
19141: LIST
19142: PUSH
19143: LD_INT 0
19145: PUSH
19146: LD_INT 1
19148: NEG
19149: PUSH
19150: EMPTY
19151: LIST
19152: LIST
19153: PUSH
19154: LD_INT 1
19156: PUSH
19157: LD_INT 0
19159: PUSH
19160: EMPTY
19161: LIST
19162: LIST
19163: PUSH
19164: LD_INT 1
19166: PUSH
19167: LD_INT 1
19169: PUSH
19170: EMPTY
19171: LIST
19172: LIST
19173: PUSH
19174: LD_INT 0
19176: PUSH
19177: LD_INT 1
19179: PUSH
19180: EMPTY
19181: LIST
19182: LIST
19183: PUSH
19184: LD_INT 1
19186: NEG
19187: PUSH
19188: LD_INT 0
19190: PUSH
19191: EMPTY
19192: LIST
19193: LIST
19194: PUSH
19195: LD_INT 1
19197: NEG
19198: PUSH
19199: LD_INT 1
19201: NEG
19202: PUSH
19203: EMPTY
19204: LIST
19205: LIST
19206: PUSH
19207: LD_INT 1
19209: NEG
19210: PUSH
19211: LD_INT 2
19213: NEG
19214: PUSH
19215: EMPTY
19216: LIST
19217: LIST
19218: PUSH
19219: LD_INT 0
19221: PUSH
19222: LD_INT 2
19224: NEG
19225: PUSH
19226: EMPTY
19227: LIST
19228: LIST
19229: PUSH
19230: LD_INT 1
19232: PUSH
19233: LD_INT 1
19235: NEG
19236: PUSH
19237: EMPTY
19238: LIST
19239: LIST
19240: PUSH
19241: LD_INT 2
19243: PUSH
19244: LD_INT 0
19246: PUSH
19247: EMPTY
19248: LIST
19249: LIST
19250: PUSH
19251: LD_INT 2
19253: PUSH
19254: LD_INT 1
19256: PUSH
19257: EMPTY
19258: LIST
19259: LIST
19260: PUSH
19261: LD_INT 2
19263: PUSH
19264: LD_INT 2
19266: PUSH
19267: EMPTY
19268: LIST
19269: LIST
19270: PUSH
19271: LD_INT 1
19273: PUSH
19274: LD_INT 2
19276: PUSH
19277: EMPTY
19278: LIST
19279: LIST
19280: PUSH
19281: LD_INT 0
19283: PUSH
19284: LD_INT 2
19286: PUSH
19287: EMPTY
19288: LIST
19289: LIST
19290: PUSH
19291: LD_INT 1
19293: NEG
19294: PUSH
19295: LD_INT 1
19297: PUSH
19298: EMPTY
19299: LIST
19300: LIST
19301: PUSH
19302: LD_INT 2
19304: NEG
19305: PUSH
19306: LD_INT 0
19308: PUSH
19309: EMPTY
19310: LIST
19311: LIST
19312: PUSH
19313: LD_INT 2
19315: NEG
19316: PUSH
19317: LD_INT 1
19319: NEG
19320: PUSH
19321: EMPTY
19322: LIST
19323: LIST
19324: PUSH
19325: LD_INT 2
19327: NEG
19328: PUSH
19329: LD_INT 2
19331: NEG
19332: PUSH
19333: EMPTY
19334: LIST
19335: LIST
19336: PUSH
19337: EMPTY
19338: LIST
19339: LIST
19340: LIST
19341: LIST
19342: LIST
19343: LIST
19344: LIST
19345: LIST
19346: LIST
19347: LIST
19348: LIST
19349: LIST
19350: LIST
19351: LIST
19352: LIST
19353: LIST
19354: LIST
19355: LIST
19356: LIST
19357: ST_TO_ADDR
// Barracks4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19358: LD_ADDR_VAR 0 57
19362: PUSH
19363: LD_INT 0
19365: PUSH
19366: LD_INT 0
19368: PUSH
19369: EMPTY
19370: LIST
19371: LIST
19372: PUSH
19373: LD_INT 0
19375: PUSH
19376: LD_INT 1
19378: NEG
19379: PUSH
19380: EMPTY
19381: LIST
19382: LIST
19383: PUSH
19384: LD_INT 1
19386: PUSH
19387: LD_INT 0
19389: PUSH
19390: EMPTY
19391: LIST
19392: LIST
19393: PUSH
19394: LD_INT 1
19396: PUSH
19397: LD_INT 1
19399: PUSH
19400: EMPTY
19401: LIST
19402: LIST
19403: PUSH
19404: LD_INT 0
19406: PUSH
19407: LD_INT 1
19409: PUSH
19410: EMPTY
19411: LIST
19412: LIST
19413: PUSH
19414: LD_INT 1
19416: NEG
19417: PUSH
19418: LD_INT 0
19420: PUSH
19421: EMPTY
19422: LIST
19423: LIST
19424: PUSH
19425: LD_INT 1
19427: NEG
19428: PUSH
19429: LD_INT 1
19431: NEG
19432: PUSH
19433: EMPTY
19434: LIST
19435: LIST
19436: PUSH
19437: LD_INT 1
19439: NEG
19440: PUSH
19441: LD_INT 2
19443: NEG
19444: PUSH
19445: EMPTY
19446: LIST
19447: LIST
19448: PUSH
19449: LD_INT 0
19451: PUSH
19452: LD_INT 2
19454: NEG
19455: PUSH
19456: EMPTY
19457: LIST
19458: LIST
19459: PUSH
19460: LD_INT 1
19462: PUSH
19463: LD_INT 1
19465: NEG
19466: PUSH
19467: EMPTY
19468: LIST
19469: LIST
19470: PUSH
19471: LD_INT 2
19473: PUSH
19474: LD_INT 0
19476: PUSH
19477: EMPTY
19478: LIST
19479: LIST
19480: PUSH
19481: LD_INT 2
19483: PUSH
19484: LD_INT 1
19486: PUSH
19487: EMPTY
19488: LIST
19489: LIST
19490: PUSH
19491: LD_INT 2
19493: PUSH
19494: LD_INT 2
19496: PUSH
19497: EMPTY
19498: LIST
19499: LIST
19500: PUSH
19501: LD_INT 1
19503: PUSH
19504: LD_INT 2
19506: PUSH
19507: EMPTY
19508: LIST
19509: LIST
19510: PUSH
19511: LD_INT 0
19513: PUSH
19514: LD_INT 2
19516: PUSH
19517: EMPTY
19518: LIST
19519: LIST
19520: PUSH
19521: LD_INT 1
19523: NEG
19524: PUSH
19525: LD_INT 1
19527: PUSH
19528: EMPTY
19529: LIST
19530: LIST
19531: PUSH
19532: LD_INT 2
19534: NEG
19535: PUSH
19536: LD_INT 0
19538: PUSH
19539: EMPTY
19540: LIST
19541: LIST
19542: PUSH
19543: LD_INT 2
19545: NEG
19546: PUSH
19547: LD_INT 1
19549: NEG
19550: PUSH
19551: EMPTY
19552: LIST
19553: LIST
19554: PUSH
19555: LD_INT 2
19557: NEG
19558: PUSH
19559: LD_INT 2
19561: NEG
19562: PUSH
19563: EMPTY
19564: LIST
19565: LIST
19566: PUSH
19567: EMPTY
19568: LIST
19569: LIST
19570: LIST
19571: LIST
19572: LIST
19573: LIST
19574: LIST
19575: LIST
19576: LIST
19577: LIST
19578: LIST
19579: LIST
19580: LIST
19581: LIST
19582: LIST
19583: LIST
19584: LIST
19585: LIST
19586: LIST
19587: ST_TO_ADDR
// Barracks5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] , [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
19588: LD_ADDR_VAR 0 58
19592: PUSH
19593: LD_INT 0
19595: PUSH
19596: LD_INT 0
19598: PUSH
19599: EMPTY
19600: LIST
19601: LIST
19602: PUSH
19603: LD_INT 0
19605: PUSH
19606: LD_INT 1
19608: NEG
19609: PUSH
19610: EMPTY
19611: LIST
19612: LIST
19613: PUSH
19614: LD_INT 1
19616: PUSH
19617: LD_INT 0
19619: PUSH
19620: EMPTY
19621: LIST
19622: LIST
19623: PUSH
19624: LD_INT 1
19626: PUSH
19627: LD_INT 1
19629: PUSH
19630: EMPTY
19631: LIST
19632: LIST
19633: PUSH
19634: LD_INT 0
19636: PUSH
19637: LD_INT 1
19639: PUSH
19640: EMPTY
19641: LIST
19642: LIST
19643: PUSH
19644: LD_INT 1
19646: NEG
19647: PUSH
19648: LD_INT 0
19650: PUSH
19651: EMPTY
19652: LIST
19653: LIST
19654: PUSH
19655: LD_INT 1
19657: NEG
19658: PUSH
19659: LD_INT 1
19661: NEG
19662: PUSH
19663: EMPTY
19664: LIST
19665: LIST
19666: PUSH
19667: LD_INT 1
19669: NEG
19670: PUSH
19671: LD_INT 2
19673: NEG
19674: PUSH
19675: EMPTY
19676: LIST
19677: LIST
19678: PUSH
19679: LD_INT 0
19681: PUSH
19682: LD_INT 2
19684: NEG
19685: PUSH
19686: EMPTY
19687: LIST
19688: LIST
19689: PUSH
19690: LD_INT 1
19692: PUSH
19693: LD_INT 1
19695: NEG
19696: PUSH
19697: EMPTY
19698: LIST
19699: LIST
19700: PUSH
19701: LD_INT 2
19703: PUSH
19704: LD_INT 0
19706: PUSH
19707: EMPTY
19708: LIST
19709: LIST
19710: PUSH
19711: LD_INT 2
19713: PUSH
19714: LD_INT 1
19716: PUSH
19717: EMPTY
19718: LIST
19719: LIST
19720: PUSH
19721: LD_INT 2
19723: PUSH
19724: LD_INT 2
19726: PUSH
19727: EMPTY
19728: LIST
19729: LIST
19730: PUSH
19731: LD_INT 1
19733: PUSH
19734: LD_INT 2
19736: PUSH
19737: EMPTY
19738: LIST
19739: LIST
19740: PUSH
19741: LD_INT 0
19743: PUSH
19744: LD_INT 2
19746: PUSH
19747: EMPTY
19748: LIST
19749: LIST
19750: PUSH
19751: LD_INT 1
19753: NEG
19754: PUSH
19755: LD_INT 1
19757: PUSH
19758: EMPTY
19759: LIST
19760: LIST
19761: PUSH
19762: LD_INT 2
19764: NEG
19765: PUSH
19766: LD_INT 0
19768: PUSH
19769: EMPTY
19770: LIST
19771: LIST
19772: PUSH
19773: LD_INT 2
19775: NEG
19776: PUSH
19777: LD_INT 1
19779: NEG
19780: PUSH
19781: EMPTY
19782: LIST
19783: LIST
19784: PUSH
19785: LD_INT 2
19787: NEG
19788: PUSH
19789: LD_INT 2
19791: NEG
19792: PUSH
19793: EMPTY
19794: LIST
19795: LIST
19796: PUSH
19797: EMPTY
19798: LIST
19799: LIST
19800: LIST
19801: LIST
19802: LIST
19803: LIST
19804: LIST
19805: LIST
19806: LIST
19807: LIST
19808: LIST
19809: LIST
19810: LIST
19811: LIST
19812: LIST
19813: LIST
19814: LIST
19815: LIST
19816: LIST
19817: ST_TO_ADDR
// Bunker0 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19818: LD_ADDR_VAR 0 59
19822: PUSH
19823: LD_INT 0
19825: PUSH
19826: LD_INT 0
19828: PUSH
19829: EMPTY
19830: LIST
19831: LIST
19832: PUSH
19833: LD_INT 0
19835: PUSH
19836: LD_INT 1
19838: NEG
19839: PUSH
19840: EMPTY
19841: LIST
19842: LIST
19843: PUSH
19844: LD_INT 1
19846: PUSH
19847: LD_INT 0
19849: PUSH
19850: EMPTY
19851: LIST
19852: LIST
19853: PUSH
19854: LD_INT 1
19856: PUSH
19857: LD_INT 1
19859: PUSH
19860: EMPTY
19861: LIST
19862: LIST
19863: PUSH
19864: LD_INT 0
19866: PUSH
19867: LD_INT 1
19869: PUSH
19870: EMPTY
19871: LIST
19872: LIST
19873: PUSH
19874: LD_INT 1
19876: NEG
19877: PUSH
19878: LD_INT 0
19880: PUSH
19881: EMPTY
19882: LIST
19883: LIST
19884: PUSH
19885: LD_INT 1
19887: NEG
19888: PUSH
19889: LD_INT 1
19891: NEG
19892: PUSH
19893: EMPTY
19894: LIST
19895: LIST
19896: PUSH
19897: EMPTY
19898: LIST
19899: LIST
19900: LIST
19901: LIST
19902: LIST
19903: LIST
19904: LIST
19905: ST_TO_ADDR
// Bunker1 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19906: LD_ADDR_VAR 0 60
19910: PUSH
19911: LD_INT 0
19913: PUSH
19914: LD_INT 0
19916: PUSH
19917: EMPTY
19918: LIST
19919: LIST
19920: PUSH
19921: LD_INT 0
19923: PUSH
19924: LD_INT 1
19926: NEG
19927: PUSH
19928: EMPTY
19929: LIST
19930: LIST
19931: PUSH
19932: LD_INT 1
19934: PUSH
19935: LD_INT 0
19937: PUSH
19938: EMPTY
19939: LIST
19940: LIST
19941: PUSH
19942: LD_INT 1
19944: PUSH
19945: LD_INT 1
19947: PUSH
19948: EMPTY
19949: LIST
19950: LIST
19951: PUSH
19952: LD_INT 0
19954: PUSH
19955: LD_INT 1
19957: PUSH
19958: EMPTY
19959: LIST
19960: LIST
19961: PUSH
19962: LD_INT 1
19964: NEG
19965: PUSH
19966: LD_INT 0
19968: PUSH
19969: EMPTY
19970: LIST
19971: LIST
19972: PUSH
19973: LD_INT 1
19975: NEG
19976: PUSH
19977: LD_INT 1
19979: NEG
19980: PUSH
19981: EMPTY
19982: LIST
19983: LIST
19984: PUSH
19985: EMPTY
19986: LIST
19987: LIST
19988: LIST
19989: LIST
19990: LIST
19991: LIST
19992: LIST
19993: ST_TO_ADDR
// Bunker2 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
19994: LD_ADDR_VAR 0 61
19998: PUSH
19999: LD_INT 0
20001: PUSH
20002: LD_INT 0
20004: PUSH
20005: EMPTY
20006: LIST
20007: LIST
20008: PUSH
20009: LD_INT 0
20011: PUSH
20012: LD_INT 1
20014: NEG
20015: PUSH
20016: EMPTY
20017: LIST
20018: LIST
20019: PUSH
20020: LD_INT 1
20022: PUSH
20023: LD_INT 0
20025: PUSH
20026: EMPTY
20027: LIST
20028: LIST
20029: PUSH
20030: LD_INT 1
20032: PUSH
20033: LD_INT 1
20035: PUSH
20036: EMPTY
20037: LIST
20038: LIST
20039: PUSH
20040: LD_INT 0
20042: PUSH
20043: LD_INT 1
20045: PUSH
20046: EMPTY
20047: LIST
20048: LIST
20049: PUSH
20050: LD_INT 1
20052: NEG
20053: PUSH
20054: LD_INT 0
20056: PUSH
20057: EMPTY
20058: LIST
20059: LIST
20060: PUSH
20061: LD_INT 1
20063: NEG
20064: PUSH
20065: LD_INT 1
20067: NEG
20068: PUSH
20069: EMPTY
20070: LIST
20071: LIST
20072: PUSH
20073: EMPTY
20074: LIST
20075: LIST
20076: LIST
20077: LIST
20078: LIST
20079: LIST
20080: LIST
20081: ST_TO_ADDR
// Bunker3 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20082: LD_ADDR_VAR 0 62
20086: PUSH
20087: LD_INT 0
20089: PUSH
20090: LD_INT 0
20092: PUSH
20093: EMPTY
20094: LIST
20095: LIST
20096: PUSH
20097: LD_INT 0
20099: PUSH
20100: LD_INT 1
20102: NEG
20103: PUSH
20104: EMPTY
20105: LIST
20106: LIST
20107: PUSH
20108: LD_INT 1
20110: PUSH
20111: LD_INT 0
20113: PUSH
20114: EMPTY
20115: LIST
20116: LIST
20117: PUSH
20118: LD_INT 1
20120: PUSH
20121: LD_INT 1
20123: PUSH
20124: EMPTY
20125: LIST
20126: LIST
20127: PUSH
20128: LD_INT 0
20130: PUSH
20131: LD_INT 1
20133: PUSH
20134: EMPTY
20135: LIST
20136: LIST
20137: PUSH
20138: LD_INT 1
20140: NEG
20141: PUSH
20142: LD_INT 0
20144: PUSH
20145: EMPTY
20146: LIST
20147: LIST
20148: PUSH
20149: LD_INT 1
20151: NEG
20152: PUSH
20153: LD_INT 1
20155: NEG
20156: PUSH
20157: EMPTY
20158: LIST
20159: LIST
20160: PUSH
20161: EMPTY
20162: LIST
20163: LIST
20164: LIST
20165: LIST
20166: LIST
20167: LIST
20168: LIST
20169: ST_TO_ADDR
// Bunker4 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20170: LD_ADDR_VAR 0 63
20174: PUSH
20175: LD_INT 0
20177: PUSH
20178: LD_INT 0
20180: PUSH
20181: EMPTY
20182: LIST
20183: LIST
20184: PUSH
20185: LD_INT 0
20187: PUSH
20188: LD_INT 1
20190: NEG
20191: PUSH
20192: EMPTY
20193: LIST
20194: LIST
20195: PUSH
20196: LD_INT 1
20198: PUSH
20199: LD_INT 0
20201: PUSH
20202: EMPTY
20203: LIST
20204: LIST
20205: PUSH
20206: LD_INT 1
20208: PUSH
20209: LD_INT 1
20211: PUSH
20212: EMPTY
20213: LIST
20214: LIST
20215: PUSH
20216: LD_INT 0
20218: PUSH
20219: LD_INT 1
20221: PUSH
20222: EMPTY
20223: LIST
20224: LIST
20225: PUSH
20226: LD_INT 1
20228: NEG
20229: PUSH
20230: LD_INT 0
20232: PUSH
20233: EMPTY
20234: LIST
20235: LIST
20236: PUSH
20237: LD_INT 1
20239: NEG
20240: PUSH
20241: LD_INT 1
20243: NEG
20244: PUSH
20245: EMPTY
20246: LIST
20247: LIST
20248: PUSH
20249: EMPTY
20250: LIST
20251: LIST
20252: LIST
20253: LIST
20254: LIST
20255: LIST
20256: LIST
20257: ST_TO_ADDR
// Bunker5 = [ [ 0 , 0 ] , [ 0 , - 1 ] , [ 1 , 0 ] , [ 1 , 1 ] , [ 0 , 1 ] , [ - 1 , 0 ] , [ - 1 , - 1 ] ] ;
20258: LD_ADDR_VAR 0 64
20262: PUSH
20263: LD_INT 0
20265: PUSH
20266: LD_INT 0
20268: PUSH
20269: EMPTY
20270: LIST
20271: LIST
20272: PUSH
20273: LD_INT 0
20275: PUSH
20276: LD_INT 1
20278: NEG
20279: PUSH
20280: EMPTY
20281: LIST
20282: LIST
20283: PUSH
20284: LD_INT 1
20286: PUSH
20287: LD_INT 0
20289: PUSH
20290: EMPTY
20291: LIST
20292: LIST
20293: PUSH
20294: LD_INT 1
20296: PUSH
20297: LD_INT 1
20299: PUSH
20300: EMPTY
20301: LIST
20302: LIST
20303: PUSH
20304: LD_INT 0
20306: PUSH
20307: LD_INT 1
20309: PUSH
20310: EMPTY
20311: LIST
20312: LIST
20313: PUSH
20314: LD_INT 1
20316: NEG
20317: PUSH
20318: LD_INT 0
20320: PUSH
20321: EMPTY
20322: LIST
20323: LIST
20324: PUSH
20325: LD_INT 1
20327: NEG
20328: PUSH
20329: LD_INT 1
20331: NEG
20332: PUSH
20333: EMPTY
20334: LIST
20335: LIST
20336: PUSH
20337: EMPTY
20338: LIST
20339: LIST
20340: LIST
20341: LIST
20342: LIST
20343: LIST
20344: LIST
20345: ST_TO_ADDR
// end ; 1 :
20346: GO 26243
20348: LD_INT 1
20350: DOUBLE
20351: EQUAL
20352: IFTRUE 20356
20354: GO 22979
20356: POP
// begin DepotAm0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20357: LD_ADDR_VAR 0 11
20361: PUSH
20362: LD_INT 1
20364: NEG
20365: PUSH
20366: LD_INT 3
20368: NEG
20369: PUSH
20370: EMPTY
20371: LIST
20372: LIST
20373: PUSH
20374: LD_INT 0
20376: PUSH
20377: LD_INT 3
20379: NEG
20380: PUSH
20381: EMPTY
20382: LIST
20383: LIST
20384: PUSH
20385: LD_INT 1
20387: PUSH
20388: LD_INT 2
20390: NEG
20391: PUSH
20392: EMPTY
20393: LIST
20394: LIST
20395: PUSH
20396: EMPTY
20397: LIST
20398: LIST
20399: LIST
20400: ST_TO_ADDR
// DepotAm1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20401: LD_ADDR_VAR 0 12
20405: PUSH
20406: LD_INT 2
20408: PUSH
20409: LD_INT 1
20411: NEG
20412: PUSH
20413: EMPTY
20414: LIST
20415: LIST
20416: PUSH
20417: LD_INT 3
20419: PUSH
20420: LD_INT 0
20422: PUSH
20423: EMPTY
20424: LIST
20425: LIST
20426: PUSH
20427: LD_INT 3
20429: PUSH
20430: LD_INT 1
20432: PUSH
20433: EMPTY
20434: LIST
20435: LIST
20436: PUSH
20437: EMPTY
20438: LIST
20439: LIST
20440: LIST
20441: ST_TO_ADDR
// DepotAm2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20442: LD_ADDR_VAR 0 13
20446: PUSH
20447: LD_INT 3
20449: PUSH
20450: LD_INT 2
20452: PUSH
20453: EMPTY
20454: LIST
20455: LIST
20456: PUSH
20457: LD_INT 3
20459: PUSH
20460: LD_INT 3
20462: PUSH
20463: EMPTY
20464: LIST
20465: LIST
20466: PUSH
20467: LD_INT 2
20469: PUSH
20470: LD_INT 3
20472: PUSH
20473: EMPTY
20474: LIST
20475: LIST
20476: PUSH
20477: EMPTY
20478: LIST
20479: LIST
20480: LIST
20481: ST_TO_ADDR
// DepotAm3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20482: LD_ADDR_VAR 0 14
20486: PUSH
20487: LD_INT 1
20489: PUSH
20490: LD_INT 3
20492: PUSH
20493: EMPTY
20494: LIST
20495: LIST
20496: PUSH
20497: LD_INT 0
20499: PUSH
20500: LD_INT 3
20502: PUSH
20503: EMPTY
20504: LIST
20505: LIST
20506: PUSH
20507: LD_INT 1
20509: NEG
20510: PUSH
20511: LD_INT 2
20513: PUSH
20514: EMPTY
20515: LIST
20516: LIST
20517: PUSH
20518: EMPTY
20519: LIST
20520: LIST
20521: LIST
20522: ST_TO_ADDR
// DepotAm4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20523: LD_ADDR_VAR 0 15
20527: PUSH
20528: LD_INT 2
20530: NEG
20531: PUSH
20532: LD_INT 1
20534: PUSH
20535: EMPTY
20536: LIST
20537: LIST
20538: PUSH
20539: LD_INT 3
20541: NEG
20542: PUSH
20543: LD_INT 0
20545: PUSH
20546: EMPTY
20547: LIST
20548: LIST
20549: PUSH
20550: LD_INT 3
20552: NEG
20553: PUSH
20554: LD_INT 1
20556: NEG
20557: PUSH
20558: EMPTY
20559: LIST
20560: LIST
20561: PUSH
20562: EMPTY
20563: LIST
20564: LIST
20565: LIST
20566: ST_TO_ADDR
// DepotAm5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20567: LD_ADDR_VAR 0 16
20571: PUSH
20572: LD_INT 2
20574: NEG
20575: PUSH
20576: LD_INT 3
20578: NEG
20579: PUSH
20580: EMPTY
20581: LIST
20582: LIST
20583: PUSH
20584: LD_INT 3
20586: NEG
20587: PUSH
20588: LD_INT 2
20590: NEG
20591: PUSH
20592: EMPTY
20593: LIST
20594: LIST
20595: PUSH
20596: LD_INT 3
20598: NEG
20599: PUSH
20600: LD_INT 3
20602: NEG
20603: PUSH
20604: EMPTY
20605: LIST
20606: LIST
20607: PUSH
20608: EMPTY
20609: LIST
20610: LIST
20611: LIST
20612: ST_TO_ADDR
// DepotAr0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
20613: LD_ADDR_VAR 0 17
20617: PUSH
20618: LD_INT 1
20620: NEG
20621: PUSH
20622: LD_INT 3
20624: NEG
20625: PUSH
20626: EMPTY
20627: LIST
20628: LIST
20629: PUSH
20630: LD_INT 0
20632: PUSH
20633: LD_INT 3
20635: NEG
20636: PUSH
20637: EMPTY
20638: LIST
20639: LIST
20640: PUSH
20641: LD_INT 1
20643: PUSH
20644: LD_INT 2
20646: NEG
20647: PUSH
20648: EMPTY
20649: LIST
20650: LIST
20651: PUSH
20652: EMPTY
20653: LIST
20654: LIST
20655: LIST
20656: ST_TO_ADDR
// DepotAr1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
20657: LD_ADDR_VAR 0 18
20661: PUSH
20662: LD_INT 2
20664: PUSH
20665: LD_INT 1
20667: NEG
20668: PUSH
20669: EMPTY
20670: LIST
20671: LIST
20672: PUSH
20673: LD_INT 3
20675: PUSH
20676: LD_INT 0
20678: PUSH
20679: EMPTY
20680: LIST
20681: LIST
20682: PUSH
20683: LD_INT 3
20685: PUSH
20686: LD_INT 1
20688: PUSH
20689: EMPTY
20690: LIST
20691: LIST
20692: PUSH
20693: EMPTY
20694: LIST
20695: LIST
20696: LIST
20697: ST_TO_ADDR
// DepotAr2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
20698: LD_ADDR_VAR 0 19
20702: PUSH
20703: LD_INT 3
20705: PUSH
20706: LD_INT 2
20708: PUSH
20709: EMPTY
20710: LIST
20711: LIST
20712: PUSH
20713: LD_INT 3
20715: PUSH
20716: LD_INT 3
20718: PUSH
20719: EMPTY
20720: LIST
20721: LIST
20722: PUSH
20723: LD_INT 2
20725: PUSH
20726: LD_INT 3
20728: PUSH
20729: EMPTY
20730: LIST
20731: LIST
20732: PUSH
20733: EMPTY
20734: LIST
20735: LIST
20736: LIST
20737: ST_TO_ADDR
// DepotAr3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
20738: LD_ADDR_VAR 0 20
20742: PUSH
20743: LD_INT 1
20745: PUSH
20746: LD_INT 3
20748: PUSH
20749: EMPTY
20750: LIST
20751: LIST
20752: PUSH
20753: LD_INT 0
20755: PUSH
20756: LD_INT 3
20758: PUSH
20759: EMPTY
20760: LIST
20761: LIST
20762: PUSH
20763: LD_INT 1
20765: NEG
20766: PUSH
20767: LD_INT 2
20769: PUSH
20770: EMPTY
20771: LIST
20772: LIST
20773: PUSH
20774: EMPTY
20775: LIST
20776: LIST
20777: LIST
20778: ST_TO_ADDR
// DepotAr4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
20779: LD_ADDR_VAR 0 21
20783: PUSH
20784: LD_INT 2
20786: NEG
20787: PUSH
20788: LD_INT 1
20790: PUSH
20791: EMPTY
20792: LIST
20793: LIST
20794: PUSH
20795: LD_INT 3
20797: NEG
20798: PUSH
20799: LD_INT 0
20801: PUSH
20802: EMPTY
20803: LIST
20804: LIST
20805: PUSH
20806: LD_INT 3
20808: NEG
20809: PUSH
20810: LD_INT 1
20812: NEG
20813: PUSH
20814: EMPTY
20815: LIST
20816: LIST
20817: PUSH
20818: EMPTY
20819: LIST
20820: LIST
20821: LIST
20822: ST_TO_ADDR
// DepotAr5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
20823: LD_ADDR_VAR 0 22
20827: PUSH
20828: LD_INT 2
20830: NEG
20831: PUSH
20832: LD_INT 3
20834: NEG
20835: PUSH
20836: EMPTY
20837: LIST
20838: LIST
20839: PUSH
20840: LD_INT 3
20842: NEG
20843: PUSH
20844: LD_INT 2
20846: NEG
20847: PUSH
20848: EMPTY
20849: LIST
20850: LIST
20851: PUSH
20852: LD_INT 3
20854: NEG
20855: PUSH
20856: LD_INT 3
20858: NEG
20859: PUSH
20860: EMPTY
20861: LIST
20862: LIST
20863: PUSH
20864: EMPTY
20865: LIST
20866: LIST
20867: LIST
20868: ST_TO_ADDR
// DepotRu0 = [ [ 0 , - 3 ] , [ - 1 , - 4 ] , [ 1 , - 3 ] ] ;
20869: LD_ADDR_VAR 0 23
20873: PUSH
20874: LD_INT 0
20876: PUSH
20877: LD_INT 3
20879: NEG
20880: PUSH
20881: EMPTY
20882: LIST
20883: LIST
20884: PUSH
20885: LD_INT 1
20887: NEG
20888: PUSH
20889: LD_INT 4
20891: NEG
20892: PUSH
20893: EMPTY
20894: LIST
20895: LIST
20896: PUSH
20897: LD_INT 1
20899: PUSH
20900: LD_INT 3
20902: NEG
20903: PUSH
20904: EMPTY
20905: LIST
20906: LIST
20907: PUSH
20908: EMPTY
20909: LIST
20910: LIST
20911: LIST
20912: ST_TO_ADDR
// DepotRu1 = [ [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 1 ] ] ;
20913: LD_ADDR_VAR 0 24
20917: PUSH
20918: LD_INT 3
20920: PUSH
20921: LD_INT 0
20923: PUSH
20924: EMPTY
20925: LIST
20926: LIST
20927: PUSH
20928: LD_INT 3
20930: PUSH
20931: LD_INT 1
20933: NEG
20934: PUSH
20935: EMPTY
20936: LIST
20937: LIST
20938: PUSH
20939: LD_INT 4
20941: PUSH
20942: LD_INT 1
20944: PUSH
20945: EMPTY
20946: LIST
20947: LIST
20948: PUSH
20949: EMPTY
20950: LIST
20951: LIST
20952: LIST
20953: ST_TO_ADDR
// DepotRu2 = [ [ 3 , 3 ] , [ 4 , 3 ] , [ 3 , 4 ] ] ;
20954: LD_ADDR_VAR 0 25
20958: PUSH
20959: LD_INT 3
20961: PUSH
20962: LD_INT 3
20964: PUSH
20965: EMPTY
20966: LIST
20967: LIST
20968: PUSH
20969: LD_INT 4
20971: PUSH
20972: LD_INT 3
20974: PUSH
20975: EMPTY
20976: LIST
20977: LIST
20978: PUSH
20979: LD_INT 3
20981: PUSH
20982: LD_INT 4
20984: PUSH
20985: EMPTY
20986: LIST
20987: LIST
20988: PUSH
20989: EMPTY
20990: LIST
20991: LIST
20992: LIST
20993: ST_TO_ADDR
// DepotRu3 = [ [ 0 , 3 ] , [ 1 , 4 ] , [ - 1 , 3 ] ] ;
20994: LD_ADDR_VAR 0 26
20998: PUSH
20999: LD_INT 0
21001: PUSH
21002: LD_INT 3
21004: PUSH
21005: EMPTY
21006: LIST
21007: LIST
21008: PUSH
21009: LD_INT 1
21011: PUSH
21012: LD_INT 4
21014: PUSH
21015: EMPTY
21016: LIST
21017: LIST
21018: PUSH
21019: LD_INT 1
21021: NEG
21022: PUSH
21023: LD_INT 3
21025: PUSH
21026: EMPTY
21027: LIST
21028: LIST
21029: PUSH
21030: EMPTY
21031: LIST
21032: LIST
21033: LIST
21034: ST_TO_ADDR
// DepotRu4 = [ [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , - 1 ] ] ;
21035: LD_ADDR_VAR 0 27
21039: PUSH
21040: LD_INT 3
21042: NEG
21043: PUSH
21044: LD_INT 0
21046: PUSH
21047: EMPTY
21048: LIST
21049: LIST
21050: PUSH
21051: LD_INT 3
21053: NEG
21054: PUSH
21055: LD_INT 1
21057: PUSH
21058: EMPTY
21059: LIST
21060: LIST
21061: PUSH
21062: LD_INT 4
21064: NEG
21065: PUSH
21066: LD_INT 1
21068: NEG
21069: PUSH
21070: EMPTY
21071: LIST
21072: LIST
21073: PUSH
21074: EMPTY
21075: LIST
21076: LIST
21077: LIST
21078: ST_TO_ADDR
// DepotRu5 = [ [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] ] ;
21079: LD_ADDR_VAR 0 28
21083: PUSH
21084: LD_INT 3
21086: NEG
21087: PUSH
21088: LD_INT 3
21090: NEG
21091: PUSH
21092: EMPTY
21093: LIST
21094: LIST
21095: PUSH
21096: LD_INT 3
21098: NEG
21099: PUSH
21100: LD_INT 4
21102: NEG
21103: PUSH
21104: EMPTY
21105: LIST
21106: LIST
21107: PUSH
21108: LD_INT 4
21110: NEG
21111: PUSH
21112: LD_INT 3
21114: NEG
21115: PUSH
21116: EMPTY
21117: LIST
21118: LIST
21119: PUSH
21120: EMPTY
21121: LIST
21122: LIST
21123: LIST
21124: ST_TO_ADDR
// Factory0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] , [ - 1 , - 4 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ - 1 , - 5 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ - 1 , - 6 ] , [ 0 , - 6 ] , [ 1 , - 5 ] ] ;
21125: LD_ADDR_VAR 0 29
21129: PUSH
21130: LD_INT 1
21132: NEG
21133: PUSH
21134: LD_INT 3
21136: NEG
21137: PUSH
21138: EMPTY
21139: LIST
21140: LIST
21141: PUSH
21142: LD_INT 0
21144: PUSH
21145: LD_INT 3
21147: NEG
21148: PUSH
21149: EMPTY
21150: LIST
21151: LIST
21152: PUSH
21153: LD_INT 1
21155: PUSH
21156: LD_INT 2
21158: NEG
21159: PUSH
21160: EMPTY
21161: LIST
21162: LIST
21163: PUSH
21164: LD_INT 1
21166: NEG
21167: PUSH
21168: LD_INT 4
21170: NEG
21171: PUSH
21172: EMPTY
21173: LIST
21174: LIST
21175: PUSH
21176: LD_INT 0
21178: PUSH
21179: LD_INT 4
21181: NEG
21182: PUSH
21183: EMPTY
21184: LIST
21185: LIST
21186: PUSH
21187: LD_INT 1
21189: PUSH
21190: LD_INT 3
21192: NEG
21193: PUSH
21194: EMPTY
21195: LIST
21196: LIST
21197: PUSH
21198: LD_INT 1
21200: NEG
21201: PUSH
21202: LD_INT 5
21204: NEG
21205: PUSH
21206: EMPTY
21207: LIST
21208: LIST
21209: PUSH
21210: LD_INT 0
21212: PUSH
21213: LD_INT 5
21215: NEG
21216: PUSH
21217: EMPTY
21218: LIST
21219: LIST
21220: PUSH
21221: LD_INT 1
21223: PUSH
21224: LD_INT 4
21226: NEG
21227: PUSH
21228: EMPTY
21229: LIST
21230: LIST
21231: PUSH
21232: LD_INT 1
21234: NEG
21235: PUSH
21236: LD_INT 6
21238: NEG
21239: PUSH
21240: EMPTY
21241: LIST
21242: LIST
21243: PUSH
21244: LD_INT 0
21246: PUSH
21247: LD_INT 6
21249: NEG
21250: PUSH
21251: EMPTY
21252: LIST
21253: LIST
21254: PUSH
21255: LD_INT 1
21257: PUSH
21258: LD_INT 5
21260: NEG
21261: PUSH
21262: EMPTY
21263: LIST
21264: LIST
21265: PUSH
21266: EMPTY
21267: LIST
21268: LIST
21269: LIST
21270: LIST
21271: LIST
21272: LIST
21273: LIST
21274: LIST
21275: LIST
21276: LIST
21277: LIST
21278: LIST
21279: ST_TO_ADDR
// Factory1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 5 , - 1 ] , [ 6 , 0 ] , [ 6 , 1 ] ] ;
21280: LD_ADDR_VAR 0 30
21284: PUSH
21285: LD_INT 2
21287: PUSH
21288: LD_INT 1
21290: NEG
21291: PUSH
21292: EMPTY
21293: LIST
21294: LIST
21295: PUSH
21296: LD_INT 3
21298: PUSH
21299: LD_INT 0
21301: PUSH
21302: EMPTY
21303: LIST
21304: LIST
21305: PUSH
21306: LD_INT 3
21308: PUSH
21309: LD_INT 1
21311: PUSH
21312: EMPTY
21313: LIST
21314: LIST
21315: PUSH
21316: LD_INT 3
21318: PUSH
21319: LD_INT 1
21321: NEG
21322: PUSH
21323: EMPTY
21324: LIST
21325: LIST
21326: PUSH
21327: LD_INT 4
21329: PUSH
21330: LD_INT 0
21332: PUSH
21333: EMPTY
21334: LIST
21335: LIST
21336: PUSH
21337: LD_INT 4
21339: PUSH
21340: LD_INT 1
21342: PUSH
21343: EMPTY
21344: LIST
21345: LIST
21346: PUSH
21347: LD_INT 4
21349: PUSH
21350: LD_INT 1
21352: NEG
21353: PUSH
21354: EMPTY
21355: LIST
21356: LIST
21357: PUSH
21358: LD_INT 5
21360: PUSH
21361: LD_INT 0
21363: PUSH
21364: EMPTY
21365: LIST
21366: LIST
21367: PUSH
21368: LD_INT 5
21370: PUSH
21371: LD_INT 1
21373: PUSH
21374: EMPTY
21375: LIST
21376: LIST
21377: PUSH
21378: LD_INT 5
21380: PUSH
21381: LD_INT 1
21383: NEG
21384: PUSH
21385: EMPTY
21386: LIST
21387: LIST
21388: PUSH
21389: LD_INT 6
21391: PUSH
21392: LD_INT 0
21394: PUSH
21395: EMPTY
21396: LIST
21397: LIST
21398: PUSH
21399: LD_INT 6
21401: PUSH
21402: LD_INT 1
21404: PUSH
21405: EMPTY
21406: LIST
21407: LIST
21408: PUSH
21409: EMPTY
21410: LIST
21411: LIST
21412: LIST
21413: LIST
21414: LIST
21415: LIST
21416: LIST
21417: LIST
21418: LIST
21419: LIST
21420: LIST
21421: LIST
21422: ST_TO_ADDR
// Factory2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 6 , 5 ] , [ 6 , 6 ] , [ 5 , 6 ] ] ;
21423: LD_ADDR_VAR 0 31
21427: PUSH
21428: LD_INT 3
21430: PUSH
21431: LD_INT 2
21433: PUSH
21434: EMPTY
21435: LIST
21436: LIST
21437: PUSH
21438: LD_INT 3
21440: PUSH
21441: LD_INT 3
21443: PUSH
21444: EMPTY
21445: LIST
21446: LIST
21447: PUSH
21448: LD_INT 2
21450: PUSH
21451: LD_INT 3
21453: PUSH
21454: EMPTY
21455: LIST
21456: LIST
21457: PUSH
21458: LD_INT 4
21460: PUSH
21461: LD_INT 3
21463: PUSH
21464: EMPTY
21465: LIST
21466: LIST
21467: PUSH
21468: LD_INT 4
21470: PUSH
21471: LD_INT 4
21473: PUSH
21474: EMPTY
21475: LIST
21476: LIST
21477: PUSH
21478: LD_INT 3
21480: PUSH
21481: LD_INT 4
21483: PUSH
21484: EMPTY
21485: LIST
21486: LIST
21487: PUSH
21488: LD_INT 5
21490: PUSH
21491: LD_INT 4
21493: PUSH
21494: EMPTY
21495: LIST
21496: LIST
21497: PUSH
21498: LD_INT 5
21500: PUSH
21501: LD_INT 5
21503: PUSH
21504: EMPTY
21505: LIST
21506: LIST
21507: PUSH
21508: LD_INT 4
21510: PUSH
21511: LD_INT 5
21513: PUSH
21514: EMPTY
21515: LIST
21516: LIST
21517: PUSH
21518: LD_INT 6
21520: PUSH
21521: LD_INT 5
21523: PUSH
21524: EMPTY
21525: LIST
21526: LIST
21527: PUSH
21528: LD_INT 6
21530: PUSH
21531: LD_INT 6
21533: PUSH
21534: EMPTY
21535: LIST
21536: LIST
21537: PUSH
21538: LD_INT 5
21540: PUSH
21541: LD_INT 6
21543: PUSH
21544: EMPTY
21545: LIST
21546: LIST
21547: PUSH
21548: EMPTY
21549: LIST
21550: LIST
21551: LIST
21552: LIST
21553: LIST
21554: LIST
21555: LIST
21556: LIST
21557: LIST
21558: LIST
21559: LIST
21560: LIST
21561: ST_TO_ADDR
// Factory3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ 1 , 6 ] , [ 0 , 6 ] , [ - 1 , 5 ] ] ;
21562: LD_ADDR_VAR 0 32
21566: PUSH
21567: LD_INT 1
21569: PUSH
21570: LD_INT 3
21572: PUSH
21573: EMPTY
21574: LIST
21575: LIST
21576: PUSH
21577: LD_INT 0
21579: PUSH
21580: LD_INT 3
21582: PUSH
21583: EMPTY
21584: LIST
21585: LIST
21586: PUSH
21587: LD_INT 1
21589: NEG
21590: PUSH
21591: LD_INT 2
21593: PUSH
21594: EMPTY
21595: LIST
21596: LIST
21597: PUSH
21598: LD_INT 1
21600: PUSH
21601: LD_INT 4
21603: PUSH
21604: EMPTY
21605: LIST
21606: LIST
21607: PUSH
21608: LD_INT 0
21610: PUSH
21611: LD_INT 4
21613: PUSH
21614: EMPTY
21615: LIST
21616: LIST
21617: PUSH
21618: LD_INT 1
21620: NEG
21621: PUSH
21622: LD_INT 3
21624: PUSH
21625: EMPTY
21626: LIST
21627: LIST
21628: PUSH
21629: LD_INT 1
21631: PUSH
21632: LD_INT 5
21634: PUSH
21635: EMPTY
21636: LIST
21637: LIST
21638: PUSH
21639: LD_INT 0
21641: PUSH
21642: LD_INT 5
21644: PUSH
21645: EMPTY
21646: LIST
21647: LIST
21648: PUSH
21649: LD_INT 1
21651: NEG
21652: PUSH
21653: LD_INT 4
21655: PUSH
21656: EMPTY
21657: LIST
21658: LIST
21659: PUSH
21660: LD_INT 1
21662: PUSH
21663: LD_INT 6
21665: PUSH
21666: EMPTY
21667: LIST
21668: LIST
21669: PUSH
21670: LD_INT 0
21672: PUSH
21673: LD_INT 6
21675: PUSH
21676: EMPTY
21677: LIST
21678: LIST
21679: PUSH
21680: LD_INT 1
21682: NEG
21683: PUSH
21684: LD_INT 5
21686: PUSH
21687: EMPTY
21688: LIST
21689: LIST
21690: PUSH
21691: EMPTY
21692: LIST
21693: LIST
21694: LIST
21695: LIST
21696: LIST
21697: LIST
21698: LIST
21699: LIST
21700: LIST
21701: LIST
21702: LIST
21703: LIST
21704: ST_TO_ADDR
// Factory4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , 1 ] , [ - 6 , 0 ] , [ - 6 , - 1 ] ] ;
21705: LD_ADDR_VAR 0 33
21709: PUSH
21710: LD_INT 2
21712: NEG
21713: PUSH
21714: LD_INT 1
21716: PUSH
21717: EMPTY
21718: LIST
21719: LIST
21720: PUSH
21721: LD_INT 3
21723: NEG
21724: PUSH
21725: LD_INT 0
21727: PUSH
21728: EMPTY
21729: LIST
21730: LIST
21731: PUSH
21732: LD_INT 3
21734: NEG
21735: PUSH
21736: LD_INT 1
21738: NEG
21739: PUSH
21740: EMPTY
21741: LIST
21742: LIST
21743: PUSH
21744: LD_INT 3
21746: NEG
21747: PUSH
21748: LD_INT 1
21750: PUSH
21751: EMPTY
21752: LIST
21753: LIST
21754: PUSH
21755: LD_INT 4
21757: NEG
21758: PUSH
21759: LD_INT 0
21761: PUSH
21762: EMPTY
21763: LIST
21764: LIST
21765: PUSH
21766: LD_INT 4
21768: NEG
21769: PUSH
21770: LD_INT 1
21772: NEG
21773: PUSH
21774: EMPTY
21775: LIST
21776: LIST
21777: PUSH
21778: LD_INT 4
21780: NEG
21781: PUSH
21782: LD_INT 1
21784: PUSH
21785: EMPTY
21786: LIST
21787: LIST
21788: PUSH
21789: LD_INT 5
21791: NEG
21792: PUSH
21793: LD_INT 0
21795: PUSH
21796: EMPTY
21797: LIST
21798: LIST
21799: PUSH
21800: LD_INT 5
21802: NEG
21803: PUSH
21804: LD_INT 1
21806: NEG
21807: PUSH
21808: EMPTY
21809: LIST
21810: LIST
21811: PUSH
21812: LD_INT 5
21814: NEG
21815: PUSH
21816: LD_INT 1
21818: PUSH
21819: EMPTY
21820: LIST
21821: LIST
21822: PUSH
21823: LD_INT 6
21825: NEG
21826: PUSH
21827: LD_INT 0
21829: PUSH
21830: EMPTY
21831: LIST
21832: LIST
21833: PUSH
21834: LD_INT 6
21836: NEG
21837: PUSH
21838: LD_INT 1
21840: NEG
21841: PUSH
21842: EMPTY
21843: LIST
21844: LIST
21845: PUSH
21846: EMPTY
21847: LIST
21848: LIST
21849: LIST
21850: LIST
21851: LIST
21852: LIST
21853: LIST
21854: LIST
21855: LIST
21856: LIST
21857: LIST
21858: LIST
21859: ST_TO_ADDR
// Factory5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 5 , - 6 ] , [ - 6 , - 5 ] , [ - 6 , - 6 ] ] ;
21860: LD_ADDR_VAR 0 34
21864: PUSH
21865: LD_INT 2
21867: NEG
21868: PUSH
21869: LD_INT 3
21871: NEG
21872: PUSH
21873: EMPTY
21874: LIST
21875: LIST
21876: PUSH
21877: LD_INT 3
21879: NEG
21880: PUSH
21881: LD_INT 2
21883: NEG
21884: PUSH
21885: EMPTY
21886: LIST
21887: LIST
21888: PUSH
21889: LD_INT 3
21891: NEG
21892: PUSH
21893: LD_INT 3
21895: NEG
21896: PUSH
21897: EMPTY
21898: LIST
21899: LIST
21900: PUSH
21901: LD_INT 3
21903: NEG
21904: PUSH
21905: LD_INT 4
21907: NEG
21908: PUSH
21909: EMPTY
21910: LIST
21911: LIST
21912: PUSH
21913: LD_INT 4
21915: NEG
21916: PUSH
21917: LD_INT 3
21919: NEG
21920: PUSH
21921: EMPTY
21922: LIST
21923: LIST
21924: PUSH
21925: LD_INT 4
21927: NEG
21928: PUSH
21929: LD_INT 4
21931: NEG
21932: PUSH
21933: EMPTY
21934: LIST
21935: LIST
21936: PUSH
21937: LD_INT 4
21939: NEG
21940: PUSH
21941: LD_INT 5
21943: NEG
21944: PUSH
21945: EMPTY
21946: LIST
21947: LIST
21948: PUSH
21949: LD_INT 5
21951: NEG
21952: PUSH
21953: LD_INT 4
21955: NEG
21956: PUSH
21957: EMPTY
21958: LIST
21959: LIST
21960: PUSH
21961: LD_INT 5
21963: NEG
21964: PUSH
21965: LD_INT 5
21967: NEG
21968: PUSH
21969: EMPTY
21970: LIST
21971: LIST
21972: PUSH
21973: LD_INT 5
21975: NEG
21976: PUSH
21977: LD_INT 6
21979: NEG
21980: PUSH
21981: EMPTY
21982: LIST
21983: LIST
21984: PUSH
21985: LD_INT 6
21987: NEG
21988: PUSH
21989: LD_INT 5
21991: NEG
21992: PUSH
21993: EMPTY
21994: LIST
21995: LIST
21996: PUSH
21997: LD_INT 6
21999: NEG
22000: PUSH
22001: LD_INT 6
22003: NEG
22004: PUSH
22005: EMPTY
22006: LIST
22007: LIST
22008: PUSH
22009: EMPTY
22010: LIST
22011: LIST
22012: LIST
22013: LIST
22014: LIST
22015: LIST
22016: LIST
22017: LIST
22018: LIST
22019: LIST
22020: LIST
22021: LIST
22022: ST_TO_ADDR
// Lab0 = [ [ 0 , - 2 ] , [ - 1 , - 3 ] , [ 1 , - 2 ] ] ;
22023: LD_ADDR_VAR 0 41
22027: PUSH
22028: LD_INT 0
22030: PUSH
22031: LD_INT 2
22033: NEG
22034: PUSH
22035: EMPTY
22036: LIST
22037: LIST
22038: PUSH
22039: LD_INT 1
22041: NEG
22042: PUSH
22043: LD_INT 3
22045: NEG
22046: PUSH
22047: EMPTY
22048: LIST
22049: LIST
22050: PUSH
22051: LD_INT 1
22053: PUSH
22054: LD_INT 2
22056: NEG
22057: PUSH
22058: EMPTY
22059: LIST
22060: LIST
22061: PUSH
22062: EMPTY
22063: LIST
22064: LIST
22065: LIST
22066: ST_TO_ADDR
// Lab1 = [ [ 2 , 0 ] , [ 2 , - 1 ] , [ 3 , 1 ] ] ;
22067: LD_ADDR_VAR 0 42
22071: PUSH
22072: LD_INT 2
22074: PUSH
22075: LD_INT 0
22077: PUSH
22078: EMPTY
22079: LIST
22080: LIST
22081: PUSH
22082: LD_INT 2
22084: PUSH
22085: LD_INT 1
22087: NEG
22088: PUSH
22089: EMPTY
22090: LIST
22091: LIST
22092: PUSH
22093: LD_INT 3
22095: PUSH
22096: LD_INT 1
22098: PUSH
22099: EMPTY
22100: LIST
22101: LIST
22102: PUSH
22103: EMPTY
22104: LIST
22105: LIST
22106: LIST
22107: ST_TO_ADDR
// Lab2 = [ [ 2 , 2 ] , [ 3 , 2 ] , [ 2 , 3 ] ] ;
22108: LD_ADDR_VAR 0 43
22112: PUSH
22113: LD_INT 2
22115: PUSH
22116: LD_INT 2
22118: PUSH
22119: EMPTY
22120: LIST
22121: LIST
22122: PUSH
22123: LD_INT 3
22125: PUSH
22126: LD_INT 2
22128: PUSH
22129: EMPTY
22130: LIST
22131: LIST
22132: PUSH
22133: LD_INT 2
22135: PUSH
22136: LD_INT 3
22138: PUSH
22139: EMPTY
22140: LIST
22141: LIST
22142: PUSH
22143: EMPTY
22144: LIST
22145: LIST
22146: LIST
22147: ST_TO_ADDR
// Lab3 = [ [ 0 , 2 ] , [ 1 , 3 ] , [ - 1 , 2 ] ] ;
22148: LD_ADDR_VAR 0 44
22152: PUSH
22153: LD_INT 0
22155: PUSH
22156: LD_INT 2
22158: PUSH
22159: EMPTY
22160: LIST
22161: LIST
22162: PUSH
22163: LD_INT 1
22165: PUSH
22166: LD_INT 3
22168: PUSH
22169: EMPTY
22170: LIST
22171: LIST
22172: PUSH
22173: LD_INT 1
22175: NEG
22176: PUSH
22177: LD_INT 2
22179: PUSH
22180: EMPTY
22181: LIST
22182: LIST
22183: PUSH
22184: EMPTY
22185: LIST
22186: LIST
22187: LIST
22188: ST_TO_ADDR
// Lab4 = [ [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , - 1 ] ] ;
22189: LD_ADDR_VAR 0 45
22193: PUSH
22194: LD_INT 2
22196: NEG
22197: PUSH
22198: LD_INT 0
22200: PUSH
22201: EMPTY
22202: LIST
22203: LIST
22204: PUSH
22205: LD_INT 2
22207: NEG
22208: PUSH
22209: LD_INT 1
22211: PUSH
22212: EMPTY
22213: LIST
22214: LIST
22215: PUSH
22216: LD_INT 3
22218: NEG
22219: PUSH
22220: LD_INT 1
22222: NEG
22223: PUSH
22224: EMPTY
22225: LIST
22226: LIST
22227: PUSH
22228: EMPTY
22229: LIST
22230: LIST
22231: LIST
22232: ST_TO_ADDR
// Lab5 = [ [ - 2 , - 2 ] , [ - 2 , - 3 ] , [ - 3 , - 2 ] ] ;
22233: LD_ADDR_VAR 0 46
22237: PUSH
22238: LD_INT 2
22240: NEG
22241: PUSH
22242: LD_INT 2
22244: NEG
22245: PUSH
22246: EMPTY
22247: LIST
22248: LIST
22249: PUSH
22250: LD_INT 2
22252: NEG
22253: PUSH
22254: LD_INT 3
22256: NEG
22257: PUSH
22258: EMPTY
22259: LIST
22260: LIST
22261: PUSH
22262: LD_INT 3
22264: NEG
22265: PUSH
22266: LD_INT 2
22268: NEG
22269: PUSH
22270: EMPTY
22271: LIST
22272: LIST
22273: PUSH
22274: EMPTY
22275: LIST
22276: LIST
22277: LIST
22278: ST_TO_ADDR
// ControlTower0 = [ [ - 2 , - 3 ] , [ - 1 , - 3 ] ] ;
22279: LD_ADDR_VAR 0 47
22283: PUSH
22284: LD_INT 2
22286: NEG
22287: PUSH
22288: LD_INT 3
22290: NEG
22291: PUSH
22292: EMPTY
22293: LIST
22294: LIST
22295: PUSH
22296: LD_INT 1
22298: NEG
22299: PUSH
22300: LD_INT 3
22302: NEG
22303: PUSH
22304: EMPTY
22305: LIST
22306: LIST
22307: PUSH
22308: EMPTY
22309: LIST
22310: LIST
22311: ST_TO_ADDR
// ControlTower1 = [ [ 1 , - 2 ] , [ 2 , - 1 ] ] ;
22312: LD_ADDR_VAR 0 48
22316: PUSH
22317: LD_INT 1
22319: PUSH
22320: LD_INT 2
22322: NEG
22323: PUSH
22324: EMPTY
22325: LIST
22326: LIST
22327: PUSH
22328: LD_INT 2
22330: PUSH
22331: LD_INT 1
22333: NEG
22334: PUSH
22335: EMPTY
22336: LIST
22337: LIST
22338: PUSH
22339: EMPTY
22340: LIST
22341: LIST
22342: ST_TO_ADDR
// ControlTower2 = [ [ 3 , 1 ] , [ 3 , 2 ] ] ;
22343: LD_ADDR_VAR 0 49
22347: PUSH
22348: LD_INT 3
22350: PUSH
22351: LD_INT 1
22353: PUSH
22354: EMPTY
22355: LIST
22356: LIST
22357: PUSH
22358: LD_INT 3
22360: PUSH
22361: LD_INT 2
22363: PUSH
22364: EMPTY
22365: LIST
22366: LIST
22367: PUSH
22368: EMPTY
22369: LIST
22370: LIST
22371: ST_TO_ADDR
// ControlTower3 = [ [ 2 , 3 ] , [ 1 , 3 ] ] ;
22372: LD_ADDR_VAR 0 50
22376: PUSH
22377: LD_INT 2
22379: PUSH
22380: LD_INT 3
22382: PUSH
22383: EMPTY
22384: LIST
22385: LIST
22386: PUSH
22387: LD_INT 1
22389: PUSH
22390: LD_INT 3
22392: PUSH
22393: EMPTY
22394: LIST
22395: LIST
22396: PUSH
22397: EMPTY
22398: LIST
22399: LIST
22400: ST_TO_ADDR
// ControlTower4 = [ [ - 1 , 2 ] , [ - 2 , 1 ] ] ;
22401: LD_ADDR_VAR 0 51
22405: PUSH
22406: LD_INT 1
22408: NEG
22409: PUSH
22410: LD_INT 2
22412: PUSH
22413: EMPTY
22414: LIST
22415: LIST
22416: PUSH
22417: LD_INT 2
22419: NEG
22420: PUSH
22421: LD_INT 1
22423: PUSH
22424: EMPTY
22425: LIST
22426: LIST
22427: PUSH
22428: EMPTY
22429: LIST
22430: LIST
22431: ST_TO_ADDR
// ControlTower5 = [ [ - 3 , - 1 ] , [ - 3 , - 2 ] ] ;
22432: LD_ADDR_VAR 0 52
22436: PUSH
22437: LD_INT 3
22439: NEG
22440: PUSH
22441: LD_INT 1
22443: NEG
22444: PUSH
22445: EMPTY
22446: LIST
22447: LIST
22448: PUSH
22449: LD_INT 3
22451: NEG
22452: PUSH
22453: LD_INT 2
22455: NEG
22456: PUSH
22457: EMPTY
22458: LIST
22459: LIST
22460: PUSH
22461: EMPTY
22462: LIST
22463: LIST
22464: ST_TO_ADDR
// Barracks0 = [ [ - 1 , - 3 ] , [ 0 , - 3 ] , [ 1 , - 2 ] ] ;
22465: LD_ADDR_VAR 0 53
22469: PUSH
22470: LD_INT 1
22472: NEG
22473: PUSH
22474: LD_INT 3
22476: NEG
22477: PUSH
22478: EMPTY
22479: LIST
22480: LIST
22481: PUSH
22482: LD_INT 0
22484: PUSH
22485: LD_INT 3
22487: NEG
22488: PUSH
22489: EMPTY
22490: LIST
22491: LIST
22492: PUSH
22493: LD_INT 1
22495: PUSH
22496: LD_INT 2
22498: NEG
22499: PUSH
22500: EMPTY
22501: LIST
22502: LIST
22503: PUSH
22504: EMPTY
22505: LIST
22506: LIST
22507: LIST
22508: ST_TO_ADDR
// Barracks1 = [ [ 2 , - 1 ] , [ 3 , 0 ] , [ 3 , 1 ] ] ;
22509: LD_ADDR_VAR 0 54
22513: PUSH
22514: LD_INT 2
22516: PUSH
22517: LD_INT 1
22519: NEG
22520: PUSH
22521: EMPTY
22522: LIST
22523: LIST
22524: PUSH
22525: LD_INT 3
22527: PUSH
22528: LD_INT 0
22530: PUSH
22531: EMPTY
22532: LIST
22533: LIST
22534: PUSH
22535: LD_INT 3
22537: PUSH
22538: LD_INT 1
22540: PUSH
22541: EMPTY
22542: LIST
22543: LIST
22544: PUSH
22545: EMPTY
22546: LIST
22547: LIST
22548: LIST
22549: ST_TO_ADDR
// Barracks2 = [ [ 3 , 2 ] , [ 3 , 3 ] , [ 2 , 3 ] ] ;
22550: LD_ADDR_VAR 0 55
22554: PUSH
22555: LD_INT 3
22557: PUSH
22558: LD_INT 2
22560: PUSH
22561: EMPTY
22562: LIST
22563: LIST
22564: PUSH
22565: LD_INT 3
22567: PUSH
22568: LD_INT 3
22570: PUSH
22571: EMPTY
22572: LIST
22573: LIST
22574: PUSH
22575: LD_INT 2
22577: PUSH
22578: LD_INT 3
22580: PUSH
22581: EMPTY
22582: LIST
22583: LIST
22584: PUSH
22585: EMPTY
22586: LIST
22587: LIST
22588: LIST
22589: ST_TO_ADDR
// Barracks3 = [ [ 1 , 3 ] , [ 0 , 3 ] , [ - 1 , 2 ] ] ;
22590: LD_ADDR_VAR 0 56
22594: PUSH
22595: LD_INT 1
22597: PUSH
22598: LD_INT 3
22600: PUSH
22601: EMPTY
22602: LIST
22603: LIST
22604: PUSH
22605: LD_INT 0
22607: PUSH
22608: LD_INT 3
22610: PUSH
22611: EMPTY
22612: LIST
22613: LIST
22614: PUSH
22615: LD_INT 1
22617: NEG
22618: PUSH
22619: LD_INT 2
22621: PUSH
22622: EMPTY
22623: LIST
22624: LIST
22625: PUSH
22626: EMPTY
22627: LIST
22628: LIST
22629: LIST
22630: ST_TO_ADDR
// Barracks4 = [ [ - 2 , 1 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] ] ;
22631: LD_ADDR_VAR 0 57
22635: PUSH
22636: LD_INT 2
22638: NEG
22639: PUSH
22640: LD_INT 1
22642: PUSH
22643: EMPTY
22644: LIST
22645: LIST
22646: PUSH
22647: LD_INT 3
22649: NEG
22650: PUSH
22651: LD_INT 0
22653: PUSH
22654: EMPTY
22655: LIST
22656: LIST
22657: PUSH
22658: LD_INT 3
22660: NEG
22661: PUSH
22662: LD_INT 1
22664: NEG
22665: PUSH
22666: EMPTY
22667: LIST
22668: LIST
22669: PUSH
22670: EMPTY
22671: LIST
22672: LIST
22673: LIST
22674: ST_TO_ADDR
// Barracks5 = [ [ - 2 , - 3 ] , [ - 3 , - 2 ] , [ - 3 , - 3 ] ] ;
22675: LD_ADDR_VAR 0 58
22679: PUSH
22680: LD_INT 2
22682: NEG
22683: PUSH
22684: LD_INT 3
22686: NEG
22687: PUSH
22688: EMPTY
22689: LIST
22690: LIST
22691: PUSH
22692: LD_INT 3
22694: NEG
22695: PUSH
22696: LD_INT 2
22698: NEG
22699: PUSH
22700: EMPTY
22701: LIST
22702: LIST
22703: PUSH
22704: LD_INT 3
22706: NEG
22707: PUSH
22708: LD_INT 3
22710: NEG
22711: PUSH
22712: EMPTY
22713: LIST
22714: LIST
22715: PUSH
22716: EMPTY
22717: LIST
22718: LIST
22719: LIST
22720: ST_TO_ADDR
// Bunker0 = [ [ - 1 , - 2 ] , [ 0 , - 2 ] , [ 1 , - 1 ] ] ;
22721: LD_ADDR_VAR 0 59
22725: PUSH
22726: LD_INT 1
22728: NEG
22729: PUSH
22730: LD_INT 2
22732: NEG
22733: PUSH
22734: EMPTY
22735: LIST
22736: LIST
22737: PUSH
22738: LD_INT 0
22740: PUSH
22741: LD_INT 2
22743: NEG
22744: PUSH
22745: EMPTY
22746: LIST
22747: LIST
22748: PUSH
22749: LD_INT 1
22751: PUSH
22752: LD_INT 1
22754: NEG
22755: PUSH
22756: EMPTY
22757: LIST
22758: LIST
22759: PUSH
22760: EMPTY
22761: LIST
22762: LIST
22763: LIST
22764: ST_TO_ADDR
// Bunker1 = [ [ 1 , - 1 ] , [ 2 , 0 ] , [ 2 , 1 ] ] ;
22765: LD_ADDR_VAR 0 60
22769: PUSH
22770: LD_INT 1
22772: PUSH
22773: LD_INT 1
22775: NEG
22776: PUSH
22777: EMPTY
22778: LIST
22779: LIST
22780: PUSH
22781: LD_INT 2
22783: PUSH
22784: LD_INT 0
22786: PUSH
22787: EMPTY
22788: LIST
22789: LIST
22790: PUSH
22791: LD_INT 2
22793: PUSH
22794: LD_INT 1
22796: PUSH
22797: EMPTY
22798: LIST
22799: LIST
22800: PUSH
22801: EMPTY
22802: LIST
22803: LIST
22804: LIST
22805: ST_TO_ADDR
// Bunker2 = [ [ 2 , 1 ] , [ 2 , 2 ] , [ 1 , 2 ] ] ;
22806: LD_ADDR_VAR 0 61
22810: PUSH
22811: LD_INT 2
22813: PUSH
22814: LD_INT 1
22816: PUSH
22817: EMPTY
22818: LIST
22819: LIST
22820: PUSH
22821: LD_INT 2
22823: PUSH
22824: LD_INT 2
22826: PUSH
22827: EMPTY
22828: LIST
22829: LIST
22830: PUSH
22831: LD_INT 1
22833: PUSH
22834: LD_INT 2
22836: PUSH
22837: EMPTY
22838: LIST
22839: LIST
22840: PUSH
22841: EMPTY
22842: LIST
22843: LIST
22844: LIST
22845: ST_TO_ADDR
// Bunker3 = [ [ 1 , 2 ] , [ 0 , 2 ] , [ - 1 , 1 ] ] ;
22846: LD_ADDR_VAR 0 62
22850: PUSH
22851: LD_INT 1
22853: PUSH
22854: LD_INT 2
22856: PUSH
22857: EMPTY
22858: LIST
22859: LIST
22860: PUSH
22861: LD_INT 0
22863: PUSH
22864: LD_INT 2
22866: PUSH
22867: EMPTY
22868: LIST
22869: LIST
22870: PUSH
22871: LD_INT 1
22873: NEG
22874: PUSH
22875: LD_INT 1
22877: PUSH
22878: EMPTY
22879: LIST
22880: LIST
22881: PUSH
22882: EMPTY
22883: LIST
22884: LIST
22885: LIST
22886: ST_TO_ADDR
// Bunker4 = [ [ - 1 , 1 ] , [ - 2 , 0 ] , [ - 2 , - 1 ] ] ;
22887: LD_ADDR_VAR 0 63
22891: PUSH
22892: LD_INT 1
22894: NEG
22895: PUSH
22896: LD_INT 1
22898: PUSH
22899: EMPTY
22900: LIST
22901: LIST
22902: PUSH
22903: LD_INT 2
22905: NEG
22906: PUSH
22907: LD_INT 0
22909: PUSH
22910: EMPTY
22911: LIST
22912: LIST
22913: PUSH
22914: LD_INT 2
22916: NEG
22917: PUSH
22918: LD_INT 1
22920: NEG
22921: PUSH
22922: EMPTY
22923: LIST
22924: LIST
22925: PUSH
22926: EMPTY
22927: LIST
22928: LIST
22929: LIST
22930: ST_TO_ADDR
// Bunker5 = [ [ - 1 , - 2 ] , [ - 2 , - 1 ] , [ - 2 , - 2 ] ] ;
22931: LD_ADDR_VAR 0 64
22935: PUSH
22936: LD_INT 1
22938: NEG
22939: PUSH
22940: LD_INT 2
22942: NEG
22943: PUSH
22944: EMPTY
22945: LIST
22946: LIST
22947: PUSH
22948: LD_INT 2
22950: NEG
22951: PUSH
22952: LD_INT 1
22954: NEG
22955: PUSH
22956: EMPTY
22957: LIST
22958: LIST
22959: PUSH
22960: LD_INT 2
22962: NEG
22963: PUSH
22964: LD_INT 2
22966: NEG
22967: PUSH
22968: EMPTY
22969: LIST
22970: LIST
22971: PUSH
22972: EMPTY
22973: LIST
22974: LIST
22975: LIST
22976: ST_TO_ADDR
// end ; 2 :
22977: GO 26243
22979: LD_INT 2
22981: DOUBLE
22982: EQUAL
22983: IFTRUE 22987
22985: GO 26242
22987: POP
// begin Factory0 = [ [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] ] ;
22988: LD_ADDR_VAR 0 29
22992: PUSH
22993: LD_INT 4
22995: PUSH
22996: LD_INT 0
22998: PUSH
22999: EMPTY
23000: LIST
23001: LIST
23002: PUSH
23003: LD_INT 4
23005: PUSH
23006: LD_INT 1
23008: NEG
23009: PUSH
23010: EMPTY
23011: LIST
23012: LIST
23013: PUSH
23014: LD_INT 5
23016: PUSH
23017: LD_INT 0
23019: PUSH
23020: EMPTY
23021: LIST
23022: LIST
23023: PUSH
23024: LD_INT 5
23026: PUSH
23027: LD_INT 1
23029: PUSH
23030: EMPTY
23031: LIST
23032: LIST
23033: PUSH
23034: LD_INT 4
23036: PUSH
23037: LD_INT 1
23039: PUSH
23040: EMPTY
23041: LIST
23042: LIST
23043: PUSH
23044: LD_INT 3
23046: PUSH
23047: LD_INT 0
23049: PUSH
23050: EMPTY
23051: LIST
23052: LIST
23053: PUSH
23054: LD_INT 3
23056: PUSH
23057: LD_INT 1
23059: NEG
23060: PUSH
23061: EMPTY
23062: LIST
23063: LIST
23064: PUSH
23065: LD_INT 3
23067: PUSH
23068: LD_INT 2
23070: NEG
23071: PUSH
23072: EMPTY
23073: LIST
23074: LIST
23075: PUSH
23076: LD_INT 5
23078: PUSH
23079: LD_INT 2
23081: PUSH
23082: EMPTY
23083: LIST
23084: LIST
23085: PUSH
23086: LD_INT 3
23088: PUSH
23089: LD_INT 3
23091: PUSH
23092: EMPTY
23093: LIST
23094: LIST
23095: PUSH
23096: LD_INT 3
23098: PUSH
23099: LD_INT 2
23101: PUSH
23102: EMPTY
23103: LIST
23104: LIST
23105: PUSH
23106: LD_INT 4
23108: PUSH
23109: LD_INT 3
23111: PUSH
23112: EMPTY
23113: LIST
23114: LIST
23115: PUSH
23116: LD_INT 4
23118: PUSH
23119: LD_INT 4
23121: PUSH
23122: EMPTY
23123: LIST
23124: LIST
23125: PUSH
23126: LD_INT 3
23128: PUSH
23129: LD_INT 4
23131: PUSH
23132: EMPTY
23133: LIST
23134: LIST
23135: PUSH
23136: LD_INT 2
23138: PUSH
23139: LD_INT 3
23141: PUSH
23142: EMPTY
23143: LIST
23144: LIST
23145: PUSH
23146: LD_INT 2
23148: PUSH
23149: LD_INT 2
23151: PUSH
23152: EMPTY
23153: LIST
23154: LIST
23155: PUSH
23156: LD_INT 4
23158: PUSH
23159: LD_INT 2
23161: PUSH
23162: EMPTY
23163: LIST
23164: LIST
23165: PUSH
23166: LD_INT 2
23168: PUSH
23169: LD_INT 4
23171: PUSH
23172: EMPTY
23173: LIST
23174: LIST
23175: PUSH
23176: LD_INT 0
23178: PUSH
23179: LD_INT 4
23181: PUSH
23182: EMPTY
23183: LIST
23184: LIST
23185: PUSH
23186: LD_INT 0
23188: PUSH
23189: LD_INT 3
23191: PUSH
23192: EMPTY
23193: LIST
23194: LIST
23195: PUSH
23196: LD_INT 1
23198: PUSH
23199: LD_INT 4
23201: PUSH
23202: EMPTY
23203: LIST
23204: LIST
23205: PUSH
23206: LD_INT 1
23208: PUSH
23209: LD_INT 5
23211: PUSH
23212: EMPTY
23213: LIST
23214: LIST
23215: PUSH
23216: LD_INT 0
23218: PUSH
23219: LD_INT 5
23221: PUSH
23222: EMPTY
23223: LIST
23224: LIST
23225: PUSH
23226: LD_INT 1
23228: NEG
23229: PUSH
23230: LD_INT 4
23232: PUSH
23233: EMPTY
23234: LIST
23235: LIST
23236: PUSH
23237: LD_INT 1
23239: NEG
23240: PUSH
23241: LD_INT 3
23243: PUSH
23244: EMPTY
23245: LIST
23246: LIST
23247: PUSH
23248: LD_INT 2
23250: PUSH
23251: LD_INT 5
23253: PUSH
23254: EMPTY
23255: LIST
23256: LIST
23257: PUSH
23258: LD_INT 2
23260: NEG
23261: PUSH
23262: LD_INT 3
23264: PUSH
23265: EMPTY
23266: LIST
23267: LIST
23268: PUSH
23269: LD_INT 3
23271: NEG
23272: PUSH
23273: LD_INT 0
23275: PUSH
23276: EMPTY
23277: LIST
23278: LIST
23279: PUSH
23280: LD_INT 3
23282: NEG
23283: PUSH
23284: LD_INT 1
23286: NEG
23287: PUSH
23288: EMPTY
23289: LIST
23290: LIST
23291: PUSH
23292: LD_INT 2
23294: NEG
23295: PUSH
23296: LD_INT 0
23298: PUSH
23299: EMPTY
23300: LIST
23301: LIST
23302: PUSH
23303: LD_INT 2
23305: NEG
23306: PUSH
23307: LD_INT 1
23309: PUSH
23310: EMPTY
23311: LIST
23312: LIST
23313: PUSH
23314: LD_INT 3
23316: NEG
23317: PUSH
23318: LD_INT 1
23320: PUSH
23321: EMPTY
23322: LIST
23323: LIST
23324: PUSH
23325: LD_INT 4
23327: NEG
23328: PUSH
23329: LD_INT 0
23331: PUSH
23332: EMPTY
23333: LIST
23334: LIST
23335: PUSH
23336: LD_INT 4
23338: NEG
23339: PUSH
23340: LD_INT 1
23342: NEG
23343: PUSH
23344: EMPTY
23345: LIST
23346: LIST
23347: PUSH
23348: LD_INT 4
23350: NEG
23351: PUSH
23352: LD_INT 2
23354: NEG
23355: PUSH
23356: EMPTY
23357: LIST
23358: LIST
23359: PUSH
23360: LD_INT 2
23362: NEG
23363: PUSH
23364: LD_INT 2
23366: PUSH
23367: EMPTY
23368: LIST
23369: LIST
23370: PUSH
23371: LD_INT 4
23373: NEG
23374: PUSH
23375: LD_INT 4
23377: NEG
23378: PUSH
23379: EMPTY
23380: LIST
23381: LIST
23382: PUSH
23383: LD_INT 4
23385: NEG
23386: PUSH
23387: LD_INT 5
23389: NEG
23390: PUSH
23391: EMPTY
23392: LIST
23393: LIST
23394: PUSH
23395: LD_INT 3
23397: NEG
23398: PUSH
23399: LD_INT 4
23401: NEG
23402: PUSH
23403: EMPTY
23404: LIST
23405: LIST
23406: PUSH
23407: LD_INT 3
23409: NEG
23410: PUSH
23411: LD_INT 3
23413: NEG
23414: PUSH
23415: EMPTY
23416: LIST
23417: LIST
23418: PUSH
23419: LD_INT 4
23421: NEG
23422: PUSH
23423: LD_INT 3
23425: NEG
23426: PUSH
23427: EMPTY
23428: LIST
23429: LIST
23430: PUSH
23431: LD_INT 5
23433: NEG
23434: PUSH
23435: LD_INT 4
23437: NEG
23438: PUSH
23439: EMPTY
23440: LIST
23441: LIST
23442: PUSH
23443: LD_INT 5
23445: NEG
23446: PUSH
23447: LD_INT 5
23449: NEG
23450: PUSH
23451: EMPTY
23452: LIST
23453: LIST
23454: PUSH
23455: LD_INT 3
23457: NEG
23458: PUSH
23459: LD_INT 5
23461: NEG
23462: PUSH
23463: EMPTY
23464: LIST
23465: LIST
23466: PUSH
23467: LD_INT 5
23469: NEG
23470: PUSH
23471: LD_INT 3
23473: NEG
23474: PUSH
23475: EMPTY
23476: LIST
23477: LIST
23478: PUSH
23479: EMPTY
23480: LIST
23481: LIST
23482: LIST
23483: LIST
23484: LIST
23485: LIST
23486: LIST
23487: LIST
23488: LIST
23489: LIST
23490: LIST
23491: LIST
23492: LIST
23493: LIST
23494: LIST
23495: LIST
23496: LIST
23497: LIST
23498: LIST
23499: LIST
23500: LIST
23501: LIST
23502: LIST
23503: LIST
23504: LIST
23505: LIST
23506: LIST
23507: LIST
23508: LIST
23509: LIST
23510: LIST
23511: LIST
23512: LIST
23513: LIST
23514: LIST
23515: LIST
23516: LIST
23517: LIST
23518: LIST
23519: LIST
23520: LIST
23521: LIST
23522: LIST
23523: LIST
23524: LIST
23525: ST_TO_ADDR
// Factory1 = [ [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] ] ;
23526: LD_ADDR_VAR 0 30
23530: PUSH
23531: LD_INT 4
23533: PUSH
23534: LD_INT 4
23536: PUSH
23537: EMPTY
23538: LIST
23539: LIST
23540: PUSH
23541: LD_INT 4
23543: PUSH
23544: LD_INT 3
23546: PUSH
23547: EMPTY
23548: LIST
23549: LIST
23550: PUSH
23551: LD_INT 5
23553: PUSH
23554: LD_INT 4
23556: PUSH
23557: EMPTY
23558: LIST
23559: LIST
23560: PUSH
23561: LD_INT 5
23563: PUSH
23564: LD_INT 5
23566: PUSH
23567: EMPTY
23568: LIST
23569: LIST
23570: PUSH
23571: LD_INT 4
23573: PUSH
23574: LD_INT 5
23576: PUSH
23577: EMPTY
23578: LIST
23579: LIST
23580: PUSH
23581: LD_INT 3
23583: PUSH
23584: LD_INT 4
23586: PUSH
23587: EMPTY
23588: LIST
23589: LIST
23590: PUSH
23591: LD_INT 3
23593: PUSH
23594: LD_INT 3
23596: PUSH
23597: EMPTY
23598: LIST
23599: LIST
23600: PUSH
23601: LD_INT 5
23603: PUSH
23604: LD_INT 3
23606: PUSH
23607: EMPTY
23608: LIST
23609: LIST
23610: PUSH
23611: LD_INT 3
23613: PUSH
23614: LD_INT 5
23616: PUSH
23617: EMPTY
23618: LIST
23619: LIST
23620: PUSH
23621: LD_INT 0
23623: PUSH
23624: LD_INT 3
23626: PUSH
23627: EMPTY
23628: LIST
23629: LIST
23630: PUSH
23631: LD_INT 0
23633: PUSH
23634: LD_INT 2
23636: PUSH
23637: EMPTY
23638: LIST
23639: LIST
23640: PUSH
23641: LD_INT 1
23643: PUSH
23644: LD_INT 3
23646: PUSH
23647: EMPTY
23648: LIST
23649: LIST
23650: PUSH
23651: LD_INT 1
23653: PUSH
23654: LD_INT 4
23656: PUSH
23657: EMPTY
23658: LIST
23659: LIST
23660: PUSH
23661: LD_INT 0
23663: PUSH
23664: LD_INT 4
23666: PUSH
23667: EMPTY
23668: LIST
23669: LIST
23670: PUSH
23671: LD_INT 1
23673: NEG
23674: PUSH
23675: LD_INT 3
23677: PUSH
23678: EMPTY
23679: LIST
23680: LIST
23681: PUSH
23682: LD_INT 1
23684: NEG
23685: PUSH
23686: LD_INT 2
23688: PUSH
23689: EMPTY
23690: LIST
23691: LIST
23692: PUSH
23693: LD_INT 2
23695: PUSH
23696: LD_INT 4
23698: PUSH
23699: EMPTY
23700: LIST
23701: LIST
23702: PUSH
23703: LD_INT 2
23705: NEG
23706: PUSH
23707: LD_INT 2
23709: PUSH
23710: EMPTY
23711: LIST
23712: LIST
23713: PUSH
23714: LD_INT 4
23716: NEG
23717: PUSH
23718: LD_INT 0
23720: PUSH
23721: EMPTY
23722: LIST
23723: LIST
23724: PUSH
23725: LD_INT 4
23727: NEG
23728: PUSH
23729: LD_INT 1
23731: NEG
23732: PUSH
23733: EMPTY
23734: LIST
23735: LIST
23736: PUSH
23737: LD_INT 3
23739: NEG
23740: PUSH
23741: LD_INT 0
23743: PUSH
23744: EMPTY
23745: LIST
23746: LIST
23747: PUSH
23748: LD_INT 3
23750: NEG
23751: PUSH
23752: LD_INT 1
23754: PUSH
23755: EMPTY
23756: LIST
23757: LIST
23758: PUSH
23759: LD_INT 4
23761: NEG
23762: PUSH
23763: LD_INT 1
23765: PUSH
23766: EMPTY
23767: LIST
23768: LIST
23769: PUSH
23770: LD_INT 5
23772: NEG
23773: PUSH
23774: LD_INT 0
23776: PUSH
23777: EMPTY
23778: LIST
23779: LIST
23780: PUSH
23781: LD_INT 5
23783: NEG
23784: PUSH
23785: LD_INT 1
23787: NEG
23788: PUSH
23789: EMPTY
23790: LIST
23791: LIST
23792: PUSH
23793: LD_INT 5
23795: NEG
23796: PUSH
23797: LD_INT 2
23799: NEG
23800: PUSH
23801: EMPTY
23802: LIST
23803: LIST
23804: PUSH
23805: LD_INT 3
23807: NEG
23808: PUSH
23809: LD_INT 2
23811: PUSH
23812: EMPTY
23813: LIST
23814: LIST
23815: PUSH
23816: LD_INT 3
23818: NEG
23819: PUSH
23820: LD_INT 3
23822: NEG
23823: PUSH
23824: EMPTY
23825: LIST
23826: LIST
23827: PUSH
23828: LD_INT 3
23830: NEG
23831: PUSH
23832: LD_INT 4
23834: NEG
23835: PUSH
23836: EMPTY
23837: LIST
23838: LIST
23839: PUSH
23840: LD_INT 2
23842: NEG
23843: PUSH
23844: LD_INT 3
23846: NEG
23847: PUSH
23848: EMPTY
23849: LIST
23850: LIST
23851: PUSH
23852: LD_INT 2
23854: NEG
23855: PUSH
23856: LD_INT 2
23858: NEG
23859: PUSH
23860: EMPTY
23861: LIST
23862: LIST
23863: PUSH
23864: LD_INT 3
23866: NEG
23867: PUSH
23868: LD_INT 2
23870: NEG
23871: PUSH
23872: EMPTY
23873: LIST
23874: LIST
23875: PUSH
23876: LD_INT 4
23878: NEG
23879: PUSH
23880: LD_INT 3
23882: NEG
23883: PUSH
23884: EMPTY
23885: LIST
23886: LIST
23887: PUSH
23888: LD_INT 4
23890: NEG
23891: PUSH
23892: LD_INT 4
23894: NEG
23895: PUSH
23896: EMPTY
23897: LIST
23898: LIST
23899: PUSH
23900: LD_INT 2
23902: NEG
23903: PUSH
23904: LD_INT 4
23906: NEG
23907: PUSH
23908: EMPTY
23909: LIST
23910: LIST
23911: PUSH
23912: LD_INT 4
23914: NEG
23915: PUSH
23916: LD_INT 2
23918: NEG
23919: PUSH
23920: EMPTY
23921: LIST
23922: LIST
23923: PUSH
23924: LD_INT 0
23926: PUSH
23927: LD_INT 4
23929: NEG
23930: PUSH
23931: EMPTY
23932: LIST
23933: LIST
23934: PUSH
23935: LD_INT 0
23937: PUSH
23938: LD_INT 5
23940: NEG
23941: PUSH
23942: EMPTY
23943: LIST
23944: LIST
23945: PUSH
23946: LD_INT 1
23948: PUSH
23949: LD_INT 4
23951: NEG
23952: PUSH
23953: EMPTY
23954: LIST
23955: LIST
23956: PUSH
23957: LD_INT 1
23959: PUSH
23960: LD_INT 3
23962: NEG
23963: PUSH
23964: EMPTY
23965: LIST
23966: LIST
23967: PUSH
23968: LD_INT 0
23970: PUSH
23971: LD_INT 3
23973: NEG
23974: PUSH
23975: EMPTY
23976: LIST
23977: LIST
23978: PUSH
23979: LD_INT 1
23981: NEG
23982: PUSH
23983: LD_INT 4
23985: NEG
23986: PUSH
23987: EMPTY
23988: LIST
23989: LIST
23990: PUSH
23991: LD_INT 1
23993: NEG
23994: PUSH
23995: LD_INT 5
23997: NEG
23998: PUSH
23999: EMPTY
24000: LIST
24001: LIST
24002: PUSH
24003: LD_INT 2
24005: PUSH
24006: LD_INT 3
24008: NEG
24009: PUSH
24010: EMPTY
24011: LIST
24012: LIST
24013: PUSH
24014: LD_INT 2
24016: NEG
24017: PUSH
24018: LD_INT 5
24020: NEG
24021: PUSH
24022: EMPTY
24023: LIST
24024: LIST
24025: PUSH
24026: EMPTY
24027: LIST
24028: LIST
24029: LIST
24030: LIST
24031: LIST
24032: LIST
24033: LIST
24034: LIST
24035: LIST
24036: LIST
24037: LIST
24038: LIST
24039: LIST
24040: LIST
24041: LIST
24042: LIST
24043: LIST
24044: LIST
24045: LIST
24046: LIST
24047: LIST
24048: LIST
24049: LIST
24050: LIST
24051: LIST
24052: LIST
24053: LIST
24054: LIST
24055: LIST
24056: LIST
24057: LIST
24058: LIST
24059: LIST
24060: LIST
24061: LIST
24062: LIST
24063: LIST
24064: LIST
24065: LIST
24066: LIST
24067: LIST
24068: LIST
24069: LIST
24070: LIST
24071: LIST
24072: ST_TO_ADDR
// Factory2 = [ [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] , [ - 3 , 0 ] , [ - 3 , - 1 ] , [ - 2 , 0 ] , [ - 2 , 1 ] , [ - 3 , 1 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 4 , - 2 ] , [ - 2 , 2 ] , [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] ] ;
24073: LD_ADDR_VAR 0 31
24077: PUSH
24078: LD_INT 0
24080: PUSH
24081: LD_INT 4
24083: PUSH
24084: EMPTY
24085: LIST
24086: LIST
24087: PUSH
24088: LD_INT 0
24090: PUSH
24091: LD_INT 3
24093: PUSH
24094: EMPTY
24095: LIST
24096: LIST
24097: PUSH
24098: LD_INT 1
24100: PUSH
24101: LD_INT 4
24103: PUSH
24104: EMPTY
24105: LIST
24106: LIST
24107: PUSH
24108: LD_INT 1
24110: PUSH
24111: LD_INT 5
24113: PUSH
24114: EMPTY
24115: LIST
24116: LIST
24117: PUSH
24118: LD_INT 0
24120: PUSH
24121: LD_INT 5
24123: PUSH
24124: EMPTY
24125: LIST
24126: LIST
24127: PUSH
24128: LD_INT 1
24130: NEG
24131: PUSH
24132: LD_INT 4
24134: PUSH
24135: EMPTY
24136: LIST
24137: LIST
24138: PUSH
24139: LD_INT 1
24141: NEG
24142: PUSH
24143: LD_INT 3
24145: PUSH
24146: EMPTY
24147: LIST
24148: LIST
24149: PUSH
24150: LD_INT 2
24152: PUSH
24153: LD_INT 5
24155: PUSH
24156: EMPTY
24157: LIST
24158: LIST
24159: PUSH
24160: LD_INT 2
24162: NEG
24163: PUSH
24164: LD_INT 3
24166: PUSH
24167: EMPTY
24168: LIST
24169: LIST
24170: PUSH
24171: LD_INT 3
24173: NEG
24174: PUSH
24175: LD_INT 0
24177: PUSH
24178: EMPTY
24179: LIST
24180: LIST
24181: PUSH
24182: LD_INT 3
24184: NEG
24185: PUSH
24186: LD_INT 1
24188: NEG
24189: PUSH
24190: EMPTY
24191: LIST
24192: LIST
24193: PUSH
24194: LD_INT 2
24196: NEG
24197: PUSH
24198: LD_INT 0
24200: PUSH
24201: EMPTY
24202: LIST
24203: LIST
24204: PUSH
24205: LD_INT 2
24207: NEG
24208: PUSH
24209: LD_INT 1
24211: PUSH
24212: EMPTY
24213: LIST
24214: LIST
24215: PUSH
24216: LD_INT 3
24218: NEG
24219: PUSH
24220: LD_INT 1
24222: PUSH
24223: EMPTY
24224: LIST
24225: LIST
24226: PUSH
24227: LD_INT 4
24229: NEG
24230: PUSH
24231: LD_INT 0
24233: PUSH
24234: EMPTY
24235: LIST
24236: LIST
24237: PUSH
24238: LD_INT 4
24240: NEG
24241: PUSH
24242: LD_INT 1
24244: NEG
24245: PUSH
24246: EMPTY
24247: LIST
24248: LIST
24249: PUSH
24250: LD_INT 4
24252: NEG
24253: PUSH
24254: LD_INT 2
24256: NEG
24257: PUSH
24258: EMPTY
24259: LIST
24260: LIST
24261: PUSH
24262: LD_INT 2
24264: NEG
24265: PUSH
24266: LD_INT 2
24268: PUSH
24269: EMPTY
24270: LIST
24271: LIST
24272: PUSH
24273: LD_INT 4
24275: NEG
24276: PUSH
24277: LD_INT 4
24279: NEG
24280: PUSH
24281: EMPTY
24282: LIST
24283: LIST
24284: PUSH
24285: LD_INT 4
24287: NEG
24288: PUSH
24289: LD_INT 5
24291: NEG
24292: PUSH
24293: EMPTY
24294: LIST
24295: LIST
24296: PUSH
24297: LD_INT 3
24299: NEG
24300: PUSH
24301: LD_INT 4
24303: NEG
24304: PUSH
24305: EMPTY
24306: LIST
24307: LIST
24308: PUSH
24309: LD_INT 3
24311: NEG
24312: PUSH
24313: LD_INT 3
24315: NEG
24316: PUSH
24317: EMPTY
24318: LIST
24319: LIST
24320: PUSH
24321: LD_INT 4
24323: NEG
24324: PUSH
24325: LD_INT 3
24327: NEG
24328: PUSH
24329: EMPTY
24330: LIST
24331: LIST
24332: PUSH
24333: LD_INT 5
24335: NEG
24336: PUSH
24337: LD_INT 4
24339: NEG
24340: PUSH
24341: EMPTY
24342: LIST
24343: LIST
24344: PUSH
24345: LD_INT 5
24347: NEG
24348: PUSH
24349: LD_INT 5
24351: NEG
24352: PUSH
24353: EMPTY
24354: LIST
24355: LIST
24356: PUSH
24357: LD_INT 3
24359: NEG
24360: PUSH
24361: LD_INT 5
24363: NEG
24364: PUSH
24365: EMPTY
24366: LIST
24367: LIST
24368: PUSH
24369: LD_INT 5
24371: NEG
24372: PUSH
24373: LD_INT 3
24375: NEG
24376: PUSH
24377: EMPTY
24378: LIST
24379: LIST
24380: PUSH
24381: LD_INT 0
24383: PUSH
24384: LD_INT 3
24386: NEG
24387: PUSH
24388: EMPTY
24389: LIST
24390: LIST
24391: PUSH
24392: LD_INT 0
24394: PUSH
24395: LD_INT 4
24397: NEG
24398: PUSH
24399: EMPTY
24400: LIST
24401: LIST
24402: PUSH
24403: LD_INT 1
24405: PUSH
24406: LD_INT 3
24408: NEG
24409: PUSH
24410: EMPTY
24411: LIST
24412: LIST
24413: PUSH
24414: LD_INT 1
24416: PUSH
24417: LD_INT 2
24419: NEG
24420: PUSH
24421: EMPTY
24422: LIST
24423: LIST
24424: PUSH
24425: LD_INT 0
24427: PUSH
24428: LD_INT 2
24430: NEG
24431: PUSH
24432: EMPTY
24433: LIST
24434: LIST
24435: PUSH
24436: LD_INT 1
24438: NEG
24439: PUSH
24440: LD_INT 3
24442: NEG
24443: PUSH
24444: EMPTY
24445: LIST
24446: LIST
24447: PUSH
24448: LD_INT 1
24450: NEG
24451: PUSH
24452: LD_INT 4
24454: NEG
24455: PUSH
24456: EMPTY
24457: LIST
24458: LIST
24459: PUSH
24460: LD_INT 2
24462: PUSH
24463: LD_INT 2
24465: NEG
24466: PUSH
24467: EMPTY
24468: LIST
24469: LIST
24470: PUSH
24471: LD_INT 2
24473: NEG
24474: PUSH
24475: LD_INT 4
24477: NEG
24478: PUSH
24479: EMPTY
24480: LIST
24481: LIST
24482: PUSH
24483: LD_INT 4
24485: PUSH
24486: LD_INT 0
24488: PUSH
24489: EMPTY
24490: LIST
24491: LIST
24492: PUSH
24493: LD_INT 4
24495: PUSH
24496: LD_INT 1
24498: NEG
24499: PUSH
24500: EMPTY
24501: LIST
24502: LIST
24503: PUSH
24504: LD_INT 5
24506: PUSH
24507: LD_INT 0
24509: PUSH
24510: EMPTY
24511: LIST
24512: LIST
24513: PUSH
24514: LD_INT 5
24516: PUSH
24517: LD_INT 1
24519: PUSH
24520: EMPTY
24521: LIST
24522: LIST
24523: PUSH
24524: LD_INT 4
24526: PUSH
24527: LD_INT 1
24529: PUSH
24530: EMPTY
24531: LIST
24532: LIST
24533: PUSH
24534: LD_INT 3
24536: PUSH
24537: LD_INT 0
24539: PUSH
24540: EMPTY
24541: LIST
24542: LIST
24543: PUSH
24544: LD_INT 3
24546: PUSH
24547: LD_INT 1
24549: NEG
24550: PUSH
24551: EMPTY
24552: LIST
24553: LIST
24554: PUSH
24555: LD_INT 3
24557: PUSH
24558: LD_INT 2
24560: NEG
24561: PUSH
24562: EMPTY
24563: LIST
24564: LIST
24565: PUSH
24566: LD_INT 5
24568: PUSH
24569: LD_INT 2
24571: PUSH
24572: EMPTY
24573: LIST
24574: LIST
24575: PUSH
24576: EMPTY
24577: LIST
24578: LIST
24579: LIST
24580: LIST
24581: LIST
24582: LIST
24583: LIST
24584: LIST
24585: LIST
24586: LIST
24587: LIST
24588: LIST
24589: LIST
24590: LIST
24591: LIST
24592: LIST
24593: LIST
24594: LIST
24595: LIST
24596: LIST
24597: LIST
24598: LIST
24599: LIST
24600: LIST
24601: LIST
24602: LIST
24603: LIST
24604: LIST
24605: LIST
24606: LIST
24607: LIST
24608: LIST
24609: LIST
24610: LIST
24611: LIST
24612: LIST
24613: LIST
24614: LIST
24615: LIST
24616: LIST
24617: LIST
24618: LIST
24619: LIST
24620: LIST
24621: LIST
24622: ST_TO_ADDR
// Factory3 = [ [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] , [ - 3 , - 3 ] , [ - 3 , - 4 ] , [ - 2 , - 3 ] , [ - 2 , - 2 ] , [ - 3 , - 2 ] , [ - 4 , - 3 ] , [ - 4 , - 4 ] , [ - 2 , - 4 ] , [ - 4 , - 2 ] , [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] ] ;
24623: LD_ADDR_VAR 0 32
24627: PUSH
24628: LD_INT 4
24630: NEG
24631: PUSH
24632: LD_INT 0
24634: PUSH
24635: EMPTY
24636: LIST
24637: LIST
24638: PUSH
24639: LD_INT 4
24641: NEG
24642: PUSH
24643: LD_INT 1
24645: NEG
24646: PUSH
24647: EMPTY
24648: LIST
24649: LIST
24650: PUSH
24651: LD_INT 3
24653: NEG
24654: PUSH
24655: LD_INT 0
24657: PUSH
24658: EMPTY
24659: LIST
24660: LIST
24661: PUSH
24662: LD_INT 3
24664: NEG
24665: PUSH
24666: LD_INT 1
24668: PUSH
24669: EMPTY
24670: LIST
24671: LIST
24672: PUSH
24673: LD_INT 4
24675: NEG
24676: PUSH
24677: LD_INT 1
24679: PUSH
24680: EMPTY
24681: LIST
24682: LIST
24683: PUSH
24684: LD_INT 5
24686: NEG
24687: PUSH
24688: LD_INT 0
24690: PUSH
24691: EMPTY
24692: LIST
24693: LIST
24694: PUSH
24695: LD_INT 5
24697: NEG
24698: PUSH
24699: LD_INT 1
24701: NEG
24702: PUSH
24703: EMPTY
24704: LIST
24705: LIST
24706: PUSH
24707: LD_INT 5
24709: NEG
24710: PUSH
24711: LD_INT 2
24713: NEG
24714: PUSH
24715: EMPTY
24716: LIST
24717: LIST
24718: PUSH
24719: LD_INT 3
24721: NEG
24722: PUSH
24723: LD_INT 2
24725: PUSH
24726: EMPTY
24727: LIST
24728: LIST
24729: PUSH
24730: LD_INT 3
24732: NEG
24733: PUSH
24734: LD_INT 3
24736: NEG
24737: PUSH
24738: EMPTY
24739: LIST
24740: LIST
24741: PUSH
24742: LD_INT 3
24744: NEG
24745: PUSH
24746: LD_INT 4
24748: NEG
24749: PUSH
24750: EMPTY
24751: LIST
24752: LIST
24753: PUSH
24754: LD_INT 2
24756: NEG
24757: PUSH
24758: LD_INT 3
24760: NEG
24761: PUSH
24762: EMPTY
24763: LIST
24764: LIST
24765: PUSH
24766: LD_INT 2
24768: NEG
24769: PUSH
24770: LD_INT 2
24772: NEG
24773: PUSH
24774: EMPTY
24775: LIST
24776: LIST
24777: PUSH
24778: LD_INT 3
24780: NEG
24781: PUSH
24782: LD_INT 2
24784: NEG
24785: PUSH
24786: EMPTY
24787: LIST
24788: LIST
24789: PUSH
24790: LD_INT 4
24792: NEG
24793: PUSH
24794: LD_INT 3
24796: NEG
24797: PUSH
24798: EMPTY
24799: LIST
24800: LIST
24801: PUSH
24802: LD_INT 4
24804: NEG
24805: PUSH
24806: LD_INT 4
24808: NEG
24809: PUSH
24810: EMPTY
24811: LIST
24812: LIST
24813: PUSH
24814: LD_INT 2
24816: NEG
24817: PUSH
24818: LD_INT 4
24820: NEG
24821: PUSH
24822: EMPTY
24823: LIST
24824: LIST
24825: PUSH
24826: LD_INT 4
24828: NEG
24829: PUSH
24830: LD_INT 2
24832: NEG
24833: PUSH
24834: EMPTY
24835: LIST
24836: LIST
24837: PUSH
24838: LD_INT 0
24840: PUSH
24841: LD_INT 4
24843: NEG
24844: PUSH
24845: EMPTY
24846: LIST
24847: LIST
24848: PUSH
24849: LD_INT 0
24851: PUSH
24852: LD_INT 5
24854: NEG
24855: PUSH
24856: EMPTY
24857: LIST
24858: LIST
24859: PUSH
24860: LD_INT 1
24862: PUSH
24863: LD_INT 4
24865: NEG
24866: PUSH
24867: EMPTY
24868: LIST
24869: LIST
24870: PUSH
24871: LD_INT 1
24873: PUSH
24874: LD_INT 3
24876: NEG
24877: PUSH
24878: EMPTY
24879: LIST
24880: LIST
24881: PUSH
24882: LD_INT 0
24884: PUSH
24885: LD_INT 3
24887: NEG
24888: PUSH
24889: EMPTY
24890: LIST
24891: LIST
24892: PUSH
24893: LD_INT 1
24895: NEG
24896: PUSH
24897: LD_INT 4
24899: NEG
24900: PUSH
24901: EMPTY
24902: LIST
24903: LIST
24904: PUSH
24905: LD_INT 1
24907: NEG
24908: PUSH
24909: LD_INT 5
24911: NEG
24912: PUSH
24913: EMPTY
24914: LIST
24915: LIST
24916: PUSH
24917: LD_INT 2
24919: PUSH
24920: LD_INT 3
24922: NEG
24923: PUSH
24924: EMPTY
24925: LIST
24926: LIST
24927: PUSH
24928: LD_INT 2
24930: NEG
24931: PUSH
24932: LD_INT 5
24934: NEG
24935: PUSH
24936: EMPTY
24937: LIST
24938: LIST
24939: PUSH
24940: LD_INT 3
24942: PUSH
24943: LD_INT 0
24945: PUSH
24946: EMPTY
24947: LIST
24948: LIST
24949: PUSH
24950: LD_INT 3
24952: PUSH
24953: LD_INT 1
24955: NEG
24956: PUSH
24957: EMPTY
24958: LIST
24959: LIST
24960: PUSH
24961: LD_INT 4
24963: PUSH
24964: LD_INT 0
24966: PUSH
24967: EMPTY
24968: LIST
24969: LIST
24970: PUSH
24971: LD_INT 4
24973: PUSH
24974: LD_INT 1
24976: PUSH
24977: EMPTY
24978: LIST
24979: LIST
24980: PUSH
24981: LD_INT 3
24983: PUSH
24984: LD_INT 1
24986: PUSH
24987: EMPTY
24988: LIST
24989: LIST
24990: PUSH
24991: LD_INT 2
24993: PUSH
24994: LD_INT 0
24996: PUSH
24997: EMPTY
24998: LIST
24999: LIST
25000: PUSH
25001: LD_INT 2
25003: PUSH
25004: LD_INT 1
25006: NEG
25007: PUSH
25008: EMPTY
25009: LIST
25010: LIST
25011: PUSH
25012: LD_INT 2
25014: PUSH
25015: LD_INT 2
25017: NEG
25018: PUSH
25019: EMPTY
25020: LIST
25021: LIST
25022: PUSH
25023: LD_INT 4
25025: PUSH
25026: LD_INT 2
25028: PUSH
25029: EMPTY
25030: LIST
25031: LIST
25032: PUSH
25033: LD_INT 4
25035: PUSH
25036: LD_INT 4
25038: PUSH
25039: EMPTY
25040: LIST
25041: LIST
25042: PUSH
25043: LD_INT 4
25045: PUSH
25046: LD_INT 3
25048: PUSH
25049: EMPTY
25050: LIST
25051: LIST
25052: PUSH
25053: LD_INT 5
25055: PUSH
25056: LD_INT 4
25058: PUSH
25059: EMPTY
25060: LIST
25061: LIST
25062: PUSH
25063: LD_INT 5
25065: PUSH
25066: LD_INT 5
25068: PUSH
25069: EMPTY
25070: LIST
25071: LIST
25072: PUSH
25073: LD_INT 4
25075: PUSH
25076: LD_INT 5
25078: PUSH
25079: EMPTY
25080: LIST
25081: LIST
25082: PUSH
25083: LD_INT 3
25085: PUSH
25086: LD_INT 4
25088: PUSH
25089: EMPTY
25090: LIST
25091: LIST
25092: PUSH
25093: LD_INT 3
25095: PUSH
25096: LD_INT 3
25098: PUSH
25099: EMPTY
25100: LIST
25101: LIST
25102: PUSH
25103: LD_INT 5
25105: PUSH
25106: LD_INT 3
25108: PUSH
25109: EMPTY
25110: LIST
25111: LIST
25112: PUSH
25113: LD_INT 3
25115: PUSH
25116: LD_INT 5
25118: PUSH
25119: EMPTY
25120: LIST
25121: LIST
25122: PUSH
25123: EMPTY
25124: LIST
25125: LIST
25126: LIST
25127: LIST
25128: LIST
25129: LIST
25130: LIST
25131: LIST
25132: LIST
25133: LIST
25134: LIST
25135: LIST
25136: LIST
25137: LIST
25138: LIST
25139: LIST
25140: LIST
25141: LIST
25142: LIST
25143: LIST
25144: LIST
25145: LIST
25146: LIST
25147: LIST
25148: LIST
25149: LIST
25150: LIST
25151: LIST
25152: LIST
25153: LIST
25154: LIST
25155: LIST
25156: LIST
25157: LIST
25158: LIST
25159: LIST
25160: LIST
25161: LIST
25162: LIST
25163: LIST
25164: LIST
25165: LIST
25166: LIST
25167: LIST
25168: LIST
25169: ST_TO_ADDR
// Factory4 = [ [ - 4 , - 4 ] , [ - 4 , - 5 ] , [ - 3 , - 4 ] , [ - 3 , - 3 ] , [ - 4 , - 3 ] , [ - 5 , - 4 ] , [ - 5 , - 5 ] , [ - 3 , - 5 ] , [ - 5 , - 3 ] , [ 0 , - 3 ] , [ 0 , - 4 ] , [ 1 , - 3 ] , [ 1 , - 2 ] , [ 0 , - 2 ] , [ - 1 , - 3 ] , [ - 1 , - 4 ] , [ 2 , - 2 ] , [ - 2 , - 4 ] , [ 4 , 0 ] , [ 4 , - 1 ] , [ 5 , 0 ] , [ 5 , 1 ] , [ 4 , 1 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 3 , - 2 ] , [ 5 , 2 ] , [ 3 , 3 ] , [ 3 , 2 ] , [ 4 , 3 ] , [ 4 , 4 ] , [ 3 , 4 ] , [ 2 , 3 ] , [ 2 , 2 ] , [ 4 , 2 ] , [ 2 , 4 ] , [ 0 , 4 ] , [ 0 , 3 ] , [ 1 , 4 ] , [ 1 , 5 ] , [ 0 , 5 ] , [ - 1 , 4 ] , [ - 1 , 3 ] , [ 2 , 5 ] , [ - 2 , 3 ] ] ;
25170: LD_ADDR_VAR 0 33
25174: PUSH
25175: LD_INT 4
25177: NEG
25178: PUSH
25179: LD_INT 4
25181: NEG
25182: PUSH
25183: EMPTY
25184: LIST
25185: LIST
25186: PUSH
25187: LD_INT 4
25189: NEG
25190: PUSH
25191: LD_INT 5
25193: NEG
25194: PUSH
25195: EMPTY
25196: LIST
25197: LIST
25198: PUSH
25199: LD_INT 3
25201: NEG
25202: PUSH
25203: LD_INT 4
25205: NEG
25206: PUSH
25207: EMPTY
25208: LIST
25209: LIST
25210: PUSH
25211: LD_INT 3
25213: NEG
25214: PUSH
25215: LD_INT 3
25217: NEG
25218: PUSH
25219: EMPTY
25220: LIST
25221: LIST
25222: PUSH
25223: LD_INT 4
25225: NEG
25226: PUSH
25227: LD_INT 3
25229: NEG
25230: PUSH
25231: EMPTY
25232: LIST
25233: LIST
25234: PUSH
25235: LD_INT 5
25237: NEG
25238: PUSH
25239: LD_INT 4
25241: NEG
25242: PUSH
25243: EMPTY
25244: LIST
25245: LIST
25246: PUSH
25247: LD_INT 5
25249: NEG
25250: PUSH
25251: LD_INT 5
25253: NEG
25254: PUSH
25255: EMPTY
25256: LIST
25257: LIST
25258: PUSH
25259: LD_INT 3
25261: NEG
25262: PUSH
25263: LD_INT 5
25265: NEG
25266: PUSH
25267: EMPTY
25268: LIST
25269: LIST
25270: PUSH
25271: LD_INT 5
25273: NEG
25274: PUSH
25275: LD_INT 3
25277: NEG
25278: PUSH
25279: EMPTY
25280: LIST
25281: LIST
25282: PUSH
25283: LD_INT 0
25285: PUSH
25286: LD_INT 3
25288: NEG
25289: PUSH
25290: EMPTY
25291: LIST
25292: LIST
25293: PUSH
25294: LD_INT 0
25296: PUSH
25297: LD_INT 4
25299: NEG
25300: PUSH
25301: EMPTY
25302: LIST
25303: LIST
25304: PUSH
25305: LD_INT 1
25307: PUSH
25308: LD_INT 3
25310: NEG
25311: PUSH
25312: EMPTY
25313: LIST
25314: LIST
25315: PUSH
25316: LD_INT 1
25318: PUSH
25319: LD_INT 2
25321: NEG
25322: PUSH
25323: EMPTY
25324: LIST
25325: LIST
25326: PUSH
25327: LD_INT 0
25329: PUSH
25330: LD_INT 2
25332: NEG
25333: PUSH
25334: EMPTY
25335: LIST
25336: LIST
25337: PUSH
25338: LD_INT 1
25340: NEG
25341: PUSH
25342: LD_INT 3
25344: NEG
25345: PUSH
25346: EMPTY
25347: LIST
25348: LIST
25349: PUSH
25350: LD_INT 1
25352: NEG
25353: PUSH
25354: LD_INT 4
25356: NEG
25357: PUSH
25358: EMPTY
25359: LIST
25360: LIST
25361: PUSH
25362: LD_INT 2
25364: PUSH
25365: LD_INT 2
25367: NEG
25368: PUSH
25369: EMPTY
25370: LIST
25371: LIST
25372: PUSH
25373: LD_INT 2
25375: NEG
25376: PUSH
25377: LD_INT 4
25379: NEG
25380: PUSH
25381: EMPTY
25382: LIST
25383: LIST
25384: PUSH
25385: LD_INT 4
25387: PUSH
25388: LD_INT 0
25390: PUSH
25391: EMPTY
25392: LIST
25393: LIST
25394: PUSH
25395: LD_INT 4
25397: PUSH
25398: LD_INT 1
25400: NEG
25401: PUSH
25402: EMPTY
25403: LIST
25404: LIST
25405: PUSH
25406: LD_INT 5
25408: PUSH
25409: LD_INT 0
25411: PUSH
25412: EMPTY
25413: LIST
25414: LIST
25415: PUSH
25416: LD_INT 5
25418: PUSH
25419: LD_INT 1
25421: PUSH
25422: EMPTY
25423: LIST
25424: LIST
25425: PUSH
25426: LD_INT 4
25428: PUSH
25429: LD_INT 1
25431: PUSH
25432: EMPTY
25433: LIST
25434: LIST
25435: PUSH
25436: LD_INT 3
25438: PUSH
25439: LD_INT 0
25441: PUSH
25442: EMPTY
25443: LIST
25444: LIST
25445: PUSH
25446: LD_INT 3
25448: PUSH
25449: LD_INT 1
25451: NEG
25452: PUSH
25453: EMPTY
25454: LIST
25455: LIST
25456: PUSH
25457: LD_INT 3
25459: PUSH
25460: LD_INT 2
25462: NEG
25463: PUSH
25464: EMPTY
25465: LIST
25466: LIST
25467: PUSH
25468: LD_INT 5
25470: PUSH
25471: LD_INT 2
25473: PUSH
25474: EMPTY
25475: LIST
25476: LIST
25477: PUSH
25478: LD_INT 3
25480: PUSH
25481: LD_INT 3
25483: PUSH
25484: EMPTY
25485: LIST
25486: LIST
25487: PUSH
25488: LD_INT 3
25490: PUSH
25491: LD_INT 2
25493: PUSH
25494: EMPTY
25495: LIST
25496: LIST
25497: PUSH
25498: LD_INT 4
25500: PUSH
25501: LD_INT 3
25503: PUSH
25504: EMPTY
25505: LIST
25506: LIST
25507: PUSH
25508: LD_INT 4
25510: PUSH
25511: LD_INT 4
25513: PUSH
25514: EMPTY
25515: LIST
25516: LIST
25517: PUSH
25518: LD_INT 3
25520: PUSH
25521: LD_INT 4
25523: PUSH
25524: EMPTY
25525: LIST
25526: LIST
25527: PUSH
25528: LD_INT 2
25530: PUSH
25531: LD_INT 3
25533: PUSH
25534: EMPTY
25535: LIST
25536: LIST
25537: PUSH
25538: LD_INT 2
25540: PUSH
25541: LD_INT 2
25543: PUSH
25544: EMPTY
25545: LIST
25546: LIST
25547: PUSH
25548: LD_INT 4
25550: PUSH
25551: LD_INT 2
25553: PUSH
25554: EMPTY
25555: LIST
25556: LIST
25557: PUSH
25558: LD_INT 2
25560: PUSH
25561: LD_INT 4
25563: PUSH
25564: EMPTY
25565: LIST
25566: LIST
25567: PUSH
25568: LD_INT 0
25570: PUSH
25571: LD_INT 4
25573: PUSH
25574: EMPTY
25575: LIST
25576: LIST
25577: PUSH
25578: LD_INT 0
25580: PUSH
25581: LD_INT 3
25583: PUSH
25584: EMPTY
25585: LIST
25586: LIST
25587: PUSH
25588: LD_INT 1
25590: PUSH
25591: LD_INT 4
25593: PUSH
25594: EMPTY
25595: LIST
25596: LIST
25597: PUSH
25598: LD_INT 1
25600: PUSH
25601: LD_INT 5
25603: PUSH
25604: EMPTY
25605: LIST
25606: LIST
25607: PUSH
25608: LD_INT 0
25610: PUSH
25611: LD_INT 5
25613: PUSH
25614: EMPTY
25615: LIST
25616: LIST
25617: PUSH
25618: LD_INT 1
25620: NEG
25621: PUSH
25622: LD_INT 4
25624: PUSH
25625: EMPTY
25626: LIST
25627: LIST
25628: PUSH
25629: LD_INT 1
25631: NEG
25632: PUSH
25633: LD_INT 3
25635: PUSH
25636: EMPTY
25637: LIST
25638: LIST
25639: PUSH
25640: LD_INT 2
25642: PUSH
25643: LD_INT 5
25645: PUSH
25646: EMPTY
25647: LIST
25648: LIST
25649: PUSH
25650: LD_INT 2
25652: NEG
25653: PUSH
25654: LD_INT 3
25656: PUSH
25657: EMPTY
25658: LIST
25659: LIST
25660: PUSH
25661: EMPTY
25662: LIST
25663: LIST
25664: LIST
25665: LIST
25666: LIST
25667: LIST
25668: LIST
25669: LIST
25670: LIST
25671: LIST
25672: LIST
25673: LIST
25674: LIST
25675: LIST
25676: LIST
25677: LIST
25678: LIST
25679: LIST
25680: LIST
25681: LIST
25682: LIST
25683: LIST
25684: LIST
25685: LIST
25686: LIST
25687: LIST
25688: LIST
25689: LIST
25690: LIST
25691: LIST
25692: LIST
25693: LIST
25694: LIST
25695: LIST
25696: LIST
25697: LIST
25698: LIST
25699: LIST
25700: LIST
25701: LIST
25702: LIST
25703: LIST
25704: LIST
25705: LIST
25706: LIST
25707: ST_TO_ADDR
// Factory5 = [ [ 0 , - 4 ] , [ 0 , - 5 ] , [ 1 , - 4 ] , [ 1 , - 3 ] , [ 0 , - 3 ] , [ - 1 , - 4 ] , [ - 1 , - 5 ] , [ 2 , - 3 ] , [ - 2 , - 5 ] , [ 3 , 0 ] , [ 3 , - 1 ] , [ 4 , 0 ] , [ 4 , 1 ] , [ 3 , 1 ] , [ 2 , 0 ] , [ 2 , - 1 ] , [ 2 , - 2 ] , [ 4 , 2 ] , [ 4 , 4 ] , [ 4 , 3 ] , [ 5 , 4 ] , [ 5 , 5 ] , [ 4 , 5 ] , [ 3 , 4 ] , [ 3 , 3 ] , [ 5 , 3 ] , [ 3 , 5 ] , [ 0 , 3 ] , [ 0 , 2 ] , [ 1 , 3 ] , [ 1 , 4 ] , [ 0 , 4 ] , [ - 1 , 3 ] , [ - 1 , 2 ] , [ 2 , 4 ] , [ - 2 , 2 ] , [ - 4 , 0 ] , [ - 4 , - 1 ] , [ - 3 , 0 ] , [ - 3 , 1 ] , [ - 4 , 1 ] , [ - 5 , 0 ] , [ - 5 , - 1 ] , [ - 5 , - 2 ] , [ - 3 , 2 ] ] ;
25708: LD_ADDR_VAR 0 34
25712: PUSH
25713: LD_INT 0
25715: PUSH
25716: LD_INT 4
25718: NEG
25719: PUSH
25720: EMPTY
25721: LIST
25722: LIST
25723: PUSH
25724: LD_INT 0
25726: PUSH
25727: LD_INT 5
25729: NEG
25730: PUSH
25731: EMPTY
25732: LIST
25733: LIST
25734: PUSH
25735: LD_INT 1
25737: PUSH
25738: LD_INT 4
25740: NEG
25741: PUSH
25742: EMPTY
25743: LIST
25744: LIST
25745: PUSH
25746: LD_INT 1
25748: PUSH
25749: LD_INT 3
25751: NEG
25752: PUSH
25753: EMPTY
25754: LIST
25755: LIST
25756: PUSH
25757: LD_INT 0
25759: PUSH
25760: LD_INT 3
25762: NEG
25763: PUSH
25764: EMPTY
25765: LIST
25766: LIST
25767: PUSH
25768: LD_INT 1
25770: NEG
25771: PUSH
25772: LD_INT 4
25774: NEG
25775: PUSH
25776: EMPTY
25777: LIST
25778: LIST
25779: PUSH
25780: LD_INT 1
25782: NEG
25783: PUSH
25784: LD_INT 5
25786: NEG
25787: PUSH
25788: EMPTY
25789: LIST
25790: LIST
25791: PUSH
25792: LD_INT 2
25794: PUSH
25795: LD_INT 3
25797: NEG
25798: PUSH
25799: EMPTY
25800: LIST
25801: LIST
25802: PUSH
25803: LD_INT 2
25805: NEG
25806: PUSH
25807: LD_INT 5
25809: NEG
25810: PUSH
25811: EMPTY
25812: LIST
25813: LIST
25814: PUSH
25815: LD_INT 3
25817: PUSH
25818: LD_INT 0
25820: PUSH
25821: EMPTY
25822: LIST
25823: LIST
25824: PUSH
25825: LD_INT 3
25827: PUSH
25828: LD_INT 1
25830: NEG
25831: PUSH
25832: EMPTY
25833: LIST
25834: LIST
25835: PUSH
25836: LD_INT 4
25838: PUSH
25839: LD_INT 0
25841: PUSH
25842: EMPTY
25843: LIST
25844: LIST
25845: PUSH
25846: LD_INT 4
25848: PUSH
25849: LD_INT 1
25851: PUSH
25852: EMPTY
25853: LIST
25854: LIST
25855: PUSH
25856: LD_INT 3
25858: PUSH
25859: LD_INT 1
25861: PUSH
25862: EMPTY
25863: LIST
25864: LIST
25865: PUSH
25866: LD_INT 2
25868: PUSH
25869: LD_INT 0
25871: PUSH
25872: EMPTY
25873: LIST
25874: LIST
25875: PUSH
25876: LD_INT 2
25878: PUSH
25879: LD_INT 1
25881: NEG
25882: PUSH
25883: EMPTY
25884: LIST
25885: LIST
25886: PUSH
25887: LD_INT 2
25889: PUSH
25890: LD_INT 2
25892: NEG
25893: PUSH
25894: EMPTY
25895: LIST
25896: LIST
25897: PUSH
25898: LD_INT 4
25900: PUSH
25901: LD_INT 2
25903: PUSH
25904: EMPTY
25905: LIST
25906: LIST
25907: PUSH
25908: LD_INT 4
25910: PUSH
25911: LD_INT 4
25913: PUSH
25914: EMPTY
25915: LIST
25916: LIST
25917: PUSH
25918: LD_INT 4
25920: PUSH
25921: LD_INT 3
25923: PUSH
25924: EMPTY
25925: LIST
25926: LIST
25927: PUSH
25928: LD_INT 5
25930: PUSH
25931: LD_INT 4
25933: PUSH
25934: EMPTY
25935: LIST
25936: LIST
25937: PUSH
25938: LD_INT 5
25940: PUSH
25941: LD_INT 5
25943: PUSH
25944: EMPTY
25945: LIST
25946: LIST
25947: PUSH
25948: LD_INT 4
25950: PUSH
25951: LD_INT 5
25953: PUSH
25954: EMPTY
25955: LIST
25956: LIST
25957: PUSH
25958: LD_INT 3
25960: PUSH
25961: LD_INT 4
25963: PUSH
25964: EMPTY
25965: LIST
25966: LIST
25967: PUSH
25968: LD_INT 3
25970: PUSH
25971: LD_INT 3
25973: PUSH
25974: EMPTY
25975: LIST
25976: LIST
25977: PUSH
25978: LD_INT 5
25980: PUSH
25981: LD_INT 3
25983: PUSH
25984: EMPTY
25985: LIST
25986: LIST
25987: PUSH
25988: LD_INT 3
25990: PUSH
25991: LD_INT 5
25993: PUSH
25994: EMPTY
25995: LIST
25996: LIST
25997: PUSH
25998: LD_INT 0
26000: PUSH
26001: LD_INT 3
26003: PUSH
26004: EMPTY
26005: LIST
26006: LIST
26007: PUSH
26008: LD_INT 0
26010: PUSH
26011: LD_INT 2
26013: PUSH
26014: EMPTY
26015: LIST
26016: LIST
26017: PUSH
26018: LD_INT 1
26020: PUSH
26021: LD_INT 3
26023: PUSH
26024: EMPTY
26025: LIST
26026: LIST
26027: PUSH
26028: LD_INT 1
26030: PUSH
26031: LD_INT 4
26033: PUSH
26034: EMPTY
26035: LIST
26036: LIST
26037: PUSH
26038: LD_INT 0
26040: PUSH
26041: LD_INT 4
26043: PUSH
26044: EMPTY
26045: LIST
26046: LIST
26047: PUSH
26048: LD_INT 1
26050: NEG
26051: PUSH
26052: LD_INT 3
26054: PUSH
26055: EMPTY
26056: LIST
26057: LIST
26058: PUSH
26059: LD_INT 1
26061: NEG
26062: PUSH
26063: LD_INT 2
26065: PUSH
26066: EMPTY
26067: LIST
26068: LIST
26069: PUSH
26070: LD_INT 2
26072: PUSH
26073: LD_INT 4
26075: PUSH
26076: EMPTY
26077: LIST
26078: LIST
26079: PUSH
26080: LD_INT 2
26082: NEG
26083: PUSH
26084: LD_INT 2
26086: PUSH
26087: EMPTY
26088: LIST
26089: LIST
26090: PUSH
26091: LD_INT 4
26093: NEG
26094: PUSH
26095: LD_INT 0
26097: PUSH
26098: EMPTY
26099: LIST
26100: LIST
26101: PUSH
26102: LD_INT 4
26104: NEG
26105: PUSH
26106: LD_INT 1
26108: NEG
26109: PUSH
26110: EMPTY
26111: LIST
26112: LIST
26113: PUSH
26114: LD_INT 3
26116: NEG
26117: PUSH
26118: LD_INT 0
26120: PUSH
26121: EMPTY
26122: LIST
26123: LIST
26124: PUSH
26125: LD_INT 3
26127: NEG
26128: PUSH
26129: LD_INT 1
26131: PUSH
26132: EMPTY
26133: LIST
26134: LIST
26135: PUSH
26136: LD_INT 4
26138: NEG
26139: PUSH
26140: LD_INT 1
26142: PUSH
26143: EMPTY
26144: LIST
26145: LIST
26146: PUSH
26147: LD_INT 5
26149: NEG
26150: PUSH
26151: LD_INT 0
26153: PUSH
26154: EMPTY
26155: LIST
26156: LIST
26157: PUSH
26158: LD_INT 5
26160: NEG
26161: PUSH
26162: LD_INT 1
26164: NEG
26165: PUSH
26166: EMPTY
26167: LIST
26168: LIST
26169: PUSH
26170: LD_INT 5
26172: NEG
26173: PUSH
26174: LD_INT 2
26176: NEG
26177: PUSH
26178: EMPTY
26179: LIST
26180: LIST
26181: PUSH
26182: LD_INT 3
26184: NEG
26185: PUSH
26186: LD_INT 2
26188: PUSH
26189: EMPTY
26190: LIST
26191: LIST
26192: PUSH
26193: EMPTY
26194: LIST
26195: LIST
26196: LIST
26197: LIST
26198: LIST
26199: LIST
26200: LIST
26201: LIST
26202: LIST
26203: LIST
26204: LIST
26205: LIST
26206: LIST
26207: LIST
26208: LIST
26209: LIST
26210: LIST
26211: LIST
26212: LIST
26213: LIST
26214: LIST
26215: LIST
26216: LIST
26217: LIST
26218: LIST
26219: LIST
26220: LIST
26221: LIST
26222: LIST
26223: LIST
26224: LIST
26225: LIST
26226: LIST
26227: LIST
26228: LIST
26229: LIST
26230: LIST
26231: LIST
26232: LIST
26233: LIST
26234: LIST
26235: LIST
26236: LIST
26237: LIST
26238: LIST
26239: ST_TO_ADDR
// end ; end ;
26240: GO 26243
26242: POP
// case btype of b_depot , b_warehouse :
26243: LD_VAR 0 1
26247: PUSH
26248: LD_INT 0
26250: DOUBLE
26251: EQUAL
26252: IFTRUE 26262
26254: LD_INT 1
26256: DOUBLE
26257: EQUAL
26258: IFTRUE 26262
26260: GO 26463
26262: POP
// case nation of nation_american :
26263: LD_VAR 0 5
26267: PUSH
26268: LD_INT 1
26270: DOUBLE
26271: EQUAL
26272: IFTRUE 26276
26274: GO 26332
26276: POP
// temp_list = [ DepotAm0 , DepotAm1 , DepotAm2 , DepotAm3 , DepotAm4 , DepotAm5 ] [ dir + 1 ] ; nation_arabian :
26277: LD_ADDR_VAR 0 9
26281: PUSH
26282: LD_VAR 0 11
26286: PUSH
26287: LD_VAR 0 12
26291: PUSH
26292: LD_VAR 0 13
26296: PUSH
26297: LD_VAR 0 14
26301: PUSH
26302: LD_VAR 0 15
26306: PUSH
26307: LD_VAR 0 16
26311: PUSH
26312: EMPTY
26313: LIST
26314: LIST
26315: LIST
26316: LIST
26317: LIST
26318: LIST
26319: PUSH
26320: LD_VAR 0 4
26324: PUSH
26325: LD_INT 1
26327: PLUS
26328: ARRAY
26329: ST_TO_ADDR
26330: GO 26461
26332: LD_INT 2
26334: DOUBLE
26335: EQUAL
26336: IFTRUE 26340
26338: GO 26396
26340: POP
// temp_list = [ DepotAr0 , DepotAr1 , DepotAr2 , DepotAr3 , DepotAr4 , DepotAr5 ] [ dir + 1 ] ; nation_russian :
26341: LD_ADDR_VAR 0 9
26345: PUSH
26346: LD_VAR 0 17
26350: PUSH
26351: LD_VAR 0 18
26355: PUSH
26356: LD_VAR 0 19
26360: PUSH
26361: LD_VAR 0 20
26365: PUSH
26366: LD_VAR 0 21
26370: PUSH
26371: LD_VAR 0 22
26375: PUSH
26376: EMPTY
26377: LIST
26378: LIST
26379: LIST
26380: LIST
26381: LIST
26382: LIST
26383: PUSH
26384: LD_VAR 0 4
26388: PUSH
26389: LD_INT 1
26391: PLUS
26392: ARRAY
26393: ST_TO_ADDR
26394: GO 26461
26396: LD_INT 3
26398: DOUBLE
26399: EQUAL
26400: IFTRUE 26404
26402: GO 26460
26404: POP
// temp_list = [ DepotRu0 , DepotRu1 , DepotRu2 , DepotRu3 , DepotRu4 , DepotRu5 ] [ dir + 1 ] ; end ; b_workshop , b_factory :
26405: LD_ADDR_VAR 0 9
26409: PUSH
26410: LD_VAR 0 23
26414: PUSH
26415: LD_VAR 0 24
26419: PUSH
26420: LD_VAR 0 25
26424: PUSH
26425: LD_VAR 0 26
26429: PUSH
26430: LD_VAR 0 27
26434: PUSH
26435: LD_VAR 0 28
26439: PUSH
26440: EMPTY
26441: LIST
26442: LIST
26443: LIST
26444: LIST
26445: LIST
26446: LIST
26447: PUSH
26448: LD_VAR 0 4
26452: PUSH
26453: LD_INT 1
26455: PLUS
26456: ARRAY
26457: ST_TO_ADDR
26458: GO 26461
26460: POP
26461: GO 27010
26463: LD_INT 2
26465: DOUBLE
26466: EQUAL
26467: IFTRUE 26477
26469: LD_INT 3
26471: DOUBLE
26472: EQUAL
26473: IFTRUE 26477
26475: GO 26533
26477: POP
// temp_list = [ Factory0 , Factory1 , Factory2 , Factory3 , Factory4 , Factory5 ] [ dir + 1 ] ; b_ext_track , b_ext_gun , b_ext_rocket , b_ext_noncombat , b_ext_radar , b_ext_siberium , b_ext_stitch , b_ext_computer , b_ext_laser :
26478: LD_ADDR_VAR 0 9
26482: PUSH
26483: LD_VAR 0 29
26487: PUSH
26488: LD_VAR 0 30
26492: PUSH
26493: LD_VAR 0 31
26497: PUSH
26498: LD_VAR 0 32
26502: PUSH
26503: LD_VAR 0 33
26507: PUSH
26508: LD_VAR 0 34
26512: PUSH
26513: EMPTY
26514: LIST
26515: LIST
26516: LIST
26517: LIST
26518: LIST
26519: LIST
26520: PUSH
26521: LD_VAR 0 4
26525: PUSH
26526: LD_INT 1
26528: PLUS
26529: ARRAY
26530: ST_TO_ADDR
26531: GO 27010
26533: LD_INT 16
26535: DOUBLE
26536: EQUAL
26537: IFTRUE 26589
26539: LD_INT 17
26541: DOUBLE
26542: EQUAL
26543: IFTRUE 26589
26545: LD_INT 18
26547: DOUBLE
26548: EQUAL
26549: IFTRUE 26589
26551: LD_INT 19
26553: DOUBLE
26554: EQUAL
26555: IFTRUE 26589
26557: LD_INT 20
26559: DOUBLE
26560: EQUAL
26561: IFTRUE 26589
26563: LD_INT 21
26565: DOUBLE
26566: EQUAL
26567: IFTRUE 26589
26569: LD_INT 23
26571: DOUBLE
26572: EQUAL
26573: IFTRUE 26589
26575: LD_INT 24
26577: DOUBLE
26578: EQUAL
26579: IFTRUE 26589
26581: LD_INT 25
26583: DOUBLE
26584: EQUAL
26585: IFTRUE 26589
26587: GO 26645
26589: POP
// temp_list = [ Ext0 , Ext1 , Ext2 , Ext3 , Ext4 , Ext5 ] [ dir + 1 ] ; b_lab , b_lab_half , b_lab_full , b_lab_biological , b_lab_computer , b_lab_opto , b_lab_siberium , b_lab_spacetime , b_lab_weapon :
26590: LD_ADDR_VAR 0 9
26594: PUSH
26595: LD_VAR 0 35
26599: PUSH
26600: LD_VAR 0 36
26604: PUSH
26605: LD_VAR 0 37
26609: PUSH
26610: LD_VAR 0 38
26614: PUSH
26615: LD_VAR 0 39
26619: PUSH
26620: LD_VAR 0 40
26624: PUSH
26625: EMPTY
26626: LIST
26627: LIST
26628: LIST
26629: LIST
26630: LIST
26631: LIST
26632: PUSH
26633: LD_VAR 0 4
26637: PUSH
26638: LD_INT 1
26640: PLUS
26641: ARRAY
26642: ST_TO_ADDR
26643: GO 27010
26645: LD_INT 6
26647: DOUBLE
26648: EQUAL
26649: IFTRUE 26701
26651: LD_INT 7
26653: DOUBLE
26654: EQUAL
26655: IFTRUE 26701
26657: LD_INT 8
26659: DOUBLE
26660: EQUAL
26661: IFTRUE 26701
26663: LD_INT 13
26665: DOUBLE
26666: EQUAL
26667: IFTRUE 26701
26669: LD_INT 12
26671: DOUBLE
26672: EQUAL
26673: IFTRUE 26701
26675: LD_INT 15
26677: DOUBLE
26678: EQUAL
26679: IFTRUE 26701
26681: LD_INT 11
26683: DOUBLE
26684: EQUAL
26685: IFTRUE 26701
26687: LD_INT 14
26689: DOUBLE
26690: EQUAL
26691: IFTRUE 26701
26693: LD_INT 10
26695: DOUBLE
26696: EQUAL
26697: IFTRUE 26701
26699: GO 26757
26701: POP
// temp_list = [ Lab0 , Lab1 , Lab2 , Lab3 , Lab4 , Lab5 ] [ dir + 1 ] ; b_control_tower :
26702: LD_ADDR_VAR 0 9
26706: PUSH
26707: LD_VAR 0 41
26711: PUSH
26712: LD_VAR 0 42
26716: PUSH
26717: LD_VAR 0 43
26721: PUSH
26722: LD_VAR 0 44
26726: PUSH
26727: LD_VAR 0 45
26731: PUSH
26732: LD_VAR 0 46
26736: PUSH
26737: EMPTY
26738: LIST
26739: LIST
26740: LIST
26741: LIST
26742: LIST
26743: LIST
26744: PUSH
26745: LD_VAR 0 4
26749: PUSH
26750: LD_INT 1
26752: PLUS
26753: ARRAY
26754: ST_TO_ADDR
26755: GO 27010
26757: LD_INT 36
26759: DOUBLE
26760: EQUAL
26761: IFTRUE 26765
26763: GO 26821
26765: POP
// temp_list = [ ControlTower0 , ControlTower1 , ControlTower2 , ControlTower3 , ControlTower4 , ControlTower5 ] [ dir + 1 ] ; b_armoury , b_barracks , b_teleport , b_behemoth :
26766: LD_ADDR_VAR 0 9
26770: PUSH
26771: LD_VAR 0 47
26775: PUSH
26776: LD_VAR 0 48
26780: PUSH
26781: LD_VAR 0 49
26785: PUSH
26786: LD_VAR 0 50
26790: PUSH
26791: LD_VAR 0 51
26795: PUSH
26796: LD_VAR 0 52
26800: PUSH
26801: EMPTY
26802: LIST
26803: LIST
26804: LIST
26805: LIST
26806: LIST
26807: LIST
26808: PUSH
26809: LD_VAR 0 4
26813: PUSH
26814: LD_INT 1
26816: PLUS
26817: ARRAY
26818: ST_TO_ADDR
26819: GO 27010
26821: LD_INT 4
26823: DOUBLE
26824: EQUAL
26825: IFTRUE 26847
26827: LD_INT 5
26829: DOUBLE
26830: EQUAL
26831: IFTRUE 26847
26833: LD_INT 34
26835: DOUBLE
26836: EQUAL
26837: IFTRUE 26847
26839: LD_INT 37
26841: DOUBLE
26842: EQUAL
26843: IFTRUE 26847
26845: GO 26903
26847: POP
// temp_list = [ Barracks0 , Barracks1 , Barracks2 , Barracks3 , Barracks4 , Barracks5 ] [ dir + 1 ] ; b_breastwork , b_bunker , b_turret , b_solar_power , b_oil_power , b_siberite_power , b_oil_mine , b_siberite_mine :
26848: LD_ADDR_VAR 0 9
26852: PUSH
26853: LD_VAR 0 53
26857: PUSH
26858: LD_VAR 0 54
26862: PUSH
26863: LD_VAR 0 55
26867: PUSH
26868: LD_VAR 0 56
26872: PUSH
26873: LD_VAR 0 57
26877: PUSH
26878: LD_VAR 0 58
26882: PUSH
26883: EMPTY
26884: LIST
26885: LIST
26886: LIST
26887: LIST
26888: LIST
26889: LIST
26890: PUSH
26891: LD_VAR 0 4
26895: PUSH
26896: LD_INT 1
26898: PLUS
26899: ARRAY
26900: ST_TO_ADDR
26901: GO 27010
26903: LD_INT 31
26905: DOUBLE
26906: EQUAL
26907: IFTRUE 26953
26909: LD_INT 32
26911: DOUBLE
26912: EQUAL
26913: IFTRUE 26953
26915: LD_INT 33
26917: DOUBLE
26918: EQUAL
26919: IFTRUE 26953
26921: LD_INT 27
26923: DOUBLE
26924: EQUAL
26925: IFTRUE 26953
26927: LD_INT 26
26929: DOUBLE
26930: EQUAL
26931: IFTRUE 26953
26933: LD_INT 28
26935: DOUBLE
26936: EQUAL
26937: IFTRUE 26953
26939: LD_INT 29
26941: DOUBLE
26942: EQUAL
26943: IFTRUE 26953
26945: LD_INT 30
26947: DOUBLE
26948: EQUAL
26949: IFTRUE 26953
26951: GO 27009
26953: POP
// temp_list = [ Bunker0 , Bunker1 , Bunker2 , Bunker3 , Bunker4 , Bunker5 ] [ dir + 1 ] ; end ;
26954: LD_ADDR_VAR 0 9
26958: PUSH
26959: LD_VAR 0 59
26963: PUSH
26964: LD_VAR 0 60
26968: PUSH
26969: LD_VAR 0 61
26973: PUSH
26974: LD_VAR 0 62
26978: PUSH
26979: LD_VAR 0 63
26983: PUSH
26984: LD_VAR 0 64
26988: PUSH
26989: EMPTY
26990: LIST
26991: LIST
26992: LIST
26993: LIST
26994: LIST
26995: LIST
26996: PUSH
26997: LD_VAR 0 4
27001: PUSH
27002: LD_INT 1
27004: PLUS
27005: ARRAY
27006: ST_TO_ADDR
27007: GO 27010
27009: POP
// temp_list2 = [ ] ;
27010: LD_ADDR_VAR 0 10
27014: PUSH
27015: EMPTY
27016: ST_TO_ADDR
// for i in temp_list do
27017: LD_ADDR_VAR 0 8
27021: PUSH
27022: LD_VAR 0 9
27026: PUSH
27027: FOR_IN
27028: IFFALSE 27080
// temp_list2 = temp_list2 ^ [ [ i [ 1 ] + x , i [ 2 ] + y ] ] ;
27030: LD_ADDR_VAR 0 10
27034: PUSH
27035: LD_VAR 0 10
27039: PUSH
27040: LD_VAR 0 8
27044: PUSH
27045: LD_INT 1
27047: ARRAY
27048: PUSH
27049: LD_VAR 0 2
27053: PLUS
27054: PUSH
27055: LD_VAR 0 8
27059: PUSH
27060: LD_INT 2
27062: ARRAY
27063: PUSH
27064: LD_VAR 0 3
27068: PLUS
27069: PUSH
27070: EMPTY
27071: LIST
27072: LIST
27073: PUSH
27074: EMPTY
27075: LIST
27076: ADD
27077: ST_TO_ADDR
27078: GO 27027
27080: POP
27081: POP
// result = temp_list2 ;
27082: LD_ADDR_VAR 0 7
27086: PUSH
27087: LD_VAR 0 10
27091: ST_TO_ADDR
// end ;
27092: LD_VAR 0 7
27096: RET
// export function IsNearbyEntrance ( unit , building , distance ) ; var i , entrance ; begin
27097: LD_INT 0
27099: PPUSH
27100: PPUSH
27101: PPUSH
// result := false ;
27102: LD_ADDR_VAR 0 4
27106: PUSH
27107: LD_INT 0
27109: ST_TO_ADDR
// if not unit or not building or IsInUnit ( unit ) then
27110: LD_VAR 0 1
27114: NOT
27115: PUSH
27116: LD_VAR 0 2
27120: NOT
27121: OR
27122: PUSH
27123: LD_VAR 0 1
27127: PPUSH
27128: CALL_OW 310
27132: OR
27133: IFFALSE 27137
// exit ;
27135: GO 27341
// if distance < 0 then
27137: LD_VAR 0 3
27141: PUSH
27142: LD_INT 0
27144: LESS
27145: IFFALSE 27155
// distance := 0 ;
27147: LD_ADDR_VAR 0 3
27151: PUSH
27152: LD_INT 0
27154: ST_TO_ADDR
// entrance := GetBuildingHexes ( GetBType ( building ) , GetX ( building ) , GetY ( building ) , GetDir ( building ) , GetNation ( building ) , 1 ) ;
27155: LD_ADDR_VAR 0 6
27159: PUSH
27160: LD_VAR 0 2
27164: PPUSH
27165: CALL_OW 266
27169: PPUSH
27170: LD_VAR 0 2
27174: PPUSH
27175: CALL_OW 250
27179: PPUSH
27180: LD_VAR 0 2
27184: PPUSH
27185: CALL_OW 251
27189: PPUSH
27190: LD_VAR 0 2
27194: PPUSH
27195: CALL_OW 254
27199: PPUSH
27200: LD_VAR 0 2
27204: PPUSH
27205: CALL_OW 248
27209: PPUSH
27210: LD_INT 1
27212: PPUSH
27213: CALL 8558 0 6
27217: ST_TO_ADDR
// if not entrance then
27218: LD_VAR 0 6
27222: NOT
27223: IFFALSE 27227
// exit ;
27225: GO 27341
// for i in entrance do
27227: LD_ADDR_VAR 0 5
27231: PUSH
27232: LD_VAR 0 6
27236: PUSH
27237: FOR_IN
27238: IFFALSE 27339
// begin if not distance then
27240: LD_VAR 0 3
27244: NOT
27245: IFFALSE 27290
// begin if IsAt ( unit , i [ 1 ] , i [ 2 ] ) then
27247: LD_VAR 0 1
27251: PPUSH
27252: LD_VAR 0 5
27256: PUSH
27257: LD_INT 1
27259: ARRAY
27260: PPUSH
27261: LD_VAR 0 5
27265: PUSH
27266: LD_INT 2
27268: ARRAY
27269: PPUSH
27270: CALL_OW 307
27274: IFFALSE 27288
// begin result := true ;
27276: LD_ADDR_VAR 0 4
27280: PUSH
27281: LD_INT 1
27283: ST_TO_ADDR
// exit ;
27284: POP
27285: POP
27286: GO 27341
// end ; end else
27288: GO 27337
// begin if GetDistUnitXY ( unit , i [ 1 ] , i [ 2 ] ) <= distance then
27290: LD_VAR 0 1
27294: PPUSH
27295: LD_VAR 0 5
27299: PUSH
27300: LD_INT 1
27302: ARRAY
27303: PPUSH
27304: LD_VAR 0 5
27308: PUSH
27309: LD_INT 2
27311: ARRAY
27312: PPUSH
27313: CALL_OW 297
27317: PUSH
27318: LD_VAR 0 3
27322: LESSEQUAL
27323: IFFALSE 27337
// begin result := true ;
27325: LD_ADDR_VAR 0 4
27329: PUSH
27330: LD_INT 1
27332: ST_TO_ADDR
// exit ;
27333: POP
27334: POP
27335: GO 27341
// end ; end ; end ;
27337: GO 27237
27339: POP
27340: POP
// end ;
27341: LD_VAR 0 4
27345: RET
// export function CanSpot ( unit , unit2 ) ; var i , building ; begin
27346: LD_INT 0
27348: PPUSH
27349: PPUSH
27350: PPUSH
// result := false ;
27351: LD_ADDR_VAR 0 3
27355: PUSH
27356: LD_INT 0
27358: ST_TO_ADDR
// if not unit or not unit2 or not IsOk ( unit ) or not IsOk ( unit2 ) then
27359: LD_VAR 0 1
27363: NOT
27364: PUSH
27365: LD_VAR 0 2
27369: NOT
27370: OR
27371: PUSH
27372: LD_VAR 0 1
27376: PPUSH
27377: CALL_OW 302
27381: NOT
27382: OR
27383: PUSH
27384: LD_VAR 0 2
27388: PPUSH
27389: CALL_OW 302
27393: NOT
27394: OR
27395: IFFALSE 27399
// exit ;
27397: GO 27560
// if GetDistUnits ( unit , NearestUnitToUnit ( FilterAllUnits ( [ [ f_enemy , GetSide ( unit ) ] , [ f_not , [ f_type , unit_building ] ] ] ) , unit ) ) < 8 then
27399: LD_VAR 0 1
27403: PPUSH
27404: LD_INT 81
27406: PUSH
27407: LD_VAR 0 1
27411: PPUSH
27412: CALL_OW 255
27416: PUSH
27417: EMPTY
27418: LIST
27419: LIST
27420: PUSH
27421: LD_INT 3
27423: PUSH
27424: LD_INT 21
27426: PUSH
27427: LD_INT 3
27429: PUSH
27430: EMPTY
27431: LIST
27432: LIST
27433: PUSH
27434: EMPTY
27435: LIST
27436: LIST
27437: PUSH
27438: EMPTY
27439: LIST
27440: LIST
27441: PPUSH
27442: CALL_OW 69
27446: PPUSH
27447: LD_VAR 0 1
27451: PPUSH
27452: CALL_OW 74
27456: PPUSH
27457: CALL_OW 296
27461: PUSH
27462: LD_INT 8
27464: LESS
27465: IFFALSE 27469
// exit ;
27467: GO 27560
// building := IsInUnit ( unit2 ) ;
27469: LD_ADDR_VAR 0 5
27473: PUSH
27474: LD_VAR 0 2
27478: PPUSH
27479: CALL_OW 310
27483: ST_TO_ADDR
// if building then
27484: LD_VAR 0 5
27488: IFFALSE 27515
// result := IsNearbyEntrance ( unit , building , 2 ) else
27490: LD_ADDR_VAR 0 3
27494: PUSH
27495: LD_VAR 0 1
27499: PPUSH
27500: LD_VAR 0 5
27504: PPUSH
27505: LD_INT 2
27507: PPUSH
27508: CALL 27097 0 3
27512: ST_TO_ADDR
27513: GO 27560
// result := ( GetDistUnits ( unit , unit2 ) < 6 and See ( GetSide ( unit2 ) , unit ) ) ;
27515: LD_ADDR_VAR 0 3
27519: PUSH
27520: LD_VAR 0 1
27524: PPUSH
27525: LD_VAR 0 2
27529: PPUSH
27530: CALL_OW 296
27534: PUSH
27535: LD_INT 6
27537: LESS
27538: PUSH
27539: LD_VAR 0 2
27543: PPUSH
27544: CALL_OW 255
27548: PPUSH
27549: LD_VAR 0 1
27553: PPUSH
27554: CALL_OW 292
27558: AND
27559: ST_TO_ADDR
// end ;
27560: LD_VAR 0 3
27564: RET
// export function GetFacExt ( factory ) ; var tmp , i , list ; begin
27565: LD_INT 0
27567: PPUSH
27568: PPUSH
27569: PPUSH
27570: PPUSH
// tmp := [ ] ;
27571: LD_ADDR_VAR 0 3
27575: PUSH
27576: EMPTY
27577: ST_TO_ADDR
// list := [ ] ;
27578: LD_ADDR_VAR 0 5
27582: PUSH
27583: EMPTY
27584: ST_TO_ADDR
// for i = 16 to 25 do
27585: LD_ADDR_VAR 0 4
27589: PUSH
27590: DOUBLE
27591: LD_INT 16
27593: DEC
27594: ST_TO_ADDR
27595: LD_INT 25
27597: PUSH
27598: FOR_TO
27599: IFFALSE 27672
// tmp := tmp ^ FilterAllUnits ( [ [ [ f_side , GetSide ( factory ) ] , [ f_dist , factory , 6 ] , [ f_btype , i ] ] ] ) ;
27601: LD_ADDR_VAR 0 3
27605: PUSH
27606: LD_VAR 0 3
27610: PUSH
27611: LD_INT 22
27613: PUSH
27614: LD_VAR 0 1
27618: PPUSH
27619: CALL_OW 255
27623: PUSH
27624: EMPTY
27625: LIST
27626: LIST
27627: PUSH
27628: LD_INT 91
27630: PUSH
27631: LD_VAR 0 1
27635: PUSH
27636: LD_INT 6
27638: PUSH
27639: EMPTY
27640: LIST
27641: LIST
27642: LIST
27643: PUSH
27644: LD_INT 30
27646: PUSH
27647: LD_VAR 0 4
27651: PUSH
27652: EMPTY
27653: LIST
27654: LIST
27655: PUSH
27656: EMPTY
27657: LIST
27658: LIST
27659: LIST
27660: PUSH
27661: EMPTY
27662: LIST
27663: PPUSH
27664: CALL_OW 69
27668: ADD
27669: ST_TO_ADDR
27670: GO 27598
27672: POP
27673: POP
// for i = 1 to tmp do
27674: LD_ADDR_VAR 0 4
27678: PUSH
27679: DOUBLE
27680: LD_INT 1
27682: DEC
27683: ST_TO_ADDR
27684: LD_VAR 0 3
27688: PUSH
27689: FOR_TO
27690: IFFALSE 27778
// list := list ^ [ [ GetBType ( tmp [ i ] ) , GetX ( tmp [ i ] ) , GetY ( tmp [ i ] ) , GetDir ( tmp [ i ] ) ] ] ;
27692: LD_ADDR_VAR 0 5
27696: PUSH
27697: LD_VAR 0 5
27701: PUSH
27702: LD_VAR 0 3
27706: PUSH
27707: LD_VAR 0 4
27711: ARRAY
27712: PPUSH
27713: CALL_OW 266
27717: PUSH
27718: LD_VAR 0 3
27722: PUSH
27723: LD_VAR 0 4
27727: ARRAY
27728: PPUSH
27729: CALL_OW 250
27733: PUSH
27734: LD_VAR 0 3
27738: PUSH
27739: LD_VAR 0 4
27743: ARRAY
27744: PPUSH
27745: CALL_OW 251
27749: PUSH
27750: LD_VAR 0 3
27754: PUSH
27755: LD_VAR 0 4
27759: ARRAY
27760: PPUSH
27761: CALL_OW 254
27765: PUSH
27766: EMPTY
27767: LIST
27768: LIST
27769: LIST
27770: LIST
27771: PUSH
27772: EMPTY
27773: LIST
27774: ADD
27775: ST_TO_ADDR
27776: GO 27689
27778: POP
27779: POP
// result := list ;
27780: LD_ADDR_VAR 0 2
27784: PUSH
27785: LD_VAR 0 5
27789: ST_TO_ADDR
// end ;
27790: LD_VAR 0 2
27794: RET
// export function Produce ( factory , chassis , engine , control , weapon ) ; var i , tmp , _chassis , _weapon , _engine , _control ; begin
27795: LD_INT 0
27797: PPUSH
27798: PPUSH
27799: PPUSH
27800: PPUSH
27801: PPUSH
27802: PPUSH
27803: PPUSH
// if not factory then
27804: LD_VAR 0 1
27808: NOT
27809: IFFALSE 27813
// exit ;
27811: GO 28338
// if control = control_apeman then
27813: LD_VAR 0 4
27817: PUSH
27818: LD_INT 5
27820: EQUAL
27821: IFFALSE 27930
// begin tmp := UnitsInside ( factory ) ;
27823: LD_ADDR_VAR 0 8
27827: PUSH
27828: LD_VAR 0 1
27832: PPUSH
27833: CALL_OW 313
27837: ST_TO_ADDR
// if not UnitFilter ( tmp , [ f_class , class_apeman ] ) then
27838: LD_VAR 0 8
27842: PPUSH
27843: LD_INT 25
27845: PUSH
27846: LD_INT 12
27848: PUSH
27849: EMPTY
27850: LIST
27851: LIST
27852: PPUSH
27853: CALL_OW 72
27857: NOT
27858: IFFALSE 27868
// control := control_manual ;
27860: LD_ADDR_VAR 0 4
27864: PUSH
27865: LD_INT 1
27867: ST_TO_ADDR
// tmp := GetFacExt ( factory ) ;
27868: LD_ADDR_VAR 0 8
27872: PUSH
27873: LD_VAR 0 1
27877: PPUSH
27878: CALL 27565 0 1
27882: ST_TO_ADDR
// if tmp then
27883: LD_VAR 0 8
27887: IFFALSE 27930
// begin for i in tmp do
27889: LD_ADDR_VAR 0 7
27893: PUSH
27894: LD_VAR 0 8
27898: PUSH
27899: FOR_IN
27900: IFFALSE 27928
// if i [ 1 ] = b_ext_radar then
27902: LD_VAR 0 7
27906: PUSH
27907: LD_INT 1
27909: ARRAY
27910: PUSH
27911: LD_INT 20
27913: EQUAL
27914: IFFALSE 27926
// begin control := control_remote ;
27916: LD_ADDR_VAR 0 4
27920: PUSH
27921: LD_INT 2
27923: ST_TO_ADDR
// break ;
27924: GO 27928
// end ;
27926: GO 27899
27928: POP
27929: POP
// end ; end ; if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
27930: LD_VAR 0 1
27934: PPUSH
27935: LD_VAR 0 2
27939: PPUSH
27940: LD_VAR 0 3
27944: PPUSH
27945: LD_VAR 0 4
27949: PPUSH
27950: LD_VAR 0 5
27954: PPUSH
27955: CALL_OW 448
27959: IFFALSE 27994
// begin result := [ chassis , engine , control , weapon ] ;
27961: LD_ADDR_VAR 0 6
27965: PUSH
27966: LD_VAR 0 2
27970: PUSH
27971: LD_VAR 0 3
27975: PUSH
27976: LD_VAR 0 4
27980: PUSH
27981: LD_VAR 0 5
27985: PUSH
27986: EMPTY
27987: LIST
27988: LIST
27989: LIST
27990: LIST
27991: ST_TO_ADDR
// exit ;
27992: GO 28338
// end ; _chassis := AvailableChassisList ( factory ) ;
27994: LD_ADDR_VAR 0 9
27998: PUSH
27999: LD_VAR 0 1
28003: PPUSH
28004: CALL_OW 475
28008: ST_TO_ADDR
// _engine := AvailableEngineList ( factory ) ;
28009: LD_ADDR_VAR 0 11
28013: PUSH
28014: LD_VAR 0 1
28018: PPUSH
28019: CALL_OW 476
28023: ST_TO_ADDR
// _control := AvailableControlList ( factory ) ;
28024: LD_ADDR_VAR 0 12
28028: PUSH
28029: LD_VAR 0 1
28033: PPUSH
28034: CALL_OW 477
28038: ST_TO_ADDR
// _weapon := AvailableWeaponList ( factory ) ;
28039: LD_ADDR_VAR 0 10
28043: PUSH
28044: LD_VAR 0 1
28048: PPUSH
28049: CALL_OW 478
28053: ST_TO_ADDR
// if not chassis in _chassis then
28054: LD_VAR 0 2
28058: PUSH
28059: LD_VAR 0 9
28063: IN
28064: NOT
28065: IFFALSE 28091
// chassis := _chassis [ rand ( 1 , _chassis ) ] ;
28067: LD_ADDR_VAR 0 2
28071: PUSH
28072: LD_VAR 0 9
28076: PUSH
28077: LD_INT 1
28079: PPUSH
28080: LD_VAR 0 9
28084: PPUSH
28085: CALL_OW 12
28089: ARRAY
28090: ST_TO_ADDR
// if not EngineCanBeMount ( chassis , engine ) then
28091: LD_VAR 0 2
28095: PPUSH
28096: LD_VAR 0 3
28100: PPUSH
28101: CALL 28343 0 2
28105: NOT
28106: IFFALSE 28165
// repeat engine := _engine [ 1 ] ;
28108: LD_ADDR_VAR 0 3
28112: PUSH
28113: LD_VAR 0 11
28117: PUSH
28118: LD_INT 1
28120: ARRAY
28121: ST_TO_ADDR
// _engine := Delete ( _engine , 1 ) ;
28122: LD_ADDR_VAR 0 11
28126: PUSH
28127: LD_VAR 0 11
28131: PPUSH
28132: LD_INT 1
28134: PPUSH
28135: CALL_OW 3
28139: ST_TO_ADDR
// until EngineCanBeMount ( chassis , engine ) or _engine = [ ] ;
28140: LD_VAR 0 2
28144: PPUSH
28145: LD_VAR 0 3
28149: PPUSH
28150: CALL 28343 0 2
28154: PUSH
28155: LD_VAR 0 11
28159: PUSH
28160: EMPTY
28161: EQUAL
28162: OR
28163: IFFALSE 28108
// if not control in _control then
28165: LD_VAR 0 4
28169: PUSH
28170: LD_VAR 0 12
28174: IN
28175: NOT
28176: IFFALSE 28202
// control := _control [ rand ( 1 , _control ) ] ;
28178: LD_ADDR_VAR 0 4
28182: PUSH
28183: LD_VAR 0 12
28187: PUSH
28188: LD_INT 1
28190: PPUSH
28191: LD_VAR 0 12
28195: PPUSH
28196: CALL_OW 12
28200: ARRAY
28201: ST_TO_ADDR
// if not WeaponCanBeMount ( chassis , weapon ) then
28202: LD_VAR 0 2
28206: PPUSH
28207: LD_VAR 0 5
28211: PPUSH
28212: CALL 28563 0 2
28216: NOT
28217: IFFALSE 28276
// repeat weapon := _weapon [ 1 ] ;
28219: LD_ADDR_VAR 0 5
28223: PUSH
28224: LD_VAR 0 10
28228: PUSH
28229: LD_INT 1
28231: ARRAY
28232: ST_TO_ADDR
// _weapon := Delete ( _weapon , 1 ) ;
28233: LD_ADDR_VAR 0 10
28237: PUSH
28238: LD_VAR 0 10
28242: PPUSH
28243: LD_INT 1
28245: PPUSH
28246: CALL_OW 3
28250: ST_TO_ADDR
// until WeaponCanBeMount ( chassis , weapon ) or _weapon = [ ] ;
28251: LD_VAR 0 2
28255: PPUSH
28256: LD_VAR 0 5
28260: PPUSH
28261: CALL 28563 0 2
28265: PUSH
28266: LD_VAR 0 10
28270: PUSH
28271: EMPTY
28272: EQUAL
28273: OR
28274: IFFALSE 28219
// if CanBeConstructed ( factory , chassis , engine , control , weapon ) then
28276: LD_VAR 0 1
28280: PPUSH
28281: LD_VAR 0 2
28285: PPUSH
28286: LD_VAR 0 3
28290: PPUSH
28291: LD_VAR 0 4
28295: PPUSH
28296: LD_VAR 0 5
28300: PPUSH
28301: CALL_OW 448
28305: IFFALSE 28338
// result := [ chassis , engine , control , weapon ] ;
28307: LD_ADDR_VAR 0 6
28311: PUSH
28312: LD_VAR 0 2
28316: PUSH
28317: LD_VAR 0 3
28321: PUSH
28322: LD_VAR 0 4
28326: PUSH
28327: LD_VAR 0 5
28331: PUSH
28332: EMPTY
28333: LIST
28334: LIST
28335: LIST
28336: LIST
28337: ST_TO_ADDR
// end ;
28338: LD_VAR 0 6
28342: RET
// export function EngineCanBeMount ( chassis , engine ) ; begin
28343: LD_INT 0
28345: PPUSH
// if not chassis or not engine then
28346: LD_VAR 0 1
28350: NOT
28351: PUSH
28352: LD_VAR 0 2
28356: NOT
28357: OR
28358: IFFALSE 28362
// exit ;
28360: GO 28558
// case engine of engine_solar :
28362: LD_VAR 0 2
28366: PUSH
28367: LD_INT 2
28369: DOUBLE
28370: EQUAL
28371: IFTRUE 28375
28373: GO 28413
28375: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked ] ; engine_combustion :
28376: LD_ADDR_VAR 0 3
28380: PUSH
28381: LD_INT 11
28383: PUSH
28384: LD_INT 12
28386: PUSH
28387: LD_INT 13
28389: PUSH
28390: LD_INT 14
28392: PUSH
28393: LD_INT 1
28395: PUSH
28396: LD_INT 2
28398: PUSH
28399: LD_INT 3
28401: PUSH
28402: EMPTY
28403: LIST
28404: LIST
28405: LIST
28406: LIST
28407: LIST
28408: LIST
28409: LIST
28410: ST_TO_ADDR
28411: GO 28542
28413: LD_INT 1
28415: DOUBLE
28416: EQUAL
28417: IFTRUE 28421
28419: GO 28483
28421: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked , us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_heavy_wheeled , ru_medium_tracked , ru_heavy_tracked ] ; engine_siberite :
28422: LD_ADDR_VAR 0 3
28426: PUSH
28427: LD_INT 11
28429: PUSH
28430: LD_INT 12
28432: PUSH
28433: LD_INT 13
28435: PUSH
28436: LD_INT 14
28438: PUSH
28439: LD_INT 1
28441: PUSH
28442: LD_INT 2
28444: PUSH
28445: LD_INT 3
28447: PUSH
28448: LD_INT 4
28450: PUSH
28451: LD_INT 5
28453: PUSH
28454: LD_INT 21
28456: PUSH
28457: LD_INT 23
28459: PUSH
28460: LD_INT 22
28462: PUSH
28463: LD_INT 24
28465: PUSH
28466: EMPTY
28467: LIST
28468: LIST
28469: LIST
28470: LIST
28471: LIST
28472: LIST
28473: LIST
28474: LIST
28475: LIST
28476: LIST
28477: LIST
28478: LIST
28479: LIST
28480: ST_TO_ADDR
28481: GO 28542
28483: LD_INT 3
28485: DOUBLE
28486: EQUAL
28487: IFTRUE 28491
28489: GO 28541
28491: POP
// result := [ ar_medium_trike , ar_half_tracked , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling , ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
28492: LD_ADDR_VAR 0 3
28496: PUSH
28497: LD_INT 13
28499: PUSH
28500: LD_INT 14
28502: PUSH
28503: LD_INT 2
28505: PUSH
28506: LD_INT 3
28508: PUSH
28509: LD_INT 4
28511: PUSH
28512: LD_INT 5
28514: PUSH
28515: LD_INT 21
28517: PUSH
28518: LD_INT 22
28520: PUSH
28521: LD_INT 23
28523: PUSH
28524: LD_INT 24
28526: PUSH
28527: EMPTY
28528: LIST
28529: LIST
28530: LIST
28531: LIST
28532: LIST
28533: LIST
28534: LIST
28535: LIST
28536: LIST
28537: LIST
28538: ST_TO_ADDR
28539: GO 28542
28541: POP
// result := ( chassis in result ) ;
28542: LD_ADDR_VAR 0 3
28546: PUSH
28547: LD_VAR 0 1
28551: PUSH
28552: LD_VAR 0 3
28556: IN
28557: ST_TO_ADDR
// end ;
28558: LD_VAR 0 3
28562: RET
// export function WeaponCanBeMount ( chassis , weapon ) ; begin
28563: LD_INT 0
28565: PPUSH
// if not chassis or not weapon then
28566: LD_VAR 0 1
28570: NOT
28571: PUSH
28572: LD_VAR 0 2
28576: NOT
28577: OR
28578: IFFALSE 28582
// exit ;
28580: GO 29608
// case weapon of us_machine_gun :
28582: LD_VAR 0 2
28586: PUSH
28587: LD_INT 2
28589: DOUBLE
28590: EQUAL
28591: IFTRUE 28595
28593: GO 28625
28595: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_light_gun :
28596: LD_ADDR_VAR 0 3
28600: PUSH
28601: LD_INT 1
28603: PUSH
28604: LD_INT 2
28606: PUSH
28607: LD_INT 3
28609: PUSH
28610: LD_INT 4
28612: PUSH
28613: LD_INT 5
28615: PUSH
28616: EMPTY
28617: LIST
28618: LIST
28619: LIST
28620: LIST
28621: LIST
28622: ST_TO_ADDR
28623: GO 29592
28625: LD_INT 3
28627: DOUBLE
28628: EQUAL
28629: IFTRUE 28633
28631: GO 28663
28633: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_radar :
28634: LD_ADDR_VAR 0 3
28638: PUSH
28639: LD_INT 1
28641: PUSH
28642: LD_INT 2
28644: PUSH
28645: LD_INT 3
28647: PUSH
28648: LD_INT 4
28650: PUSH
28651: LD_INT 5
28653: PUSH
28654: EMPTY
28655: LIST
28656: LIST
28657: LIST
28658: LIST
28659: LIST
28660: ST_TO_ADDR
28661: GO 29592
28663: LD_INT 11
28665: DOUBLE
28666: EQUAL
28667: IFTRUE 28671
28669: GO 28701
28671: POP
// result := [ us_light_wheeled , us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_gatling_gun :
28672: LD_ADDR_VAR 0 3
28676: PUSH
28677: LD_INT 1
28679: PUSH
28680: LD_INT 2
28682: PUSH
28683: LD_INT 3
28685: PUSH
28686: LD_INT 4
28688: PUSH
28689: LD_INT 5
28691: PUSH
28692: EMPTY
28693: LIST
28694: LIST
28695: LIST
28696: LIST
28697: LIST
28698: ST_TO_ADDR
28699: GO 29592
28701: LD_INT 4
28703: DOUBLE
28704: EQUAL
28705: IFTRUE 28709
28707: GO 28735
28709: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_double_gun :
28710: LD_ADDR_VAR 0 3
28714: PUSH
28715: LD_INT 2
28717: PUSH
28718: LD_INT 3
28720: PUSH
28721: LD_INT 4
28723: PUSH
28724: LD_INT 5
28726: PUSH
28727: EMPTY
28728: LIST
28729: LIST
28730: LIST
28731: LIST
28732: ST_TO_ADDR
28733: GO 29592
28735: LD_INT 5
28737: DOUBLE
28738: EQUAL
28739: IFTRUE 28743
28741: GO 28769
28743: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_laser :
28744: LD_ADDR_VAR 0 3
28748: PUSH
28749: LD_INT 2
28751: PUSH
28752: LD_INT 3
28754: PUSH
28755: LD_INT 4
28757: PUSH
28758: LD_INT 5
28760: PUSH
28761: EMPTY
28762: LIST
28763: LIST
28764: LIST
28765: LIST
28766: ST_TO_ADDR
28767: GO 29592
28769: LD_INT 9
28771: DOUBLE
28772: EQUAL
28773: IFTRUE 28777
28775: GO 28803
28777: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_rocket_launcher :
28778: LD_ADDR_VAR 0 3
28782: PUSH
28783: LD_INT 2
28785: PUSH
28786: LD_INT 3
28788: PUSH
28789: LD_INT 4
28791: PUSH
28792: LD_INT 5
28794: PUSH
28795: EMPTY
28796: LIST
28797: LIST
28798: LIST
28799: LIST
28800: ST_TO_ADDR
28801: GO 29592
28803: LD_INT 7
28805: DOUBLE
28806: EQUAL
28807: IFTRUE 28811
28809: GO 28837
28811: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_cargo_bay :
28812: LD_ADDR_VAR 0 3
28816: PUSH
28817: LD_INT 2
28819: PUSH
28820: LD_INT 3
28822: PUSH
28823: LD_INT 4
28825: PUSH
28826: LD_INT 5
28828: PUSH
28829: EMPTY
28830: LIST
28831: LIST
28832: LIST
28833: LIST
28834: ST_TO_ADDR
28835: GO 29592
28837: LD_INT 12
28839: DOUBLE
28840: EQUAL
28841: IFTRUE 28845
28843: GO 28871
28845: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_crane :
28846: LD_ADDR_VAR 0 3
28850: PUSH
28851: LD_INT 2
28853: PUSH
28854: LD_INT 3
28856: PUSH
28857: LD_INT 4
28859: PUSH
28860: LD_INT 5
28862: PUSH
28863: EMPTY
28864: LIST
28865: LIST
28866: LIST
28867: LIST
28868: ST_TO_ADDR
28869: GO 29592
28871: LD_INT 13
28873: DOUBLE
28874: EQUAL
28875: IFTRUE 28879
28877: GO 28905
28879: POP
// result := [ us_medium_wheeled , us_medium_tracked , us_heavy_tracked , us_morphling ] ; us_bulldozer :
28880: LD_ADDR_VAR 0 3
28884: PUSH
28885: LD_INT 2
28887: PUSH
28888: LD_INT 3
28890: PUSH
28891: LD_INT 4
28893: PUSH
28894: LD_INT 5
28896: PUSH
28897: EMPTY
28898: LIST
28899: LIST
28900: LIST
28901: LIST
28902: ST_TO_ADDR
28903: GO 29592
28905: LD_INT 14
28907: DOUBLE
28908: EQUAL
28909: IFTRUE 28913
28911: GO 28931
28913: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_heavy_gun :
28914: LD_ADDR_VAR 0 3
28918: PUSH
28919: LD_INT 4
28921: PUSH
28922: LD_INT 5
28924: PUSH
28925: EMPTY
28926: LIST
28927: LIST
28928: ST_TO_ADDR
28929: GO 29592
28931: LD_INT 6
28933: DOUBLE
28934: EQUAL
28935: IFTRUE 28939
28937: GO 28957
28939: POP
// result := [ us_heavy_tracked , us_morphling ] ; us_double_laser :
28940: LD_ADDR_VAR 0 3
28944: PUSH
28945: LD_INT 4
28947: PUSH
28948: LD_INT 5
28950: PUSH
28951: EMPTY
28952: LIST
28953: LIST
28954: ST_TO_ADDR
28955: GO 29592
28957: LD_INT 10
28959: DOUBLE
28960: EQUAL
28961: IFTRUE 28965
28963: GO 28983
28965: POP
// result := [ us_heavy_tracked , us_morphling ] ; ar_multimissile_ballista :
28966: LD_ADDR_VAR 0 3
28970: PUSH
28971: LD_INT 4
28973: PUSH
28974: LD_INT 5
28976: PUSH
28977: EMPTY
28978: LIST
28979: LIST
28980: ST_TO_ADDR
28981: GO 29592
28983: LD_INT 22
28985: DOUBLE
28986: EQUAL
28987: IFTRUE 28991
28989: GO 29017
28991: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_light_gun :
28992: LD_ADDR_VAR 0 3
28996: PUSH
28997: LD_INT 11
28999: PUSH
29000: LD_INT 12
29002: PUSH
29003: LD_INT 13
29005: PUSH
29006: LD_INT 14
29008: PUSH
29009: EMPTY
29010: LIST
29011: LIST
29012: LIST
29013: LIST
29014: ST_TO_ADDR
29015: GO 29592
29017: LD_INT 23
29019: DOUBLE
29020: EQUAL
29021: IFTRUE 29025
29023: GO 29051
29025: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_double_machine_gun :
29026: LD_ADDR_VAR 0 3
29030: PUSH
29031: LD_INT 11
29033: PUSH
29034: LD_INT 12
29036: PUSH
29037: LD_INT 13
29039: PUSH
29040: LD_INT 14
29042: PUSH
29043: EMPTY
29044: LIST
29045: LIST
29046: LIST
29047: LIST
29048: ST_TO_ADDR
29049: GO 29592
29051: LD_INT 24
29053: DOUBLE
29054: EQUAL
29055: IFTRUE 29059
29057: GO 29085
29059: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_radar :
29060: LD_ADDR_VAR 0 3
29064: PUSH
29065: LD_INT 11
29067: PUSH
29068: LD_INT 12
29070: PUSH
29071: LD_INT 13
29073: PUSH
29074: LD_INT 14
29076: PUSH
29077: EMPTY
29078: LIST
29079: LIST
29080: LIST
29081: LIST
29082: ST_TO_ADDR
29083: GO 29592
29085: LD_INT 30
29087: DOUBLE
29088: EQUAL
29089: IFTRUE 29093
29091: GO 29119
29093: POP
// result := [ ar_hovercraft , ar_light_trike , ar_medium_trike , ar_half_tracked ] ; ar_gatling_gun :
29094: LD_ADDR_VAR 0 3
29098: PUSH
29099: LD_INT 11
29101: PUSH
29102: LD_INT 12
29104: PUSH
29105: LD_INT 13
29107: PUSH
29108: LD_INT 14
29110: PUSH
29111: EMPTY
29112: LIST
29113: LIST
29114: LIST
29115: LIST
29116: ST_TO_ADDR
29117: GO 29592
29119: LD_INT 25
29121: DOUBLE
29122: EQUAL
29123: IFTRUE 29127
29125: GO 29145
29127: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_gun :
29128: LD_ADDR_VAR 0 3
29132: PUSH
29133: LD_INT 13
29135: PUSH
29136: LD_INT 14
29138: PUSH
29139: EMPTY
29140: LIST
29141: LIST
29142: ST_TO_ADDR
29143: GO 29592
29145: LD_INT 27
29147: DOUBLE
29148: EQUAL
29149: IFTRUE 29153
29151: GO 29171
29153: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_rocket_launcher :
29154: LD_ADDR_VAR 0 3
29158: PUSH
29159: LD_INT 13
29161: PUSH
29162: LD_INT 14
29164: PUSH
29165: EMPTY
29166: LIST
29167: LIST
29168: ST_TO_ADDR
29169: GO 29592
29171: LD_INT 28
29173: DOUBLE
29174: EQUAL
29175: IFTRUE 29179
29177: GO 29197
29179: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_selfpropelled_bomb :
29180: LD_ADDR_VAR 0 3
29184: PUSH
29185: LD_INT 13
29187: PUSH
29188: LD_INT 14
29190: PUSH
29191: EMPTY
29192: LIST
29193: LIST
29194: ST_TO_ADDR
29195: GO 29592
29197: LD_INT 29
29199: DOUBLE
29200: EQUAL
29201: IFTRUE 29205
29203: GO 29223
29205: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_control_tower :
29206: LD_ADDR_VAR 0 3
29210: PUSH
29211: LD_INT 13
29213: PUSH
29214: LD_INT 14
29216: PUSH
29217: EMPTY
29218: LIST
29219: LIST
29220: ST_TO_ADDR
29221: GO 29592
29223: LD_INT 31
29225: DOUBLE
29226: EQUAL
29227: IFTRUE 29231
29229: GO 29249
29231: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ar_flame_thrower :
29232: LD_ADDR_VAR 0 3
29236: PUSH
29237: LD_INT 13
29239: PUSH
29240: LD_INT 14
29242: PUSH
29243: EMPTY
29244: LIST
29245: LIST
29246: ST_TO_ADDR
29247: GO 29592
29249: LD_INT 26
29251: DOUBLE
29252: EQUAL
29253: IFTRUE 29257
29255: GO 29275
29257: POP
// result := [ ar_medium_trike , ar_half_tracked ] ; ru_heavy_machine_gun :
29258: LD_ADDR_VAR 0 3
29262: PUSH
29263: LD_INT 13
29265: PUSH
29266: LD_INT 14
29268: PUSH
29269: EMPTY
29270: LIST
29271: LIST
29272: ST_TO_ADDR
29273: GO 29592
29275: LD_INT 42
29277: DOUBLE
29278: EQUAL
29279: IFTRUE 29283
29281: GO 29309
29283: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gatling_gun :
29284: LD_ADDR_VAR 0 3
29288: PUSH
29289: LD_INT 21
29291: PUSH
29292: LD_INT 22
29294: PUSH
29295: LD_INT 23
29297: PUSH
29298: LD_INT 24
29300: PUSH
29301: EMPTY
29302: LIST
29303: LIST
29304: LIST
29305: LIST
29306: ST_TO_ADDR
29307: GO 29592
29309: LD_INT 43
29311: DOUBLE
29312: EQUAL
29313: IFTRUE 29317
29315: GO 29343
29317: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_gun :
29318: LD_ADDR_VAR 0 3
29322: PUSH
29323: LD_INT 21
29325: PUSH
29326: LD_INT 22
29328: PUSH
29329: LD_INT 23
29331: PUSH
29332: LD_INT 24
29334: PUSH
29335: EMPTY
29336: LIST
29337: LIST
29338: LIST
29339: LIST
29340: ST_TO_ADDR
29341: GO 29592
29343: LD_INT 44
29345: DOUBLE
29346: EQUAL
29347: IFTRUE 29351
29349: GO 29377
29351: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket_launcher :
29352: LD_ADDR_VAR 0 3
29356: PUSH
29357: LD_INT 21
29359: PUSH
29360: LD_INT 22
29362: PUSH
29363: LD_INT 23
29365: PUSH
29366: LD_INT 24
29368: PUSH
29369: EMPTY
29370: LIST
29371: LIST
29372: LIST
29373: LIST
29374: ST_TO_ADDR
29375: GO 29592
29377: LD_INT 45
29379: DOUBLE
29380: EQUAL
29381: IFTRUE 29385
29383: GO 29411
29385: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_time_lapser :
29386: LD_ADDR_VAR 0 3
29390: PUSH
29391: LD_INT 21
29393: PUSH
29394: LD_INT 22
29396: PUSH
29397: LD_INT 23
29399: PUSH
29400: LD_INT 24
29402: PUSH
29403: EMPTY
29404: LIST
29405: LIST
29406: LIST
29407: LIST
29408: ST_TO_ADDR
29409: GO 29592
29411: LD_INT 49
29413: DOUBLE
29414: EQUAL
29415: IFTRUE 29419
29417: GO 29445
29419: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_cargo_bay :
29420: LD_ADDR_VAR 0 3
29424: PUSH
29425: LD_INT 21
29427: PUSH
29428: LD_INT 22
29430: PUSH
29431: LD_INT 23
29433: PUSH
29434: LD_INT 24
29436: PUSH
29437: EMPTY
29438: LIST
29439: LIST
29440: LIST
29441: LIST
29442: ST_TO_ADDR
29443: GO 29592
29445: LD_INT 51
29447: DOUBLE
29448: EQUAL
29449: IFTRUE 29453
29451: GO 29479
29453: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_crane :
29454: LD_ADDR_VAR 0 3
29458: PUSH
29459: LD_INT 21
29461: PUSH
29462: LD_INT 22
29464: PUSH
29465: LD_INT 23
29467: PUSH
29468: LD_INT 24
29470: PUSH
29471: EMPTY
29472: LIST
29473: LIST
29474: LIST
29475: LIST
29476: ST_TO_ADDR
29477: GO 29592
29479: LD_INT 52
29481: DOUBLE
29482: EQUAL
29483: IFTRUE 29487
29485: GO 29513
29487: POP
// result := [ ru_medium_wheeled , ru_medium_tracked , ru_heavy_wheeled , ru_heavy_tracked ] ; ru_bulldozer :
29488: LD_ADDR_VAR 0 3
29492: PUSH
29493: LD_INT 21
29495: PUSH
29496: LD_INT 22
29498: PUSH
29499: LD_INT 23
29501: PUSH
29502: LD_INT 24
29504: PUSH
29505: EMPTY
29506: LIST
29507: LIST
29508: LIST
29509: LIST
29510: ST_TO_ADDR
29511: GO 29592
29513: LD_INT 53
29515: DOUBLE
29516: EQUAL
29517: IFTRUE 29521
29519: GO 29539
29521: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_heavy_gun :
29522: LD_ADDR_VAR 0 3
29526: PUSH
29527: LD_INT 23
29529: PUSH
29530: LD_INT 24
29532: PUSH
29533: EMPTY
29534: LIST
29535: LIST
29536: ST_TO_ADDR
29537: GO 29592
29539: LD_INT 46
29541: DOUBLE
29542: EQUAL
29543: IFTRUE 29547
29545: GO 29565
29547: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; ru_rocket :
29548: LD_ADDR_VAR 0 3
29552: PUSH
29553: LD_INT 23
29555: PUSH
29556: LD_INT 24
29558: PUSH
29559: EMPTY
29560: LIST
29561: LIST
29562: ST_TO_ADDR
29563: GO 29592
29565: LD_INT 47
29567: DOUBLE
29568: EQUAL
29569: IFTRUE 29573
29571: GO 29591
29573: POP
// result := [ ru_heavy_wheeled , ru_heavy_tracked ] ; end ;
29574: LD_ADDR_VAR 0 3
29578: PUSH
29579: LD_INT 23
29581: PUSH
29582: LD_INT 24
29584: PUSH
29585: EMPTY
29586: LIST
29587: LIST
29588: ST_TO_ADDR
29589: GO 29592
29591: POP
// result := ( chassis in result ) ;
29592: LD_ADDR_VAR 0 3
29596: PUSH
29597: LD_VAR 0 1
29601: PUSH
29602: LD_VAR 0 3
29606: IN
29607: ST_TO_ADDR
// end ;
29608: LD_VAR 0 3
29612: RET
// export function PrepareNature ; var i , animal , nat_area ; begin
29613: LD_INT 0
29615: PPUSH
29616: PPUSH
29617: PPUSH
29618: PPUSH
// uc_side = 0 ;
29619: LD_ADDR_OWVAR 20
29623: PUSH
29624: LD_INT 0
29626: ST_TO_ADDR
// uc_nation = 0 ;
29627: LD_ADDR_OWVAR 21
29631: PUSH
29632: LD_INT 0
29634: ST_TO_ADDR
// nat_area := nature_area ;
29635: LD_ADDR_VAR 0 4
29639: PUSH
29640: LD_INT 24
29642: ST_TO_ADDR
// InitHc ;
29643: CALL_OW 19
// for i = 1 to 4 do
29647: LD_ADDR_VAR 0 2
29651: PUSH
29652: DOUBLE
29653: LD_INT 1
29655: DEC
29656: ST_TO_ADDR
29657: LD_INT 4
29659: PUSH
29660: FOR_TO
29661: IFFALSE 29708
// begin hc_class = 18 ;
29663: LD_ADDR_OWVAR 28
29667: PUSH
29668: LD_INT 18
29670: ST_TO_ADDR
// hc_gallery =  ;
29671: LD_ADDR_OWVAR 33
29675: PUSH
29676: LD_STRING 
29678: ST_TO_ADDR
// animal := CreateHuman ;
29679: LD_ADDR_VAR 0 3
29683: PUSH
29684: CALL_OW 44
29688: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29689: LD_VAR 0 3
29693: PPUSH
29694: LD_VAR 0 4
29698: PPUSH
29699: LD_INT 0
29701: PPUSH
29702: CALL_OW 49
// end ;
29706: GO 29660
29708: POP
29709: POP
// for i = 1 to 3 do
29710: LD_ADDR_VAR 0 2
29714: PUSH
29715: DOUBLE
29716: LD_INT 1
29718: DEC
29719: ST_TO_ADDR
29720: LD_INT 3
29722: PUSH
29723: FOR_TO
29724: IFFALSE 29788
// begin hc_class = class_tiger ;
29726: LD_ADDR_OWVAR 28
29730: PUSH
29731: LD_INT 14
29733: ST_TO_ADDR
// hc_gallery =  ;
29734: LD_ADDR_OWVAR 33
29738: PUSH
29739: LD_STRING 
29741: ST_TO_ADDR
// hc_agressivity = Rand ( - 5 , 5 ) ;
29742: LD_ADDR_OWVAR 35
29746: PUSH
29747: LD_INT 5
29749: NEG
29750: PPUSH
29751: LD_INT 5
29753: PPUSH
29754: CALL_OW 12
29758: ST_TO_ADDR
// animal := CreateHuman ;
29759: LD_ADDR_VAR 0 3
29763: PUSH
29764: CALL_OW 44
29768: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29769: LD_VAR 0 3
29773: PPUSH
29774: LD_VAR 0 4
29778: PPUSH
29779: LD_INT 0
29781: PPUSH
29782: CALL_OW 49
// end ;
29786: GO 29723
29788: POP
29789: POP
// for i = 1 to 3 do
29790: LD_ADDR_VAR 0 2
29794: PUSH
29795: DOUBLE
29796: LD_INT 1
29798: DEC
29799: ST_TO_ADDR
29800: LD_INT 3
29802: PUSH
29803: FOR_TO
29804: IFFALSE 29907
// begin hc_class = class_apeman ;
29806: LD_ADDR_OWVAR 28
29810: PUSH
29811: LD_INT 12
29813: ST_TO_ADDR
// hc_gallery =  ;
29814: LD_ADDR_OWVAR 33
29818: PUSH
29819: LD_STRING 
29821: ST_TO_ADDR
// hc_agressivity = rand ( - 2 , 2 ) ;
29822: LD_ADDR_OWVAR 35
29826: PUSH
29827: LD_INT 2
29829: NEG
29830: PPUSH
29831: LD_INT 2
29833: PPUSH
29834: CALL_OW 12
29838: ST_TO_ADDR
// hc_skills := [ rand ( 1 , 3 ) , rand ( 1 , 3 ) , 0 , 0 ] ;
29839: LD_ADDR_OWVAR 31
29843: PUSH
29844: LD_INT 1
29846: PPUSH
29847: LD_INT 3
29849: PPUSH
29850: CALL_OW 12
29854: PUSH
29855: LD_INT 1
29857: PPUSH
29858: LD_INT 3
29860: PPUSH
29861: CALL_OW 12
29865: PUSH
29866: LD_INT 0
29868: PUSH
29869: LD_INT 0
29871: PUSH
29872: EMPTY
29873: LIST
29874: LIST
29875: LIST
29876: LIST
29877: ST_TO_ADDR
// animal := CreateHuman ;
29878: LD_ADDR_VAR 0 3
29882: PUSH
29883: CALL_OW 44
29887: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29888: LD_VAR 0 3
29892: PPUSH
29893: LD_VAR 0 4
29897: PPUSH
29898: LD_INT 0
29900: PPUSH
29901: CALL_OW 49
// end ;
29905: GO 29803
29907: POP
29908: POP
// for i = 1 to 3 do
29909: LD_ADDR_VAR 0 2
29913: PUSH
29914: DOUBLE
29915: LD_INT 1
29917: DEC
29918: ST_TO_ADDR
29919: LD_INT 3
29921: PUSH
29922: FOR_TO
29923: IFFALSE 29970
// begin hc_class = 13 ;
29925: LD_ADDR_OWVAR 28
29929: PUSH
29930: LD_INT 13
29932: ST_TO_ADDR
// hc_gallery =  ;
29933: LD_ADDR_OWVAR 33
29937: PUSH
29938: LD_STRING 
29940: ST_TO_ADDR
// animal := CreateHuman ;
29941: LD_ADDR_VAR 0 3
29945: PUSH
29946: CALL_OW 44
29950: ST_TO_ADDR
// PlaceUnitArea ( animal , nat_area , false ) ;
29951: LD_VAR 0 3
29955: PPUSH
29956: LD_VAR 0 4
29960: PPUSH
29961: LD_INT 0
29963: PPUSH
29964: CALL_OW 49
// end ;
29968: GO 29922
29970: POP
29971: POP
// for i = 1 to 3 do
29972: LD_ADDR_VAR 0 2
29976: PUSH
29977: DOUBLE
29978: LD_INT 1
29980: DEC
29981: ST_TO_ADDR
29982: LD_INT 3
29984: PUSH
29985: FOR_TO
29986: IFFALSE 30031
// begin hc_class = 20 ;
29988: LD_ADDR_OWVAR 28
29992: PUSH
29993: LD_INT 20
29995: ST_TO_ADDR
// hc_gallery =  ;
29996: LD_ADDR_OWVAR 33
30000: PUSH
30001: LD_STRING 
30003: ST_TO_ADDR
// animal := CreateHuman ;
30004: LD_ADDR_VAR 0 3
30008: PUSH
30009: CALL_OW 44
30013: ST_TO_ADDR
// PlaceUnitArea ( animal , lake_area , false ) ;
30014: LD_VAR 0 3
30018: PPUSH
30019: LD_INT 4
30021: PPUSH
30022: LD_INT 0
30024: PPUSH
30025: CALL_OW 49
// end ;
30029: GO 29985
30031: POP
30032: POP
// end ; end_of_file
30033: LD_VAR 0 1
30037: RET
// export function Action ; begin
30038: LD_INT 0
30040: PPUSH
// InGameOn ;
30041: CALL_OW 8
// CenterNowOnUnits ( JMM ) ;
30045: LD_EXP 11
30049: PPUSH
30050: CALL_OW 87
// Say ( JMM , D1-JMM-1 ) ;
30054: LD_EXP 11
30058: PPUSH
30059: LD_STRING D1-JMM-1
30061: PPUSH
30062: CALL_OW 88
// Say ( Roth , D1-Roth-1 ) ;
30066: LD_EXP 12
30070: PPUSH
30071: LD_STRING D1-Roth-1
30073: PPUSH
30074: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
30078: LD_EXP 11
30082: PPUSH
30083: LD_STRING D1-JMM-2
30085: PPUSH
30086: CALL_OW 88
// Say ( Roth , D1-Roth-2 ) ;
30090: LD_EXP 12
30094: PPUSH
30095: LD_STRING D1-Roth-2
30097: PPUSH
30098: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
30102: LD_EXP 11
30106: PPUSH
30107: LD_STRING D1-JMM-3
30109: PPUSH
30110: CALL_OW 88
// Say ( Roth , D1-Roth-3 ) ;
30114: LD_EXP 12
30118: PPUSH
30119: LD_STRING D1-Roth-3
30121: PPUSH
30122: CALL_OW 88
// ComInvisible ( Roth ) ;
30126: LD_EXP 12
30130: PPUSH
30131: CALL_OW 152
// wait ( 0 0$1.3 ) ;
30135: LD_INT 46
30137: PPUSH
30138: CALL_OW 67
// Say ( JMM , D1-JMM-4 ) ;
30142: LD_EXP 11
30146: PPUSH
30147: LD_STRING D1-JMM-4
30149: PPUSH
30150: CALL_OW 88
// wait ( 0 0$0.3 ) ;
30154: LD_INT 10
30156: PPUSH
30157: CALL_OW 67
// ComTurnUnit ( Roth , JMM ) ;
30161: LD_EXP 12
30165: PPUSH
30166: LD_EXP 11
30170: PPUSH
30171: CALL_OW 119
// Say ( JMM , D1-JMM-4a ) ;
30175: LD_EXP 11
30179: PPUSH
30180: LD_STRING D1-JMM-4a
30182: PPUSH
30183: CALL_OW 88
// Say ( Roth , D1-Roth-4 ) ;
30187: LD_EXP 12
30191: PPUSH
30192: LD_STRING D1-Roth-4
30194: PPUSH
30195: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
30199: LD_EXP 11
30203: PPUSH
30204: LD_STRING D1-JMM-5
30206: PPUSH
30207: CALL_OW 88
// Say ( Roth , D1-Roth-5 ) ;
30211: LD_EXP 12
30215: PPUSH
30216: LD_STRING D1-Roth-5
30218: PPUSH
30219: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
30223: LD_EXP 11
30227: PPUSH
30228: LD_STRING D1-JMM-6
30230: PPUSH
30231: CALL_OW 88
// Say ( Roth , D1-Roth-6 ) ;
30235: LD_EXP 12
30239: PPUSH
30240: LD_STRING D1-Roth-6
30242: PPUSH
30243: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
30247: LD_EXP 11
30251: PPUSH
30252: LD_STRING D1-JMM-7
30254: PPUSH
30255: CALL_OW 88
// ComMoveXY ( Powell , GetX ( JMM ) , GetY ( JMM ) ) ;
30259: LD_EXP 13
30263: PPUSH
30264: LD_EXP 11
30268: PPUSH
30269: CALL_OW 250
30273: PPUSH
30274: LD_EXP 11
30278: PPUSH
30279: CALL_OW 251
30283: PPUSH
30284: CALL_OW 111
// Say ( Roth , D1-Roth-7 ) ;
30288: LD_EXP 12
30292: PPUSH
30293: LD_STRING D1-Roth-7
30295: PPUSH
30296: CALL_OW 88
// repeat wait ( 0 0$0.3 ) ;
30300: LD_INT 10
30302: PPUSH
30303: CALL_OW 67
// until GetDistUnits ( Powell , JMM ) < 6 ;
30307: LD_EXP 13
30311: PPUSH
30312: LD_EXP 11
30316: PPUSH
30317: CALL_OW 296
30321: PUSH
30322: LD_INT 6
30324: LESS
30325: IFFALSE 30300
// ComTurnUnit ( Powell , JMM ) ;
30327: LD_EXP 13
30331: PPUSH
30332: LD_EXP 11
30336: PPUSH
30337: CALL_OW 119
// Say ( Powell , D1-Pow-7 ) ;
30341: LD_EXP 13
30345: PPUSH
30346: LD_STRING D1-Pow-7
30348: PPUSH
30349: CALL_OW 88
// ComTurnUnit ( JMM , Powell ) ;
30353: LD_EXP 11
30357: PPUSH
30358: LD_EXP 13
30362: PPUSH
30363: CALL_OW 119
// ComTurnUnit ( Roth , Powell ) ;
30367: LD_EXP 12
30371: PPUSH
30372: LD_EXP 13
30376: PPUSH
30377: CALL_OW 119
// Say ( JMM , D1-JMM-8 ) ;
30381: LD_EXP 11
30385: PPUSH
30386: LD_STRING D1-JMM-8
30388: PPUSH
30389: CALL_OW 88
// Say ( Powell , D1-Pow-8 ) ;
30393: LD_EXP 13
30397: PPUSH
30398: LD_STRING D1-Pow-8
30400: PPUSH
30401: CALL_OW 88
// Say ( JMM , D1-JMM-9 ) ;
30405: LD_EXP 11
30409: PPUSH
30410: LD_STRING D1-JMM-9
30412: PPUSH
30413: CALL_OW 88
// ComMoveXY ( Powell , 124 , 61 ) ;
30417: LD_EXP 13
30421: PPUSH
30422: LD_INT 124
30424: PPUSH
30425: LD_INT 61
30427: PPUSH
30428: CALL_OW 111
// repeat wait ( 0 0$1 ) ;
30432: LD_INT 35
30434: PPUSH
30435: CALL_OW 67
// until GetDistUnits ( JMM , Powell ) > 6 ;
30439: LD_EXP 11
30443: PPUSH
30444: LD_EXP 13
30448: PPUSH
30449: CALL_OW 296
30453: PUSH
30454: LD_INT 6
30456: GREATER
30457: IFFALSE 30432
// SayRadio ( Powell , D1-Pow-9 ) ;
30459: LD_EXP 13
30463: PPUSH
30464: LD_STRING D1-Pow-9
30466: PPUSH
30467: CALL_OW 94
// RemoveUnit ( Powell ) ;
30471: LD_EXP 13
30475: PPUSH
30476: CALL_OW 64
// PlaceHumanInUnit ( Powell , ambar0 ) ;
30480: LD_EXP 13
30484: PPUSH
30485: LD_INT 18
30487: PPUSH
30488: CALL_OW 52
// if Joan and not Joan in selected then
30492: LD_EXP 33
30496: PUSH
30497: LD_EXP 33
30501: PUSH
30502: LD_EXP 3
30506: IN
30507: NOT
30508: AND
30509: IFFALSE 30523
// SayRadio ( Joan , D1-Joan-9 ) ;
30511: LD_EXP 33
30515: PPUSH
30516: LD_STRING D1-Joan-9
30518: PPUSH
30519: CALL_OW 94
// ComTurnUnit ( Roth , JMM ) ;
30523: LD_EXP 12
30527: PPUSH
30528: LD_EXP 11
30532: PPUSH
30533: CALL_OW 119
// ComTurnUnit ( JMM , Roth ) ;
30537: LD_EXP 11
30541: PPUSH
30542: LD_EXP 12
30546: PPUSH
30547: CALL_OW 119
// Say ( Roth , D1-Roth-9 ) ;
30551: LD_EXP 12
30555: PPUSH
30556: LD_STRING D1-Roth-9
30558: PPUSH
30559: CALL_OW 88
// Say ( JMM , D1-JMM-10 ) ;
30563: LD_EXP 11
30567: PPUSH
30568: LD_STRING D1-JMM-10
30570: PPUSH
30571: CALL_OW 88
// InGameOff ;
30575: CALL_OW 9
// ChangeMissionObjectives ( M1 ) ;
30579: LD_STRING M1
30581: PPUSH
30582: CALL_OW 337
// SetAttitude ( 7 , 1 , att_enemy , true ) ;
30586: LD_INT 7
30588: PPUSH
30589: LD_INT 1
30591: PPUSH
30592: LD_INT 2
30594: PPUSH
30595: LD_INT 1
30597: PPUSH
30598: CALL_OW 80
// wait ( 0 0$3 ) ;
30602: LD_INT 105
30604: PPUSH
30605: CALL_OW 67
// ComMoveXY ( Roth , 124 , 18 ) ;
30609: LD_EXP 12
30613: PPUSH
30614: LD_INT 124
30616: PPUSH
30617: LD_INT 18
30619: PPUSH
30620: CALL_OW 111
// AddComInvisible ( Roth ) ;
30624: LD_EXP 12
30628: PPUSH
30629: CALL_OW 212
// AddComWait ( Roth , 1 1$30 ) ;
30633: LD_EXP 12
30637: PPUSH
30638: LD_INT 3150
30640: PPUSH
30641: CALL_OW 202
// AddComMoveXY ( Roth , 156 , 20 ) ;
30645: LD_EXP 12
30649: PPUSH
30650: LD_INT 156
30652: PPUSH
30653: LD_INT 20
30655: PPUSH
30656: CALL_OW 171
// AddComMoveXY ( Roth , 178 , 42 ) ;
30660: LD_EXP 12
30664: PPUSH
30665: LD_INT 178
30667: PPUSH
30668: LD_INT 42
30670: PPUSH
30671: CALL_OW 171
// AddComInvisible ( Roth ) ;
30675: LD_EXP 12
30679: PPUSH
30680: CALL_OW 212
// end ;
30684: LD_VAR 0 1
30688: RET
// every 0 0$1 do var i , tmp ;
30689: GO 30691
30691: DISABLE
30692: LD_INT 0
30694: PPUSH
30695: PPUSH
// begin tmp := selected union friends union others ;
30696: LD_ADDR_VAR 0 2
30700: PUSH
30701: LD_EXP 3
30705: PUSH
30706: LD_EXP 4
30710: UNION
30711: PUSH
30712: LD_EXP 5
30716: UNION
30717: ST_TO_ADDR
// if not tmp then
30718: LD_VAR 0 2
30722: NOT
30723: IFFALSE 30727
// exit ;
30725: GO 30799
// repeat wait ( 0 0$1 ) ;
30727: LD_INT 35
30729: PPUSH
30730: CALL_OW 67
// for i in tmp do
30734: LD_ADDR_VAR 0 1
30738: PUSH
30739: LD_VAR 0 2
30743: PUSH
30744: FOR_IN
30745: IFFALSE 30790
// if CanSpot ( JMM , i ) then
30747: LD_EXP 11
30751: PPUSH
30752: LD_VAR 0 1
30756: PPUSH
30757: CALL 27346 0 2
30761: IFFALSE 30788
// begin tmp := tmp diff i ;
30763: LD_ADDR_VAR 0 2
30767: PUSH
30768: LD_VAR 0 2
30772: PUSH
30773: LD_VAR 0 1
30777: DIFF
30778: ST_TO_ADDR
// Spot ( i ) ;
30779: LD_VAR 0 1
30783: PPUSH
30784: CALL 30802 0 1
// end ;
30788: GO 30744
30790: POP
30791: POP
// until not tmp ;
30792: LD_VAR 0 2
30796: NOT
30797: IFFALSE 30727
// end ;
30799: PPOPN 2
30801: END
// export function Spot ( unit ) ; var building , side , joined ; begin
30802: LD_INT 0
30804: PPUSH
30805: PPUSH
30806: PPUSH
30807: PPUSH
// if not unit then
30808: LD_VAR 0 1
30812: NOT
30813: IFFALSE 30817
// exit ;
30815: GO 32706
// InGameOn ;
30817: CALL_OW 8
// side := GetSide ( JMM ) ;
30821: LD_ADDR_VAR 0 4
30825: PUSH
30826: LD_EXP 11
30830: PPUSH
30831: CALL_OW 255
30835: ST_TO_ADDR
// joined := false ;
30836: LD_ADDR_VAR 0 5
30840: PUSH
30841: LD_INT 0
30843: ST_TO_ADDR
// building := IsInUnit ( unit ) ;
30844: LD_ADDR_VAR 0 3
30848: PUSH
30849: LD_VAR 0 1
30853: PPUSH
30854: CALL_OW 310
30858: ST_TO_ADDR
// if building then
30859: LD_VAR 0 3
30863: IFFALSE 30922
// begin SetSide ( JMM , GetSide ( unit ) ) ;
30865: LD_EXP 11
30869: PPUSH
30870: LD_VAR 0 1
30874: PPUSH
30875: CALL_OW 255
30879: PPUSH
30880: CALL_OW 235
// ComEnterUnit ( JMM , building ) ;
30884: LD_EXP 11
30888: PPUSH
30889: LD_VAR 0 3
30893: PPUSH
30894: CALL_OW 120
// repeat wait ( 3 ) ;
30898: LD_INT 3
30900: PPUSH
30901: CALL_OW 67
// until IsInUnit ( JMM ) ;
30905: LD_EXP 11
30909: PPUSH
30910: CALL_OW 310
30914: IFFALSE 30898
// DialogueOn ;
30916: CALL_OW 6
// end else
30920: GO 30954
// begin ComTurnUnit ( JMM , unit ) ;
30922: LD_EXP 11
30926: PPUSH
30927: LD_VAR 0 1
30931: PPUSH
30932: CALL_OW 119
// ComTurnUnit ( unit , JMM ) ;
30936: LD_VAR 0 1
30940: PPUSH
30941: LD_EXP 11
30945: PPUSH
30946: CALL_OW 119
// DialogueOn ;
30950: CALL_OW 6
// end ; if unit = Joan then
30954: LD_VAR 0 1
30958: PUSH
30959: LD_EXP 33
30963: EQUAL
30964: IFFALSE 31074
// begin joined := true ;
30966: LD_ADDR_VAR 0 5
30970: PUSH
30971: LD_INT 1
30973: ST_TO_ADDR
// if Joan in selected then
30974: LD_EXP 33
30978: PUSH
30979: LD_EXP 3
30983: IN
30984: IFFALSE 31012
// begin Say ( Joan , D3-Joan-Joan-1 ) ;
30986: LD_EXP 33
30990: PPUSH
30991: LD_STRING D3-Joan-Joan-1
30993: PPUSH
30994: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
30998: LD_EXP 11
31002: PPUSH
31003: LD_STRING D3-Joan-JMM-1
31005: PPUSH
31006: CALL_OW 88
// end else
31010: GO 31072
// begin Say ( Joan , D4-Joan-Joan-1 ) ;
31012: LD_EXP 33
31016: PPUSH
31017: LD_STRING D4-Joan-Joan-1
31019: PPUSH
31020: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-1 ) ;
31024: LD_EXP 11
31028: PPUSH
31029: LD_STRING D4-Joan-JMM-1
31031: PPUSH
31032: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-2 ) ;
31036: LD_EXP 33
31040: PPUSH
31041: LD_STRING D4-Joan-Joan-2
31043: PPUSH
31044: CALL_OW 88
// Say ( JMM , D4-Joan-JMM-2 ) ;
31048: LD_EXP 11
31052: PPUSH
31053: LD_STRING D4-Joan-JMM-2
31055: PPUSH
31056: CALL_OW 88
// Say ( Joan , D4-Joan-Joan-3 ) ;
31060: LD_EXP 33
31064: PPUSH
31065: LD_STRING D4-Joan-Joan-3
31067: PPUSH
31068: CALL_OW 88
// end ; end else
31072: GO 32514
// if unit = Lisa then
31074: LD_VAR 0 1
31078: PUSH
31079: LD_EXP 20
31083: EQUAL
31084: IFFALSE 31276
// begin if Lisa in selected then
31086: LD_EXP 20
31090: PUSH
31091: LD_EXP 3
31095: IN
31096: IFFALSE 31209
// begin if GetSide ( Joan ) = 7 then
31098: LD_EXP 33
31102: PPUSH
31103: CALL_OW 255
31107: PUSH
31108: LD_INT 7
31110: EQUAL
31111: IFFALSE 31175
// begin Say ( Lisa , D3-LisaJ-Lisa-1 ) ;
31113: LD_EXP 20
31117: PPUSH
31118: LD_STRING D3-LisaJ-Lisa-1
31120: PPUSH
31121: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-1 ) ;
31125: LD_EXP 11
31129: PPUSH
31130: LD_STRING D3-LisaJ-JMM-1
31132: PPUSH
31133: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-2 ) ;
31137: LD_EXP 20
31141: PPUSH
31142: LD_STRING D3-LisaJ-Lisa-2
31144: PPUSH
31145: CALL_OW 88
// Say ( JMM , D3-LisaJ-JMM-2 ) ;
31149: LD_EXP 11
31153: PPUSH
31154: LD_STRING D3-LisaJ-JMM-2
31156: PPUSH
31157: CALL_OW 88
// Say ( Lisa , D3-LisaJ-Lisa-3 ) ;
31161: LD_EXP 20
31165: PPUSH
31166: LD_STRING D3-LisaJ-Lisa-3
31168: PPUSH
31169: CALL_OW 88
// end else
31173: GO 31207
// begin Say ( Lisa , D3-LisaL-Lisa-1 ) ;
31175: LD_EXP 20
31179: PPUSH
31180: LD_STRING D3-LisaL-Lisa-1
31182: PPUSH
31183: CALL_OW 88
// Say ( JMM , D3-LisaL-JMM-1 ) ;
31187: LD_EXP 11
31191: PPUSH
31192: LD_STRING D3-LisaL-JMM-1
31194: PPUSH
31195: CALL_OW 88
// joined := true ;
31199: LD_ADDR_VAR 0 5
31203: PUSH
31204: LD_INT 1
31206: ST_TO_ADDR
// end ; end else
31207: GO 31274
// begin if GetSide ( Joan ) = 7 then
31209: LD_EXP 33
31213: PPUSH
31214: CALL_OW 255
31218: PUSH
31219: LD_INT 7
31221: EQUAL
31222: IFFALSE 31262
// begin Say ( Lisa , D4-LisaJ-Lisa-1 ) ;
31224: LD_EXP 20
31228: PPUSH
31229: LD_STRING D4-LisaJ-Lisa-1
31231: PPUSH
31232: CALL_OW 88
// Say ( JMM , D4-LisaJ-JMM-1 ) ;
31236: LD_EXP 11
31240: PPUSH
31241: LD_STRING D4-LisaJ-JMM-1
31243: PPUSH
31244: CALL_OW 88
// Say ( Lisa , D4-LisaJ-Lisa-2 ) ;
31248: LD_EXP 20
31252: PPUSH
31253: LD_STRING D4-LisaJ-Lisa-2
31255: PPUSH
31256: CALL_OW 88
// end else
31260: GO 31274
// begin Say ( Lisa , D4-LisaL-Lisa-1 ) ;
31262: LD_EXP 20
31266: PPUSH
31267: LD_STRING D4-LisaL-Lisa-1
31269: PPUSH
31270: CALL_OW 88
// end ; end ; end else
31274: GO 32514
// if unit = Frank then
31276: LD_VAR 0 1
31280: PUSH
31281: LD_EXP 30
31285: EQUAL
31286: IFFALSE 31426
// begin joined := true ;
31288: LD_ADDR_VAR 0 5
31292: PUSH
31293: LD_INT 1
31295: ST_TO_ADDR
// if Frank in selected then
31296: LD_EXP 30
31300: PUSH
31301: LD_EXP 3
31305: IN
31306: IFFALSE 31376
// begin Say ( Frank , D3-Frank-Frank-1 ) ;
31308: LD_EXP 30
31312: PPUSH
31313: LD_STRING D3-Frank-Frank-1
31315: PPUSH
31316: CALL_OW 88
// Say ( JMM , D3-Frank-JMM-1 ) ;
31320: LD_EXP 11
31324: PPUSH
31325: LD_STRING D3-Frank-JMM-1
31327: PPUSH
31328: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-2 ) ;
31332: LD_EXP 30
31336: PPUSH
31337: LD_STRING D3-Frank-Frank-2
31339: PPUSH
31340: CALL_OW 88
// if reached_lab then
31344: LD_EXP 6
31348: IFFALSE 31374
// begin Say ( JMM , D3-Frank-JMM-2 ) ;
31350: LD_EXP 11
31354: PPUSH
31355: LD_STRING D3-Frank-JMM-2
31357: PPUSH
31358: CALL_OW 88
// Say ( Frank , D3-Frank-Frank-3 ) ;
31362: LD_EXP 30
31366: PPUSH
31367: LD_STRING D3-Frank-Frank-3
31369: PPUSH
31370: CALL_OW 88
// end ; end else
31374: GO 31424
// begin Say ( Frank , D4-Frank-Frank-1 ) ;
31376: LD_EXP 30
31380: PPUSH
31381: LD_STRING D4-Frank-Frank-1
31383: PPUSH
31384: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-1 ) ;
31388: LD_EXP 11
31392: PPUSH
31393: LD_STRING D4-Frank-JMM-1
31395: PPUSH
31396: CALL_OW 88
// Say ( Frank , D4-Frank-Frank-2 ) ;
31400: LD_EXP 30
31404: PPUSH
31405: LD_STRING D4-Frank-Frank-2
31407: PPUSH
31408: CALL_OW 88
// Say ( JMM , D4-Frank-JMM-2 ) ;
31412: LD_EXP 11
31416: PPUSH
31417: LD_STRING D4-Frank-JMM-2
31419: PPUSH
31420: CALL_OW 88
// end ; end else
31424: GO 32514
// if unit = Brown then
31426: LD_VAR 0 1
31430: PUSH
31431: LD_EXP 25
31435: EQUAL
31436: IFFALSE 31532
// begin if Brown in selected or gamma_commander = 2 then
31438: LD_EXP 25
31442: PUSH
31443: LD_EXP 3
31447: IN
31448: PUSH
31449: LD_EXP 10
31453: PUSH
31454: LD_INT 2
31456: EQUAL
31457: OR
31458: IFFALSE 31494
// begin Say ( Brown , D3-Soldier1-Sol1-1 ) ;
31460: LD_EXP 25
31464: PPUSH
31465: LD_STRING D3-Soldier1-Sol1-1
31467: PPUSH
31468: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
31472: LD_EXP 11
31476: PPUSH
31477: LD_STRING D3-Soldier1-JMM-1
31479: PPUSH
31480: CALL_OW 88
// joined := true ;
31484: LD_ADDR_VAR 0 5
31488: PUSH
31489: LD_INT 1
31491: ST_TO_ADDR
// end else
31492: GO 31530
// begin Say ( Brown , D4-Soldier1-Sol1-1 ) ;
31494: LD_EXP 25
31498: PPUSH
31499: LD_STRING D4-Soldier1-Sol1-1
31501: PPUSH
31502: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31506: LD_EXP 11
31510: PPUSH
31511: LD_STRING D4-Soldier1-JMM-1
31513: PPUSH
31514: CALL_OW 88
// Say ( Brown , D4-Soldier1-Sol1-2 ) ;
31518: LD_EXP 25
31522: PPUSH
31523: LD_STRING D4-Soldier1-Sol1-2
31525: PPUSH
31526: CALL_OW 88
// end ; end else
31530: GO 32514
// if unit = Donaldson then
31532: LD_VAR 0 1
31536: PUSH
31537: LD_EXP 21
31541: EQUAL
31542: IFFALSE 31638
// begin if Donaldson in selected or gamma_commander = 1 then
31544: LD_EXP 21
31548: PUSH
31549: LD_EXP 3
31553: IN
31554: PUSH
31555: LD_EXP 10
31559: PUSH
31560: LD_INT 1
31562: EQUAL
31563: OR
31564: IFFALSE 31600
// begin Say ( Donaldson , D3-Soldier2-FSol2-1 ) ;
31566: LD_EXP 21
31570: PPUSH
31571: LD_STRING D3-Soldier2-FSol2-1
31573: PPUSH
31574: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
31578: LD_EXP 11
31582: PPUSH
31583: LD_STRING D3-Soldier2-JMM-1
31585: PPUSH
31586: CALL_OW 88
// joined := true ;
31590: LD_ADDR_VAR 0 5
31594: PUSH
31595: LD_INT 1
31597: ST_TO_ADDR
// end else
31598: GO 31636
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
31600: LD_VAR 0 1
31604: PPUSH
31605: LD_STRING D4-Soldier1-FSol1-1
31607: PPUSH
31608: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
31612: LD_EXP 11
31616: PPUSH
31617: LD_STRING D4-Soldier1-JMM-1
31619: PPUSH
31620: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
31624: LD_VAR 0 1
31628: PPUSH
31629: LD_STRING D4-Soldier1-FSol1-2
31631: PPUSH
31632: CALL_OW 88
// end ; end else
31636: GO 32514
// if unit = Cyrus then
31638: LD_VAR 0 1
31642: PUSH
31643: LD_EXP 23
31647: EQUAL
31648: IFFALSE 31722
// begin if Cyrus in selected then
31650: LD_EXP 23
31654: PUSH
31655: LD_EXP 3
31659: IN
31660: IFFALSE 31696
// begin Say ( Cyrus , D3-Cyrus-Cyrus-1 ) ;
31662: LD_EXP 23
31666: PPUSH
31667: LD_STRING D3-Cyrus-Cyrus-1
31669: PPUSH
31670: CALL_OW 88
// Say ( JMM , D3-Cyrus-JMM-1 ) ;
31674: LD_EXP 11
31678: PPUSH
31679: LD_STRING D3-Cyrus-JMM-1
31681: PPUSH
31682: CALL_OW 88
// joined := true ;
31686: LD_ADDR_VAR 0 5
31690: PUSH
31691: LD_INT 1
31693: ST_TO_ADDR
// end else
31694: GO 31720
// begin Say ( Cyrus , D4-Cyrus-Cyrus-1 ) ;
31696: LD_EXP 23
31700: PPUSH
31701: LD_STRING D4-Cyrus-Cyrus-1
31703: PPUSH
31704: CALL_OW 88
// Say ( JMM , D4-Cyrus-JMM-1 ) ;
31708: LD_EXP 11
31712: PPUSH
31713: LD_STRING D4-Cyrus-JMM-1
31715: PPUSH
31716: CALL_OW 88
// end ; end else
31720: GO 32514
// if unit = Bobby then
31722: LD_VAR 0 1
31726: PUSH
31727: LD_EXP 22
31731: EQUAL
31732: IFFALSE 31818
// begin if Bobby in selected then
31734: LD_EXP 22
31738: PUSH
31739: LD_EXP 3
31743: IN
31744: IFFALSE 31780
// begin Say ( Bobby , D3-Bobby-Bobby-1 ) ;
31746: LD_EXP 22
31750: PPUSH
31751: LD_STRING D3-Bobby-Bobby-1
31753: PPUSH
31754: CALL_OW 88
// Say ( JMM , D3-Bobby-JMM-1 ) ;
31758: LD_EXP 11
31762: PPUSH
31763: LD_STRING D3-Bobby-JMM-1
31765: PPUSH
31766: CALL_OW 88
// joined := true ;
31770: LD_ADDR_VAR 0 5
31774: PUSH
31775: LD_INT 1
31777: ST_TO_ADDR
// end else
31778: GO 31816
// begin Say ( Bobby , D4-Bobby-Bobby-1 ) ;
31780: LD_EXP 22
31784: PPUSH
31785: LD_STRING D4-Bobby-Bobby-1
31787: PPUSH
31788: CALL_OW 88
// Say ( JMM , D4-Bobby-JMM-1 ) ;
31792: LD_EXP 11
31796: PPUSH
31797: LD_STRING D4-Bobby-JMM-1
31799: PPUSH
31800: CALL_OW 88
// Say ( Bobby , D4-Bobby-Bobby-2 ) ;
31804: LD_EXP 22
31808: PPUSH
31809: LD_STRING D4-Bobby-Bobby-2
31811: PPUSH
31812: CALL_OW 88
// end ; end else
31816: GO 32514
// if unit = Cornel then
31818: LD_VAR 0 1
31822: PUSH
31823: LD_EXP 28
31827: EQUAL
31828: IFFALSE 31926
// begin if Cornel in selected then
31830: LD_EXP 28
31834: PUSH
31835: LD_EXP 3
31839: IN
31840: IFFALSE 31888
// begin Say ( Cornel , D3-Mark-Corn-1 ) ;
31842: LD_EXP 28
31846: PPUSH
31847: LD_STRING D3-Mark-Corn-1
31849: PPUSH
31850: CALL_OW 88
// Say ( JMM , D3-Mark-JMM-1 ) ;
31854: LD_EXP 11
31858: PPUSH
31859: LD_STRING D3-Mark-JMM-1
31861: PPUSH
31862: CALL_OW 88
// Say ( Cornel , D3-Mark-Corn-2 ) ;
31866: LD_EXP 28
31870: PPUSH
31871: LD_STRING D3-Mark-Corn-2
31873: PPUSH
31874: CALL_OW 88
// joined := true ;
31878: LD_ADDR_VAR 0 5
31882: PUSH
31883: LD_INT 1
31885: ST_TO_ADDR
// end else
31886: GO 31924
// begin Say ( Cornel , D4-Mark-Corn-1 ) ;
31888: LD_EXP 28
31892: PPUSH
31893: LD_STRING D4-Mark-Corn-1
31895: PPUSH
31896: CALL_OW 88
// Say ( JMM , D3-Joan-JMM-1 ) ;
31900: LD_EXP 11
31904: PPUSH
31905: LD_STRING D3-Joan-JMM-1
31907: PPUSH
31908: CALL_OW 88
// Say ( Cornel , D4-Mark-Corn-2 ) ;
31912: LD_EXP 28
31916: PPUSH
31917: LD_STRING D4-Mark-Corn-2
31919: PPUSH
31920: CALL_OW 88
// end ; end else
31924: GO 32514
// if unit = Gary then
31926: LD_VAR 0 1
31930: PUSH
31931: LD_EXP 29
31935: EQUAL
31936: IFFALSE 32020
// begin if Gary in selected then
31938: LD_EXP 29
31942: PUSH
31943: LD_EXP 3
31947: IN
31948: IFFALSE 31984
// begin Say ( Gary , D3-Gary-Gary-1 ) ;
31950: LD_EXP 29
31954: PPUSH
31955: LD_STRING D3-Gary-Gary-1
31957: PPUSH
31958: CALL_OW 88
// Say ( JMM , D3-Gary-JMM-1 ) ;
31962: LD_EXP 11
31966: PPUSH
31967: LD_STRING D3-Gary-JMM-1
31969: PPUSH
31970: CALL_OW 88
// joined := true ;
31974: LD_ADDR_VAR 0 5
31978: PUSH
31979: LD_INT 1
31981: ST_TO_ADDR
// end else
31982: GO 32018
// begin Say ( Gary , D4-Gary-Gary-1 ) ;
31984: LD_EXP 29
31988: PPUSH
31989: LD_STRING D4-Gary-Gary-1
31991: PPUSH
31992: CALL_OW 88
// SetSide ( Gary , 1 ) ;
31996: LD_EXP 29
32000: PPUSH
32001: LD_INT 1
32003: PPUSH
32004: CALL_OW 235
// DialogueOff ;
32008: CALL_OW 7
// InGameOff ;
32012: CALL_OW 9
// exit ;
32016: GO 32706
// end ; end else
32018: GO 32514
// if unit = Kikuchi then
32020: LD_VAR 0 1
32024: PUSH
32025: LD_EXP 31
32029: EQUAL
32030: IFFALSE 32114
// begin if Kikuchi in selected then
32032: LD_EXP 31
32036: PUSH
32037: LD_EXP 3
32041: IN
32042: IFFALSE 32078
// begin Say ( Kikuchi , D3-Yamako-Yam-1 ) ;
32044: LD_EXP 31
32048: PPUSH
32049: LD_STRING D3-Yamako-Yam-1
32051: PPUSH
32052: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32056: LD_EXP 11
32060: PPUSH
32061: LD_STRING D3-Soldier2-JMM-1
32063: PPUSH
32064: CALL_OW 88
// joined := true ;
32068: LD_ADDR_VAR 0 5
32072: PUSH
32073: LD_INT 1
32075: ST_TO_ADDR
// end else
32076: GO 32112
// begin Say ( Kikuchi , D4-Yamako-Yam-1 ) ;
32078: LD_EXP 31
32082: PPUSH
32083: LD_STRING D4-Yamako-Yam-1
32085: PPUSH
32086: CALL_OW 88
// SetSide ( Kikuchi , 1 ) ;
32090: LD_EXP 31
32094: PPUSH
32095: LD_INT 1
32097: PPUSH
32098: CALL_OW 235
// DialogueOff ;
32102: CALL_OW 7
// InGameOff ;
32106: CALL_OW 9
// exit ;
32110: GO 32706
// end ; end else
32112: GO 32514
// if unit = Gladstone then
32114: LD_VAR 0 1
32118: PUSH
32119: LD_EXP 26
32123: EQUAL
32124: IFFALSE 32198
// begin if Gladstone in selected then
32126: LD_EXP 26
32130: PUSH
32131: LD_EXP 3
32135: IN
32136: IFFALSE 32172
// begin joined := true ;
32138: LD_ADDR_VAR 0 5
32142: PUSH
32143: LD_INT 1
32145: ST_TO_ADDR
// Say ( JMM , D3-Tim-JMM-1 ) ;
32146: LD_EXP 11
32150: PPUSH
32151: LD_STRING D3-Tim-JMM-1
32153: PPUSH
32154: CALL_OW 88
// Say ( Gladstone , D3-Tim-Glad-1 ) ;
32158: LD_EXP 26
32162: PPUSH
32163: LD_STRING D3-Tim-Glad-1
32165: PPUSH
32166: CALL_OW 88
// end else
32170: GO 32196
// begin Say ( JMM , D4-Tim-JMM-1 ) ;
32172: LD_EXP 11
32176: PPUSH
32177: LD_STRING D4-Tim-JMM-1
32179: PPUSH
32180: CALL_OW 88
// Say ( Gladstone , D4-Tim-Glad-1 ) ;
32184: LD_EXP 26
32188: PPUSH
32189: LD_STRING D4-Tim-Glad-1
32191: PPUSH
32192: CALL_OW 88
// end ; end else
32196: GO 32514
// if unit = Denis then
32198: LD_VAR 0 1
32202: PUSH
32203: LD_EXP 24
32207: EQUAL
32208: IFFALSE 32244
// begin joined := true ;
32210: LD_ADDR_VAR 0 5
32214: PUSH
32215: LD_INT 1
32217: ST_TO_ADDR
// Say ( Denis , D3-Denis-Den-1 ) ;
32218: LD_EXP 24
32222: PPUSH
32223: LD_STRING D3-Denis-Den-1
32225: PPUSH
32226: CALL_OW 88
// Say ( JMM , D3-Denis-JMM-1 ) ;
32230: LD_EXP 11
32234: PPUSH
32235: LD_STRING D3-Denis-JMM-1
32237: PPUSH
32238: CALL_OW 88
// end else
32242: GO 32514
// if unit = Simms then
32244: LD_VAR 0 1
32248: PUSH
32249: LD_EXP 32
32253: EQUAL
32254: IFFALSE 32290
// begin joined := true ;
32256: LD_ADDR_VAR 0 5
32260: PUSH
32261: LD_INT 1
32263: ST_TO_ADDR
// Say ( Simms , D3-Simms-Sim-1 ) ;
32264: LD_EXP 32
32268: PPUSH
32269: LD_STRING D3-Simms-Sim-1
32271: PPUSH
32272: CALL_OW 88
// Say ( JMM , D3-Simms-JMM-1 ) ;
32276: LD_EXP 11
32280: PPUSH
32281: LD_STRING D3-Simms-JMM-1
32283: PPUSH
32284: CALL_OW 88
// end else
32288: GO 32514
// if unit = DeltaDoctor then
32290: LD_VAR 0 1
32294: PUSH
32295: LD_EXP 34
32299: EQUAL
32300: IFFALSE 32336
// begin joined := true ;
32302: LD_ADDR_VAR 0 5
32306: PUSH
32307: LD_INT 1
32309: ST_TO_ADDR
// Say ( DeltaDoctor , D3-Soldier1-Sol1-1 ) ;
32310: LD_EXP 34
32314: PPUSH
32315: LD_STRING D3-Soldier1-Sol1-1
32317: PPUSH
32318: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32322: LD_EXP 11
32326: PPUSH
32327: LD_STRING D3-Soldier1-JMM-1
32329: PPUSH
32330: CALL_OW 88
// end else
32334: GO 32514
// begin joined := unit in selected ;
32336: LD_ADDR_VAR 0 5
32340: PUSH
32341: LD_VAR 0 1
32345: PUSH
32346: LD_EXP 3
32350: IN
32351: ST_TO_ADDR
// if joined then
32352: LD_VAR 0 5
32356: IFFALSE 32425
// begin if GetSex ( unit ) = sex_male then
32358: LD_VAR 0 1
32362: PPUSH
32363: CALL_OW 258
32367: PUSH
32368: LD_INT 1
32370: EQUAL
32371: IFFALSE 32399
// begin Say ( unit , D3-Soldier1-Sol1-1 ) ;
32373: LD_VAR 0 1
32377: PPUSH
32378: LD_STRING D3-Soldier1-Sol1-1
32380: PPUSH
32381: CALL_OW 88
// Say ( JMM , D3-Soldier1-JMM-1 ) ;
32385: LD_EXP 11
32389: PPUSH
32390: LD_STRING D3-Soldier1-JMM-1
32392: PPUSH
32393: CALL_OW 88
// end else
32397: GO 32423
// begin Say ( unit , D3-Soldier2-FSol2-1 ) ;
32399: LD_VAR 0 1
32403: PPUSH
32404: LD_STRING D3-Soldier2-FSol2-1
32406: PPUSH
32407: CALL_OW 88
// Say ( JMM , D3-Soldier2-JMM-1 ) ;
32411: LD_EXP 11
32415: PPUSH
32416: LD_STRING D3-Soldier2-JMM-1
32418: PPUSH
32419: CALL_OW 88
// end ; end else
32423: GO 32514
// begin if GetSex ( unit ) = sex_male then
32425: LD_VAR 0 1
32429: PPUSH
32430: CALL_OW 258
32434: PUSH
32435: LD_INT 1
32437: EQUAL
32438: IFFALSE 32478
// begin Say ( unit , D4-Soldier2-Sol1-1 ) ;
32440: LD_VAR 0 1
32444: PPUSH
32445: LD_STRING D4-Soldier2-Sol1-1
32447: PPUSH
32448: CALL_OW 88
// Say ( JMM , D4-Soldier2-JMM-1 ) ;
32452: LD_EXP 11
32456: PPUSH
32457: LD_STRING D4-Soldier2-JMM-1
32459: PPUSH
32460: CALL_OW 88
// Say ( unit , D4-Soldier2-Sol2-1 ) ;
32464: LD_VAR 0 1
32468: PPUSH
32469: LD_STRING D4-Soldier2-Sol2-1
32471: PPUSH
32472: CALL_OW 88
// end else
32476: GO 32514
// begin Say ( unit , D4-Soldier1-FSol1-1 ) ;
32478: LD_VAR 0 1
32482: PPUSH
32483: LD_STRING D4-Soldier1-FSol1-1
32485: PPUSH
32486: CALL_OW 88
// Say ( JMM , D4-Soldier1-JMM-1 ) ;
32490: LD_EXP 11
32494: PPUSH
32495: LD_STRING D4-Soldier1-JMM-1
32497: PPUSH
32498: CALL_OW 88
// Say ( unit , D4-Soldier1-FSol1-2 ) ;
32502: LD_VAR 0 1
32506: PPUSH
32507: LD_STRING D4-Soldier1-FSol1-2
32509: PPUSH
32510: CALL_OW 88
// end ; end ; end ; DialogueOff ;
32514: CALL_OW 7
// InGameOff ;
32518: CALL_OW 9
// if building then
32522: LD_VAR 0 3
32526: IFFALSE 32627
// begin SetSide ( JMM , side ) ;
32528: LD_EXP 11
32532: PPUSH
32533: LD_VAR 0 4
32537: PPUSH
32538: CALL_OW 235
// ComExitBuilding ( JMM ) ;
32542: LD_EXP 11
32546: PPUSH
32547: CALL_OW 122
// if joined then
32551: LD_VAR 0 5
32555: IFFALSE 32594
// begin SetSide ( unit , side ) ;
32557: LD_VAR 0 1
32561: PPUSH
32562: LD_VAR 0 4
32566: PPUSH
32567: CALL_OW 235
// SetSide ( building , 1 ) ;
32571: LD_VAR 0 3
32575: PPUSH
32576: LD_INT 1
32578: PPUSH
32579: CALL_OW 235
// ComExitBuilding ( unit ) ;
32583: LD_VAR 0 1
32587: PPUSH
32588: CALL_OW 122
// end else
32592: GO 32625
// begin wait ( 0 0$10 ) ;
32594: LD_INT 350
32596: PPUSH
32597: CALL_OW 67
// SetSide ( unit , 1 ) ;
32601: LD_VAR 0 1
32605: PPUSH
32606: LD_INT 1
32608: PPUSH
32609: CALL_OW 235
// SetSide ( building , 1 ) ;
32613: LD_VAR 0 3
32617: PPUSH
32618: LD_INT 1
32620: PPUSH
32621: CALL_OW 235
// end ; end else
32625: GO 32706
// begin ComStop ( [ JMM , unit ] ) ;
32627: LD_EXP 11
32631: PUSH
32632: LD_VAR 0 1
32636: PUSH
32637: EMPTY
32638: LIST
32639: LIST
32640: PPUSH
32641: CALL_OW 141
// if joined then
32645: LD_VAR 0 5
32649: IFFALSE 32667
// SetSide ( unit , side ) else
32651: LD_VAR 0 1
32655: PPUSH
32656: LD_VAR 0 4
32660: PPUSH
32661: CALL_OW 235
32665: GO 32706
// begin repeat wait ( 0 0$1 ) ;
32667: LD_INT 35
32669: PPUSH
32670: CALL_OW 67
// until GetDistUnits ( JMM , unit ) > 10 ;
32674: LD_EXP 11
32678: PPUSH
32679: LD_VAR 0 1
32683: PPUSH
32684: CALL_OW 296
32688: PUSH
32689: LD_INT 10
32691: GREATER
32692: IFFALSE 32667
// SetSide ( unit , 1 ) ;
32694: LD_VAR 0 1
32698: PPUSH
32699: LD_INT 1
32701: PPUSH
32702: CALL_OW 235
// end ; end ; end ;
32706: LD_VAR 0 2
32710: RET
// every 0 0$01 trigger IsInUnit ( JMM ) = amlab do
32711: LD_EXP 11
32715: PPUSH
32716: CALL_OW 310
32720: PUSH
32721: LD_INT 47
32723: EQUAL
32724: IFFALSE 32792
32726: GO 32728
32728: DISABLE
// begin ChangeMissionObjectives ( M1a ) ;
32729: LD_STRING M1a
32731: PPUSH
32732: CALL_OW 337
// SetTech ( tech_Soporific , 1 , state_researched ) ;
32736: LD_INT 13
32738: PPUSH
32739: LD_INT 1
32741: PPUSH
32742: LD_INT 2
32744: PPUSH
32745: CALL_OW 322
// SetTech ( tech_SpacAnom , 1 , state_researched ) ;
32749: LD_INT 29
32751: PPUSH
32752: LD_INT 1
32754: PPUSH
32755: LD_INT 2
32757: PPUSH
32758: CALL_OW 322
// SetClass ( JMM , class_bazooker ) ;
32762: LD_EXP 11
32766: PPUSH
32767: LD_INT 9
32769: PPUSH
32770: CALL_OW 336
// can_escape := true ;
32774: LD_ADDR_EXP 7
32778: PUSH
32779: LD_INT 1
32781: ST_TO_ADDR
// SetAreaMapShow ( escape_area , 1 ) ;
32782: LD_INT 19
32784: PPUSH
32785: LD_INT 1
32787: PPUSH
32788: CALL_OW 424
// end ;
32792: END
// every 0 0$01 trigger FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do var i ;
32793: LD_INT 22
32795: PUSH
32796: LD_INT 4
32798: PUSH
32799: EMPTY
32800: LIST
32801: LIST
32802: PUSH
32803: LD_INT 34
32805: PUSH
32806: LD_INT 12
32808: PUSH
32809: EMPTY
32810: LIST
32811: LIST
32812: PUSH
32813: EMPTY
32814: LIST
32815: LIST
32816: PPUSH
32817: CALL_OW 69
32821: IFFALSE 32903
32823: GO 32825
32825: DISABLE
32826: LD_INT 0
32828: PPUSH
// begin enable ;
32829: ENABLE
// for i in FilterAllUnits ( [ [ f_side , 4 ] , [ f_weapon , us_cargo_bay ] ] ) do
32830: LD_ADDR_VAR 0 1
32834: PUSH
32835: LD_INT 22
32837: PUSH
32838: LD_INT 4
32840: PUSH
32841: EMPTY
32842: LIST
32843: LIST
32844: PUSH
32845: LD_INT 34
32847: PUSH
32848: LD_INT 12
32850: PUSH
32851: EMPTY
32852: LIST
32853: LIST
32854: PUSH
32855: EMPTY
32856: LIST
32857: LIST
32858: PPUSH
32859: CALL_OW 69
32863: PUSH
32864: FOR_IN
32865: IFFALSE 32901
// if GetDistUnits ( i , JMM ) < 6 then
32867: LD_VAR 0 1
32871: PPUSH
32872: LD_EXP 11
32876: PPUSH
32877: CALL_OW 296
32881: PUSH
32882: LD_INT 6
32884: LESS
32885: IFFALSE 32899
// SetSide ( i , 7 ) ;
32887: LD_VAR 0 1
32891: PPUSH
32892: LD_INT 7
32894: PPUSH
32895: CALL_OW 235
32899: GO 32864
32901: POP
32902: POP
// end ;
32903: PPOPN 1
32905: END
// every 0 0$01 trigger can_escape and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) do var all_taken , tmp ;
32906: LD_EXP 7
32910: PUSH
32911: LD_INT 19
32913: PPUSH
32914: LD_INT 22
32916: PUSH
32917: LD_INT 7
32919: PUSH
32920: EMPTY
32921: LIST
32922: LIST
32923: PUSH
32924: LD_INT 21
32926: PUSH
32927: LD_INT 1
32929: PUSH
32930: EMPTY
32931: LIST
32932: LIST
32933: PUSH
32934: EMPTY
32935: LIST
32936: LIST
32937: PPUSH
32938: CALL_OW 71
32942: NOT
32943: AND
32944: PUSH
32945: LD_INT 3
32947: PPUSH
32948: CALL_OW 469
32952: NOT
32953: AND
32954: PUSH
32955: LD_INT 5
32957: PPUSH
32958: CALL_OW 469
32962: NOT
32963: AND
32964: IFFALSE 34134
32966: GO 32968
32968: DISABLE
32969: LD_INT 0
32971: PPUSH
32972: PPUSH
// begin all_taken := ( UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 ) ;
32973: LD_ADDR_VAR 0 1
32977: PUSH
32978: LD_EXP 3
32982: PPUSH
32983: LD_INT 22
32985: PUSH
32986: LD_INT 4
32988: PUSH
32989: EMPTY
32990: LIST
32991: LIST
32992: PUSH
32993: LD_INT 21
32995: PUSH
32996: LD_INT 1
32998: PUSH
32999: EMPTY
33000: LIST
33001: LIST
33002: PUSH
33003: EMPTY
33004: LIST
33005: LIST
33006: PPUSH
33007: CALL_OW 72
33011: PUSH
33012: LD_INT 0
33014: EQUAL
33015: ST_TO_ADDR
// if not all_taken then
33016: LD_VAR 0 1
33020: NOT
33021: IFFALSE 33162
// case query ( Q1 ) of 1 :
33023: LD_STRING Q1
33025: PPUSH
33026: CALL_OW 97
33030: PUSH
33031: LD_INT 1
33033: DOUBLE
33034: EQUAL
33035: IFTRUE 33039
33037: GO 33150
33039: POP
// begin repeat wait ( 0 0$1 ) ;
33040: LD_INT 35
33042: PPUSH
33043: CALL_OW 67
// until UnitFilter ( selected , [ [ f_side , 4 ] , [ f_type , unit_human ] ] ) = 0 and not FilterUnitsExceptArea ( escape_area , [ [ f_side , 7 ] , [ f_type , unit_human ] ] ) and not FindArtifact ( 3 ) and not FindArtifact ( 5 ) ;
33047: LD_EXP 3
33051: PPUSH
33052: LD_INT 22
33054: PUSH
33055: LD_INT 4
33057: PUSH
33058: EMPTY
33059: LIST
33060: LIST
33061: PUSH
33062: LD_INT 21
33064: PUSH
33065: LD_INT 1
33067: PUSH
33068: EMPTY
33069: LIST
33070: LIST
33071: PUSH
33072: EMPTY
33073: LIST
33074: LIST
33075: PPUSH
33076: CALL_OW 72
33080: PUSH
33081: LD_INT 0
33083: EQUAL
33084: PUSH
33085: LD_INT 19
33087: PPUSH
33088: LD_INT 22
33090: PUSH
33091: LD_INT 7
33093: PUSH
33094: EMPTY
33095: LIST
33096: LIST
33097: PUSH
33098: LD_INT 21
33100: PUSH
33101: LD_INT 1
33103: PUSH
33104: EMPTY
33105: LIST
33106: LIST
33107: PUSH
33108: EMPTY
33109: LIST
33110: LIST
33111: PPUSH
33112: CALL_OW 71
33116: NOT
33117: AND
33118: PUSH
33119: LD_INT 3
33121: PPUSH
33122: CALL_OW 469
33126: NOT
33127: AND
33128: PUSH
33129: LD_INT 5
33131: PPUSH
33132: CALL_OW 469
33136: NOT
33137: AND
33138: IFFALSE 33040
// all_taken := true ;
33140: LD_ADDR_VAR 0 1
33144: PUSH
33145: LD_INT 1
33147: ST_TO_ADDR
// end ; 2 :
33148: GO 33162
33150: LD_INT 2
33152: DOUBLE
33153: EQUAL
33154: IFTRUE 33158
33156: GO 33161
33158: POP
// ; end ;
33159: GO 33162
33161: POP
// if all_taken then
33162: LD_VAR 0 1
33166: IFFALSE 33180
// AddMedal ( All , 1 ) else
33168: LD_STRING All
33170: PPUSH
33171: LD_INT 1
33173: PPUSH
33174: CALL_OW 101
33178: GO 33191
// AddMedal ( All , - 1 ) ;
33180: LD_STRING All
33182: PPUSH
33183: LD_INT 1
33185: NEG
33186: PPUSH
33187: CALL_OW 101
// if team_kill_counter then
33191: LD_EXP 9
33195: IFFALSE 33210
// AddMedal ( Save , - 1 ) else
33197: LD_STRING Save
33199: PPUSH
33200: LD_INT 1
33202: NEG
33203: PPUSH
33204: CALL_OW 101
33208: GO 33220
// AddMedal ( Save , 1 ) ;
33210: LD_STRING Save
33212: PPUSH
33213: LD_INT 1
33215: PPUSH
33216: CALL_OW 101
// if friends_kill_counter >= [ 2 , 1 , 1 ] [ Difficulty ] then
33220: LD_EXP 8
33224: PUSH
33225: LD_INT 2
33227: PUSH
33228: LD_INT 1
33230: PUSH
33231: LD_INT 1
33233: PUSH
33234: EMPTY
33235: LIST
33236: LIST
33237: LIST
33238: PUSH
33239: LD_OWVAR 67
33243: ARRAY
33244: GREATEREQUAL
33245: IFFALSE 33260
// AddMedal ( Friendship , - 1 ) else
33247: LD_STRING Friendship
33249: PPUSH
33250: LD_INT 1
33252: NEG
33253: PPUSH
33254: CALL_OW 101
33258: GO 33270
// AddMedal ( Friendship , 1 ) ;
33260: LD_STRING Friendship
33262: PPUSH
33263: LD_INT 1
33265: PPUSH
33266: CALL_OW 101
// GiveMedals ( MAIN ) ;
33270: LD_STRING MAIN
33272: PPUSH
33273: CALL_OW 102
// tmp := FilterAllUnits ( [ [ [ f_side , 7 ] , [ f_or , [ f_class , 1 ] , [ f_class , 2 ] , [ f_class , 3 ] , [ f_class , 4 ] , [ f_class , 5 ] , [ f_class , 8 ] , [ f_class , 9 ] ] ] ] ) ;
33277: LD_ADDR_VAR 0 2
33281: PUSH
33282: LD_INT 22
33284: PUSH
33285: LD_INT 7
33287: PUSH
33288: EMPTY
33289: LIST
33290: LIST
33291: PUSH
33292: LD_INT 2
33294: PUSH
33295: LD_INT 25
33297: PUSH
33298: LD_INT 1
33300: PUSH
33301: EMPTY
33302: LIST
33303: LIST
33304: PUSH
33305: LD_INT 25
33307: PUSH
33308: LD_INT 2
33310: PUSH
33311: EMPTY
33312: LIST
33313: LIST
33314: PUSH
33315: LD_INT 25
33317: PUSH
33318: LD_INT 3
33320: PUSH
33321: EMPTY
33322: LIST
33323: LIST
33324: PUSH
33325: LD_INT 25
33327: PUSH
33328: LD_INT 4
33330: PUSH
33331: EMPTY
33332: LIST
33333: LIST
33334: PUSH
33335: LD_INT 25
33337: PUSH
33338: LD_INT 5
33340: PUSH
33341: EMPTY
33342: LIST
33343: LIST
33344: PUSH
33345: LD_INT 25
33347: PUSH
33348: LD_INT 8
33350: PUSH
33351: EMPTY
33352: LIST
33353: LIST
33354: PUSH
33355: LD_INT 25
33357: PUSH
33358: LD_INT 9
33360: PUSH
33361: EMPTY
33362: LIST
33363: LIST
33364: PUSH
33365: EMPTY
33366: LIST
33367: LIST
33368: LIST
33369: LIST
33370: LIST
33371: LIST
33372: LIST
33373: LIST
33374: PUSH
33375: EMPTY
33376: LIST
33377: LIST
33378: PUSH
33379: EMPTY
33380: LIST
33381: PPUSH
33382: CALL_OW 69
33386: ST_TO_ADDR
// RewardPeople ( tmp union Roth ) ;
33387: LD_VAR 0 2
33391: PUSH
33392: LD_EXP 12
33396: UNION
33397: PPUSH
33398: CALL_OW 43
// SaveCharacters ( JMM , 12a_JMM ) ;
33402: LD_EXP 11
33406: PPUSH
33407: LD_STRING 12a_JMM
33409: PPUSH
33410: CALL_OW 38
// if IsLive ( Roth ) then
33414: LD_EXP 12
33418: PPUSH
33419: CALL_OW 300
33423: IFFALSE 33437
// SaveCharacters ( Roth , 12a_Roth ) ;
33425: LD_EXP 12
33429: PPUSH
33430: LD_STRING 12a_Roth
33432: PPUSH
33433: CALL_OW 38
// if Lisa in tmp then
33437: LD_EXP 20
33441: PUSH
33442: LD_VAR 0 2
33446: IN
33447: IFFALSE 33463
// SaveCharacters ( Lisa , 12a_Lisa ) else
33449: LD_EXP 20
33453: PPUSH
33454: LD_STRING 12a_Lisa
33456: PPUSH
33457: CALL_OW 38
33461: GO 33481
// if Lisa then
33463: LD_EXP 20
33467: IFFALSE 33481
// SaveCharacters ( Lisa , 12p_Lisa ) ;
33469: LD_EXP 20
33473: PPUSH
33474: LD_STRING 12p_Lisa
33476: PPUSH
33477: CALL_OW 38
// if Donaldson in tmp then
33481: LD_EXP 21
33485: PUSH
33486: LD_VAR 0 2
33490: IN
33491: IFFALSE 33507
// SaveCharacters ( Donaldson , 12a_Donaldson ) else
33493: LD_EXP 21
33497: PPUSH
33498: LD_STRING 12a_Donaldson
33500: PPUSH
33501: CALL_OW 38
33505: GO 33525
// if Donaldson then
33507: LD_EXP 21
33511: IFFALSE 33525
// SaveCharacters ( Donaldson , 12p_Donaldson ) ;
33513: LD_EXP 21
33517: PPUSH
33518: LD_STRING 12p_Donaldson
33520: PPUSH
33521: CALL_OW 38
// if Bobby in tmp then
33525: LD_EXP 22
33529: PUSH
33530: LD_VAR 0 2
33534: IN
33535: IFFALSE 33551
// SaveCharacters ( Bobby , 12a_Bobby ) else
33537: LD_EXP 22
33541: PPUSH
33542: LD_STRING 12a_Bobby
33544: PPUSH
33545: CALL_OW 38
33549: GO 33569
// if Bobby then
33551: LD_EXP 22
33555: IFFALSE 33569
// SaveCharacters ( Bobby , 12p_Bobby ) ;
33557: LD_EXP 22
33561: PPUSH
33562: LD_STRING 12p_Bobby
33564: PPUSH
33565: CALL_OW 38
// if Cyrus in tmp then
33569: LD_EXP 23
33573: PUSH
33574: LD_VAR 0 2
33578: IN
33579: IFFALSE 33595
// SaveCharacters ( Cyrus , 12a_Cyrus ) else
33581: LD_EXP 23
33585: PPUSH
33586: LD_STRING 12a_Cyrus
33588: PPUSH
33589: CALL_OW 38
33593: GO 33613
// if Cyrus then
33595: LD_EXP 23
33599: IFFALSE 33613
// SaveCharacters ( Cyrus , 12p_Cyrus ) ;
33601: LD_EXP 23
33605: PPUSH
33606: LD_STRING 12p_Cyrus
33608: PPUSH
33609: CALL_OW 38
// if Denis in tmp then
33613: LD_EXP 24
33617: PUSH
33618: LD_VAR 0 2
33622: IN
33623: IFFALSE 33637
// SaveCharacters ( Denis , 12a_Denis ) ;
33625: LD_EXP 24
33629: PPUSH
33630: LD_STRING 12a_Denis
33632: PPUSH
33633: CALL_OW 38
// if Brown in tmp then
33637: LD_EXP 25
33641: PUSH
33642: LD_VAR 0 2
33646: IN
33647: IFFALSE 33663
// SaveCharacters ( Brown , 12a_Brown ) else
33649: LD_EXP 25
33653: PPUSH
33654: LD_STRING 12a_Brown
33656: PPUSH
33657: CALL_OW 38
33661: GO 33687
// if Brown in tmp then
33663: LD_EXP 25
33667: PUSH
33668: LD_VAR 0 2
33672: IN
33673: IFFALSE 33687
// SaveCharacters ( Brown , 12p_Brown ) ;
33675: LD_EXP 25
33679: PPUSH
33680: LD_STRING 12p_Brown
33682: PPUSH
33683: CALL_OW 38
// if Gladstone in tmp then
33687: LD_EXP 26
33691: PUSH
33692: LD_VAR 0 2
33696: IN
33697: IFFALSE 33713
// SaveCharacters ( Gladstone , 12a_Gladstone ) else
33699: LD_EXP 26
33703: PPUSH
33704: LD_STRING 12a_Gladstone
33706: PPUSH
33707: CALL_OW 38
33711: GO 33731
// if Gladstone then
33713: LD_EXP 26
33717: IFFALSE 33731
// SaveCharacters ( Gladstone , 12p_Gladstone ) ;
33719: LD_EXP 26
33723: PPUSH
33724: LD_STRING 12p_Gladstone
33726: PPUSH
33727: CALL_OW 38
// if Houten in tmp then
33731: LD_EXP 27
33735: PUSH
33736: LD_VAR 0 2
33740: IN
33741: IFFALSE 33757
// SaveCharacters ( Houten , 12a_Houten ) else
33743: LD_EXP 27
33747: PPUSH
33748: LD_STRING 12a_Houten
33750: PPUSH
33751: CALL_OW 38
33755: GO 33775
// if Houten then
33757: LD_EXP 27
33761: IFFALSE 33775
// SaveCharacters ( Houten , 12p_Houten ) ;
33763: LD_EXP 27
33767: PPUSH
33768: LD_STRING 12p_Houten
33770: PPUSH
33771: CALL_OW 38
// if Cornel in tmp then
33775: LD_EXP 28
33779: PUSH
33780: LD_VAR 0 2
33784: IN
33785: IFFALSE 33801
// SaveCharacters ( Cornel , 12a_Cornel ) else
33787: LD_EXP 28
33791: PPUSH
33792: LD_STRING 12a_Cornel
33794: PPUSH
33795: CALL_OW 38
33799: GO 33819
// if Cornel then
33801: LD_EXP 28
33805: IFFALSE 33819
// SaveCharacters ( Cornel , 12p_Cornel ) ;
33807: LD_EXP 28
33811: PPUSH
33812: LD_STRING 12p_Cornel
33814: PPUSH
33815: CALL_OW 38
// if Gary in tmp then
33819: LD_EXP 29
33823: PUSH
33824: LD_VAR 0 2
33828: IN
33829: IFFALSE 33845
// SaveCharacters ( Gary , 12a_Gary ) else
33831: LD_EXP 29
33835: PPUSH
33836: LD_STRING 12a_Gary
33838: PPUSH
33839: CALL_OW 38
33843: GO 33863
// if Gary then
33845: LD_EXP 29
33849: IFFALSE 33863
// SaveCharacters ( Gary , 12p_Gary ) ;
33851: LD_EXP 29
33855: PPUSH
33856: LD_STRING 12p_Gary
33858: PPUSH
33859: CALL_OW 38
// if Kikuchi in tmp then
33863: LD_EXP 31
33867: PUSH
33868: LD_VAR 0 2
33872: IN
33873: IFFALSE 33889
// SaveCharacters ( Kikuchi , 12a_Kikuchi ) else
33875: LD_EXP 31
33879: PPUSH
33880: LD_STRING 12a_Kikuchi
33882: PPUSH
33883: CALL_OW 38
33887: GO 33907
// if Kikuchi then
33889: LD_EXP 31
33893: IFFALSE 33907
// SaveCharacters ( Kikuchi , 12p_Kikuchi ) ;
33895: LD_EXP 31
33899: PPUSH
33900: LD_STRING 12p_Kikuchi
33902: PPUSH
33903: CALL_OW 38
// if Simms in tmp then
33907: LD_EXP 32
33911: PUSH
33912: LD_VAR 0 2
33916: IN
33917: IFFALSE 33931
// SaveCharacters ( Simms , 12a_Simms ) ;
33919: LD_EXP 32
33923: PPUSH
33924: LD_STRING 12a_Simms
33926: PPUSH
33927: CALL_OW 38
// if Joan in tmp then
33931: LD_EXP 33
33935: PUSH
33936: LD_VAR 0 2
33940: IN
33941: IFFALSE 33955
// SaveCharacters ( Joan , 12a_Joan ) ;
33943: LD_EXP 33
33947: PPUSH
33948: LD_STRING 12a_Joan
33950: PPUSH
33951: CALL_OW 38
// if DeltaDoctor in tmp then
33955: LD_EXP 34
33959: PUSH
33960: LD_VAR 0 2
33964: IN
33965: IFFALSE 33979
// SaveCharacters ( DeltaDoctor , 12a_DeltaDoctor ) ;
33967: LD_EXP 34
33971: PPUSH
33972: LD_STRING 12a_DeltaDoctor
33974: PPUSH
33975: CALL_OW 38
// tmp := tmp diff [ JMM , Roth , Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi , Simms , Joan , DeltaDoctor ] ;
33979: LD_ADDR_VAR 0 2
33983: PUSH
33984: LD_VAR 0 2
33988: PUSH
33989: LD_EXP 11
33993: PUSH
33994: LD_EXP 12
33998: PUSH
33999: LD_EXP 20
34003: PUSH
34004: LD_EXP 21
34008: PUSH
34009: LD_EXP 22
34013: PUSH
34014: LD_EXP 23
34018: PUSH
34019: LD_EXP 24
34023: PUSH
34024: LD_EXP 25
34028: PUSH
34029: LD_EXP 26
34033: PUSH
34034: LD_EXP 27
34038: PUSH
34039: LD_EXP 28
34043: PUSH
34044: LD_EXP 29
34048: PUSH
34049: LD_EXP 30
34053: PUSH
34054: LD_EXP 31
34058: PUSH
34059: LD_EXP 32
34063: PUSH
34064: LD_EXP 33
34068: PUSH
34069: LD_EXP 34
34073: PUSH
34074: EMPTY
34075: LIST
34076: LIST
34077: LIST
34078: LIST
34079: LIST
34080: LIST
34081: LIST
34082: LIST
34083: LIST
34084: LIST
34085: LIST
34086: LIST
34087: LIST
34088: LIST
34089: LIST
34090: LIST
34091: LIST
34092: DIFF
34093: ST_TO_ADDR
// if tmp then
34094: LD_VAR 0 2
34098: IFFALSE 34112
// SaveCharacters ( tmp , 12a_others ) ;
34100: LD_VAR 0 2
34104: PPUSH
34105: LD_STRING 12a_others
34107: PPUSH
34108: CALL_OW 38
// SaveCharacters ( others diff tmp , 12p_others ) ;
34112: LD_EXP 5
34116: PUSH
34117: LD_VAR 0 2
34121: DIFF
34122: PPUSH
34123: LD_STRING 12p_others
34125: PPUSH
34126: CALL_OW 38
// YouWin ;
34130: CALL_OW 103
// end ; end_of_file
34134: PPOPN 2
34136: END
// on SailEvent ( event ) do var tmp ;
34137: LD_INT 0
34139: PPUSH
// begin if event = 1 then
34140: LD_VAR 0 1
34144: PUSH
34145: LD_INT 1
34147: EQUAL
34148: IFFALSE 34221
// begin if not mobile_patrol then
34150: LD_EXP 14
34154: NOT
34155: IFFALSE 34159
// exit ;
34157: GO 34221
// tmp := mobile_patrol [ mobile_patrol ] ;
34159: LD_ADDR_VAR 0 2
34163: PUSH
34164: LD_EXP 14
34168: PUSH
34169: LD_EXP 14
34173: ARRAY
34174: ST_TO_ADDR
// mobile_patrol := Delete ( mobile_patrol , mobile_patrol ) ;
34175: LD_ADDR_EXP 14
34179: PUSH
34180: LD_EXP 14
34184: PPUSH
34185: LD_EXP 14
34189: PPUSH
34190: CALL_OW 3
34194: ST_TO_ADDR
// Patrol ( tmp , mobile_points [ mobile_patrol + 1 ] , [ ] ) ;
34195: LD_VAR 0 2
34199: PPUSH
34200: LD_EXP 15
34204: PUSH
34205: LD_EXP 14
34209: PUSH
34210: LD_INT 1
34212: PLUS
34213: ARRAY
34214: PPUSH
34215: EMPTY
34216: PPUSH
34217: CALL 6185 0 3
// end ; end ;
34221: PPOPN 2
34223: END
// on UnitDestroyed ( un ) do begin if un = JMM then
34224: LD_VAR 0 1
34228: PUSH
34229: LD_EXP 11
34233: EQUAL
34234: IFFALSE 34243
// YouLost ( JMM ) ;
34236: LD_STRING JMM
34238: PPUSH
34239: CALL_OW 104
// if GetSide ( un ) = 7 and GetWeapon ( un ) = us_cargo_bay then
34243: LD_VAR 0 1
34247: PPUSH
34248: CALL_OW 255
34252: PUSH
34253: LD_INT 7
34255: EQUAL
34256: PUSH
34257: LD_VAR 0 1
34261: PPUSH
34262: CALL_OW 264
34266: PUSH
34267: LD_INT 12
34269: EQUAL
34270: AND
34271: IFFALSE 34280
// YouLost ( Artifact ) ;
34273: LD_STRING Artifact
34275: PPUSH
34276: CALL_OW 104
// if GetSide ( un ) = 7 and GetType ( un ) = unit_human then
34280: LD_VAR 0 1
34284: PPUSH
34285: CALL_OW 255
34289: PUSH
34290: LD_INT 7
34292: EQUAL
34293: PUSH
34294: LD_VAR 0 1
34298: PPUSH
34299: CALL_OW 247
34303: PUSH
34304: LD_INT 1
34306: EQUAL
34307: AND
34308: IFFALSE 34324
// team_kill_counter := team_kill_counter + 1 ;
34310: LD_ADDR_EXP 9
34314: PUSH
34315: LD_EXP 9
34319: PUSH
34320: LD_INT 1
34322: PLUS
34323: ST_TO_ADDR
// if GetSide ( un ) = 1 and GetType ( un ) = unit_human then
34324: LD_VAR 0 1
34328: PPUSH
34329: CALL_OW 255
34333: PUSH
34334: LD_INT 1
34336: EQUAL
34337: PUSH
34338: LD_VAR 0 1
34342: PPUSH
34343: CALL_OW 247
34347: PUSH
34348: LD_INT 1
34350: EQUAL
34351: AND
34352: IFFALSE 34368
// friends_kill_counter := friends_kill_counter + 1 ;
34354: LD_ADDR_EXP 8
34358: PUSH
34359: LD_EXP 8
34363: PUSH
34364: LD_INT 1
34366: PLUS
34367: ST_TO_ADDR
// if GetSide ( un ) <> 1 then
34368: LD_VAR 0 1
34372: PPUSH
34373: CALL_OW 255
34377: PUSH
34378: LD_INT 1
34380: NONEQUAL
34381: IFFALSE 34385
// exit ;
34383: GO 34462
// if GetControl ( un ) = control_remote then
34385: LD_VAR 0 1
34389: PPUSH
34390: CALL_OW 263
34394: PUSH
34395: LD_INT 2
34397: EQUAL
34398: IFFALSE 34416
// defenders := defenders diff un ;
34400: LD_ADDR_EXP 17
34404: PUSH
34405: LD_EXP 17
34409: PUSH
34410: LD_VAR 0 1
34414: DIFF
34415: ST_TO_ADDR
// if not un in defenders then
34416: LD_VAR 0 1
34420: PUSH
34421: LD_EXP 17
34425: IN
34426: NOT
34427: IFFALSE 34462
// begin defcon := [ GetX ( un ) , GetY ( un ) ] ;
34429: LD_ADDR_EXP 18
34433: PUSH
34434: LD_VAR 0 1
34438: PPUSH
34439: CALL_OW 250
34443: PUSH
34444: LD_VAR 0 1
34448: PPUSH
34449: CALL_OW 251
34453: PUSH
34454: EMPTY
34455: LIST
34456: LIST
34457: ST_TO_ADDR
// Defend ;
34458: CALL 2405 0 0
// end ; end ;
34462: PPOPN 1
34464: END
// on VehicleConstructed ( veh , fac ) do begin if GetSide ( veh ) <> 1 then
34465: LD_VAR 0 1
34469: PPUSH
34470: CALL_OW 255
34474: PUSH
34475: LD_INT 1
34477: NONEQUAL
34478: IFFALSE 34482
// exit ;
34480: GO 34506
// if GetControl ( veh ) = control_remote then
34482: LD_VAR 0 1
34486: PPUSH
34487: CALL_OW 263
34491: PUSH
34492: LD_INT 2
34494: EQUAL
34495: IFFALSE 34506
// Connect ( veh ) ;
34497: LD_VAR 0 1
34501: PPUSH
34502: CALL 5380 0 1
// end ;
34506: PPOPN 2
34508: END
// on UnitGoesToRed ( un ) do var i , veh ;
34509: LD_INT 0
34511: PPUSH
34512: PPUSH
// begin if GetSide ( un ) = 1 and GetControl ( un ) = control_remote then
34513: LD_VAR 0 1
34517: PPUSH
34518: CALL_OW 255
34522: PUSH
34523: LD_INT 1
34525: EQUAL
34526: PUSH
34527: LD_VAR 0 1
34531: PPUSH
34532: CALL_OW 263
34536: PUSH
34537: LD_INT 2
34539: EQUAL
34540: AND
34541: IFFALSE 34552
// ComUnlink ( un ) ;
34543: LD_VAR 0 1
34547: PPUSH
34548: CALL_OW 136
// if un = ambar0 then
34552: LD_VAR 0 1
34556: PUSH
34557: LD_INT 18
34559: EQUAL
34560: IFFALSE 34670
// begin uc_side := 1 ;
34562: LD_ADDR_OWVAR 20
34566: PUSH
34567: LD_INT 1
34569: ST_TO_ADDR
// uc_nation := 1 ;
34570: LD_ADDR_OWVAR 21
34574: PUSH
34575: LD_INT 1
34577: ST_TO_ADDR
// for i = 1 to 6 do
34578: LD_ADDR_VAR 0 2
34582: PUSH
34583: DOUBLE
34584: LD_INT 1
34586: DEC
34587: ST_TO_ADDR
34588: LD_INT 6
34590: PUSH
34591: FOR_TO
34592: IFFALSE 34668
// begin PrepareVehicle ( us_medium_tracked , engine_combustion , control_computer , us_gatling_gun , 100 ) ;
34594: LD_INT 3
34596: PPUSH
34597: LD_INT 1
34599: PPUSH
34600: LD_INT 3
34602: PPUSH
34603: LD_INT 4
34605: PPUSH
34606: LD_INT 100
34608: PPUSH
34609: CALL 5144 0 5
// veh := CreateVehicle ;
34613: LD_ADDR_VAR 0 3
34617: PUSH
34618: CALL_OW 45
34622: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
34623: LD_VAR 0 3
34627: PPUSH
34628: LD_INT 1
34630: PPUSH
34631: CALL_OW 233
// PlaceUnitArea ( veh , west_spawn , false ) ;
34635: LD_VAR 0 3
34639: PPUSH
34640: LD_INT 25
34642: PPUSH
34643: LD_INT 0
34645: PPUSH
34646: CALL_OW 49
// defenders := defenders ^ veh ;
34650: LD_ADDR_EXP 17
34654: PUSH
34655: LD_EXP 17
34659: PUSH
34660: LD_VAR 0 3
34664: ADD
34665: ST_TO_ADDR
// end ;
34666: GO 34591
34668: POP
34669: POP
// end ; end ;
34670: PPOPN 3
34672: END
