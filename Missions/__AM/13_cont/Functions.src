Export Function PrepareUnit(ident, exist_mode);
var unit;
begin

    if exist_mode then
    unit := CreateCharacter(ident)
    else
    unit := NewCharacter(ident);

    result := unit;
End;

Export function DialogRandom(characters, dialogMID, dialogFID);
var i, rnd;
begin

    characters := characters diff [JMM, Stevens,  Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornel, Gary, Frank, Kikuchi, Powell];
    rnd = rand(1, characters);  

    for i = 1 to characters do
    begin

        if i = rnd AND GetSex(characters[i]) = 1 then Say(characters[i], dialogMID);
        if i = rnd AND GetSex(characters[i]) = 2 then Say(characters[i], dialogFID);

    end;

end;

Export Function IntBazooka(side, targetSide);
var ta, c, i, list, filter;
begin

    list   := FilterAllUnits([[f_side, side], [f_class, class_bazooker]]);
    filter := FilterAllUnits([[f_side, targetSide], [f_not, [f_type, unit_building]]]);

    c := Rand(1, 3);

        for i = 1 to list do
        for ta in filter do
            begin

            if GetDistUnits(list[i], ta) <= 13 then
                begin

                    Case c of
                    1: ComTimeShift(list[i], GetX(ta), GetY(ta));
                    2: ComSpaceShift(list[i], GetX(ta) + Rand(-1,1), GetY(ta) + Rand(-1,1));
                    3: ;
                    end;

                end;
            end;

End;

Export function EnchancedSaveCharacters(charactersList, ident);
var i;
begin
    for i in charactersList do
    begin
         if IsOk(i) then SaveCharacters(i, ident);
    end;
end;


Export function RepairVehicle(side, repairArea, repX, repY, targetSide);
var i,j, vehicleOK_list, damageVehicle_list, vehicleNeedRepair_list, vehicleDontNeedRepair_list, mechanicInside_list, mechanicOutside_list, target1, target2;
begin
    vehicleOK_list = FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_control, 1], [f_lives, 660], [f_not, [f_empty]], [f_not, [f_weapon, 53]]]);
    damageVehicle_list = FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_control, 1], [f_not, [f_lives, 660]]]);

    vehicleNeedRepair_list = FilterUnitsInArea(repairArea, [[f_side, side], [f_type, unit_vehicle], [f_control, 1], [f_not, [f_lives, 1000]]]);
    vehicleDontNeedRepair_list = FilterUnitsInArea(repairArea, [[f_side, side], [f_type, unit_vehicle], [f_control, 1], [f_lives, 1000], [f_empty], [f_not, [f_weapon, 53]]]);

    mechanicInside_list = [];
    mechanicOutside_list = FilterUnitsInArea(repairArea, [[f_side, side], [f_class, 3]]);
    
    if damageVehicle_list > 0 then
    begin
        for i in damageVehicle_list do 
        begin
            ComMoveXY(i, repX, repY);
        end;
    end;

    if vehicleNeedRepair_list > 0 then
    begin
        for i in vehicleNeedRepair_list  do
        begin
            mechanicInside_list = mechanicInside_list ^ UnitsInside(i);
            for j in mechanicInside_list do
            begin
                ComExitVehicle(i);
                wait(0$1);
                ComRepairVehicle(i, j);
            end;
        end;
    end;

    if vehicleDontNeedRepair_list > 0 then
    begin
        ComEnterUnit(mechanicOutside_list[1], vehicleDontNeedRepair_list[1]);
        SetFuel(vehicleDontNeedRepair_list[1], 100);
    end;

    if vehicleOK_list > 0 then
    begin
        for i in vehicleOK_list do
        begin
            target1 := NearestUnitToUnit(FilterAllUnits([f_side, targetSide]), i);
            target2 := NearestUnitToUnit(FilterAllUnits([[[f_side, targetSide], [f_or,[f_occupied], [f_type, unit_human], [f_type, unit_vehicle]]]]), i);

            If GetDistUnits(i, target1)+8 < GetDistUnits(i, target2) then
            begin
                ComAttackUnit(i, target1);
            end
            else
            begin
                ComAttackUnit(i, target2);
            end;
        end; 
    end;

    for i in not FilterUnitsInArea(repairArea, [[f_side, side], [f_class, 3]]) do ComMoveXY(i, repX, repY);

end;


Export function RespawnAttackInfantry(side, nation, soldierCount, sniperCount, bazookCount, mortalCount, medicCount, skil, spawnArea, healArea, targetSide);
var i, j,  un, damageUnit_list, medic_list, soldiersOK_list, enemyUnits, und, target1, target2;
begin

    wait([1$0, 1$30, 2$0, 2$30, 3$0, 3$30, 4$0, 4$30][Rand(1, 8)]);

        for i = 1 to medicCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 4, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;


       for i = 1 to soldierCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 1, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        for i = 1 to sniperCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 5, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        for i = 1 to bazookCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 9, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        for i = 1 to mortalCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 8, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        medic_list = FilterAllUnits([[f_side, side], [f_class, 4]]);

        for i in medic_list do ComMoveToArea(i, healArea);
        repeat
            wait(0$1);
            damageUnit_list = FilterAllUnits([[f_side, side], [f_and, [f_not, [f_lives, 550]],[f_lives, 250]]]);
            soldiersOK_list =  FilterAllUnits([[f_side, side], [f_or,[f_class, 1], [f_class, 5], [f_class, 8], [f_class, 9]], [f_lives, 1000]]);

            IF medicCount > 0  then
            begin
                    if damageUnit_list > 0 then
                    begin
                            for i in damageUnit_list  do
                            begin
                                    ComMoveToArea(i, healArea);
                                    for j in medic_list do 
                                    AddComHeal(j, i);
                            end;
                        end;
            end;

            for i in soldiersOK_list do
            begin

                    target1 := NearestUnitToUnit(FilterAllUnits([f_side, targetSide]), i);
                    target2 := NearestUnitToUnit(FilterAllUnits([[[f_side, targetSide], [f_or,[f_occupied], [f_type, unit_human], [f_type, unit_vehicle]]]]), i);

                    If GetDistUnits(i, target1)+8 < GetDistUnits(i, target2) then
                    begin
                            ComAttackUnit(i, target1);
                            end  else
                            begin
                            ComAttackUnit(i, target2);
                    end;

            end;

                            
            for i in soldiersOK_list do
            begin
                    target1 := NearestUnitToUnit(FilterAllUnits([f_side, targetSide]), i);
                    target2 := NearestUnitToUnit(FilterAllUnits([[[f_side, targetSide], [f_or,[f_occupied], [f_type, unit_human], [f_type, unit_vehicle]]]]), i);

                    If GetDistUnits(i, target1)+8 < GetDistUnits(i, target2) then
                    begin
                    ComAttackUnit(i, target1);
                    end else
                    begin
                    ComAttackUnit(i, target2);
            end;
        end; until soldiersOK_list = [];

END;

// Spawn vehicle and attack

export function RespawnAttackVehicle(area, side, vehCount, mehskill, nation, vehEngine, vehControl, RUWeapons, ARWeapons, AMWeapon, targetSide);
var i, j, un, veh, ruChassisTab, arChassisTab, amChassisTab, vehicleOK_list, target1, target2;
begin

  wait([1$0, 1$30, 2$0, 2$30, 3$0, 3$30, 4$0, 4$30][Rand(1, 8)]);

  amChassisTab = [];
  arChassisTab = [];
  ruChassisTab = [];

  repeat

  wait(0$01);

  IF nation = 1 then
  begin

            uc_side = side;
            uc_nation = nation;

            vc_engine = vehengine;
            vc_control = vehcontrol[Rand(1, vehcontrol)];
            vc_weapon = AMWeapon[Rand(1, AMWeapon)];

            for j = 1 to AMWeapon do
            begin
                 IF AMWeapon[j] = 2 or AMWeapon[j] = 3 then
                 begin
                      amChassisTab = [1,2,3,4,5];
                      vc_chassis = amChassisTab[Rand(1,amChassisTab)];
                 end;

                 IF AMWeapon[j] = 4 or AMWeapon[j] = 5 or AMWeapon[j] = 9 or AMWeapon[j] = 11 or AMWeapon[j] = 7 then
                 begin
                      amChassisTab = [2,3,4,5];
                      vc_chassis = amChassisTab[Rand(1, amChassisTab)];
                 end;

                 IF AMWeapon[j] = 8 or AMWeapon[j] = 6 or AMWeapon[j] = 10 then
                 begin
                      amChassisTab = [4,5];
                      vc_chassis = amChassisTab[Rand(1, amChassisTab)];
                 end;

           end;

            veh = CreateVehicle;
            PlaceUnitArea(veh, area, false);

            IF vc_control = 1 then
            begin

                hc_gallery = '';
                hc_name = '';
                PrepareHuman(false, 3, mehskill);

                un = CreateHuman;
                PlaceHumanInUnit(un, veh);

            end;


            i = i + 1;

    end;

    IF nation = 2 then
    begin

            uc_side = side;
            uc_nation = nation;

            vc_engine = vehengine;
            vc_control = vehcontrol[Rand(1, vehcontrol)];
            vc_weapon = ARWeapons[Rand(1, ARWeapons)];

            for j = 1 to ARWeapons do
            begin

                 IF ARWeapons[j] = 24 or ARWeapons[j] = 22 or ARWeapons[j] = 23 or ARWeapons[j] = 30 then
                 begin
                      arChassisTab = [11, 12, 13, 14];
                      vc_chassis = arChassisTab[Rand(1, arChassisTab)];
                 end;

                 IF ARWeapons[j] = 29 or ARWeapons[j] = 28 or ARWeapons[j] = 27 or ARWeapons[j] = 26 or ARWeapons[j] = 25 then
                 begin
                      arChassisTab = [13, 14];
                      vc_chassis = arChassisTab[Rand(1, arChassisTab)];
                 end;

           end;

            veh = CreateVehicle;
            PlaceUnitArea(veh, area, false);

            IF vc_control = 1 then
            begin

                hc_gallery = '';
                hc_name = '';
                PrepareHuman(false, 3, mehskill);

                un = CreateHuman;
                PlaceHumanInUnit(un, veh);

            end;


            i = i + 1;

    end;

    IF nation = 3 then
    begin

            uc_side = side;
            uc_nation = nation;

            vc_engine = vehengine;
            vc_control = vehcontrol[Rand(1, vehcontrol)];
            vc_weapon = RUWeapons[Rand(1, RUWeapons)];


            for j = 1 to RuWeapons do
            begin

                IF RUWeapons[j] = 42 or RUWeapons[j] = 43 or RUWeapons[j] = 44 or RUWeapons[j] = 45 or RUWeapons[j] = 49 then
                begin
                    ruChassisTab = [21, 22, 23, 24];
                    vc_chassis = ruChassisTab[Rand(1, ruChassisTab)];
                end;

                IF RUWeapons[j] = 46 or RUWeapons[j] = 47 then
                begin
                    ruChassisTab = [23, 24];
                    vc_chassis = ruChassisTab[Rand(1, ruChassisTab)];
                end;

           end;


            veh = CreateVehicle;
            PlaceUnitArea(veh, area, false);

            IF vc_control = 1 then
            begin

                hc_gallery = '';
                hc_name = '';
                PrepareHuman(false, 3, mehskill);

                un = CreateHuman;
                PlaceHumanInUnit(un, veh);

            end;


            i = i + 1;

    end;

  until i = vehCount;

    repeat
        wait(0$1);
        vehicleOK_list = FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_lives, 661]]);

        IF vehicleOK_list > 0 then
        begin

            for i in vehicleOK_list  do
            begin

            target1 := NearestUnitToUnit(FilterAllUnits([f_side, targetSide]), i);
            target2 := NearestUnitToUnit(FilterAllUnits([[[f_side, targetSide], [f_or,[f_occupied], [f_type, unit_human], [f_type, unit_vehicle]]]]), i);

            If GetDistUnits(i, target1)+8 < GetDistUnits(i, target2) then
            begin
                ComAttackUnit(i, target1);
            end
            else
            begin
                ComAttackUnit(i, target2);
            end;
        end;
      end;
    until FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_lives, 250]]) = 0 diff FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_weapon, 31]]) = 0;
END;