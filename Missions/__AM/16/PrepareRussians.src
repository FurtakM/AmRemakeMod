Export function  PrepareRussians;
var i;
begin
    uc_side = 3;

    Platonov = PrepareUnit('Platonov', false);
    PlaceHumanInUnit(Platonov, RuDep2);

    Yakotich = PrepareUnit('Yakotich', false);
    PlaceHumanInUnit(Yakotich, RuDep1);

    Kovalyuk = PrepareUnit('Kovalyuk', false);
    SetClass(Kovalyuk, 3);
    ruBehMehs = ruBehMehs ^ Kovalyuk;

    Oblukov = PrepareUnit('Oblukov', false);
    Bystrov = PrepareUnit('Bystrov', false);
    Fadeev = PrepareUnit('Fadeev', false);
    Gleb = PrepareUnit('Gleb', false);
    Petrosyan = PrepareUnit('Petrosyan', false);
    Petrovova = PrepareUnit('Petrovova', false);
    Kuzmov = PrepareUnit('Kuzmov', false);
    Mikhail = PrepareUnit('Mikhail', false);
    Furmanov = PrepareUnit('Furmanov', false);
    Belkov = PrepareUnit('Belkov', false);

    PlaceHumanInUnit(Oblukov, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);
    PlaceHumanInUnit(Fadeev, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);
    PlaceHumanInUnit(Gleb, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);
    PlaceHumanInUnit(Petrovova, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);
    PlaceHumanInUnit(Kuzmov, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);
    PlaceHumanInUnit(Furmanov, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);
    PlaceHumanInUnit(Belkov, FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]])[1]);

    PlaceHumanInUnit(Bystrov, RusLab1);
    PlaceHumanInUnit(Petrosyan, RusLab2);
    PlaceHumanInUnit(Mikhail, RuDep1);

    SetClass(Mikhail, 2);

    RespawnInside(3, 3, RuDep1, 10, 2, 5);
    RespawnInside(3, 3, RuDep2, 10, 2, 4);
    RespawnInside(3, 3, RusBarr1, 10, 9, 6);
    RespawnInside(3, 3, RusBarr1, 10, 3, 3);
    RespawnInside(3, 3, RusFact1, 10, 3, 6);
    RespawnInside(3, 3, RusFact2, 10, 3, 6);
    RespawnInside(3, 3, RusLab1, 10, 4, 3);
    RespawnInside(3, 3, RusLab2, 10, 4, 3);

    for i in FilterAllUnits([[f_side, 3], [f_type, unit_building], [f_btype, b_bunker], [f_empty]]) do RespawnInside(3, 3, i, 10, 1, 1);
    
end;

Export function PrepareAttackFromKappa;
var i, veh, vehList;
begin
    uc_side = 6;
    uc_nation = 1;

    vc_engine = 3;
    vc_control = 1;
    vc_chassis = 5;
    vc_weapon = [5, 9, 7][Rand(1, 3)];
    sewiVeh = CreateVehicle;
    PlaceUnitArea(sewiVeh, KappaSpawn, false);

    Vsevolod = PrepareUnit('Vsevolod', false);
    PlaceHumanInUnit(Vsevolod, sewiVeh);

    for i := 1 to 5 do
    begin
        vc_engine = 3;
        vc_control = 3;
        vc_chassis = 3;
        vc_weapon = [5, 9, 7][Rand(1, 3)];
        veh = CreateVehicle;
        PlaceUnitArea(veh, KappaSpawn, false);
    end;

    uc_nation = 3;

    for i := 1 to 7 do
    begin
        vc_engine = 3;
        vc_control = 3;
        vc_chassis = ru_heavy_tracked;
        vc_weapon = [44, 47, 45, 46, 49][Rand(1, 4)];
        veh = CreateVehicle;
        PlaceUnitArea(veh, KappaSpawn, false);
    end;

    repeat
        wait(0$1);
        vehList = FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_ok]]);

        if not IsInUnit(JMM) then ComAgressiveMove(vehList, GetX(JMM), GetY(JMM))
        else ComAgressiveMove(vehList, GetX(IsInUnit(JMM)), GetY(IsInUnit(JMM)));
    until vehList = 0;

end;

Export function PreapreMehBehs;
var i, un;
begin
    uc_side = 6;
    uc_nation = 3;

    for i := 1 to 3 do
    begin
        hc_name = '';
        hc_gallery = '';

        PrepareMechanic(false, 10);
        un = CreateHuman;
        ruBehMehs = ruBehMehs ^ un;
        
        PlaceUnitArea(un, RuMehBehSpawn, false);
    end;

    PlaceUnitArea(Kovalyuk, RuMehBehSpawn, false);
    SetSide(Kovalyuk, 6);
    SetSide(RuBehDep, 6);

    ComBuildBehemoth(ruBehMehs[1], b_behemoth, 193, 118, 0);
    ComBuildBehemoth(ruBehMehs[2], b_behemoth, 204, 119, 0);
    ComBuildBehemoth(ruBehMehs[3], b_behemoth, 195, 126, 0);
    ComBuildBehemoth(ruBehMehs[4], b_behemoth, 207, 126, 0);

end;
