// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission = [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 779 0 0
// end ; end_of_file
  46: END
// every 1 do var others ;
  47: GO 49
  49: DISABLE
  50: LD_INT 0
  52: PPUSH
// begin InGameOn ;
  53: CALL_OW 8
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  57: LD_INT 60
  59: PPUSH
  60: LD_INT 2
  62: PPUSH
  63: LD_INT 1
  65: PPUSH
  66: LD_INT 1
  68: PPUSH
  69: LD_INT 4
  71: PPUSH
  72: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  76: LD_INT 6
  78: PPUSH
  79: LD_INT 4
  81: PPUSH
  82: LD_INT 1
  84: PPUSH
  85: LD_INT 1
  87: PPUSH
  88: LD_INT 6
  90: PPUSH
  91: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
  95: LD_INT 47
  97: PUSH
  98: LD_INT 4
 100: PUSH
 101: EMPTY
 102: LIST
 103: LIST
 104: PPUSH
 105: LD_INT 51
 107: PPUSH
 108: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 112: LD_INT 47
 114: PUSH
 115: LD_INT 4
 117: PUSH
 118: EMPTY
 119: LIST
 120: LIST
 121: PPUSH
 122: LD_INT 52
 124: PPUSH
 125: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 129: LD_INT 47
 131: PUSH
 132: LD_INT 4
 134: PUSH
 135: EMPTY
 136: LIST
 137: LIST
 138: PPUSH
 139: LD_INT 53
 141: PPUSH
 142: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 146: LD_INT 138
 148: PPUSH
 149: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 153: LD_INT 138
 155: PPUSH
 156: LD_INT 69
 158: PPUSH
 159: LD_INT 36
 161: PPUSH
 162: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 166: LD_INT 138
 168: PPUSH
 169: LD_INT 65
 171: PPUSH
 172: LD_INT 43
 174: PPUSH
 175: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 179: LD_INT 138
 181: PPUSH
 182: LD_INT 63
 184: PPUSH
 185: LD_INT 48
 187: PPUSH
 188: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 192: LD_INT 138
 194: PPUSH
 195: LD_INT 60
 197: PPUSH
 198: LD_INT 50
 200: PPUSH
 201: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 205: LD_INT 138
 207: PPUSH
 208: LD_INT 54
 210: PPUSH
 211: LD_INT 47
 213: PPUSH
 214: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 218: LD_INT 138
 220: PPUSH
 221: LD_INT 51
 223: PPUSH
 224: LD_INT 40
 226: PPUSH
 227: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 231: LD_INT 35
 233: PPUSH
 234: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 238: LD_INT 138
 240: PPUSH
 241: CALL_OW 87
// until IsInArea ( car , stop ) ;
 245: LD_INT 138
 247: PPUSH
 248: LD_INT 7
 250: PPUSH
 251: CALL_OW 308
 255: IFFALSE 231
// ComExitVehicle ( JMM ) ;
 257: LD_EXP 1
 261: PPUSH
 262: CALL_OW 121
// wait ( 0 0$01 ) ;
 266: LD_INT 35
 268: PPUSH
 269: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 273: LD_EXP 1
 277: PPUSH
 278: LD_INT 42
 280: PPUSH
 281: LD_INT 37
 283: PPUSH
 284: CALL_OW 111
// wait ( 0 0$5 ) ;
 288: LD_INT 175
 290: PPUSH
 291: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 295: LD_EXP 2
 299: PPUSH
 300: CALL_OW 122
// wait ( 0 0$01 ) ;
 304: LD_INT 35
 306: PPUSH
 307: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 311: LD_EXP 2
 315: PPUSH
 316: LD_EXP 1
 320: PPUSH
 321: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 325: LD_EXP 1
 329: PPUSH
 330: LD_EXP 2
 334: PPUSH
 335: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 339: LD_EXP 1
 343: PPUSH
 344: LD_STRING D1-JMM-1
 346: PPUSH
 347: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 351: LD_EXP 2
 355: PPUSH
 356: LD_STRING D1-Pow-1
 358: PPUSH
 359: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 363: LD_EXP 1
 367: PPUSH
 368: LD_STRING D1-JMM-2
 370: PPUSH
 371: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 375: LD_EXP 2
 379: PPUSH
 380: LD_STRING D1-Pow-2
 382: PPUSH
 383: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 387: LD_EXP 1
 391: PPUSH
 392: LD_STRING D1-JMM-3
 394: PPUSH
 395: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 399: LD_EXP 2
 403: PPUSH
 404: LD_STRING D1-Pow-3
 406: PPUSH
 407: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 411: LD_EXP 1
 415: PPUSH
 416: LD_STRING D1-JMM-4
 418: PPUSH
 419: CALL_OW 88
// PrepareConvoy ;
 423: CALL 5043 0 0
// Say ( Powell , D1-Pow-4 ) ;
 427: LD_EXP 2
 431: PPUSH
 432: LD_STRING D1-Pow-4
 434: PPUSH
 435: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 439: LD_EXP 2
 443: PPUSH
 444: LD_STRING D1-Pow-4a
 446: PPUSH
 447: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 451: LD_EXP 2
 455: PPUSH
 456: LD_STRING D1-Pow-4b
 458: PPUSH
 459: CALL_OW 88
// ComMoveXY ( convoy , 61 , 50 ) ;
 463: LD_EXP 12
 467: PPUSH
 468: LD_INT 61
 470: PPUSH
 471: LD_INT 50
 473: PPUSH
 474: CALL_OW 111
// AddComMoveXY ( convoy , 77 , 69 ) ;
 478: LD_EXP 12
 482: PPUSH
 483: LD_INT 77
 485: PPUSH
 486: LD_INT 69
 488: PPUSH
 489: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 493: LD_EXP 1
 497: PPUSH
 498: LD_STRING D1-JMM-5
 500: PPUSH
 501: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 505: LD_EXP 2
 509: PPUSH
 510: LD_STRING D1-Pow-5
 512: PPUSH
 513: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 517: LD_EXP 1
 521: PPUSH
 522: LD_STRING D1-JMM-6
 524: PPUSH
 525: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 529: LD_EXP 2
 533: PPUSH
 534: LD_STRING D1-Pow-6
 536: PPUSH
 537: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 541: LD_EXP 1
 545: PPUSH
 546: LD_STRING D1-JMM-7
 548: PPUSH
 549: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 553: LD_EXP 2
 557: PPUSH
 558: LD_STRING D1-Pow-7
 560: PPUSH
 561: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 565: LD_EXP 1
 569: PPUSH
 570: LD_STRING D1-JMM-8
 572: PPUSH
 573: CALL_OW 88
// others = FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 577: LD_ADDR_VAR 0 1
 581: PUSH
 582: LD_INT 10
 584: PPUSH
 585: LD_INT 22
 587: PUSH
 588: LD_INT 1
 590: PUSH
 591: EMPTY
 592: LIST
 593: LIST
 594: PUSH
 595: LD_INT 21
 597: PUSH
 598: LD_INT 1
 600: PUSH
 601: EMPTY
 602: LIST
 603: LIST
 604: PUSH
 605: EMPTY
 606: LIST
 607: LIST
 608: PPUSH
 609: CALL_OW 70
 613: ST_TO_ADDR
// others = others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 614: LD_ADDR_VAR 0 1
 618: PUSH
 619: LD_VAR 0 1
 623: PUSH
 624: LD_INT 11
 626: PPUSH
 627: LD_INT 22
 629: PUSH
 630: LD_INT 1
 632: PUSH
 633: EMPTY
 634: LIST
 635: LIST
 636: PUSH
 637: LD_INT 21
 639: PUSH
 640: LD_INT 1
 642: PUSH
 643: EMPTY
 644: LIST
 645: LIST
 646: PUSH
 647: EMPTY
 648: LIST
 649: LIST
 650: PPUSH
 651: CALL_OW 70
 655: ADD
 656: ST_TO_ADDR
// others = others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 657: LD_ADDR_VAR 0 1
 661: PUSH
 662: LD_VAR 0 1
 666: PUSH
 667: LD_EXP 1
 671: PUSH
 672: LD_EXP 2
 676: PUSH
 677: LD_EXP 3
 681: PUSH
 682: LD_EXP 4
 686: PUSH
 687: LD_EXP 5
 691: PUSH
 692: LD_EXP 6
 696: PUSH
 697: LD_EXP 7
 701: PUSH
 702: LD_EXP 8
 706: PUSH
 707: LD_EXP 9
 711: PUSH
 712: LD_EXP 10
 716: PUSH
 717: EMPTY
 718: LIST
 719: LIST
 720: LIST
 721: LIST
 722: LIST
 723: LIST
 724: LIST
 725: LIST
 726: LIST
 727: LIST
 728: DIFF
 729: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 730: LD_EXP 1
 734: PPUSH
 735: LD_STRING 10_JMM
 737: PPUSH
 738: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 742: LD_VAR 0 1
 746: PPUSH
 747: LD_STRING OthersIn10
 749: PPUSH
 750: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 754: LD_EXP 11
 758: PPUSH
 759: LD_STRING 10_lock
 761: PPUSH
 762: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 766: LD_INT 10
 768: PPUSH
 769: LD_STRING %_cont
 771: PPUSH
 772: CALL_OW 340
// end ; end_of_file
 776: PPOPN 1
 778: END
// export function PrepareHeroes ; var i , un ; begin
 779: LD_INT 0
 781: PPUSH
 782: PPUSH
 783: PPUSH
// uc_side = 1 ;
 784: LD_ADDR_OWVAR 20
 788: PUSH
 789: LD_INT 1
 791: ST_TO_ADDR
// uc_nation = 1 ;
 792: LD_ADDR_OWVAR 21
 796: PUSH
 797: LD_INT 1
 799: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 800: LD_ADDR_EXP 1
 804: PUSH
 805: LD_STRING 09_JMM
 807: PPUSH
 808: LD_INT 1
 810: PPUSH
 811: CALL 5564 0 2
 815: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 816: LD_ADDR_EXP 2
 820: PUSH
 821: LD_STRING Powell
 823: PPUSH
 824: LD_INT 0
 826: PPUSH
 827: CALL 5564 0 2
 831: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 832: LD_ADDR_EXP 5
 836: PUSH
 837: LD_STRING 09_Bobby
 839: PPUSH
 840: LD_INT 1
 842: PPUSH
 843: CALL 5564 0 2
 847: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 848: LD_EXP 5
 852: PPUSH
 853: LD_INT 10
 855: PPUSH
 856: LD_INT 0
 858: PPUSH
 859: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
 863: LD_EXP 5
 867: PPUSH
 868: LD_INT 42
 870: PPUSH
 871: LD_INT 35
 873: PPUSH
 874: CALL_OW 118
// if IsPlaced ( Bobby ) then
 878: LD_EXP 5
 882: PPUSH
 883: CALL_OW 305
 887: IFFALSE 917
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
 889: LD_ADDR_EXP 14
 893: PUSH
 894: LD_EXP 14
 898: PUSH
 899: LD_EXP 5
 903: ADD
 904: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
 905: LD_EXP 5
 909: PPUSH
 910: LD_STRING 10_Bobby
 912: PPUSH
 913: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
 917: LD_EXP 5
 921: PPUSH
 922: CALL_OW 305
 926: NOT
 927: PUSH
 928: LD_EXP 3
 932: PPUSH
 933: CALL_OW 305
 937: NOT
 938: AND
 939: IFFALSE 1026
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
 941: LD_ADDR_EXP 3
 945: PUSH
 946: LD_STRING 08_Brown
 948: PPUSH
 949: LD_INT 1
 951: PPUSH
 952: CALL 5564 0 2
 956: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
 957: LD_EXP 3
 961: PPUSH
 962: LD_INT 10
 964: PPUSH
 965: LD_INT 0
 967: PPUSH
 968: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
 972: LD_EXP 3
 976: PPUSH
 977: LD_INT 42
 979: PPUSH
 980: LD_INT 35
 982: PPUSH
 983: CALL_OW 118
// if IsPlaced ( Brown ) then
 987: LD_EXP 3
 991: PPUSH
 992: CALL_OW 305
 996: IFFALSE 1026
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
 998: LD_ADDR_EXP 14
1002: PUSH
1003: LD_EXP 14
1007: PUSH
1008: LD_EXP 3
1012: ADD
1013: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1014: LD_EXP 3
1018: PPUSH
1019: LD_STRING 10_Brown
1021: PPUSH
1022: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1026: LD_EXP 5
1030: PPUSH
1031: CALL_OW 305
1035: NOT
1036: PUSH
1037: LD_EXP 3
1041: PPUSH
1042: CALL_OW 305
1046: NOT
1047: AND
1048: PUSH
1049: LD_EXP 4
1053: PPUSH
1054: CALL_OW 305
1058: NOT
1059: AND
1060: IFFALSE 1147
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1062: LD_ADDR_EXP 4
1066: PUSH
1067: LD_STRING 08_Donaldson
1069: PPUSH
1070: LD_INT 1
1072: PPUSH
1073: CALL 5564 0 2
1077: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1078: LD_EXP 4
1082: PPUSH
1083: LD_INT 10
1085: PPUSH
1086: LD_INT 0
1088: PPUSH
1089: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1093: LD_EXP 4
1097: PPUSH
1098: LD_INT 42
1100: PPUSH
1101: LD_INT 35
1103: PPUSH
1104: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1108: LD_EXP 4
1112: PPUSH
1113: CALL_OW 305
1117: IFFALSE 1147
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1119: LD_ADDR_EXP 14
1123: PUSH
1124: LD_EXP 14
1128: PUSH
1129: LD_EXP 4
1133: ADD
1134: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1135: LD_EXP 4
1139: PPUSH
1140: LD_STRING 10_Donaldson
1142: PPUSH
1143: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1147: LD_EXP 5
1151: PPUSH
1152: CALL_OW 305
1156: NOT
1157: PUSH
1158: LD_EXP 3
1162: PPUSH
1163: CALL_OW 305
1167: NOT
1168: AND
1169: PUSH
1170: LD_EXP 4
1174: PPUSH
1175: CALL_OW 305
1179: NOT
1180: AND
1181: PUSH
1182: LD_EXP 8
1186: PPUSH
1187: CALL_OW 305
1191: NOT
1192: AND
1193: IFFALSE 1280
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1195: LD_ADDR_EXP 8
1199: PUSH
1200: LD_STRING 08_Frank
1202: PPUSH
1203: LD_INT 1
1205: PPUSH
1206: CALL 5564 0 2
1210: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1211: LD_EXP 8
1215: PPUSH
1216: LD_INT 10
1218: PPUSH
1219: LD_INT 0
1221: PPUSH
1222: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1226: LD_EXP 8
1230: PPUSH
1231: LD_INT 42
1233: PPUSH
1234: LD_INT 35
1236: PPUSH
1237: CALL_OW 118
// if IsPlaced ( Frank ) then
1241: LD_EXP 8
1245: PPUSH
1246: CALL_OW 305
1250: IFFALSE 1280
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1252: LD_ADDR_EXP 14
1256: PUSH
1257: LD_EXP 14
1261: PUSH
1262: LD_EXP 8
1266: ADD
1267: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1268: LD_EXP 8
1272: PPUSH
1273: LD_STRING 10_Frank
1275: PPUSH
1276: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1280: LD_EXP 5
1284: PPUSH
1285: CALL_OW 305
1289: NOT
1290: PUSH
1291: LD_EXP 3
1295: PPUSH
1296: CALL_OW 305
1300: NOT
1301: AND
1302: PUSH
1303: LD_EXP 4
1307: PPUSH
1308: CALL_OW 305
1312: NOT
1313: AND
1314: PUSH
1315: LD_EXP 8
1319: PPUSH
1320: CALL_OW 305
1324: NOT
1325: AND
1326: PUSH
1327: LD_EXP 9
1331: PPUSH
1332: CALL_OW 305
1336: NOT
1337: AND
1338: IFFALSE 1425
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1340: LD_ADDR_EXP 9
1344: PUSH
1345: LD_STRING 09_Houten
1347: PPUSH
1348: LD_INT 1
1350: PPUSH
1351: CALL 5564 0 2
1355: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1356: LD_EXP 9
1360: PPUSH
1361: LD_INT 10
1363: PPUSH
1364: LD_INT 0
1366: PPUSH
1367: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1371: LD_EXP 9
1375: PPUSH
1376: LD_INT 42
1378: PPUSH
1379: LD_INT 35
1381: PPUSH
1382: CALL_OW 118
// if IsPlaced ( Houten ) then
1386: LD_EXP 9
1390: PPUSH
1391: CALL_OW 305
1395: IFFALSE 1425
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1397: LD_ADDR_EXP 14
1401: PUSH
1402: LD_EXP 14
1406: PUSH
1407: LD_EXP 9
1411: ADD
1412: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1413: LD_EXP 9
1417: PPUSH
1418: LD_STRING 10_Houten
1420: PPUSH
1421: CALL_OW 38
// ; end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1425: LD_ADDR_EXP 6
1429: PUSH
1430: LD_STRING 09_Cyrus
1432: PPUSH
1433: LD_INT 1
1435: PPUSH
1436: CALL 5564 0 2
1440: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1441: LD_EXP 6
1445: PPUSH
1446: LD_INT 10
1448: PPUSH
1449: LD_INT 0
1451: PPUSH
1452: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1456: LD_EXP 6
1460: PPUSH
1461: LD_INT 42
1463: PPUSH
1464: LD_INT 35
1466: PPUSH
1467: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1471: LD_EXP 6
1475: PPUSH
1476: CALL_OW 305
1480: IFFALSE 1510
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1482: LD_ADDR_EXP 14
1486: PUSH
1487: LD_EXP 14
1491: PUSH
1492: LD_EXP 6
1496: ADD
1497: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1498: LD_EXP 6
1502: PPUSH
1503: LD_STRING 10_Cyrus
1505: PPUSH
1506: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1510: LD_EXP 6
1514: PPUSH
1515: CALL_OW 305
1519: NOT
1520: PUSH
1521: LD_EXP 3
1525: PPUSH
1526: CALL_OW 305
1530: NOT
1531: AND
1532: IFFALSE 1619
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1534: LD_ADDR_EXP 3
1538: PUSH
1539: LD_STRING 08_Brown
1541: PPUSH
1542: LD_INT 1
1544: PPUSH
1545: CALL 5564 0 2
1549: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1550: LD_EXP 3
1554: PPUSH
1555: LD_INT 10
1557: PPUSH
1558: LD_INT 0
1560: PPUSH
1561: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1565: LD_EXP 3
1569: PPUSH
1570: LD_INT 42
1572: PPUSH
1573: LD_INT 35
1575: PPUSH
1576: CALL_OW 118
// if IsPlaced ( Brown ) then
1580: LD_EXP 3
1584: PPUSH
1585: CALL_OW 305
1589: IFFALSE 1619
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1591: LD_ADDR_EXP 14
1595: PUSH
1596: LD_EXP 14
1600: PUSH
1601: LD_EXP 3
1605: ADD
1606: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1607: LD_EXP 3
1611: PPUSH
1612: LD_STRING 10_Brown
1614: PPUSH
1615: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1619: LD_EXP 6
1623: PPUSH
1624: CALL_OW 305
1628: NOT
1629: PUSH
1630: LD_EXP 3
1634: PPUSH
1635: CALL_OW 305
1639: NOT
1640: AND
1641: PUSH
1642: LD_EXP 4
1646: PPUSH
1647: CALL_OW 305
1651: NOT
1652: AND
1653: IFFALSE 1740
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1655: LD_ADDR_EXP 4
1659: PUSH
1660: LD_STRING 08_Donaldson
1662: PPUSH
1663: LD_INT 1
1665: PPUSH
1666: CALL 5564 0 2
1670: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1671: LD_EXP 4
1675: PPUSH
1676: LD_INT 10
1678: PPUSH
1679: LD_INT 0
1681: PPUSH
1682: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1686: LD_EXP 4
1690: PPUSH
1691: LD_INT 42
1693: PPUSH
1694: LD_INT 35
1696: PPUSH
1697: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1701: LD_EXP 4
1705: PPUSH
1706: CALL_OW 305
1710: IFFALSE 1740
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1712: LD_ADDR_EXP 14
1716: PUSH
1717: LD_EXP 14
1721: PUSH
1722: LD_EXP 4
1726: ADD
1727: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1728: LD_EXP 4
1732: PPUSH
1733: LD_STRING 10_Donaldson
1735: PPUSH
1736: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1740: LD_EXP 6
1744: PPUSH
1745: CALL_OW 305
1749: NOT
1750: PUSH
1751: LD_EXP 3
1755: PPUSH
1756: CALL_OW 305
1760: NOT
1761: AND
1762: PUSH
1763: LD_EXP 4
1767: PPUSH
1768: CALL_OW 305
1772: NOT
1773: AND
1774: PUSH
1775: LD_EXP 8
1779: PPUSH
1780: CALL_OW 305
1784: NOT
1785: AND
1786: IFFALSE 1873
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1788: LD_ADDR_EXP 8
1792: PUSH
1793: LD_STRING 08_Frank
1795: PPUSH
1796: LD_INT 1
1798: PPUSH
1799: CALL 5564 0 2
1803: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1804: LD_EXP 8
1808: PPUSH
1809: LD_INT 10
1811: PPUSH
1812: LD_INT 0
1814: PPUSH
1815: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1819: LD_EXP 8
1823: PPUSH
1824: LD_INT 42
1826: PPUSH
1827: LD_INT 35
1829: PPUSH
1830: CALL_OW 118
// if IsPlaced ( Frank ) then
1834: LD_EXP 8
1838: PPUSH
1839: CALL_OW 305
1843: IFFALSE 1873
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1845: LD_ADDR_EXP 14
1849: PUSH
1850: LD_EXP 14
1854: PUSH
1855: LD_EXP 8
1859: ADD
1860: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1861: LD_EXP 8
1865: PPUSH
1866: LD_STRING 10_Frank
1868: PPUSH
1869: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1873: LD_EXP 6
1877: PPUSH
1878: CALL_OW 305
1882: NOT
1883: PUSH
1884: LD_EXP 3
1888: PPUSH
1889: CALL_OW 305
1893: NOT
1894: AND
1895: PUSH
1896: LD_EXP 4
1900: PPUSH
1901: CALL_OW 305
1905: NOT
1906: AND
1907: PUSH
1908: LD_EXP 8
1912: PPUSH
1913: CALL_OW 305
1917: NOT
1918: AND
1919: PUSH
1920: LD_EXP 9
1924: PPUSH
1925: CALL_OW 305
1929: NOT
1930: AND
1931: IFFALSE 2018
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1933: LD_ADDR_EXP 9
1937: PUSH
1938: LD_STRING 09_Houten
1940: PPUSH
1941: LD_INT 1
1943: PPUSH
1944: CALL 5564 0 2
1948: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1949: LD_EXP 9
1953: PPUSH
1954: LD_INT 10
1956: PPUSH
1957: LD_INT 0
1959: PPUSH
1960: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1964: LD_EXP 9
1968: PPUSH
1969: LD_INT 42
1971: PPUSH
1972: LD_INT 35
1974: PPUSH
1975: CALL_OW 118
// if IsPlaced ( Houten ) then
1979: LD_EXP 9
1983: PPUSH
1984: CALL_OW 305
1988: IFFALSE 2018
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1990: LD_ADDR_EXP 14
1994: PUSH
1995: LD_EXP 14
1999: PUSH
2000: LD_EXP 9
2004: ADD
2005: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2006: LD_EXP 9
2010: PPUSH
2011: LD_STRING 10_Houten
2013: PPUSH
2014: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
2018: LD_ADDR_EXP 7
2022: PUSH
2023: LD_STRING 08_Lisa
2025: PPUSH
2026: LD_INT 1
2028: PPUSH
2029: CALL 5564 0 2
2033: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2034: LD_EXP 7
2038: PPUSH
2039: LD_INT 10
2041: PPUSH
2042: LD_INT 0
2044: PPUSH
2045: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2049: LD_EXP 7
2053: PPUSH
2054: LD_INT 42
2056: PPUSH
2057: LD_INT 35
2059: PPUSH
2060: CALL_OW 118
// if IsPlaced ( Lisa ) then
2064: LD_EXP 7
2068: PPUSH
2069: CALL_OW 305
2073: IFFALSE 2103
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2075: LD_ADDR_EXP 14
2079: PUSH
2080: LD_EXP 14
2084: PUSH
2085: LD_EXP 7
2089: ADD
2090: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2091: LD_EXP 7
2095: PPUSH
2096: LD_STRING 10_Lisa
2098: PPUSH
2099: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2103: LD_EXP 7
2107: PPUSH
2108: CALL_OW 305
2112: NOT
2113: PUSH
2114: LD_EXP 3
2118: PPUSH
2119: CALL_OW 305
2123: NOT
2124: AND
2125: IFFALSE 2212
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2127: LD_ADDR_EXP 3
2131: PUSH
2132: LD_STRING 08_Brown
2134: PPUSH
2135: LD_INT 1
2137: PPUSH
2138: CALL 5564 0 2
2142: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2143: LD_EXP 3
2147: PPUSH
2148: LD_INT 10
2150: PPUSH
2151: LD_INT 0
2153: PPUSH
2154: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2158: LD_EXP 3
2162: PPUSH
2163: LD_INT 42
2165: PPUSH
2166: LD_INT 35
2168: PPUSH
2169: CALL_OW 118
// if IsPlaced ( Brown ) then
2173: LD_EXP 3
2177: PPUSH
2178: CALL_OW 305
2182: IFFALSE 2212
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2184: LD_ADDR_EXP 14
2188: PUSH
2189: LD_EXP 14
2193: PUSH
2194: LD_EXP 3
2198: ADD
2199: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2200: LD_EXP 3
2204: PPUSH
2205: LD_STRING 10_Brown
2207: PPUSH
2208: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2212: LD_EXP 7
2216: PPUSH
2217: CALL_OW 305
2221: NOT
2222: PUSH
2223: LD_EXP 3
2227: PPUSH
2228: CALL_OW 305
2232: NOT
2233: AND
2234: PUSH
2235: LD_EXP 4
2239: PPUSH
2240: CALL_OW 305
2244: NOT
2245: AND
2246: IFFALSE 2333
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2248: LD_ADDR_EXP 4
2252: PUSH
2253: LD_STRING 08_Donaldson
2255: PPUSH
2256: LD_INT 1
2258: PPUSH
2259: CALL 5564 0 2
2263: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2264: LD_EXP 4
2268: PPUSH
2269: LD_INT 10
2271: PPUSH
2272: LD_INT 0
2274: PPUSH
2275: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2279: LD_EXP 4
2283: PPUSH
2284: LD_INT 42
2286: PPUSH
2287: LD_INT 35
2289: PPUSH
2290: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2294: LD_EXP 4
2298: PPUSH
2299: CALL_OW 305
2303: IFFALSE 2333
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2305: LD_ADDR_EXP 14
2309: PUSH
2310: LD_EXP 14
2314: PUSH
2315: LD_EXP 4
2319: ADD
2320: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2321: LD_EXP 4
2325: PPUSH
2326: LD_STRING 10_Donaldson
2328: PPUSH
2329: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2333: LD_EXP 7
2337: PPUSH
2338: CALL_OW 305
2342: NOT
2343: PUSH
2344: LD_EXP 3
2348: PPUSH
2349: CALL_OW 305
2353: NOT
2354: AND
2355: PUSH
2356: LD_EXP 4
2360: PPUSH
2361: CALL_OW 305
2365: NOT
2366: AND
2367: PUSH
2368: LD_EXP 8
2372: PPUSH
2373: CALL_OW 305
2377: NOT
2378: AND
2379: IFFALSE 2466
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2381: LD_ADDR_EXP 8
2385: PUSH
2386: LD_STRING 08_Frank
2388: PPUSH
2389: LD_INT 1
2391: PPUSH
2392: CALL 5564 0 2
2396: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2397: LD_EXP 8
2401: PPUSH
2402: LD_INT 10
2404: PPUSH
2405: LD_INT 0
2407: PPUSH
2408: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2412: LD_EXP 8
2416: PPUSH
2417: LD_INT 42
2419: PPUSH
2420: LD_INT 35
2422: PPUSH
2423: CALL_OW 118
// if IsPlaced ( Frank ) then
2427: LD_EXP 8
2431: PPUSH
2432: CALL_OW 305
2436: IFFALSE 2466
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2438: LD_ADDR_EXP 14
2442: PUSH
2443: LD_EXP 14
2447: PUSH
2448: LD_EXP 8
2452: ADD
2453: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2454: LD_EXP 8
2458: PPUSH
2459: LD_STRING 10_Frank
2461: PPUSH
2462: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2466: LD_EXP 7
2470: PPUSH
2471: CALL_OW 305
2475: NOT
2476: PUSH
2477: LD_EXP 3
2481: PPUSH
2482: CALL_OW 305
2486: NOT
2487: AND
2488: PUSH
2489: LD_EXP 4
2493: PPUSH
2494: CALL_OW 305
2498: NOT
2499: AND
2500: PUSH
2501: LD_EXP 8
2505: PPUSH
2506: CALL_OW 305
2510: NOT
2511: AND
2512: PUSH
2513: LD_EXP 9
2517: PPUSH
2518: CALL_OW 305
2522: NOT
2523: AND
2524: IFFALSE 2611
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2526: LD_ADDR_EXP 9
2530: PUSH
2531: LD_STRING 09_Houten
2533: PPUSH
2534: LD_INT 1
2536: PPUSH
2537: CALL 5564 0 2
2541: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2542: LD_EXP 9
2546: PPUSH
2547: LD_INT 10
2549: PPUSH
2550: LD_INT 0
2552: PPUSH
2553: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2557: LD_EXP 9
2561: PPUSH
2562: LD_INT 42
2564: PPUSH
2565: LD_INT 35
2567: PPUSH
2568: CALL_OW 118
// if IsPlaced ( Houten ) then
2572: LD_EXP 9
2576: PPUSH
2577: CALL_OW 305
2581: IFFALSE 2611
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2583: LD_ADDR_EXP 14
2587: PUSH
2588: LD_EXP 14
2592: PUSH
2593: LD_EXP 9
2597: ADD
2598: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2599: LD_EXP 9
2603: PPUSH
2604: LD_STRING 10_Houten
2606: PPUSH
2607: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2611: LD_ADDR_EXP 10
2615: PUSH
2616: LD_STRING 09_Gary
2618: PPUSH
2619: LD_INT 1
2621: PPUSH
2622: CALL 5564 0 2
2626: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2627: LD_EXP 10
2631: PPUSH
2632: LD_INT 10
2634: PPUSH
2635: LD_INT 0
2637: PPUSH
2638: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2642: LD_EXP 10
2646: PPUSH
2647: LD_INT 42
2649: PPUSH
2650: LD_INT 35
2652: PPUSH
2653: CALL_OW 118
// if IsPlaced ( Gary ) then
2657: LD_EXP 10
2661: PPUSH
2662: CALL_OW 305
2666: IFFALSE 2696
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2668: LD_ADDR_EXP 14
2672: PUSH
2673: LD_EXP 14
2677: PUSH
2678: LD_EXP 10
2682: ADD
2683: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2684: LD_EXP 10
2688: PPUSH
2689: LD_STRING 10_Gary
2691: PPUSH
2692: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2696: LD_EXP 10
2700: PPUSH
2701: CALL_OW 305
2705: NOT
2706: PUSH
2707: LD_EXP 3
2711: PPUSH
2712: CALL_OW 305
2716: NOT
2717: AND
2718: IFFALSE 2805
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2720: LD_ADDR_EXP 3
2724: PUSH
2725: LD_STRING 08_Brown
2727: PPUSH
2728: LD_INT 1
2730: PPUSH
2731: CALL 5564 0 2
2735: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2736: LD_EXP 3
2740: PPUSH
2741: LD_INT 10
2743: PPUSH
2744: LD_INT 0
2746: PPUSH
2747: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2751: LD_EXP 3
2755: PPUSH
2756: LD_INT 42
2758: PPUSH
2759: LD_INT 35
2761: PPUSH
2762: CALL_OW 118
// if IsPlaced ( Brown ) then
2766: LD_EXP 3
2770: PPUSH
2771: CALL_OW 305
2775: IFFALSE 2805
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2777: LD_ADDR_EXP 14
2781: PUSH
2782: LD_EXP 14
2786: PUSH
2787: LD_EXP 3
2791: ADD
2792: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2793: LD_EXP 3
2797: PPUSH
2798: LD_STRING 10_Brown
2800: PPUSH
2801: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2805: LD_EXP 10
2809: PPUSH
2810: CALL_OW 305
2814: NOT
2815: PUSH
2816: LD_EXP 3
2820: PPUSH
2821: CALL_OW 305
2825: NOT
2826: AND
2827: PUSH
2828: LD_EXP 4
2832: PPUSH
2833: CALL_OW 305
2837: NOT
2838: AND
2839: IFFALSE 2926
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2841: LD_ADDR_EXP 4
2845: PUSH
2846: LD_STRING 08_Donaldson
2848: PPUSH
2849: LD_INT 1
2851: PPUSH
2852: CALL 5564 0 2
2856: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2857: LD_EXP 4
2861: PPUSH
2862: LD_INT 10
2864: PPUSH
2865: LD_INT 0
2867: PPUSH
2868: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2872: LD_EXP 4
2876: PPUSH
2877: LD_INT 42
2879: PPUSH
2880: LD_INT 35
2882: PPUSH
2883: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2887: LD_EXP 4
2891: PPUSH
2892: CALL_OW 305
2896: IFFALSE 2926
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2898: LD_ADDR_EXP 14
2902: PUSH
2903: LD_EXP 14
2907: PUSH
2908: LD_EXP 4
2912: ADD
2913: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2914: LD_EXP 4
2918: PPUSH
2919: LD_STRING 10_Donaldson
2921: PPUSH
2922: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2926: LD_EXP 10
2930: PPUSH
2931: CALL_OW 305
2935: NOT
2936: PUSH
2937: LD_EXP 3
2941: PPUSH
2942: CALL_OW 305
2946: NOT
2947: AND
2948: PUSH
2949: LD_EXP 4
2953: PPUSH
2954: CALL_OW 305
2958: NOT
2959: AND
2960: PUSH
2961: LD_EXP 8
2965: PPUSH
2966: CALL_OW 305
2970: NOT
2971: AND
2972: IFFALSE 3059
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2974: LD_ADDR_EXP 8
2978: PUSH
2979: LD_STRING 08_Frank
2981: PPUSH
2982: LD_INT 1
2984: PPUSH
2985: CALL 5564 0 2
2989: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2990: LD_EXP 8
2994: PPUSH
2995: LD_INT 10
2997: PPUSH
2998: LD_INT 0
3000: PPUSH
3001: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3005: LD_EXP 8
3009: PPUSH
3010: LD_INT 42
3012: PPUSH
3013: LD_INT 35
3015: PPUSH
3016: CALL_OW 118
// if IsPlaced ( Frank ) then
3020: LD_EXP 8
3024: PPUSH
3025: CALL_OW 305
3029: IFFALSE 3059
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
3031: LD_ADDR_EXP 14
3035: PUSH
3036: LD_EXP 14
3040: PUSH
3041: LD_EXP 8
3045: ADD
3046: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3047: LD_EXP 8
3051: PPUSH
3052: LD_STRING 10_Frank
3054: PPUSH
3055: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3059: LD_EXP 10
3063: PPUSH
3064: CALL_OW 305
3068: NOT
3069: PUSH
3070: LD_EXP 3
3074: PPUSH
3075: CALL_OW 305
3079: NOT
3080: AND
3081: PUSH
3082: LD_EXP 4
3086: PPUSH
3087: CALL_OW 305
3091: NOT
3092: AND
3093: PUSH
3094: LD_EXP 8
3098: PPUSH
3099: CALL_OW 305
3103: NOT
3104: AND
3105: PUSH
3106: LD_EXP 9
3110: PPUSH
3111: CALL_OW 305
3115: NOT
3116: AND
3117: IFFALSE 3204
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3119: LD_ADDR_EXP 9
3123: PUSH
3124: LD_STRING 09_Houten
3126: PPUSH
3127: LD_INT 1
3129: PPUSH
3130: CALL 5564 0 2
3134: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3135: LD_EXP 9
3139: PPUSH
3140: LD_INT 10
3142: PPUSH
3143: LD_INT 0
3145: PPUSH
3146: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3150: LD_EXP 9
3154: PPUSH
3155: LD_INT 42
3157: PPUSH
3158: LD_INT 35
3160: PPUSH
3161: CALL_OW 118
// if IsPlaced ( Houten ) then
3165: LD_EXP 9
3169: PPUSH
3170: CALL_OW 305
3174: IFFALSE 3204
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3176: LD_ADDR_EXP 14
3180: PUSH
3181: LD_EXP 14
3185: PUSH
3186: LD_EXP 9
3190: ADD
3191: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3192: LD_EXP 9
3196: PPUSH
3197: LD_STRING 10_Houten
3199: PPUSH
3200: CALL_OW 38
// end ; end ; for i = 1 to 5 - coreHeroesTab do
3204: LD_ADDR_VAR 0 2
3208: PUSH
3209: DOUBLE
3210: LD_INT 1
3212: DEC
3213: ST_TO_ADDR
3214: LD_INT 5
3216: PUSH
3217: LD_EXP 14
3221: MINUS
3222: PUSH
3223: FOR_TO
3224: IFFALSE 3348
// begin hc_gallery =  ;
3226: LD_ADDR_OWVAR 33
3230: PUSH
3231: LD_STRING 
3233: ST_TO_ADDR
// hc_name =  ;
3234: LD_ADDR_OWVAR 26
3238: PUSH
3239: LD_STRING 
3241: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3242: LD_INT 0
3244: PPUSH
3245: LD_INT 1
3247: PUSH
3248: LD_INT 2
3250: PUSH
3251: LD_INT 3
3253: PUSH
3254: LD_INT 4
3256: PUSH
3257: EMPTY
3258: LIST
3259: LIST
3260: LIST
3261: LIST
3262: PUSH
3263: LD_INT 1
3265: PPUSH
3266: LD_INT 4
3268: PPUSH
3269: CALL_OW 12
3273: ARRAY
3274: PPUSH
3275: LD_INT 4
3277: PPUSH
3278: LD_INT 6
3280: PPUSH
3281: CALL_OW 12
3285: PPUSH
3286: CALL_OW 380
// un = CreateHuman ;
3290: LD_ADDR_VAR 0 3
3294: PUSH
3295: CALL_OW 44
3299: ST_TO_ADDR
// coreHeroesTab = coreHeroesTab ^ un ;
3300: LD_ADDR_EXP 14
3304: PUSH
3305: LD_EXP 14
3309: PUSH
3310: LD_VAR 0 3
3314: ADD
3315: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3316: LD_VAR 0 3
3320: PPUSH
3321: LD_INT 10
3323: PPUSH
3324: LD_INT 0
3326: PPUSH
3327: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3331: LD_VAR 0 3
3335: PPUSH
3336: LD_INT 42
3338: PPUSH
3339: LD_INT 35
3341: PPUSH
3342: CALL_OW 118
// end ;
3346: GO 3223
3348: POP
3349: POP
// siberite = LoadVariable ( 09_SibRes , 0 ) ;
3350: LD_ADDR_EXP 17
3354: PUSH
3355: LD_STRING 09_SibRes
3357: PPUSH
3358: LD_INT 0
3360: PPUSH
3361: CALL_OW 30
3365: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3366: LD_ADDR_EXP 11
3370: PUSH
3371: LD_STRING 08_other_survivors
3373: PPUSH
3374: CALL_OW 31
3378: ST_TO_ADDR
// if siberite >= 200 then
3379: LD_EXP 17
3383: PUSH
3384: LD_INT 200
3386: GREATEREQUAL
3387: IFFALSE 4430
// begin if not IsPlaced ( Brown ) then
3389: LD_EXP 3
3393: PPUSH
3394: CALL_OW 305
3398: NOT
3399: IFFALSE 3486
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3401: LD_ADDR_EXP 3
3405: PUSH
3406: LD_STRING 08_Brown
3408: PPUSH
3409: LD_INT 1
3411: PPUSH
3412: CALL 5564 0 2
3416: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3417: LD_EXP 3
3421: PPUSH
3422: LD_INT 11
3424: PPUSH
3425: LD_INT 0
3427: PPUSH
3428: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3432: LD_EXP 3
3436: PPUSH
3437: LD_INT 42
3439: PPUSH
3440: LD_INT 35
3442: PPUSH
3443: CALL_OW 118
// if IsPlaced ( Brown ) then
3447: LD_EXP 3
3451: PPUSH
3452: CALL_OW 305
3456: IFFALSE 3486
// begin addHeroesTab = addHeroesTab ^ Brown ;
3458: LD_ADDR_EXP 15
3462: PUSH
3463: LD_EXP 15
3467: PUSH
3468: LD_EXP 3
3472: ADD
3473: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3474: LD_EXP 3
3478: PPUSH
3479: LD_STRING 10_Brown
3481: PPUSH
3482: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3486: LD_EXP 3
3490: PPUSH
3491: CALL_OW 305
3495: NOT
3496: PUSH
3497: LD_EXP 4
3501: PPUSH
3502: CALL_OW 305
3506: NOT
3507: AND
3508: IFFALSE 3595
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3510: LD_ADDR_EXP 4
3514: PUSH
3515: LD_STRING 08_Donaldson
3517: PPUSH
3518: LD_INT 1
3520: PPUSH
3521: CALL 5564 0 2
3525: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3526: LD_EXP 4
3530: PPUSH
3531: LD_INT 11
3533: PPUSH
3534: LD_INT 0
3536: PPUSH
3537: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3541: LD_EXP 4
3545: PPUSH
3546: LD_INT 42
3548: PPUSH
3549: LD_INT 35
3551: PPUSH
3552: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3556: LD_EXP 4
3560: PPUSH
3561: CALL_OW 305
3565: IFFALSE 3595
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3567: LD_ADDR_EXP 15
3571: PUSH
3572: LD_EXP 15
3576: PUSH
3577: LD_EXP 4
3581: ADD
3582: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3583: LD_EXP 4
3587: PPUSH
3588: LD_STRING 10_Donaldson
3590: PPUSH
3591: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3595: LD_EXP 3
3599: PPUSH
3600: CALL_OW 305
3604: NOT
3605: PUSH
3606: LD_EXP 8
3610: PPUSH
3611: CALL_OW 305
3615: NOT
3616: AND
3617: IFFALSE 3704
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3619: LD_ADDR_EXP 8
3623: PUSH
3624: LD_STRING 08_Frank
3626: PPUSH
3627: LD_INT 1
3629: PPUSH
3630: CALL 5564 0 2
3634: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3635: LD_EXP 8
3639: PPUSH
3640: LD_INT 11
3642: PPUSH
3643: LD_INT 0
3645: PPUSH
3646: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3650: LD_EXP 8
3654: PPUSH
3655: LD_INT 42
3657: PPUSH
3658: LD_INT 35
3660: PPUSH
3661: CALL_OW 118
// if IsPlaced ( Frank ) then
3665: LD_EXP 8
3669: PPUSH
3670: CALL_OW 305
3674: IFFALSE 3704
// begin addHeroesTab = addHeroesTab ^ Frank ;
3676: LD_ADDR_EXP 15
3680: PUSH
3681: LD_EXP 15
3685: PUSH
3686: LD_EXP 8
3690: ADD
3691: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3692: LD_EXP 8
3696: PPUSH
3697: LD_STRING 10_Frank
3699: PPUSH
3700: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3704: LD_EXP 3
3708: PPUSH
3709: CALL_OW 305
3713: NOT
3714: PUSH
3715: LD_EXP 9
3719: PPUSH
3720: CALL_OW 305
3724: NOT
3725: AND
3726: IFFALSE 3815
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3728: LD_ADDR_EXP 9
3732: PUSH
3733: LD_STRING 09_Houten
3735: PPUSH
3736: LD_INT 1
3738: PPUSH
3739: CALL 5564 0 2
3743: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3744: LD_EXP 9
3748: PPUSH
3749: LD_INT 11
3751: PPUSH
3752: LD_INT 0
3754: PPUSH
3755: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3759: LD_EXP 9
3763: PPUSH
3764: LD_INT 42
3766: PPUSH
3767: LD_INT 35
3769: PPUSH
3770: CALL_OW 118
// if IsPlaced ( Houten ) then
3774: LD_EXP 9
3778: PPUSH
3779: CALL_OW 305
3783: IFFALSE 3813
// begin addHeroesTab = addHeroesTab ^ Houten ;
3785: LD_ADDR_EXP 15
3789: PUSH
3790: LD_EXP 15
3794: PUSH
3795: LD_EXP 9
3799: ADD
3800: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3801: LD_EXP 9
3805: PPUSH
3806: LD_STRING 10_Houten
3808: PPUSH
3809: CALL_OW 38
// end ; end else
3813: GO 3891
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3815: LD_EXP 11
3819: PUSH
3820: LD_INT 1
3822: ARRAY
3823: PPUSH
3824: LD_INT 11
3826: PPUSH
3827: LD_INT 0
3829: PPUSH
3830: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3834: LD_EXP 11
3838: PUSH
3839: LD_INT 1
3841: ARRAY
3842: PPUSH
3843: LD_INT 42
3845: PPUSH
3846: LD_INT 35
3848: PPUSH
3849: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
3853: LD_ADDR_EXP 15
3857: PUSH
3858: LD_EXP 15
3862: PUSH
3863: LD_EXP 11
3867: PUSH
3868: LD_INT 1
3870: ARRAY
3871: ADD
3872: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
3873: LD_ADDR_EXP 11
3877: PUSH
3878: LD_EXP 11
3882: PPUSH
3883: LD_INT 1
3885: PPUSH
3886: CALL_OW 3
3890: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
3891: LD_EXP 4
3895: PPUSH
3896: CALL_OW 305
3900: NOT
3901: IFFALSE 3988
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3903: LD_ADDR_EXP 4
3907: PUSH
3908: LD_STRING 08_Donaldson
3910: PPUSH
3911: LD_INT 1
3913: PPUSH
3914: CALL 5564 0 2
3918: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3919: LD_EXP 4
3923: PPUSH
3924: LD_INT 11
3926: PPUSH
3927: LD_INT 0
3929: PPUSH
3930: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3934: LD_EXP 4
3938: PPUSH
3939: LD_INT 42
3941: PPUSH
3942: LD_INT 35
3944: PPUSH
3945: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3949: LD_EXP 4
3953: PPUSH
3954: CALL_OW 305
3958: IFFALSE 3988
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3960: LD_ADDR_EXP 15
3964: PUSH
3965: LD_EXP 15
3969: PUSH
3970: LD_EXP 4
3974: ADD
3975: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3976: LD_EXP 4
3980: PPUSH
3981: LD_STRING 10_Donaldson
3983: PPUSH
3984: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3988: LD_EXP 4
3992: PPUSH
3993: CALL_OW 305
3997: NOT
3998: PUSH
3999: LD_EXP 8
4003: PPUSH
4004: CALL_OW 305
4008: NOT
4009: AND
4010: IFFALSE 4097
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
4012: LD_ADDR_EXP 8
4016: PUSH
4017: LD_STRING 08_Frank
4019: PPUSH
4020: LD_INT 1
4022: PPUSH
4023: CALL 5564 0 2
4027: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4028: LD_EXP 8
4032: PPUSH
4033: LD_INT 11
4035: PPUSH
4036: LD_INT 0
4038: PPUSH
4039: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4043: LD_EXP 8
4047: PPUSH
4048: LD_INT 42
4050: PPUSH
4051: LD_INT 35
4053: PPUSH
4054: CALL_OW 118
// if IsPlaced ( Frank ) then
4058: LD_EXP 8
4062: PPUSH
4063: CALL_OW 305
4067: IFFALSE 4097
// begin addHeroesTab = addHeroesTab ^ Frank ;
4069: LD_ADDR_EXP 15
4073: PUSH
4074: LD_EXP 15
4078: PUSH
4079: LD_EXP 8
4083: ADD
4084: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4085: LD_EXP 8
4089: PPUSH
4090: LD_STRING 10_Frank
4092: PPUSH
4093: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4097: LD_EXP 4
4101: PPUSH
4102: CALL_OW 305
4106: NOT
4107: PUSH
4108: LD_EXP 9
4112: PPUSH
4113: CALL_OW 305
4117: NOT
4118: AND
4119: IFFALSE 4208
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
4121: LD_ADDR_EXP 9
4125: PUSH
4126: LD_STRING 09_Houten
4128: PPUSH
4129: LD_INT 1
4131: PPUSH
4132: CALL 5564 0 2
4136: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4137: LD_EXP 9
4141: PPUSH
4142: LD_INT 11
4144: PPUSH
4145: LD_INT 0
4147: PPUSH
4148: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4152: LD_EXP 9
4156: PPUSH
4157: LD_INT 42
4159: PPUSH
4160: LD_INT 35
4162: PPUSH
4163: CALL_OW 118
// if IsPlaced ( Houten ) then
4167: LD_EXP 9
4171: PPUSH
4172: CALL_OW 305
4176: IFFALSE 4206
// begin addHeroesTab = addHeroesTab ^ Houten ;
4178: LD_ADDR_EXP 15
4182: PUSH
4183: LD_EXP 15
4187: PUSH
4188: LD_EXP 9
4192: ADD
4193: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4194: LD_EXP 9
4198: PPUSH
4199: LD_STRING 10_Houten
4201: PPUSH
4202: CALL_OW 38
// end ; end else
4206: GO 4284
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
4208: LD_EXP 11
4212: PUSH
4213: LD_INT 2
4215: ARRAY
4216: PPUSH
4217: LD_INT 11
4219: PPUSH
4220: LD_INT 0
4222: PPUSH
4223: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
4227: LD_EXP 11
4231: PUSH
4232: LD_INT 2
4234: ARRAY
4235: PPUSH
4236: LD_INT 42
4238: PPUSH
4239: LD_INT 35
4241: PPUSH
4242: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4246: LD_ADDR_EXP 15
4250: PUSH
4251: LD_EXP 15
4255: PUSH
4256: LD_EXP 11
4260: PUSH
4261: LD_INT 1
4263: ARRAY
4264: ADD
4265: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4266: LD_ADDR_EXP 11
4270: PUSH
4271: LD_EXP 11
4275: PPUSH
4276: LD_INT 1
4278: PPUSH
4279: CALL_OW 3
4283: ST_TO_ADDR
// end ; for i = 1 to 2 - addHeroesTab do
4284: LD_ADDR_VAR 0 2
4288: PUSH
4289: DOUBLE
4290: LD_INT 1
4292: DEC
4293: ST_TO_ADDR
4294: LD_INT 2
4296: PUSH
4297: LD_EXP 15
4301: MINUS
4302: PUSH
4303: FOR_TO
4304: IFFALSE 4428
// begin hc_gallery =  ;
4306: LD_ADDR_OWVAR 33
4310: PUSH
4311: LD_STRING 
4313: ST_TO_ADDR
// hc_name =  ;
4314: LD_ADDR_OWVAR 26
4318: PUSH
4319: LD_STRING 
4321: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4322: LD_INT 0
4324: PPUSH
4325: LD_INT 1
4327: PUSH
4328: LD_INT 2
4330: PUSH
4331: LD_INT 3
4333: PUSH
4334: LD_INT 4
4336: PUSH
4337: EMPTY
4338: LIST
4339: LIST
4340: LIST
4341: LIST
4342: PUSH
4343: LD_INT 1
4345: PPUSH
4346: LD_INT 4
4348: PPUSH
4349: CALL_OW 12
4353: ARRAY
4354: PPUSH
4355: LD_INT 4
4357: PPUSH
4358: LD_INT 6
4360: PPUSH
4361: CALL_OW 12
4365: PPUSH
4366: CALL_OW 380
// un = CreateHuman ;
4370: LD_ADDR_VAR 0 3
4374: PUSH
4375: CALL_OW 44
4379: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4380: LD_ADDR_EXP 15
4384: PUSH
4385: LD_EXP 15
4389: PUSH
4390: LD_VAR 0 3
4394: ADD
4395: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4396: LD_VAR 0 3
4400: PPUSH
4401: LD_INT 11
4403: PPUSH
4404: LD_INT 0
4406: PPUSH
4407: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4411: LD_VAR 0 3
4415: PPUSH
4416: LD_INT 42
4418: PPUSH
4419: LD_INT 35
4421: PPUSH
4422: CALL_OW 118
// end ;
4426: GO 4303
4428: POP
4429: POP
// end ; if siberite > 200 then
4430: LD_EXP 17
4434: PUSH
4435: LD_INT 200
4437: GREATER
4438: IFFALSE 5002
// begin if others08 > 0 then
4440: LD_EXP 11
4444: PUSH
4445: LD_INT 0
4447: GREATER
4448: IFFALSE 4846
// begin if others08 >= ( siberite - 200 ) / 100 then
4450: LD_EXP 11
4454: PUSH
4455: LD_EXP 17
4459: PUSH
4460: LD_INT 200
4462: MINUS
4463: PUSH
4464: LD_INT 100
4466: DIVREAL
4467: GREATEREQUAL
4468: IFFALSE 4584
// begin for i := 1 to ( siberite - 200 ) / 100 do
4470: LD_ADDR_VAR 0 2
4474: PUSH
4475: DOUBLE
4476: LD_INT 1
4478: DEC
4479: ST_TO_ADDR
4480: LD_EXP 17
4484: PUSH
4485: LD_INT 200
4487: MINUS
4488: PUSH
4489: LD_INT 100
4491: DIVREAL
4492: PUSH
4493: FOR_TO
4494: IFFALSE 4580
// begin PlaceUnitArea ( others08 [ i ] , addHeroes , false ) ;
4496: LD_EXP 11
4500: PUSH
4501: LD_VAR 0 2
4505: ARRAY
4506: PPUSH
4507: LD_INT 11
4509: PPUSH
4510: LD_INT 0
4512: PPUSH
4513: CALL_OW 49
// ComTurnXY ( others08 [ i ] , 42 , 35 ) ;
4517: LD_EXP 11
4521: PUSH
4522: LD_VAR 0 2
4526: ARRAY
4527: PPUSH
4528: LD_INT 42
4530: PPUSH
4531: LD_INT 35
4533: PPUSH
4534: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4538: LD_ADDR_EXP 15
4542: PUSH
4543: LD_EXP 15
4547: PUSH
4548: LD_EXP 11
4552: PUSH
4553: LD_VAR 0 2
4557: ARRAY
4558: ADD
4559: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4560: LD_ADDR_EXP 11
4564: PUSH
4565: LD_EXP 11
4569: PPUSH
4570: LD_INT 1
4572: PPUSH
4573: CALL_OW 3
4577: ST_TO_ADDR
// end ;
4578: GO 4493
4580: POP
4581: POP
// end else
4582: GO 4844
// begin for i := 1 to others08 do
4584: LD_ADDR_VAR 0 2
4588: PUSH
4589: DOUBLE
4590: LD_INT 1
4592: DEC
4593: ST_TO_ADDR
4594: LD_EXP 11
4598: PUSH
4599: FOR_TO
4600: IFFALSE 4686
// begin PlaceUnitArea ( others08 [ i ] , addHeroes , false ) ;
4602: LD_EXP 11
4606: PUSH
4607: LD_VAR 0 2
4611: ARRAY
4612: PPUSH
4613: LD_INT 11
4615: PPUSH
4616: LD_INT 0
4618: PPUSH
4619: CALL_OW 49
// ComTurnXY ( others08 [ i ] , 42 , 35 ) ;
4623: LD_EXP 11
4627: PUSH
4628: LD_VAR 0 2
4632: ARRAY
4633: PPUSH
4634: LD_INT 42
4636: PPUSH
4637: LD_INT 35
4639: PPUSH
4640: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4644: LD_ADDR_EXP 15
4648: PUSH
4649: LD_EXP 15
4653: PUSH
4654: LD_EXP 11
4658: PUSH
4659: LD_VAR 0 2
4663: ARRAY
4664: ADD
4665: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4666: LD_ADDR_EXP 11
4670: PUSH
4671: LD_EXP 11
4675: PPUSH
4676: LD_INT 1
4678: PPUSH
4679: CALL_OW 3
4683: ST_TO_ADDR
// end ;
4684: GO 4599
4686: POP
4687: POP
// for i = 1 to ( siberite - 200 ) / 100 - others08 do
4688: LD_ADDR_VAR 0 2
4692: PUSH
4693: DOUBLE
4694: LD_INT 1
4696: DEC
4697: ST_TO_ADDR
4698: LD_EXP 17
4702: PUSH
4703: LD_INT 200
4705: MINUS
4706: PUSH
4707: LD_INT 100
4709: DIVREAL
4710: PUSH
4711: LD_EXP 11
4715: MINUS
4716: PUSH
4717: FOR_TO
4718: IFFALSE 4842
// begin hc_gallery =  ;
4720: LD_ADDR_OWVAR 33
4724: PUSH
4725: LD_STRING 
4727: ST_TO_ADDR
// hc_name =  ;
4728: LD_ADDR_OWVAR 26
4732: PUSH
4733: LD_STRING 
4735: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4736: LD_INT 0
4738: PPUSH
4739: LD_INT 1
4741: PUSH
4742: LD_INT 2
4744: PUSH
4745: LD_INT 3
4747: PUSH
4748: LD_INT 4
4750: PUSH
4751: EMPTY
4752: LIST
4753: LIST
4754: LIST
4755: LIST
4756: PUSH
4757: LD_INT 1
4759: PPUSH
4760: LD_INT 4
4762: PPUSH
4763: CALL_OW 12
4767: ARRAY
4768: PPUSH
4769: LD_INT 4
4771: PPUSH
4772: LD_INT 6
4774: PPUSH
4775: CALL_OW 12
4779: PPUSH
4780: CALL_OW 380
// un = CreateHuman ;
4784: LD_ADDR_VAR 0 3
4788: PUSH
4789: CALL_OW 44
4793: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4794: LD_ADDR_EXP 15
4798: PUSH
4799: LD_EXP 15
4803: PUSH
4804: LD_VAR 0 3
4808: ADD
4809: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4810: LD_VAR 0 3
4814: PPUSH
4815: LD_INT 11
4817: PPUSH
4818: LD_INT 0
4820: PPUSH
4821: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4825: LD_VAR 0 3
4829: PPUSH
4830: LD_INT 42
4832: PPUSH
4833: LD_INT 35
4835: PPUSH
4836: CALL_OW 118
// end ;
4840: GO 4717
4842: POP
4843: POP
// end ; end else
4844: GO 5002
// begin for i = 1 to ( siberite - 200 ) / 100 - others08 do
4846: LD_ADDR_VAR 0 2
4850: PUSH
4851: DOUBLE
4852: LD_INT 1
4854: DEC
4855: ST_TO_ADDR
4856: LD_EXP 17
4860: PUSH
4861: LD_INT 200
4863: MINUS
4864: PUSH
4865: LD_INT 100
4867: DIVREAL
4868: PUSH
4869: LD_EXP 11
4873: MINUS
4874: PUSH
4875: FOR_TO
4876: IFFALSE 5000
// begin hc_gallery =  ;
4878: LD_ADDR_OWVAR 33
4882: PUSH
4883: LD_STRING 
4885: ST_TO_ADDR
// hc_name =  ;
4886: LD_ADDR_OWVAR 26
4890: PUSH
4891: LD_STRING 
4893: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4894: LD_INT 0
4896: PPUSH
4897: LD_INT 1
4899: PUSH
4900: LD_INT 2
4902: PUSH
4903: LD_INT 3
4905: PUSH
4906: LD_INT 4
4908: PUSH
4909: EMPTY
4910: LIST
4911: LIST
4912: LIST
4913: LIST
4914: PUSH
4915: LD_INT 1
4917: PPUSH
4918: LD_INT 4
4920: PPUSH
4921: CALL_OW 12
4925: ARRAY
4926: PPUSH
4927: LD_INT 4
4929: PPUSH
4930: LD_INT 6
4932: PPUSH
4933: CALL_OW 12
4937: PPUSH
4938: CALL_OW 380
// un = CreateHuman ;
4942: LD_ADDR_VAR 0 3
4946: PUSH
4947: CALL_OW 44
4951: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4952: LD_ADDR_EXP 15
4956: PUSH
4957: LD_EXP 15
4961: PUSH
4962: LD_VAR 0 3
4966: ADD
4967: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4968: LD_VAR 0 3
4972: PPUSH
4973: LD_INT 11
4975: PPUSH
4976: LD_INT 0
4978: PPUSH
4979: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4983: LD_VAR 0 3
4987: PPUSH
4988: LD_INT 42
4990: PPUSH
4991: LD_INT 35
4993: PPUSH
4994: CALL_OW 118
// end ;
4998: GO 4875
5000: POP
5001: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5002: LD_EXP 1
5006: PPUSH
5007: LD_INT 138
5009: PPUSH
5010: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5014: LD_EXP 2
5018: PPUSH
5019: LD_INT 58
5021: PPUSH
5022: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5026: LD_EXP 1
5030: PPUSH
5031: LD_INT 1
5033: PPUSH
5034: CALL_OW 336
// end ;
5038: LD_VAR 0 1
5042: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5043: LD_INT 0
5045: PPUSH
5046: PPUSH
5047: PPUSH
5048: PPUSH
// uc_side = 1 ;
5049: LD_ADDR_OWVAR 20
5053: PUSH
5054: LD_INT 1
5056: ST_TO_ADDR
// uc_nation = 1 ;
5057: LD_ADDR_OWVAR 21
5061: PUSH
5062: LD_INT 1
5064: ST_TO_ADDR
// for i := 1 to 3 do
5065: LD_ADDR_VAR 0 2
5069: PUSH
5070: DOUBLE
5071: LD_INT 1
5073: DEC
5074: ST_TO_ADDR
5075: LD_INT 3
5077: PUSH
5078: FOR_TO
5079: IFFALSE 5225
// begin vc_engine = 1 ;
5081: LD_ADDR_OWVAR 39
5085: PUSH
5086: LD_INT 1
5088: ST_TO_ADDR
// vc_control = 1 ;
5089: LD_ADDR_OWVAR 38
5093: PUSH
5094: LD_INT 1
5096: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
5097: LD_ADDR_OWVAR 40
5101: PUSH
5102: LD_INT 3
5104: PUSH
5105: LD_INT 4
5107: PUSH
5108: LD_INT 5
5110: PUSH
5111: EMPTY
5112: LIST
5113: LIST
5114: LIST
5115: PUSH
5116: LD_INT 1
5118: PPUSH
5119: LD_INT 3
5121: PPUSH
5122: CALL_OW 12
5126: ARRAY
5127: ST_TO_ADDR
// vc_chassis = 3 ;
5128: LD_ADDR_OWVAR 37
5132: PUSH
5133: LD_INT 3
5135: ST_TO_ADDR
// veh = CreateVehicle ;
5136: LD_ADDR_VAR 0 3
5140: PUSH
5141: CALL_OW 45
5145: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5146: LD_VAR 0 3
5150: PPUSH
5151: LD_INT 1
5153: PPUSH
5154: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
5158: LD_VAR 0 3
5162: PPUSH
5163: LD_INT 8
5165: PPUSH
5166: LD_INT 0
5168: PPUSH
5169: CALL_OW 49
// convoy = convoy ^ veh ;
5173: LD_ADDR_EXP 12
5177: PUSH
5178: LD_EXP 12
5182: PUSH
5183: LD_VAR 0 3
5187: ADD
5188: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5189: LD_INT 0
5191: PPUSH
5192: LD_INT 10
5194: PPUSH
5195: CALL_OW 383
// un = CreateHuman ;
5199: LD_ADDR_VAR 0 4
5203: PUSH
5204: CALL_OW 44
5208: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5209: LD_VAR 0 4
5213: PPUSH
5214: LD_VAR 0 3
5218: PPUSH
5219: CALL_OW 52
// end ;
5223: GO 5078
5225: POP
5226: POP
// for i := 1 to 3 do
5227: LD_ADDR_VAR 0 2
5231: PUSH
5232: DOUBLE
5233: LD_INT 1
5235: DEC
5236: ST_TO_ADDR
5237: LD_INT 3
5239: PUSH
5240: FOR_TO
5241: IFFALSE 5379
// begin vc_engine = 1 ;
5243: LD_ADDR_OWVAR 39
5247: PUSH
5248: LD_INT 1
5250: ST_TO_ADDR
// vc_control = 1 ;
5251: LD_ADDR_OWVAR 38
5255: PUSH
5256: LD_INT 1
5258: ST_TO_ADDR
// vc_weapon = 12 ;
5259: LD_ADDR_OWVAR 40
5263: PUSH
5264: LD_INT 12
5266: ST_TO_ADDR
// vc_chassis = 3 ;
5267: LD_ADDR_OWVAR 37
5271: PUSH
5272: LD_INT 3
5274: ST_TO_ADDR
// veh = CreateVehicle ;
5275: LD_ADDR_VAR 0 3
5279: PUSH
5280: CALL_OW 45
5284: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5285: LD_VAR 0 3
5289: PPUSH
5290: LD_INT 1
5292: PPUSH
5293: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5297: LD_VAR 0 3
5301: PPUSH
5302: LD_INT 9
5304: PPUSH
5305: LD_INT 0
5307: PPUSH
5308: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5312: LD_VAR 0 3
5316: PPUSH
5317: LD_INT 1
5319: PPUSH
5320: LD_INT 100
5322: PPUSH
5323: CALL_OW 291
// convoy = convoy ^ veh ;
5327: LD_ADDR_EXP 12
5331: PUSH
5332: LD_EXP 12
5336: PUSH
5337: LD_VAR 0 3
5341: ADD
5342: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5343: LD_INT 0
5345: PPUSH
5346: LD_INT 10
5348: PPUSH
5349: CALL_OW 383
// un = CreateHuman ;
5353: LD_ADDR_VAR 0 4
5357: PUSH
5358: CALL_OW 44
5362: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5363: LD_VAR 0 4
5367: PPUSH
5368: LD_VAR 0 3
5372: PPUSH
5373: CALL_OW 52
// end ;
5377: GO 5240
5379: POP
5380: POP
// ComMoveXY ( convoy [ 1 ] , 39 , 38 ) ;
5381: LD_EXP 12
5385: PUSH
5386: LD_INT 1
5388: ARRAY
5389: PPUSH
5390: LD_INT 39
5392: PPUSH
5393: LD_INT 38
5395: PPUSH
5396: CALL_OW 111
// AddComMoveXY ( convoy [ 1 ] , 41 , 50 ) ;
5400: LD_EXP 12
5404: PUSH
5405: LD_INT 1
5407: ARRAY
5408: PPUSH
5409: LD_INT 41
5411: PPUSH
5412: LD_INT 50
5414: PPUSH
5415: CALL_OW 171
// ComMoveXY ( convoy [ 2 ] , 39 , 38 ) ;
5419: LD_EXP 12
5423: PUSH
5424: LD_INT 2
5426: ARRAY
5427: PPUSH
5428: LD_INT 39
5430: PPUSH
5431: LD_INT 38
5433: PPUSH
5434: CALL_OW 111
// AddComMoveXY ( convoy [ 2 ] , 41 , 47 ) ;
5438: LD_EXP 12
5442: PUSH
5443: LD_INT 2
5445: ARRAY
5446: PPUSH
5447: LD_INT 41
5449: PPUSH
5450: LD_INT 47
5452: PPUSH
5453: CALL_OW 171
// ComMoveXY ( convoy [ 3 ] , 39 , 38 ) ;
5457: LD_EXP 12
5461: PUSH
5462: LD_INT 3
5464: ARRAY
5465: PPUSH
5466: LD_INT 39
5468: PPUSH
5469: LD_INT 38
5471: PPUSH
5472: CALL_OW 111
// AddComMoveXY ( convoy [ 3 ] , 41 , 44 ) ;
5476: LD_EXP 12
5480: PUSH
5481: LD_INT 3
5483: ARRAY
5484: PPUSH
5485: LD_INT 41
5487: PPUSH
5488: LD_INT 44
5490: PPUSH
5491: CALL_OW 171
// wait ( 0 0$4 ) ;
5495: LD_INT 140
5497: PPUSH
5498: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
5502: LD_EXP 12
5506: PUSH
5507: LD_INT 4
5509: ARRAY
5510: PPUSH
5511: LD_INT 47
5513: PPUSH
5514: LD_INT 49
5516: PPUSH
5517: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
5521: LD_EXP 12
5525: PUSH
5526: LD_INT 5
5528: ARRAY
5529: PPUSH
5530: LD_INT 47
5532: PPUSH
5533: LD_INT 49
5535: PPUSH
5536: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
5540: LD_EXP 12
5544: PUSH
5545: LD_INT 6
5547: ARRAY
5548: PPUSH
5549: LD_INT 47
5551: PPUSH
5552: LD_INT 49
5554: PPUSH
5555: CALL_OW 111
// end ; end_of_file
5559: LD_VAR 0 1
5563: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5564: LD_INT 0
5566: PPUSH
5567: PPUSH
// if exist_mode then
5568: LD_VAR 0 2
5572: IFFALSE 5591
// unit := CreateCharacter ( ident ) else
5574: LD_ADDR_VAR 0 4
5578: PUSH
5579: LD_VAR 0 1
5583: PPUSH
5584: CALL_OW 34
5588: ST_TO_ADDR
5589: GO 5606
// unit := NewCharacter ( ident ) ;
5591: LD_ADDR_VAR 0 4
5595: PUSH
5596: LD_VAR 0 1
5600: PPUSH
5601: CALL_OW 25
5605: ST_TO_ADDR
// result := unit ;
5606: LD_ADDR_VAR 0 3
5610: PUSH
5611: LD_VAR 0 4
5615: ST_TO_ADDR
// end ; end_of_file
5616: LD_VAR 0 3
5620: RET
