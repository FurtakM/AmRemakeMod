// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// PrepareHeroes ;
  35: CALL 692 0 0
// end ; end_of_file
  39: END
// every 1 do
  40: GO 42
  42: DISABLE
// begin InGameOn ;
  43: CALL_OW 8
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  47: LD_INT 60
  49: PPUSH
  50: LD_INT 2
  52: PPUSH
  53: LD_INT 1
  55: PPUSH
  56: LD_INT 1
  58: PPUSH
  59: LD_INT 4
  61: PPUSH
  62: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  66: LD_INT 6
  68: PPUSH
  69: LD_INT 4
  71: PPUSH
  72: LD_INT 1
  74: PPUSH
  75: LD_INT 1
  77: PPUSH
  78: LD_INT 6
  80: PPUSH
  81: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
  85: LD_INT 47
  87: PUSH
  88: LD_INT 4
  90: PUSH
  91: EMPTY
  92: LIST
  93: LIST
  94: PPUSH
  95: LD_INT 51
  97: PPUSH
  98: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 102: LD_INT 47
 104: PUSH
 105: LD_INT 4
 107: PUSH
 108: EMPTY
 109: LIST
 110: LIST
 111: PPUSH
 112: LD_INT 52
 114: PPUSH
 115: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 119: LD_INT 47
 121: PUSH
 122: LD_INT 4
 124: PUSH
 125: EMPTY
 126: LIST
 127: LIST
 128: PPUSH
 129: LD_INT 53
 131: PPUSH
 132: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 136: LD_INT 138
 138: PPUSH
 139: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 143: LD_INT 138
 145: PPUSH
 146: LD_INT 69
 148: PPUSH
 149: LD_INT 36
 151: PPUSH
 152: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 156: LD_INT 138
 158: PPUSH
 159: LD_INT 65
 161: PPUSH
 162: LD_INT 43
 164: PPUSH
 165: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 169: LD_INT 138
 171: PPUSH
 172: LD_INT 63
 174: PPUSH
 175: LD_INT 48
 177: PPUSH
 178: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 182: LD_INT 138
 184: PPUSH
 185: LD_INT 60
 187: PPUSH
 188: LD_INT 50
 190: PPUSH
 191: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 195: LD_INT 138
 197: PPUSH
 198: LD_INT 54
 200: PPUSH
 201: LD_INT 47
 203: PPUSH
 204: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 208: LD_INT 138
 210: PPUSH
 211: LD_INT 51
 213: PPUSH
 214: LD_INT 40
 216: PPUSH
 217: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 221: LD_INT 35
 223: PPUSH
 224: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 228: LD_INT 138
 230: PPUSH
 231: CALL_OW 87
// until IsInArea ( car , stop ) ;
 235: LD_INT 138
 237: PPUSH
 238: LD_INT 7
 240: PPUSH
 241: CALL_OW 308
 245: IFFALSE 221
// ComExitVehicle ( JMM ) ;
 247: LD_EXP 1
 251: PPUSH
 252: CALL_OW 121
// wait ( 0 0$01 ) ;
 256: LD_INT 35
 258: PPUSH
 259: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 263: LD_EXP 1
 267: PPUSH
 268: LD_INT 42
 270: PPUSH
 271: LD_INT 37
 273: PPUSH
 274: CALL_OW 111
// wait ( 0 0$5 ) ;
 278: LD_INT 175
 280: PPUSH
 281: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 285: LD_EXP 2
 289: PPUSH
 290: CALL_OW 122
// wait ( 0 0$01 ) ;
 294: LD_INT 35
 296: PPUSH
 297: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 301: LD_EXP 2
 305: PPUSH
 306: LD_EXP 1
 310: PPUSH
 311: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_EXP 2
 324: PPUSH
 325: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 329: LD_EXP 1
 333: PPUSH
 334: LD_STRING D1-JMM-1
 336: PPUSH
 337: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 341: LD_EXP 2
 345: PPUSH
 346: LD_STRING D1-Pow-1
 348: PPUSH
 349: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 353: LD_EXP 1
 357: PPUSH
 358: LD_STRING D1-JMM-2
 360: PPUSH
 361: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 365: LD_EXP 2
 369: PPUSH
 370: LD_STRING D1-Pow-2
 372: PPUSH
 373: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 377: LD_EXP 1
 381: PPUSH
 382: LD_STRING D1-JMM-3
 384: PPUSH
 385: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 389: LD_EXP 2
 393: PPUSH
 394: LD_STRING D1-Pow-3
 396: PPUSH
 397: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 401: LD_EXP 1
 405: PPUSH
 406: LD_STRING D1-JMM-4
 408: PPUSH
 409: CALL_OW 88
// PrepareConvoy ;
 413: CALL 4159 0 0
// Say ( Powell , D1-Pow-4 ) ;
 417: LD_EXP 2
 421: PPUSH
 422: LD_STRING D1-Pow-4
 424: PPUSH
 425: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 429: LD_EXP 2
 433: PPUSH
 434: LD_STRING D1-Pow-4a
 436: PPUSH
 437: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 441: LD_EXP 2
 445: PPUSH
 446: LD_STRING D1-Pow-4b
 448: PPUSH
 449: CALL_OW 88
// ComMoveXY ( convoy , 61 , 50 ) ;
 453: LD_EXP 12
 457: PPUSH
 458: LD_INT 61
 460: PPUSH
 461: LD_INT 50
 463: PPUSH
 464: CALL_OW 111
// AddComMoveXY ( convoy , 77 , 69 ) ;
 468: LD_EXP 12
 472: PPUSH
 473: LD_INT 77
 475: PPUSH
 476: LD_INT 69
 478: PPUSH
 479: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 483: LD_EXP 1
 487: PPUSH
 488: LD_STRING D1-JMM-5
 490: PPUSH
 491: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 495: LD_EXP 2
 499: PPUSH
 500: LD_STRING D1-Pow-5
 502: PPUSH
 503: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 507: LD_EXP 1
 511: PPUSH
 512: LD_STRING D1-JMM-6
 514: PPUSH
 515: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 519: LD_EXP 2
 523: PPUSH
 524: LD_STRING D1-Pow-6
 526: PPUSH
 527: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 531: LD_EXP 1
 535: PPUSH
 536: LD_STRING D1-JMM-7
 538: PPUSH
 539: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 543: LD_EXP 2
 547: PPUSH
 548: LD_STRING D1-Pow-7
 550: PPUSH
 551: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 555: LD_EXP 1
 559: PPUSH
 560: LD_STRING D1-JMM-8
 562: PPUSH
 563: CALL_OW 88
// SaveCharacters ( JMM , 10_JMM ) ;
 567: LD_EXP 1
 571: PPUSH
 572: LD_STRING 10_JMM
 574: PPUSH
 575: CALL_OW 38
// SaveCharacters ( FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] , OthersIn10 ) ;
 579: LD_INT 11
 581: PPUSH
 582: LD_INT 22
 584: PUSH
 585: LD_INT 1
 587: PUSH
 588: EMPTY
 589: LIST
 590: LIST
 591: PUSH
 592: LD_INT 21
 594: PUSH
 595: LD_INT 1
 597: PUSH
 598: EMPTY
 599: LIST
 600: LIST
 601: PUSH
 602: EMPTY
 603: LIST
 604: LIST
 605: PPUSH
 606: CALL_OW 70
 610: PUSH
 611: LD_EXP 1
 615: PUSH
 616: LD_EXP 2
 620: PUSH
 621: LD_EXP 3
 625: PUSH
 626: LD_EXP 4
 630: PUSH
 631: LD_EXP 5
 635: PUSH
 636: LD_EXP 6
 640: PUSH
 641: LD_EXP 7
 645: PUSH
 646: LD_EXP 8
 650: PUSH
 651: LD_EXP 9
 655: PUSH
 656: LD_EXP 10
 660: PUSH
 661: EMPTY
 662: LIST
 663: LIST
 664: LIST
 665: LIST
 666: LIST
 667: LIST
 668: LIST
 669: LIST
 670: LIST
 671: LIST
 672: DIFF
 673: PPUSH
 674: LD_STRING OthersIn10
 676: PPUSH
 677: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 681: LD_INT 10
 683: PPUSH
 684: LD_STRING %_cont
 686: PPUSH
 687: CALL_OW 340
// end ; end_of_file
 691: END
// export function PrepareHeroes ; var i ; begin
 692: LD_INT 0
 694: PPUSH
 695: PPUSH
// uc_side = 1 ;
 696: LD_ADDR_OWVAR 20
 700: PUSH
 701: LD_INT 1
 703: ST_TO_ADDR
// uc_nation = 1 ;
 704: LD_ADDR_OWVAR 21
 708: PUSH
 709: LD_INT 1
 711: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 712: LD_ADDR_EXP 1
 716: PUSH
 717: LD_STRING 09_JMM
 719: PPUSH
 720: LD_INT 1
 722: PPUSH
 723: CALL 4680 0 2
 727: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 728: LD_ADDR_EXP 2
 732: PUSH
 733: LD_STRING Powell
 735: PPUSH
 736: LD_INT 0
 738: PPUSH
 739: CALL 4680 0 2
 743: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 744: LD_ADDR_EXP 5
 748: PUSH
 749: LD_STRING 09_Bobby
 751: PPUSH
 752: LD_INT 1
 754: PPUSH
 755: CALL 4680 0 2
 759: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 760: LD_EXP 5
 764: PPUSH
 765: LD_INT 10
 767: PPUSH
 768: LD_INT 0
 770: PPUSH
 771: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
 775: LD_EXP 5
 779: PPUSH
 780: LD_INT 42
 782: PPUSH
 783: LD_INT 35
 785: PPUSH
 786: CALL_OW 118
// if IsPlaced ( Bobby ) then
 790: LD_EXP 5
 794: PPUSH
 795: CALL_OW 305
 799: IFFALSE 829
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
 801: LD_ADDR_EXP 14
 805: PUSH
 806: LD_EXP 14
 810: PUSH
 811: LD_EXP 5
 815: ADD
 816: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
 817: LD_EXP 5
 821: PPUSH
 822: LD_STRING 10_Bobby
 824: PPUSH
 825: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
 829: LD_EXP 5
 833: PPUSH
 834: CALL_OW 305
 838: NOT
 839: PUSH
 840: LD_EXP 3
 844: PPUSH
 845: CALL_OW 305
 849: NOT
 850: AND
 851: IFFALSE 938
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
 853: LD_ADDR_EXP 3
 857: PUSH
 858: LD_STRING 08_Brown
 860: PPUSH
 861: LD_INT 1
 863: PPUSH
 864: CALL 4680 0 2
 868: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
 869: LD_EXP 3
 873: PPUSH
 874: LD_INT 10
 876: PPUSH
 877: LD_INT 0
 879: PPUSH
 880: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
 884: LD_EXP 3
 888: PPUSH
 889: LD_INT 42
 891: PPUSH
 892: LD_INT 35
 894: PPUSH
 895: CALL_OW 118
// if IsPlaced ( Brown ) then
 899: LD_EXP 3
 903: PPUSH
 904: CALL_OW 305
 908: IFFALSE 938
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
 910: LD_ADDR_EXP 14
 914: PUSH
 915: LD_EXP 14
 919: PUSH
 920: LD_EXP 3
 924: ADD
 925: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
 926: LD_EXP 3
 930: PPUSH
 931: LD_STRING 10_Brown
 933: PPUSH
 934: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
 938: LD_EXP 5
 942: PPUSH
 943: CALL_OW 305
 947: NOT
 948: PUSH
 949: LD_EXP 3
 953: PPUSH
 954: CALL_OW 305
 958: NOT
 959: AND
 960: PUSH
 961: LD_EXP 4
 965: PPUSH
 966: CALL_OW 305
 970: NOT
 971: AND
 972: IFFALSE 1059
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
 974: LD_ADDR_EXP 4
 978: PUSH
 979: LD_STRING 08_Donaldson
 981: PPUSH
 982: LD_INT 1
 984: PPUSH
 985: CALL 4680 0 2
 989: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
 990: LD_EXP 4
 994: PPUSH
 995: LD_INT 10
 997: PPUSH
 998: LD_INT 0
1000: PPUSH
1001: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1005: LD_EXP 4
1009: PPUSH
1010: LD_INT 42
1012: PPUSH
1013: LD_INT 35
1015: PPUSH
1016: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1020: LD_EXP 4
1024: PPUSH
1025: CALL_OW 305
1029: IFFALSE 1059
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1031: LD_ADDR_EXP 14
1035: PUSH
1036: LD_EXP 14
1040: PUSH
1041: LD_EXP 4
1045: ADD
1046: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1047: LD_EXP 4
1051: PPUSH
1052: LD_STRING 10_Donaldson
1054: PPUSH
1055: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1059: LD_EXP 5
1063: PPUSH
1064: CALL_OW 305
1068: NOT
1069: PUSH
1070: LD_EXP 3
1074: PPUSH
1075: CALL_OW 305
1079: NOT
1080: AND
1081: PUSH
1082: LD_EXP 4
1086: PPUSH
1087: CALL_OW 305
1091: NOT
1092: AND
1093: PUSH
1094: LD_EXP 8
1098: PPUSH
1099: CALL_OW 305
1103: NOT
1104: AND
1105: IFFALSE 1192
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1107: LD_ADDR_EXP 8
1111: PUSH
1112: LD_STRING 08_Frank
1114: PPUSH
1115: LD_INT 1
1117: PPUSH
1118: CALL 4680 0 2
1122: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1123: LD_EXP 8
1127: PPUSH
1128: LD_INT 10
1130: PPUSH
1131: LD_INT 0
1133: PPUSH
1134: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1138: LD_EXP 8
1142: PPUSH
1143: LD_INT 42
1145: PPUSH
1146: LD_INT 35
1148: PPUSH
1149: CALL_OW 118
// if IsPlaced ( Frank ) then
1153: LD_EXP 8
1157: PPUSH
1158: CALL_OW 305
1162: IFFALSE 1192
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1164: LD_ADDR_EXP 14
1168: PUSH
1169: LD_EXP 14
1173: PUSH
1174: LD_EXP 8
1178: ADD
1179: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1180: LD_EXP 8
1184: PPUSH
1185: LD_STRING 10_Frank
1187: PPUSH
1188: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1192: LD_EXP 5
1196: PPUSH
1197: CALL_OW 305
1201: NOT
1202: PUSH
1203: LD_EXP 3
1207: PPUSH
1208: CALL_OW 305
1212: NOT
1213: AND
1214: PUSH
1215: LD_EXP 4
1219: PPUSH
1220: CALL_OW 305
1224: NOT
1225: AND
1226: PUSH
1227: LD_EXP 8
1231: PPUSH
1232: CALL_OW 305
1236: NOT
1237: AND
1238: PUSH
1239: LD_EXP 9
1243: PPUSH
1244: CALL_OW 305
1248: NOT
1249: AND
1250: IFFALSE 1337
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1252: LD_ADDR_EXP 9
1256: PUSH
1257: LD_STRING 09_Houten
1259: PPUSH
1260: LD_INT 1
1262: PPUSH
1263: CALL 4680 0 2
1267: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1268: LD_EXP 9
1272: PPUSH
1273: LD_INT 10
1275: PPUSH
1276: LD_INT 0
1278: PPUSH
1279: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1283: LD_EXP 9
1287: PPUSH
1288: LD_INT 42
1290: PPUSH
1291: LD_INT 35
1293: PPUSH
1294: CALL_OW 118
// if IsPlaced ( Houten ) then
1298: LD_EXP 9
1302: PPUSH
1303: CALL_OW 305
1307: IFFALSE 1337
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1309: LD_ADDR_EXP 14
1313: PUSH
1314: LD_EXP 14
1318: PUSH
1319: LD_EXP 9
1323: ADD
1324: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1325: LD_EXP 9
1329: PPUSH
1330: LD_STRING 10_Houten
1332: PPUSH
1333: CALL_OW 38
// end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1337: LD_ADDR_EXP 6
1341: PUSH
1342: LD_STRING 09_Cyrus
1344: PPUSH
1345: LD_INT 1
1347: PPUSH
1348: CALL 4680 0 2
1352: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1353: LD_EXP 6
1357: PPUSH
1358: LD_INT 10
1360: PPUSH
1361: LD_INT 0
1363: PPUSH
1364: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1368: LD_EXP 6
1372: PPUSH
1373: LD_INT 42
1375: PPUSH
1376: LD_INT 35
1378: PPUSH
1379: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1383: LD_EXP 6
1387: PPUSH
1388: CALL_OW 305
1392: IFFALSE 1422
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1394: LD_ADDR_EXP 14
1398: PUSH
1399: LD_EXP 14
1403: PUSH
1404: LD_EXP 6
1408: ADD
1409: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1410: LD_EXP 6
1414: PPUSH
1415: LD_STRING 10_Cyrus
1417: PPUSH
1418: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1422: LD_EXP 6
1426: PPUSH
1427: CALL_OW 305
1431: NOT
1432: PUSH
1433: LD_EXP 3
1437: PPUSH
1438: CALL_OW 305
1442: NOT
1443: AND
1444: IFFALSE 1531
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1446: LD_ADDR_EXP 3
1450: PUSH
1451: LD_STRING 08_Brown
1453: PPUSH
1454: LD_INT 1
1456: PPUSH
1457: CALL 4680 0 2
1461: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1462: LD_EXP 3
1466: PPUSH
1467: LD_INT 10
1469: PPUSH
1470: LD_INT 0
1472: PPUSH
1473: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1477: LD_EXP 3
1481: PPUSH
1482: LD_INT 42
1484: PPUSH
1485: LD_INT 35
1487: PPUSH
1488: CALL_OW 118
// if IsPlaced ( Brown ) then
1492: LD_EXP 3
1496: PPUSH
1497: CALL_OW 305
1501: IFFALSE 1531
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1503: LD_ADDR_EXP 14
1507: PUSH
1508: LD_EXP 14
1512: PUSH
1513: LD_EXP 3
1517: ADD
1518: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1519: LD_EXP 3
1523: PPUSH
1524: LD_STRING 10_Brown
1526: PPUSH
1527: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1531: LD_EXP 6
1535: PPUSH
1536: CALL_OW 305
1540: NOT
1541: PUSH
1542: LD_EXP 3
1546: PPUSH
1547: CALL_OW 305
1551: NOT
1552: AND
1553: PUSH
1554: LD_EXP 4
1558: PPUSH
1559: CALL_OW 305
1563: NOT
1564: AND
1565: IFFALSE 1652
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1567: LD_ADDR_EXP 4
1571: PUSH
1572: LD_STRING 08_Donaldson
1574: PPUSH
1575: LD_INT 1
1577: PPUSH
1578: CALL 4680 0 2
1582: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1583: LD_EXP 4
1587: PPUSH
1588: LD_INT 10
1590: PPUSH
1591: LD_INT 0
1593: PPUSH
1594: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1598: LD_EXP 4
1602: PPUSH
1603: LD_INT 42
1605: PPUSH
1606: LD_INT 35
1608: PPUSH
1609: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1613: LD_EXP 4
1617: PPUSH
1618: CALL_OW 305
1622: IFFALSE 1652
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1624: LD_ADDR_EXP 14
1628: PUSH
1629: LD_EXP 14
1633: PUSH
1634: LD_EXP 4
1638: ADD
1639: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1640: LD_EXP 4
1644: PPUSH
1645: LD_STRING 10_Donaldson
1647: PPUSH
1648: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1652: LD_EXP 6
1656: PPUSH
1657: CALL_OW 305
1661: NOT
1662: PUSH
1663: LD_EXP 3
1667: PPUSH
1668: CALL_OW 305
1672: NOT
1673: AND
1674: PUSH
1675: LD_EXP 4
1679: PPUSH
1680: CALL_OW 305
1684: NOT
1685: AND
1686: PUSH
1687: LD_EXP 8
1691: PPUSH
1692: CALL_OW 305
1696: NOT
1697: AND
1698: IFFALSE 1785
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1700: LD_ADDR_EXP 8
1704: PUSH
1705: LD_STRING 08_Frank
1707: PPUSH
1708: LD_INT 1
1710: PPUSH
1711: CALL 4680 0 2
1715: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1716: LD_EXP 8
1720: PPUSH
1721: LD_INT 10
1723: PPUSH
1724: LD_INT 0
1726: PPUSH
1727: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1731: LD_EXP 8
1735: PPUSH
1736: LD_INT 42
1738: PPUSH
1739: LD_INT 35
1741: PPUSH
1742: CALL_OW 118
// if IsPlaced ( Frank ) then
1746: LD_EXP 8
1750: PPUSH
1751: CALL_OW 305
1755: IFFALSE 1785
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1757: LD_ADDR_EXP 14
1761: PUSH
1762: LD_EXP 14
1766: PUSH
1767: LD_EXP 8
1771: ADD
1772: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1773: LD_EXP 8
1777: PPUSH
1778: LD_STRING 10_Frank
1780: PPUSH
1781: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1785: LD_EXP 6
1789: PPUSH
1790: CALL_OW 305
1794: NOT
1795: PUSH
1796: LD_EXP 3
1800: PPUSH
1801: CALL_OW 305
1805: NOT
1806: AND
1807: PUSH
1808: LD_EXP 4
1812: PPUSH
1813: CALL_OW 305
1817: NOT
1818: AND
1819: PUSH
1820: LD_EXP 8
1824: PPUSH
1825: CALL_OW 305
1829: NOT
1830: AND
1831: PUSH
1832: LD_EXP 9
1836: PPUSH
1837: CALL_OW 305
1841: NOT
1842: AND
1843: IFFALSE 1930
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1845: LD_ADDR_EXP 9
1849: PUSH
1850: LD_STRING 09_Houten
1852: PPUSH
1853: LD_INT 1
1855: PPUSH
1856: CALL 4680 0 2
1860: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1861: LD_EXP 9
1865: PPUSH
1866: LD_INT 10
1868: PPUSH
1869: LD_INT 0
1871: PPUSH
1872: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1876: LD_EXP 9
1880: PPUSH
1881: LD_INT 42
1883: PPUSH
1884: LD_INT 35
1886: PPUSH
1887: CALL_OW 118
// if IsPlaced ( Houten ) then
1891: LD_EXP 9
1895: PPUSH
1896: CALL_OW 305
1900: IFFALSE 1930
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1902: LD_ADDR_EXP 14
1906: PUSH
1907: LD_EXP 14
1911: PUSH
1912: LD_EXP 9
1916: ADD
1917: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1918: LD_EXP 9
1922: PPUSH
1923: LD_STRING 10_Houten
1925: PPUSH
1926: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
1930: LD_ADDR_EXP 7
1934: PUSH
1935: LD_STRING 08_Lisa
1937: PPUSH
1938: LD_INT 1
1940: PPUSH
1941: CALL 4680 0 2
1945: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
1946: LD_EXP 7
1950: PPUSH
1951: LD_INT 10
1953: PPUSH
1954: LD_INT 0
1956: PPUSH
1957: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
1961: LD_EXP 7
1965: PPUSH
1966: LD_INT 42
1968: PPUSH
1969: LD_INT 35
1971: PPUSH
1972: CALL_OW 118
// if IsPlaced ( Lisa ) then
1976: LD_EXP 7
1980: PPUSH
1981: CALL_OW 305
1985: IFFALSE 2015
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
1987: LD_ADDR_EXP 14
1991: PUSH
1992: LD_EXP 14
1996: PUSH
1997: LD_EXP 7
2001: ADD
2002: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2003: LD_EXP 7
2007: PPUSH
2008: LD_STRING 10_Lisa
2010: PPUSH
2011: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2015: LD_EXP 7
2019: PPUSH
2020: CALL_OW 305
2024: NOT
2025: PUSH
2026: LD_EXP 3
2030: PPUSH
2031: CALL_OW 305
2035: NOT
2036: AND
2037: IFFALSE 2124
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2039: LD_ADDR_EXP 3
2043: PUSH
2044: LD_STRING 08_Brown
2046: PPUSH
2047: LD_INT 1
2049: PPUSH
2050: CALL 4680 0 2
2054: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2055: LD_EXP 3
2059: PPUSH
2060: LD_INT 10
2062: PPUSH
2063: LD_INT 0
2065: PPUSH
2066: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2070: LD_EXP 3
2074: PPUSH
2075: LD_INT 42
2077: PPUSH
2078: LD_INT 35
2080: PPUSH
2081: CALL_OW 118
// if IsPlaced ( Brown ) then
2085: LD_EXP 3
2089: PPUSH
2090: CALL_OW 305
2094: IFFALSE 2124
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2096: LD_ADDR_EXP 14
2100: PUSH
2101: LD_EXP 14
2105: PUSH
2106: LD_EXP 3
2110: ADD
2111: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2112: LD_EXP 3
2116: PPUSH
2117: LD_STRING 10_Brown
2119: PPUSH
2120: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2124: LD_EXP 7
2128: PPUSH
2129: CALL_OW 305
2133: NOT
2134: PUSH
2135: LD_EXP 3
2139: PPUSH
2140: CALL_OW 305
2144: NOT
2145: AND
2146: PUSH
2147: LD_EXP 4
2151: PPUSH
2152: CALL_OW 305
2156: NOT
2157: AND
2158: IFFALSE 2245
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2160: LD_ADDR_EXP 4
2164: PUSH
2165: LD_STRING 08_Donaldson
2167: PPUSH
2168: LD_INT 1
2170: PPUSH
2171: CALL 4680 0 2
2175: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2176: LD_EXP 4
2180: PPUSH
2181: LD_INT 10
2183: PPUSH
2184: LD_INT 0
2186: PPUSH
2187: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2191: LD_EXP 4
2195: PPUSH
2196: LD_INT 42
2198: PPUSH
2199: LD_INT 35
2201: PPUSH
2202: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2206: LD_EXP 4
2210: PPUSH
2211: CALL_OW 305
2215: IFFALSE 2245
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2217: LD_ADDR_EXP 14
2221: PUSH
2222: LD_EXP 14
2226: PUSH
2227: LD_EXP 4
2231: ADD
2232: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2233: LD_EXP 4
2237: PPUSH
2238: LD_STRING 10_Donaldson
2240: PPUSH
2241: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2245: LD_EXP 7
2249: PPUSH
2250: CALL_OW 305
2254: NOT
2255: PUSH
2256: LD_EXP 3
2260: PPUSH
2261: CALL_OW 305
2265: NOT
2266: AND
2267: PUSH
2268: LD_EXP 4
2272: PPUSH
2273: CALL_OW 305
2277: NOT
2278: AND
2279: PUSH
2280: LD_EXP 8
2284: PPUSH
2285: CALL_OW 305
2289: NOT
2290: AND
2291: IFFALSE 2378
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2293: LD_ADDR_EXP 8
2297: PUSH
2298: LD_STRING 08_Frank
2300: PPUSH
2301: LD_INT 1
2303: PPUSH
2304: CALL 4680 0 2
2308: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2309: LD_EXP 8
2313: PPUSH
2314: LD_INT 10
2316: PPUSH
2317: LD_INT 0
2319: PPUSH
2320: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2324: LD_EXP 8
2328: PPUSH
2329: LD_INT 42
2331: PPUSH
2332: LD_INT 35
2334: PPUSH
2335: CALL_OW 118
// if IsPlaced ( Frank ) then
2339: LD_EXP 8
2343: PPUSH
2344: CALL_OW 305
2348: IFFALSE 2378
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2350: LD_ADDR_EXP 14
2354: PUSH
2355: LD_EXP 14
2359: PUSH
2360: LD_EXP 8
2364: ADD
2365: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2366: LD_EXP 8
2370: PPUSH
2371: LD_STRING 10_Frank
2373: PPUSH
2374: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2378: LD_EXP 7
2382: PPUSH
2383: CALL_OW 305
2387: NOT
2388: PUSH
2389: LD_EXP 3
2393: PPUSH
2394: CALL_OW 305
2398: NOT
2399: AND
2400: PUSH
2401: LD_EXP 4
2405: PPUSH
2406: CALL_OW 305
2410: NOT
2411: AND
2412: PUSH
2413: LD_EXP 8
2417: PPUSH
2418: CALL_OW 305
2422: NOT
2423: AND
2424: PUSH
2425: LD_EXP 9
2429: PPUSH
2430: CALL_OW 305
2434: NOT
2435: AND
2436: IFFALSE 2523
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2438: LD_ADDR_EXP 9
2442: PUSH
2443: LD_STRING 09_Houten
2445: PPUSH
2446: LD_INT 1
2448: PPUSH
2449: CALL 4680 0 2
2453: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2454: LD_EXP 9
2458: PPUSH
2459: LD_INT 10
2461: PPUSH
2462: LD_INT 0
2464: PPUSH
2465: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2469: LD_EXP 9
2473: PPUSH
2474: LD_INT 42
2476: PPUSH
2477: LD_INT 35
2479: PPUSH
2480: CALL_OW 118
// if IsPlaced ( Houten ) then
2484: LD_EXP 9
2488: PPUSH
2489: CALL_OW 305
2493: IFFALSE 2523
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2495: LD_ADDR_EXP 14
2499: PUSH
2500: LD_EXP 14
2504: PUSH
2505: LD_EXP 9
2509: ADD
2510: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2511: LD_EXP 9
2515: PPUSH
2516: LD_STRING 10_Houten
2518: PPUSH
2519: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2523: LD_ADDR_EXP 10
2527: PUSH
2528: LD_STRING 09_Gary
2530: PPUSH
2531: LD_INT 1
2533: PPUSH
2534: CALL 4680 0 2
2538: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2539: LD_EXP 10
2543: PPUSH
2544: LD_INT 10
2546: PPUSH
2547: LD_INT 0
2549: PPUSH
2550: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2554: LD_EXP 10
2558: PPUSH
2559: LD_INT 42
2561: PPUSH
2562: LD_INT 35
2564: PPUSH
2565: CALL_OW 118
// if IsPlaced ( Gary ) then
2569: LD_EXP 10
2573: PPUSH
2574: CALL_OW 305
2578: IFFALSE 2608
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2580: LD_ADDR_EXP 14
2584: PUSH
2585: LD_EXP 14
2589: PUSH
2590: LD_EXP 10
2594: ADD
2595: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2596: LD_EXP 10
2600: PPUSH
2601: LD_STRING 10_Gary
2603: PPUSH
2604: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2608: LD_EXP 10
2612: PPUSH
2613: CALL_OW 305
2617: NOT
2618: PUSH
2619: LD_EXP 3
2623: PPUSH
2624: CALL_OW 305
2628: NOT
2629: AND
2630: IFFALSE 2717
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2632: LD_ADDR_EXP 3
2636: PUSH
2637: LD_STRING 08_Brown
2639: PPUSH
2640: LD_INT 1
2642: PPUSH
2643: CALL 4680 0 2
2647: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2648: LD_EXP 3
2652: PPUSH
2653: LD_INT 10
2655: PPUSH
2656: LD_INT 0
2658: PPUSH
2659: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2663: LD_EXP 3
2667: PPUSH
2668: LD_INT 42
2670: PPUSH
2671: LD_INT 35
2673: PPUSH
2674: CALL_OW 118
// if IsPlaced ( Brown ) then
2678: LD_EXP 3
2682: PPUSH
2683: CALL_OW 305
2687: IFFALSE 2717
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2689: LD_ADDR_EXP 14
2693: PUSH
2694: LD_EXP 14
2698: PUSH
2699: LD_EXP 3
2703: ADD
2704: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2705: LD_EXP 3
2709: PPUSH
2710: LD_STRING 10_Brown
2712: PPUSH
2713: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2717: LD_EXP 10
2721: PPUSH
2722: CALL_OW 305
2726: NOT
2727: PUSH
2728: LD_EXP 3
2732: PPUSH
2733: CALL_OW 305
2737: NOT
2738: AND
2739: PUSH
2740: LD_EXP 4
2744: PPUSH
2745: CALL_OW 305
2749: NOT
2750: AND
2751: IFFALSE 2838
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2753: LD_ADDR_EXP 4
2757: PUSH
2758: LD_STRING 08_Donaldson
2760: PPUSH
2761: LD_INT 1
2763: PPUSH
2764: CALL 4680 0 2
2768: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2769: LD_EXP 4
2773: PPUSH
2774: LD_INT 10
2776: PPUSH
2777: LD_INT 0
2779: PPUSH
2780: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2784: LD_EXP 4
2788: PPUSH
2789: LD_INT 42
2791: PPUSH
2792: LD_INT 35
2794: PPUSH
2795: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2799: LD_EXP 4
2803: PPUSH
2804: CALL_OW 305
2808: IFFALSE 2838
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2810: LD_ADDR_EXP 14
2814: PUSH
2815: LD_EXP 14
2819: PUSH
2820: LD_EXP 4
2824: ADD
2825: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2826: LD_EXP 4
2830: PPUSH
2831: LD_STRING 10_Donaldson
2833: PPUSH
2834: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2838: LD_EXP 10
2842: PPUSH
2843: CALL_OW 305
2847: NOT
2848: PUSH
2849: LD_EXP 3
2853: PPUSH
2854: CALL_OW 305
2858: NOT
2859: AND
2860: PUSH
2861: LD_EXP 4
2865: PPUSH
2866: CALL_OW 305
2870: NOT
2871: AND
2872: PUSH
2873: LD_EXP 8
2877: PPUSH
2878: CALL_OW 305
2882: NOT
2883: AND
2884: IFFALSE 2971
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2886: LD_ADDR_EXP 8
2890: PUSH
2891: LD_STRING 08_Frank
2893: PPUSH
2894: LD_INT 1
2896: PPUSH
2897: CALL 4680 0 2
2901: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2902: LD_EXP 8
2906: PPUSH
2907: LD_INT 10
2909: PPUSH
2910: LD_INT 0
2912: PPUSH
2913: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2917: LD_EXP 8
2921: PPUSH
2922: LD_INT 42
2924: PPUSH
2925: LD_INT 35
2927: PPUSH
2928: CALL_OW 118
// if IsPlaced ( Frank ) then
2932: LD_EXP 8
2936: PPUSH
2937: CALL_OW 305
2941: IFFALSE 2971
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2943: LD_ADDR_EXP 14
2947: PUSH
2948: LD_EXP 14
2952: PUSH
2953: LD_EXP 8
2957: ADD
2958: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2959: LD_EXP 8
2963: PPUSH
2964: LD_STRING 10_Frank
2966: PPUSH
2967: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2971: LD_EXP 10
2975: PPUSH
2976: CALL_OW 305
2980: NOT
2981: PUSH
2982: LD_EXP 3
2986: PPUSH
2987: CALL_OW 305
2991: NOT
2992: AND
2993: PUSH
2994: LD_EXP 4
2998: PPUSH
2999: CALL_OW 305
3003: NOT
3004: AND
3005: PUSH
3006: LD_EXP 8
3010: PPUSH
3011: CALL_OW 305
3015: NOT
3016: AND
3017: PUSH
3018: LD_EXP 9
3022: PPUSH
3023: CALL_OW 305
3027: NOT
3028: AND
3029: IFFALSE 3116
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3031: LD_ADDR_EXP 9
3035: PUSH
3036: LD_STRING 09_Houten
3038: PPUSH
3039: LD_INT 1
3041: PPUSH
3042: CALL 4680 0 2
3046: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3047: LD_EXP 9
3051: PPUSH
3052: LD_INT 10
3054: PPUSH
3055: LD_INT 0
3057: PPUSH
3058: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3062: LD_EXP 9
3066: PPUSH
3067: LD_INT 42
3069: PPUSH
3070: LD_INT 35
3072: PPUSH
3073: CALL_OW 118
// if IsPlaced ( Houten ) then
3077: LD_EXP 9
3081: PPUSH
3082: CALL_OW 305
3086: IFFALSE 3116
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3088: LD_ADDR_EXP 14
3092: PUSH
3093: LD_EXP 14
3097: PUSH
3098: LD_EXP 9
3102: ADD
3103: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3104: LD_EXP 9
3108: PPUSH
3109: LD_STRING 10_Houten
3111: PPUSH
3112: CALL_OW 38
// end ; end ; siberite = LoadVariable ( 09_SibRes , 0 ) ;
3116: LD_ADDR_EXP 16
3120: PUSH
3121: LD_STRING 09_SibRes
3123: PPUSH
3124: LD_INT 0
3126: PPUSH
3127: CALL_OW 30
3131: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3132: LD_ADDR_EXP 11
3136: PUSH
3137: LD_STRING 08_other_survivors
3139: PPUSH
3140: CALL_OW 31
3144: ST_TO_ADDR
// if siberite >= 200 then
3145: LD_EXP 16
3149: PUSH
3150: LD_INT 200
3152: GREATEREQUAL
3153: IFFALSE 4014
// begin if not IsPlaced ( Brown ) then
3155: LD_EXP 3
3159: PPUSH
3160: CALL_OW 305
3164: NOT
3165: IFFALSE 3252
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3167: LD_ADDR_EXP 3
3171: PUSH
3172: LD_STRING 08_Brown
3174: PPUSH
3175: LD_INT 1
3177: PPUSH
3178: CALL 4680 0 2
3182: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3183: LD_EXP 3
3187: PPUSH
3188: LD_INT 11
3190: PPUSH
3191: LD_INT 0
3193: PPUSH
3194: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3198: LD_EXP 3
3202: PPUSH
3203: LD_INT 42
3205: PPUSH
3206: LD_INT 35
3208: PPUSH
3209: CALL_OW 118
// if IsPlaced ( Brown ) then
3213: LD_EXP 3
3217: PPUSH
3218: CALL_OW 305
3222: IFFALSE 3252
// begin addHeroesTab = addHeroesTab ^ Brown ;
3224: LD_ADDR_EXP 15
3228: PUSH
3229: LD_EXP 15
3233: PUSH
3234: LD_EXP 3
3238: ADD
3239: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3240: LD_EXP 3
3244: PPUSH
3245: LD_STRING 10_Brown
3247: PPUSH
3248: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3252: LD_EXP 3
3256: PPUSH
3257: CALL_OW 305
3261: NOT
3262: PUSH
3263: LD_EXP 4
3267: PPUSH
3268: CALL_OW 305
3272: NOT
3273: AND
3274: IFFALSE 3361
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3276: LD_ADDR_EXP 4
3280: PUSH
3281: LD_STRING 08_Donaldson
3283: PPUSH
3284: LD_INT 1
3286: PPUSH
3287: CALL 4680 0 2
3291: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3292: LD_EXP 4
3296: PPUSH
3297: LD_INT 11
3299: PPUSH
3300: LD_INT 0
3302: PPUSH
3303: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3307: LD_EXP 4
3311: PPUSH
3312: LD_INT 42
3314: PPUSH
3315: LD_INT 35
3317: PPUSH
3318: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3322: LD_EXP 4
3326: PPUSH
3327: CALL_OW 305
3331: IFFALSE 3361
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3333: LD_ADDR_EXP 15
3337: PUSH
3338: LD_EXP 15
3342: PUSH
3343: LD_EXP 4
3347: ADD
3348: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3349: LD_EXP 4
3353: PPUSH
3354: LD_STRING 10_Donaldson
3356: PPUSH
3357: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3361: LD_EXP 3
3365: PPUSH
3366: CALL_OW 305
3370: NOT
3371: PUSH
3372: LD_EXP 8
3376: PPUSH
3377: CALL_OW 305
3381: NOT
3382: AND
3383: IFFALSE 3470
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3385: LD_ADDR_EXP 8
3389: PUSH
3390: LD_STRING 08_Frank
3392: PPUSH
3393: LD_INT 1
3395: PPUSH
3396: CALL 4680 0 2
3400: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3401: LD_EXP 8
3405: PPUSH
3406: LD_INT 11
3408: PPUSH
3409: LD_INT 0
3411: PPUSH
3412: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3416: LD_EXP 8
3420: PPUSH
3421: LD_INT 42
3423: PPUSH
3424: LD_INT 35
3426: PPUSH
3427: CALL_OW 118
// if IsPlaced ( Frank ) then
3431: LD_EXP 8
3435: PPUSH
3436: CALL_OW 305
3440: IFFALSE 3470
// begin addHeroesTab = addHeroesTab ^ Frank ;
3442: LD_ADDR_EXP 15
3446: PUSH
3447: LD_EXP 15
3451: PUSH
3452: LD_EXP 8
3456: ADD
3457: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3458: LD_EXP 8
3462: PPUSH
3463: LD_STRING 10_Frank
3465: PPUSH
3466: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3470: LD_EXP 3
3474: PPUSH
3475: CALL_OW 305
3479: NOT
3480: PUSH
3481: LD_EXP 9
3485: PPUSH
3486: CALL_OW 305
3490: NOT
3491: AND
3492: IFFALSE 3581
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3494: LD_ADDR_EXP 9
3498: PUSH
3499: LD_STRING 09_Houten
3501: PPUSH
3502: LD_INT 1
3504: PPUSH
3505: CALL 4680 0 2
3509: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3510: LD_EXP 9
3514: PPUSH
3515: LD_INT 11
3517: PPUSH
3518: LD_INT 0
3520: PPUSH
3521: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3525: LD_EXP 9
3529: PPUSH
3530: LD_INT 42
3532: PPUSH
3533: LD_INT 35
3535: PPUSH
3536: CALL_OW 118
// if IsPlaced ( Houten ) then
3540: LD_EXP 9
3544: PPUSH
3545: CALL_OW 305
3549: IFFALSE 3579
// begin addHeroesTab = addHeroesTab ^ Houten ;
3551: LD_ADDR_EXP 15
3555: PUSH
3556: LD_EXP 15
3560: PUSH
3561: LD_EXP 9
3565: ADD
3566: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3567: LD_EXP 9
3571: PPUSH
3572: LD_STRING 10_Houten
3574: PPUSH
3575: CALL_OW 38
// end ; end else
3579: GO 3639
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3581: LD_EXP 11
3585: PUSH
3586: LD_INT 1
3588: ARRAY
3589: PPUSH
3590: LD_INT 11
3592: PPUSH
3593: LD_INT 0
3595: PPUSH
3596: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3600: LD_EXP 11
3604: PUSH
3605: LD_INT 1
3607: ARRAY
3608: PPUSH
3609: LD_INT 42
3611: PPUSH
3612: LD_INT 35
3614: PPUSH
3615: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
3619: LD_ADDR_EXP 15
3623: PUSH
3624: LD_EXP 15
3628: PUSH
3629: LD_EXP 11
3633: PUSH
3634: LD_INT 1
3636: ARRAY
3637: ADD
3638: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
3639: LD_EXP 4
3643: PPUSH
3644: CALL_OW 305
3648: NOT
3649: IFFALSE 3736
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3651: LD_ADDR_EXP 4
3655: PUSH
3656: LD_STRING 08_Donaldson
3658: PPUSH
3659: LD_INT 1
3661: PPUSH
3662: CALL 4680 0 2
3666: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3667: LD_EXP 4
3671: PPUSH
3672: LD_INT 11
3674: PPUSH
3675: LD_INT 0
3677: PPUSH
3678: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3682: LD_EXP 4
3686: PPUSH
3687: LD_INT 42
3689: PPUSH
3690: LD_INT 35
3692: PPUSH
3693: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3697: LD_EXP 4
3701: PPUSH
3702: CALL_OW 305
3706: IFFALSE 3736
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3708: LD_ADDR_EXP 15
3712: PUSH
3713: LD_EXP 15
3717: PUSH
3718: LD_EXP 4
3722: ADD
3723: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3724: LD_EXP 4
3728: PPUSH
3729: LD_STRING 10_Donaldson
3731: PPUSH
3732: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3736: LD_EXP 4
3740: PPUSH
3741: CALL_OW 305
3745: NOT
3746: PUSH
3747: LD_EXP 8
3751: PPUSH
3752: CALL_OW 305
3756: NOT
3757: AND
3758: IFFALSE 3845
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3760: LD_ADDR_EXP 8
3764: PUSH
3765: LD_STRING 08_Frank
3767: PPUSH
3768: LD_INT 1
3770: PPUSH
3771: CALL 4680 0 2
3775: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3776: LD_EXP 8
3780: PPUSH
3781: LD_INT 11
3783: PPUSH
3784: LD_INT 0
3786: PPUSH
3787: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3791: LD_EXP 8
3795: PPUSH
3796: LD_INT 42
3798: PPUSH
3799: LD_INT 35
3801: PPUSH
3802: CALL_OW 118
// if IsPlaced ( Frank ) then
3806: LD_EXP 8
3810: PPUSH
3811: CALL_OW 305
3815: IFFALSE 3845
// begin addHeroesTab = addHeroesTab ^ Frank ;
3817: LD_ADDR_EXP 15
3821: PUSH
3822: LD_EXP 15
3826: PUSH
3827: LD_EXP 8
3831: ADD
3832: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3833: LD_EXP 8
3837: PPUSH
3838: LD_STRING 10_Frank
3840: PPUSH
3841: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
3845: LD_EXP 4
3849: PPUSH
3850: CALL_OW 305
3854: NOT
3855: PUSH
3856: LD_EXP 9
3860: PPUSH
3861: CALL_OW 305
3865: NOT
3866: AND
3867: IFFALSE 3956
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3869: LD_ADDR_EXP 9
3873: PUSH
3874: LD_STRING 09_Houten
3876: PPUSH
3877: LD_INT 1
3879: PPUSH
3880: CALL 4680 0 2
3884: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3885: LD_EXP 9
3889: PPUSH
3890: LD_INT 11
3892: PPUSH
3893: LD_INT 0
3895: PPUSH
3896: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3900: LD_EXP 9
3904: PPUSH
3905: LD_INT 42
3907: PPUSH
3908: LD_INT 35
3910: PPUSH
3911: CALL_OW 118
// if IsPlaced ( Houten ) then
3915: LD_EXP 9
3919: PPUSH
3920: CALL_OW 305
3924: IFFALSE 3954
// begin addHeroesTab = addHeroesTab ^ Houten ;
3926: LD_ADDR_EXP 15
3930: PUSH
3931: LD_EXP 15
3935: PUSH
3936: LD_EXP 9
3940: ADD
3941: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3942: LD_EXP 9
3946: PPUSH
3947: LD_STRING 10_Houten
3949: PPUSH
3950: CALL_OW 38
// end ; end else
3954: GO 4014
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
3956: LD_EXP 11
3960: PUSH
3961: LD_INT 2
3963: ARRAY
3964: PPUSH
3965: LD_INT 11
3967: PPUSH
3968: LD_INT 0
3970: PPUSH
3971: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
3975: LD_EXP 11
3979: PUSH
3980: LD_INT 2
3982: ARRAY
3983: PPUSH
3984: LD_INT 42
3986: PPUSH
3987: LD_INT 35
3989: PPUSH
3990: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 2 ] ;
3994: LD_ADDR_EXP 15
3998: PUSH
3999: LD_EXP 15
4003: PUSH
4004: LD_EXP 11
4008: PUSH
4009: LD_INT 2
4011: ARRAY
4012: ADD
4013: ST_TO_ADDR
// end ; end ; if siberite > 200 then
4014: LD_EXP 16
4018: PUSH
4019: LD_INT 200
4021: GREATER
4022: IFFALSE 4118
// begin for i := 1 to ( siberite - 200 ) / 100 do
4024: LD_ADDR_VAR 0 2
4028: PUSH
4029: DOUBLE
4030: LD_INT 1
4032: DEC
4033: ST_TO_ADDR
4034: LD_EXP 16
4038: PUSH
4039: LD_INT 200
4041: MINUS
4042: PUSH
4043: LD_INT 100
4045: DIVREAL
4046: PUSH
4047: FOR_TO
4048: IFFALSE 4116
// begin PlaceUnitArea ( others08 [ i ] , addHeroes , false ) ;
4050: LD_EXP 11
4054: PUSH
4055: LD_VAR 0 2
4059: ARRAY
4060: PPUSH
4061: LD_INT 11
4063: PPUSH
4064: LD_INT 0
4066: PPUSH
4067: CALL_OW 49
// ComTurnXY ( others08 [ i ] , 42 , 35 ) ;
4071: LD_EXP 11
4075: PUSH
4076: LD_VAR 0 2
4080: ARRAY
4081: PPUSH
4082: LD_INT 42
4084: PPUSH
4085: LD_INT 35
4087: PPUSH
4088: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4092: LD_ADDR_EXP 15
4096: PUSH
4097: LD_EXP 15
4101: PUSH
4102: LD_EXP 11
4106: PUSH
4107: LD_VAR 0 2
4111: ARRAY
4112: ADD
4113: ST_TO_ADDR
// end ;
4114: GO 4047
4116: POP
4117: POP
// end ; PlaceHumanInUnit ( JMM , car ) ;
4118: LD_EXP 1
4122: PPUSH
4123: LD_INT 138
4125: PPUSH
4126: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
4130: LD_EXP 2
4134: PPUSH
4135: LD_INT 58
4137: PPUSH
4138: CALL_OW 52
// SetClass ( JMM , 1 ) ;
4142: LD_EXP 1
4146: PPUSH
4147: LD_INT 1
4149: PPUSH
4150: CALL_OW 336
// end ;
4154: LD_VAR 0 1
4158: RET
// export function PrepareConvoy ; var i , veh , un ; begin
4159: LD_INT 0
4161: PPUSH
4162: PPUSH
4163: PPUSH
4164: PPUSH
// uc_side = 1 ;
4165: LD_ADDR_OWVAR 20
4169: PUSH
4170: LD_INT 1
4172: ST_TO_ADDR
// uc_nation = 1 ;
4173: LD_ADDR_OWVAR 21
4177: PUSH
4178: LD_INT 1
4180: ST_TO_ADDR
// for i := 1 to 3 do
4181: LD_ADDR_VAR 0 2
4185: PUSH
4186: DOUBLE
4187: LD_INT 1
4189: DEC
4190: ST_TO_ADDR
4191: LD_INT 3
4193: PUSH
4194: FOR_TO
4195: IFFALSE 4341
// begin vc_engine = 1 ;
4197: LD_ADDR_OWVAR 39
4201: PUSH
4202: LD_INT 1
4204: ST_TO_ADDR
// vc_control = 1 ;
4205: LD_ADDR_OWVAR 38
4209: PUSH
4210: LD_INT 1
4212: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
4213: LD_ADDR_OWVAR 40
4217: PUSH
4218: LD_INT 3
4220: PUSH
4221: LD_INT 4
4223: PUSH
4224: LD_INT 5
4226: PUSH
4227: EMPTY
4228: LIST
4229: LIST
4230: LIST
4231: PUSH
4232: LD_INT 1
4234: PPUSH
4235: LD_INT 3
4237: PPUSH
4238: CALL_OW 12
4242: ARRAY
4243: ST_TO_ADDR
// vc_chassis = 3 ;
4244: LD_ADDR_OWVAR 37
4248: PUSH
4249: LD_INT 3
4251: ST_TO_ADDR
// veh = CreateVehicle ;
4252: LD_ADDR_VAR 0 3
4256: PUSH
4257: CALL_OW 45
4261: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4262: LD_VAR 0 3
4266: PPUSH
4267: LD_INT 1
4269: PPUSH
4270: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
4274: LD_VAR 0 3
4278: PPUSH
4279: LD_INT 8
4281: PPUSH
4282: LD_INT 0
4284: PPUSH
4285: CALL_OW 49
// convoy = convoy ^ veh ;
4289: LD_ADDR_EXP 12
4293: PUSH
4294: LD_EXP 12
4298: PUSH
4299: LD_VAR 0 3
4303: ADD
4304: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4305: LD_INT 0
4307: PPUSH
4308: LD_INT 10
4310: PPUSH
4311: CALL_OW 383
// un = CreateHuman ;
4315: LD_ADDR_VAR 0 4
4319: PUSH
4320: CALL_OW 44
4324: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4325: LD_VAR 0 4
4329: PPUSH
4330: LD_VAR 0 3
4334: PPUSH
4335: CALL_OW 52
// end ;
4339: GO 4194
4341: POP
4342: POP
// for i := 1 to 3 do
4343: LD_ADDR_VAR 0 2
4347: PUSH
4348: DOUBLE
4349: LD_INT 1
4351: DEC
4352: ST_TO_ADDR
4353: LD_INT 3
4355: PUSH
4356: FOR_TO
4357: IFFALSE 4495
// begin vc_engine = 1 ;
4359: LD_ADDR_OWVAR 39
4363: PUSH
4364: LD_INT 1
4366: ST_TO_ADDR
// vc_control = 1 ;
4367: LD_ADDR_OWVAR 38
4371: PUSH
4372: LD_INT 1
4374: ST_TO_ADDR
// vc_weapon = 12 ;
4375: LD_ADDR_OWVAR 40
4379: PUSH
4380: LD_INT 12
4382: ST_TO_ADDR
// vc_chassis = 3 ;
4383: LD_ADDR_OWVAR 37
4387: PUSH
4388: LD_INT 3
4390: ST_TO_ADDR
// veh = CreateVehicle ;
4391: LD_ADDR_VAR 0 3
4395: PUSH
4396: CALL_OW 45
4400: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4401: LD_VAR 0 3
4405: PPUSH
4406: LD_INT 1
4408: PPUSH
4409: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
4413: LD_VAR 0 3
4417: PPUSH
4418: LD_INT 9
4420: PPUSH
4421: LD_INT 0
4423: PPUSH
4424: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
4428: LD_VAR 0 3
4432: PPUSH
4433: LD_INT 1
4435: PPUSH
4436: LD_INT 100
4438: PPUSH
4439: CALL_OW 291
// convoy = convoy ^ veh ;
4443: LD_ADDR_EXP 12
4447: PUSH
4448: LD_EXP 12
4452: PUSH
4453: LD_VAR 0 3
4457: ADD
4458: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4459: LD_INT 0
4461: PPUSH
4462: LD_INT 10
4464: PPUSH
4465: CALL_OW 383
// un = CreateHuman ;
4469: LD_ADDR_VAR 0 4
4473: PUSH
4474: CALL_OW 44
4478: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4479: LD_VAR 0 4
4483: PPUSH
4484: LD_VAR 0 3
4488: PPUSH
4489: CALL_OW 52
// end ;
4493: GO 4356
4495: POP
4496: POP
// ComMoveXY ( convoy [ 1 ] , 39 , 38 ) ;
4497: LD_EXP 12
4501: PUSH
4502: LD_INT 1
4504: ARRAY
4505: PPUSH
4506: LD_INT 39
4508: PPUSH
4509: LD_INT 38
4511: PPUSH
4512: CALL_OW 111
// AddComMoveXY ( convoy [ 1 ] , 41 , 50 ) ;
4516: LD_EXP 12
4520: PUSH
4521: LD_INT 1
4523: ARRAY
4524: PPUSH
4525: LD_INT 41
4527: PPUSH
4528: LD_INT 50
4530: PPUSH
4531: CALL_OW 171
// ComMoveXY ( convoy [ 2 ] , 39 , 38 ) ;
4535: LD_EXP 12
4539: PUSH
4540: LD_INT 2
4542: ARRAY
4543: PPUSH
4544: LD_INT 39
4546: PPUSH
4547: LD_INT 38
4549: PPUSH
4550: CALL_OW 111
// AddComMoveXY ( convoy [ 2 ] , 41 , 47 ) ;
4554: LD_EXP 12
4558: PUSH
4559: LD_INT 2
4561: ARRAY
4562: PPUSH
4563: LD_INT 41
4565: PPUSH
4566: LD_INT 47
4568: PPUSH
4569: CALL_OW 171
// ComMoveXY ( convoy [ 3 ] , 39 , 38 ) ;
4573: LD_EXP 12
4577: PUSH
4578: LD_INT 3
4580: ARRAY
4581: PPUSH
4582: LD_INT 39
4584: PPUSH
4585: LD_INT 38
4587: PPUSH
4588: CALL_OW 111
// AddComMoveXY ( convoy [ 3 ] , 41 , 44 ) ;
4592: LD_EXP 12
4596: PUSH
4597: LD_INT 3
4599: ARRAY
4600: PPUSH
4601: LD_INT 41
4603: PPUSH
4604: LD_INT 44
4606: PPUSH
4607: CALL_OW 171
// wait ( 0 0$4 ) ;
4611: LD_INT 140
4613: PPUSH
4614: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
4618: LD_EXP 12
4622: PUSH
4623: LD_INT 4
4625: ARRAY
4626: PPUSH
4627: LD_INT 47
4629: PPUSH
4630: LD_INT 49
4632: PPUSH
4633: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
4637: LD_EXP 12
4641: PUSH
4642: LD_INT 5
4644: ARRAY
4645: PPUSH
4646: LD_INT 47
4648: PPUSH
4649: LD_INT 49
4651: PPUSH
4652: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
4656: LD_EXP 12
4660: PUSH
4661: LD_INT 6
4663: ARRAY
4664: PPUSH
4665: LD_INT 47
4667: PPUSH
4668: LD_INT 49
4670: PPUSH
4671: CALL_OW 111
// end ; end_of_file
4675: LD_VAR 0 1
4679: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
4680: LD_INT 0
4682: PPUSH
4683: PPUSH
// if exist_mode then
4684: LD_VAR 0 2
4688: IFFALSE 4707
// unit := CreateCharacter ( ident ) else
4690: LD_ADDR_VAR 0 4
4694: PUSH
4695: LD_VAR 0 1
4699: PPUSH
4700: CALL_OW 34
4704: ST_TO_ADDR
4705: GO 4722
// unit := NewCharacter ( ident ) ;
4707: LD_ADDR_VAR 0 4
4711: PUSH
4712: LD_VAR 0 1
4716: PPUSH
4717: CALL_OW 25
4721: ST_TO_ADDR
// result := unit ;
4722: LD_ADDR_VAR 0 3
4726: PUSH
4727: LD_VAR 0 4
4731: ST_TO_ADDR
// end ; end_of_file
4732: LD_VAR 0 3
4736: RET
// on DialogueSkipped ( dummy ) do begin SaveCharacters ( JMM , 10_JMM ) ;
4737: LD_EXP 1
4741: PPUSH
4742: LD_STRING 10_JMM
4744: PPUSH
4745: CALL_OW 38
// SaveCharacters ( FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] , OthersIn10 ) ;
4749: LD_INT 11
4751: PPUSH
4752: LD_INT 22
4754: PUSH
4755: LD_INT 1
4757: PUSH
4758: EMPTY
4759: LIST
4760: LIST
4761: PUSH
4762: LD_INT 21
4764: PUSH
4765: LD_INT 1
4767: PUSH
4768: EMPTY
4769: LIST
4770: LIST
4771: PUSH
4772: EMPTY
4773: LIST
4774: LIST
4775: PPUSH
4776: CALL_OW 70
4780: PUSH
4781: LD_EXP 1
4785: PUSH
4786: LD_EXP 2
4790: PUSH
4791: LD_EXP 3
4795: PUSH
4796: LD_EXP 4
4800: PUSH
4801: LD_EXP 5
4805: PUSH
4806: LD_EXP 6
4810: PUSH
4811: LD_EXP 7
4815: PUSH
4816: LD_EXP 8
4820: PUSH
4821: LD_EXP 9
4825: PUSH
4826: LD_EXP 10
4830: PUSH
4831: EMPTY
4832: LIST
4833: LIST
4834: LIST
4835: LIST
4836: LIST
4837: LIST
4838: LIST
4839: LIST
4840: LIST
4841: LIST
4842: DIFF
4843: PPUSH
4844: LD_STRING OthersIn10
4846: PPUSH
4847: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
4851: LD_INT 10
4853: PPUSH
4854: LD_STRING %_cont
4856: PPUSH
4857: CALL_OW 340
// end ;
4861: PPOPN 1
4863: END
