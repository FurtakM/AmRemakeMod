// export JMM , Powell , Kikuchi ; export convoy , prepConv ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 4
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// PrepareHeroes ;
  21: CALL 646 0 0
// end ; end_of_file
  25: END
// every 1 do
  26: GO 28
  28: DISABLE
// begin InGameOn ;
  29: CALL_OW 8
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  33: LD_INT 60
  35: PPUSH
  36: LD_INT 2
  38: PPUSH
  39: LD_INT 1
  41: PPUSH
  42: LD_INT 1
  44: PPUSH
  45: LD_INT 4
  47: PPUSH
  48: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  52: LD_INT 6
  54: PPUSH
  55: LD_INT 4
  57: PPUSH
  58: LD_INT 1
  60: PPUSH
  61: LD_INT 1
  63: PPUSH
  64: LD_INT 6
  66: PPUSH
  67: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
  71: LD_INT 47
  73: PUSH
  74: LD_INT 4
  76: PUSH
  77: EMPTY
  78: LIST
  79: LIST
  80: PPUSH
  81: LD_INT 51
  83: PPUSH
  84: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
  88: LD_INT 47
  90: PUSH
  91: LD_INT 4
  93: PUSH
  94: EMPTY
  95: LIST
  96: LIST
  97: PPUSH
  98: LD_INT 52
 100: PPUSH
 101: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 105: LD_INT 47
 107: PUSH
 108: LD_INT 4
 110: PUSH
 111: EMPTY
 112: LIST
 113: LIST
 114: PPUSH
 115: LD_INT 53
 117: PPUSH
 118: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 122: LD_INT 138
 124: PPUSH
 125: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 129: LD_INT 138
 131: PPUSH
 132: LD_INT 69
 134: PPUSH
 135: LD_INT 36
 137: PPUSH
 138: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 142: LD_INT 138
 144: PPUSH
 145: LD_INT 65
 147: PPUSH
 148: LD_INT 43
 150: PPUSH
 151: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 155: LD_INT 138
 157: PPUSH
 158: LD_INT 63
 160: PPUSH
 161: LD_INT 48
 163: PPUSH
 164: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 168: LD_INT 138
 170: PPUSH
 171: LD_INT 60
 173: PPUSH
 174: LD_INT 50
 176: PPUSH
 177: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 181: LD_INT 138
 183: PPUSH
 184: LD_INT 54
 186: PPUSH
 187: LD_INT 47
 189: PPUSH
 190: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 194: LD_INT 138
 196: PPUSH
 197: LD_INT 51
 199: PPUSH
 200: LD_INT 40
 202: PPUSH
 203: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 207: LD_INT 35
 209: PPUSH
 210: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 214: LD_INT 138
 216: PPUSH
 217: CALL_OW 87
// until IsInArea ( car , stop ) ;
 221: LD_INT 138
 223: PPUSH
 224: LD_INT 7
 226: PPUSH
 227: CALL_OW 308
 231: IFFALSE 207
// ComExitVehicle ( JMM ) ;
 233: LD_EXP 1
 237: PPUSH
 238: CALL_OW 121
// wait ( 0 0$01 ) ;
 242: LD_INT 35
 244: PPUSH
 245: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 249: LD_EXP 1
 253: PPUSH
 254: LD_INT 42
 256: PPUSH
 257: LD_INT 37
 259: PPUSH
 260: CALL_OW 111
// wait ( 0 0$5 ) ;
 264: LD_INT 175
 266: PPUSH
 267: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 271: LD_EXP 2
 275: PPUSH
 276: CALL_OW 122
// wait ( 0 0$01 ) ;
 280: LD_INT 35
 282: PPUSH
 283: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 287: LD_EXP 2
 291: PPUSH
 292: LD_EXP 1
 296: PPUSH
 297: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 301: LD_EXP 1
 305: PPUSH
 306: LD_EXP 2
 310: PPUSH
 311: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_STRING D1-JMM-1
 322: PPUSH
 323: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 327: LD_EXP 2
 331: PPUSH
 332: LD_STRING D1-Pow-1
 334: PPUSH
 335: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 339: LD_EXP 1
 343: PPUSH
 344: LD_STRING D1-JMM-2
 346: PPUSH
 347: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 351: LD_EXP 2
 355: PPUSH
 356: LD_STRING D1-Pow-2
 358: PPUSH
 359: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 363: LD_EXP 1
 367: PPUSH
 368: LD_STRING D1-JMM-3
 370: PPUSH
 371: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 375: LD_EXP 2
 379: PPUSH
 380: LD_STRING D1-Pow-3
 382: PPUSH
 383: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 387: LD_EXP 1
 391: PPUSH
 392: LD_STRING D1-JMM-4
 394: PPUSH
 395: CALL_OW 88
// PrepareConvoy ;
 399: CALL 779 0 0
// Say ( Powell , D1-Pow-4 ) ;
 403: LD_EXP 2
 407: PPUSH
 408: LD_STRING D1-Pow-4
 410: PPUSH
 411: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 415: LD_EXP 2
 419: PPUSH
 420: LD_STRING D1-Pow-4a
 422: PPUSH
 423: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 427: LD_EXP 2
 431: PPUSH
 432: LD_STRING D1-Pow-4b
 434: PPUSH
 435: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
 439: LD_EXP 1
 443: PPUSH
 444: LD_STRING D1-JMM-5
 446: PPUSH
 447: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 451: LD_EXP 2
 455: PPUSH
 456: LD_STRING D1-Pow-5
 458: PPUSH
 459: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 463: LD_EXP 1
 467: PPUSH
 468: LD_STRING D1-JMM-6
 470: PPUSH
 471: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 475: LD_EXP 2
 479: PPUSH
 480: LD_STRING D1-Pow-6
 482: PPUSH
 483: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 487: LD_EXP 1
 491: PPUSH
 492: LD_STRING D1-JMM-7
 494: PPUSH
 495: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 499: LD_EXP 2
 503: PPUSH
 504: LD_STRING D1-Pow-7
 506: PPUSH
 507: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 511: LD_EXP 1
 515: PPUSH
 516: LD_STRING D1-JMM-8
 518: PPUSH
 519: CALL_OW 88
// if TestCharacters ( 08_Frank ) = 1 then
 523: LD_STRING 08_Frank
 525: PPUSH
 526: CALL_OW 28
 530: PUSH
 531: LD_INT 1
 533: EQUAL
 534: IFFALSE 604
// begin ComExitBuilding ( Kikuchi ) ;
 536: LD_EXP 3
 540: PPUSH
 541: CALL_OW 122
// wait ( 0 0$1 ) ;
 545: LD_INT 35
 547: PPUSH
 548: CALL_OW 67
// ComTurnUnit ( Kikuchi , JMM ) ;
 552: LD_EXP 3
 556: PPUSH
 557: LD_EXP 1
 561: PPUSH
 562: CALL_OW 119
// ComTurnUnit ( JMM , Kikuchi ) ;
 566: LD_EXP 1
 570: PPUSH
 571: LD_EXP 3
 575: PPUSH
 576: CALL_OW 119
// Say ( Kikuchi , D3b-Yam-1 ) ;
 580: LD_EXP 3
 584: PPUSH
 585: LD_STRING D3b-Yam-1
 587: PPUSH
 588: CALL_OW 88
// SaveCharacters ( Kikuchi , 10_Kikuchi ) ;
 592: LD_EXP 3
 596: PPUSH
 597: LD_STRING 10_Kikuchi
 599: PPUSH
 600: CALL_OW 38
// end ; SaveCharacters ( JMM , 10_JMM ) ;
 604: LD_EXP 1
 608: PPUSH
 609: LD_STRING 10_JMM
 611: PPUSH
 612: CALL_OW 38
// ComEnterUnit ( JMM , car ) ;
 616: LD_EXP 1
 620: PPUSH
 621: LD_INT 138
 623: PPUSH
 624: CALL_OW 120
// wait ( 0 0$7 ) ;
 628: LD_INT 245
 630: PPUSH
 631: CALL_OW 67
// ChangeMap ( 10 , %_cont ) ;
 635: LD_INT 10
 637: PPUSH
 638: LD_STRING %_cont
 640: PPUSH
 641: CALL_OW 340
// end ; end_of_file
 645: END
// export function PrepareHeroes ; begin
 646: LD_INT 0
 648: PPUSH
// uc_side = 1 ;
 649: LD_ADDR_OWVAR 20
 653: PUSH
 654: LD_INT 1
 656: ST_TO_ADDR
// uc_nation = 1 ;
 657: LD_ADDR_OWVAR 21
 661: PUSH
 662: LD_INT 1
 664: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 665: LD_ADDR_EXP 1
 669: PUSH
 670: LD_STRING 09_JMM
 672: PPUSH
 673: LD_INT 1
 675: PPUSH
 676: CALL 1300 0 2
 680: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 681: LD_ADDR_EXP 2
 685: PUSH
 686: LD_STRING Powell
 688: PPUSH
 689: LD_INT 0
 691: PPUSH
 692: CALL 1300 0 2
 696: ST_TO_ADDR
// if TestCharacters ( 08_Frank ) = 1 then
 697: LD_STRING 08_Frank
 699: PPUSH
 700: CALL_OW 28
 704: PUSH
 705: LD_INT 1
 707: EQUAL
 708: IFFALSE 738
// begin Kikuchi = PrepareUnit ( Yamoko , false ) ;
 710: LD_ADDR_EXP 3
 714: PUSH
 715: LD_STRING Yamoko
 717: PPUSH
 718: LD_INT 0
 720: PPUSH
 721: CALL 1300 0 2
 725: ST_TO_ADDR
// PlaceHumanInUnit ( Kikuchi , am_bar ) ;
 726: LD_EXP 3
 730: PPUSH
 731: LD_INT 58
 733: PPUSH
 734: CALL_OW 52
// end ; PlaceHumanInUnit ( JMM , car ) ;
 738: LD_EXP 1
 742: PPUSH
 743: LD_INT 138
 745: PPUSH
 746: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
 750: LD_EXP 2
 754: PPUSH
 755: LD_INT 58
 757: PPUSH
 758: CALL_OW 52
// SetClass ( JMM , 1 ) ;
 762: LD_EXP 1
 766: PPUSH
 767: LD_INT 1
 769: PPUSH
 770: CALL_OW 336
// end ;
 774: LD_VAR 0 1
 778: RET
// export function PrepareConvoy ; var i , veh , un ; begin
 779: LD_INT 0
 781: PPUSH
 782: PPUSH
 783: PPUSH
 784: PPUSH
// uc_side = 1 ;
 785: LD_ADDR_OWVAR 20
 789: PUSH
 790: LD_INT 1
 792: ST_TO_ADDR
// uc_nation = 1 ;
 793: LD_ADDR_OWVAR 21
 797: PUSH
 798: LD_INT 1
 800: ST_TO_ADDR
// for i := 1 to 3 do
 801: LD_ADDR_VAR 0 2
 805: PUSH
 806: DOUBLE
 807: LD_INT 1
 809: DEC
 810: ST_TO_ADDR
 811: LD_INT 3
 813: PUSH
 814: FOR_TO
 815: IFFALSE 961
// begin vc_engine = 1 ;
 817: LD_ADDR_OWVAR 39
 821: PUSH
 822: LD_INT 1
 824: ST_TO_ADDR
// vc_control = 1 ;
 825: LD_ADDR_OWVAR 38
 829: PUSH
 830: LD_INT 1
 832: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
 833: LD_ADDR_OWVAR 40
 837: PUSH
 838: LD_INT 3
 840: PUSH
 841: LD_INT 4
 843: PUSH
 844: LD_INT 5
 846: PUSH
 847: EMPTY
 848: LIST
 849: LIST
 850: LIST
 851: PUSH
 852: LD_INT 1
 854: PPUSH
 855: LD_INT 3
 857: PPUSH
 858: CALL_OW 12
 862: ARRAY
 863: ST_TO_ADDR
// vc_chassis = 3 ;
 864: LD_ADDR_OWVAR 37
 868: PUSH
 869: LD_INT 3
 871: ST_TO_ADDR
// veh = CreateVehicle ;
 872: LD_ADDR_VAR 0 3
 876: PUSH
 877: CALL_OW 45
 881: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
 882: LD_VAR 0 3
 886: PPUSH
 887: LD_INT 1
 889: PPUSH
 890: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
 894: LD_VAR 0 3
 898: PPUSH
 899: LD_INT 8
 901: PPUSH
 902: LD_INT 0
 904: PPUSH
 905: CALL_OW 49
// convoy = convoy ^ veh ;
 909: LD_ADDR_EXP 4
 913: PUSH
 914: LD_EXP 4
 918: PUSH
 919: LD_VAR 0 3
 923: ADD
 924: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
 925: LD_INT 0
 927: PPUSH
 928: LD_INT 10
 930: PPUSH
 931: CALL_OW 383
// un = CreateHuman ;
 935: LD_ADDR_VAR 0 4
 939: PUSH
 940: CALL_OW 44
 944: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
 945: LD_VAR 0 4
 949: PPUSH
 950: LD_VAR 0 3
 954: PPUSH
 955: CALL_OW 52
// end ;
 959: GO 814
 961: POP
 962: POP
// for i := 1 to 3 do
 963: LD_ADDR_VAR 0 2
 967: PUSH
 968: DOUBLE
 969: LD_INT 1
 971: DEC
 972: ST_TO_ADDR
 973: LD_INT 3
 975: PUSH
 976: FOR_TO
 977: IFFALSE 1115
// begin vc_engine = 1 ;
 979: LD_ADDR_OWVAR 39
 983: PUSH
 984: LD_INT 1
 986: ST_TO_ADDR
// vc_control = 1 ;
 987: LD_ADDR_OWVAR 38
 991: PUSH
 992: LD_INT 1
 994: ST_TO_ADDR
// vc_weapon = 12 ;
 995: LD_ADDR_OWVAR 40
 999: PUSH
1000: LD_INT 12
1002: ST_TO_ADDR
// vc_chassis = 3 ;
1003: LD_ADDR_OWVAR 37
1007: PUSH
1008: LD_INT 3
1010: ST_TO_ADDR
// veh = CreateVehicle ;
1011: LD_ADDR_VAR 0 3
1015: PUSH
1016: CALL_OW 45
1020: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
1021: LD_VAR 0 3
1025: PPUSH
1026: LD_INT 1
1028: PPUSH
1029: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
1033: LD_VAR 0 3
1037: PPUSH
1038: LD_INT 9
1040: PPUSH
1041: LD_INT 0
1043: PPUSH
1044: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
1048: LD_VAR 0 3
1052: PPUSH
1053: LD_INT 1
1055: PPUSH
1056: LD_INT 100
1058: PPUSH
1059: CALL_OW 291
// convoy = convoy ^ veh ;
1063: LD_ADDR_EXP 4
1067: PUSH
1068: LD_EXP 4
1072: PUSH
1073: LD_VAR 0 3
1077: ADD
1078: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
1079: LD_INT 0
1081: PPUSH
1082: LD_INT 10
1084: PPUSH
1085: CALL_OW 383
// un = CreateHuman ;
1089: LD_ADDR_VAR 0 4
1093: PUSH
1094: CALL_OW 44
1098: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
1099: LD_VAR 0 4
1103: PPUSH
1104: LD_VAR 0 3
1108: PPUSH
1109: CALL_OW 52
// end ;
1113: GO 976
1115: POP
1116: POP
// ComMoveXY ( convoy [ 1 ] , 39 , 38 ) ;
1117: LD_EXP 4
1121: PUSH
1122: LD_INT 1
1124: ARRAY
1125: PPUSH
1126: LD_INT 39
1128: PPUSH
1129: LD_INT 38
1131: PPUSH
1132: CALL_OW 111
// AddComMoveXY ( convoy [ 1 ] , 41 , 50 ) ;
1136: LD_EXP 4
1140: PUSH
1141: LD_INT 1
1143: ARRAY
1144: PPUSH
1145: LD_INT 41
1147: PPUSH
1148: LD_INT 50
1150: PPUSH
1151: CALL_OW 171
// ComMoveXY ( convoy [ 2 ] , 39 , 38 ) ;
1155: LD_EXP 4
1159: PUSH
1160: LD_INT 2
1162: ARRAY
1163: PPUSH
1164: LD_INT 39
1166: PPUSH
1167: LD_INT 38
1169: PPUSH
1170: CALL_OW 111
// AddComMoveXY ( convoy [ 2 ] , 41 , 47 ) ;
1174: LD_EXP 4
1178: PUSH
1179: LD_INT 2
1181: ARRAY
1182: PPUSH
1183: LD_INT 41
1185: PPUSH
1186: LD_INT 47
1188: PPUSH
1189: CALL_OW 171
// ComMoveXY ( convoy [ 3 ] , 39 , 38 ) ;
1193: LD_EXP 4
1197: PUSH
1198: LD_INT 3
1200: ARRAY
1201: PPUSH
1202: LD_INT 39
1204: PPUSH
1205: LD_INT 38
1207: PPUSH
1208: CALL_OW 111
// AddComMoveXY ( convoy [ 3 ] , 41 , 44 ) ;
1212: LD_EXP 4
1216: PUSH
1217: LD_INT 3
1219: ARRAY
1220: PPUSH
1221: LD_INT 41
1223: PPUSH
1224: LD_INT 44
1226: PPUSH
1227: CALL_OW 171
// wait ( 0 0$4 ) ;
1231: LD_INT 140
1233: PPUSH
1234: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
1238: LD_EXP 4
1242: PUSH
1243: LD_INT 4
1245: ARRAY
1246: PPUSH
1247: LD_INT 47
1249: PPUSH
1250: LD_INT 49
1252: PPUSH
1253: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
1257: LD_EXP 4
1261: PUSH
1262: LD_INT 5
1264: ARRAY
1265: PPUSH
1266: LD_INT 47
1268: PPUSH
1269: LD_INT 49
1271: PPUSH
1272: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
1276: LD_EXP 4
1280: PUSH
1281: LD_INT 6
1283: ARRAY
1284: PPUSH
1285: LD_INT 47
1287: PPUSH
1288: LD_INT 49
1290: PPUSH
1291: CALL_OW 111
// end ; end_of_file
1295: LD_VAR 0 1
1299: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
1300: LD_INT 0
1302: PPUSH
1303: PPUSH
// if exist_mode then
1304: LD_VAR 0 2
1308: IFFALSE 1327
// unit := CreateCharacter ( ident ) else
1310: LD_ADDR_VAR 0 4
1314: PUSH
1315: LD_VAR 0 1
1319: PPUSH
1320: CALL_OW 34
1324: ST_TO_ADDR
1325: GO 1342
// unit := NewCharacter ( ident ) ;
1327: LD_ADDR_VAR 0 4
1331: PUSH
1332: LD_VAR 0 1
1336: PPUSH
1337: CALL_OW 25
1341: ST_TO_ADDR
// result := unit ;
1342: LD_ADDR_VAR 0 3
1346: PUSH
1347: LD_VAR 0 4
1351: ST_TO_ADDR
// end ;
1352: LD_VAR 0 3
1356: RET
