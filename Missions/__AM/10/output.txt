// export JMM , Powell , Kikuchi ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 13
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 15
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 16
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// PrepareHeroes ;
  35: CALL 764 0 0
// end ; end_of_file
  39: END
// every 1 do
  40: GO 42
  42: DISABLE
// begin InGameOn ;
  43: CALL_OW 8
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  47: LD_INT 60
  49: PPUSH
  50: LD_INT 2
  52: PPUSH
  53: LD_INT 1
  55: PPUSH
  56: LD_INT 1
  58: PPUSH
  59: LD_INT 4
  61: PPUSH
  62: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  66: LD_INT 6
  68: PPUSH
  69: LD_INT 4
  71: PPUSH
  72: LD_INT 1
  74: PPUSH
  75: LD_INT 1
  77: PPUSH
  78: LD_INT 6
  80: PPUSH
  81: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
  85: LD_INT 47
  87: PUSH
  88: LD_INT 4
  90: PUSH
  91: EMPTY
  92: LIST
  93: LIST
  94: PPUSH
  95: LD_INT 51
  97: PPUSH
  98: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 102: LD_INT 47
 104: PUSH
 105: LD_INT 4
 107: PUSH
 108: EMPTY
 109: LIST
 110: LIST
 111: PPUSH
 112: LD_INT 52
 114: PPUSH
 115: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 119: LD_INT 47
 121: PUSH
 122: LD_INT 4
 124: PUSH
 125: EMPTY
 126: LIST
 127: LIST
 128: PPUSH
 129: LD_INT 53
 131: PPUSH
 132: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 136: LD_INT 138
 138: PPUSH
 139: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 143: LD_INT 138
 145: PPUSH
 146: LD_INT 69
 148: PPUSH
 149: LD_INT 36
 151: PPUSH
 152: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 156: LD_INT 138
 158: PPUSH
 159: LD_INT 65
 161: PPUSH
 162: LD_INT 43
 164: PPUSH
 165: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 169: LD_INT 138
 171: PPUSH
 172: LD_INT 63
 174: PPUSH
 175: LD_INT 48
 177: PPUSH
 178: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 182: LD_INT 138
 184: PPUSH
 185: LD_INT 60
 187: PPUSH
 188: LD_INT 50
 190: PPUSH
 191: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 195: LD_INT 138
 197: PPUSH
 198: LD_INT 54
 200: PPUSH
 201: LD_INT 47
 203: PPUSH
 204: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 208: LD_INT 138
 210: PPUSH
 211: LD_INT 51
 213: PPUSH
 214: LD_INT 40
 216: PPUSH
 217: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 221: LD_INT 35
 223: PPUSH
 224: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 228: LD_INT 138
 230: PPUSH
 231: CALL_OW 87
// until IsInArea ( car , stop ) ;
 235: LD_INT 138
 237: PPUSH
 238: LD_INT 7
 240: PPUSH
 241: CALL_OW 308
 245: IFFALSE 221
// ComExitVehicle ( JMM ) ;
 247: LD_EXP 1
 251: PPUSH
 252: CALL_OW 121
// wait ( 0 0$01 ) ;
 256: LD_INT 35
 258: PPUSH
 259: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 263: LD_EXP 1
 267: PPUSH
 268: LD_INT 42
 270: PPUSH
 271: LD_INT 37
 273: PPUSH
 274: CALL_OW 111
// wait ( 0 0$5 ) ;
 278: LD_INT 175
 280: PPUSH
 281: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 285: LD_EXP 2
 289: PPUSH
 290: CALL_OW 122
// wait ( 0 0$01 ) ;
 294: LD_INT 35
 296: PPUSH
 297: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 301: LD_EXP 2
 305: PPUSH
 306: LD_EXP 1
 310: PPUSH
 311: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 315: LD_EXP 1
 319: PPUSH
 320: LD_EXP 2
 324: PPUSH
 325: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 329: LD_EXP 1
 333: PPUSH
 334: LD_STRING D1-JMM-1
 336: PPUSH
 337: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 341: LD_EXP 2
 345: PPUSH
 346: LD_STRING D1-Pow-1
 348: PPUSH
 349: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 353: LD_EXP 1
 357: PPUSH
 358: LD_STRING D1-JMM-2
 360: PPUSH
 361: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 365: LD_EXP 2
 369: PPUSH
 370: LD_STRING D1-Pow-2
 372: PPUSH
 373: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 377: LD_EXP 1
 381: PPUSH
 382: LD_STRING D1-JMM-3
 384: PPUSH
 385: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 389: LD_EXP 2
 393: PPUSH
 394: LD_STRING D1-Pow-3
 396: PPUSH
 397: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 401: LD_EXP 1
 405: PPUSH
 406: LD_STRING D1-JMM-4
 408: PPUSH
 409: CALL_OW 88
// PrepareConvoy ;
 413: CALL 4268 0 0
// Say ( Powell , D1-Pow-4 ) ;
 417: LD_EXP 2
 421: PPUSH
 422: LD_STRING D1-Pow-4
 424: PPUSH
 425: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 429: LD_EXP 2
 433: PPUSH
 434: LD_STRING D1-Pow-4a
 436: PPUSH
 437: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 441: LD_EXP 2
 445: PPUSH
 446: LD_STRING D1-Pow-4b
 448: PPUSH
 449: CALL_OW 88
// Say ( JMM , D1-JMM-5 ) ;
 453: LD_EXP 1
 457: PPUSH
 458: LD_STRING D1-JMM-5
 460: PPUSH
 461: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 465: LD_EXP 2
 469: PPUSH
 470: LD_STRING D1-Pow-5
 472: PPUSH
 473: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 477: LD_EXP 1
 481: PPUSH
 482: LD_STRING D1-JMM-6
 484: PPUSH
 485: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 489: LD_EXP 2
 493: PPUSH
 494: LD_STRING D1-Pow-6
 496: PPUSH
 497: CALL_OW 88
// ComMoveXY ( convoy , 78 , 3 ) ;
 501: LD_EXP 13
 505: PPUSH
 506: LD_INT 78
 508: PPUSH
 509: LD_INT 3
 511: PPUSH
 512: CALL_OW 111
// Say ( JMM , D1-JMM-7 ) ;
 516: LD_EXP 1
 520: PPUSH
 521: LD_STRING D1-JMM-7
 523: PPUSH
 524: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 528: LD_EXP 2
 532: PPUSH
 533: LD_STRING D1-Pow-7
 535: PPUSH
 536: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 540: LD_EXP 1
 544: PPUSH
 545: LD_STRING D1-JMM-8
 547: PPUSH
 548: CALL_OW 88
// if TestCharacters ( 08_Frank ) = 1 then
 552: LD_STRING 08_Frank
 554: PPUSH
 555: CALL_OW 28
 559: PUSH
 560: LD_INT 1
 562: EQUAL
 563: IFFALSE 633
// begin ComExitBuilding ( Kikuchi ) ;
 565: LD_EXP 3
 569: PPUSH
 570: CALL_OW 122
// wait ( 0 0$1 ) ;
 574: LD_INT 35
 576: PPUSH
 577: CALL_OW 67
// ComTurnUnit ( Kikuchi , JMM ) ;
 581: LD_EXP 3
 585: PPUSH
 586: LD_EXP 1
 590: PPUSH
 591: CALL_OW 119
// ComTurnUnit ( JMM , Kikuchi ) ;
 595: LD_EXP 1
 599: PPUSH
 600: LD_EXP 3
 604: PPUSH
 605: CALL_OW 119
// Say ( Kikuchi , D3b-Yam-1 ) ;
 609: LD_EXP 3
 613: PPUSH
 614: LD_STRING D3b-Yam-1
 616: PPUSH
 617: CALL_OW 88
// SaveCharacters ( Kikuchi , 10_Kikuchi ) ;
 621: LD_EXP 3
 625: PPUSH
 626: LD_STRING 10_Kikuchi
 628: PPUSH
 629: CALL_OW 38
// end ; SaveCharacters ( JMM , 10_JMM ) ;
 633: LD_EXP 1
 637: PPUSH
 638: LD_STRING 10_JMM
 640: PPUSH
 641: CALL_OW 38
// SaveCharacters ( FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary , Kikuchi ] , OthersIn10 ) ;
 645: LD_INT 11
 647: PPUSH
 648: LD_INT 22
 650: PUSH
 651: LD_INT 1
 653: PUSH
 654: EMPTY
 655: LIST
 656: LIST
 657: PUSH
 658: LD_INT 21
 660: PUSH
 661: LD_INT 1
 663: PUSH
 664: EMPTY
 665: LIST
 666: LIST
 667: PUSH
 668: EMPTY
 669: LIST
 670: LIST
 671: PPUSH
 672: CALL_OW 70
 676: PUSH
 677: LD_EXP 1
 681: PUSH
 682: LD_EXP 2
 686: PUSH
 687: LD_EXP 4
 691: PUSH
 692: LD_EXP 5
 696: PUSH
 697: LD_EXP 6
 701: PUSH
 702: LD_EXP 7
 706: PUSH
 707: LD_EXP 8
 711: PUSH
 712: LD_EXP 9
 716: PUSH
 717: LD_EXP 10
 721: PUSH
 722: LD_EXP 11
 726: PUSH
 727: LD_EXP 3
 731: PUSH
 732: EMPTY
 733: LIST
 734: LIST
 735: LIST
 736: LIST
 737: LIST
 738: LIST
 739: LIST
 740: LIST
 741: LIST
 742: LIST
 743: LIST
 744: DIFF
 745: PPUSH
 746: LD_STRING OthersIn10
 748: PPUSH
 749: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 753: LD_INT 10
 755: PPUSH
 756: LD_STRING %_cont
 758: PPUSH
 759: CALL_OW 340
// end ; end_of_file
 763: END
// export function PrepareHeroes ; var i ; begin
 764: LD_INT 0
 766: PPUSH
 767: PPUSH
// uc_side = 1 ;
 768: LD_ADDR_OWVAR 20
 772: PUSH
 773: LD_INT 1
 775: ST_TO_ADDR
// uc_nation = 1 ;
 776: LD_ADDR_OWVAR 21
 780: PUSH
 781: LD_INT 1
 783: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 784: LD_ADDR_EXP 1
 788: PUSH
 789: LD_STRING 09_JMM
 791: PPUSH
 792: LD_INT 1
 794: PPUSH
 795: CALL 4789 0 2
 799: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 800: LD_ADDR_EXP 2
 804: PUSH
 805: LD_STRING Powell
 807: PPUSH
 808: LD_INT 0
 810: PPUSH
 811: CALL 4789 0 2
 815: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 816: LD_ADDR_EXP 6
 820: PUSH
 821: LD_STRING 09_Bobby
 823: PPUSH
 824: LD_INT 1
 826: PPUSH
 827: CALL 4789 0 2
 831: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 832: LD_EXP 6
 836: PPUSH
 837: LD_INT 10
 839: PPUSH
 840: LD_INT 0
 842: PPUSH
 843: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
 847: LD_EXP 6
 851: PPUSH
 852: LD_INT 42
 854: PPUSH
 855: LD_INT 35
 857: PPUSH
 858: CALL_OW 118
// if IsPlaced ( Bobby ) then
 862: LD_EXP 6
 866: PPUSH
 867: CALL_OW 305
 871: IFFALSE 901
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
 873: LD_ADDR_EXP 15
 877: PUSH
 878: LD_EXP 15
 882: PUSH
 883: LD_EXP 6
 887: ADD
 888: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
 889: LD_EXP 6
 893: PPUSH
 894: LD_STRING 10_Bobby
 896: PPUSH
 897: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
 901: LD_EXP 6
 905: PPUSH
 906: CALL_OW 305
 910: NOT
 911: PUSH
 912: LD_EXP 4
 916: PPUSH
 917: CALL_OW 305
 921: NOT
 922: AND
 923: IFFALSE 1010
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
 925: LD_ADDR_EXP 4
 929: PUSH
 930: LD_STRING 08_Brown
 932: PPUSH
 933: LD_INT 1
 935: PPUSH
 936: CALL 4789 0 2
 940: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
 941: LD_EXP 4
 945: PPUSH
 946: LD_INT 10
 948: PPUSH
 949: LD_INT 0
 951: PPUSH
 952: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
 956: LD_EXP 4
 960: PPUSH
 961: LD_INT 42
 963: PPUSH
 964: LD_INT 35
 966: PPUSH
 967: CALL_OW 118
// if IsPlaced ( Brown ) then
 971: LD_EXP 4
 975: PPUSH
 976: CALL_OW 305
 980: IFFALSE 1010
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
 982: LD_ADDR_EXP 15
 986: PUSH
 987: LD_EXP 15
 991: PUSH
 992: LD_EXP 4
 996: ADD
 997: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
 998: LD_EXP 4
1002: PPUSH
1003: LD_STRING 10_Brown
1005: PPUSH
1006: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1010: LD_EXP 6
1014: PPUSH
1015: CALL_OW 305
1019: NOT
1020: PUSH
1021: LD_EXP 4
1025: PPUSH
1026: CALL_OW 305
1030: NOT
1031: AND
1032: PUSH
1033: LD_EXP 5
1037: PPUSH
1038: CALL_OW 305
1042: NOT
1043: AND
1044: IFFALSE 1131
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1046: LD_ADDR_EXP 5
1050: PUSH
1051: LD_STRING 08_Donaldson
1053: PPUSH
1054: LD_INT 1
1056: PPUSH
1057: CALL 4789 0 2
1061: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1062: LD_EXP 5
1066: PPUSH
1067: LD_INT 10
1069: PPUSH
1070: LD_INT 0
1072: PPUSH
1073: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1077: LD_EXP 5
1081: PPUSH
1082: LD_INT 42
1084: PPUSH
1085: LD_INT 35
1087: PPUSH
1088: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1092: LD_EXP 5
1096: PPUSH
1097: CALL_OW 305
1101: IFFALSE 1131
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1103: LD_ADDR_EXP 15
1107: PUSH
1108: LD_EXP 15
1112: PUSH
1113: LD_EXP 5
1117: ADD
1118: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1119: LD_EXP 5
1123: PPUSH
1124: LD_STRING 10_Donaldson
1126: PPUSH
1127: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1131: LD_EXP 6
1135: PPUSH
1136: CALL_OW 305
1140: NOT
1141: PUSH
1142: LD_EXP 4
1146: PPUSH
1147: CALL_OW 305
1151: NOT
1152: AND
1153: PUSH
1154: LD_EXP 5
1158: PPUSH
1159: CALL_OW 305
1163: NOT
1164: AND
1165: PUSH
1166: LD_EXP 9
1170: PPUSH
1171: CALL_OW 305
1175: NOT
1176: AND
1177: IFFALSE 1264
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1179: LD_ADDR_EXP 9
1183: PUSH
1184: LD_STRING 08_Frank
1186: PPUSH
1187: LD_INT 1
1189: PPUSH
1190: CALL 4789 0 2
1194: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1195: LD_EXP 9
1199: PPUSH
1200: LD_INT 10
1202: PPUSH
1203: LD_INT 0
1205: PPUSH
1206: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1210: LD_EXP 9
1214: PPUSH
1215: LD_INT 42
1217: PPUSH
1218: LD_INT 35
1220: PPUSH
1221: CALL_OW 118
// if IsPlaced ( Frank ) then
1225: LD_EXP 9
1229: PPUSH
1230: CALL_OW 305
1234: IFFALSE 1264
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1236: LD_ADDR_EXP 15
1240: PUSH
1241: LD_EXP 15
1245: PUSH
1246: LD_EXP 9
1250: ADD
1251: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1252: LD_EXP 9
1256: PPUSH
1257: LD_STRING 10_Frank
1259: PPUSH
1260: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1264: LD_EXP 6
1268: PPUSH
1269: CALL_OW 305
1273: NOT
1274: PUSH
1275: LD_EXP 4
1279: PPUSH
1280: CALL_OW 305
1284: NOT
1285: AND
1286: PUSH
1287: LD_EXP 5
1291: PPUSH
1292: CALL_OW 305
1296: NOT
1297: AND
1298: PUSH
1299: LD_EXP 9
1303: PPUSH
1304: CALL_OW 305
1308: NOT
1309: AND
1310: PUSH
1311: LD_EXP 10
1315: PPUSH
1316: CALL_OW 305
1320: NOT
1321: AND
1322: IFFALSE 1409
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1324: LD_ADDR_EXP 10
1328: PUSH
1329: LD_STRING 09_Houten
1331: PPUSH
1332: LD_INT 1
1334: PPUSH
1335: CALL 4789 0 2
1339: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1340: LD_EXP 10
1344: PPUSH
1345: LD_INT 10
1347: PPUSH
1348: LD_INT 0
1350: PPUSH
1351: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1355: LD_EXP 10
1359: PPUSH
1360: LD_INT 42
1362: PPUSH
1363: LD_INT 35
1365: PPUSH
1366: CALL_OW 118
// if IsPlaced ( Houten ) then
1370: LD_EXP 10
1374: PPUSH
1375: CALL_OW 305
1379: IFFALSE 1409
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1381: LD_ADDR_EXP 15
1385: PUSH
1386: LD_EXP 15
1390: PUSH
1391: LD_EXP 10
1395: ADD
1396: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1397: LD_EXP 10
1401: PPUSH
1402: LD_STRING 10_Houten
1404: PPUSH
1405: CALL_OW 38
// end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1409: LD_ADDR_EXP 7
1413: PUSH
1414: LD_STRING 09_Cyrus
1416: PPUSH
1417: LD_INT 1
1419: PPUSH
1420: CALL 4789 0 2
1424: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1425: LD_EXP 7
1429: PPUSH
1430: LD_INT 10
1432: PPUSH
1433: LD_INT 0
1435: PPUSH
1436: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1440: LD_EXP 7
1444: PPUSH
1445: LD_INT 42
1447: PPUSH
1448: LD_INT 35
1450: PPUSH
1451: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1455: LD_EXP 7
1459: PPUSH
1460: CALL_OW 305
1464: IFFALSE 1494
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1466: LD_ADDR_EXP 15
1470: PUSH
1471: LD_EXP 15
1475: PUSH
1476: LD_EXP 7
1480: ADD
1481: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1482: LD_EXP 7
1486: PPUSH
1487: LD_STRING 10_Cyrus
1489: PPUSH
1490: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1494: LD_EXP 7
1498: PPUSH
1499: CALL_OW 305
1503: NOT
1504: PUSH
1505: LD_EXP 4
1509: PPUSH
1510: CALL_OW 305
1514: NOT
1515: AND
1516: IFFALSE 1603
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1518: LD_ADDR_EXP 4
1522: PUSH
1523: LD_STRING 08_Brown
1525: PPUSH
1526: LD_INT 1
1528: PPUSH
1529: CALL 4789 0 2
1533: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1534: LD_EXP 4
1538: PPUSH
1539: LD_INT 10
1541: PPUSH
1542: LD_INT 0
1544: PPUSH
1545: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1549: LD_EXP 4
1553: PPUSH
1554: LD_INT 42
1556: PPUSH
1557: LD_INT 35
1559: PPUSH
1560: CALL_OW 118
// if IsPlaced ( Brown ) then
1564: LD_EXP 4
1568: PPUSH
1569: CALL_OW 305
1573: IFFALSE 1603
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1575: LD_ADDR_EXP 15
1579: PUSH
1580: LD_EXP 15
1584: PUSH
1585: LD_EXP 4
1589: ADD
1590: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1591: LD_EXP 4
1595: PPUSH
1596: LD_STRING 10_Brown
1598: PPUSH
1599: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1603: LD_EXP 7
1607: PPUSH
1608: CALL_OW 305
1612: NOT
1613: PUSH
1614: LD_EXP 4
1618: PPUSH
1619: CALL_OW 305
1623: NOT
1624: AND
1625: PUSH
1626: LD_EXP 5
1630: PPUSH
1631: CALL_OW 305
1635: NOT
1636: AND
1637: IFFALSE 1724
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1639: LD_ADDR_EXP 5
1643: PUSH
1644: LD_STRING 08_Donaldson
1646: PPUSH
1647: LD_INT 1
1649: PPUSH
1650: CALL 4789 0 2
1654: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1655: LD_EXP 5
1659: PPUSH
1660: LD_INT 10
1662: PPUSH
1663: LD_INT 0
1665: PPUSH
1666: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1670: LD_EXP 5
1674: PPUSH
1675: LD_INT 42
1677: PPUSH
1678: LD_INT 35
1680: PPUSH
1681: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1685: LD_EXP 5
1689: PPUSH
1690: CALL_OW 305
1694: IFFALSE 1724
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1696: LD_ADDR_EXP 15
1700: PUSH
1701: LD_EXP 15
1705: PUSH
1706: LD_EXP 5
1710: ADD
1711: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1712: LD_EXP 5
1716: PPUSH
1717: LD_STRING 10_Donaldson
1719: PPUSH
1720: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1724: LD_EXP 7
1728: PPUSH
1729: CALL_OW 305
1733: NOT
1734: PUSH
1735: LD_EXP 4
1739: PPUSH
1740: CALL_OW 305
1744: NOT
1745: AND
1746: PUSH
1747: LD_EXP 5
1751: PPUSH
1752: CALL_OW 305
1756: NOT
1757: AND
1758: PUSH
1759: LD_EXP 9
1763: PPUSH
1764: CALL_OW 305
1768: NOT
1769: AND
1770: IFFALSE 1857
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1772: LD_ADDR_EXP 9
1776: PUSH
1777: LD_STRING 08_Frank
1779: PPUSH
1780: LD_INT 1
1782: PPUSH
1783: CALL 4789 0 2
1787: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1788: LD_EXP 9
1792: PPUSH
1793: LD_INT 10
1795: PPUSH
1796: LD_INT 0
1798: PPUSH
1799: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1803: LD_EXP 9
1807: PPUSH
1808: LD_INT 42
1810: PPUSH
1811: LD_INT 35
1813: PPUSH
1814: CALL_OW 118
// if IsPlaced ( Frank ) then
1818: LD_EXP 9
1822: PPUSH
1823: CALL_OW 305
1827: IFFALSE 1857
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1829: LD_ADDR_EXP 15
1833: PUSH
1834: LD_EXP 15
1838: PUSH
1839: LD_EXP 9
1843: ADD
1844: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1845: LD_EXP 9
1849: PPUSH
1850: LD_STRING 10_Frank
1852: PPUSH
1853: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1857: LD_EXP 7
1861: PPUSH
1862: CALL_OW 305
1866: NOT
1867: PUSH
1868: LD_EXP 4
1872: PPUSH
1873: CALL_OW 305
1877: NOT
1878: AND
1879: PUSH
1880: LD_EXP 5
1884: PPUSH
1885: CALL_OW 305
1889: NOT
1890: AND
1891: PUSH
1892: LD_EXP 9
1896: PPUSH
1897: CALL_OW 305
1901: NOT
1902: AND
1903: PUSH
1904: LD_EXP 10
1908: PPUSH
1909: CALL_OW 305
1913: NOT
1914: AND
1915: IFFALSE 2002
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1917: LD_ADDR_EXP 10
1921: PUSH
1922: LD_STRING 09_Houten
1924: PPUSH
1925: LD_INT 1
1927: PPUSH
1928: CALL 4789 0 2
1932: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1933: LD_EXP 10
1937: PPUSH
1938: LD_INT 10
1940: PPUSH
1941: LD_INT 0
1943: PPUSH
1944: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1948: LD_EXP 10
1952: PPUSH
1953: LD_INT 42
1955: PPUSH
1956: LD_INT 35
1958: PPUSH
1959: CALL_OW 118
// if IsPlaced ( Houten ) then
1963: LD_EXP 10
1967: PPUSH
1968: CALL_OW 305
1972: IFFALSE 2002
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1974: LD_ADDR_EXP 15
1978: PUSH
1979: LD_EXP 15
1983: PUSH
1984: LD_EXP 10
1988: ADD
1989: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1990: LD_EXP 10
1994: PPUSH
1995: LD_STRING 10_Houten
1997: PPUSH
1998: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
2002: LD_ADDR_EXP 8
2006: PUSH
2007: LD_STRING 08_Lisa
2009: PPUSH
2010: LD_INT 1
2012: PPUSH
2013: CALL 4789 0 2
2017: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2018: LD_EXP 8
2022: PPUSH
2023: LD_INT 10
2025: PPUSH
2026: LD_INT 0
2028: PPUSH
2029: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2033: LD_EXP 8
2037: PPUSH
2038: LD_INT 42
2040: PPUSH
2041: LD_INT 35
2043: PPUSH
2044: CALL_OW 118
// if IsPlaced ( Lisa ) then
2048: LD_EXP 8
2052: PPUSH
2053: CALL_OW 305
2057: IFFALSE 2087
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2059: LD_ADDR_EXP 15
2063: PUSH
2064: LD_EXP 15
2068: PUSH
2069: LD_EXP 8
2073: ADD
2074: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2075: LD_EXP 8
2079: PPUSH
2080: LD_STRING 10_Lisa
2082: PPUSH
2083: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2087: LD_EXP 8
2091: PPUSH
2092: CALL_OW 305
2096: NOT
2097: PUSH
2098: LD_EXP 4
2102: PPUSH
2103: CALL_OW 305
2107: NOT
2108: AND
2109: IFFALSE 2196
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2111: LD_ADDR_EXP 4
2115: PUSH
2116: LD_STRING 08_Brown
2118: PPUSH
2119: LD_INT 1
2121: PPUSH
2122: CALL 4789 0 2
2126: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2127: LD_EXP 4
2131: PPUSH
2132: LD_INT 10
2134: PPUSH
2135: LD_INT 0
2137: PPUSH
2138: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2142: LD_EXP 4
2146: PPUSH
2147: LD_INT 42
2149: PPUSH
2150: LD_INT 35
2152: PPUSH
2153: CALL_OW 118
// if IsPlaced ( Brown ) then
2157: LD_EXP 4
2161: PPUSH
2162: CALL_OW 305
2166: IFFALSE 2196
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2168: LD_ADDR_EXP 15
2172: PUSH
2173: LD_EXP 15
2177: PUSH
2178: LD_EXP 4
2182: ADD
2183: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2184: LD_EXP 4
2188: PPUSH
2189: LD_STRING 10_Brown
2191: PPUSH
2192: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2196: LD_EXP 8
2200: PPUSH
2201: CALL_OW 305
2205: NOT
2206: PUSH
2207: LD_EXP 4
2211: PPUSH
2212: CALL_OW 305
2216: NOT
2217: AND
2218: PUSH
2219: LD_EXP 5
2223: PPUSH
2224: CALL_OW 305
2228: NOT
2229: AND
2230: IFFALSE 2317
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2232: LD_ADDR_EXP 5
2236: PUSH
2237: LD_STRING 08_Donaldson
2239: PPUSH
2240: LD_INT 1
2242: PPUSH
2243: CALL 4789 0 2
2247: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2248: LD_EXP 5
2252: PPUSH
2253: LD_INT 10
2255: PPUSH
2256: LD_INT 0
2258: PPUSH
2259: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2263: LD_EXP 5
2267: PPUSH
2268: LD_INT 42
2270: PPUSH
2271: LD_INT 35
2273: PPUSH
2274: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2278: LD_EXP 5
2282: PPUSH
2283: CALL_OW 305
2287: IFFALSE 2317
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2289: LD_ADDR_EXP 15
2293: PUSH
2294: LD_EXP 15
2298: PUSH
2299: LD_EXP 5
2303: ADD
2304: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2305: LD_EXP 5
2309: PPUSH
2310: LD_STRING 10_Donaldson
2312: PPUSH
2313: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2317: LD_EXP 8
2321: PPUSH
2322: CALL_OW 305
2326: NOT
2327: PUSH
2328: LD_EXP 4
2332: PPUSH
2333: CALL_OW 305
2337: NOT
2338: AND
2339: PUSH
2340: LD_EXP 5
2344: PPUSH
2345: CALL_OW 305
2349: NOT
2350: AND
2351: PUSH
2352: LD_EXP 9
2356: PPUSH
2357: CALL_OW 305
2361: NOT
2362: AND
2363: IFFALSE 2450
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2365: LD_ADDR_EXP 9
2369: PUSH
2370: LD_STRING 08_Frank
2372: PPUSH
2373: LD_INT 1
2375: PPUSH
2376: CALL 4789 0 2
2380: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2381: LD_EXP 9
2385: PPUSH
2386: LD_INT 10
2388: PPUSH
2389: LD_INT 0
2391: PPUSH
2392: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2396: LD_EXP 9
2400: PPUSH
2401: LD_INT 42
2403: PPUSH
2404: LD_INT 35
2406: PPUSH
2407: CALL_OW 118
// if IsPlaced ( Frank ) then
2411: LD_EXP 9
2415: PPUSH
2416: CALL_OW 305
2420: IFFALSE 2450
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2422: LD_ADDR_EXP 15
2426: PUSH
2427: LD_EXP 15
2431: PUSH
2432: LD_EXP 9
2436: ADD
2437: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2438: LD_EXP 9
2442: PPUSH
2443: LD_STRING 10_Frank
2445: PPUSH
2446: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2450: LD_EXP 8
2454: PPUSH
2455: CALL_OW 305
2459: NOT
2460: PUSH
2461: LD_EXP 4
2465: PPUSH
2466: CALL_OW 305
2470: NOT
2471: AND
2472: PUSH
2473: LD_EXP 5
2477: PPUSH
2478: CALL_OW 305
2482: NOT
2483: AND
2484: PUSH
2485: LD_EXP 9
2489: PPUSH
2490: CALL_OW 305
2494: NOT
2495: AND
2496: PUSH
2497: LD_EXP 10
2501: PPUSH
2502: CALL_OW 305
2506: NOT
2507: AND
2508: IFFALSE 2595
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2510: LD_ADDR_EXP 10
2514: PUSH
2515: LD_STRING 09_Houten
2517: PPUSH
2518: LD_INT 1
2520: PPUSH
2521: CALL 4789 0 2
2525: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2526: LD_EXP 10
2530: PPUSH
2531: LD_INT 10
2533: PPUSH
2534: LD_INT 0
2536: PPUSH
2537: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2541: LD_EXP 10
2545: PPUSH
2546: LD_INT 42
2548: PPUSH
2549: LD_INT 35
2551: PPUSH
2552: CALL_OW 118
// if IsPlaced ( Houten ) then
2556: LD_EXP 10
2560: PPUSH
2561: CALL_OW 305
2565: IFFALSE 2595
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2567: LD_ADDR_EXP 15
2571: PUSH
2572: LD_EXP 15
2576: PUSH
2577: LD_EXP 10
2581: ADD
2582: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2583: LD_EXP 10
2587: PPUSH
2588: LD_STRING 10_Houten
2590: PPUSH
2591: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2595: LD_ADDR_EXP 11
2599: PUSH
2600: LD_STRING 09_Gary
2602: PPUSH
2603: LD_INT 1
2605: PPUSH
2606: CALL 4789 0 2
2610: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2611: LD_EXP 11
2615: PPUSH
2616: LD_INT 10
2618: PPUSH
2619: LD_INT 0
2621: PPUSH
2622: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2626: LD_EXP 11
2630: PPUSH
2631: LD_INT 42
2633: PPUSH
2634: LD_INT 35
2636: PPUSH
2637: CALL_OW 118
// if IsPlaced ( Gary ) then
2641: LD_EXP 11
2645: PPUSH
2646: CALL_OW 305
2650: IFFALSE 2680
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2652: LD_ADDR_EXP 15
2656: PUSH
2657: LD_EXP 15
2661: PUSH
2662: LD_EXP 11
2666: ADD
2667: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2668: LD_EXP 11
2672: PPUSH
2673: LD_STRING 10_Gary
2675: PPUSH
2676: CALL_OW 38
// end ; if not IsPlaced ( Houten ) and not IsPlaced ( Brown ) then
2680: LD_EXP 10
2684: PPUSH
2685: CALL_OW 305
2689: NOT
2690: PUSH
2691: LD_EXP 4
2695: PPUSH
2696: CALL_OW 305
2700: NOT
2701: AND
2702: IFFALSE 2789
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2704: LD_ADDR_EXP 4
2708: PUSH
2709: LD_STRING 08_Brown
2711: PPUSH
2712: LD_INT 1
2714: PPUSH
2715: CALL 4789 0 2
2719: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2720: LD_EXP 4
2724: PPUSH
2725: LD_INT 10
2727: PPUSH
2728: LD_INT 0
2730: PPUSH
2731: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2735: LD_EXP 4
2739: PPUSH
2740: LD_INT 42
2742: PPUSH
2743: LD_INT 35
2745: PPUSH
2746: CALL_OW 118
// if IsPlaced ( Brown ) then
2750: LD_EXP 4
2754: PPUSH
2755: CALL_OW 305
2759: IFFALSE 2789
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2761: LD_ADDR_EXP 15
2765: PUSH
2766: LD_EXP 15
2770: PUSH
2771: LD_EXP 4
2775: ADD
2776: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2777: LD_EXP 4
2781: PPUSH
2782: LD_STRING 10_Brown
2784: PPUSH
2785: CALL_OW 38
// end ; end ; if not IsPlaced ( Houten ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2789: LD_EXP 10
2793: PPUSH
2794: CALL_OW 305
2798: NOT
2799: PUSH
2800: LD_EXP 4
2804: PPUSH
2805: CALL_OW 305
2809: NOT
2810: AND
2811: PUSH
2812: LD_EXP 5
2816: PPUSH
2817: CALL_OW 305
2821: NOT
2822: AND
2823: IFFALSE 2910
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2825: LD_ADDR_EXP 5
2829: PUSH
2830: LD_STRING 08_Donaldson
2832: PPUSH
2833: LD_INT 1
2835: PPUSH
2836: CALL 4789 0 2
2840: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2841: LD_EXP 5
2845: PPUSH
2846: LD_INT 10
2848: PPUSH
2849: LD_INT 0
2851: PPUSH
2852: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2856: LD_EXP 5
2860: PPUSH
2861: LD_INT 42
2863: PPUSH
2864: LD_INT 35
2866: PPUSH
2867: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2871: LD_EXP 5
2875: PPUSH
2876: CALL_OW 305
2880: IFFALSE 2910
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2882: LD_ADDR_EXP 15
2886: PUSH
2887: LD_EXP 15
2891: PUSH
2892: LD_EXP 5
2896: ADD
2897: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2898: LD_EXP 5
2902: PPUSH
2903: LD_STRING 10_Donaldson
2905: PPUSH
2906: CALL_OW 38
// end ; end ; if not IsPlaced ( Houten ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2910: LD_EXP 10
2914: PPUSH
2915: CALL_OW 305
2919: NOT
2920: PUSH
2921: LD_EXP 4
2925: PPUSH
2926: CALL_OW 305
2930: NOT
2931: AND
2932: PUSH
2933: LD_EXP 5
2937: PPUSH
2938: CALL_OW 305
2942: NOT
2943: AND
2944: PUSH
2945: LD_EXP 9
2949: PPUSH
2950: CALL_OW 305
2954: NOT
2955: AND
2956: IFFALSE 3043
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2958: LD_ADDR_EXP 9
2962: PUSH
2963: LD_STRING 08_Frank
2965: PPUSH
2966: LD_INT 1
2968: PPUSH
2969: CALL 4789 0 2
2973: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2974: LD_EXP 9
2978: PPUSH
2979: LD_INT 10
2981: PPUSH
2982: LD_INT 0
2984: PPUSH
2985: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2989: LD_EXP 9
2993: PPUSH
2994: LD_INT 42
2996: PPUSH
2997: LD_INT 35
2999: PPUSH
3000: CALL_OW 118
// if IsPlaced ( Frank ) then
3004: LD_EXP 9
3008: PPUSH
3009: CALL_OW 305
3013: IFFALSE 3043
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
3015: LD_ADDR_EXP 15
3019: PUSH
3020: LD_EXP 15
3024: PUSH
3025: LD_EXP 9
3029: ADD
3030: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3031: LD_EXP 9
3035: PPUSH
3036: LD_STRING 10_Frank
3038: PPUSH
3039: CALL_OW 38
// end ; end ; if not IsPlaced ( Houten ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3043: LD_EXP 10
3047: PPUSH
3048: CALL_OW 305
3052: NOT
3053: PUSH
3054: LD_EXP 4
3058: PPUSH
3059: CALL_OW 305
3063: NOT
3064: AND
3065: PUSH
3066: LD_EXP 5
3070: PPUSH
3071: CALL_OW 305
3075: NOT
3076: AND
3077: PUSH
3078: LD_EXP 9
3082: PPUSH
3083: CALL_OW 305
3087: NOT
3088: AND
3089: PUSH
3090: LD_EXP 10
3094: PPUSH
3095: CALL_OW 305
3099: NOT
3100: AND
3101: IFFALSE 3188
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3103: LD_ADDR_EXP 10
3107: PUSH
3108: LD_STRING 09_Houten
3110: PPUSH
3111: LD_INT 1
3113: PPUSH
3114: CALL 4789 0 2
3118: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3119: LD_EXP 10
3123: PPUSH
3124: LD_INT 10
3126: PPUSH
3127: LD_INT 0
3129: PPUSH
3130: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3134: LD_EXP 10
3138: PPUSH
3139: LD_INT 42
3141: PPUSH
3142: LD_INT 35
3144: PPUSH
3145: CALL_OW 118
// if IsPlaced ( Houten ) then
3149: LD_EXP 10
3153: PPUSH
3154: CALL_OW 305
3158: IFFALSE 3188
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3160: LD_ADDR_EXP 15
3164: PUSH
3165: LD_EXP 15
3169: PUSH
3170: LD_EXP 10
3174: ADD
3175: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3176: LD_EXP 10
3180: PPUSH
3181: LD_STRING 10_Houten
3183: PPUSH
3184: CALL_OW 38
// end ; end ; if TestCharacters ( 08_Frank ) = 1 then
3188: LD_STRING 08_Frank
3190: PPUSH
3191: CALL_OW 28
3195: PUSH
3196: LD_INT 1
3198: EQUAL
3199: IFFALSE 3229
// begin Kikuchi = PrepareUnit ( Yamoko , false ) ;
3201: LD_ADDR_EXP 3
3205: PUSH
3206: LD_STRING Yamoko
3208: PPUSH
3209: LD_INT 0
3211: PPUSH
3212: CALL 4789 0 2
3216: ST_TO_ADDR
// PlaceHumanInUnit ( Kikuchi , am_bar ) ;
3217: LD_EXP 3
3221: PPUSH
3222: LD_INT 58
3224: PPUSH
3225: CALL_OW 52
// end ; siberite = LoadVariable ( 09_SibRes , 0 ) ;
3229: LD_ADDR_EXP 17
3233: PUSH
3234: LD_STRING 09_SibRes
3236: PPUSH
3237: LD_INT 0
3239: PPUSH
3240: CALL_OW 30
3244: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3245: LD_ADDR_EXP 12
3249: PUSH
3250: LD_STRING 08_other_survivors
3252: PPUSH
3253: CALL_OW 31
3257: ST_TO_ADDR
// if siberite >= 200 then
3258: LD_EXP 17
3262: PUSH
3263: LD_INT 200
3265: GREATEREQUAL
3266: IFFALSE 4127
// begin if not IsPlaced ( Brown ) then
3268: LD_EXP 4
3272: PPUSH
3273: CALL_OW 305
3277: NOT
3278: IFFALSE 3365
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3280: LD_ADDR_EXP 4
3284: PUSH
3285: LD_STRING 08_Brown
3287: PPUSH
3288: LD_INT 1
3290: PPUSH
3291: CALL 4789 0 2
3295: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3296: LD_EXP 4
3300: PPUSH
3301: LD_INT 11
3303: PPUSH
3304: LD_INT 0
3306: PPUSH
3307: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3311: LD_EXP 4
3315: PPUSH
3316: LD_INT 42
3318: PPUSH
3319: LD_INT 35
3321: PPUSH
3322: CALL_OW 118
// if IsPlaced ( Brown ) then
3326: LD_EXP 4
3330: PPUSH
3331: CALL_OW 305
3335: IFFALSE 3365
// begin addHeroesTab = addHeroesTab ^ Brown ;
3337: LD_ADDR_EXP 16
3341: PUSH
3342: LD_EXP 16
3346: PUSH
3347: LD_EXP 4
3351: ADD
3352: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3353: LD_EXP 4
3357: PPUSH
3358: LD_STRING 10_Brown
3360: PPUSH
3361: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3365: LD_EXP 4
3369: PPUSH
3370: CALL_OW 305
3374: NOT
3375: PUSH
3376: LD_EXP 5
3380: PPUSH
3381: CALL_OW 305
3385: NOT
3386: AND
3387: IFFALSE 3474
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3389: LD_ADDR_EXP 5
3393: PUSH
3394: LD_STRING 08_Donaldson
3396: PPUSH
3397: LD_INT 1
3399: PPUSH
3400: CALL 4789 0 2
3404: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3405: LD_EXP 5
3409: PPUSH
3410: LD_INT 11
3412: PPUSH
3413: LD_INT 0
3415: PPUSH
3416: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3420: LD_EXP 5
3424: PPUSH
3425: LD_INT 42
3427: PPUSH
3428: LD_INT 35
3430: PPUSH
3431: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3435: LD_EXP 5
3439: PPUSH
3440: CALL_OW 305
3444: IFFALSE 3474
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3446: LD_ADDR_EXP 16
3450: PUSH
3451: LD_EXP 16
3455: PUSH
3456: LD_EXP 5
3460: ADD
3461: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3462: LD_EXP 5
3466: PPUSH
3467: LD_STRING 10_Donaldson
3469: PPUSH
3470: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3474: LD_EXP 4
3478: PPUSH
3479: CALL_OW 305
3483: NOT
3484: PUSH
3485: LD_EXP 9
3489: PPUSH
3490: CALL_OW 305
3494: NOT
3495: AND
3496: IFFALSE 3583
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3498: LD_ADDR_EXP 9
3502: PUSH
3503: LD_STRING 08_Frank
3505: PPUSH
3506: LD_INT 1
3508: PPUSH
3509: CALL 4789 0 2
3513: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3514: LD_EXP 9
3518: PPUSH
3519: LD_INT 11
3521: PPUSH
3522: LD_INT 0
3524: PPUSH
3525: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3529: LD_EXP 9
3533: PPUSH
3534: LD_INT 42
3536: PPUSH
3537: LD_INT 35
3539: PPUSH
3540: CALL_OW 118
// if IsPlaced ( Frank ) then
3544: LD_EXP 9
3548: PPUSH
3549: CALL_OW 305
3553: IFFALSE 3583
// begin addHeroesTab = addHeroesTab ^ Frank ;
3555: LD_ADDR_EXP 16
3559: PUSH
3560: LD_EXP 16
3564: PUSH
3565: LD_EXP 9
3569: ADD
3570: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3571: LD_EXP 9
3575: PPUSH
3576: LD_STRING 10_Frank
3578: PPUSH
3579: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3583: LD_EXP 4
3587: PPUSH
3588: CALL_OW 305
3592: NOT
3593: PUSH
3594: LD_EXP 10
3598: PPUSH
3599: CALL_OW 305
3603: NOT
3604: AND
3605: IFFALSE 3694
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3607: LD_ADDR_EXP 10
3611: PUSH
3612: LD_STRING 09_Houten
3614: PPUSH
3615: LD_INT 1
3617: PPUSH
3618: CALL 4789 0 2
3622: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3623: LD_EXP 10
3627: PPUSH
3628: LD_INT 11
3630: PPUSH
3631: LD_INT 0
3633: PPUSH
3634: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3638: LD_EXP 10
3642: PPUSH
3643: LD_INT 42
3645: PPUSH
3646: LD_INT 35
3648: PPUSH
3649: CALL_OW 118
// if IsPlaced ( Houten ) then
3653: LD_EXP 10
3657: PPUSH
3658: CALL_OW 305
3662: IFFALSE 3692
// begin addHeroesTab = addHeroesTab ^ Houten ;
3664: LD_ADDR_EXP 16
3668: PUSH
3669: LD_EXP 16
3673: PUSH
3674: LD_EXP 10
3678: ADD
3679: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3680: LD_EXP 10
3684: PPUSH
3685: LD_STRING 10_Houten
3687: PPUSH
3688: CALL_OW 38
// end ; end else
3692: GO 3752
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3694: LD_EXP 12
3698: PUSH
3699: LD_INT 1
3701: ARRAY
3702: PPUSH
3703: LD_INT 11
3705: PPUSH
3706: LD_INT 0
3708: PPUSH
3709: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3713: LD_EXP 12
3717: PUSH
3718: LD_INT 1
3720: ARRAY
3721: PPUSH
3722: LD_INT 42
3724: PPUSH
3725: LD_INT 35
3727: PPUSH
3728: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
3732: LD_ADDR_EXP 16
3736: PUSH
3737: LD_EXP 16
3741: PUSH
3742: LD_EXP 12
3746: PUSH
3747: LD_INT 1
3749: ARRAY
3750: ADD
3751: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
3752: LD_EXP 5
3756: PPUSH
3757: CALL_OW 305
3761: NOT
3762: IFFALSE 3849
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3764: LD_ADDR_EXP 5
3768: PUSH
3769: LD_STRING 08_Donaldson
3771: PPUSH
3772: LD_INT 1
3774: PPUSH
3775: CALL 4789 0 2
3779: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3780: LD_EXP 5
3784: PPUSH
3785: LD_INT 11
3787: PPUSH
3788: LD_INT 0
3790: PPUSH
3791: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3795: LD_EXP 5
3799: PPUSH
3800: LD_INT 42
3802: PPUSH
3803: LD_INT 35
3805: PPUSH
3806: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3810: LD_EXP 5
3814: PPUSH
3815: CALL_OW 305
3819: IFFALSE 3849
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3821: LD_ADDR_EXP 16
3825: PUSH
3826: LD_EXP 16
3830: PUSH
3831: LD_EXP 5
3835: ADD
3836: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3837: LD_EXP 5
3841: PPUSH
3842: LD_STRING 10_Donaldson
3844: PPUSH
3845: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
3849: LD_EXP 5
3853: PPUSH
3854: CALL_OW 305
3858: NOT
3859: PUSH
3860: LD_EXP 9
3864: PPUSH
3865: CALL_OW 305
3869: NOT
3870: AND
3871: IFFALSE 3958
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3873: LD_ADDR_EXP 9
3877: PUSH
3878: LD_STRING 08_Frank
3880: PPUSH
3881: LD_INT 1
3883: PPUSH
3884: CALL 4789 0 2
3888: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3889: LD_EXP 9
3893: PPUSH
3894: LD_INT 11
3896: PPUSH
3897: LD_INT 0
3899: PPUSH
3900: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3904: LD_EXP 9
3908: PPUSH
3909: LD_INT 42
3911: PPUSH
3912: LD_INT 35
3914: PPUSH
3915: CALL_OW 118
// if IsPlaced ( Frank ) then
3919: LD_EXP 9
3923: PPUSH
3924: CALL_OW 305
3928: IFFALSE 3958
// begin addHeroesTab = addHeroesTab ^ Frank ;
3930: LD_ADDR_EXP 16
3934: PUSH
3935: LD_EXP 16
3939: PUSH
3940: LD_EXP 9
3944: ADD
3945: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3946: LD_EXP 9
3950: PPUSH
3951: LD_STRING 10_Frank
3953: PPUSH
3954: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
3958: LD_EXP 5
3962: PPUSH
3963: CALL_OW 305
3967: NOT
3968: PUSH
3969: LD_EXP 10
3973: PPUSH
3974: CALL_OW 305
3978: NOT
3979: AND
3980: IFFALSE 4069
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3982: LD_ADDR_EXP 10
3986: PUSH
3987: LD_STRING 09_Houten
3989: PPUSH
3990: LD_INT 1
3992: PPUSH
3993: CALL 4789 0 2
3997: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3998: LD_EXP 10
4002: PPUSH
4003: LD_INT 11
4005: PPUSH
4006: LD_INT 0
4008: PPUSH
4009: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4013: LD_EXP 10
4017: PPUSH
4018: LD_INT 42
4020: PPUSH
4021: LD_INT 35
4023: PPUSH
4024: CALL_OW 118
// if IsPlaced ( Houten ) then
4028: LD_EXP 10
4032: PPUSH
4033: CALL_OW 305
4037: IFFALSE 4067
// begin addHeroesTab = addHeroesTab ^ Houten ;
4039: LD_ADDR_EXP 16
4043: PUSH
4044: LD_EXP 16
4048: PUSH
4049: LD_EXP 10
4053: ADD
4054: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4055: LD_EXP 10
4059: PPUSH
4060: LD_STRING 10_Houten
4062: PPUSH
4063: CALL_OW 38
// end ; end else
4067: GO 4127
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
4069: LD_EXP 12
4073: PUSH
4074: LD_INT 2
4076: ARRAY
4077: PPUSH
4078: LD_INT 11
4080: PPUSH
4081: LD_INT 0
4083: PPUSH
4084: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
4088: LD_EXP 12
4092: PUSH
4093: LD_INT 2
4095: ARRAY
4096: PPUSH
4097: LD_INT 42
4099: PPUSH
4100: LD_INT 35
4102: PPUSH
4103: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 2 ] ;
4107: LD_ADDR_EXP 16
4111: PUSH
4112: LD_EXP 16
4116: PUSH
4117: LD_EXP 12
4121: PUSH
4122: LD_INT 2
4124: ARRAY
4125: ADD
4126: ST_TO_ADDR
// end ; end ; if siberite > 201 then
4127: LD_EXP 17
4131: PUSH
4132: LD_INT 201
4134: GREATER
4135: IFFALSE 4227
// begin for i := 1 to siberite / 100 do
4137: LD_ADDR_VAR 0 2
4141: PUSH
4142: DOUBLE
4143: LD_INT 1
4145: DEC
4146: ST_TO_ADDR
4147: LD_EXP 17
4151: PUSH
4152: LD_INT 100
4154: DIVREAL
4155: PUSH
4156: FOR_TO
4157: IFFALSE 4225
// begin PlaceUnitArea ( others08 [ i ] , addHeroes , false ) ;
4159: LD_EXP 12
4163: PUSH
4164: LD_VAR 0 2
4168: ARRAY
4169: PPUSH
4170: LD_INT 11
4172: PPUSH
4173: LD_INT 0
4175: PPUSH
4176: CALL_OW 49
// ComTurnXY ( others08 [ i ] , 42 , 35 ) ;
4180: LD_EXP 12
4184: PUSH
4185: LD_VAR 0 2
4189: ARRAY
4190: PPUSH
4191: LD_INT 42
4193: PPUSH
4194: LD_INT 35
4196: PPUSH
4197: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4201: LD_ADDR_EXP 16
4205: PUSH
4206: LD_EXP 16
4210: PUSH
4211: LD_EXP 12
4215: PUSH
4216: LD_VAR 0 2
4220: ARRAY
4221: ADD
4222: ST_TO_ADDR
// end ;
4223: GO 4156
4225: POP
4226: POP
// end ; PlaceHumanInUnit ( JMM , car ) ;
4227: LD_EXP 1
4231: PPUSH
4232: LD_INT 138
4234: PPUSH
4235: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
4239: LD_EXP 2
4243: PPUSH
4244: LD_INT 58
4246: PPUSH
4247: CALL_OW 52
// SetClass ( JMM , 1 ) ;
4251: LD_EXP 1
4255: PPUSH
4256: LD_INT 1
4258: PPUSH
4259: CALL_OW 336
// end ;
4263: LD_VAR 0 1
4267: RET
// export function PrepareConvoy ; var i , veh , un ; begin
4268: LD_INT 0
4270: PPUSH
4271: PPUSH
4272: PPUSH
4273: PPUSH
// uc_side = 1 ;
4274: LD_ADDR_OWVAR 20
4278: PUSH
4279: LD_INT 1
4281: ST_TO_ADDR
// uc_nation = 1 ;
4282: LD_ADDR_OWVAR 21
4286: PUSH
4287: LD_INT 1
4289: ST_TO_ADDR
// for i := 1 to 3 do
4290: LD_ADDR_VAR 0 2
4294: PUSH
4295: DOUBLE
4296: LD_INT 1
4298: DEC
4299: ST_TO_ADDR
4300: LD_INT 3
4302: PUSH
4303: FOR_TO
4304: IFFALSE 4450
// begin vc_engine = 1 ;
4306: LD_ADDR_OWVAR 39
4310: PUSH
4311: LD_INT 1
4313: ST_TO_ADDR
// vc_control = 1 ;
4314: LD_ADDR_OWVAR 38
4318: PUSH
4319: LD_INT 1
4321: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
4322: LD_ADDR_OWVAR 40
4326: PUSH
4327: LD_INT 3
4329: PUSH
4330: LD_INT 4
4332: PUSH
4333: LD_INT 5
4335: PUSH
4336: EMPTY
4337: LIST
4338: LIST
4339: LIST
4340: PUSH
4341: LD_INT 1
4343: PPUSH
4344: LD_INT 3
4346: PPUSH
4347: CALL_OW 12
4351: ARRAY
4352: ST_TO_ADDR
// vc_chassis = 3 ;
4353: LD_ADDR_OWVAR 37
4357: PUSH
4358: LD_INT 3
4360: ST_TO_ADDR
// veh = CreateVehicle ;
4361: LD_ADDR_VAR 0 3
4365: PUSH
4366: CALL_OW 45
4370: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4371: LD_VAR 0 3
4375: PPUSH
4376: LD_INT 1
4378: PPUSH
4379: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
4383: LD_VAR 0 3
4387: PPUSH
4388: LD_INT 8
4390: PPUSH
4391: LD_INT 0
4393: PPUSH
4394: CALL_OW 49
// convoy = convoy ^ veh ;
4398: LD_ADDR_EXP 13
4402: PUSH
4403: LD_EXP 13
4407: PUSH
4408: LD_VAR 0 3
4412: ADD
4413: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4414: LD_INT 0
4416: PPUSH
4417: LD_INT 10
4419: PPUSH
4420: CALL_OW 383
// un = CreateHuman ;
4424: LD_ADDR_VAR 0 4
4428: PUSH
4429: CALL_OW 44
4433: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4434: LD_VAR 0 4
4438: PPUSH
4439: LD_VAR 0 3
4443: PPUSH
4444: CALL_OW 52
// end ;
4448: GO 4303
4450: POP
4451: POP
// for i := 1 to 3 do
4452: LD_ADDR_VAR 0 2
4456: PUSH
4457: DOUBLE
4458: LD_INT 1
4460: DEC
4461: ST_TO_ADDR
4462: LD_INT 3
4464: PUSH
4465: FOR_TO
4466: IFFALSE 4604
// begin vc_engine = 1 ;
4468: LD_ADDR_OWVAR 39
4472: PUSH
4473: LD_INT 1
4475: ST_TO_ADDR
// vc_control = 1 ;
4476: LD_ADDR_OWVAR 38
4480: PUSH
4481: LD_INT 1
4483: ST_TO_ADDR
// vc_weapon = 12 ;
4484: LD_ADDR_OWVAR 40
4488: PUSH
4489: LD_INT 12
4491: ST_TO_ADDR
// vc_chassis = 3 ;
4492: LD_ADDR_OWVAR 37
4496: PUSH
4497: LD_INT 3
4499: ST_TO_ADDR
// veh = CreateVehicle ;
4500: LD_ADDR_VAR 0 3
4504: PUSH
4505: CALL_OW 45
4509: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
4510: LD_VAR 0 3
4514: PPUSH
4515: LD_INT 1
4517: PPUSH
4518: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
4522: LD_VAR 0 3
4526: PPUSH
4527: LD_INT 9
4529: PPUSH
4530: LD_INT 0
4532: PPUSH
4533: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
4537: LD_VAR 0 3
4541: PPUSH
4542: LD_INT 1
4544: PPUSH
4545: LD_INT 100
4547: PPUSH
4548: CALL_OW 291
// convoy = convoy ^ veh ;
4552: LD_ADDR_EXP 13
4556: PUSH
4557: LD_EXP 13
4561: PUSH
4562: LD_VAR 0 3
4566: ADD
4567: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
4568: LD_INT 0
4570: PPUSH
4571: LD_INT 10
4573: PPUSH
4574: CALL_OW 383
// un = CreateHuman ;
4578: LD_ADDR_VAR 0 4
4582: PUSH
4583: CALL_OW 44
4587: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
4588: LD_VAR 0 4
4592: PPUSH
4593: LD_VAR 0 3
4597: PPUSH
4598: CALL_OW 52
// end ;
4602: GO 4465
4604: POP
4605: POP
// ComMoveXY ( convoy [ 1 ] , 39 , 38 ) ;
4606: LD_EXP 13
4610: PUSH
4611: LD_INT 1
4613: ARRAY
4614: PPUSH
4615: LD_INT 39
4617: PPUSH
4618: LD_INT 38
4620: PPUSH
4621: CALL_OW 111
// AddComMoveXY ( convoy [ 1 ] , 41 , 50 ) ;
4625: LD_EXP 13
4629: PUSH
4630: LD_INT 1
4632: ARRAY
4633: PPUSH
4634: LD_INT 41
4636: PPUSH
4637: LD_INT 50
4639: PPUSH
4640: CALL_OW 171
// ComMoveXY ( convoy [ 2 ] , 39 , 38 ) ;
4644: LD_EXP 13
4648: PUSH
4649: LD_INT 2
4651: ARRAY
4652: PPUSH
4653: LD_INT 39
4655: PPUSH
4656: LD_INT 38
4658: PPUSH
4659: CALL_OW 111
// AddComMoveXY ( convoy [ 2 ] , 41 , 47 ) ;
4663: LD_EXP 13
4667: PUSH
4668: LD_INT 2
4670: ARRAY
4671: PPUSH
4672: LD_INT 41
4674: PPUSH
4675: LD_INT 47
4677: PPUSH
4678: CALL_OW 171
// ComMoveXY ( convoy [ 3 ] , 39 , 38 ) ;
4682: LD_EXP 13
4686: PUSH
4687: LD_INT 3
4689: ARRAY
4690: PPUSH
4691: LD_INT 39
4693: PPUSH
4694: LD_INT 38
4696: PPUSH
4697: CALL_OW 111
// AddComMoveXY ( convoy [ 3 ] , 41 , 44 ) ;
4701: LD_EXP 13
4705: PUSH
4706: LD_INT 3
4708: ARRAY
4709: PPUSH
4710: LD_INT 41
4712: PPUSH
4713: LD_INT 44
4715: PPUSH
4716: CALL_OW 171
// wait ( 0 0$4 ) ;
4720: LD_INT 140
4722: PPUSH
4723: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
4727: LD_EXP 13
4731: PUSH
4732: LD_INT 4
4734: ARRAY
4735: PPUSH
4736: LD_INT 47
4738: PPUSH
4739: LD_INT 49
4741: PPUSH
4742: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
4746: LD_EXP 13
4750: PUSH
4751: LD_INT 5
4753: ARRAY
4754: PPUSH
4755: LD_INT 47
4757: PPUSH
4758: LD_INT 49
4760: PPUSH
4761: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
4765: LD_EXP 13
4769: PUSH
4770: LD_INT 6
4772: ARRAY
4773: PPUSH
4774: LD_INT 47
4776: PPUSH
4777: LD_INT 49
4779: PPUSH
4780: CALL_OW 111
// end ; end_of_file
4784: LD_VAR 0 1
4788: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
4789: LD_INT 0
4791: PPUSH
4792: PPUSH
// if exist_mode then
4793: LD_VAR 0 2
4797: IFFALSE 4816
// unit := CreateCharacter ( ident ) else
4799: LD_ADDR_VAR 0 4
4803: PUSH
4804: LD_VAR 0 1
4808: PPUSH
4809: CALL_OW 34
4813: ST_TO_ADDR
4814: GO 4831
// unit := NewCharacter ( ident ) ;
4816: LD_ADDR_VAR 0 4
4820: PUSH
4821: LD_VAR 0 1
4825: PPUSH
4826: CALL_OW 25
4830: ST_TO_ADDR
// result := unit ;
4831: LD_ADDR_VAR 0 3
4835: PUSH
4836: LD_VAR 0 4
4840: ST_TO_ADDR
// end ;
4841: LD_VAR 0 3
4845: RET
