// export JMM , Powell ; export Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ; export others08 ; export convoy , prepConv ; export coreHeroesTab , addHeroesTab ; export selectedToMission ; export siberite ; starting begin Resetfog ;
   0: CALL_OW 335
// SetBName ( Am_dep , alpha ) ;
   4: LD_INT 5
   6: PPUSH
   7: LD_STRING alpha
   9: PPUSH
  10: CALL_OW 500
// convoy = [ ] ;
  14: LD_ADDR_EXP 12
  18: PUSH
  19: EMPTY
  20: ST_TO_ADDR
// coreHeroesTab = [ ] ;
  21: LD_ADDR_EXP 14
  25: PUSH
  26: EMPTY
  27: ST_TO_ADDR
// addHeroesTab = [ ] ;
  28: LD_ADDR_EXP 15
  32: PUSH
  33: EMPTY
  34: ST_TO_ADDR
// selectedToMission = [ ] ;
  35: LD_ADDR_EXP 16
  39: PUSH
  40: EMPTY
  41: ST_TO_ADDR
// PrepareHeroes ;
  42: CALL 798 0 0
// end ; end_of_file
  46: END
// every 1 do var others ;
  47: GO 49
  49: DISABLE
  50: LD_INT 0
  52: PPUSH
// begin InGameOn ;
  53: CALL_OW 8
// AddComConstruct ( Am_tov1 , 2 , 1 , 1 , 4 ) ;
  57: LD_INT 60
  59: PPUSH
  60: LD_INT 2
  62: PPUSH
  63: LD_INT 1
  65: PPUSH
  66: LD_INT 1
  68: PPUSH
  69: LD_INT 4
  71: PPUSH
  72: CALL_OW 185
// AddComConstruct ( Am_tov2 , 4 , 1 , 1 , 6 ) ;
  76: LD_INT 6
  78: PPUSH
  79: LD_INT 4
  81: PPUSH
  82: LD_INT 1
  84: PPUSH
  85: LD_INT 1
  87: PPUSH
  88: LD_INT 6
  90: PPUSH
  91: CALL_OW 185
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap1 ) ;
  95: LD_INT 47
  97: PUSH
  98: LD_INT 4
 100: PUSH
 101: EMPTY
 102: LIST
 103: LIST
 104: PPUSH
 105: LD_INT 51
 107: PPUSH
 108: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap2 ) ;
 112: LD_INT 47
 114: PUSH
 115: LD_INT 4
 117: PUSH
 118: EMPTY
 119: LIST
 120: LIST
 121: PPUSH
 122: LD_INT 52
 124: PPUSH
 125: CALL_OW 184
// AddComResearch ( [ Am_lab1 , Am_lab2 ] , tech_weap3 ) ;
 129: LD_INT 47
 131: PUSH
 132: LD_INT 4
 134: PUSH
 135: EMPTY
 136: LIST
 137: LIST
 138: PPUSH
 139: LD_INT 53
 141: PPUSH
 142: CALL_OW 184
// CenterNowOnUnits ( car ) ;
 146: LD_INT 138
 148: PPUSH
 149: CALL_OW 87
// ComMoveXY ( car , 69 , 36 ) ;
 153: LD_INT 138
 155: PPUSH
 156: LD_INT 69
 158: PPUSH
 159: LD_INT 36
 161: PPUSH
 162: CALL_OW 111
// AddComMoveXY ( car , 65 , 43 ) ;
 166: LD_INT 138
 168: PPUSH
 169: LD_INT 65
 171: PPUSH
 172: LD_INT 43
 174: PPUSH
 175: CALL_OW 171
// AddComMoveXY ( car , 63 , 48 ) ;
 179: LD_INT 138
 181: PPUSH
 182: LD_INT 63
 184: PPUSH
 185: LD_INT 48
 187: PPUSH
 188: CALL_OW 171
// AddComMoveXY ( car , 60 , 50 ) ;
 192: LD_INT 138
 194: PPUSH
 195: LD_INT 60
 197: PPUSH
 198: LD_INT 50
 200: PPUSH
 201: CALL_OW 171
// AddComMoveXY ( car , 54 , 47 ) ;
 205: LD_INT 138
 207: PPUSH
 208: LD_INT 54
 210: PPUSH
 211: LD_INT 47
 213: PPUSH
 214: CALL_OW 171
// AddComMoveXY ( car , 51 , 40 ) ;
 218: LD_INT 138
 220: PPUSH
 221: LD_INT 51
 223: PPUSH
 224: LD_INT 40
 226: PPUSH
 227: CALL_OW 171
// repeat wait ( 0 0$1 ) ;
 231: LD_INT 35
 233: PPUSH
 234: CALL_OW 67
// CenterNowOnUnits ( car ) ;
 238: LD_INT 138
 240: PPUSH
 241: CALL_OW 87
// until IsInArea ( car , stop ) ;
 245: LD_INT 138
 247: PPUSH
 248: LD_INT 7
 250: PPUSH
 251: CALL_OW 308
 255: IFFALSE 231
// ComExitVehicle ( JMM ) ;
 257: LD_EXP 1
 261: PPUSH
 262: CALL_OW 121
// wait ( 0 0$01 ) ;
 266: LD_INT 35
 268: PPUSH
 269: CALL_OW 67
// ComMoveXY ( JMM , 42 , 37 ) ;
 273: LD_EXP 1
 277: PPUSH
 278: LD_INT 42
 280: PPUSH
 281: LD_INT 37
 283: PPUSH
 284: CALL_OW 111
// wait ( 0 0$5 ) ;
 288: LD_INT 175
 290: PPUSH
 291: CALL_OW 67
// ComExitBuilding ( Powell ) ;
 295: LD_EXP 2
 299: PPUSH
 300: CALL_OW 122
// wait ( 0 0$01 ) ;
 304: LD_INT 35
 306: PPUSH
 307: CALL_OW 67
// ComTurnUnit ( Powell , JMM ) ;
 311: LD_EXP 2
 315: PPUSH
 316: LD_EXP 1
 320: PPUSH
 321: CALL_OW 119
// ComTurnUnit ( JMM , Powell ) ;
 325: LD_EXP 1
 329: PPUSH
 330: LD_EXP 2
 334: PPUSH
 335: CALL_OW 119
// Say ( JMM , D1-JMM-1 ) ;
 339: LD_EXP 1
 343: PPUSH
 344: LD_STRING D1-JMM-1
 346: PPUSH
 347: CALL_OW 88
// Say ( Powell , D1-Pow-1 ) ;
 351: LD_EXP 2
 355: PPUSH
 356: LD_STRING D1-Pow-1
 358: PPUSH
 359: CALL_OW 88
// Say ( JMM , D1-JMM-2 ) ;
 363: LD_EXP 1
 367: PPUSH
 368: LD_STRING D1-JMM-2
 370: PPUSH
 371: CALL_OW 88
// Say ( Powell , D1-Pow-2 ) ;
 375: LD_EXP 2
 379: PPUSH
 380: LD_STRING D1-Pow-2
 382: PPUSH
 383: CALL_OW 88
// Say ( JMM , D1-JMM-3 ) ;
 387: LD_EXP 1
 391: PPUSH
 392: LD_STRING D1-JMM-3
 394: PPUSH
 395: CALL_OW 88
// Say ( Powell , D1-Pow-3 ) ;
 399: LD_EXP 2
 403: PPUSH
 404: LD_STRING D1-Pow-3
 406: PPUSH
 407: CALL_OW 88
// Say ( JMM , D1-JMM-4 ) ;
 411: LD_EXP 1
 415: PPUSH
 416: LD_STRING D1-JMM-4
 418: PPUSH
 419: CALL_OW 88
// PrepareConvoy ;
 423: CALL 5054 0 0
// Say ( Powell , D1-Pow-4 ) ;
 427: LD_EXP 2
 431: PPUSH
 432: LD_STRING D1-Pow-4
 434: PPUSH
 435: CALL_OW 88
// Say ( Powell , D1-Pow-4a ) ;
 439: LD_EXP 2
 443: PPUSH
 444: LD_STRING D1-Pow-4a
 446: PPUSH
 447: CALL_OW 88
// Say ( Powell , D1-Pow-4b ) ;
 451: LD_EXP 2
 455: PPUSH
 456: LD_STRING D1-Pow-4b
 458: PPUSH
 459: CALL_OW 88
// ComMoveXY ( convoy , 61 , 50 ) ;
 463: LD_EXP 12
 467: PPUSH
 468: LD_INT 61
 470: PPUSH
 471: LD_INT 50
 473: PPUSH
 474: CALL_OW 111
// AddComMoveXY ( convoy , 77 , 69 ) ;
 478: LD_EXP 12
 482: PPUSH
 483: LD_INT 77
 485: PPUSH
 486: LD_INT 69
 488: PPUSH
 489: CALL_OW 171
// Say ( JMM , D1-JMM-5 ) ;
 493: LD_EXP 1
 497: PPUSH
 498: LD_STRING D1-JMM-5
 500: PPUSH
 501: CALL_OW 88
// Say ( Powell , D1-Pow-5 ) ;
 505: LD_EXP 2
 509: PPUSH
 510: LD_STRING D1-Pow-5
 512: PPUSH
 513: CALL_OW 88
// Say ( JMM , D1-JMM-6 ) ;
 517: LD_EXP 1
 521: PPUSH
 522: LD_STRING D1-JMM-6
 524: PPUSH
 525: CALL_OW 88
// Say ( Powell , D1-Pow-6 ) ;
 529: LD_EXP 2
 533: PPUSH
 534: LD_STRING D1-Pow-6
 536: PPUSH
 537: CALL_OW 88
// Say ( JMM , D1-JMM-7 ) ;
 541: LD_EXP 1
 545: PPUSH
 546: LD_STRING D1-JMM-7
 548: PPUSH
 549: CALL_OW 88
// Say ( Powell , D1-Pow-7 ) ;
 553: LD_EXP 2
 557: PPUSH
 558: LD_STRING D1-Pow-7
 560: PPUSH
 561: CALL_OW 88
// Say ( JMM , D1-JMM-8 ) ;
 565: LD_EXP 1
 569: PPUSH
 570: LD_STRING D1-JMM-8
 572: PPUSH
 573: CALL_OW 88
// others = FilterUnitsInArea ( CoreHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 577: LD_ADDR_VAR 0 1
 581: PUSH
 582: LD_INT 10
 584: PPUSH
 585: LD_INT 22
 587: PUSH
 588: LD_INT 1
 590: PUSH
 591: EMPTY
 592: LIST
 593: LIST
 594: PUSH
 595: LD_INT 21
 597: PUSH
 598: LD_INT 1
 600: PUSH
 601: EMPTY
 602: LIST
 603: LIST
 604: PUSH
 605: EMPTY
 606: LIST
 607: LIST
 608: PPUSH
 609: CALL_OW 70
 613: ST_TO_ADDR
// others = others ^ FilterUnitsInArea ( AddHeroes , [ [ f_side , 1 ] , [ f_type , unit_human ] ] ) ;
 614: LD_ADDR_VAR 0 1
 618: PUSH
 619: LD_VAR 0 1
 623: PUSH
 624: LD_INT 11
 626: PPUSH
 627: LD_INT 22
 629: PUSH
 630: LD_INT 1
 632: PUSH
 633: EMPTY
 634: LIST
 635: LIST
 636: PUSH
 637: LD_INT 21
 639: PUSH
 640: LD_INT 1
 642: PUSH
 643: EMPTY
 644: LIST
 645: LIST
 646: PUSH
 647: EMPTY
 648: LIST
 649: LIST
 650: PPUSH
 651: CALL_OW 70
 655: ADD
 656: ST_TO_ADDR
// others = others diff [ JMM , Powell , Brown , Donaldson , Bobby , Cyrus , Lisa , Frank , Houten , Gary ] ;
 657: LD_ADDR_VAR 0 1
 661: PUSH
 662: LD_VAR 0 1
 666: PUSH
 667: LD_EXP 1
 671: PUSH
 672: LD_EXP 2
 676: PUSH
 677: LD_EXP 3
 681: PUSH
 682: LD_EXP 4
 686: PUSH
 687: LD_EXP 5
 691: PUSH
 692: LD_EXP 6
 696: PUSH
 697: LD_EXP 7
 701: PUSH
 702: LD_EXP 8
 706: PUSH
 707: LD_EXP 9
 711: PUSH
 712: LD_EXP 10
 716: PUSH
 717: EMPTY
 718: LIST
 719: LIST
 720: LIST
 721: LIST
 722: LIST
 723: LIST
 724: LIST
 725: LIST
 726: LIST
 727: LIST
 728: DIFF
 729: ST_TO_ADDR
// SaveCharacters ( JMM , 10_JMM ) ;
 730: LD_EXP 1
 734: PPUSH
 735: LD_STRING 10_JMM
 737: PPUSH
 738: CALL_OW 38
// SaveCharacters ( others , OthersIn10 ) ;
 742: LD_VAR 0 1
 746: PPUSH
 747: LD_STRING OthersIn10
 749: PPUSH
 750: CALL_OW 38
// SaveCharacters ( others08 , 10_lock ) ;
 754: LD_EXP 11
 758: PPUSH
 759: LD_STRING 10_lock
 761: PPUSH
 762: CALL_OW 38
// DeleteCharacters ( 08_others ) ;
 766: LD_STRING 08_others
 768: PPUSH
 769: CALL_OW 40
// SaveCharacters ( others , 08_others ) ;
 773: LD_VAR 0 1
 777: PPUSH
 778: LD_STRING 08_others
 780: PPUSH
 781: CALL_OW 38
// ChangeMap ( 10 , %_cont ) ;
 785: LD_INT 10
 787: PPUSH
 788: LD_STRING %_cont
 790: PPUSH
 791: CALL_OW 340
// end ; end_of_file
 795: PPOPN 1
 797: END
// export function PrepareHeroes ; var i , un ; begin
 798: LD_INT 0
 800: PPUSH
 801: PPUSH
 802: PPUSH
// uc_side = 1 ;
 803: LD_ADDR_OWVAR 20
 807: PUSH
 808: LD_INT 1
 810: ST_TO_ADDR
// uc_nation = 1 ;
 811: LD_ADDR_OWVAR 21
 815: PUSH
 816: LD_INT 1
 818: ST_TO_ADDR
// JMM = PrepareUnit ( 09_JMM , true ) ;
 819: LD_ADDR_EXP 1
 823: PUSH
 824: LD_STRING 09_JMM
 826: PPUSH
 827: LD_INT 1
 829: PPUSH
 830: CALL 5575 0 2
 834: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 835: LD_ADDR_EXP 2
 839: PUSH
 840: LD_STRING Powell
 842: PPUSH
 843: LD_INT 0
 845: PPUSH
 846: CALL 5575 0 2
 850: ST_TO_ADDR
// Bobby = PrepareUnit ( 09_Bobby , true ) ;
 851: LD_ADDR_EXP 5
 855: PUSH
 856: LD_STRING 09_Bobby
 858: PPUSH
 859: LD_INT 1
 861: PPUSH
 862: CALL 5575 0 2
 866: ST_TO_ADDR
// PlaceUnitArea ( Bobby , CoreHeroes , false ) ;
 867: LD_EXP 5
 871: PPUSH
 872: LD_INT 10
 874: PPUSH
 875: LD_INT 0
 877: PPUSH
 878: CALL_OW 49
// ComTurnXY ( Bobby , 42 , 35 ) ;
 882: LD_EXP 5
 886: PPUSH
 887: LD_INT 42
 889: PPUSH
 890: LD_INT 35
 892: PPUSH
 893: CALL_OW 118
// if IsPlaced ( Bobby ) then
 897: LD_EXP 5
 901: PPUSH
 902: CALL_OW 305
 906: IFFALSE 936
// begin coreHeroesTab = coreHeroesTab ^ Bobby ;
 908: LD_ADDR_EXP 14
 912: PUSH
 913: LD_EXP 14
 917: PUSH
 918: LD_EXP 5
 922: ADD
 923: ST_TO_ADDR
// SaveCharacters ( Bobby , 10_Bobby ) ;
 924: LD_EXP 5
 928: PPUSH
 929: LD_STRING 10_Bobby
 931: PPUSH
 932: CALL_OW 38
// end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) then
 936: LD_EXP 5
 940: PPUSH
 941: CALL_OW 305
 945: NOT
 946: PUSH
 947: LD_EXP 3
 951: PPUSH
 952: CALL_OW 305
 956: NOT
 957: AND
 958: IFFALSE 1045
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
 960: LD_ADDR_EXP 3
 964: PUSH
 965: LD_STRING 08_Brown
 967: PPUSH
 968: LD_INT 1
 970: PPUSH
 971: CALL 5575 0 2
 975: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
 976: LD_EXP 3
 980: PPUSH
 981: LD_INT 10
 983: PPUSH
 984: LD_INT 0
 986: PPUSH
 987: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
 991: LD_EXP 3
 995: PPUSH
 996: LD_INT 42
 998: PPUSH
 999: LD_INT 35
1001: PPUSH
1002: CALL_OW 118
// if IsPlaced ( Brown ) then
1006: LD_EXP 3
1010: PPUSH
1011: CALL_OW 305
1015: IFFALSE 1045
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1017: LD_ADDR_EXP 14
1021: PUSH
1022: LD_EXP 14
1026: PUSH
1027: LD_EXP 3
1031: ADD
1032: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1033: LD_EXP 3
1037: PPUSH
1038: LD_STRING 10_Brown
1040: PPUSH
1041: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1045: LD_EXP 5
1049: PPUSH
1050: CALL_OW 305
1054: NOT
1055: PUSH
1056: LD_EXP 3
1060: PPUSH
1061: CALL_OW 305
1065: NOT
1066: AND
1067: PUSH
1068: LD_EXP 4
1072: PPUSH
1073: CALL_OW 305
1077: NOT
1078: AND
1079: IFFALSE 1166
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1081: LD_ADDR_EXP 4
1085: PUSH
1086: LD_STRING 08_Donaldson
1088: PPUSH
1089: LD_INT 1
1091: PPUSH
1092: CALL 5575 0 2
1096: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1097: LD_EXP 4
1101: PPUSH
1102: LD_INT 10
1104: PPUSH
1105: LD_INT 0
1107: PPUSH
1108: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1112: LD_EXP 4
1116: PPUSH
1117: LD_INT 42
1119: PPUSH
1120: LD_INT 35
1122: PPUSH
1123: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1127: LD_EXP 4
1131: PPUSH
1132: CALL_OW 305
1136: IFFALSE 1166
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1138: LD_ADDR_EXP 14
1142: PUSH
1143: LD_EXP 14
1147: PUSH
1148: LD_EXP 4
1152: ADD
1153: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1154: LD_EXP 4
1158: PPUSH
1159: LD_STRING 10_Donaldson
1161: PPUSH
1162: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1166: LD_EXP 5
1170: PPUSH
1171: CALL_OW 305
1175: NOT
1176: PUSH
1177: LD_EXP 3
1181: PPUSH
1182: CALL_OW 305
1186: NOT
1187: AND
1188: PUSH
1189: LD_EXP 4
1193: PPUSH
1194: CALL_OW 305
1198: NOT
1199: AND
1200: PUSH
1201: LD_EXP 8
1205: PPUSH
1206: CALL_OW 305
1210: NOT
1211: AND
1212: IFFALSE 1299
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1214: LD_ADDR_EXP 8
1218: PUSH
1219: LD_STRING 08_Frank
1221: PPUSH
1222: LD_INT 1
1224: PPUSH
1225: CALL 5575 0 2
1229: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1230: LD_EXP 8
1234: PPUSH
1235: LD_INT 10
1237: PPUSH
1238: LD_INT 0
1240: PPUSH
1241: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1245: LD_EXP 8
1249: PPUSH
1250: LD_INT 42
1252: PPUSH
1253: LD_INT 35
1255: PPUSH
1256: CALL_OW 118
// if IsPlaced ( Frank ) then
1260: LD_EXP 8
1264: PPUSH
1265: CALL_OW 305
1269: IFFALSE 1299
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1271: LD_ADDR_EXP 14
1275: PUSH
1276: LD_EXP 14
1280: PUSH
1281: LD_EXP 8
1285: ADD
1286: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1287: LD_EXP 8
1291: PPUSH
1292: LD_STRING 10_Frank
1294: PPUSH
1295: CALL_OW 38
// end ; end ; if not IsPlaced ( Bobby ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1299: LD_EXP 5
1303: PPUSH
1304: CALL_OW 305
1308: NOT
1309: PUSH
1310: LD_EXP 3
1314: PPUSH
1315: CALL_OW 305
1319: NOT
1320: AND
1321: PUSH
1322: LD_EXP 4
1326: PPUSH
1327: CALL_OW 305
1331: NOT
1332: AND
1333: PUSH
1334: LD_EXP 8
1338: PPUSH
1339: CALL_OW 305
1343: NOT
1344: AND
1345: PUSH
1346: LD_EXP 9
1350: PPUSH
1351: CALL_OW 305
1355: NOT
1356: AND
1357: IFFALSE 1444
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1359: LD_ADDR_EXP 9
1363: PUSH
1364: LD_STRING 09_Houten
1366: PPUSH
1367: LD_INT 1
1369: PPUSH
1370: CALL 5575 0 2
1374: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1375: LD_EXP 9
1379: PPUSH
1380: LD_INT 10
1382: PPUSH
1383: LD_INT 0
1385: PPUSH
1386: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1390: LD_EXP 9
1394: PPUSH
1395: LD_INT 42
1397: PPUSH
1398: LD_INT 35
1400: PPUSH
1401: CALL_OW 118
// if IsPlaced ( Houten ) then
1405: LD_EXP 9
1409: PPUSH
1410: CALL_OW 305
1414: IFFALSE 1444
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
1416: LD_ADDR_EXP 14
1420: PUSH
1421: LD_EXP 14
1425: PUSH
1426: LD_EXP 9
1430: ADD
1431: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
1432: LD_EXP 9
1436: PPUSH
1437: LD_STRING 10_Houten
1439: PPUSH
1440: CALL_OW 38
// ; end ; end ; Cyrus = PrepareUnit ( 09_Cyrus , true ) ;
1444: LD_ADDR_EXP 6
1448: PUSH
1449: LD_STRING 09_Cyrus
1451: PPUSH
1452: LD_INT 1
1454: PPUSH
1455: CALL 5575 0 2
1459: ST_TO_ADDR
// PlaceUnitArea ( Cyrus , CoreHeroes , false ) ;
1460: LD_EXP 6
1464: PPUSH
1465: LD_INT 10
1467: PPUSH
1468: LD_INT 0
1470: PPUSH
1471: CALL_OW 49
// ComTurnXY ( Cyrus , 42 , 35 ) ;
1475: LD_EXP 6
1479: PPUSH
1480: LD_INT 42
1482: PPUSH
1483: LD_INT 35
1485: PPUSH
1486: CALL_OW 118
// if IsPlaced ( Cyrus ) then
1490: LD_EXP 6
1494: PPUSH
1495: CALL_OW 305
1499: IFFALSE 1529
// begin coreHeroesTab = coreHeroesTab ^ Cyrus ;
1501: LD_ADDR_EXP 14
1505: PUSH
1506: LD_EXP 14
1510: PUSH
1511: LD_EXP 6
1515: ADD
1516: ST_TO_ADDR
// SaveCharacters ( Cyrus , 10_Cyrus ) ;
1517: LD_EXP 6
1521: PPUSH
1522: LD_STRING 10_Cyrus
1524: PPUSH
1525: CALL_OW 38
// end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) then
1529: LD_EXP 6
1533: PPUSH
1534: CALL_OW 305
1538: NOT
1539: PUSH
1540: LD_EXP 3
1544: PPUSH
1545: CALL_OW 305
1549: NOT
1550: AND
1551: IFFALSE 1638
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
1553: LD_ADDR_EXP 3
1557: PUSH
1558: LD_STRING 08_Brown
1560: PPUSH
1561: LD_INT 1
1563: PPUSH
1564: CALL 5575 0 2
1568: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
1569: LD_EXP 3
1573: PPUSH
1574: LD_INT 10
1576: PPUSH
1577: LD_INT 0
1579: PPUSH
1580: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
1584: LD_EXP 3
1588: PPUSH
1589: LD_INT 42
1591: PPUSH
1592: LD_INT 35
1594: PPUSH
1595: CALL_OW 118
// if IsPlaced ( Brown ) then
1599: LD_EXP 3
1603: PPUSH
1604: CALL_OW 305
1608: IFFALSE 1638
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
1610: LD_ADDR_EXP 14
1614: PUSH
1615: LD_EXP 14
1619: PUSH
1620: LD_EXP 3
1624: ADD
1625: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
1626: LD_EXP 3
1630: PPUSH
1631: LD_STRING 10_Brown
1633: PPUSH
1634: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
1638: LD_EXP 6
1642: PPUSH
1643: CALL_OW 305
1647: NOT
1648: PUSH
1649: LD_EXP 3
1653: PPUSH
1654: CALL_OW 305
1658: NOT
1659: AND
1660: PUSH
1661: LD_EXP 4
1665: PPUSH
1666: CALL_OW 305
1670: NOT
1671: AND
1672: IFFALSE 1759
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
1674: LD_ADDR_EXP 4
1678: PUSH
1679: LD_STRING 08_Donaldson
1681: PPUSH
1682: LD_INT 1
1684: PPUSH
1685: CALL 5575 0 2
1689: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
1690: LD_EXP 4
1694: PPUSH
1695: LD_INT 10
1697: PPUSH
1698: LD_INT 0
1700: PPUSH
1701: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
1705: LD_EXP 4
1709: PPUSH
1710: LD_INT 42
1712: PPUSH
1713: LD_INT 35
1715: PPUSH
1716: CALL_OW 118
// if IsPlaced ( Donaldson ) then
1720: LD_EXP 4
1724: PPUSH
1725: CALL_OW 305
1729: IFFALSE 1759
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
1731: LD_ADDR_EXP 14
1735: PUSH
1736: LD_EXP 14
1740: PUSH
1741: LD_EXP 4
1745: ADD
1746: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
1747: LD_EXP 4
1751: PPUSH
1752: LD_STRING 10_Donaldson
1754: PPUSH
1755: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
1759: LD_EXP 6
1763: PPUSH
1764: CALL_OW 305
1768: NOT
1769: PUSH
1770: LD_EXP 3
1774: PPUSH
1775: CALL_OW 305
1779: NOT
1780: AND
1781: PUSH
1782: LD_EXP 4
1786: PPUSH
1787: CALL_OW 305
1791: NOT
1792: AND
1793: PUSH
1794: LD_EXP 8
1798: PPUSH
1799: CALL_OW 305
1803: NOT
1804: AND
1805: IFFALSE 1892
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
1807: LD_ADDR_EXP 8
1811: PUSH
1812: LD_STRING 08_Frank
1814: PPUSH
1815: LD_INT 1
1817: PPUSH
1818: CALL 5575 0 2
1822: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
1823: LD_EXP 8
1827: PPUSH
1828: LD_INT 10
1830: PPUSH
1831: LD_INT 0
1833: PPUSH
1834: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
1838: LD_EXP 8
1842: PPUSH
1843: LD_INT 42
1845: PPUSH
1846: LD_INT 35
1848: PPUSH
1849: CALL_OW 118
// if IsPlaced ( Frank ) then
1853: LD_EXP 8
1857: PPUSH
1858: CALL_OW 305
1862: IFFALSE 1892
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
1864: LD_ADDR_EXP 14
1868: PUSH
1869: LD_EXP 14
1873: PUSH
1874: LD_EXP 8
1878: ADD
1879: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
1880: LD_EXP 8
1884: PPUSH
1885: LD_STRING 10_Frank
1887: PPUSH
1888: CALL_OW 38
// end ; end ; if not IsPlaced ( Cyrus ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
1892: LD_EXP 6
1896: PPUSH
1897: CALL_OW 305
1901: NOT
1902: PUSH
1903: LD_EXP 3
1907: PPUSH
1908: CALL_OW 305
1912: NOT
1913: AND
1914: PUSH
1915: LD_EXP 4
1919: PPUSH
1920: CALL_OW 305
1924: NOT
1925: AND
1926: PUSH
1927: LD_EXP 8
1931: PPUSH
1932: CALL_OW 305
1936: NOT
1937: AND
1938: PUSH
1939: LD_EXP 9
1943: PPUSH
1944: CALL_OW 305
1948: NOT
1949: AND
1950: IFFALSE 2037
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
1952: LD_ADDR_EXP 9
1956: PUSH
1957: LD_STRING 09_Houten
1959: PPUSH
1960: LD_INT 1
1962: PPUSH
1963: CALL 5575 0 2
1967: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
1968: LD_EXP 9
1972: PPUSH
1973: LD_INT 10
1975: PPUSH
1976: LD_INT 0
1978: PPUSH
1979: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
1983: LD_EXP 9
1987: PPUSH
1988: LD_INT 42
1990: PPUSH
1991: LD_INT 35
1993: PPUSH
1994: CALL_OW 118
// if IsPlaced ( Houten ) then
1998: LD_EXP 9
2002: PPUSH
2003: CALL_OW 305
2007: IFFALSE 2037
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2009: LD_ADDR_EXP 14
2013: PUSH
2014: LD_EXP 14
2018: PUSH
2019: LD_EXP 9
2023: ADD
2024: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2025: LD_EXP 9
2029: PPUSH
2030: LD_STRING 10_Houten
2032: PPUSH
2033: CALL_OW 38
// end ; end ; Lisa = PrepareUnit ( 08_Lisa , true ) ;
2037: LD_ADDR_EXP 7
2041: PUSH
2042: LD_STRING 08_Lisa
2044: PPUSH
2045: LD_INT 1
2047: PPUSH
2048: CALL 5575 0 2
2052: ST_TO_ADDR
// PlaceUnitArea ( Lisa , CoreHeroes , false ) ;
2053: LD_EXP 7
2057: PPUSH
2058: LD_INT 10
2060: PPUSH
2061: LD_INT 0
2063: PPUSH
2064: CALL_OW 49
// ComTurnXY ( Lisa , 42 , 35 ) ;
2068: LD_EXP 7
2072: PPUSH
2073: LD_INT 42
2075: PPUSH
2076: LD_INT 35
2078: PPUSH
2079: CALL_OW 118
// if IsPlaced ( Lisa ) then
2083: LD_EXP 7
2087: PPUSH
2088: CALL_OW 305
2092: IFFALSE 2122
// begin coreHeroesTab = coreHeroesTab ^ Lisa ;
2094: LD_ADDR_EXP 14
2098: PUSH
2099: LD_EXP 14
2103: PUSH
2104: LD_EXP 7
2108: ADD
2109: ST_TO_ADDR
// SaveCharacters ( Lisa , 10_Lisa ) ;
2110: LD_EXP 7
2114: PPUSH
2115: LD_STRING 10_Lisa
2117: PPUSH
2118: CALL_OW 38
// end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) then
2122: LD_EXP 7
2126: PPUSH
2127: CALL_OW 305
2131: NOT
2132: PUSH
2133: LD_EXP 3
2137: PPUSH
2138: CALL_OW 305
2142: NOT
2143: AND
2144: IFFALSE 2231
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2146: LD_ADDR_EXP 3
2150: PUSH
2151: LD_STRING 08_Brown
2153: PPUSH
2154: LD_INT 1
2156: PPUSH
2157: CALL 5575 0 2
2161: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2162: LD_EXP 3
2166: PPUSH
2167: LD_INT 10
2169: PPUSH
2170: LD_INT 0
2172: PPUSH
2173: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2177: LD_EXP 3
2181: PPUSH
2182: LD_INT 42
2184: PPUSH
2185: LD_INT 35
2187: PPUSH
2188: CALL_OW 118
// if IsPlaced ( Brown ) then
2192: LD_EXP 3
2196: PPUSH
2197: CALL_OW 305
2201: IFFALSE 2231
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2203: LD_ADDR_EXP 14
2207: PUSH
2208: LD_EXP 14
2212: PUSH
2213: LD_EXP 3
2217: ADD
2218: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2219: LD_EXP 3
2223: PPUSH
2224: LD_STRING 10_Brown
2226: PPUSH
2227: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2231: LD_EXP 7
2235: PPUSH
2236: CALL_OW 305
2240: NOT
2241: PUSH
2242: LD_EXP 3
2246: PPUSH
2247: CALL_OW 305
2251: NOT
2252: AND
2253: PUSH
2254: LD_EXP 4
2258: PPUSH
2259: CALL_OW 305
2263: NOT
2264: AND
2265: IFFALSE 2352
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2267: LD_ADDR_EXP 4
2271: PUSH
2272: LD_STRING 08_Donaldson
2274: PPUSH
2275: LD_INT 1
2277: PPUSH
2278: CALL 5575 0 2
2282: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2283: LD_EXP 4
2287: PPUSH
2288: LD_INT 10
2290: PPUSH
2291: LD_INT 0
2293: PPUSH
2294: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2298: LD_EXP 4
2302: PPUSH
2303: LD_INT 42
2305: PPUSH
2306: LD_INT 35
2308: PPUSH
2309: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2313: LD_EXP 4
2317: PPUSH
2318: CALL_OW 305
2322: IFFALSE 2352
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2324: LD_ADDR_EXP 14
2328: PUSH
2329: LD_EXP 14
2333: PUSH
2334: LD_EXP 4
2338: ADD
2339: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2340: LD_EXP 4
2344: PPUSH
2345: LD_STRING 10_Donaldson
2347: PPUSH
2348: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2352: LD_EXP 7
2356: PPUSH
2357: CALL_OW 305
2361: NOT
2362: PUSH
2363: LD_EXP 3
2367: PPUSH
2368: CALL_OW 305
2372: NOT
2373: AND
2374: PUSH
2375: LD_EXP 4
2379: PPUSH
2380: CALL_OW 305
2384: NOT
2385: AND
2386: PUSH
2387: LD_EXP 8
2391: PPUSH
2392: CALL_OW 305
2396: NOT
2397: AND
2398: IFFALSE 2485
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2400: LD_ADDR_EXP 8
2404: PUSH
2405: LD_STRING 08_Frank
2407: PPUSH
2408: LD_INT 1
2410: PPUSH
2411: CALL 5575 0 2
2415: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
2416: LD_EXP 8
2420: PPUSH
2421: LD_INT 10
2423: PPUSH
2424: LD_INT 0
2426: PPUSH
2427: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
2431: LD_EXP 8
2435: PPUSH
2436: LD_INT 42
2438: PPUSH
2439: LD_INT 35
2441: PPUSH
2442: CALL_OW 118
// if IsPlaced ( Frank ) then
2446: LD_EXP 8
2450: PPUSH
2451: CALL_OW 305
2455: IFFALSE 2485
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
2457: LD_ADDR_EXP 14
2461: PUSH
2462: LD_EXP 14
2466: PUSH
2467: LD_EXP 8
2471: ADD
2472: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
2473: LD_EXP 8
2477: PPUSH
2478: LD_STRING 10_Frank
2480: PPUSH
2481: CALL_OW 38
// end ; end ; if not IsPlaced ( Lisa ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
2485: LD_EXP 7
2489: PPUSH
2490: CALL_OW 305
2494: NOT
2495: PUSH
2496: LD_EXP 3
2500: PPUSH
2501: CALL_OW 305
2505: NOT
2506: AND
2507: PUSH
2508: LD_EXP 4
2512: PPUSH
2513: CALL_OW 305
2517: NOT
2518: AND
2519: PUSH
2520: LD_EXP 8
2524: PPUSH
2525: CALL_OW 305
2529: NOT
2530: AND
2531: PUSH
2532: LD_EXP 9
2536: PPUSH
2537: CALL_OW 305
2541: NOT
2542: AND
2543: IFFALSE 2630
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
2545: LD_ADDR_EXP 9
2549: PUSH
2550: LD_STRING 09_Houten
2552: PPUSH
2553: LD_INT 1
2555: PPUSH
2556: CALL 5575 0 2
2560: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
2561: LD_EXP 9
2565: PPUSH
2566: LD_INT 10
2568: PPUSH
2569: LD_INT 0
2571: PPUSH
2572: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
2576: LD_EXP 9
2580: PPUSH
2581: LD_INT 42
2583: PPUSH
2584: LD_INT 35
2586: PPUSH
2587: CALL_OW 118
// if IsPlaced ( Houten ) then
2591: LD_EXP 9
2595: PPUSH
2596: CALL_OW 305
2600: IFFALSE 2630
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
2602: LD_ADDR_EXP 14
2606: PUSH
2607: LD_EXP 14
2611: PUSH
2612: LD_EXP 9
2616: ADD
2617: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
2618: LD_EXP 9
2622: PPUSH
2623: LD_STRING 10_Houten
2625: PPUSH
2626: CALL_OW 38
// end ; end ; Gary = PrepareUnit ( 09_Gary , true ) ;
2630: LD_ADDR_EXP 10
2634: PUSH
2635: LD_STRING 09_Gary
2637: PPUSH
2638: LD_INT 1
2640: PPUSH
2641: CALL 5575 0 2
2645: ST_TO_ADDR
// PlaceUnitArea ( Gary , CoreHeroes , false ) ;
2646: LD_EXP 10
2650: PPUSH
2651: LD_INT 10
2653: PPUSH
2654: LD_INT 0
2656: PPUSH
2657: CALL_OW 49
// ComTurnXY ( Gary , 42 , 35 ) ;
2661: LD_EXP 10
2665: PPUSH
2666: LD_INT 42
2668: PPUSH
2669: LD_INT 35
2671: PPUSH
2672: CALL_OW 118
// if IsPlaced ( Gary ) then
2676: LD_EXP 10
2680: PPUSH
2681: CALL_OW 305
2685: IFFALSE 2715
// begin coreHeroesTab = coreHeroesTab ^ Gary ;
2687: LD_ADDR_EXP 14
2691: PUSH
2692: LD_EXP 14
2696: PUSH
2697: LD_EXP 10
2701: ADD
2702: ST_TO_ADDR
// SaveCharacters ( Gary , 10_Gary ) ;
2703: LD_EXP 10
2707: PPUSH
2708: LD_STRING 10_Gary
2710: PPUSH
2711: CALL_OW 38
// end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) then
2715: LD_EXP 10
2719: PPUSH
2720: CALL_OW 305
2724: NOT
2725: PUSH
2726: LD_EXP 3
2730: PPUSH
2731: CALL_OW 305
2735: NOT
2736: AND
2737: IFFALSE 2824
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
2739: LD_ADDR_EXP 3
2743: PUSH
2744: LD_STRING 08_Brown
2746: PPUSH
2747: LD_INT 1
2749: PPUSH
2750: CALL 5575 0 2
2754: ST_TO_ADDR
// PlaceUnitArea ( Brown , CoreHeroes , false ) ;
2755: LD_EXP 3
2759: PPUSH
2760: LD_INT 10
2762: PPUSH
2763: LD_INT 0
2765: PPUSH
2766: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
2770: LD_EXP 3
2774: PPUSH
2775: LD_INT 42
2777: PPUSH
2778: LD_INT 35
2780: PPUSH
2781: CALL_OW 118
// if IsPlaced ( Brown ) then
2785: LD_EXP 3
2789: PPUSH
2790: CALL_OW 305
2794: IFFALSE 2824
// begin coreHeroesTab = coreHeroesTab ^ Brown ;
2796: LD_ADDR_EXP 14
2800: PUSH
2801: LD_EXP 14
2805: PUSH
2806: LD_EXP 3
2810: ADD
2811: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
2812: LD_EXP 3
2816: PPUSH
2817: LD_STRING 10_Brown
2819: PPUSH
2820: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
2824: LD_EXP 10
2828: PPUSH
2829: CALL_OW 305
2833: NOT
2834: PUSH
2835: LD_EXP 3
2839: PPUSH
2840: CALL_OW 305
2844: NOT
2845: AND
2846: PUSH
2847: LD_EXP 4
2851: PPUSH
2852: CALL_OW 305
2856: NOT
2857: AND
2858: IFFALSE 2945
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
2860: LD_ADDR_EXP 4
2864: PUSH
2865: LD_STRING 08_Donaldson
2867: PPUSH
2868: LD_INT 1
2870: PPUSH
2871: CALL 5575 0 2
2875: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , CoreHeroes , false ) ;
2876: LD_EXP 4
2880: PPUSH
2881: LD_INT 10
2883: PPUSH
2884: LD_INT 0
2886: PPUSH
2887: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
2891: LD_EXP 4
2895: PPUSH
2896: LD_INT 42
2898: PPUSH
2899: LD_INT 35
2901: PPUSH
2902: CALL_OW 118
// if IsPlaced ( Donaldson ) then
2906: LD_EXP 4
2910: PPUSH
2911: CALL_OW 305
2915: IFFALSE 2945
// begin coreHeroesTab = coreHeroesTab ^ Donaldson ;
2917: LD_ADDR_EXP 14
2921: PUSH
2922: LD_EXP 14
2926: PUSH
2927: LD_EXP 4
2931: ADD
2932: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
2933: LD_EXP 4
2937: PPUSH
2938: LD_STRING 10_Donaldson
2940: PPUSH
2941: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
2945: LD_EXP 10
2949: PPUSH
2950: CALL_OW 305
2954: NOT
2955: PUSH
2956: LD_EXP 3
2960: PPUSH
2961: CALL_OW 305
2965: NOT
2966: AND
2967: PUSH
2968: LD_EXP 4
2972: PPUSH
2973: CALL_OW 305
2977: NOT
2978: AND
2979: PUSH
2980: LD_EXP 8
2984: PPUSH
2985: CALL_OW 305
2989: NOT
2990: AND
2991: IFFALSE 3078
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
2993: LD_ADDR_EXP 8
2997: PUSH
2998: LD_STRING 08_Frank
3000: PPUSH
3001: LD_INT 1
3003: PPUSH
3004: CALL 5575 0 2
3008: ST_TO_ADDR
// PlaceUnitArea ( Frank , CoreHeroes , false ) ;
3009: LD_EXP 8
3013: PPUSH
3014: LD_INT 10
3016: PPUSH
3017: LD_INT 0
3019: PPUSH
3020: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3024: LD_EXP 8
3028: PPUSH
3029: LD_INT 42
3031: PPUSH
3032: LD_INT 35
3034: PPUSH
3035: CALL_OW 118
// if IsPlaced ( Frank ) then
3039: LD_EXP 8
3043: PPUSH
3044: CALL_OW 305
3048: IFFALSE 3078
// begin coreHeroesTab = coreHeroesTab ^ Frank ;
3050: LD_ADDR_EXP 14
3054: PUSH
3055: LD_EXP 14
3059: PUSH
3060: LD_EXP 8
3064: ADD
3065: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3066: LD_EXP 8
3070: PPUSH
3071: LD_STRING 10_Frank
3073: PPUSH
3074: CALL_OW 38
// end ; end ; if not IsPlaced ( Gary ) and not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) and not IsPlaced ( Houten ) then
3078: LD_EXP 10
3082: PPUSH
3083: CALL_OW 305
3087: NOT
3088: PUSH
3089: LD_EXP 3
3093: PPUSH
3094: CALL_OW 305
3098: NOT
3099: AND
3100: PUSH
3101: LD_EXP 4
3105: PPUSH
3106: CALL_OW 305
3110: NOT
3111: AND
3112: PUSH
3113: LD_EXP 8
3117: PPUSH
3118: CALL_OW 305
3122: NOT
3123: AND
3124: PUSH
3125: LD_EXP 9
3129: PPUSH
3130: CALL_OW 305
3134: NOT
3135: AND
3136: IFFALSE 3223
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3138: LD_ADDR_EXP 9
3142: PUSH
3143: LD_STRING 09_Houten
3145: PPUSH
3146: LD_INT 1
3148: PPUSH
3149: CALL 5575 0 2
3153: ST_TO_ADDR
// PlaceUnitArea ( Houten , CoreHeroes , false ) ;
3154: LD_EXP 9
3158: PPUSH
3159: LD_INT 10
3161: PPUSH
3162: LD_INT 0
3164: PPUSH
3165: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3169: LD_EXP 9
3173: PPUSH
3174: LD_INT 42
3176: PPUSH
3177: LD_INT 35
3179: PPUSH
3180: CALL_OW 118
// if IsPlaced ( Houten ) then
3184: LD_EXP 9
3188: PPUSH
3189: CALL_OW 305
3193: IFFALSE 3223
// begin coreHeroesTab = coreHeroesTab ^ Houten ;
3195: LD_ADDR_EXP 14
3199: PUSH
3200: LD_EXP 14
3204: PUSH
3205: LD_EXP 9
3209: ADD
3210: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3211: LD_EXP 9
3215: PPUSH
3216: LD_STRING 10_Houten
3218: PPUSH
3219: CALL_OW 38
// end ; end ; for i = 1 to 5 - coreHeroesTab do
3223: LD_ADDR_VAR 0 2
3227: PUSH
3228: DOUBLE
3229: LD_INT 1
3231: DEC
3232: ST_TO_ADDR
3233: LD_INT 5
3235: PUSH
3236: LD_EXP 14
3240: MINUS
3241: PUSH
3242: FOR_TO
3243: IFFALSE 3367
// begin hc_gallery =  ;
3245: LD_ADDR_OWVAR 33
3249: PUSH
3250: LD_STRING 
3252: ST_TO_ADDR
// hc_name =  ;
3253: LD_ADDR_OWVAR 26
3257: PUSH
3258: LD_STRING 
3260: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
3261: LD_INT 0
3263: PPUSH
3264: LD_INT 1
3266: PUSH
3267: LD_INT 2
3269: PUSH
3270: LD_INT 3
3272: PUSH
3273: LD_INT 4
3275: PUSH
3276: EMPTY
3277: LIST
3278: LIST
3279: LIST
3280: LIST
3281: PUSH
3282: LD_INT 1
3284: PPUSH
3285: LD_INT 4
3287: PPUSH
3288: CALL_OW 12
3292: ARRAY
3293: PPUSH
3294: LD_INT 4
3296: PPUSH
3297: LD_INT 6
3299: PPUSH
3300: CALL_OW 12
3304: PPUSH
3305: CALL_OW 380
// un = CreateHuman ;
3309: LD_ADDR_VAR 0 3
3313: PUSH
3314: CALL_OW 44
3318: ST_TO_ADDR
// coreHeroesTab = coreHeroesTab ^ un ;
3319: LD_ADDR_EXP 14
3323: PUSH
3324: LD_EXP 14
3328: PUSH
3329: LD_VAR 0 3
3333: ADD
3334: ST_TO_ADDR
// PlaceUnitArea ( un , CoreHeroes , false ) ;
3335: LD_VAR 0 3
3339: PPUSH
3340: LD_INT 10
3342: PPUSH
3343: LD_INT 0
3345: PPUSH
3346: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
3350: LD_VAR 0 3
3354: PPUSH
3355: LD_INT 42
3357: PPUSH
3358: LD_INT 35
3360: PPUSH
3361: CALL_OW 118
// end ;
3365: GO 3242
3367: POP
3368: POP
// siberite = LoadVariable ( 09_SibRes , 0 ) ;
3369: LD_ADDR_EXP 17
3373: PUSH
3374: LD_STRING 09_SibRes
3376: PPUSH
3377: LD_INT 0
3379: PPUSH
3380: CALL_OW 30
3384: ST_TO_ADDR
// others08 = CreateCharacterSet ( 08_other_survivors ) ;
3385: LD_ADDR_EXP 11
3389: PUSH
3390: LD_STRING 08_other_survivors
3392: PPUSH
3393: CALL_OW 31
3397: ST_TO_ADDR
// if siberite >= 200 then
3398: LD_EXP 17
3402: PUSH
3403: LD_INT 200
3405: GREATEREQUAL
3406: IFFALSE 4449
// begin if not IsPlaced ( Brown ) then
3408: LD_EXP 3
3412: PPUSH
3413: CALL_OW 305
3417: NOT
3418: IFFALSE 3505
// begin Brown = PrepareUnit ( 08_Brown , true ) ;
3420: LD_ADDR_EXP 3
3424: PUSH
3425: LD_STRING 08_Brown
3427: PPUSH
3428: LD_INT 1
3430: PPUSH
3431: CALL 5575 0 2
3435: ST_TO_ADDR
// PlaceUnitArea ( Brown , AddHeroes , false ) ;
3436: LD_EXP 3
3440: PPUSH
3441: LD_INT 11
3443: PPUSH
3444: LD_INT 0
3446: PPUSH
3447: CALL_OW 49
// ComTurnXY ( Brown , 42 , 35 ) ;
3451: LD_EXP 3
3455: PPUSH
3456: LD_INT 42
3458: PPUSH
3459: LD_INT 35
3461: PPUSH
3462: CALL_OW 118
// if IsPlaced ( Brown ) then
3466: LD_EXP 3
3470: PPUSH
3471: CALL_OW 305
3475: IFFALSE 3505
// begin addHeroesTab = addHeroesTab ^ Brown ;
3477: LD_ADDR_EXP 15
3481: PUSH
3482: LD_EXP 15
3486: PUSH
3487: LD_EXP 3
3491: ADD
3492: ST_TO_ADDR
// SaveCharacters ( Brown , 10_Brown ) ;
3493: LD_EXP 3
3497: PPUSH
3498: LD_STRING 10_Brown
3500: PPUSH
3501: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Donaldson ) then
3505: LD_EXP 3
3509: PPUSH
3510: CALL_OW 305
3514: NOT
3515: PUSH
3516: LD_EXP 4
3520: PPUSH
3521: CALL_OW 305
3525: NOT
3526: AND
3527: IFFALSE 3614
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3529: LD_ADDR_EXP 4
3533: PUSH
3534: LD_STRING 08_Donaldson
3536: PPUSH
3537: LD_INT 1
3539: PPUSH
3540: CALL 5575 0 2
3544: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , addHeroes , false ) ;
3545: LD_EXP 4
3549: PPUSH
3550: LD_INT 11
3552: PPUSH
3553: LD_INT 0
3555: PPUSH
3556: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3560: LD_EXP 4
3564: PPUSH
3565: LD_INT 42
3567: PPUSH
3568: LD_INT 35
3570: PPUSH
3571: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3575: LD_EXP 4
3579: PPUSH
3580: CALL_OW 305
3584: IFFALSE 3614
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3586: LD_ADDR_EXP 15
3590: PUSH
3591: LD_EXP 15
3595: PUSH
3596: LD_EXP 4
3600: ADD
3601: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3602: LD_EXP 4
3606: PPUSH
3607: LD_STRING 10_Donaldson
3609: PPUSH
3610: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Frank ) then
3614: LD_EXP 3
3618: PPUSH
3619: CALL_OW 305
3623: NOT
3624: PUSH
3625: LD_EXP 8
3629: PPUSH
3630: CALL_OW 305
3634: NOT
3635: AND
3636: IFFALSE 3723
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
3638: LD_ADDR_EXP 8
3642: PUSH
3643: LD_STRING 08_Frank
3645: PPUSH
3646: LD_INT 1
3648: PPUSH
3649: CALL 5575 0 2
3653: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
3654: LD_EXP 8
3658: PPUSH
3659: LD_INT 11
3661: PPUSH
3662: LD_INT 0
3664: PPUSH
3665: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
3669: LD_EXP 8
3673: PPUSH
3674: LD_INT 42
3676: PPUSH
3677: LD_INT 35
3679: PPUSH
3680: CALL_OW 118
// if IsPlaced ( Frank ) then
3684: LD_EXP 8
3688: PPUSH
3689: CALL_OW 305
3693: IFFALSE 3723
// begin addHeroesTab = addHeroesTab ^ Frank ;
3695: LD_ADDR_EXP 15
3699: PUSH
3700: LD_EXP 15
3704: PUSH
3705: LD_EXP 8
3709: ADD
3710: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
3711: LD_EXP 8
3715: PPUSH
3716: LD_STRING 10_Frank
3718: PPUSH
3719: CALL_OW 38
// end ; end ; if not IsPlaced ( Brown ) and not IsPlaced ( Houten ) then
3723: LD_EXP 3
3727: PPUSH
3728: CALL_OW 305
3732: NOT
3733: PUSH
3734: LD_EXP 9
3738: PPUSH
3739: CALL_OW 305
3743: NOT
3744: AND
3745: IFFALSE 3834
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
3747: LD_ADDR_EXP 9
3751: PUSH
3752: LD_STRING 09_Houten
3754: PPUSH
3755: LD_INT 1
3757: PPUSH
3758: CALL 5575 0 2
3762: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
3763: LD_EXP 9
3767: PPUSH
3768: LD_INT 11
3770: PPUSH
3771: LD_INT 0
3773: PPUSH
3774: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
3778: LD_EXP 9
3782: PPUSH
3783: LD_INT 42
3785: PPUSH
3786: LD_INT 35
3788: PPUSH
3789: CALL_OW 118
// if IsPlaced ( Houten ) then
3793: LD_EXP 9
3797: PPUSH
3798: CALL_OW 305
3802: IFFALSE 3832
// begin addHeroesTab = addHeroesTab ^ Houten ;
3804: LD_ADDR_EXP 15
3808: PUSH
3809: LD_EXP 15
3813: PUSH
3814: LD_EXP 9
3818: ADD
3819: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
3820: LD_EXP 9
3824: PPUSH
3825: LD_STRING 10_Houten
3827: PPUSH
3828: CALL_OW 38
// end ; end else
3832: GO 3910
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
3834: LD_EXP 11
3838: PUSH
3839: LD_INT 1
3841: ARRAY
3842: PPUSH
3843: LD_INT 11
3845: PPUSH
3846: LD_INT 0
3848: PPUSH
3849: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
3853: LD_EXP 11
3857: PUSH
3858: LD_INT 1
3860: ARRAY
3861: PPUSH
3862: LD_INT 42
3864: PPUSH
3865: LD_INT 35
3867: PPUSH
3868: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
3872: LD_ADDR_EXP 15
3876: PUSH
3877: LD_EXP 15
3881: PUSH
3882: LD_EXP 11
3886: PUSH
3887: LD_INT 1
3889: ARRAY
3890: ADD
3891: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
3892: LD_ADDR_EXP 11
3896: PUSH
3897: LD_EXP 11
3901: PPUSH
3902: LD_INT 1
3904: PPUSH
3905: CALL_OW 3
3909: ST_TO_ADDR
// end ; if not IsPlaced ( Donaldson ) then
3910: LD_EXP 4
3914: PPUSH
3915: CALL_OW 305
3919: NOT
3920: IFFALSE 4007
// begin Donaldson = PrepareUnit ( 08_Donaldson , true ) ;
3922: LD_ADDR_EXP 4
3926: PUSH
3927: LD_STRING 08_Donaldson
3929: PPUSH
3930: LD_INT 1
3932: PPUSH
3933: CALL 5575 0 2
3937: ST_TO_ADDR
// PlaceUnitArea ( Donaldson , AddHeroes , false ) ;
3938: LD_EXP 4
3942: PPUSH
3943: LD_INT 11
3945: PPUSH
3946: LD_INT 0
3948: PPUSH
3949: CALL_OW 49
// ComTurnXY ( Donaldson , 42 , 35 ) ;
3953: LD_EXP 4
3957: PPUSH
3958: LD_INT 42
3960: PPUSH
3961: LD_INT 35
3963: PPUSH
3964: CALL_OW 118
// if IsPlaced ( Donaldson ) then
3968: LD_EXP 4
3972: PPUSH
3973: CALL_OW 305
3977: IFFALSE 4007
// begin addHeroesTab = addHeroesTab ^ Donaldson ;
3979: LD_ADDR_EXP 15
3983: PUSH
3984: LD_EXP 15
3988: PUSH
3989: LD_EXP 4
3993: ADD
3994: ST_TO_ADDR
// SaveCharacters ( Donaldson , 10_Donaldson ) ;
3995: LD_EXP 4
3999: PPUSH
4000: LD_STRING 10_Donaldson
4002: PPUSH
4003: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Frank ) then
4007: LD_EXP 4
4011: PPUSH
4012: CALL_OW 305
4016: NOT
4017: PUSH
4018: LD_EXP 8
4022: PPUSH
4023: CALL_OW 305
4027: NOT
4028: AND
4029: IFFALSE 4116
// begin Frank = PrepareUnit ( 08_Frank , true ) ;
4031: LD_ADDR_EXP 8
4035: PUSH
4036: LD_STRING 08_Frank
4038: PPUSH
4039: LD_INT 1
4041: PPUSH
4042: CALL 5575 0 2
4046: ST_TO_ADDR
// PlaceUnitArea ( Frank , addHeroes , false ) ;
4047: LD_EXP 8
4051: PPUSH
4052: LD_INT 11
4054: PPUSH
4055: LD_INT 0
4057: PPUSH
4058: CALL_OW 49
// ComTurnXY ( Frank , 42 , 35 ) ;
4062: LD_EXP 8
4066: PPUSH
4067: LD_INT 42
4069: PPUSH
4070: LD_INT 35
4072: PPUSH
4073: CALL_OW 118
// if IsPlaced ( Frank ) then
4077: LD_EXP 8
4081: PPUSH
4082: CALL_OW 305
4086: IFFALSE 4116
// begin addHeroesTab = addHeroesTab ^ Frank ;
4088: LD_ADDR_EXP 15
4092: PUSH
4093: LD_EXP 15
4097: PUSH
4098: LD_EXP 8
4102: ADD
4103: ST_TO_ADDR
// SaveCharacters ( Frank , 10_Frank ) ;
4104: LD_EXP 8
4108: PPUSH
4109: LD_STRING 10_Frank
4111: PPUSH
4112: CALL_OW 38
// end ; end ; if not IsPlaced ( Donaldson ) and not IsPlaced ( Houten ) then
4116: LD_EXP 4
4120: PPUSH
4121: CALL_OW 305
4125: NOT
4126: PUSH
4127: LD_EXP 9
4131: PPUSH
4132: CALL_OW 305
4136: NOT
4137: AND
4138: IFFALSE 4227
// begin Houten = PrepareUnit ( 09_Houten , true ) ;
4140: LD_ADDR_EXP 9
4144: PUSH
4145: LD_STRING 09_Houten
4147: PPUSH
4148: LD_INT 1
4150: PPUSH
4151: CALL 5575 0 2
4155: ST_TO_ADDR
// PlaceUnitArea ( Houten , addHeroes , false ) ;
4156: LD_EXP 9
4160: PPUSH
4161: LD_INT 11
4163: PPUSH
4164: LD_INT 0
4166: PPUSH
4167: CALL_OW 49
// ComTurnXY ( Houten , 42 , 35 ) ;
4171: LD_EXP 9
4175: PPUSH
4176: LD_INT 42
4178: PPUSH
4179: LD_INT 35
4181: PPUSH
4182: CALL_OW 118
// if IsPlaced ( Houten ) then
4186: LD_EXP 9
4190: PPUSH
4191: CALL_OW 305
4195: IFFALSE 4225
// begin addHeroesTab = addHeroesTab ^ Houten ;
4197: LD_ADDR_EXP 15
4201: PUSH
4202: LD_EXP 15
4206: PUSH
4207: LD_EXP 9
4211: ADD
4212: ST_TO_ADDR
// SaveCharacters ( Houten , 10_Houten ) ;
4213: LD_EXP 9
4217: PPUSH
4218: LD_STRING 10_Houten
4220: PPUSH
4221: CALL_OW 38
// end ; end else
4225: GO 4303
// begin PlaceUnitArea ( others08 [ 2 ] , addHeroes , false ) ;
4227: LD_EXP 11
4231: PUSH
4232: LD_INT 2
4234: ARRAY
4235: PPUSH
4236: LD_INT 11
4238: PPUSH
4239: LD_INT 0
4241: PPUSH
4242: CALL_OW 49
// ComTurnXY ( others08 [ 2 ] , 42 , 35 ) ;
4246: LD_EXP 11
4250: PUSH
4251: LD_INT 2
4253: ARRAY
4254: PPUSH
4255: LD_INT 42
4257: PPUSH
4258: LD_INT 35
4260: PPUSH
4261: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ 1 ] ;
4265: LD_ADDR_EXP 15
4269: PUSH
4270: LD_EXP 15
4274: PUSH
4275: LD_EXP 11
4279: PUSH
4280: LD_INT 1
4282: ARRAY
4283: ADD
4284: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4285: LD_ADDR_EXP 11
4289: PUSH
4290: LD_EXP 11
4294: PPUSH
4295: LD_INT 1
4297: PPUSH
4298: CALL_OW 3
4302: ST_TO_ADDR
// end ; for i = 1 to 2 - addHeroesTab do
4303: LD_ADDR_VAR 0 2
4307: PUSH
4308: DOUBLE
4309: LD_INT 1
4311: DEC
4312: ST_TO_ADDR
4313: LD_INT 2
4315: PUSH
4316: LD_EXP 15
4320: MINUS
4321: PUSH
4322: FOR_TO
4323: IFFALSE 4447
// begin hc_gallery =  ;
4325: LD_ADDR_OWVAR 33
4329: PUSH
4330: LD_STRING 
4332: ST_TO_ADDR
// hc_name =  ;
4333: LD_ADDR_OWVAR 26
4337: PUSH
4338: LD_STRING 
4340: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4341: LD_INT 0
4343: PPUSH
4344: LD_INT 1
4346: PUSH
4347: LD_INT 2
4349: PUSH
4350: LD_INT 3
4352: PUSH
4353: LD_INT 4
4355: PUSH
4356: EMPTY
4357: LIST
4358: LIST
4359: LIST
4360: LIST
4361: PUSH
4362: LD_INT 1
4364: PPUSH
4365: LD_INT 4
4367: PPUSH
4368: CALL_OW 12
4372: ARRAY
4373: PPUSH
4374: LD_INT 4
4376: PPUSH
4377: LD_INT 6
4379: PPUSH
4380: CALL_OW 12
4384: PPUSH
4385: CALL_OW 380
// un = CreateHuman ;
4389: LD_ADDR_VAR 0 3
4393: PUSH
4394: CALL_OW 44
4398: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4399: LD_ADDR_EXP 15
4403: PUSH
4404: LD_EXP 15
4408: PUSH
4409: LD_VAR 0 3
4413: ADD
4414: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4415: LD_VAR 0 3
4419: PPUSH
4420: LD_INT 11
4422: PPUSH
4423: LD_INT 0
4425: PPUSH
4426: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4430: LD_VAR 0 3
4434: PPUSH
4435: LD_INT 42
4437: PPUSH
4438: LD_INT 35
4440: PPUSH
4441: CALL_OW 118
// end ;
4445: GO 4322
4447: POP
4448: POP
// end ; if siberite > 200 then
4449: LD_EXP 17
4453: PUSH
4454: LD_INT 200
4456: GREATER
4457: IFFALSE 5013
// begin if others08 > 0 then
4459: LD_EXP 11
4463: PUSH
4464: LD_INT 0
4466: GREATER
4467: IFFALSE 4857
// begin if others08 >= ( siberite - 200 ) / 100 then
4469: LD_EXP 11
4473: PUSH
4474: LD_EXP 17
4478: PUSH
4479: LD_INT 200
4481: MINUS
4482: PUSH
4483: LD_INT 100
4485: DIVREAL
4486: GREATEREQUAL
4487: IFFALSE 4599
// begin for i := 1 to ( siberite - 200 ) / 100 do
4489: LD_ADDR_VAR 0 2
4493: PUSH
4494: DOUBLE
4495: LD_INT 1
4497: DEC
4498: ST_TO_ADDR
4499: LD_EXP 17
4503: PUSH
4504: LD_INT 200
4506: MINUS
4507: PUSH
4508: LD_INT 100
4510: DIVREAL
4511: PUSH
4512: FOR_TO
4513: IFFALSE 4595
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4515: LD_EXP 11
4519: PUSH
4520: LD_INT 1
4522: ARRAY
4523: PPUSH
4524: LD_INT 11
4526: PPUSH
4527: LD_INT 0
4529: PPUSH
4530: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4534: LD_EXP 11
4538: PUSH
4539: LD_INT 1
4541: ARRAY
4542: PPUSH
4543: LD_INT 42
4545: PPUSH
4546: LD_INT 35
4548: PPUSH
4549: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4553: LD_ADDR_EXP 15
4557: PUSH
4558: LD_EXP 15
4562: PUSH
4563: LD_EXP 11
4567: PUSH
4568: LD_VAR 0 2
4572: ARRAY
4573: ADD
4574: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4575: LD_ADDR_EXP 11
4579: PUSH
4580: LD_EXP 11
4584: PPUSH
4585: LD_INT 1
4587: PPUSH
4588: CALL_OW 3
4592: ST_TO_ADDR
// end ;
4593: GO 4512
4595: POP
4596: POP
// end else
4597: GO 4855
// begin for i := 1 to others08 do
4599: LD_ADDR_VAR 0 2
4603: PUSH
4604: DOUBLE
4605: LD_INT 1
4607: DEC
4608: ST_TO_ADDR
4609: LD_EXP 11
4613: PUSH
4614: FOR_TO
4615: IFFALSE 4697
// begin PlaceUnitArea ( others08 [ 1 ] , addHeroes , false ) ;
4617: LD_EXP 11
4621: PUSH
4622: LD_INT 1
4624: ARRAY
4625: PPUSH
4626: LD_INT 11
4628: PPUSH
4629: LD_INT 0
4631: PPUSH
4632: CALL_OW 49
// ComTurnXY ( others08 [ 1 ] , 42 , 35 ) ;
4636: LD_EXP 11
4640: PUSH
4641: LD_INT 1
4643: ARRAY
4644: PPUSH
4645: LD_INT 42
4647: PPUSH
4648: LD_INT 35
4650: PPUSH
4651: CALL_OW 118
// addHeroesTab = addHeroesTab ^ others08 [ i ] ;
4655: LD_ADDR_EXP 15
4659: PUSH
4660: LD_EXP 15
4664: PUSH
4665: LD_EXP 11
4669: PUSH
4670: LD_VAR 0 2
4674: ARRAY
4675: ADD
4676: ST_TO_ADDR
// others08 := Delete ( others08 , 1 ) ;
4677: LD_ADDR_EXP 11
4681: PUSH
4682: LD_EXP 11
4686: PPUSH
4687: LD_INT 1
4689: PPUSH
4690: CALL_OW 3
4694: ST_TO_ADDR
// end ;
4695: GO 4614
4697: POP
4698: POP
// for i = 1 to ( siberite - 200 ) / 100 - others08 do
4699: LD_ADDR_VAR 0 2
4703: PUSH
4704: DOUBLE
4705: LD_INT 1
4707: DEC
4708: ST_TO_ADDR
4709: LD_EXP 17
4713: PUSH
4714: LD_INT 200
4716: MINUS
4717: PUSH
4718: LD_INT 100
4720: DIVREAL
4721: PUSH
4722: LD_EXP 11
4726: MINUS
4727: PUSH
4728: FOR_TO
4729: IFFALSE 4853
// begin hc_gallery =  ;
4731: LD_ADDR_OWVAR 33
4735: PUSH
4736: LD_STRING 
4738: ST_TO_ADDR
// hc_name =  ;
4739: LD_ADDR_OWVAR 26
4743: PUSH
4744: LD_STRING 
4746: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4747: LD_INT 0
4749: PPUSH
4750: LD_INT 1
4752: PUSH
4753: LD_INT 2
4755: PUSH
4756: LD_INT 3
4758: PUSH
4759: LD_INT 4
4761: PUSH
4762: EMPTY
4763: LIST
4764: LIST
4765: LIST
4766: LIST
4767: PUSH
4768: LD_INT 1
4770: PPUSH
4771: LD_INT 4
4773: PPUSH
4774: CALL_OW 12
4778: ARRAY
4779: PPUSH
4780: LD_INT 4
4782: PPUSH
4783: LD_INT 6
4785: PPUSH
4786: CALL_OW 12
4790: PPUSH
4791: CALL_OW 380
// un = CreateHuman ;
4795: LD_ADDR_VAR 0 3
4799: PUSH
4800: CALL_OW 44
4804: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4805: LD_ADDR_EXP 15
4809: PUSH
4810: LD_EXP 15
4814: PUSH
4815: LD_VAR 0 3
4819: ADD
4820: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4821: LD_VAR 0 3
4825: PPUSH
4826: LD_INT 11
4828: PPUSH
4829: LD_INT 0
4831: PPUSH
4832: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4836: LD_VAR 0 3
4840: PPUSH
4841: LD_INT 42
4843: PPUSH
4844: LD_INT 35
4846: PPUSH
4847: CALL_OW 118
// end ;
4851: GO 4728
4853: POP
4854: POP
// end ; end else
4855: GO 5013
// begin for i = 1 to ( siberite - 200 ) / 100 - others08 do
4857: LD_ADDR_VAR 0 2
4861: PUSH
4862: DOUBLE
4863: LD_INT 1
4865: DEC
4866: ST_TO_ADDR
4867: LD_EXP 17
4871: PUSH
4872: LD_INT 200
4874: MINUS
4875: PUSH
4876: LD_INT 100
4878: DIVREAL
4879: PUSH
4880: LD_EXP 11
4884: MINUS
4885: PUSH
4886: FOR_TO
4887: IFFALSE 5011
// begin hc_gallery =  ;
4889: LD_ADDR_OWVAR 33
4893: PUSH
4894: LD_STRING 
4896: ST_TO_ADDR
// hc_name =  ;
4897: LD_ADDR_OWVAR 26
4901: PUSH
4902: LD_STRING 
4904: ST_TO_ADDR
// PrepareHuman ( false , [ 1 , 2 , 3 , 4 ] [ Rand ( 1 , 4 ) ] , rand ( 4 , 6 ) ) ;
4905: LD_INT 0
4907: PPUSH
4908: LD_INT 1
4910: PUSH
4911: LD_INT 2
4913: PUSH
4914: LD_INT 3
4916: PUSH
4917: LD_INT 4
4919: PUSH
4920: EMPTY
4921: LIST
4922: LIST
4923: LIST
4924: LIST
4925: PUSH
4926: LD_INT 1
4928: PPUSH
4929: LD_INT 4
4931: PPUSH
4932: CALL_OW 12
4936: ARRAY
4937: PPUSH
4938: LD_INT 4
4940: PPUSH
4941: LD_INT 6
4943: PPUSH
4944: CALL_OW 12
4948: PPUSH
4949: CALL_OW 380
// un = CreateHuman ;
4953: LD_ADDR_VAR 0 3
4957: PUSH
4958: CALL_OW 44
4962: ST_TO_ADDR
// addHeroesTab = addHeroesTab ^ un ;
4963: LD_ADDR_EXP 15
4967: PUSH
4968: LD_EXP 15
4972: PUSH
4973: LD_VAR 0 3
4977: ADD
4978: ST_TO_ADDR
// PlaceUnitArea ( un , addHeroes , false ) ;
4979: LD_VAR 0 3
4983: PPUSH
4984: LD_INT 11
4986: PPUSH
4987: LD_INT 0
4989: PPUSH
4990: CALL_OW 49
// ComTurnXY ( un , 42 , 35 ) ;
4994: LD_VAR 0 3
4998: PPUSH
4999: LD_INT 42
5001: PPUSH
5002: LD_INT 35
5004: PPUSH
5005: CALL_OW 118
// end ;
5009: GO 4886
5011: POP
5012: POP
// end ; end ; PlaceHumanInUnit ( JMM , car ) ;
5013: LD_EXP 1
5017: PPUSH
5018: LD_INT 138
5020: PPUSH
5021: CALL_OW 52
// PlaceHumanInUnit ( Powell , Am_bar ) ;
5025: LD_EXP 2
5029: PPUSH
5030: LD_INT 58
5032: PPUSH
5033: CALL_OW 52
// SetClass ( JMM , 1 ) ;
5037: LD_EXP 1
5041: PPUSH
5042: LD_INT 1
5044: PPUSH
5045: CALL_OW 336
// end ;
5049: LD_VAR 0 1
5053: RET
// export function PrepareConvoy ; var i , veh , un ; begin
5054: LD_INT 0
5056: PPUSH
5057: PPUSH
5058: PPUSH
5059: PPUSH
// uc_side = 1 ;
5060: LD_ADDR_OWVAR 20
5064: PUSH
5065: LD_INT 1
5067: ST_TO_ADDR
// uc_nation = 1 ;
5068: LD_ADDR_OWVAR 21
5072: PUSH
5073: LD_INT 1
5075: ST_TO_ADDR
// for i := 1 to 3 do
5076: LD_ADDR_VAR 0 2
5080: PUSH
5081: DOUBLE
5082: LD_INT 1
5084: DEC
5085: ST_TO_ADDR
5086: LD_INT 3
5088: PUSH
5089: FOR_TO
5090: IFFALSE 5236
// begin vc_engine = 1 ;
5092: LD_ADDR_OWVAR 39
5096: PUSH
5097: LD_INT 1
5099: ST_TO_ADDR
// vc_control = 1 ;
5100: LD_ADDR_OWVAR 38
5104: PUSH
5105: LD_INT 1
5107: ST_TO_ADDR
// vc_weapon = [ 3 , 4 , 5 ] [ Rand ( 1 , 3 ) ] ;
5108: LD_ADDR_OWVAR 40
5112: PUSH
5113: LD_INT 3
5115: PUSH
5116: LD_INT 4
5118: PUSH
5119: LD_INT 5
5121: PUSH
5122: EMPTY
5123: LIST
5124: LIST
5125: LIST
5126: PUSH
5127: LD_INT 1
5129: PPUSH
5130: LD_INT 3
5132: PPUSH
5133: CALL_OW 12
5137: ARRAY
5138: ST_TO_ADDR
// vc_chassis = 3 ;
5139: LD_ADDR_OWVAR 37
5143: PUSH
5144: LD_INT 3
5146: ST_TO_ADDR
// veh = CreateVehicle ;
5147: LD_ADDR_VAR 0 3
5151: PUSH
5152: CALL_OW 45
5156: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5157: LD_VAR 0 3
5161: PPUSH
5162: LD_INT 1
5164: PPUSH
5165: CALL_OW 233
// PlaceUnitArea ( veh , WeaponTanks , false ) ;
5169: LD_VAR 0 3
5173: PPUSH
5174: LD_INT 8
5176: PPUSH
5177: LD_INT 0
5179: PPUSH
5180: CALL_OW 49
// convoy = convoy ^ veh ;
5184: LD_ADDR_EXP 12
5188: PUSH
5189: LD_EXP 12
5193: PUSH
5194: LD_VAR 0 3
5198: ADD
5199: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5200: LD_INT 0
5202: PPUSH
5203: LD_INT 10
5205: PPUSH
5206: CALL_OW 383
// un = CreateHuman ;
5210: LD_ADDR_VAR 0 4
5214: PUSH
5215: CALL_OW 44
5219: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5220: LD_VAR 0 4
5224: PPUSH
5225: LD_VAR 0 3
5229: PPUSH
5230: CALL_OW 52
// end ;
5234: GO 5089
5236: POP
5237: POP
// for i := 1 to 3 do
5238: LD_ADDR_VAR 0 2
5242: PUSH
5243: DOUBLE
5244: LD_INT 1
5246: DEC
5247: ST_TO_ADDR
5248: LD_INT 3
5250: PUSH
5251: FOR_TO
5252: IFFALSE 5390
// begin vc_engine = 1 ;
5254: LD_ADDR_OWVAR 39
5258: PUSH
5259: LD_INT 1
5261: ST_TO_ADDR
// vc_control = 1 ;
5262: LD_ADDR_OWVAR 38
5266: PUSH
5267: LD_INT 1
5269: ST_TO_ADDR
// vc_weapon = 12 ;
5270: LD_ADDR_OWVAR 40
5274: PUSH
5275: LD_INT 12
5277: ST_TO_ADDR
// vc_chassis = 3 ;
5278: LD_ADDR_OWVAR 37
5282: PUSH
5283: LD_INT 3
5285: ST_TO_ADDR
// veh = CreateVehicle ;
5286: LD_ADDR_VAR 0 3
5290: PUSH
5291: CALL_OW 45
5295: ST_TO_ADDR
// SetDir ( veh , 1 ) ;
5296: LD_VAR 0 3
5300: PPUSH
5301: LD_INT 1
5303: PPUSH
5304: CALL_OW 233
// PlaceUnitArea ( veh , Cargo , false ) ;
5308: LD_VAR 0 3
5312: PPUSH
5313: LD_INT 9
5315: PPUSH
5316: LD_INT 0
5318: PPUSH
5319: CALL_OW 49
// AddCargo ( veh , 1 , 100 ) ;
5323: LD_VAR 0 3
5327: PPUSH
5328: LD_INT 1
5330: PPUSH
5331: LD_INT 100
5333: PPUSH
5334: CALL_OW 291
// convoy = convoy ^ veh ;
5338: LD_ADDR_EXP 12
5342: PUSH
5343: LD_EXP 12
5347: PUSH
5348: LD_VAR 0 3
5352: ADD
5353: ST_TO_ADDR
// PrepareMechanic ( false , 10 ) ;
5354: LD_INT 0
5356: PPUSH
5357: LD_INT 10
5359: PPUSH
5360: CALL_OW 383
// un = CreateHuman ;
5364: LD_ADDR_VAR 0 4
5368: PUSH
5369: CALL_OW 44
5373: ST_TO_ADDR
// PlaceHumanInUnit ( un , veh ) ;
5374: LD_VAR 0 4
5378: PPUSH
5379: LD_VAR 0 3
5383: PPUSH
5384: CALL_OW 52
// end ;
5388: GO 5251
5390: POP
5391: POP
// ComMoveXY ( convoy [ 1 ] , 39 , 38 ) ;
5392: LD_EXP 12
5396: PUSH
5397: LD_INT 1
5399: ARRAY
5400: PPUSH
5401: LD_INT 39
5403: PPUSH
5404: LD_INT 38
5406: PPUSH
5407: CALL_OW 111
// AddComMoveXY ( convoy [ 1 ] , 41 , 50 ) ;
5411: LD_EXP 12
5415: PUSH
5416: LD_INT 1
5418: ARRAY
5419: PPUSH
5420: LD_INT 41
5422: PPUSH
5423: LD_INT 50
5425: PPUSH
5426: CALL_OW 171
// ComMoveXY ( convoy [ 2 ] , 39 , 38 ) ;
5430: LD_EXP 12
5434: PUSH
5435: LD_INT 2
5437: ARRAY
5438: PPUSH
5439: LD_INT 39
5441: PPUSH
5442: LD_INT 38
5444: PPUSH
5445: CALL_OW 111
// AddComMoveXY ( convoy [ 2 ] , 41 , 47 ) ;
5449: LD_EXP 12
5453: PUSH
5454: LD_INT 2
5456: ARRAY
5457: PPUSH
5458: LD_INT 41
5460: PPUSH
5461: LD_INT 47
5463: PPUSH
5464: CALL_OW 171
// ComMoveXY ( convoy [ 3 ] , 39 , 38 ) ;
5468: LD_EXP 12
5472: PUSH
5473: LD_INT 3
5475: ARRAY
5476: PPUSH
5477: LD_INT 39
5479: PPUSH
5480: LD_INT 38
5482: PPUSH
5483: CALL_OW 111
// AddComMoveXY ( convoy [ 3 ] , 41 , 44 ) ;
5487: LD_EXP 12
5491: PUSH
5492: LD_INT 3
5494: ARRAY
5495: PPUSH
5496: LD_INT 41
5498: PPUSH
5499: LD_INT 44
5501: PPUSH
5502: CALL_OW 171
// wait ( 0 0$4 ) ;
5506: LD_INT 140
5508: PPUSH
5509: CALL_OW 67
// ComMoveXY ( convoy [ 4 ] , 47 , 49 ) ;
5513: LD_EXP 12
5517: PUSH
5518: LD_INT 4
5520: ARRAY
5521: PPUSH
5522: LD_INT 47
5524: PPUSH
5525: LD_INT 49
5527: PPUSH
5528: CALL_OW 111
// ComMoveXY ( convoy [ 5 ] , 47 , 49 ) ;
5532: LD_EXP 12
5536: PUSH
5537: LD_INT 5
5539: ARRAY
5540: PPUSH
5541: LD_INT 47
5543: PPUSH
5544: LD_INT 49
5546: PPUSH
5547: CALL_OW 111
// ComMoveXY ( convoy [ 6 ] , 47 , 49 ) ;
5551: LD_EXP 12
5555: PUSH
5556: LD_INT 6
5558: ARRAY
5559: PPUSH
5560: LD_INT 47
5562: PPUSH
5563: LD_INT 49
5565: PPUSH
5566: CALL_OW 111
// end ; end_of_file
5570: LD_VAR 0 1
5574: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
5575: LD_INT 0
5577: PPUSH
5578: PPUSH
// if exist_mode then
5579: LD_VAR 0 2
5583: IFFALSE 5602
// unit := CreateCharacter ( ident ) else
5585: LD_ADDR_VAR 0 4
5589: PUSH
5590: LD_VAR 0 1
5594: PPUSH
5595: CALL_OW 34
5599: ST_TO_ADDR
5600: GO 5617
// unit := NewCharacter ( ident ) ;
5602: LD_ADDR_VAR 0 4
5606: PUSH
5607: LD_VAR 0 1
5611: PPUSH
5612: CALL_OW 25
5616: ST_TO_ADDR
// result := unit ;
5617: LD_ADDR_VAR 0 3
5621: PUSH
5622: LD_VAR 0 4
5626: ST_TO_ADDR
// end ; end_of_file
5627: LD_VAR 0 3
5631: RET
