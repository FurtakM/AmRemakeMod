Export Function Action;
var i, veh;
begin
ComBuild(alpha_engs, b_depot, 50, 38, 2);

InGameOn;
CenterNowOnXY(43, 9);

ComMoveXY(JMM, 54, 34);
AddComExitVehicle(JMM);

AddComTurnUnit(JMM, alpha_engs[1]);

repeat
 wait(0$01);
until See(4, JMM);

CenterNowOnUnits(JMM);

Say(JMM, 'D2-JMM-1');

ComTurnUnit(alpha_engs[3], JMM);

Say(alpha_engs[3], 'D2-Eng1-1');
Say(JMM, 'D2-JMM-2');
Say(alpha_engs[3], 'D2-Eng1-2');
Say(JMM, 'D2-JMM-3');

if Houten then
   begin
   veh := PrepareTank(4, 1, us_medium_tracked, engine_solar, control_manual, us_gatling_gun, 55);
   SetDir(veh, 3);
   PlaceUnitXY(veh, 46, 19, false);
   PlaceHumanInUnit(Houten, veh);
   ComMoveXY(Houten, 49, 33);
   AddComExitVehicle(Houten);
   AddComTurnUnit(Houten, JMM);

   repeat
    wait(0$01);
   until See(1, Houten);

   ComTurnUnit(JMM, Houten);
   Say(JMM, 'D1d-JMM-1');
   Say(Houten, 'D1-VanH-1');
   Say(JMM, 'D1-JMM-1v');
   Say(JMM, 'D1-JMM-2v');
   end;

InGameOff;

ChangeMissionObjectives('M1');

SetSide(FilterAllUnits([[f_side, 4], [f_distxy, GetX(JMM), GetY(JMM), 15]]), 1);

ComStop(alpha_engs^JMM^Houten);
End;


// JMM in ovsyenko
Every 0$1 trigger See(1, Gary) and GetDistUnits(JMM, Gary) < 6 do
var un1, un2, un3, tmp, i;
begin
InGameOn;

tmp := FilterAllUnits([[f_side, 4], [f_type, unit_human]]);
SetSide(FilterAllUnits([f_side, 4]), 1);

ComHold(JMM);
Say(JMM, 'D2-JMM-3a');

ComTurnUnit(Gary, JMM);

Say(Gary, 'D2-Gary-3');

ComTurnUnit(JMM, Gary);

for i in tmp do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);

    AddComTurnUnit(i, JMM);
    end;

tmp := tmp diff [Gary, Cyrus, Bobby];

if Bobby then
   Say(Bobby, 'D2-Bobby-3');

if Cyrus then
   Say(Cyrus, 'D2-Cyrus-3');

Say(JMM, 'D2-JMM-4');
Say(Gary, 'D2-Gary-4');

un1 := UnitFilter(tmp, [f_sex, sex_male])[1];

if Cyrus then
   Say(Cyrus, 'D2-Cyrus-4')
  else
   Say(un1, 'D2-Sol1-4');

Say(JMM, 'D2-JMM-5');

un2 := UnitFilter(alpha_engs, [f_sex, sex_female])[UnitFilter(alpha_engs, [f_sex, sex_female])];

if un2 then
   begin
   Say(un2, 'D2-FEng1-5');
   Say(JMM, 'D2-JMM-6');
   Say(un2, 'D2-FEng1-6');
   end;

un3 := UnitFilter(alpha_engs, [f_sex, sex_male])[1];

if un3 then
   begin
   ComMoveXY(un3, 114, 122);

   Say(un3, 'D2-Eng1-6');
   Say(JMM, 'D2-JMM-7');
   end;

Say(Gary, 'D2-Gary-7');

if un2 then
   Say(un2, 'D2-FEng1-7');

Say(un1, 'D2-Sol1-7');
Say(JMM, 'D2-JMM-8');

ComStop(FilterAllUnits([f_side, 1]));

InGameOff;

ChangeMissionObjectives('M1a');

jmm_in_ovsyenko := true;
End;


// powell radio
Every 3$00 do
begin
DialogueOn;

SayRadio(Powell, 'D3-Pow-1');

if jmm_in_ovsyenko then
   begin
   Say(JMM, 'D3-JMM-1');
   Say(JMM, 'D3-JMM-1b');
   end
  else
   Say(JMM, 'D3-JMM-1a');

SayRadio(Powell, 'D3-Pow-2');

DialogueOff;

ChangeMissionObjectives('M3'); // 60 sib for powell

powell_want_sib := true;
End;


// Powell want sib! Now!
Every 0$1 trigger powell_want_sib_counter = 0$00 {or (debug and tick > 0$5 and terminal)} do
var x, y, i, un, powell_happy, take_cargo;
begin

{if debug then
   begin
   Wait(0$40);
   SetResourceType(GetBase(terminal), mat_siberit, 200);
   end;}

ChangeSideFog(4, 1);
PowellTransport;

x := 43;
y := 3;

for i = 3 to 4 do
    begin
    SetDir(powell_trans[i], 4);
    PlaceUnitXY(powell_trans[i], x, y, false);
    PlaceHumanInUnit(powell_trans[i-2], powell_trans[i]);
    SetCargo(powell_trans[i], mat_cans, 100);
    ComMoveXY(powell_trans[i-2], 54, 42);
    AddComUnload(powell_trans[i-2]);
    AddComMoveXY(powell_trans[i-2], GetX(terminal), GetY(terminal));
    AddComHold(powell_trans[i-2]);
    Wait(0$02);
    end;

repeat
 wait(0$01);

 for i = 3 to 4 do
     if GetCargo(powell_trans[i], mat_cans) > 0 and not HasTask(powell_trans[i]) then
        begin
        ComUnload(powell_trans[i]);
        x := rand(0, 5);
        AddComMoveXY(powell_trans[i], ShiftX(GetX(powell_trans[i]), x, 3), ShiftY(GetY(powell_trans[i]), x, 3));
        end;
until GetDistUnitXY(powell_trans[1], 54, 42) < 4 and
     (GetCargo(powell_trans[3], mat_cans) = 0) and
     (GetCargo(powell_trans[4], mat_cans) = 0);


DialogueOn;
CenterNowOnXY(53, 35);

un := powell_trans[1];

Say(un, 'D4-Mech1-1');
Say(JMM, 'D4-JMM-1');
Say(un, 'D4-Mech1-2');

powell_happy := false;
take_cargo := false;

if GetTerminalCargo >= 60 then  // you got sib!
   begin
   Say(JMM, 'D5-JMM-1');
   Say(un, 'D6-Mech1-1');
   powell_happy := true;
   take_cargo := true;
   DialogueOff;
   end
  else
   begin
    case Query('QWait') of
    1: begin // niech mechanik poczeka 5 min
       Say(JMM, 'D5b-JMM-1');
       DialogueOff;
       wait(5$00);

       if GetTerminalCargo < 60 then
          begin
          DialogueOn;
          CenterNowOnUnits(terminal);
          Say(un, 'D6-Mech1-1a');
          DialogueOff;
          powell_happy := false;
          end
         else
          begin
          powell_happy := true;
          take_cargo := true;            
          end;
       end;
    2: begin // przeproœ powella za zw³oke
       Say(JMM, 'D5b-JMM-1');
       Say(un, 'D6-Mech1-1a');
       DialogueOff;
       take_cargo := true;
       end;
    3: begin // powiedz powellowi zeby sie odpieroli³
       Say(JMM, 'D5c-JMM-1');
       Say(un, 'D6-Mech1-1b');
       DialogueOff;
       end;
   end;
  end;

if take_cargo then
   begin
   x := GetTerminalCargo;

   if x > 60 then
      x := 60;

   SetResourceType(GetBase(terminal), mat_siberit, GetTerminalCargo()-x);
   AddCargo(powell_trans[3], mat_siberit, x);
   end;

AddComMoveXY(powell_trans, 43, 3);

x := 0$20;

repeat
 wait(0$01);
 x := x - 0$01;
until x = 0$00 or (GetDistUnitXY(powell_trans[3], 43, 3) < 4 and GetDistUnitXY(powell_trans[3], 43, 3) < 4);

for i in powell_trans do
    RemoveUnit(i);

AddMedal(powell_happy, 'EarlySiberite');
End;