Export function PrepareJMMTeam;
var i, j;
begin
    uc_side = 1;
    uc_nation = 1;

    JMM = PrepareUnit('10_JMM', true);
    Gary = PrepareUnit('10_Gary', true);
    Cyrus = PrepareUnit('10_Cyrus', true);
    Bobby = PrepareUnit('10_Bobby', true);
    Lisa = PrepareUnit('10_Lisa', true);
    Kikuchi = PrepareUnit('10_Kikuchi', true);

    Brown = PrepareUnit('10_Brown', true);
    Donaldson = PrepareUnit('10_Donaldson', true);
    Frank = PrepareUnit('10_Frank', true);
    Houten = PrepareUnit('10_Houten', true);

    others10 = CreateCharacterSet('OthersIn10');

    Powell = PrepareUnit('Powell', false);

    PlaceHumanInUnit(JMM, playerVehs[1]);
    PlaceHumanInUnit(Gary, playerVehs[2]);
        if not IsPlaced(Gary) and not IsPlaced(Brown) and UnitsInside(playerVehs[2]) = [] then PlaceHumanInUnit(Brown, playerVehs[2]);
        if not IsPlaced(Gary) and not IsPlaced(Donaldson) and UnitsInside(playerVehs[2]) = [] then PlaceHumanInUnit(Donaldson, playerVehs[2]);
        if not IsPlaced(Gary) and not IsPlaced(Frank) and UnitsInside(playerVehs[2]) = [] then PlaceHumanInUnit(Frank, playerVehs[2]);
        if not IsPlaced(Gary) and not IsPlaced(Houten) and UnitsInside(playerVehs[2]) = [] then PlaceHumanInUnit(Houten, playerVehs[2]);

    PlaceHumanInUnit(Cyrus, playerVehs[3]);
        if not IsPlaced(Cyrus) and not IsPlaced(Brown) and UnitsInside(playerVehs[3]) = [] then PlaceHumanInUnit(Brown, playerVehs[3]);
        if not IsPlaced(Cyrus) and not IsPlaced(Donaldson) and UnitsInside(playerVehs[3]) = [] then PlaceHumanInUnit(Donaldson, playerVehs[3]);
        if not IsPlaced(Cyrus) and not IsPlaced(Frank) and UnitsInside(playerVehs[3]) = [] then PlaceHumanInUnit(Frank, playerVehs[3]);
        if not IsPlaced(Cyrus) and not IsPlaced(Houten) and UnitsInside(playerVehs[3]) = [] then PlaceHumanInUnit(Houten, playerVehs[3]);


    PlaceHumanInUnit(Bobby, playerVehs[4]);
        if not IsPlaced(Bobby) and not IsPlaced(Brown) and UnitsInside(playerVehs[4]) = [] then PlaceHumanInUnit(Brown, playerVehs[4]);
        if not IsPlaced(Bobby) and not IsPlaced(Donaldson) and UnitsInside(playerVehs[4]) = [] then PlaceHumanInUnit(Donaldson, playerVehs[4]);
        if not IsPlaced(Bobby) and not IsPlaced(Frank) and UnitsInside(playerVehs[4]) = [] then PlaceHumanInUnit(Frank, playerVehs[4]);
        if not IsPlaced(Bobby) and not IsPlaced(Houten) and UnitsInside(playerVehs[4]) = [] then PlaceHumanInUnit(Houten, playerVehs[4]);


    PlaceHumanInUnit(Lisa, playerVehs[5]);
        if not IsPlaced(Lisa) and not IsPlaced(Brown) and UnitsInside(playerVehs[5]) = [] then PlaceHumanInUnit(Brown, playerVehs[5]);
        if not IsPlaced(Lisa) and not IsPlaced(Donaldson) and UnitsInside(playerVehs[5]) = [] then PlaceHumanInUnit(Donaldson, playerVehs[5]);
        if not IsPlaced(Lisa) and not IsPlaced(Frank) and UnitsInside(playerVehs[5]) = [] then PlaceHumanInUnit(Frank, playerVehs[5]);
        if not IsPlaced(Lisa) and not IsPlaced(Houten) and UnitsInside(playerVehs[5]) = [] then PlaceHumanInUnit(Houten, playerVehs[5]);


    if TestCharacters('08_Frank') then PlaceHumanInUnit(Kikuchi, playerVehs[6]);

    SetClass(FilterAllUnits([[f_side, 1], [f_type, unit_human]]), 1);

    BonusVehicles;

    if FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]) > 0 then
    begin
        for i in others10 do
        begin
            for j in FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]) do
            begin
                PlaceHumanInUnit(i, j);
                SetClass(i, 1);
            end;
        end;
    end;

    if not IsPlaced(Brown) and FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]) > 0 then PlaceHumanInUnit(Brown, FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]])[1]); 
    if not IsPlaced(Donaldson) and FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]) > 0 then PlaceHumanInUnit(Donaldson, FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]])[1]);
    if not IsPlaced(Frank) and FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]) > 0 then PlaceHumanInUnit(Frank, FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]])[1]);
    if not IsPlaced(Houten) and FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]]) > 0 then PlaceHumanInUnit(Houten, FilterAllUnits([[f_side, 1], [f_type, unit_vehicle], [f_empty]])[1]);


end;

Export function BonusVehicles; // Trzeba nagradzac starania ;)
var i, siberite, rnd, veh;
begin
    siberite = LoadVariable('09_SibRes', 0);

    if siberite >= 200 then
    begin
        for i := 1 to 2 do
        begin
            rnd = Rand(1, 10) * 10;

            vc_engine = 1;
            vc_control = 1;
            vc_weapon = 12;
            vc_chassis = 3;

            veh = CreateVehicle;
            SetDir(veh, 1);
            PlaceUnitArea(veh, PlayerSpawn, false);
            AddCargo(veh, [1, 3][Rand(1, 2)], rnd);         
        end;
    end;

    if siberite > 200 then
    begin
        for i := 1 to siberite / 100 do
        begin
            vc_engine = 1;
            vc_control = 1;
            vc_weapon = [3, 4, 5][Rand(1, 3)];
            vc_chassis = 3;

            veh = CreateVehicle;
            SetDir(veh, 1);
            PlaceUnitArea(veh, PlayerSpawn, false);    
        end;
    end;

end;

Export function PrepareVehicles;
var i, veh, rnd, cargoAmmount, rest, count;
begin
    uc_side = 1;
    uc_nation = 1;
    rest = 0;

    if TestCharacters('08_Frank') then count = 6
    else count = 5;

    for i := 1 to count do
    begin
        vc_engine = 1;
        vc_control = 1;
        vc_weapon = [3, 4, 5, 12][Rand(1, 4)];
        vc_chassis = 3;

        veh = CreateVehicle;
        SetDir(veh, 1);
        PlaceUnitArea(veh, PlayerSpawn, false);
        playerVehs = playerVehs ^ veh;

        if vc_weapon = 12 then
        begin
            rnd = Rand(5, 10) * 10;
            AddCargo(veh, [1, 3][Rand(1,2)], rnd);
        end; 
            
    end;

end;

Export function PrepareCathyTeam;
var i, tmp;
begin
    uc_side = 4;
    uc_nation = 1;

    Simms = PrepareUnit('Simms', false);
    Denis = PrepareUnit('08_Denis', true);
    Joan = PrepareUnit('08_Joan', true);
    Khatam = PrepareUnit('Khatam', true);
    Gladstone = PrepareUnit('Gladstone', true);
    DeltaDoctor = PrepareUnit('DeltaDoctor', true);

    others09 = CreateCharacterSet('09_others');
    ape09 = CreateCharacterSet('09_apes');

    PlaceUnitArea(Simms, CathyTeamSpawn, false);
    PlaceUnitArea(Denis, CathyTeamSpawn, false);
    PlaceUnitArea(Joan, CathyTeamSpawn, false);
    PlaceUnitArea(Khatam, CathyTeamSpawn, false);
    PlaceUnitArea(Gladstone, CathyTeamSpawn, false);
    PlaceUnitArea(DeltaDoctor, CathyTeamSpawn, false);
    PlaceUnitArea(Steve, CathyTeamSpawn, false);

    SetClass([Simms, Khatam, Denis, Gladstone, DeltaDoctor, Joan], 4);

    if others09 > 2 then
    begin
        for i := 1 to 3 do PlaceUnitArea(others09[i], CathyTeamSpawn,  false);
    end else
    begin
        for i in others09 do PlaceUnitArea(i, CathyTeamSpawn, false);
    end;

    if FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_class, 2]]) diff [Simms, Khatam, Denis, Gladstone, DeltaDoctor, Joan] = 0 then
    begin
        tmp = FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_class, 2]]) diff [Simms, Khatam, Denis, Gladstone, DeltaDoctor, Joan];
        SetClass(tmp[1], 2);
    end;

    for i in ape09 do PlaceUnitArea(i, CathyTeamSpawn, false);

    AddComBuild(FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_class, 2]]), b_depot, 101, 30, 2);

    uc_side = 1;

    hc_class := 1;
    hc_sex := sex_female;
    hc_gallery := '';
    hc_name := '';
    hc_skills := [1, 7, 1, 0];

    AmScout = CreateHuman;

end;

Export function PrepareCornell;
begin
    uc_side = 4;
    uc_nation = 1;

    Cornell = PrepareUnit('03_Cornel', true);
    PlaceUnitArea(Cornell, CornellSpawn, false);
    If IsInUnit(JMM) then ComMoveXY(Cornell, GetX(IsInUnit(JMM)), GetY(IsInUnit(JMM)))
    else ComMoveXY(Cornell, GetX(JMM), GetY(JMM));
end;