// export JMM , Powell ; export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ; export others12 , others11 ; export mission_prefix_prev ; starting begin Resetfog ;
   0: CALL_OW 335
// RandomizeAll ;
   4: CALL_OW 11
// mission_prefix_prev = 12_ ;
   8: LD_ADDR_EXP 17
  12: PUSH
  13: LD_STRING 12_
  15: ST_TO_ADDR
// PrepareEpsilonBase ;
  16: CALL 584 0 0
// PrepareHeroes ;
  20: CALL 188 0 0
// CenterNowOnUnits ( JMM ) ;
  24: LD_EXP 1
  28: PPUSH
  29: CALL_OW 87
// DialogueOn ;
  33: CALL_OW 6
// Say ( JMM , D1-JMM-1 ) ;
  37: LD_EXP 1
  41: PPUSH
  42: LD_STRING D1-JMM-1
  44: PPUSH
  45: CALL_OW 88
// SayRadio ( Powell , D1-Pow-1 ) ;
  49: LD_EXP 2
  53: PPUSH
  54: LD_STRING D1-Pow-1
  56: PPUSH
  57: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1a ) ;
  61: LD_EXP 2
  65: PPUSH
  66: LD_STRING D1-Pow-1a
  68: PPUSH
  69: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1b ) ;
  73: LD_EXP 2
  77: PPUSH
  78: LD_STRING D1-Pow-1b
  80: PPUSH
  81: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1c ) ;
  85: LD_EXP 2
  89: PPUSH
  90: LD_STRING D1-Pow-1c
  92: PPUSH
  93: CALL_OW 94
// Say ( JMM , D1-JMM-2 ) ;
  97: LD_EXP 1
 101: PPUSH
 102: LD_STRING D1-JMM-2
 104: PPUSH
 105: CALL_OW 88
// SayRadio ( Powell , D1-Pow-2 ) ;
 109: LD_EXP 2
 113: PPUSH
 114: LD_STRING D1-Pow-2
 116: PPUSH
 117: CALL_OW 94
// Say ( JMM , D1-JMM-3 ) ;
 121: LD_EXP 1
 125: PPUSH
 126: LD_STRING D1-JMM-3
 128: PPUSH
 129: CALL_OW 88
// SayRadio ( Powell , D1-Pow-3 ) ;
 133: LD_EXP 2
 137: PPUSH
 138: LD_STRING D1-Pow-3
 140: PPUSH
 141: CALL_OW 94
// Say ( JMM , D1-JMM-4 ) ;
 145: LD_EXP 1
 149: PPUSH
 150: LD_STRING D1-JMM-4
 152: PPUSH
 153: CALL_OW 88
// SayRadio ( Powell , D1-Pow-4 ) ;
 157: LD_EXP 2
 161: PPUSH
 162: LD_STRING D1-Pow-4
 164: PPUSH
 165: CALL_OW 94
// DialogueOff ;
 169: CALL_OW 7
// SelectAndSaveCharacters ;
 173: CALL 998 0 0
// ChangeMap ( 13 , %_cont ) ;
 177: LD_INT 13
 179: PPUSH
 180: LD_STRING %_cont
 182: PPUSH
 183: CALL_OW 340
// end ; end_of_file
 187: END
// export function PrepareHeroes ; var i , others , tmp ; begin
 188: LD_INT 0
 190: PPUSH
 191: PPUSH
 192: PPUSH
 193: PPUSH
// tmp = FilterAllUnits ( [ [ f_side , 1 ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , 1 ] ] ] ) ;
 194: LD_ADDR_VAR 0 4
 198: PUSH
 199: LD_INT 22
 201: PUSH
 202: LD_INT 1
 204: PUSH
 205: EMPTY
 206: LIST
 207: LIST
 208: PUSH
 209: LD_INT 2
 211: PUSH
 212: LD_INT 30
 214: PUSH
 215: LD_INT 0
 217: PUSH
 218: EMPTY
 219: LIST
 220: LIST
 221: PUSH
 222: LD_INT 30
 224: PUSH
 225: LD_INT 1
 227: PUSH
 228: EMPTY
 229: LIST
 230: LIST
 231: PUSH
 232: EMPTY
 233: LIST
 234: LIST
 235: LIST
 236: PUSH
 237: EMPTY
 238: LIST
 239: LIST
 240: PPUSH
 241: CALL_OW 69
 245: ST_TO_ADDR
// uc_side = 1 ;
 246: LD_ADDR_OWVAR 20
 250: PUSH
 251: LD_INT 1
 253: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , true ) ;
 254: LD_ADDR_EXP 1
 258: PUSH
 259: LD_STRING JMM
 261: PPUSH
 262: LD_INT 1
 264: PPUSH
 265: CALL 935 0 2
 269: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , true ) ;
 270: LD_ADDR_EXP 3
 274: PUSH
 275: LD_STRING Lisa
 277: PPUSH
 278: LD_INT 1
 280: PPUSH
 281: CALL 935 0 2
 285: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , true ) ;
 286: LD_ADDR_EXP 4
 290: PUSH
 291: LD_STRING Donaldson
 293: PPUSH
 294: LD_INT 1
 296: PPUSH
 297: CALL 935 0 2
 301: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , true ) ;
 302: LD_ADDR_EXP 5
 306: PUSH
 307: LD_STRING Bobby
 309: PPUSH
 310: LD_INT 1
 312: PPUSH
 313: CALL 935 0 2
 317: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , true ) ;
 318: LD_ADDR_EXP 6
 322: PUSH
 323: LD_STRING Cyrus
 325: PPUSH
 326: LD_INT 1
 328: PPUSH
 329: CALL 935 0 2
 333: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , true ) ;
 334: LD_ADDR_EXP 7
 338: PUSH
 339: LD_STRING Denis
 341: PPUSH
 342: LD_INT 1
 344: PPUSH
 345: CALL 935 0 2
 349: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , true ) ;
 350: LD_ADDR_EXP 8
 354: PUSH
 355: LD_STRING Brown
 357: PPUSH
 358: LD_INT 1
 360: PPUSH
 361: CALL 935 0 2
 365: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , true ) ;
 366: LD_ADDR_EXP 9
 370: PUSH
 371: LD_STRING Gladstone
 373: PPUSH
 374: LD_INT 1
 376: PPUSH
 377: CALL 935 0 2
 381: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , true ) ;
 382: LD_ADDR_EXP 10
 386: PUSH
 387: LD_STRING Houten
 389: PPUSH
 390: LD_INT 1
 392: PPUSH
 393: CALL 935 0 2
 397: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , true ) ;
 398: LD_ADDR_EXP 11
 402: PUSH
 403: LD_STRING Cornel
 405: PPUSH
 406: LD_INT 1
 408: PPUSH
 409: CALL 935 0 2
 413: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , true ) ;
 414: LD_ADDR_EXP 12
 418: PUSH
 419: LD_STRING Gary
 421: PPUSH
 422: LD_INT 1
 424: PPUSH
 425: CALL 935 0 2
 429: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , true ) ;
 430: LD_ADDR_EXP 13
 434: PUSH
 435: LD_STRING Frank
 437: PPUSH
 438: LD_INT 1
 440: PPUSH
 441: CALL 935 0 2
 445: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , true ) ;
 446: LD_ADDR_EXP 14
 450: PUSH
 451: LD_STRING Kikuchi
 453: PPUSH
 454: LD_INT 1
 456: PPUSH
 457: CALL 935 0 2
 461: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 462: LD_ADDR_EXP 2
 466: PUSH
 467: LD_STRING Powell
 469: PPUSH
 470: LD_INT 0
 472: PPUSH
 473: CALL 935 0 2
 477: ST_TO_ADDR
// PlaceUnitXYR ( JMM , GetX ( tmp [ 1 ] ) , GetY ( tmp [ 1 ] ) , 4 , false ) ;
 478: LD_EXP 1
 482: PPUSH
 483: LD_VAR 0 4
 487: PUSH
 488: LD_INT 1
 490: ARRAY
 491: PPUSH
 492: CALL_OW 250
 496: PPUSH
 497: LD_VAR 0 4
 501: PUSH
 502: LD_INT 1
 504: ARRAY
 505: PPUSH
 506: CALL_OW 251
 510: PPUSH
 511: LD_INT 4
 513: PPUSH
 514: LD_INT 0
 516: PPUSH
 517: CALL_OW 50
// SetBName ( tmp [ 1 ] , epsilon ) ;
 521: LD_VAR 0 4
 525: PUSH
 526: LD_INT 1
 528: ARRAY
 529: PPUSH
 530: LD_STRING epsilon
 532: PPUSH
 533: CALL_OW 500
// others12 = CreateCharacterSet ( 12_other_survivors ) ;
 537: LD_ADDR_EXP 15
 541: PUSH
 542: LD_STRING 12_other_survivors
 544: PPUSH
 545: CALL_OW 31
 549: ST_TO_ADDR
// others11 = CreateCharacterSet ( 11c_others ) ;
 550: LD_ADDR_EXP 16
 554: PUSH
 555: LD_STRING 11c_others
 557: PPUSH
 558: CALL_OW 31
 562: ST_TO_ADDR
// others11 = others11 diff others12 ;
 563: LD_ADDR_EXP 16
 567: PUSH
 568: LD_EXP 16
 572: PUSH
 573: LD_EXP 15
 577: DIFF
 578: ST_TO_ADDR
// end ;
 579: LD_VAR 0 1
 583: RET
// export function PrepareEpsilonBase ; var blist , i , b , un ; begin
 584: LD_INT 0
 586: PPUSH
 587: PPUSH
 588: PPUSH
 589: PPUSH
 590: PPUSH
// SetResourceVisibility ( 113 , 50 , 1 ) ;
 591: LD_INT 113
 593: PPUSH
 594: LD_INT 50
 596: PPUSH
 597: LD_INT 1
 599: PPUSH
 600: CALL_OW 441
// SetResourceVisibility ( 104 , 24 , 1 ) ;
 604: LD_INT 104
 606: PPUSH
 607: LD_INT 24
 609: PPUSH
 610: LD_INT 1
 612: PPUSH
 613: CALL_OW 441
// blist := LoadVariable ( 10_EpsilonBase , [ ] ) ;
 617: LD_ADDR_VAR 0 2
 621: PUSH
 622: LD_STRING 10_EpsilonBase
 624: PPUSH
 625: EMPTY
 626: PPUSH
 627: CALL_OW 30
 631: ST_TO_ADDR
// if not blist then
 632: LD_VAR 0 2
 636: NOT
 637: IFFALSE 641
// exit ;
 639: GO 930
// uc_side := 1 ;
 641: LD_ADDR_OWVAR 20
 645: PUSH
 646: LD_INT 1
 648: ST_TO_ADDR
// uc_nation := 1 ;
 649: LD_ADDR_OWVAR 21
 653: PUSH
 654: LD_INT 1
 656: ST_TO_ADDR
// for i in blist do
 657: LD_ADDR_VAR 0 3
 661: PUSH
 662: LD_VAR 0 2
 666: PUSH
 667: FOR_IN
 668: IFFALSE 819
// begin bc_type := i [ 1 ] ;
 670: LD_ADDR_OWVAR 42
 674: PUSH
 675: LD_VAR 0 3
 679: PUSH
 680: LD_INT 1
 682: ARRAY
 683: ST_TO_ADDR
// bc_level := i [ 5 ] ;
 684: LD_ADDR_OWVAR 43
 688: PUSH
 689: LD_VAR 0 3
 693: PUSH
 694: LD_INT 5
 696: ARRAY
 697: ST_TO_ADDR
// if i [ 1 ] in [ b_lab_half , b_lab_full ] then
 698: LD_VAR 0 3
 702: PUSH
 703: LD_INT 1
 705: ARRAY
 706: PUSH
 707: LD_INT 7
 709: PUSH
 710: LD_INT 8
 712: PUSH
 713: EMPTY
 714: LIST
 715: LIST
 716: IN
 717: IFFALSE 747
// begin bc_kind1 := i [ 7 ] ;
 719: LD_ADDR_OWVAR 44
 723: PUSH
 724: LD_VAR 0 3
 728: PUSH
 729: LD_INT 7
 731: ARRAY
 732: ST_TO_ADDR
// bc_kind2 := i [ 8 ] ;
 733: LD_ADDR_OWVAR 45
 737: PUSH
 738: LD_VAR 0 3
 742: PUSH
 743: LD_INT 8
 745: ARRAY
 746: ST_TO_ADDR
// end ; b := CreateAndPlaceBuildingXYD ( i [ 2 ] , i [ 3 ] , i [ 4 ] ) ;
 747: LD_ADDR_VAR 0 4
 751: PUSH
 752: LD_VAR 0 3
 756: PUSH
 757: LD_INT 2
 759: ARRAY
 760: PPUSH
 761: LD_VAR 0 3
 765: PUSH
 766: LD_INT 3
 768: ARRAY
 769: PPUSH
 770: LD_VAR 0 3
 774: PUSH
 775: LD_INT 4
 777: ARRAY
 778: PPUSH
 779: CALL_OW 47
 783: ST_TO_ADDR
// if GetBType ( b ) = b_bunker then
 784: LD_VAR 0 4
 788: PPUSH
 789: CALL_OW 266
 793: PUSH
 794: LD_INT 32
 796: EQUAL
 797: IFFALSE 817
// begin PlaceWeaponTurret ( b , i [ 7 ] ) ;
 799: LD_VAR 0 4
 803: PPUSH
 804: LD_VAR 0 3
 808: PUSH
 809: LD_INT 7
 811: ARRAY
 812: PPUSH
 813: CALL_OW 431
// end ; end ;
 817: GO 667
 819: POP
 820: POP
// for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_type , unit_building ] , [ f_empty ] ] ) do
 821: LD_ADDR_VAR 0 3
 825: PUSH
 826: LD_INT 22
 828: PUSH
 829: LD_INT 1
 831: PUSH
 832: EMPTY
 833: LIST
 834: LIST
 835: PUSH
 836: LD_INT 21
 838: PUSH
 839: LD_INT 3
 841: PUSH
 842: EMPTY
 843: LIST
 844: LIST
 845: PUSH
 846: LD_INT 58
 848: PUSH
 849: EMPTY
 850: LIST
 851: PUSH
 852: EMPTY
 853: LIST
 854: LIST
 855: LIST
 856: PPUSH
 857: CALL_OW 69
 861: PUSH
 862: FOR_IN
 863: IFFALSE 928
// begin hc_name =  ;
 865: LD_ADDR_OWVAR 26
 869: PUSH
 870: LD_STRING 
 872: ST_TO_ADDR
// hc_gallery =  ;
 873: LD_ADDR_OWVAR 33
 877: PUSH
 878: LD_STRING 
 880: ST_TO_ADDR
// PrepareHuman ( false , 1 , rand ( 5 , 8 ) ) ;
 881: LD_INT 0
 883: PPUSH
 884: LD_INT 1
 886: PPUSH
 887: LD_INT 5
 889: PPUSH
 890: LD_INT 8
 892: PPUSH
 893: CALL_OW 12
 897: PPUSH
 898: CALL_OW 380
// un = CreateHuman ;
 902: LD_ADDR_VAR 0 5
 906: PUSH
 907: CALL_OW 44
 911: ST_TO_ADDR
// PlaceHumanInUnit ( un , i ) ;
 912: LD_VAR 0 5
 916: PPUSH
 917: LD_VAR 0 3
 921: PPUSH
 922: CALL_OW 52
// end ;
 926: GO 862
 928: POP
 929: POP
// end ; end_of_file
 930: LD_VAR 0 1
 934: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
 935: LD_INT 0
 937: PPUSH
 938: PPUSH
// if exist_mode then
 939: LD_VAR 0 2
 943: IFFALSE 968
// unit := CreateCharacter ( mission_prefix_prev & ident ) else
 945: LD_ADDR_VAR 0 4
 949: PUSH
 950: LD_EXP 17
 954: PUSH
 955: LD_VAR 0 1
 959: STR
 960: PPUSH
 961: CALL_OW 34
 965: ST_TO_ADDR
 966: GO 983
// unit := NewCharacter ( ident ) ;
 968: LD_ADDR_VAR 0 4
 972: PUSH
 973: LD_VAR 0 1
 977: PPUSH
 978: CALL_OW 25
 982: ST_TO_ADDR
// result := unit ;
 983: LD_ADDR_VAR 0 3
 987: PUSH
 988: LD_VAR 0 4
 992: ST_TO_ADDR
// end ;
 993: LD_VAR 0 3
 997: RET
// export function SelectAndSaveCharacters ; var i , selected , tmp , others ; begin
 998: LD_INT 0
1000: PPUSH
1001: PPUSH
1002: PPUSH
1003: PPUSH
1004: PPUSH
// tmp = [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1005: LD_ADDR_VAR 0 4
1009: PUSH
1010: LD_EXP 3
1014: PUSH
1015: LD_EXP 4
1019: PUSH
1020: LD_EXP 5
1024: PUSH
1025: LD_EXP 6
1029: PUSH
1030: LD_EXP 7
1034: PUSH
1035: LD_EXP 8
1039: PUSH
1040: LD_EXP 9
1044: PUSH
1045: LD_EXP 10
1049: PUSH
1050: LD_EXP 11
1054: PUSH
1055: LD_EXP 12
1059: PUSH
1060: LD_EXP 13
1064: PUSH
1065: LD_EXP 14
1069: PUSH
1070: EMPTY
1071: LIST
1072: LIST
1073: LIST
1074: LIST
1075: LIST
1076: LIST
1077: LIST
1078: LIST
1079: LIST
1080: LIST
1081: LIST
1082: LIST
1083: ST_TO_ADDR
// tmp = tmp ^ others11 ;
1084: LD_ADDR_VAR 0 4
1088: PUSH
1089: LD_VAR 0 4
1093: PUSH
1094: LD_EXP 16
1098: ADD
1099: ST_TO_ADDR
// tmp = tmp ^ others12 ;
1100: LD_ADDR_VAR 0 4
1104: PUSH
1105: LD_VAR 0 4
1109: PUSH
1110: LD_EXP 15
1114: ADD
1115: ST_TO_ADDR
// selected := CharacterSelection ( 1 , 6 , 6 , [ sel_change_class , JMM , sel_not_hired , sel_changeable , sel_change_class ] ^ tmp ^ [ sel_dont_change_class , sel_not_changeable , Powell ] , [ [ class_soldier , 2 ] , [ class_engineer , 1 ] , [ class_mechanic , 0 , 5 ] , [ class_scientistic , 0 , 3 ] , [ class_sniper , 0 , 2 ] , [ class_mortar , 0 , 2 ] ] ) ;
1116: LD_ADDR_VAR 0 3
1120: PUSH
1121: LD_STRING 1
1123: PPUSH
1124: LD_INT 6
1126: PPUSH
1127: LD_INT 6
1129: PPUSH
1130: LD_INT -5
1132: PUSH
1133: LD_EXP 1
1137: PUSH
1138: LD_INT -2
1140: PUSH
1141: LD_INT -3
1143: PUSH
1144: LD_INT -5
1146: PUSH
1147: EMPTY
1148: LIST
1149: LIST
1150: LIST
1151: LIST
1152: LIST
1153: PUSH
1154: LD_VAR 0 4
1158: ADD
1159: PUSH
1160: LD_INT -6
1162: PUSH
1163: LD_INT -4
1165: PUSH
1166: LD_EXP 2
1170: PUSH
1171: EMPTY
1172: LIST
1173: LIST
1174: LIST
1175: ADD
1176: PPUSH
1177: LD_INT 1
1179: PUSH
1180: LD_INT 2
1182: PUSH
1183: EMPTY
1184: LIST
1185: LIST
1186: PUSH
1187: LD_INT 2
1189: PUSH
1190: LD_INT 1
1192: PUSH
1193: EMPTY
1194: LIST
1195: LIST
1196: PUSH
1197: LD_INT 3
1199: PUSH
1200: LD_INT 0
1202: PUSH
1203: LD_INT 5
1205: PUSH
1206: EMPTY
1207: LIST
1208: LIST
1209: LIST
1210: PUSH
1211: LD_INT 4
1213: PUSH
1214: LD_INT 0
1216: PUSH
1217: LD_INT 3
1219: PUSH
1220: EMPTY
1221: LIST
1222: LIST
1223: LIST
1224: PUSH
1225: LD_INT 5
1227: PUSH
1228: LD_INT 0
1230: PUSH
1231: LD_INT 2
1233: PUSH
1234: EMPTY
1235: LIST
1236: LIST
1237: LIST
1238: PUSH
1239: LD_INT 8
1241: PUSH
1242: LD_INT 0
1244: PUSH
1245: LD_INT 2
1247: PUSH
1248: EMPTY
1249: LIST
1250: LIST
1251: LIST
1252: PUSH
1253: EMPTY
1254: LIST
1255: LIST
1256: LIST
1257: LIST
1258: LIST
1259: LIST
1260: PPUSH
1261: CALL_OW 42
1265: ST_TO_ADDR
// others := tmp diff selected ;
1266: LD_ADDR_VAR 0 5
1270: PUSH
1271: LD_VAR 0 4
1275: PUSH
1276: LD_VAR 0 3
1280: DIFF
1281: ST_TO_ADDR
// others := tmp diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1282: LD_ADDR_VAR 0 5
1286: PUSH
1287: LD_VAR 0 4
1291: PUSH
1292: LD_EXP 3
1296: PUSH
1297: LD_EXP 4
1301: PUSH
1302: LD_EXP 5
1306: PUSH
1307: LD_EXP 6
1311: PUSH
1312: LD_EXP 7
1316: PUSH
1317: LD_EXP 8
1321: PUSH
1322: LD_EXP 9
1326: PUSH
1327: LD_EXP 10
1331: PUSH
1332: LD_EXP 11
1336: PUSH
1337: LD_EXP 12
1341: PUSH
1342: LD_EXP 13
1346: PUSH
1347: LD_EXP 14
1351: PUSH
1352: EMPTY
1353: LIST
1354: LIST
1355: LIST
1356: LIST
1357: LIST
1358: LIST
1359: LIST
1360: LIST
1361: LIST
1362: LIST
1363: LIST
1364: LIST
1365: DIFF
1366: ST_TO_ADDR
// if others then
1367: LD_VAR 0 5
1371: IFFALSE 1385
// SaveCharacters ( others , 13c_others ) ;
1373: LD_VAR 0 5
1377: PPUSH
1378: LD_STRING 13c_others
1380: PPUSH
1381: CALL_OW 38
// end ;
1385: LD_VAR 0 1
1389: RET
