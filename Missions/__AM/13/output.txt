// export JMM , Powell ; export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ; export Stevens ; export others12 , others11 ; export mission_prefix_prev ; starting begin Resetfog ;
   0: CALL_OW 335
// RandomizeAll ;
   4: CALL_OW 11
// mission_prefix_prev = 12_ ;
   8: LD_ADDR_EXP 18
  12: PUSH
  13: LD_STRING 12_
  15: ST_TO_ADDR
// PrepareEpsilonBase ;
  16: CALL 600 0 0
// PrepareHeroes ;
  20: CALL 188 0 0
// CenterNowOnUnits ( JMM ) ;
  24: LD_EXP 1
  28: PPUSH
  29: CALL_OW 87
// DialogueOn ;
  33: CALL_OW 6
// Say ( JMM , D1-JMM-1 ) ;
  37: LD_EXP 1
  41: PPUSH
  42: LD_STRING D1-JMM-1
  44: PPUSH
  45: CALL_OW 88
// SayRadio ( Powell , D1-Pow-1 ) ;
  49: LD_EXP 2
  53: PPUSH
  54: LD_STRING D1-Pow-1
  56: PPUSH
  57: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1a ) ;
  61: LD_EXP 2
  65: PPUSH
  66: LD_STRING D1-Pow-1a
  68: PPUSH
  69: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1b ) ;
  73: LD_EXP 2
  77: PPUSH
  78: LD_STRING D1-Pow-1b
  80: PPUSH
  81: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1c ) ;
  85: LD_EXP 2
  89: PPUSH
  90: LD_STRING D1-Pow-1c
  92: PPUSH
  93: CALL_OW 94
// Say ( JMM , D1-JMM-2 ) ;
  97: LD_EXP 1
 101: PPUSH
 102: LD_STRING D1-JMM-2
 104: PPUSH
 105: CALL_OW 88
// SayRadio ( Powell , D1-Pow-2 ) ;
 109: LD_EXP 2
 113: PPUSH
 114: LD_STRING D1-Pow-2
 116: PPUSH
 117: CALL_OW 94
// Say ( JMM , D1-JMM-3 ) ;
 121: LD_EXP 1
 125: PPUSH
 126: LD_STRING D1-JMM-3
 128: PPUSH
 129: CALL_OW 88
// SayRadio ( Powell , D1-Pow-3 ) ;
 133: LD_EXP 2
 137: PPUSH
 138: LD_STRING D1-Pow-3
 140: PPUSH
 141: CALL_OW 94
// Say ( JMM , D1-JMM-4 ) ;
 145: LD_EXP 1
 149: PPUSH
 150: LD_STRING D1-JMM-4
 152: PPUSH
 153: CALL_OW 88
// SayRadio ( Powell , D1-Pow-4 ) ;
 157: LD_EXP 2
 161: PPUSH
 162: LD_STRING D1-Pow-4
 164: PPUSH
 165: CALL_OW 94
// DialogueOff ;
 169: CALL_OW 7
// SelectAndSaveCharacters ;
 173: CALL 1072 0 0
// ChangeMap ( 13 , %_cont ) ;
 177: LD_INT 13
 179: PPUSH
 180: LD_STRING %_cont
 182: PPUSH
 183: CALL_OW 340
// end ; end_of_file
 187: END
// export function PrepareHeroes ; var i , others , tmp ; begin
 188: LD_INT 0
 190: PPUSH
 191: PPUSH
 192: PPUSH
 193: PPUSH
// tmp = FilterAllUnits ( [ [ f_side , 1 ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , 1 ] ] ] ) ;
 194: LD_ADDR_VAR 0 4
 198: PUSH
 199: LD_INT 22
 201: PUSH
 202: LD_INT 1
 204: PUSH
 205: EMPTY
 206: LIST
 207: LIST
 208: PUSH
 209: LD_INT 2
 211: PUSH
 212: LD_INT 30
 214: PUSH
 215: LD_INT 0
 217: PUSH
 218: EMPTY
 219: LIST
 220: LIST
 221: PUSH
 222: LD_INT 30
 224: PUSH
 225: LD_INT 1
 227: PUSH
 228: EMPTY
 229: LIST
 230: LIST
 231: PUSH
 232: EMPTY
 233: LIST
 234: LIST
 235: LIST
 236: PUSH
 237: EMPTY
 238: LIST
 239: LIST
 240: PPUSH
 241: CALL_OW 69
 245: ST_TO_ADDR
// uc_side = 1 ;
 246: LD_ADDR_OWVAR 20
 250: PUSH
 251: LD_INT 1
 253: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , true ) ;
 254: LD_ADDR_EXP 1
 258: PUSH
 259: LD_STRING JMM
 261: PPUSH
 262: LD_INT 1
 264: PPUSH
 265: CALL 951 0 2
 269: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , true ) ;
 270: LD_ADDR_EXP 3
 274: PUSH
 275: LD_STRING Lisa
 277: PPUSH
 278: LD_INT 1
 280: PPUSH
 281: CALL 951 0 2
 285: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , true ) ;
 286: LD_ADDR_EXP 4
 290: PUSH
 291: LD_STRING Donaldson
 293: PPUSH
 294: LD_INT 1
 296: PPUSH
 297: CALL 951 0 2
 301: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , true ) ;
 302: LD_ADDR_EXP 5
 306: PUSH
 307: LD_STRING Bobby
 309: PPUSH
 310: LD_INT 1
 312: PPUSH
 313: CALL 951 0 2
 317: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , true ) ;
 318: LD_ADDR_EXP 6
 322: PUSH
 323: LD_STRING Cyrus
 325: PPUSH
 326: LD_INT 1
 328: PPUSH
 329: CALL 951 0 2
 333: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , true ) ;
 334: LD_ADDR_EXP 7
 338: PUSH
 339: LD_STRING Denis
 341: PPUSH
 342: LD_INT 1
 344: PPUSH
 345: CALL 951 0 2
 349: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , true ) ;
 350: LD_ADDR_EXP 8
 354: PUSH
 355: LD_STRING Brown
 357: PPUSH
 358: LD_INT 1
 360: PPUSH
 361: CALL 951 0 2
 365: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , true ) ;
 366: LD_ADDR_EXP 9
 370: PUSH
 371: LD_STRING Gladstone
 373: PPUSH
 374: LD_INT 1
 376: PPUSH
 377: CALL 951 0 2
 381: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , true ) ;
 382: LD_ADDR_EXP 10
 386: PUSH
 387: LD_STRING Houten
 389: PPUSH
 390: LD_INT 1
 392: PPUSH
 393: CALL 951 0 2
 397: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , true ) ;
 398: LD_ADDR_EXP 11
 402: PUSH
 403: LD_STRING Cornel
 405: PPUSH
 406: LD_INT 1
 408: PPUSH
 409: CALL 951 0 2
 413: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , true ) ;
 414: LD_ADDR_EXP 12
 418: PUSH
 419: LD_STRING Gary
 421: PPUSH
 422: LD_INT 1
 424: PPUSH
 425: CALL 951 0 2
 429: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , true ) ;
 430: LD_ADDR_EXP 13
 434: PUSH
 435: LD_STRING Frank
 437: PPUSH
 438: LD_INT 1
 440: PPUSH
 441: CALL 951 0 2
 445: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , true ) ;
 446: LD_ADDR_EXP 14
 450: PUSH
 451: LD_STRING Kikuchi
 453: PPUSH
 454: LD_INT 1
 456: PPUSH
 457: CALL 951 0 2
 461: ST_TO_ADDR
// Stevens = PrepareUnit ( Stevens , false ) ;
 462: LD_ADDR_EXP 15
 466: PUSH
 467: LD_STRING Stevens
 469: PPUSH
 470: LD_INT 0
 472: PPUSH
 473: CALL 951 0 2
 477: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 478: LD_ADDR_EXP 2
 482: PUSH
 483: LD_STRING Powell
 485: PPUSH
 486: LD_INT 0
 488: PPUSH
 489: CALL 951 0 2
 493: ST_TO_ADDR
// PlaceUnitXYR ( JMM , GetX ( tmp [ 1 ] ) , GetY ( tmp [ 1 ] ) , 4 , false ) ;
 494: LD_EXP 1
 498: PPUSH
 499: LD_VAR 0 4
 503: PUSH
 504: LD_INT 1
 506: ARRAY
 507: PPUSH
 508: CALL_OW 250
 512: PPUSH
 513: LD_VAR 0 4
 517: PUSH
 518: LD_INT 1
 520: ARRAY
 521: PPUSH
 522: CALL_OW 251
 526: PPUSH
 527: LD_INT 4
 529: PPUSH
 530: LD_INT 0
 532: PPUSH
 533: CALL_OW 50
// SetBName ( tmp [ 1 ] , epsilon ) ;
 537: LD_VAR 0 4
 541: PUSH
 542: LD_INT 1
 544: ARRAY
 545: PPUSH
 546: LD_STRING epsilon
 548: PPUSH
 549: CALL_OW 500
// others12 = CreateCharacterSet ( 12_other_survivors ) ;
 553: LD_ADDR_EXP 16
 557: PUSH
 558: LD_STRING 12_other_survivors
 560: PPUSH
 561: CALL_OW 31
 565: ST_TO_ADDR
// others11 = CreateCharacterSet ( 11c_others ) ;
 566: LD_ADDR_EXP 17
 570: PUSH
 571: LD_STRING 11c_others
 573: PPUSH
 574: CALL_OW 31
 578: ST_TO_ADDR
// others11 = others11 diff others12 ;
 579: LD_ADDR_EXP 17
 583: PUSH
 584: LD_EXP 17
 588: PUSH
 589: LD_EXP 16
 593: DIFF
 594: ST_TO_ADDR
// end ;
 595: LD_VAR 0 1
 599: RET
// export function PrepareEpsilonBase ; var blist , i , b , un ; begin
 600: LD_INT 0
 602: PPUSH
 603: PPUSH
 604: PPUSH
 605: PPUSH
 606: PPUSH
// SetResourceVisibility ( 113 , 50 , 1 ) ;
 607: LD_INT 113
 609: PPUSH
 610: LD_INT 50
 612: PPUSH
 613: LD_INT 1
 615: PPUSH
 616: CALL_OW 441
// SetResourceVisibility ( 104 , 24 , 1 ) ;
 620: LD_INT 104
 622: PPUSH
 623: LD_INT 24
 625: PPUSH
 626: LD_INT 1
 628: PPUSH
 629: CALL_OW 441
// blist := LoadVariable ( 10_EpsilonBase , [ ] ) ;
 633: LD_ADDR_VAR 0 2
 637: PUSH
 638: LD_STRING 10_EpsilonBase
 640: PPUSH
 641: EMPTY
 642: PPUSH
 643: CALL_OW 30
 647: ST_TO_ADDR
// if not blist then
 648: LD_VAR 0 2
 652: NOT
 653: IFFALSE 657
// exit ;
 655: GO 946
// uc_side := 1 ;
 657: LD_ADDR_OWVAR 20
 661: PUSH
 662: LD_INT 1
 664: ST_TO_ADDR
// uc_nation := 1 ;
 665: LD_ADDR_OWVAR 21
 669: PUSH
 670: LD_INT 1
 672: ST_TO_ADDR
// for i in blist do
 673: LD_ADDR_VAR 0 3
 677: PUSH
 678: LD_VAR 0 2
 682: PUSH
 683: FOR_IN
 684: IFFALSE 835
// begin bc_type := i [ 1 ] ;
 686: LD_ADDR_OWVAR 42
 690: PUSH
 691: LD_VAR 0 3
 695: PUSH
 696: LD_INT 1
 698: ARRAY
 699: ST_TO_ADDR
// bc_level := i [ 5 ] ;
 700: LD_ADDR_OWVAR 43
 704: PUSH
 705: LD_VAR 0 3
 709: PUSH
 710: LD_INT 5
 712: ARRAY
 713: ST_TO_ADDR
// if i [ 1 ] in [ b_lab_half , b_lab_full ] then
 714: LD_VAR 0 3
 718: PUSH
 719: LD_INT 1
 721: ARRAY
 722: PUSH
 723: LD_INT 7
 725: PUSH
 726: LD_INT 8
 728: PUSH
 729: EMPTY
 730: LIST
 731: LIST
 732: IN
 733: IFFALSE 763
// begin bc_kind1 := i [ 7 ] ;
 735: LD_ADDR_OWVAR 44
 739: PUSH
 740: LD_VAR 0 3
 744: PUSH
 745: LD_INT 7
 747: ARRAY
 748: ST_TO_ADDR
// bc_kind2 := i [ 8 ] ;
 749: LD_ADDR_OWVAR 45
 753: PUSH
 754: LD_VAR 0 3
 758: PUSH
 759: LD_INT 8
 761: ARRAY
 762: ST_TO_ADDR
// end ; b := CreateAndPlaceBuildingXYD ( i [ 2 ] , i [ 3 ] , i [ 4 ] ) ;
 763: LD_ADDR_VAR 0 4
 767: PUSH
 768: LD_VAR 0 3
 772: PUSH
 773: LD_INT 2
 775: ARRAY
 776: PPUSH
 777: LD_VAR 0 3
 781: PUSH
 782: LD_INT 3
 784: ARRAY
 785: PPUSH
 786: LD_VAR 0 3
 790: PUSH
 791: LD_INT 4
 793: ARRAY
 794: PPUSH
 795: CALL_OW 47
 799: ST_TO_ADDR
// if GetBType ( b ) = b_bunker then
 800: LD_VAR 0 4
 804: PPUSH
 805: CALL_OW 266
 809: PUSH
 810: LD_INT 32
 812: EQUAL
 813: IFFALSE 833
// begin PlaceWeaponTurret ( b , i [ 7 ] ) ;
 815: LD_VAR 0 4
 819: PPUSH
 820: LD_VAR 0 3
 824: PUSH
 825: LD_INT 7
 827: ARRAY
 828: PPUSH
 829: CALL_OW 431
// end ; end ;
 833: GO 683
 835: POP
 836: POP
// for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_type , unit_building ] , [ f_empty ] ] ) do
 837: LD_ADDR_VAR 0 3
 841: PUSH
 842: LD_INT 22
 844: PUSH
 845: LD_INT 1
 847: PUSH
 848: EMPTY
 849: LIST
 850: LIST
 851: PUSH
 852: LD_INT 21
 854: PUSH
 855: LD_INT 3
 857: PUSH
 858: EMPTY
 859: LIST
 860: LIST
 861: PUSH
 862: LD_INT 58
 864: PUSH
 865: EMPTY
 866: LIST
 867: PUSH
 868: EMPTY
 869: LIST
 870: LIST
 871: LIST
 872: PPUSH
 873: CALL_OW 69
 877: PUSH
 878: FOR_IN
 879: IFFALSE 944
// begin hc_name =  ;
 881: LD_ADDR_OWVAR 26
 885: PUSH
 886: LD_STRING 
 888: ST_TO_ADDR
// hc_gallery =  ;
 889: LD_ADDR_OWVAR 33
 893: PUSH
 894: LD_STRING 
 896: ST_TO_ADDR
// PrepareHuman ( false , 1 , rand ( 5 , 8 ) ) ;
 897: LD_INT 0
 899: PPUSH
 900: LD_INT 1
 902: PPUSH
 903: LD_INT 5
 905: PPUSH
 906: LD_INT 8
 908: PPUSH
 909: CALL_OW 12
 913: PPUSH
 914: CALL_OW 380
// un = CreateHuman ;
 918: LD_ADDR_VAR 0 5
 922: PUSH
 923: CALL_OW 44
 927: ST_TO_ADDR
// PlaceHumanInUnit ( un , i ) ;
 928: LD_VAR 0 5
 932: PPUSH
 933: LD_VAR 0 3
 937: PPUSH
 938: CALL_OW 52
// end ;
 942: GO 878
 944: POP
 945: POP
// end ; end_of_file
 946: LD_VAR 0 1
 950: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
 951: LD_INT 0
 953: PPUSH
 954: PPUSH
// if exist_mode then
 955: LD_VAR 0 2
 959: IFFALSE 984
// unit := CreateCharacter ( mission_prefix_prev & ident ) else
 961: LD_ADDR_VAR 0 4
 965: PUSH
 966: LD_EXP 18
 970: PUSH
 971: LD_VAR 0 1
 975: STR
 976: PPUSH
 977: CALL_OW 34
 981: ST_TO_ADDR
 982: GO 999
// unit := NewCharacter ( ident ) ;
 984: LD_ADDR_VAR 0 4
 988: PUSH
 989: LD_VAR 0 1
 993: PPUSH
 994: CALL_OW 25
 998: ST_TO_ADDR
// result := unit ;
 999: LD_ADDR_VAR 0 3
1003: PUSH
1004: LD_VAR 0 4
1008: ST_TO_ADDR
// end ;
1009: LD_VAR 0 3
1013: RET
// export function SaveCharactersAfterSelect ( unit , unitString , selectedTab ) ; begin
1014: LD_INT 0
1016: PPUSH
// if unit in selectedTab then
1017: LD_VAR 0 1
1021: PUSH
1022: LD_VAR 0 3
1026: IN
1027: IFFALSE 1049
// SaveCharacters ( unit , 13c_ & unitString ) else
1029: LD_VAR 0 1
1033: PPUSH
1034: LD_STRING 13c_
1036: PUSH
1037: LD_VAR 0 2
1041: STR
1042: PPUSH
1043: CALL_OW 38
1047: GO 1067
// SaveCharacters ( unit , 13s_ & unitString ) ;
1049: LD_VAR 0 1
1053: PPUSH
1054: LD_STRING 13s_
1056: PUSH
1057: LD_VAR 0 2
1061: STR
1062: PPUSH
1063: CALL_OW 38
// end ;
1067: LD_VAR 0 4
1071: RET
// export function SelectAndSaveCharacters ; var i , selected , tmp , othersSelect , othersInBase ; begin
1072: LD_INT 0
1074: PPUSH
1075: PPUSH
1076: PPUSH
1077: PPUSH
1078: PPUSH
1079: PPUSH
// tmp = [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1080: LD_ADDR_VAR 0 4
1084: PUSH
1085: LD_EXP 3
1089: PUSH
1090: LD_EXP 4
1094: PUSH
1095: LD_EXP 5
1099: PUSH
1100: LD_EXP 6
1104: PUSH
1105: LD_EXP 7
1109: PUSH
1110: LD_EXP 8
1114: PUSH
1115: LD_EXP 9
1119: PUSH
1120: LD_EXP 10
1124: PUSH
1125: LD_EXP 11
1129: PUSH
1130: LD_EXP 12
1134: PUSH
1135: LD_EXP 13
1139: PUSH
1140: LD_EXP 14
1144: PUSH
1145: EMPTY
1146: LIST
1147: LIST
1148: LIST
1149: LIST
1150: LIST
1151: LIST
1152: LIST
1153: LIST
1154: LIST
1155: LIST
1156: LIST
1157: LIST
1158: ST_TO_ADDR
// tmp = tmp ^ others11 ;
1159: LD_ADDR_VAR 0 4
1163: PUSH
1164: LD_VAR 0 4
1168: PUSH
1169: LD_EXP 17
1173: ADD
1174: ST_TO_ADDR
// tmp = tmp ^ others12 ;
1175: LD_ADDR_VAR 0 4
1179: PUSH
1180: LD_VAR 0 4
1184: PUSH
1185: LD_EXP 16
1189: ADD
1190: ST_TO_ADDR
// for i in tmp do
1191: LD_ADDR_VAR 0 2
1195: PUSH
1196: LD_VAR 0 4
1200: PUSH
1201: FOR_IN
1202: IFFALSE 1241
// if GetClass ( i ) = 8 then
1204: LD_VAR 0 2
1208: PPUSH
1209: CALL_OW 257
1213: PUSH
1214: LD_INT 8
1216: EQUAL
1217: IFFALSE 1239
// SetClass ( i , rand ( 1 , 4 ) ) ;
1219: LD_VAR 0 2
1223: PPUSH
1224: LD_INT 1
1226: PPUSH
1227: LD_INT 4
1229: PPUSH
1230: CALL_OW 12
1234: PPUSH
1235: CALL_OW 336
1239: GO 1201
1241: POP
1242: POP
// selected := CharacterSelection ( 1 , 6 , 6 , [ sel_change_class , JMM , Stevens , sel_not_hired , sel_changeable , sel_change_class ] ^ tmp ^ [ sel_dont_change_class , sel_not_changeable , Powell ] , [ [ class_soldier , 0 ] , [ class_engineer , 1 ] , [ class_mechanic , 0 ] , [ class_scientistic , 2 ] , [ class_sniper , 0 , 2 ] ] ) ;
1243: LD_ADDR_VAR 0 3
1247: PUSH
1248: LD_STRING 1
1250: PPUSH
1251: LD_INT 6
1253: PPUSH
1254: LD_INT 6
1256: PPUSH
1257: LD_INT -5
1259: PUSH
1260: LD_EXP 1
1264: PUSH
1265: LD_EXP 15
1269: PUSH
1270: LD_INT -2
1272: PUSH
1273: LD_INT -3
1275: PUSH
1276: LD_INT -5
1278: PUSH
1279: EMPTY
1280: LIST
1281: LIST
1282: LIST
1283: LIST
1284: LIST
1285: LIST
1286: PUSH
1287: LD_VAR 0 4
1291: ADD
1292: PUSH
1293: LD_INT -6
1295: PUSH
1296: LD_INT -4
1298: PUSH
1299: LD_EXP 2
1303: PUSH
1304: EMPTY
1305: LIST
1306: LIST
1307: LIST
1308: ADD
1309: PPUSH
1310: LD_INT 1
1312: PUSH
1313: LD_INT 0
1315: PUSH
1316: EMPTY
1317: LIST
1318: LIST
1319: PUSH
1320: LD_INT 2
1322: PUSH
1323: LD_INT 1
1325: PUSH
1326: EMPTY
1327: LIST
1328: LIST
1329: PUSH
1330: LD_INT 3
1332: PUSH
1333: LD_INT 0
1335: PUSH
1336: EMPTY
1337: LIST
1338: LIST
1339: PUSH
1340: LD_INT 4
1342: PUSH
1343: LD_INT 2
1345: PUSH
1346: EMPTY
1347: LIST
1348: LIST
1349: PUSH
1350: LD_INT 5
1352: PUSH
1353: LD_INT 0
1355: PUSH
1356: LD_INT 2
1358: PUSH
1359: EMPTY
1360: LIST
1361: LIST
1362: LIST
1363: PUSH
1364: EMPTY
1365: LIST
1366: LIST
1367: LIST
1368: LIST
1369: LIST
1370: PPUSH
1371: CALL_OW 42
1375: ST_TO_ADDR
// othersSelect := selected diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1376: LD_ADDR_VAR 0 5
1380: PUSH
1381: LD_VAR 0 3
1385: PUSH
1386: LD_EXP 3
1390: PUSH
1391: LD_EXP 4
1395: PUSH
1396: LD_EXP 5
1400: PUSH
1401: LD_EXP 6
1405: PUSH
1406: LD_EXP 7
1410: PUSH
1411: LD_EXP 8
1415: PUSH
1416: LD_EXP 9
1420: PUSH
1421: LD_EXP 10
1425: PUSH
1426: LD_EXP 11
1430: PUSH
1431: LD_EXP 12
1435: PUSH
1436: LD_EXP 13
1440: PUSH
1441: LD_EXP 14
1445: PUSH
1446: EMPTY
1447: LIST
1448: LIST
1449: LIST
1450: LIST
1451: LIST
1452: LIST
1453: LIST
1454: LIST
1455: LIST
1456: LIST
1457: LIST
1458: LIST
1459: DIFF
1460: ST_TO_ADDR
// othersInBase = tmp diff selected ;
1461: LD_ADDR_VAR 0 6
1465: PUSH
1466: LD_VAR 0 4
1470: PUSH
1471: LD_VAR 0 3
1475: DIFF
1476: ST_TO_ADDR
// othersInBase = othersInBase diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1477: LD_ADDR_VAR 0 6
1481: PUSH
1482: LD_VAR 0 6
1486: PUSH
1487: LD_EXP 3
1491: PUSH
1492: LD_EXP 4
1496: PUSH
1497: LD_EXP 5
1501: PUSH
1502: LD_EXP 6
1506: PUSH
1507: LD_EXP 7
1511: PUSH
1512: LD_EXP 8
1516: PUSH
1517: LD_EXP 9
1521: PUSH
1522: LD_EXP 10
1526: PUSH
1527: LD_EXP 11
1531: PUSH
1532: LD_EXP 12
1536: PUSH
1537: LD_EXP 13
1541: PUSH
1542: LD_EXP 14
1546: PUSH
1547: EMPTY
1548: LIST
1549: LIST
1550: LIST
1551: LIST
1552: LIST
1553: LIST
1554: LIST
1555: LIST
1556: LIST
1557: LIST
1558: LIST
1559: LIST
1560: DIFF
1561: ST_TO_ADDR
// SaveCharacters ( othersSelect , 13c_others ) ;
1562: LD_VAR 0 5
1566: PPUSH
1567: LD_STRING 13c_others
1569: PPUSH
1570: CALL_OW 38
// SaveCharacters ( othersInBase , 13s_others ) ;
1574: LD_VAR 0 6
1578: PPUSH
1579: LD_STRING 13s_others
1581: PPUSH
1582: CALL_OW 38
// SaveCharacters ( JMM , 13c_JMM ) ;
1586: LD_EXP 1
1590: PPUSH
1591: LD_STRING 13c_JMM
1593: PPUSH
1594: CALL_OW 38
// SaveCharacters ( Stevens , 13c_Stevens ) ;
1598: LD_EXP 15
1602: PPUSH
1603: LD_STRING 13c_Stevens
1605: PPUSH
1606: CALL_OW 38
// SaveCharactersAfterSelect ( Lisa , Lisa , selected ) ;
1610: LD_EXP 3
1614: PPUSH
1615: LD_STRING Lisa
1617: PPUSH
1618: LD_VAR 0 3
1622: PPUSH
1623: CALL 1014 0 3
// SaveCharactersAfterSelect ( Donaldson , Donaldson , selected ) ;
1627: LD_EXP 4
1631: PPUSH
1632: LD_STRING Donaldson
1634: PPUSH
1635: LD_VAR 0 3
1639: PPUSH
1640: CALL 1014 0 3
// SaveCharactersAfterSelect ( Bobby , Bobby , selected ) ;
1644: LD_EXP 5
1648: PPUSH
1649: LD_STRING Bobby
1651: PPUSH
1652: LD_VAR 0 3
1656: PPUSH
1657: CALL 1014 0 3
// SaveCharactersAfterSelect ( Cyrus , Cyrus , selected ) ;
1661: LD_EXP 6
1665: PPUSH
1666: LD_STRING Cyrus
1668: PPUSH
1669: LD_VAR 0 3
1673: PPUSH
1674: CALL 1014 0 3
// SaveCharactersAfterSelect ( Denis , Denis , selected ) ;
1678: LD_EXP 7
1682: PPUSH
1683: LD_STRING Denis
1685: PPUSH
1686: LD_VAR 0 3
1690: PPUSH
1691: CALL 1014 0 3
// SaveCharactersAfterSelect ( Gladstone , Gladstone , selected ) ;
1695: LD_EXP 9
1699: PPUSH
1700: LD_STRING Gladstone
1702: PPUSH
1703: LD_VAR 0 3
1707: PPUSH
1708: CALL 1014 0 3
// SaveCharactersAfterSelect ( Houten , Houten , selected ) ;
1712: LD_EXP 10
1716: PPUSH
1717: LD_STRING Houten
1719: PPUSH
1720: LD_VAR 0 3
1724: PPUSH
1725: CALL 1014 0 3
// SaveCharactersAfterSelect ( Cornel , Cornel , selected ) ;
1729: LD_EXP 11
1733: PPUSH
1734: LD_STRING Cornel
1736: PPUSH
1737: LD_VAR 0 3
1741: PPUSH
1742: CALL 1014 0 3
// SaveCharactersAfterSelect ( Gary , Gary , selected ) ;
1746: LD_EXP 12
1750: PPUSH
1751: LD_STRING Gary
1753: PPUSH
1754: LD_VAR 0 3
1758: PPUSH
1759: CALL 1014 0 3
// SaveCharactersAfterSelect ( Frank , Frank , selected ) ;
1763: LD_EXP 13
1767: PPUSH
1768: LD_STRING Frank
1770: PPUSH
1771: LD_VAR 0 3
1775: PPUSH
1776: CALL 1014 0 3
// SaveCharactersAfterSelect ( Kikuchi , Kikuchi , selected ) ;
1780: LD_EXP 14
1784: PPUSH
1785: LD_STRING Kikuchi
1787: PPUSH
1788: LD_VAR 0 3
1792: PPUSH
1793: CALL 1014 0 3
// end ;
1797: LD_VAR 0 1
1801: RET
