// export JMM , Powell ; export Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ; export Stevens ; export others12 , others11 ; export mission_prefix_prev ; starting begin Resetfog ;
   0: CALL_OW 335
// RandomizeAll ;
   4: CALL_OW 11
// InGameOn ;
   8: CALL_OW 8
// mission_prefix_prev = 12_ ;
  12: LD_ADDR_EXP 18
  16: PUSH
  17: LD_STRING 12_
  19: ST_TO_ADDR
// PrepareEpsilonBase ;
  20: CALL 616 0 0
// PrepareHeroes ;
  24: CALL 192 0 0
// CenterNowOnUnits ( JMM ) ;
  28: LD_EXP 1
  32: PPUSH
  33: CALL_OW 87
// DialogueOn ;
  37: CALL_OW 6
// Say ( JMM , D1-JMM-1 ) ;
  41: LD_EXP 1
  45: PPUSH
  46: LD_STRING D1-JMM-1
  48: PPUSH
  49: CALL_OW 88
// SayRadio ( Powell , D1-Pow-1 ) ;
  53: LD_EXP 2
  57: PPUSH
  58: LD_STRING D1-Pow-1
  60: PPUSH
  61: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1a ) ;
  65: LD_EXP 2
  69: PPUSH
  70: LD_STRING D1-Pow-1a
  72: PPUSH
  73: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1b ) ;
  77: LD_EXP 2
  81: PPUSH
  82: LD_STRING D1-Pow-1b
  84: PPUSH
  85: CALL_OW 94
// SayRadio ( Powell , D1-Pow-1c ) ;
  89: LD_EXP 2
  93: PPUSH
  94: LD_STRING D1-Pow-1c
  96: PPUSH
  97: CALL_OW 94
// Say ( JMM , D1-JMM-2 ) ;
 101: LD_EXP 1
 105: PPUSH
 106: LD_STRING D1-JMM-2
 108: PPUSH
 109: CALL_OW 88
// SayRadio ( Powell , D1-Pow-2 ) ;
 113: LD_EXP 2
 117: PPUSH
 118: LD_STRING D1-Pow-2
 120: PPUSH
 121: CALL_OW 94
// Say ( JMM , D1-JMM-3 ) ;
 125: LD_EXP 1
 129: PPUSH
 130: LD_STRING D1-JMM-3
 132: PPUSH
 133: CALL_OW 88
// SayRadio ( Powell , D1-Pow-3 ) ;
 137: LD_EXP 2
 141: PPUSH
 142: LD_STRING D1-Pow-3
 144: PPUSH
 145: CALL_OW 94
// Say ( JMM , D1-JMM-4 ) ;
 149: LD_EXP 1
 153: PPUSH
 154: LD_STRING D1-JMM-4
 156: PPUSH
 157: CALL_OW 88
// SayRadio ( Powell , D1-Pow-4 ) ;
 161: LD_EXP 2
 165: PPUSH
 166: LD_STRING D1-Pow-4
 168: PPUSH
 169: CALL_OW 94
// DialogueOff ;
 173: CALL_OW 7
// SelectAndSaveCharacters ;
 177: CALL 1088 0 0
// ChangeMap ( 13 , %_cont ) ;
 181: LD_INT 13
 183: PPUSH
 184: LD_STRING %_cont
 186: PPUSH
 187: CALL_OW 340
// end ; end_of_file
 191: END
// export function PrepareHeroes ; var i , others , tmp ; begin
 192: LD_INT 0
 194: PPUSH
 195: PPUSH
 196: PPUSH
 197: PPUSH
// tmp = FilterAllUnits ( [ [ f_side , 1 ] , [ f_or , [ f_btype , b_depot ] , [ f_btype , 1 ] ] ] ) ;
 198: LD_ADDR_VAR 0 4
 202: PUSH
 203: LD_INT 22
 205: PUSH
 206: LD_INT 1
 208: PUSH
 209: EMPTY
 210: LIST
 211: LIST
 212: PUSH
 213: LD_INT 2
 215: PUSH
 216: LD_INT 30
 218: PUSH
 219: LD_INT 0
 221: PUSH
 222: EMPTY
 223: LIST
 224: LIST
 225: PUSH
 226: LD_INT 30
 228: PUSH
 229: LD_INT 1
 231: PUSH
 232: EMPTY
 233: LIST
 234: LIST
 235: PUSH
 236: EMPTY
 237: LIST
 238: LIST
 239: LIST
 240: PUSH
 241: EMPTY
 242: LIST
 243: LIST
 244: PPUSH
 245: CALL_OW 69
 249: ST_TO_ADDR
// uc_side = 1 ;
 250: LD_ADDR_OWVAR 20
 254: PUSH
 255: LD_INT 1
 257: ST_TO_ADDR
// JMM := PrepareUnit ( JMM , true ) ;
 258: LD_ADDR_EXP 1
 262: PUSH
 263: LD_STRING JMM
 265: PPUSH
 266: LD_INT 1
 268: PPUSH
 269: CALL 967 0 2
 273: ST_TO_ADDR
// Lisa := PrepareUnit ( Lisa , true ) ;
 274: LD_ADDR_EXP 3
 278: PUSH
 279: LD_STRING Lisa
 281: PPUSH
 282: LD_INT 1
 284: PPUSH
 285: CALL 967 0 2
 289: ST_TO_ADDR
// Donaldson := PrepareUnit ( Donaldson , true ) ;
 290: LD_ADDR_EXP 4
 294: PUSH
 295: LD_STRING Donaldson
 297: PPUSH
 298: LD_INT 1
 300: PPUSH
 301: CALL 967 0 2
 305: ST_TO_ADDR
// Bobby := PrepareUnit ( Bobby , true ) ;
 306: LD_ADDR_EXP 5
 310: PUSH
 311: LD_STRING Bobby
 313: PPUSH
 314: LD_INT 1
 316: PPUSH
 317: CALL 967 0 2
 321: ST_TO_ADDR
// Cyrus := PrepareUnit ( Cyrus , true ) ;
 322: LD_ADDR_EXP 6
 326: PUSH
 327: LD_STRING Cyrus
 329: PPUSH
 330: LD_INT 1
 332: PPUSH
 333: CALL 967 0 2
 337: ST_TO_ADDR
// Denis := PrepareUnit ( Denis , true ) ;
 338: LD_ADDR_EXP 7
 342: PUSH
 343: LD_STRING Denis
 345: PPUSH
 346: LD_INT 1
 348: PPUSH
 349: CALL 967 0 2
 353: ST_TO_ADDR
// Brown := PrepareUnit ( Brown , true ) ;
 354: LD_ADDR_EXP 8
 358: PUSH
 359: LD_STRING Brown
 361: PPUSH
 362: LD_INT 1
 364: PPUSH
 365: CALL 967 0 2
 369: ST_TO_ADDR
// Gladstone := PrepareUnit ( Gladstone , true ) ;
 370: LD_ADDR_EXP 9
 374: PUSH
 375: LD_STRING Gladstone
 377: PPUSH
 378: LD_INT 1
 380: PPUSH
 381: CALL 967 0 2
 385: ST_TO_ADDR
// Houten := PrepareUnit ( Houten , true ) ;
 386: LD_ADDR_EXP 10
 390: PUSH
 391: LD_STRING Houten
 393: PPUSH
 394: LD_INT 1
 396: PPUSH
 397: CALL 967 0 2
 401: ST_TO_ADDR
// Cornel := PrepareUnit ( Cornel , true ) ;
 402: LD_ADDR_EXP 11
 406: PUSH
 407: LD_STRING Cornel
 409: PPUSH
 410: LD_INT 1
 412: PPUSH
 413: CALL 967 0 2
 417: ST_TO_ADDR
// Gary := PrepareUnit ( Gary , true ) ;
 418: LD_ADDR_EXP 12
 422: PUSH
 423: LD_STRING Gary
 425: PPUSH
 426: LD_INT 1
 428: PPUSH
 429: CALL 967 0 2
 433: ST_TO_ADDR
// Frank := PrepareUnit ( Frank , true ) ;
 434: LD_ADDR_EXP 13
 438: PUSH
 439: LD_STRING Frank
 441: PPUSH
 442: LD_INT 1
 444: PPUSH
 445: CALL 967 0 2
 449: ST_TO_ADDR
// Kikuchi := PrepareUnit ( Kikuchi , true ) ;
 450: LD_ADDR_EXP 14
 454: PUSH
 455: LD_STRING Kikuchi
 457: PPUSH
 458: LD_INT 1
 460: PPUSH
 461: CALL 967 0 2
 465: ST_TO_ADDR
// Stevens = PrepareUnit ( Stevens , false ) ;
 466: LD_ADDR_EXP 15
 470: PUSH
 471: LD_STRING Stevens
 473: PPUSH
 474: LD_INT 0
 476: PPUSH
 477: CALL 967 0 2
 481: ST_TO_ADDR
// Powell = PrepareUnit ( Powell , false ) ;
 482: LD_ADDR_EXP 2
 486: PUSH
 487: LD_STRING Powell
 489: PPUSH
 490: LD_INT 0
 492: PPUSH
 493: CALL 967 0 2
 497: ST_TO_ADDR
// PlaceUnitXYR ( JMM , GetX ( tmp [ 1 ] ) , GetY ( tmp [ 1 ] ) , 4 , false ) ;
 498: LD_EXP 1
 502: PPUSH
 503: LD_VAR 0 4
 507: PUSH
 508: LD_INT 1
 510: ARRAY
 511: PPUSH
 512: CALL_OW 250
 516: PPUSH
 517: LD_VAR 0 4
 521: PUSH
 522: LD_INT 1
 524: ARRAY
 525: PPUSH
 526: CALL_OW 251
 530: PPUSH
 531: LD_INT 4
 533: PPUSH
 534: LD_INT 0
 536: PPUSH
 537: CALL_OW 50
// SetBName ( tmp [ 1 ] , epsilon ) ;
 541: LD_VAR 0 4
 545: PUSH
 546: LD_INT 1
 548: ARRAY
 549: PPUSH
 550: LD_STRING epsilon
 552: PPUSH
 553: CALL_OW 500
// SetClass ( JMM , 1 ) ;
 557: LD_EXP 1
 561: PPUSH
 562: LD_INT 1
 564: PPUSH
 565: CALL_OW 336
// others12 = CreateCharacterSet ( 12_other_survivors ) ;
 569: LD_ADDR_EXP 16
 573: PUSH
 574: LD_STRING 12_other_survivors
 576: PPUSH
 577: CALL_OW 31
 581: ST_TO_ADDR
// others11 = CreateCharacterSet ( 11c_others ) ;
 582: LD_ADDR_EXP 17
 586: PUSH
 587: LD_STRING 11c_others
 589: PPUSH
 590: CALL_OW 31
 594: ST_TO_ADDR
// others11 = others11 diff others12 ;
 595: LD_ADDR_EXP 17
 599: PUSH
 600: LD_EXP 17
 604: PUSH
 605: LD_EXP 16
 609: DIFF
 610: ST_TO_ADDR
// end ;
 611: LD_VAR 0 1
 615: RET
// export function PrepareEpsilonBase ; var blist , i , b , un ; begin
 616: LD_INT 0
 618: PPUSH
 619: PPUSH
 620: PPUSH
 621: PPUSH
 622: PPUSH
// SetResourceVisibility ( 113 , 50 , 1 ) ;
 623: LD_INT 113
 625: PPUSH
 626: LD_INT 50
 628: PPUSH
 629: LD_INT 1
 631: PPUSH
 632: CALL_OW 441
// SetResourceVisibility ( 104 , 24 , 1 ) ;
 636: LD_INT 104
 638: PPUSH
 639: LD_INT 24
 641: PPUSH
 642: LD_INT 1
 644: PPUSH
 645: CALL_OW 441
// blist := LoadVariable ( 10_EpsilonBase , [ ] ) ;
 649: LD_ADDR_VAR 0 2
 653: PUSH
 654: LD_STRING 10_EpsilonBase
 656: PPUSH
 657: EMPTY
 658: PPUSH
 659: CALL_OW 30
 663: ST_TO_ADDR
// if not blist then
 664: LD_VAR 0 2
 668: NOT
 669: IFFALSE 673
// exit ;
 671: GO 962
// uc_side := 1 ;
 673: LD_ADDR_OWVAR 20
 677: PUSH
 678: LD_INT 1
 680: ST_TO_ADDR
// uc_nation := 1 ;
 681: LD_ADDR_OWVAR 21
 685: PUSH
 686: LD_INT 1
 688: ST_TO_ADDR
// for i in blist do
 689: LD_ADDR_VAR 0 3
 693: PUSH
 694: LD_VAR 0 2
 698: PUSH
 699: FOR_IN
 700: IFFALSE 851
// begin bc_type := i [ 1 ] ;
 702: LD_ADDR_OWVAR 42
 706: PUSH
 707: LD_VAR 0 3
 711: PUSH
 712: LD_INT 1
 714: ARRAY
 715: ST_TO_ADDR
// bc_level := i [ 5 ] ;
 716: LD_ADDR_OWVAR 43
 720: PUSH
 721: LD_VAR 0 3
 725: PUSH
 726: LD_INT 5
 728: ARRAY
 729: ST_TO_ADDR
// if i [ 1 ] in [ b_lab_half , b_lab_full ] then
 730: LD_VAR 0 3
 734: PUSH
 735: LD_INT 1
 737: ARRAY
 738: PUSH
 739: LD_INT 7
 741: PUSH
 742: LD_INT 8
 744: PUSH
 745: EMPTY
 746: LIST
 747: LIST
 748: IN
 749: IFFALSE 779
// begin bc_kind1 := i [ 7 ] ;
 751: LD_ADDR_OWVAR 44
 755: PUSH
 756: LD_VAR 0 3
 760: PUSH
 761: LD_INT 7
 763: ARRAY
 764: ST_TO_ADDR
// bc_kind2 := i [ 8 ] ;
 765: LD_ADDR_OWVAR 45
 769: PUSH
 770: LD_VAR 0 3
 774: PUSH
 775: LD_INT 8
 777: ARRAY
 778: ST_TO_ADDR
// end ; b := CreateAndPlaceBuildingXYD ( i [ 2 ] , i [ 3 ] , i [ 4 ] ) ;
 779: LD_ADDR_VAR 0 4
 783: PUSH
 784: LD_VAR 0 3
 788: PUSH
 789: LD_INT 2
 791: ARRAY
 792: PPUSH
 793: LD_VAR 0 3
 797: PUSH
 798: LD_INT 3
 800: ARRAY
 801: PPUSH
 802: LD_VAR 0 3
 806: PUSH
 807: LD_INT 4
 809: ARRAY
 810: PPUSH
 811: CALL_OW 47
 815: ST_TO_ADDR
// if GetBType ( b ) = b_bunker then
 816: LD_VAR 0 4
 820: PPUSH
 821: CALL_OW 266
 825: PUSH
 826: LD_INT 32
 828: EQUAL
 829: IFFALSE 849
// begin PlaceWeaponTurret ( b , i [ 7 ] ) ;
 831: LD_VAR 0 4
 835: PPUSH
 836: LD_VAR 0 3
 840: PUSH
 841: LD_INT 7
 843: ARRAY
 844: PPUSH
 845: CALL_OW 431
// end ; end ;
 849: GO 699
 851: POP
 852: POP
// for i in FilterAllUnits ( [ [ f_side , 1 ] , [ f_type , unit_building ] , [ f_empty ] ] ) do
 853: LD_ADDR_VAR 0 3
 857: PUSH
 858: LD_INT 22
 860: PUSH
 861: LD_INT 1
 863: PUSH
 864: EMPTY
 865: LIST
 866: LIST
 867: PUSH
 868: LD_INT 21
 870: PUSH
 871: LD_INT 3
 873: PUSH
 874: EMPTY
 875: LIST
 876: LIST
 877: PUSH
 878: LD_INT 58
 880: PUSH
 881: EMPTY
 882: LIST
 883: PUSH
 884: EMPTY
 885: LIST
 886: LIST
 887: LIST
 888: PPUSH
 889: CALL_OW 69
 893: PUSH
 894: FOR_IN
 895: IFFALSE 960
// begin hc_name =  ;
 897: LD_ADDR_OWVAR 26
 901: PUSH
 902: LD_STRING 
 904: ST_TO_ADDR
// hc_gallery =  ;
 905: LD_ADDR_OWVAR 33
 909: PUSH
 910: LD_STRING 
 912: ST_TO_ADDR
// PrepareHuman ( false , 1 , rand ( 5 , 8 ) ) ;
 913: LD_INT 0
 915: PPUSH
 916: LD_INT 1
 918: PPUSH
 919: LD_INT 5
 921: PPUSH
 922: LD_INT 8
 924: PPUSH
 925: CALL_OW 12
 929: PPUSH
 930: CALL_OW 380
// un = CreateHuman ;
 934: LD_ADDR_VAR 0 5
 938: PUSH
 939: CALL_OW 44
 943: ST_TO_ADDR
// PlaceHumanInUnit ( un , i ) ;
 944: LD_VAR 0 5
 948: PPUSH
 949: LD_VAR 0 3
 953: PPUSH
 954: CALL_OW 52
// end ;
 958: GO 894
 960: POP
 961: POP
// end ; end_of_file
 962: LD_VAR 0 1
 966: RET
// export function PrepareUnit ( ident , exist_mode ) ; var unit ; begin
 967: LD_INT 0
 969: PPUSH
 970: PPUSH
// if exist_mode then
 971: LD_VAR 0 2
 975: IFFALSE 1000
// unit := CreateCharacter ( mission_prefix_prev & ident ) else
 977: LD_ADDR_VAR 0 4
 981: PUSH
 982: LD_EXP 18
 986: PUSH
 987: LD_VAR 0 1
 991: STR
 992: PPUSH
 993: CALL_OW 34
 997: ST_TO_ADDR
 998: GO 1015
// unit := NewCharacter ( ident ) ;
1000: LD_ADDR_VAR 0 4
1004: PUSH
1005: LD_VAR 0 1
1009: PPUSH
1010: CALL_OW 25
1014: ST_TO_ADDR
// result := unit ;
1015: LD_ADDR_VAR 0 3
1019: PUSH
1020: LD_VAR 0 4
1024: ST_TO_ADDR
// end ;
1025: LD_VAR 0 3
1029: RET
// export function SaveCharactersAfterSelect ( unit , unitString , selectedTab ) ; begin
1030: LD_INT 0
1032: PPUSH
// if unit in selectedTab then
1033: LD_VAR 0 1
1037: PUSH
1038: LD_VAR 0 3
1042: IN
1043: IFFALSE 1065
// SaveCharacters ( unit , 13c_ & unitString ) else
1045: LD_VAR 0 1
1049: PPUSH
1050: LD_STRING 13c_
1052: PUSH
1053: LD_VAR 0 2
1057: STR
1058: PPUSH
1059: CALL_OW 38
1063: GO 1083
// SaveCharacters ( unit , 13s_ & unitString ) ;
1065: LD_VAR 0 1
1069: PPUSH
1070: LD_STRING 13s_
1072: PUSH
1073: LD_VAR 0 2
1077: STR
1078: PPUSH
1079: CALL_OW 38
// end ;
1083: LD_VAR 0 4
1087: RET
// export function SelectAndSaveCharacters ; var i , selected , tmp , othersSelect , othersInBase ; begin
1088: LD_INT 0
1090: PPUSH
1091: PPUSH
1092: PPUSH
1093: PPUSH
1094: PPUSH
1095: PPUSH
// tmp = [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1096: LD_ADDR_VAR 0 4
1100: PUSH
1101: LD_EXP 3
1105: PUSH
1106: LD_EXP 4
1110: PUSH
1111: LD_EXP 5
1115: PUSH
1116: LD_EXP 6
1120: PUSH
1121: LD_EXP 7
1125: PUSH
1126: LD_EXP 8
1130: PUSH
1131: LD_EXP 9
1135: PUSH
1136: LD_EXP 10
1140: PUSH
1141: LD_EXP 11
1145: PUSH
1146: LD_EXP 12
1150: PUSH
1151: LD_EXP 13
1155: PUSH
1156: LD_EXP 14
1160: PUSH
1161: EMPTY
1162: LIST
1163: LIST
1164: LIST
1165: LIST
1166: LIST
1167: LIST
1168: LIST
1169: LIST
1170: LIST
1171: LIST
1172: LIST
1173: LIST
1174: ST_TO_ADDR
// tmp = tmp ^ others11 ;
1175: LD_ADDR_VAR 0 4
1179: PUSH
1180: LD_VAR 0 4
1184: PUSH
1185: LD_EXP 17
1189: ADD
1190: ST_TO_ADDR
// tmp = tmp ^ others12 ;
1191: LD_ADDR_VAR 0 4
1195: PUSH
1196: LD_VAR 0 4
1200: PUSH
1201: LD_EXP 16
1205: ADD
1206: ST_TO_ADDR
// for i in tmp do
1207: LD_ADDR_VAR 0 2
1211: PUSH
1212: LD_VAR 0 4
1216: PUSH
1217: FOR_IN
1218: IFFALSE 1257
// if GetClass ( i ) = 8 then
1220: LD_VAR 0 2
1224: PPUSH
1225: CALL_OW 257
1229: PUSH
1230: LD_INT 8
1232: EQUAL
1233: IFFALSE 1255
// SetClass ( i , rand ( 1 , 4 ) ) ;
1235: LD_VAR 0 2
1239: PPUSH
1240: LD_INT 1
1242: PPUSH
1243: LD_INT 4
1245: PPUSH
1246: CALL_OW 12
1250: PPUSH
1251: CALL_OW 336
1255: GO 1217
1257: POP
1258: POP
// selected := CharacterSelection ( 1 , 6 , 6 , [ sel_change_class , JMM , Stevens , sel_not_hired , sel_changeable , sel_change_class ] ^ tmp ^ [ sel_dont_change_class , sel_not_changeable , Powell ] , [ [ class_soldier , 0 ] , [ class_engineer , 1 ] , [ class_mechanic , 0 ] , [ class_scientistic , 2 ] , [ class_sniper , 0 , 2 ] ] ) ;
1259: LD_ADDR_VAR 0 3
1263: PUSH
1264: LD_STRING 1
1266: PPUSH
1267: LD_INT 6
1269: PPUSH
1270: LD_INT 6
1272: PPUSH
1273: LD_INT -5
1275: PUSH
1276: LD_EXP 1
1280: PUSH
1281: LD_EXP 15
1285: PUSH
1286: LD_INT -2
1288: PUSH
1289: LD_INT -3
1291: PUSH
1292: LD_INT -5
1294: PUSH
1295: EMPTY
1296: LIST
1297: LIST
1298: LIST
1299: LIST
1300: LIST
1301: LIST
1302: PUSH
1303: LD_VAR 0 4
1307: ADD
1308: PUSH
1309: LD_INT -6
1311: PUSH
1312: LD_INT -4
1314: PUSH
1315: LD_EXP 2
1319: PUSH
1320: EMPTY
1321: LIST
1322: LIST
1323: LIST
1324: ADD
1325: PPUSH
1326: LD_INT 1
1328: PUSH
1329: LD_INT 0
1331: PUSH
1332: EMPTY
1333: LIST
1334: LIST
1335: PUSH
1336: LD_INT 2
1338: PUSH
1339: LD_INT 1
1341: PUSH
1342: EMPTY
1343: LIST
1344: LIST
1345: PUSH
1346: LD_INT 3
1348: PUSH
1349: LD_INT 0
1351: PUSH
1352: EMPTY
1353: LIST
1354: LIST
1355: PUSH
1356: LD_INT 4
1358: PUSH
1359: LD_INT 2
1361: PUSH
1362: EMPTY
1363: LIST
1364: LIST
1365: PUSH
1366: LD_INT 5
1368: PUSH
1369: LD_INT 0
1371: PUSH
1372: LD_INT 2
1374: PUSH
1375: EMPTY
1376: LIST
1377: LIST
1378: LIST
1379: PUSH
1380: EMPTY
1381: LIST
1382: LIST
1383: LIST
1384: LIST
1385: LIST
1386: PPUSH
1387: CALL_OW 42
1391: ST_TO_ADDR
// othersSelect := selected diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1392: LD_ADDR_VAR 0 5
1396: PUSH
1397: LD_VAR 0 3
1401: PUSH
1402: LD_EXP 3
1406: PUSH
1407: LD_EXP 4
1411: PUSH
1412: LD_EXP 5
1416: PUSH
1417: LD_EXP 6
1421: PUSH
1422: LD_EXP 7
1426: PUSH
1427: LD_EXP 8
1431: PUSH
1432: LD_EXP 9
1436: PUSH
1437: LD_EXP 10
1441: PUSH
1442: LD_EXP 11
1446: PUSH
1447: LD_EXP 12
1451: PUSH
1452: LD_EXP 13
1456: PUSH
1457: LD_EXP 14
1461: PUSH
1462: EMPTY
1463: LIST
1464: LIST
1465: LIST
1466: LIST
1467: LIST
1468: LIST
1469: LIST
1470: LIST
1471: LIST
1472: LIST
1473: LIST
1474: LIST
1475: DIFF
1476: ST_TO_ADDR
// othersInBase = tmp diff selected ;
1477: LD_ADDR_VAR 0 6
1481: PUSH
1482: LD_VAR 0 4
1486: PUSH
1487: LD_VAR 0 3
1491: DIFF
1492: ST_TO_ADDR
// othersInBase = othersInBase diff [ Lisa , Donaldson , Bobby , Cyrus , Denis , Brown , Gladstone , Houten , Cornel , Gary , Frank , Kikuchi ] ;
1493: LD_ADDR_VAR 0 6
1497: PUSH
1498: LD_VAR 0 6
1502: PUSH
1503: LD_EXP 3
1507: PUSH
1508: LD_EXP 4
1512: PUSH
1513: LD_EXP 5
1517: PUSH
1518: LD_EXP 6
1522: PUSH
1523: LD_EXP 7
1527: PUSH
1528: LD_EXP 8
1532: PUSH
1533: LD_EXP 9
1537: PUSH
1538: LD_EXP 10
1542: PUSH
1543: LD_EXP 11
1547: PUSH
1548: LD_EXP 12
1552: PUSH
1553: LD_EXP 13
1557: PUSH
1558: LD_EXP 14
1562: PUSH
1563: EMPTY
1564: LIST
1565: LIST
1566: LIST
1567: LIST
1568: LIST
1569: LIST
1570: LIST
1571: LIST
1572: LIST
1573: LIST
1574: LIST
1575: LIST
1576: DIFF
1577: ST_TO_ADDR
// SaveCharacters ( othersSelect , 13c_others ) ;
1578: LD_VAR 0 5
1582: PPUSH
1583: LD_STRING 13c_others
1585: PPUSH
1586: CALL_OW 38
// SaveCharacters ( othersInBase , 13s_others ) ;
1590: LD_VAR 0 6
1594: PPUSH
1595: LD_STRING 13s_others
1597: PPUSH
1598: CALL_OW 38
// SaveCharacters ( JMM , 13c_JMM ) ;
1602: LD_EXP 1
1606: PPUSH
1607: LD_STRING 13c_JMM
1609: PPUSH
1610: CALL_OW 38
// SaveCharacters ( Stevens , 13c_Stevens ) ;
1614: LD_EXP 15
1618: PPUSH
1619: LD_STRING 13c_Stevens
1621: PPUSH
1622: CALL_OW 38
// SaveCharactersAfterSelect ( Lisa , Lisa , selected ) ;
1626: LD_EXP 3
1630: PPUSH
1631: LD_STRING Lisa
1633: PPUSH
1634: LD_VAR 0 3
1638: PPUSH
1639: CALL 1030 0 3
// SaveCharactersAfterSelect ( Donaldson , Donaldson , selected ) ;
1643: LD_EXP 4
1647: PPUSH
1648: LD_STRING Donaldson
1650: PPUSH
1651: LD_VAR 0 3
1655: PPUSH
1656: CALL 1030 0 3
// SaveCharactersAfterSelect ( Bobby , Bobby , selected ) ;
1660: LD_EXP 5
1664: PPUSH
1665: LD_STRING Bobby
1667: PPUSH
1668: LD_VAR 0 3
1672: PPUSH
1673: CALL 1030 0 3
// SaveCharactersAfterSelect ( Cyrus , Cyrus , selected ) ;
1677: LD_EXP 6
1681: PPUSH
1682: LD_STRING Cyrus
1684: PPUSH
1685: LD_VAR 0 3
1689: PPUSH
1690: CALL 1030 0 3
// SaveCharactersAfterSelect ( Denis , Denis , selected ) ;
1694: LD_EXP 7
1698: PPUSH
1699: LD_STRING Denis
1701: PPUSH
1702: LD_VAR 0 3
1706: PPUSH
1707: CALL 1030 0 3
// SaveCharactersAfterSelect ( Gladstone , Gladstone , selected ) ;
1711: LD_EXP 9
1715: PPUSH
1716: LD_STRING Gladstone
1718: PPUSH
1719: LD_VAR 0 3
1723: PPUSH
1724: CALL 1030 0 3
// SaveCharactersAfterSelect ( Houten , Houten , selected ) ;
1728: LD_EXP 10
1732: PPUSH
1733: LD_STRING Houten
1735: PPUSH
1736: LD_VAR 0 3
1740: PPUSH
1741: CALL 1030 0 3
// SaveCharactersAfterSelect ( Cornel , Cornel , selected ) ;
1745: LD_EXP 11
1749: PPUSH
1750: LD_STRING Cornel
1752: PPUSH
1753: LD_VAR 0 3
1757: PPUSH
1758: CALL 1030 0 3
// SaveCharactersAfterSelect ( Gary , Gary , selected ) ;
1762: LD_EXP 12
1766: PPUSH
1767: LD_STRING Gary
1769: PPUSH
1770: LD_VAR 0 3
1774: PPUSH
1775: CALL 1030 0 3
// SaveCharactersAfterSelect ( Frank , Frank , selected ) ;
1779: LD_EXP 13
1783: PPUSH
1784: LD_STRING Frank
1786: PPUSH
1787: LD_VAR 0 3
1791: PPUSH
1792: CALL 1030 0 3
// SaveCharactersAfterSelect ( Kikuchi , Kikuchi , selected ) ;
1796: LD_EXP 14
1800: PPUSH
1801: LD_STRING Kikuchi
1803: PPUSH
1804: LD_VAR 0 3
1808: PPUSH
1809: CALL 1030 0 3
// end ;
1813: LD_VAR 0 1
1817: RET
