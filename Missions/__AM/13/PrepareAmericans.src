Export function PrepareHeroes;
var i, others, tmp;
begin
    tmp = FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_depot], [f_btype, 1]]]);

    uc_side = 1; //12 -> 11 -> 10

    JMM := PrepareUnit('JMM', true);
    Lisa := PrepareUnit('Lisa', true);
    Donaldson := PrepareUnit('Donaldson', true);
    Bobby := PrepareUnit('Bobby', true);
    Cyrus := PrepareUnit('Cyrus', true);
    Denis := PrepareUnit('Denis', true);
    Brown := PrepareUnit('Brown', true);
    Gladstone := PrepareUnit('Gladstone', true);
    Houten := PrepareUnit('Houten', true);
    Cornel := PrepareUnit('Cornell', true);
    Gary := PrepareUnit('Gary', true);
    Frank := PrepareUnit('Frank', true);
    Kikuchi := PrepareUnit('Kikuchi', true);

    Stevens = PrepareUnit('Stevens', false);

    Powell = PrepareUnit('Powell', false);

    PlaceUnitXYR(JMM, GetX(tmp[1]), GetY(tmp[1]), 4, false);
    PlaceUnitXYR(Stevens, GetX(tmp[1]), GetY(tmp[1]), 4, false);

    PlaceUnitXYR(Lisa, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Donaldson, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Bobby, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Cyrus, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Denis, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Brown, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Gladstone, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Houten, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Cornel, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Gary, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Frank, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    PlaceUnitXYR(Kikuchi, GetX(tmp[1]), GetY(tmp[1]), 35,  false);

    SetBName(tmp[1], 'epsilon');
    SetResourceType(GetBase(tmp[1]), 1, 3000);
    SetResourceType(GetBase(tmp[1]), 2, 500);
    SetResourceType(GetBase(tmp[1]), 3, 200);

    SetClass(JMM, 1);

    others12 = CreateCharacterSet('12_other_survivors');

    others11 = CreateCharacterSet('11c_others');
    others11 = others11 diff others12;

    for i in others11 do PlaceUnitXYR(i, GetX(tmp[1]), GetY(tmp[1]), 35,  false);
    for i in others12 do PlaceUnitXYR(i, GetX(tmp[1]), GetY(tmp[1]), 35,  false);

end;

Export Function PrepareEpsilonBase;
var blist, i, b, un;
begin

SetResourceVisibility (113, 50, 1);
SetResourceVisibility (104, 24, 1);

blist := LoadVariable('10_EpsilonBase', []);

if not blist then
   exit;

uc_side := 1;
uc_nation := 1;

for i in blist do
    begin
    bc_type := i[1];
    bc_level := i[5];

    if i[1] in [b_lab_half, b_lab_full] then
       begin
       bc_kind1 := i[7];
       bc_kind2 := i[8];
       end;

    b := CreateAndPlaceBuildingXYD(i[2], i[3], i[4]);

    if GetBType(b) = b_bunker then
       begin
       PlaceWeaponTurret(b, i[7]);
       end;

    end;


End;

Export function PrepareRandoms;
var i, un, tmp;
begin

    if FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM, Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornel, Gary, Frank, Kikuchi, Stevens] < 6 then 
    begin
        tmp = FilterAllUnits([[f_side, 1], [f_or, [f_btype, b_depot], [f_btype, 1]]]);

        uc_side = 1;
        uc_nation = 1;

        for i = 1 to 6 do 
        begin
            hc_gallery = '';
            hc_name = '';
            PrepareHuman(false, [1, 2, 3, 4][Rand(1, 4)], rand(5, 8));

            un = CreateHuman;
            randomsEpsilon = randomsEpsilon ^ un;
            PlaceUnitXYR(un, GetX(tmp[1]), GetY(tmp[1]), 15,  false);
        end;
    end;

end;