// Prepare Hero for use
// ident - ident from start.txt - 'JMM' for example
// exist_mode
//   - false if unit not exist in save
//   - true if unit already exist in save
// example: JMM := PrepareUnit('JMM', false);
Export Function PrepareUnit(ident, exist_mode);
var unit;
begin

if exist_mode then
   unit := CreateCharacter(mission_prev_prefix&ident)
  else
   unit := NewCharacter(ident);

result := unit;
End;

// example: PrepareTank(1, 1, us_medium_wheeled, engine_combustion, control_manual, us_machine_gun, 80);
Export Function PrepareTank(side, nation, chassis, engine, control, weapon, fuel);
begin
uc_side := side;
uc_nation := nation;

vc_chassis := chassis;
vc_engine := engine;
vc_control := control;
vc_weapon := weapon;
vc_fuel_battery := fuel;

result := CreateVehicle;
End;

Export Function GetRandom(sex);
var i, filter;
begin
filter := FilterAllUnits([[f_side, 1], [f_type, unit_human], [f_ok]]) diff [JMM, Brown, Donaldson, Bobby, Cyrus, Lisa, Frank, Gladstone, Kikuchi, Khatam];

if not filter then
   exit;

result := UnitFilter(filter, [f_sex, sex]);
End;

Export Function SayX(units, ident);
var i;
begin
result := false;

if not units then
   exit;

for i in units do
    if IsOk(i) then
       begin
       Say(i, ident);
       result := i;
       break;
       end;
End;

Export Function GoToAnotherTower(un, b, x, y);
var i, filter, t, side;
begin
if not un or not IsOk(un) then
   exit;

side := GetSide(un);

filter := FilterAllUnits([[f_side, side], [f_btype, b_bunker], [f_ok], [f_empty]]) diff b;

if not filter then
   begin
   filter := FilterAllUnits([[f_side, side], [f_btype, b_barracks]]);

   if not filter then
      begin
      ComMoveXY(un, x, y); 
      exit;
      end;

   repeat
     t := NearestUnitToUnit(filter, un);

     if UnitsInside(t) = 6 then
        filter := filter diff t;
   until UnitsInside(t) < 6 or not filter;

   if not filter then
      ComMoveXY(un, x, y) // ?
     else
      ComEnterUnit(un, t);
   end
  else
   begin

   repeat
    t := NearestUnitToUnit(filter, un);

    if (GetTag(t) = 7) then
        filter := filter diff t;
    until GetTag(t) <> 7 or not filter;

    if GetTag(t) <> 7 then
       begin
       SetTag(t, 7);
       ComEnterUnit(un, t);
       end
      else
       ComMoveXY(un, x, y);
    end;
End;