// every 1 do
   0: GO 2
   2: DISABLE
// begin SetMark ( a1 , - 1 ) ;
   3: LD_INT 125
   5: PPUSH
   6: LD_INT 1
   8: NEG
   9: PPUSH
  10: CALL_OW 242
// SetMark ( a2 , - 2 ) ;
  14: LD_INT 129
  16: PPUSH
  17: LD_INT 2
  19: NEG
  20: PPUSH
  21: CALL_OW 242
// SetMark ( a3 , - 3 ) ;
  25: LD_INT 134
  27: PPUSH
  28: LD_INT 3
  30: NEG
  31: PPUSH
  32: CALL_OW 242
// SetMark ( a4 , - 4 ) ;
  36: LD_INT 135
  38: PPUSH
  39: LD_INT 4
  41: NEG
  42: PPUSH
  43: CALL_OW 242
// SetMark ( a5 , - 5 ) ;
  47: LD_INT 136
  49: PPUSH
  50: LD_INT 5
  52: NEG
  53: PPUSH
  54: CALL_OW 242
// SetMark ( a6 , - 6 ) ;
  58: LD_INT 137
  60: PPUSH
  61: LD_INT 6
  63: NEG
  64: PPUSH
  65: CALL_OW 242
// SetMark ( a7 , - 7 ) ;
  69: LD_INT 138
  71: PPUSH
  72: LD_INT 7
  74: NEG
  75: PPUSH
  76: CALL_OW 242
// SetMark ( a8 , - 8 ) ;
  80: LD_INT 139
  82: PPUSH
  83: LD_INT 8
  85: NEG
  86: PPUSH
  87: CALL_OW 242
// end ;
  91: END
// every 1 do var i ;
  92: GO 94
  94: DISABLE
  95: LD_INT 0
  97: PPUSH
// begin enable ;
  98: ENABLE
// for i in all_units do
  99: LD_ADDR_VAR 0 1
 103: PUSH
 104: LD_OWVAR 3
 108: PUSH
 109: FOR_IN
 110: IFFALSE 135
// if IsSelected ( i ) then
 112: LD_VAR 0 1
 116: PPUSH
 117: CALL_OW 306
 121: IFFALSE 133
// display_strings := i ;
 123: LD_ADDR_OWVAR 47
 127: PUSH
 128: LD_VAR 0 1
 132: ST_TO_ADDR
 133: GO 109
 135: POP
 136: POP
// end ;
 137: PPOPN 1
 139: END
