// Functions writed by Serpent

// Prepare Hero for use
// ident - ident from start.txt - 'JMM' for example
// exist_mode
//   - false if unit not exist in save
//   - true if unit already exist in save
// example: JMM := PrepareUnit('JMM', false);

Export Function PrepareUnit(ident, exist_mode);
var unit;
begin

if exist_mode then
   unit := CreateCharacter(ident)
  else
   unit := NewCharacter(ident);

result := unit;
End;

// example: PrepareSolBun(3, rb1);

Export Function PrepareSolBun(skill, b);
var un, dir;
begin
uc_side := GetSide(b);
uc_nation := GetNation(b);

PrepareHuman(false, 1, skill);

dir := GetDir(b) - 3;

if dir < 0 then
   dir := 6 + dir;

un := CreateHuman;
SetDir(un, dir);
PlaceHumanInUnit(un, b);
End;

Export Function GetMultiCargo(cargo_bay);
var i;
begin
result := [GetCargo(cargo_bay, mat_cans), GetCargo(cargo_bay, mat_oil),GetCargo(cargo_bay, mat_siberit)];
End;



Export Function PlaceMines(area, n);
var i, r, x;
begin
r := 100;
x := 0;

while(x < n) do
for i = 1 to AreaToList(area, 0)[1] do
    begin
    if r > 50 then
       begin
       if not MineAtPos(AreaToList(area, 0)[1][i], AreaToList(area, 0)[2][i]) then
          begin
          PlaceMine(AreaToList(area, 0)[1][i], AreaToList(area, 0)[2][i], 2, 0);

          arabianMines := Insert(arabianMines, arabianMines+1, AreaToList(area, 0)[1][i]);
          arabianMines := Insert(arabianMines, arabianMines+1, AreaToList(area, 0)[2][i]);

          r := 0;
          x := x + 1;
          end
           else
            r := r + 35;
       end
        else
         r := r + rand(10, 25);
    end;
End;
