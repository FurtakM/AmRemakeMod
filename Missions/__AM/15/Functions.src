Export Function PrepareUnit(ident, exist_mode);
var unit;
begin

    if exist_mode then
    unit := CreateCharacter(ident)
    else
    unit := NewCharacter(ident);

    result := unit;
End;

Export Function PrepareUnitOmega(ident);
var unit;
begin
    if TestCharacters('13f_'&ident) = true then
    begin
        unit = CreateCharacter('13f_'&ident);
        omegaHeroes = omegaHeroes ^ unit;
        if not unit = Stevens then omegaHeroes = omegaHeroes ^ unit;
    end;    

    result := unit;
End;

Export function EnchancedSaveCharacters(charactersList, ident);
var i;
begin
    for i in charactersList do
    begin
         if IsOk(i) then SaveCharacters(i, ident);
    end;
end;


Export function TabLenght(tab);
var i;
begin
     for i = 1 to tab do result = i;
end;

Export function SetDifficulty;
begin

     if Difficulty = 1 then
     begin
        SetTech(tech_Weap1, 3, state_researched);
        SetTech(tech_Comp1, 3, state_researched);
        SetTech(tech_ST1, 3, state_researched);
        SetTech(tech_Weap2, 3, state_researched);
        SetTech(tech_Comp2, 3, state_researched);
     end;

     if Difficulty = 2 then
     begin
        SetTech(tech_Weap1, 3, state_researched);
        SetTech(tech_Comp1, 3, state_researched);
        SetTech(tech_ST1, 3, state_researched);
        SetTech(tech_Weap2, 3, state_researched);
        SetTech(tech_Comp2, 3, state_researched);
        SetTech(tech_ST2, 3, state_researched);
        SetTech(tech_Comp3, 3, state_researched);
     end;


     if Difficulty = 3 then
     begin
        SetTech(tech_Weap1, 3, state_researched);
        SetTech(tech_Comp1, 3, state_researched);
        SetTech(tech_ST1, 3, state_researched);
        SetTech(tech_Weap2, 3, state_researched);
        SetTech(tech_Comp2, 3, state_researched);
        SetTech(tech_ST2, 3, state_researched);
        SetTech(tech_Weap3, 3, state_researched);
        SetTech(tech_Comp3, 3, state_researched);
        SetTech(tech_ST3, 3, state_researched);
     end;
end;


Export function DialogRandom(characters, dialogMID, dialogFID);
var i, rnd;
begin

    characters := characters diff [Stevens, Baker, Gordon,  Lisa, Donaldson, Bobby, Cyrus, Denis, Brown, Gladstone, Houten, Cornell, Gary, Frank, Kikuchi, Powell];
    rnd = rand(1, characters);  

    for i = 1 to characters do
    begin

        if i = rnd AND GetSex(characters[i]) = 1 then Say(characters[i], dialogMID);
        if i = rnd AND GetSex(characters[i]) = 2 then Say(characters[i], dialogFID);

    end;

end;

Export Function IntBazooka(side);
var ta, c, i, list, filter;
begin

    list   := FilterAllUnits([[f_side, side], [f_class, class_bazooker]]);
    filter := FilterAllUnits([[f_enemy, side], [f_not, [f_type, unit_building]]]);

    c := Rand(1, 3);

    for i = 1 to list do
    for ta in filter do
        begin

        if GetDistUnits(list[i], ta) <= 15 then
            begin
                Case c of
                1: ComTimeShift(list[i], GetX(ta), GetY(ta));
                2: ComSpaceShift(list[i], GetX(ta) + Rand(-1,1), GetY(ta) + Rand(-1,1));
                3: ComAttackUnit(list[i], ta);
                end;

            end;
        end;
End;

Export function TimeLapsersAI(side);
var j, nearUnit, vehs;
begin
    if FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_weapon, 49]]) > 0 then
    repeat
        vehs = FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_weapon, 49]]);
        wait(0$3);

        for j in UnitFilter(vehs, [f_not, [f_hastask]]) do
        begin
            nearUnit := NearestUnitToUnit(FilterAllUnits([[f_enemy, side], [f_see, 1], [f_or, [f_type, unit_human], [f_not, [f_empty]]]]), j);
            ComMoveXY(j, GetX(nearUnit), GetY(nearUnit));
        end;

    until vehs = 0;
end;



Export function RespawnAttackInfantry(side, nation, soldierCount, sniperCount, bazookCount, mortalCount, medicCount, skil, spawnArea, healArea, targetSide);
var i, j,  un, damageUnit_list, medic_list, soldiersOK_list, enemyUnits, und, target1, target2;
begin

        for i = 1 to medicCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 4, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;


       for i = 1 to soldierCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 1, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        for i = 1 to sniperCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 5, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        for i = 1 to bazookCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 9, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        for i = 1 to mortalCount do
        begin

                uc_side = side;
                uc_nation = nation;

                hc_name = '';
                hc_gallery = '';
                PrepareHuman(false, 8, skil);

                un = CreateHuman;
                PlaceUnitArea(un, spawnArea, false);

        end;

        medic_list = FilterAllUnits([[f_side, side], [f_class, 4]]);

        for i in medic_list do ComMoveToArea(i, healArea);
        repeat
            wait(0$1);
            damageUnit_list = FilterAllUnits([[f_side, side], [f_and, [f_not, [f_lives, 550]],[f_lives, 250]]]);
            soldiersOK_list =  FilterAllUnits([[f_side, side], [f_or,[f_class, 1], [f_class, 5], [f_class, 8], [f_class, 9]], [f_lives, 1000]]);

            IF medicCount > 0  then
            begin
                    if damageUnit_list > 0 then
                    begin
                            for i in damageUnit_list  do
                            begin
                                    ComMoveToArea(i, healArea);
                                    for j in medic_list do 
                                    AddComHeal(j, i);
                            end;
                        end;
            end;

            for i in soldiersOK_list do
            begin

                    target1 := NearestUnitToUnit(FilterAllUnits([f_side, targetSide]), i);
                    target2 := NearestUnitToUnit(FilterAllUnits([[[f_side, targetSide], [f_or,[f_occupied], [f_type, unit_human], [f_type, unit_vehicle]]]]), i);

                    If GetDistUnits(i, target1)+8 < GetDistUnits(i, target2) then
                    begin
                            ComAttackUnit(i, target1);
                            end  else
                            begin
                            ComAttackUnit(i, target2);
                    end;

            end;


        until soldiersOK_list = [];

END;

// Spawn vehicle and attack

export function RespawnAttackVehicle(area, side, vehCount, mehskill, nation, vehEngine, vehControl, RUWeapons, ARWeapons, AMWeapon, targetSide);
var i, j, un, veh, ruChassisTab, arChassisTab, amChassisTab, vehicleOK_list, target1, target2;
begin

  amChassisTab = [];
  arChassisTab = [];
  ruChassisTab = [];

  for i = 1 to vehCount do
  begin
  wait(0$01);

  IF nation = 1 then
  begin

            uc_side = side;
            uc_nation = nation;

            vc_engine = vehengine;
            vc_weapon = AMWeapon[Rand(1, AMWeapon)];

            for j = 1 to AMWeapon do
            begin
                 IF AMWeapon[j] = 2 or AMWeapon[j] = 3 then
                 begin
                      amChassisTab = [1,2,3,4,5];
                      vc_chassis = amChassisTab[Rand(1,amChassisTab)];
                 end;

                 IF AMWeapon[j] = 4 or AMWeapon[j] = 5 or AMWeapon[j] = 9 or AMWeapon[j] = 11 or AMWeapon[j] = 7 then
                 begin
                      amChassisTab = [2,3,4,5];
                      vc_chassis = amChassisTab[Rand(1, amChassisTab)];
                 end;

                 IF AMWeapon[j] = 8 or AMWeapon[j] = 6 or AMWeapon[j] = 10 then
                 begin
                      amChassisTab = [4,5];
                      vc_chassis = amChassisTab[Rand(1, amChassisTab)];
                 end;

           end;

            veh = CreateVehicle;
            PlaceUnitArea(veh, area, false);

            IF vc_control = 1 then
            begin

                hc_gallery = '';
                hc_name = '';
                PrepareHuman(false, 3, mehskill);

                un = CreateHuman;
                PlaceHumanInUnit(un, veh);

            end;


            i = i + 1;

    end;

    IF nation = 2 then
    begin

            uc_side = side;
            uc_nation = nation;

            vc_engine = vehengine;
            if FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_control, control_remote], [f_ok]]) <= 8 then vc_control = vehcontrol[Rand(1, vehcontrol)]
            else vc_control = control_apeman;
            vc_weapon = ARWeapons[Rand(1, ARWeapons)];

            for j = 1 to ARWeapons do
            begin

                 IF ARWeapons[j] = 24 or ARWeapons[j] = 22 or ARWeapons[j] = 23 or ARWeapons[j] = 30 then
                 begin
                      arChassisTab = [11, 12, 13, 14];
                      vc_chassis = arChassisTab[Rand(1, arChassisTab)];
                 end;

                 IF ARWeapons[j] = 29 or ARWeapons[j] = 28 or ARWeapons[j] = 27 or ARWeapons[j] = 26 or ARWeapons[j] = 25 then
                 begin
                      arChassisTab = [13, 14];
                      vc_chassis = arChassisTab[Rand(1, arChassisTab)];
                 end;

           end;

            veh = CreateVehicle;
            PlaceUnitArea(veh, area, false);

            IF vc_control = 1 then
            begin

                hc_gallery = '';
                hc_name = '';
                PrepareHuman(false, 3, mehskill);

                un = CreateHuman;
                PlaceHumanInUnit(un, veh);

            end;


            i = i + 1;

    end;

    IF nation = 3 then
    begin

            uc_side = side;
            uc_nation = nation;

            vc_engine = vehengine;
            vc_control = vehcontrol[Rand(1, vehcontrol)];
            vc_weapon = RUWeapons[Rand(1, RUWeapons)];


            for j = 1 to RuWeapons do
            begin

                IF RUWeapons[j] = 42 or RUWeapons[j] = 43 or RUWeapons[j] = 44 or RUWeapons[j] = 45 or RUWeapons[j] = 49 then
                begin
                    ruChassisTab = [24];
                    vc_chassis = ruChassisTab[Rand(1, ruChassisTab)];
                end;

                IF RUWeapons[j] = 46 or RUWeapons[j] = 47 then
                begin
                    ruChassisTab = [24];
                    vc_chassis = ruChassisTab[Rand(1, ruChassisTab)];
                end;

           end;


            veh = CreateVehicle;
            PlaceUnitArea(veh, area, false);

            IF vc_control = 1 then
            begin
                if uc_side = 8 then uc_nation = 2
                else uc_nation = nation;
                hc_gallery = '';
                hc_name = '';
                PrepareHuman(false, 3, mehskill);

                un = CreateHuman;
                PlaceHumanInUnit(un, veh);

            end;

    end;

  end;

    repeat
        wait(0$1);                                                                                                                                     
        vehicleOK_list = FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_lives, 250]]) diff FilterAllUnits([[f_side, side], [f_type, unit_vehicle], [f_weapon, 49]]);

        IF vehicleOK_list > 0 then
        begin

            for i in vehicleOK_list  do
            begin

            target1 := NearestUnitToUnit(FilterAllUnits([f_side, targetSide]), i);
            target2 := NearestUnitToUnit(FilterAllUnits([[[f_side, targetSide], [f_or,[f_occupied], [f_type, unit_human], [f_type, unit_vehicle]]]]), i);

            If GetDistUnits(i, target1)+8 < GetDistUnits(i, target2) then
            begin
                ComAttackUnit(i, target1);
            end
            else
            begin
                ComAttackUnit(i, target2);
            end;
        end;
      end;
    until vehicleOK_list = 0;

END;