// Start mission

Every 1 do
var i, dec1, options, people;
begin
    InGameOn;
    ComMoveXY([NewJMMVeh, NewJMMGirlVeh], 60, 75);

    if KappaStatus = 0 then
    begin
        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-1');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1nT-JMM-1');
    end else
    begin

        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-1');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1T-Pow-1');
        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-2');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1T-Pow-2');
        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-3');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1T-Pow-3');
        CenterNowOnUnits(NewJMMVeh);
        if not JMMGirlVeh = [] then
        begin
            if JMMGirl = 1 then Say(Joan, 'D1T-Joan-3');
            if JMMGirl = 2 then Say(Lisa, 'D1T-Lisa-3');
            if JMMGirl = 3 then Say(Connie, 'D1T-Con-3');
            CenterNowOnUnits(NewJMMVeh);
            Say(Powell, 'D1T-Pow-4');
            CenterNowOnUnits(NewJMMVeh);
        end else
        begin
            Say(JMM, 'D1T-JMM-4');
            CenterNowOnUnits(NewJMMVeh);
            Say(Powell, 'D1T-Pow-5');
            CenterNowOnUnits(NewJMMVeh);
        end;
            
    end;

    repeat
        wait(0$1);
        ComMoveXY([NewJMMVeh, NewJMMGirlVeh], 60, 75);
        CenterNowOnUnits(NewJMMVeh);
    until GetDistUnits(NewJMMVeh, Powell) < 25;

    ComExitVehicle(JMM);


    repeat
        wait(0$1);
        ComMoveUnit(JMM, Powell);
        CenterNowOnUnits(JMM);
    until GetDistUnits(JMM, Powell) < 6;

    CenterNowOnUnits([JMM, Powell]);
    ComTurnUnit(JMM, Powell);
    ComTurnUnit(Powell, JMM);

    Say(JMM, 'D1-JMM-1');
    Say(Powell, 'D1-Pow-1');
    RevealFogArea(1, RevealArea1);
    RevealFogArea(1, RevealArea2);
    RevealFogArea(1, RevealArea3);
    CenterOnXY(171, 81);
    wait(0$4);
    CenterOnXY(162, 36);
    wait(0$4);
    CenterOnXY(75, 16);
    wait(0$4);
    CenterNowOnUnits([Powell, JMM]);
    Say(JMM, 'D1-JMM-2');
    Say(Powell, 'D1-Pow-2');
    Say(JMM, 'D1-JMM-3');
    Say(Powell, 'D1-Pow-3');
    Say(JMM, 'D1-JMM-4');
    Say(Powell, 'D1-Pow-4');
    Say(JMM, 'D1-JMM-5');
    Say(Powell, 'D1-Pow-5');

    options = [1, 2, 3, 4, 5, 6];

    dec1 = SelectiveQuery('Q1', options);

    repeat
        dec1 = SelectiveQuery('Q1', options);
        options = options diff dec1;
        ResolveQuery(dec1, options);
    until (dec1 in [5, 6]) or options = 2;

    if not(dec1 in [5, 6]) then
    begin
        dec1 = SelectiveQuery('Q1a', [1, 2]);
        ResolveQuery(dec1+4, options);
    end;

    if not JMMGirlVeh = [] then
    begin
        ComExitVehicle(UnitsInside(NewJMMGirlVeh));
        wait(0$1);
        repeat
            wait(0$1);
            if JMMGirl = 1 then ComMoveUnit(JMM, Joan);
            if JMMGirl = 2 then ComMoveUnit(JMM, Lisa);
            if JMMGirl = 3 then ComMoveUnit(JMM, Connie);
        until GetDistUnits(JMM, Joan) < 6 or GetDistUnits(JMM, Lisa) < 6 or GetDistUnits(JMM, Connie) < 6;
    end;

    CenterNowOnUnits(JMM);

    case JMMGirl of
        1:begin
            ComTurnUnit(JMM, Joan);
            ComTurnUnit(Joan, JMM);
            Say(Joan, 'D3W-Joan-1');
        end;

        2:begin
            ComTurnUnit(JMM, Lisa);
            ComTurnUnit(Lisa, JMM);
            Say(Lisa, 'D3W-Lisa-1');
        end;

        3:begin
            ComTurnUnit(JMM, Connie);
            ComTurnUnit(Connie, JMM);
            Say(Connie, 'D3W-Con-1');
        end;
    end;

    Say(JMM, 'D3W-JMM-1');

    people = 0;

    if Lisa and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Lisa;  end;
    if Donaldson and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Donaldson;  end;
    if Bobby and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Bobby; end;
    if Cyrus and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Cyrus;  end;
    if Denis and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Denis;  end;
    if Brown and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Brown; end;
    if Gladstone and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Gladstone; end;
    if Houten and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Houten;  end;
    if Cornel and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Cornel;  end;
    if Gary and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Gary;  end;
    if Frank and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Frank; end;
    if Kikuchi and people < 5 then begin people = people + 1; amUnitsForJMM = amUnitsForJMM ^ Kikuchi; end;
    
    if UnitFilter(amUnitsForJMM, [f_class, 2]) = 0 then SetClass(amUnitsForJMM[1], 2);
    
    for i = 1 to 5 do
    begin
         ComMoveXY(amUnitsForJMM[i], 62 + i, 95);
         AddComTurnUnit(amUnitsForJMM[i], JMM);
    end;

    repeat
        wait(0$1);
        CenterNowOnUnits(JMM);
        ComMoveXY(JMM, 66, 98);
        ComMoveXY([Joan, Lisa, Connie], 67, 98);
        AddComTurnXY([JMM, Joan, Lisa, Connie], 63, 95);
    until IsInArea(JMM, PowellHillArea) and FilterUnitsInArea(PowellHillArea, [[f_side, 4], [f_type, unit_human]]) = 5;

    wait(0$2);
    if IsInArea(Lisa, PowellHillArea) then Say(Lisa, 'D3nW-Lisa-1');
    if IsInArea(Cyrus, PowellHillArea) then Say(Cyrus, 'D3nW-Cyrus-1');
    if IsInArea(Bobby, PowellHillArea) then Say(Bobby, 'D3nW-Bobby-1');
    if IsInArea(Gary, PowellHillArea) then Say(Gary, 'D3nW-Gary-1');
    if IsInArea(Donaldson, PowellHillArea) then Say(Donaldson, 'D3nW-Don-1');
    if IsInArea(Cornel, PowellHillArea) then Say(Cornel, 'D3nW-Corn-1');
    if IsInArea(Frank, PowellHillArea) then Say(Frank, 'D3nW-Frank-1');
    Say(JMM, 'D3nW-JMM-1');
    Say(JMM, 'D3nW-JMM-1a');

    InGameOff;
    ChangeMissionObjectives('M1');

    SaveForQuickRestart;
    startAttacks = 1;

    wait(0$5);

    powellBuildBase = 1;

end;

Function ResolveQuery(question, list_of_q);
 begin
   case question of
     1: begin
          Say(JMM, 'D2Mot-JMM-1');
          Say(Powell, 'D2Mot-Pow-1');
          Say(JMM, 'D2Mot-JMM-2');
          Say(Powell, 'D2Mot-Pow-2');
        end;

     2: begin
          Say(JMM, 'D2Rus-JMM-1');
          Say(Powell, 'D2Rus-Pow-1');
          Say(JMM, 'D2Rus-JMM-2');
          if not(3 in list_of_q) then Say(Powell, 'D2Rus-Pow-2')
          else Say(Powell, 'D2Rus-Pow-2a');
        end;

     3: begin
          Say(JMM, 'D2Leg-JMM-1');
          Say(Powell, 'D2Leg-Pow-1');
          if (2 in list_of_q) then
            begin
              Say(JMM, 'D2Leg-JMM-2');
              Say(Powell, 'D2Leg-Pow-2');
            end;
          Say(JMM, 'D2Leg-JMM-3');
          Say(Powell, 'D2Leg-Pow-3');
        end;

     4: begin
          Say(JMM, 'D2Ar-JMM-1');
          Say(Powell, 'D2Ar-Pow-1');
          Say(JMM, 'D2Ar-JMM-2');
          Say(Powell, 'D2Ar-Pow-2');
          Say(JMM, 'D2Ar-JMM-3');
          Say(Powell, 'D2Ar-Pow-3');
        end;

     5: begin
          Say(JMM, 'D2Conf-JMM-1');
        end;

     6: begin
          Say(JMM, 'D2Com-JMM-1');
          Say(Powell, 'D2Com-Pow-1');
          Say(JMM, 'D2Com-JMM-2');
          Say(Powell, 'D2Com-Pow-2');
        end;
   end;
 end;

// Give player soldiers
 Every 0$1 trigger FilterUnitsInArea(PowellHillArea, [[f_side, 4], [f_type, unit_human]]) do
 begin
    enable;
    SetSide(FilterUnitsInArea(PowellHillArea, [[f_side, 4], [f_type, unit_human]]), 1);
 end;

// First Powell attack - disable ru attacks
Every 0$1 trigger FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]) = 4 and startAttacks = 1 do startAttacks = 0;

// First Powell attack - attack
Every 0$1 trigger FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]) = 4 and FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_lives, 250]]) = 0 and startAttacks = 0 and powellAttacks = 0 do
var i;
begin
    powellAttacks = 1;
    
    InGameOn;
    CenterNowOnUnits(Powell);
    ComTurnXY(POwell, 47, 60);
    Say(Powell, 'D4-Pow-1');
    for i = 1 to amUnitsAttack do if GetSex(amUnitsAttack[i]) = sex_male then begin Say(amUnitsAttack[i], 'D4-Sol1-1'); break; end;
    Say(Powell, 'D4-Pow-2');
    InGameOff;

    ComAgressiveMove(FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]), 59, 21);

end; 

// First Powell attack - block attack troops
Every 0$1 trigger powellAttacks = 1  do
var i;
begin 
    enable;
    for i = 1 to amUnitsAttack do DoNotAttack(8, amUnitsAttack[i]);
end;

// Second Powell attack - build new vehs
Every 2$0 trigger FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]) = 0 and powellAttacks = 1 do
begin
    powellAttacks = 2;

    AddComConstruct(AmFact, us_medium_tracked, engine_siberite, control_manual, [5, 7][Rand(1, 2)]);
    AddComConstruct(AmFact, us_medium_tracked, engine_siberite, control_manual, [5, 7][Rand(1, 2)]);
    AddComConstruct(AmFact, us_medium_tracked, engine_siberite, control_manual, [5, 7][Rand(1, 2)]);
    AddComConstruct(AmFact, us_morphling, engine_siberite, control_manual, 6);
    powellVeh = AddComConstruct(AmFact, us_medium_tracked, engine_siberite, control_manual, 3);
end;

// Second Powell attack - disable ru attacks
Every 0$30 trigger FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]) >= 5 and startAttacks = 1 do startAttacks = 0;


// Second Powell attack - attack
Every 1$15 trigger FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]) >= 5 and FilterAllUnits([[f_side, 6], [f_type, unit_vehicle], [f_lives, 250]]) = 0 and startAttacks = 0 and powellAttacks = 2 do
var i, sold, powellPeople, arControler;
begin
    powellAttacks = 3;
    for i = 1 to amUnitsAttack do NormalAttack(8, amUnitsAttack[i]);

    wait(0$5);

    //Video(true);

    CenterNowOnUnits(Powell);
    ComMoveXY(Powell, 45, 64);
    AddComTurnXY(POwell, 46, 66);

    for i = 5 to 8 do
    begin
        ComExitBuilding(amUnitsAttack[i]);
        ComExitVehicle(amUnitsAttack[i]);
        wait(0$1);
        AddComEnterUnit(amUnitsAttack[i], AmArm);
        AddComChangeProfession(amUnitsAttack[i], 1);
        AddComExitBuilding(amUnitsAttack[i]);
        wait(0$1);
        AddComMoveXY(amUnitsAttack[i], 45 + i, 67);
        AddComTurnUnit(amUnitsAttack[i], Powell);
    end;

    powellPeople = FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_outside], [f_not, [f_hastask]]]) diff [Powell];
    ComEnterUnit(powellPeople, AmArm);
    AddComChangeProfession(powellPeople, 1);

    Say(Powell, 'D5-Pow-1');
    for i = 1 to amUnitsAttack do if GetSex(amUnitsAttack[i]) = sex_male then begin Say(amUnitsAttack[i], 'D5-Sol2-1'); break; end;
    Say(Powell, 'D5-Pow-2');
    for i = 1 to amUnitsAttack do if GetSex(amUnitsAttack[i]) = sex_male then begin Say(amUnitsAttack[i], 'D5-Sol2-2'); break; end;
    Say(Powell, 'D5-Pow-3');

    ComAgressiveMove(FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]), 59, 21);
    ComAgressiveMove(amUnitsAttack, 59, 21);

    CenterOnXY(61, 35);

    wait(0$15);
    Say(Powell, 'D5a-Pow-1');
    Say(Powell, 'D5a-Pow-1a');
    wait(0$2);
    Say(Powell, 'D5a-Pow-1b');
    wait(0$3);
    Say(Powell, 'D5a-Pow-1c');
    wait(0$1);
    Say(Powell, 'D5a-Pow-1d');

    repeat
        wait(0$1);
        ComAgressiveMove(FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_empty]]]), 59, 21);
        ComAgressiveMove(amUnitsAttack, 59, 21);
    until amUnitsAttack = [];

    CenterNowOnUnits(Powell);

    powellPeople = FilterAllUnits([[f_side, 4], [f_type, unit_human]]) diff [Powell];

    for i in powellPeople do if GetSex(i) = sex_male then sold = i;

    Say(sold, 'D6-Sol3-1');
    Say(Powell, 'D6-Pow-1');



    ComMoveToArea([ArBomb1, ArBomb2], PowellBaseNearArea);
end;

// Arrive legion bomb
Every 0$1 trigger powellAttacks = 3 and FilterUnitsInArea(PowellBaseNearArea, [[f_side, 8], [f_type, unit_vehicle]]) = 2 do
var i, tmp;
begin
    ChangeSideFog(8, 1);
    SetAttitude(4, 8, att_friend, true);

    for i in UnitsInside(AmArm) do
        if GetSex(i) = sex_male then
        begin
            tmp = i;
            break;
        end;
            

    ComExitBuilding(UnitsInside(AmArm));
    Say(tmp, 'D6-Sol3-2');
    ComAttackUnit([ArBomb1, ArBomb2], AmFact);
    SetAttitude(4, 8, att_enemy, true);
    ChangeSideFog(8, 8);
    Say(Powell, 'D6-Pow-2');
end;

// Destroy Powell's fab
Every 0$1 trigger IsDead(AmFact) do
var i, tmp;
begin

    for i in FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_outside]]) diff [Powell] do
    if GetSex(i) = sex_male then
    begin
        tmp = i;
        break;
    end;

    Say(Powell, 'D6a-Pow-1');
    Say(tmp, 'D6a-Sol3-1');
    ComTurnUnit(Powell, tmp);
    Say(Powell, 'D6a-Pow-2');
    Say(tmp, 'D6a-Sol3-2');
    Say(Powell, 'D6a-Pow-3');
    ComEnterUnit(Powell, powellVeh);

    repeat
        wait(0$1);
        ComEnterUnit(Powell, powellVeh);        
    until IsInUnit(Powell);

    wait(0$1);
    AddComMoveXY(powellVeh, 77, 64);
    AddComMoveXY(powellVeh, 91, 61);
    AddComMoveXY(powellVeh, 74, 25);

    centerPowell = 1;

    wait(0$15);
    Say(Powell, 'D6b-Pow-1');
end;

// Powell in legion base
Every 0$1 trigger IsInArea(powellVeh, DestroyPowellVeh) and powellAttacks = 3 do 
begin
    SetLives(PowellVeh, 250);
    DialogueOn;
    Say(Powell, 'D6b-Pow-1a');
    DialogueOff;
    ComEnterUnit(Powell, PowBomb);
    wait(0$1);
    ComEnterUnit(Powell, PowBomb);
end;

// Powell bomb
Every 0$01 trigger FilterAllUnits([[f_side, 4], [f_weapon, ar_selfpropelled_bomb]]) do
begin
    SetAttitude(8, 4, att_friend, true);
    ComMoveXY(PowBomb, 80, 19);
    AddComMoveXY(PowBomb, 74, 15);
    AddComMoveXY(PowBomb, 72, 19);
    AddComMoveXY(PowBomb, 78, 24);
    AddComMoveXY(PowBomb, 77, 20);
    AddComMoveXY(PowBomb, 78, 15);

    Say(Powell, 'D6b-Pow-1b');
    Say(FilterAllUnits([[f_side, 8], [f_type, unit_human],[f_class, 1],[f_sex, 1]])[1],'D6b-ArSol1-1');
    Say(FilterAllUnits([[f_side, 8], [f_type, unit_human],[f_class, 1],[f_sex, 1]])[1],'D6b-ArSol2-1');

    wait(0$3);
    Say(Powell, 'D6b-Pow-2');
    
    repeat
        wait(0$1);
    until GetDistUnitXY(PowBomb, 78, 15) < 2;

    wait(0$1);
    DialogueOn;
    Say(Powell, 'D6b-Pow-2a');
    DialogueOff;
    centerPowell = 0;
    ComAttackUnit(PowBomb, ArRuFact);
end;

// Boom boom :D
Every 0$3 trigger IsDead(ArRuFact) and powellAttacks = 3 do
var i, tmp, tmp1, tmp2;
begin
    tmp = FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_outside], [f_sex, 1]]);

    CenterOnXY(49, 66);
    Say(tmp[1], 'D6c-Sol3-1');
    Say(JMM, 'D6c-JMM-1');
    If IsOk(Cyrus) then Say(Cyrus, 'D6c-Cyrus-1');
    if IsOk(Bobby) then Say(Bobby, 'D6c-Bobby-1');
    if IsOk(Cornel) then Say(Cornel, 'D6c-Corn-1');
    Say(tmp[2], 'D6c-Sol1-1');
    if IsOk(Lisa) then Say(Lisa, 'D6c-Lisa-1');
    if IsOk(Gary) then Say(Gary, 'D6c-Gary-1');
    if IsOK(Donaldson) then Say(Donaldson, 'D6c-Don-1');
    Say(tmp[3], 'D6c-Sol2-1');

    ComExitBuilding(FilterAllUnits([[f_side, 1], [f_type, unit_human]]));
    ComExitBuilding(FilterAllUnits([[f_side, 4], [f_type, unit_human]]));

    wait(0$1);

    tmp1 = FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM];
    tmp2 = FilterAllUnits([[f_side, 4], [f_type, unit_human]]);

    for i := 1 to tmp2 do
    begin
        ComMoveXY(tmp2[i], 43 + i, 65);
        AddComTurnUnit(tmp2[i], JMM);
    end;

    for i := 1 to tmp1 do
    begin
        ComMoveXY(tmp1[i], 43 + i, 64);
        AddComTurnUnit(tmp1[i], JMM);
    end;

    ComMoveXY(JMM, 48, 68);
    AddComTurnXY(JMM, 47, 65);

    repeat
        wait(0$1);
    until GetDistUnitXY(JMM, 48, 68) < 2;

    wait(0$2);
    Say(tmp[2], 'D6c-Sol3-2');
    Say(JMM, 'D6c-JMM-2');

    Video(false);
    centerPowell = 0;

    SetSide(FilterAllUnits([f_side, 4]), 1);
    ChangeMissionObjectives('M2');

end;

Every 0$1 trigger centerPowell = 1 do 
begin
    enable;

    SetLives([Powell, PowBomb], 1000);
    if not IsInArea(powellVeh, DestroyPowellVeh) then SetLives(powellVeh, 1000);
    if not IsInUnit(Powell) then CenterNowOnUnits(Powell)
    else CenterNowOnUnits(IsInUnit(Powell));

end;