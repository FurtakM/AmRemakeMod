Every 1 do
var dec1, options, people;
begin
    InGameOn;
    ComMoveXY([NewJMMVeh, NewJMMGirlVeh], 48, 68);

    if KappaStatus = 0 then
    begin
        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-1');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1nT-JMM-1');
    end else
    begin

        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-1');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1T-Pow-1');
        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-2');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1T-Pow-2');
        CenterNowOnUnits(NewJMMVeh);
        Say(JMM, 'D1T-JMM-3');
        CenterNowOnUnits(NewJMMVeh);
        Say(Powell, 'D1T-Pow-3');
        CenterNowOnUnits(NewJMMVeh);
        if not JMMGirlVeh = [] then
        begin
            if JMMGirl = 1 then Say(Joan, 'D1T-Joan-3');
            if JMMGirl = 2 then Say(Lisa, 'D1T-Lisa-3');
            if JMMGirl = 3 then Say(Connie, 'D1T-Con-3');
            CenterNowOnUnits(NewJMMVeh);
            Say(Powell, 'D1T-Pow-4');
            CenterNowOnUnits(NewJMMVeh);
        end else
        begin
            Say(JMM, 'D1T-JMM-4');
            CenterNowOnUnits(NewJMMVeh);
            Say(Powell, 'D1T-Pow-5');
            CenterNowOnUnits(NewJMMVeh);
        end;
            
    end;

    repeat
        wait(0$1);
        ComMoveXY([NewJMMVeh, NewJMMGirlVeh], 48, 68);
        CenterNowOnUnits(NewJMMVeh);
    until GetDistUnits(NewJMMVeh, Powell) < 15;

    ComExitVehicle(JMM);
    ComExitVehicle(UnitsInside(NewJMMGirlVeh));
    wait(0$1);

    repeat
        wait(0$1);
        ComMoveUnit(JMM, Powell);
        CenterNowOnUnits(JMM);
    until GetDistUnits(JMM, Powell) < 6;

    CenterNowOnUnits([JMM, Powell]);
    ComTurnUnit(JMM, Powell);
    ComTurnUnit(Powell, JMM);

    Say(JMM, 'D1-JMM-1');
    Say(Powell, 'D1-Pow-1');
    RevealFogArea(1, RevealArea1);
    RevealFogArea(1, RevealArea2);
    RevealFogArea(1, RevealArea3);
    CenterOnXY(171, 81);
    wait(0$4);
    CenterOnXY(162, 36);
    wait(0$4);
    CenterOnXY(75, 16);
    wait(0$4);
    CenterNowOnUnits([Powell, JMM]);
    Say(JMM, 'D1-JMM-2');
    Say(Powell, 'D1-Pow-2');
    Say(JMM, 'D1-JMM-3');
    Say(Powell, 'D1-Pow-3');
    Say(JMM, 'D1-JMM-4');
    Say(Powell, 'D1-Pow-4');
    Say(JMM, 'D1-JMM-5');
    Say(Powell, 'D1-Pow-5');

    options = [1, 2, 3, 4, 5, 6];

    dec1 = SelectiveQuery('Q1', options);

    repeat
        dec1 = SelectiveQuery('Q1', options);
        options = options diff dec1;
        ResolveQuery(dec1, options);
    until (dec1 in [5, 6]) or options = 2;

    if not(dec1 in [5, 6]) then
    begin
        dec1 = SelectiveQuery('Q1a', [1, 2]);
        ResolveQuery(dec1+4, options);
    end;

    if not JMMGirlVeh = [] then
    begin
        repeat
            wait(0$1);
            if JMMGirl = 1 then ComMoveUnit(JMM, Joan);
            if JMMGirl = 2 then ComMoveUnit(JMM, Lisa);
            if JMMGirl = 3 then ComMoveUnit(JMM, Connie);
        until GetDistUnits(JMM, Joan) < 6 or GetDistUnits(JMM, Lisa) < 6 or GetDistUnits(JMM, Connie) < 6;
    end;

    case JMMGirl of
        1:begin
            ComTurnUnit(JMM, Joan);
            ComTurnUnit(Joan, JMM);
            Say(Joan, 'D3W-Joan-1');
        end;

        2:begin
            ComTurnUnit(JMM, Lisa);
            ComTurnUnit(Lisa, JMM);
            Say(Lisa, 'D3W-Lisa-1');
        end;

        3:begin
            ComTurnUnit(JMM, Connie);
            ComTurnUnit(Connie, JMM);
            Say(Connie, 'D3W-Con-1');
        end;
    end;

    Say(JMM, 'D3W-JMM-1');

    people = 0;

    if Lisa and people < 5 then begin people = people + 1; ComMoveXY(Lisa, 65, 98); end;
    if Donaldson and people < 5 then begin people = people + 1; ComMoveXY(Donaldson, 65, 98); end;
    if Bobby and people < 5 then begin people = people + 1; ComMoveXY(Bobby, 65, 98); end;
    if Cyrus and people < 5 then begin people = people + 1; ComMoveXY(Cyrus, 65, 98); end;
    if Denis and people < 5 then begin people = people + 1; ComMoveXY(Denis, 65, 98); end;
    if Brown and people < 5 then begin people = people + 1; ComMoveXY(Brown, 65, 98); end;
    if Gladstone and people < 5 then begin people = people + 1; ComMoveXY(Gladstone, 65, 98); end;
    if Houten and people < 5 then begin people = people + 1; ComMoveXY(Houten, 65, 98); end;
    if Cornel and people < 5 then begin people = people + 1; ComMoveXY(Cornel, 65, 98); end;
    if Gary and people < 5 then begin people = people + 1; ComMoveXY(Gary, 65, 98); end;
    if Frank and people < 5 then begin people = people + 1; ComMoveXY(Frank, 65, 98); end;
    if Kikuchi and people < 5 then begin people = people + 1; ComMoveXY(Kikuchi, 65, 98); end;

    repeat
        wait(0$1);
        CenterNowOnUnits(JMM);
        ComMoveXY([JMM, Joan, Lisa, Connie], 68, 100);
    until IsInArea(JMM, PowellHillArea);

    wait(0$2);
    ComTurnUnit(FilterAllUnits([[f_side, 1], [f_type, unit_human]]) diff [JMM], JMM);
    Say(Lisa, 'D3nW-Lisa-1');
    Say(Cyrus, 'D3nW-Cyrus-1');
    Say(Bobby, 'D3nW-Bobby-1');
    Say(Gary, 'D3nW-Gary-1');
    Say(Donaldson, 'D3nW-Don-1');
    Say(Cornel, 'D3nW-Corn-1');
    Say(Frank, 'D3nW-Frank-1');
    Say(JMM, 'D3nW-JMM-1');
    Say(JMM, 'D3nW-JMM-1a');

    InGameOff;
    ChangeMissionObjectives('M1');

end;

Function ResolveQuery(question, list_of_q);
 begin
   case question of
     1: begin
          Say(JMM, 'D2Mot-JMM-1');
          Say(Powell, 'D2Mot-Pow-1');
          Say(JMM, 'D2Mot-JMM-2');
          Say(Powell, 'D2Mot-Pow-2');
        end;

     2: begin
          Say(JMM, 'D2Rus-JMM-1');
          Say(Powell, 'D2Rus-Pow-1');
          Say(JMM, 'D2Rus-JMM-2');
          if not(3 in list_of_q) then Say(Powell, 'D2Rus-Pow-2')
          else Say(Powell, 'D2Rus-Pow-2a');
        end;

     3: begin
          Say(JMM, 'D2Leg-JMM-1');
          Say(Powell, 'D2Leg-Pow-1');
          if (2 in list_of_q) then
            begin
              Say(JMM, 'D2Leg-JMM-2');
              Say(Powell, 'D2Leg-Pow-2');
            end;
          Say(JMM, 'D2Leg-JMM-3');
          Say(Powell, 'D2Leg-Pow-3');
        end;

     4: begin
          Say(JMM, 'D2Ar-JMM-1');
          Say(Powell, 'D2Ar-Pow-1');
          Say(JMM, 'D2Ar-JMM-2');
          Say(Powell, 'D2Ar-Pow-2');
          Say(JMM, 'D2Ar-JMM-3');
          Say(Powell, 'D2Ar-Pow-3');
        end;

     5: begin
          Say(JMM, 'D2Conf-JMM-1');
        end;

     6: begin
          Say(JMM, 'D2Com-JMM-1');
          Say(Powell, 'D2Com-Pow-1');
          Say(JMM, 'D2Com-JMM-2');
          Say(Powell, 'D2Com-Pow-2');
        end;
   end;
 end;

 Every 0$1 trigger FilterUnitsInArea(PowellHillArea, [f_side, 4]) do
 begin
    enable;
    SetSide(FilterUnitsInArea(PowellHillArea, [f_side, 4]), 1);
 end;