Export Function Action;
var i, t, cargo, tmp, options, dec, amount, macmilan_squad;
begin
Video(true);

tmp := AreaToList(macmilanCameraArea, 0);

for i = 1 to tmp[1] do
    RevealMapOnXY(tmp[1][i], tmp[2][i], 1, -15);

CenterNowOnUnits(Powell);

tmp := [JMMNewVeh];

if GirlNewVeh then
   tmp := tmp ^ GirlNewVeh;

ComMoveXY(tmp, 60, 109);

if KappaStatus then  // kappa saved
   begin
   Say(JMM, 'D1T-JMM-1');
   Say(Powell, 'D1T-Pow-1');
   Say(JMM, 'D1T-JMM-2');
   Say(Powell, 'D1T-Pow-2');
   end
else if JMMGirlStatus then // kappa destroyed + girl saved
   begin
   Say(JMM, 'D1T-JMM-1');
   Say(Powell, 'D1T-Pow-1');
   Say(JMM, 'D1T-JMM-3');
   Say(Powell, 'D1T-Pow-3');

   if JMMGirl then
      begin
      case JMMGirl of
           1: Say(Joan, 'D1T-Joan-3');
           2: Say(Lisa, 'D1T-Lisa-3');
           3: Say(Connie, 'D1T-Con-3');
      end;

      Say(Powell, 'D1T-Pow-4');
      end;
   end
else if not FastEnd then // kappa destroyed + girl killed
  begin
  Say(JMM, 'D1T-JMM-4');
  Say(Powell, 'D1T-Pow-5');
  end
else  // kappa destroyed + girl killed + fast end
  begin
  Say(JMM, 'D1nT-JMM-1');
  Say(Powell, 'D1nT-Pow-1');
  end;

repeat
 wait(0$1);
until not HasTask(JMMNewVeh);

ComExitVehicle(JMM);

wait(3);

ComMoveXY(JMM, 60, 94);
AddComTurnUnit(JMM, Powell);

if JMMGirl and JMMGirlStatus and not KappaStatus then
   begin
   AddComExitVehicle([Joan, Lisa, Connie][JMMGirl]);
   AddComMoveXY([Joan, Lisa, Connie][JMMGirl], 64, 102);
   AddComTurnUnit([Joan, Lisa, Connie][JMMGirl], JMM);
   end;

repeat
 wait(0$1);
until GetDistUnits(JMM, Powell) < 6;

wait(0$0.5);

Say(JMM, 'D1-JMM-1');

async;
Say(Powell, 'D1-Pow-1');

if not dialogue_skipped then
   wait(0$2);

RevealMapOnXY(170, 99, 1, -6);
RevealMapOnXY(174, 115, 1, -6);
RevealMapOnXY(169, 71, 1, -6);

if not dialogue_skipped then
   begin
   CenterOnXY(170, 99);
   wait(0$2.3);
   end;

RevealMapOnXY(75, 53, 1, -9);
RevealMapOnXY(54, 42, 1, -9);
RevealMapOnXY(62, 51, 1, -9);

if not dialogue_skipped then
   begin
   CenterOnXY(75, 53);
   wait(0$4);
   end;

CenterNowOnUnits(Powell);

if not dialogue_skipped then
   wait(0$2);

sync;

Say(JMM, 'D1-JMM-2');
Say(Powell, 'D1-Pow-2');
Say(JMM, 'D1-JMM-3');
Say(Powell, 'D1-Pow-3');
Say(JMM, 'D1-JMM-4');
Say(Powell, 'D1-Pow-4');
Say(JMM, 'D1-JMM-5');

async;
Say(Powell, 'D1-Pow-5');

if not dialogue_skipped then
   wait(0$3.6);

RevealMapOnXY(134, 210, 1, -11);

if not dialogue_skipped then
   begin
   CenterOnXY(134, 210);
   wait(0$2);
   end;

RevealMapOnXY(101, 159, 1, -10);

if not dialogue_skipped then
   begin
   CenterOnXY(101, 159);
   wait(0$2);
   end;

CenterNowOnUnits(Powell);

if not dialogue_skipped then
   wait(0$6);

sync;

options = [1, 2, 3, 4, 5, 6];

if not dialogue_skipped then
   begin
   dec = SelectiveQuery('Q1', options);

   repeat
     dec = SelectiveQuery('Q1', options);
     options = options diff dec;
     ResolveQuery(dec, options);
   until (dec in [5, 6]) or options = 2;

   if not (dec in [5, 6]) then
      begin
      dec = SelectiveQuery('Q1a', [1, 2]);
      ResolveQuery(dec+4, options);
      end;
   end;

CenterOnXY(81, 127);

// macmilan team
amount := 5;
macmilan_squad := [];

if vip < amount then
   tmp := vip union FilterAllUnits([[f_side, 4], [f_type, unit_human]])
else
   tmp := vip;

tmp := tmp diff Powell;

if tmp < amount then
   amount := tmp;

if GetClass(tmp[1]) <> 2 then
   begin
   if IsInUnit(tmp[1]) then
      ComExitBuilding(tmp[1]);

   AddComEnterUnit(tmp[1], am_depot);
   AddComChangeProfession(tmp[1], 2);
   end;

ComMoveXY(JMM, 82, 129);
AddComTurnUnit(JMM, Powell); 

if KappaStatus and JMMGirlStatus and JMMGirl then
   begin
   ComMoveXY([Joan, Lisa, Connie][JMMGirl], 84, 128);
   AddComTurnUnit([Joan, Lisa, Connie][JMMGirl], JMM);
   end;   

for i = 1 to amount do
    begin
    macmilan_squad := macmilan_squad ^ tmp[i];

    if IsInUnit(tmp[i]) then
       AddComExitBuilding(tmp[i]);

    if i = 2 and JMMNewVeh then
       begin
       AddComEnterUnit(tmp[i], JMMNewVeh);
       AddComMoveXY(tmp[i], 86, 133);
       AddComExitVehicle(tmp[i]);
       end;

    AddComMoveToArea(tmp[i], macmilanSquadStand);
    AddComTurnUnit(tmp[i], JMM);
    end;

if GirlNewVeh then
   SetSide(GirlNewVeh, 4);
 
repeat
 wait(0$1);
until UnitFilter(macmilan_squad, [f_inarea, powellBase]) = 0 and not IsInArea(JMM, powellBase);

wait(0$2);

for i in macmilan_squad do
    SetSide(i, 1);

SetSide(JMMNewVeh, 1);

Video(false);

ChangeMissionObjectives('M1');
SaveForQuickRestart;

missionStart := true;
missionStage := 2;

wait(0$3);

tmp := tmp diff FilterAllUnits([[f_side, 1], [f_type, unit_human]]);
mc_bases := Replace(mc_bases, 4, FilterAllUnits([[f_side, 4], [f_nation, 1], [f_not, [f_type, unit_vehicle]]]) diff Powell);

// cargo
cargo := FilterAllUnits([[f_side, 4], [f_weapon, us_cargo_bay]])[1];

if IsInUnit(tmp[1]) then
   ComExitBuilding(tmp[1]);

AddComEnterUnit(tmp[1], cargo);
AddComMoveXY(tmp[1], 80, 136);
AddComUnload(tmp[1]);
AddComMoveXY(tmp[1], 59, 112);
AddComExitVehicle(tmp[1]);

if Lisa in vip and GetSide(Lisa) = 1 then
   Say(Lisa, 'D3nW-Lisa-1')
else if Cyrus in vip and GetSide(Cyrus) = 1 then
   Say(Cyrus, 'D3nW-Cyrus-1')
else if Bobby in vip and GetSide(Bobby) = 1 then
   Say(Bobby, 'D3nW-Bobby-1')
else if Gary in vip and GetSide(Gary) = 1 then
   Say(Gary, 'D3nW-Gary-1')
else if Donaldson in vip and GetSide(Donaldson) = 1 then
   Say(Donaldson, 'D3nW-Don-1')
else if Cornel in vip and GetSide(Cornel) = 1 then
   Say(Cornel, 'D3nW-Corn-1')
else if Frank in vip and GetSide(Frank) = 1 then
   Say(Frank, 'D3nW-Frank-1');

Say(JMM, 'D3nW-JMM-1');
Say(JMM, 'D3nW-JMM-1a');

t := 0$00;

repeat
 wait(0$1);
 t := t + 0$1;
until HexInfo(59, 112) or t > 1$00;

activeAttacks := true;
End;

Export Function ResolveQuery(question, list_of_q);
begin
  case question of
     1: begin
        Say(JMM, 'D2Mot-JMM-1');
        Say(Powell, 'D2Mot-Pow-1');
        Say(JMM, 'D2Mot-JMM-2');
        Say(Powell, 'D2Mot-Pow-2');
        end;

     2: begin
        Say(JMM, 'D2Rus-JMM-1');
        Say(Powell, 'D2Rus-Pow-1');
        Say(JMM, 'D2Rus-JMM-2');

        if not (3 in list_of_q) then
           Say(Powell, 'D2Rus-Pow-2')
        else
           Say(Powell, 'D2Rus-Pow-2a');
        end;

     3: begin
        Say(JMM, 'D2Leg-JMM-1');
        Say(Powell, 'D2Leg-Pow-1');

        if 2 in list_of_q then
           begin
           Say(JMM, 'D2Leg-JMM-2');
           Say(Powell, 'D2Leg-Pow-2');
           end;

        Say(JMM, 'D2Leg-JMM-3');
        Say(Powell, 'D2Leg-Pow-3');
        end;

     4: begin
        Say(JMM, 'D2Ar-JMM-1');
        Say(Powell, 'D2Ar-Pow-1');
        Say(JMM, 'D2Ar-JMM-2');
        Say(Powell, 'D2Ar-Pow-2');
        Say(JMM, 'D2Ar-JMM-3');
        Say(Powell, 'D2Ar-Pow-3');
        end;

     5: Say(JMM, 'D2Conf-JMM-1');

     6: begin
        Say(JMM, 'D2Com-JMM-1');
        Say(Powell, 'D2Com-Pow-1');
        Say(JMM, 'D2Com-JMM-2');
        Say(Powell, 'D2Com-Pow-2');
        end;
  end;
End;


// Don't go to Powell
Every 0$5 trigger missionStart do
var tmp;
begin

repeat
 wait(0$1);

 if FilterUnitsInArea(powellBorder, [f_side, 1]) and missionStage in [2, 3, 4, 5] then
    begin
    powellAnger := powellAnger + 1;

    Video(true);

    CenterNowOnUnits(tmp);
    ComMoveXY(FilterUnitsInArea(powellBorder, [f_side, 1]), 86, 133);

    async;

    case powellAnger of
         1: Say(Powell, 'DBack1-Pow-1');
         2: Say(Powell, 'DBack2-Pow-1');
         3: Say(Powell, 'DBack3-Pow-1');
    end;

    sync;

    repeat
     wait(0$1);
     ComMoveXY(FilterUnitsInArea(powellBorder, [f_side, 1]), 86, 133);
    until not FilterUnitsInArea(powellBorder, [f_side, 1]);

    if powellAnger >= 3 then
       YouLost('Dismissed');

    Video(false);
    end;
until missionStage > 5;
End;

// Powell first attack
Every 0$30 trigger missionStart and FilterAllUnits([[f_side, 4], [f_type, unit_vehicle]]) >= 4 and missionStage = 2 do
var i, tmp, tmp2, retreat, arm;
begin
missionStage := 3;
retreat := false;
arm := FilterAllUnits([[f_side, 4], [f_btype, b_armoury]])[1];

repeat
 wait(0$1);
until mc_vehicles[4] >= 4;

tmp := FilterAllUnits([[f_side, 4], [f_or, [f_class, 1], [f_class, 2], [f_class, 3], [f_class, 4]]]) diff (Powell ^ vip);
tmp2 := UnitFilter(tmp, [f_sex, sex_male]);

tmp := tmp diff tmp2;

for i = 1 to 4 do
    begin
    if tmp2 then
       begin
       powellSquadAttack := Replace(powellSquadAttack, 1, powellSquadAttack[1] ^ tmp2[1]);
       SetTag(tmp2[1], 1);
       tmp2 := Delete(tmp2, 1);
       end
    else
       begin
       powellSquadAttack := Replace(powellSquadAttack, 1, powellSquadAttack[1] ^ tmp[1]);
       SetTag(tmp[1], 1);
       tmp := Delete(tmp, 1);
       end;
    end;

if tmp2 then
   tmp := tmp union tmp2;

for i = 1 to 4 do
    powellSquadAttack := Replace(powellSquadAttack, 2, powellSquadAttack[2] ^ tmp[i]);

mc_bases := Replace(mc_bases, 4, mc_bases[4] diff powellSquadAttack[1]);

for i in powellSquadAttack[1] do
    begin
    if IsInUnit(i) then
       ComExitBuilding(i);

    if GetClass(i) <> 1 then
       begin
       AddComEnterUnit(i, arm);
       AddComChangeProfession(i, class_soldier);
       AddComExitBuilding(i);
       end;

    AddComMoveXY(i, 60, 94);
    AddComTurnUnit(i, Powell);
    end;

wait(0$15);

Say(Powell, 'D4-Pow-1');

tmp := UnitFilter(powellSquadAttack[1], [f_sex, sex_male]);

if tmp then
   Say(tmp[1], 'D4-Sol1-1');

Say(Powell, 'D4-Pow-2');

for i = 1 to powellSquadAttack[1] do
    begin
    ComEnterUnit(powellSquadAttack[1][i], mc_vehicles[4][1]);
    mc_vehicles := Replace(mc_vehicles, 4, Delete(mc_vehicles[4], 1));
    DoNotAttack(8, powellSquadAttack[1][i]);
    end;

repeat
 wait(0$1);
until UnitFilter(powellSquadAttack[1], [f_driving]) >= 4;

ComMoveXY(powellSquadAttack[1], 69, 94);
AddComMoveXY(powellSquadAttack[1], 82, 83);
AddComAgressiveMove(powellSquadAttack[1], 77, 69);

repeat
 wait(3);

 for i in powellSquadAttack[1] do
     begin

     if GetLives(i) < 990 then
        SetLives(i, 1000);

     if not IsInUnit(i) then
        begin
        // See Events.src :: 63
        
        if not retreat and GetSex(i) = sex_male then
           begin
           retreat := true;
           SetTag(i, 2);

           Say(i, 'D4a-Sol1-1');
           Say(Powell, 'D4a-Pow-1');
           end;
        end;
     end;

until UnitFilter(powellSquadAttack[1], [[f_inarea, powellBase], [f_not, [f_driving]]]) >= 4;

for i in powellSquadAttack[1] do
    begin

    if GetTag(i) = 2 then
       begin
       ComMoveXY(i, 60,94);
       AddComTurnUnit(i, Powell);

       wait(0$3);

       Say(i, 'D4a-Sol1-2');
       Say(Powell, 'D4a-Pow-2');
       end;

    SetTag(i, 0);
    mc_bases := Replace(mc_bases, 4, mc_bases[4] union i);
    NormalAttack(8, i);
    end;

wait(1$00);

MC_SetProduceList(4, [
   [us_medium_tracked, engine_combustion, control_manual, us_double_gun],
   [us_heavy_tracked, engine_combustion, control_manual, us_heavy_gun],
   [us_heavy_tracked, engine_combustion, control_manual, us_rocket_launcher],
   [us_medium_tracked, engine_combustion, control_manual, us_rocket_launcher],
   [us_medium_tracked, engine_combustion, control_manual, us_double_gun]
]);

missionStage := 4;
End;

// Powell second attack
Every 0$30 trigger missionStage = 4 and FilterAllUnits([[f_side, 4], [f_type, unit_vehicle]]) >= 5 do
var i, j, tmp, tmp2, xy, forces, _xy, dist, fac, arm, speaker, emp_towers, veh;
begin
missionStage := 5;
arm := FilterAllUnits([[f_side, 4], [f_btype, b_armoury]])[1];
forces := FilterAllUnits([[f_side, 4], [f_type, unit_human], [f_not, [f_class, 16]], [f_not, [f_class, 12]]]) diff Powell;
fac := FilterAllUnits([[f_side, 4], [f_btype, b_factory]])[1];

repeat
 wait(0$1);
until mc_vehicles[4] >= 5;

powellAllowRetreat := false;

wait(0$20);

activeAttacks := false;

repeat
 wait(0$1);
until FilterAllUnits([f_side, 6]) = 0;

tmp := mc_vehicles[4];

for i = 1 to powellSquadAttack do
    begin

    for j in powellSquadAttack[i] do
        begin
        forces := forces diff j;
        SetTag(j, 1);
        wait(0$2);

        if IsInUnit(j) then
           ComExitBuilding(j);

        if GetClass(j) <> 1 then
           begin
           AddComEnterUnit(j, arm);
           AddComChangeProfession(j, 1);
           AddComExitBuilding(j);
           end;

        if i = 2 then
           AddComMoveXY(j, 61, 93);

        if i = 1 then
           begin
           AddComEnterUnit(j, tmp[1]);
           tmp := Delete(tmp, 1);

           AddComMoveXY(j, 69, 94);
           end;
        end;

    end;

wait(0$30);

MC_Kill(4); // !!!

tmp := UnitsInside(fac);

if tmp then
   for i in tmp do
       begin
       ComExitBuilding(i);

       if UnitsInside(arm) < 6 then
          AddComEnterUnit(i, arm)
       else
          AddComMoveXY(i, 61, 101);
       end;

speaker := UnitFilter(forces, [f_sex, sex_male]) diff vip;

if not speaker then
   speaker := UnitFilter(forces, [f_sex, sex_male]);

if speaker then
   speaker := speaker[1];

Video(true);

CenterNowOnUnits(Powell);

tmp := UnitFilter(forces, [f_not, [f_class, 1]]);
emp_towers := FilterAllUnits([[f_side, 4], [f_btype, b_bunker], [f_empty]]);

for i = 1 to 6 do
    begin
    if IsInUnit(tmp[i]) then
       ComExitBuilding(tmp[i]);

    AddComEnterUnit(tmp[i], arm);
    AddComChangeProfession(tmp[i], class_soldier);

    if emp_towers then
       begin
       AddComExitBuilding(tmp[i]);
       AddComEnterUnit(tmp[i], emp_towers[1]);
       emp_towers := Delete(emp_towers, 1);
       end;
    end;

tmp := UnitFilter(powellSquadAttack[1] ^ powellSquadAttack[2], [f_sex, sex_male]);

for i in powellSquadAttack[2] do
    ComTurnUnit(i, Powell);

Say(Powell, 'D5-Pow-1');

if tmp then
   Say(tmp[1], 'D5-Sol2-1');

Say(Powell, 'D5-Pow-2');

if tmp > 1 then
   Say(tmp[2], 'D5-Sol2-2');

Say(Powell, 'D5-Pow-3');

wait(0$1);

tmp := powellSquadAttack[1] union powellSquadAttack[2];

ComAgressiveMove(tmp, 80, 67);

wait(0$2);

CenterOnXY(79, 72);

repeat
 wait(0$1);
until UnitFilter(tmp, [f_not, [f_lives, 1000]]);

Say(Powell, 'D5a-Pow-1');
Say(Powell, 'D5a-Pow-1a');

wait(0$0.3);

Say(Powell, 'D5a-Pow-1b');
Say(Powell, 'D5a-Pow-1c');
Say(Powell, 'D5a-Pow-1d');

repeat
 wait(0$1);

 if not HasTask(tmp) then
    ComAgressiveMove(tmp, 80, 67); 
until not UnitFilter(tmp, [f_lives, 1]);

wait(0$3);

Say(speaker, 'D6-Sol3-1');

CenterNowOnUnits(Powell);

Say(Powell, 'D6-Pow-1');

// create legion bombs
tmp := [];

for i = 1 to 2 do
    begin
    uc_side := 8;
    uc_nation := 2;

    PrepareVehicle(ar_half_tracked, engine_siberite, control_remote, ar_selfpropelled_bomb, 100);
    veh := CreateVehicle;

    SetDir(veh, 4);
    PlaceUnitXYR(veh, 99, 83, 5, false);
    Connect(veh);
    tmp := tmp ^ veh;
    end;

wait(0$1);

PlaceSeeing(99, 83, 1, 10);
CenterNowOnXY(99, 83);

Say(speaker, 'D6-Sol3-2');

async;
Say(Powell, 'D6-Pow-2');

ComAttackUnit(tmp[1], fac);
ComAttackUnit(tmp[2], NearestUnitToUnit(FilterAllUnits([[f_side, 4], [f_type, unit_building]]), tmp[2]));

CenterNowOnUnits(Powell);
RemoveSeeing(99, 83, 1);

repeat
 wait(4);

 if GetLives(tmp[1]) < 1000 then
    SetLives(tmp[1], 1000);

until FilterAllUnits([[f_side, 4], [f_btype, b_factory]]) = 0;

sync;

Say(Powell, 'D6a-Pow-1');
Say(Speaker, 'D6a-Sol3-1');
Say(Powell, 'D6a-Pow-2');
Say(Speaker, 'D6a-Sol3-2');
Say(Powell, 'D6a-Pow-3');

powellCenterCameraMode := true;

tmp := FilterAllUnits([[f_side, 4], [f_type, unit_vehicle], [f_not, [f_weapon, us_cargo_bay]]]);

ComEnterUnit(Powell, NearestUnitToUnit(tmp, Powell));
AddComMoveXY(Powell, 100, 88);
AddComMoveXY(Powell, 100, 75);
AddComMoveXY(Powell, 88, 53);

DoNotAttack(8, Powell);
SetAttitude(4, 8, att_neutral, false);

repeat
 wait(3);
until FilterAllUnits([[f_side, 4], [f_distxy, 100, 75, 6]]);

async;
Say(Powell, 'D6b-Pow-1');

repeat
 wait(3);

 if GetLives(IsInUnit(Powell)) < 1000 then
    SetLives(IsInUnit(Powell), 1000);

 if GetLives(Powell) < 1000 then
    SetLives(Powell, 1000);

 if GetDistUnits(Powell, powellBomb) < 5 or GetDistUnits(IsInUnit(Powell), powellBomb) < 5 then
    SetLives(IsInUnit(Powell), 100);

until not IsInUnit(Powell);

game_speed := 4;

Say(Powell, 'D6b-Pow-1a');

AddComEnterUnit(Powell, powellBomb);
sync;

repeat
 wait(0$1);
until IsInUnit(Powell);

DoNotAttack(8, IsInUnit(Powell));

AddComMoveXY(Powell, 91, 44);
AddComMoveXY(Powell, 96, 44);
AddComMoveXY(Powell, 96, 41);
AddComMoveXY(Powell, 92, 39);
AddComMoveXY(Powell, 88, 41);
AddComMoveXY(Powell, 91, 44);
AddComMoveXY(Powell, 96, 44);
AddComMoveXY(Powell, 96, 41);
AddComMoveXY(Powell, 92, 39);
AddComMoveXY(Powell, 88, 41);
AddComMoveXY(Powell, 91, 44);
AddComMoveXY(Powell, 93, 39);
AddComMoveXY(Powell, 93, 36);

wait(0$3.5);

game_speed := 4;

Say(Powell, 'D6b-Pow-1b');

// aaaaaa!
// everybody go out
tmp := [];
xy := [ [78,47], [106,53] ];

for i in FilterAllUnits([[f_side, 8], [f_type, unit_building], [f_distxy, 90, 52, 12]]) do
    tmp := tmp ^ UnitsInside(i);

for i in tmp do
    begin
    dist := 9999;
    _xy := [];

    SetTag(i, 1);
    ComExitBuilding(i);

    for j in xy do
        if GetDistUnitXY(i, j[1], j[2]) < dist then
           begin
           dist := GetDistUnitXY(i, j[1], j[2]);
           _xy := j;
           end;

    AddComMoveXY(i, _xy[1], _xy[2]);
    end;

tmp2 := UnitFilter(tmp, [f_sex, sex_male]);

if tmp2 < 2 then
   tmp2 := FilterAllUnits([[f_side, 8], [f_sex, sex_male], [f_class, 1]]) diff [Kurt, Kozlov];

if tmp2 then
   Say(tmp2[1], 'D6b-ArSol1-1');

async;

Say(Powell, 'D6b-Pow-2');

if tmp2 > 1 then
   Say(tmp2[2], 'D6b-ArSol2-1');

sync;

repeat
 wait(5);
until GetSide(HexInfo(93, 36)) = 4;

DialogueOn;
dwait(0$0.3);
Say(Powell, 'D6b-Pow-2a');
DialogueOff;

ComAttackUnit(IsInUnit(Powell), kozlov_fac);

PlaceSeeing(93, 35, 1, -6);

repeat
 wait(0$1);

 if GetLives(kozlov_fac) < 1000 and IsLive(kozlov_fac) then
    SetLives(kozlov_fac, 1);
until IsDead(kozlov_fac) or IsDead(Powell);

game_speed := 4;

powellCenterCameraMode := false;

for i in tmp do
    SetTag(i, 0);

wait(0$3);

RemoveSeeing(93, 35, 1);

DialogueOn;

Say(speaker, 'D6c-Sol3-1');

dwait(0$0.3);

CenterNowOnUnits(JMM);

Say(JMM, 'D6c-JMM-1');

if Cyrus then
   Say(Cyrus, 'D6c-Cyrus-1');

if Bobby then
   Say(Bobby, 'D6c-Bobby-1');

if Cornel then
   Say(Cornel, 'D6c-Corn-1');

tmp2 := FilterAllUnits([[f_or, [f_side, 1], [f_side, 4]], [f_sex, sex_male]]) diff (speaker union JMM union vip);

if tmp2 then
   Say(tmp2[1], 'D6c-Sol1-1');

if Lisa then
   Say(Lisa, 'D6c-Lisa-1');

if Gary then
   Say(Gary, 'D6c-Gary-1');

if Donaldson then
   Say(Donaldson, 'D6c-Don-1');

if tmp2 > 1 then
   Say(tmp2[2], 'D6c-Sol2-1');

Say(speaker, 'D6c-Sol3-2');

dwait(0$1);

Say(JMM, 'D6c-JMM-2');

DialogueOff;

Video(false);

SetSide(FilterAllUnits([f_side, 4]), 1);


for i in GetTechNation(4, 1, 2) do
    if GetTech(i, 1) <> state_researched then
       SetTech(i, 1, state_researched);

missionStart := 0$00;
missionStage := 6;

ChangeMissionObjectives('M2');

SaveForQuickRestart;
End;

Every 0$2 trigger powellCenterCameraMode and IsLive(Powell) do
begin
enable;

if IsInUnit(Powell) then
   CenterOnUnits(IsInUnit(Powell))
else
   CenterOnUnits(Powell);
End;