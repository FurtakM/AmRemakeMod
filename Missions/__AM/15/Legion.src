Export Kurt, Kozlov, Friend;
Export powellBomb;
Export Function PrepareLegion;
var i, side, un, tmp;
begin
side := 8;

uc_side := side;
uc_nation := 2;

for i in FilterAllUnits([[f_side, side], [f_type, unit_building]]) do
    SetBLevel(i, 10);

if KurtStatus then
   Kurt := PrepareUnit('Kurt', false, '')
else
   Kurt := PrepareUnit('AltKurt', (not debug), '');

if not Kurt then
   begin
   InitHc;
   PrepareSoldier(sex_male, 10);
   Kurt := CreateHuman;
   end;

PlaceHumanInUnit(Kurt, ar_depot1);

Kozlov := PrepareUnit('Kozlov', false, '');
PlaceHumanInUnit(Kozlov, FilterAllUnits([[f_side, 8], [f_nation, 3], [f_btype, b_lab_full]])[1]);

tmp := FilterAllUnits([[f_side, side], [f_btype, b_bunker], [f_empty]]);

for i = 1 to 10 do
    begin
    uc_nation := nation_nature;
    hc_class := class_apeman_soldier;
    hc_gallery := '';
    hc_name := '';

    un := CreateHuman;
    PlaceHumanInUnit(un, tmp[tmp-i]);
    end;

tmp := CreateCharacterSet('12_kurt_squad');

if tmp then
   for i in tmp do
       PlaceUnitArea(i, legionBaseArea, false);

// PrepareBase(base_dep, area, name, skill, sources, personel);
PrepareBase(ar_depot1, legionBaseArea, '', [8, 9, 10][Difficulty], [3000, 500, 150], [12, 6, 6, 8]);

mc_bases := Replace(mc_bases, 3, FilterAllUnits([[f_side, side], [f_nation, 2], [f_not, [f_type, unit_vehicle]]]) diff Kurt);

// friend
PrepareMechanic(sex_male, 7);
Friend := CreateHuman;

// bomb for Powell
PrepareVehicle(ar_half_tracked, engine_siberite, control_manual, ar_selfpropelled_bomb, 100);
powellBomb := CreateVehicle;
PlaceUnitXY(powellBomb, 90, 51, false);
End;

Export Function RebuildKozlovFactory;
var fac, lab;
begin
if IsLive(kozlov_fac) then
   exit;

ComExitBuilding(Kozlov);

if GetClass(Kozlov) <> 2 then
   begin
   AddComEnterUnit(Kozlov, ar_depot1);
   AddComChangeProfession(Kozlov, class_engineer);
   AddComExitBuilding(Kozlov);
   end;

AddComBuild(Kozlov, b_workshop, 93, 32, 3);

repeat
 wait(0$1);
until FilterAllUnits([[f_side, 8], [f_btype, b_factory], [f_nation, 3], [f_constructed]]);

fac := FilterAllUnits([[f_side, 8], [f_btype, b_factory], [f_nation, 3], [f_constructed]])[1];

if not FilterAllUnits([[f_side, 8], [f_nation, 3], [f_btype, b_ext_siberium]]) then
   begin
   AddComBuild(Kozlov, b_ext_siberium, 97, 36, 5);
   repeat
    wait(0$1);
   until FilterAllUnits([[f_side, 8], [f_nation, 3], [f_btype, b_ext_siberium], [f_constructed]]);
   end;

if not FilterAllUnits([[f_side, 8], [f_nation, 3], [f_btype, b_ext_rocket]]) then
   begin
   AddComBuild(Kozlov, b_ext_rocket, 89, 32, 1);
   repeat
    wait(0$1);
   until FilterAllUnits([[f_side, 8], [f_nation, 3], [f_btype, b_ext_rocket], [f_constructed]]);
   end;

lab := kozlov_lab;

if not lab then
   exit; // wtf?

AddComEnterUnit(Kozlov, lab[1]);
AddComChangeProfession(Kozlov, 4);

ComResearch(lab[1], tech_sibFiss);

repeat
 wait(0$1);
until GetTech(tech_sibFiss, 8) = state_researched;

ComExitBuilding(Kozlov);
AddComEnterUnit(Kozlov, fac);
AddComChangeProfession(Kozlov, 3);

ComConstruct(fac, ru_heavy_wheeled, engine_siberite, control_manual, ru_siberium_rocket);
End;


// Legion attacks
Every 7$30 trigger not legionDestroyed and missionStage >= 6 do
var i, tmp, target;
begin
enable;

if not FilterAllUnits([[f_side, 8], [f_nation, 2], [f_btype, b_factory]]) then
   exit;

if Prob(40) then
   begin
   MC_InsertProduceList(3, [
      [ar_medium_trike, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_medium_trike, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_medium_trike, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_medium_trike, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_medium_trike, engine_combustion, control_remote, ar_rocket_launcher],
      [ar_medium_trike, engine_combustion, control_remote, ar_flame_thrower],
   ]);
   end
else
   begin
   MC_InsertProduceList(3, [
      [ar_medium_trike, engine_combustion, control_remote, [ar_gun, ar_flame_thrower, ar_flame_thrower][Difficulty]],
      [ar_medium_trike, engine_combustion, control_remote, [ar_gun, ar_flame_thrower, ar_flame_thrower][Difficulty]],
      [ar_medium_trike, engine_combustion, control_remote, [ar_flame_thrower, ar_flame_thrower, ar_selfpropelled_bomb][Difficulty]],
      [ar_medium_trike, engine_combustion, control_remote, [ar_flame_thrower, ar_selfpropelled_bomb, ar_selfpropelled_bomb][Difficulty]],
      [ar_medium_trike, engine_combustion, control_remote, ar_selfpropelled_bomb],
      [ar_medium_trike, engine_combustion, control_remote, ar_flame_thrower],
   ]);
   end;

repeat
 wait(0$1);
until MC_GetVehicles(3, true) >= 6;

tmp := MC_GetVehicles(3, true);       
mc_vehicles := Replace(mc_vehicles, 3, mc_vehicles[3] diff tmp);

target := rand(0, 1);

if target then
   begin
   repeat
    ComMoveXY(tmp, 90, 75);
    wait(0$1);
   until UnitFilter(tmp, [f_distxy, 90, 75, 6]) > 2;
   end
else
   begin
   repeat
    ComMoveXY(tmp, 128, 11);
    wait(0$1);
   until UnitFilter(tmp, [f_distxy, 128, 11, 6]) > 2;
   end;

repeat
 wait(0$1);

 for i in tmp do
     if GetLives(i) > 251 then
        ComAttackUnit(i, NearestUnitToUnit(FilterAllUnits([f_enemy, 8]), i))
     else
        tmp := tmp diff i;
until not tmp;
End;