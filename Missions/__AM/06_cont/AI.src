Every 0$1 do ResAllTechs(3, rulab, 3);

Every 0$1 do
begin
     enable;
     RepairBuilding(3, rudepo);
     if disableHealAI = 0 then HealUnitInBase(3, RussianHealArea, RussianBase, rulab);
     CollectCrates(3, 51, CratesSpawn1);
     RepairVehicle(3, RussianRepairArea, 121, 100, 1);
     RebuildBuildings(3, ruDestroyedBuildings);
     EscapeToBarrack(3, [ruarm1, ruarm2][Rand(1,2)], RussianBase);
     AttackNearBuildings(3, 1);

end;

Every 10$0 trigger FilterAllUnits([[f_side, 3], [f_type, unit_vehicle], [f_not, [f_weapon, 51]]]) = 0  do
begin
    enable;
    BuildingVehicleAndAttackEnemy(3, rufab, [4, 5, 5][Difficulty], 1, [ [43, 43, 43, 44], [44, 44, 44, 43], [44, 44, 44, 44, 46] ][Difficulty], 1, 1, [22, 22, 24][Difficulty]);
end;

Every 5$0 do
begin
   enable;
   AddComConstruct(rufabsupp, 22, 1, 1, [42, 43, 44][Rand(1,3)]);
   AddComConstruct(rufabsupp, 22, 1, 1, [42, 43, 44][Rand(1,3)]);
   AddComConstruct(rufabsupp, 22, 1, 1, [42, 43, 44][Rand(1,3)]);
   AddComConstruct(rufabsupp, 22, 1, 1, ru_cargo_bay);
end;

// Tame apemans
Every 2$0 do 
var i, j;
begin
    wait([7$0, 16$0][Rand(1,2)]);
    disableHealAI = 1;

    for i in FilterAllUnits([[f_side, 3], [f_class, 4]]) do ComExitBuilding(i);
    wait(0$1);

    repeat
        wait(0$1);
        for i in FilterAllUnits([[f_side, 3], [f_class, 4]]) do
        begin
            for j in FilterUnitsInArea(ApemansArea, [[f_side, 0], [f_class, 12]]) do 
            begin
                AddComTameXY(i, GetX(j), GetY(j));
            end;
        end;

    until FilterAllUnits([[f_side, 3], [f_class, 4]]) = 0 or tamedApemans >= [6, 7, 8][Difficulty];

    disableHealAI = 0;

    for i in FilterAllUnits([[f_side, 3], [f_class, 12]]) do SetClass(i, 16);
    for i in FilterAllUnits([[f_side, 3], [f_class, 4]]) do ComMoveXY(i, 113, 94);

end;

// Build new cargo

Every 0$1 trigger GetSide(rufab) = 3 and IsOK(rufab) and FilterAllUnits([[f_side, 3], [f_weapon, ru_cargo_bay]]) = 0 do
begin
    AddComConstruct(rufab, 23, 1, 1, ru_cargo_bay);
    wait(5$0);
    enable;
end;
